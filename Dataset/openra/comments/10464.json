[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/170268334",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/10464#issuecomment-170268334",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10464",
    "id": 170268334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDI2ODMzNA==",
    "user": {
      "login": "kyrylo",
      "id": 1079123,
      "node_id": "MDQ6VXNlcjEwNzkxMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1079123?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kyrylo",
      "html_url": "https://github.com/kyrylo",
      "followers_url": "https://api.github.com/users/kyrylo/followers",
      "following_url": "https://api.github.com/users/kyrylo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kyrylo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kyrylo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kyrylo/subscriptions",
      "organizations_url": "https://api.github.com/users/kyrylo/orgs",
      "repos_url": "https://api.github.com/users/kyrylo/repos",
      "events_url": "https://api.github.com/users/kyrylo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kyrylo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-09T18:37:20Z",
    "updated_at": "2016-01-09T18:37:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Now I'm not sure it's needed, because I [re]discovered `actor.Type` :(\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/170271143",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/10464#issuecomment-170271143",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10464",
    "id": 170271143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDI3MTE0Mw==",
    "user": {
      "login": "Unit158",
      "id": 706008,
      "node_id": "MDQ6VXNlcjcwNjAwOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/706008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Unit158",
      "html_url": "https://github.com/Unit158",
      "followers_url": "https://api.github.com/users/Unit158/followers",
      "following_url": "https://api.github.com/users/Unit158/following{/other_user}",
      "gists_url": "https://api.github.com/users/Unit158/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Unit158/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Unit158/subscriptions",
      "organizations_url": "https://api.github.com/users/Unit158/orgs",
      "repos_url": "https://api.github.com/users/Unit158/repos",
      "events_url": "https://api.github.com/users/Unit158/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Unit158/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-09T19:11:59Z",
    "updated_at": "2016-01-09T19:13:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Set them in the global table.\n\nEDIT: wait, why don't you want to set them as variables?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/170273017",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/10464#issuecomment-170273017",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10464",
    "id": 170273017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDI3MzAxNw==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-09T19:26:42Z",
    "updated_at": "2016-01-09T19:44:21Z",
    "author_association": "MEMBER",
    "body": "This seems like a workaround for improper programming (not storing them in variables, but want to access them later).\nOn the other hand engines such as Unity 3D have a very similar functionality.\n\nThis is basically Lua's version of `World.ActorsHavingTrait<T>`.\n\nMy thoughts for implementation:\n\nAn extension method (on the C# side) that stores the target actor and tag string in a relational data structure.\nThis gives you the ability to query/add/remove individual actor tags _and_ something like `world.ActorsWithTag('initial-nod-infantry')` which could just be a Lua utility method (assuming you can pass a table and get back filtered items).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/170274515",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/10464#issuecomment-170274515",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10464",
    "id": 170274515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDI3NDUxNQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-09T19:51:03Z",
    "updated_at": "2016-01-09T19:52:41Z",
    "author_association": "MEMBER",
    "body": "A simpler method would be to have a `ScriptTags` trait (like our existing `ScriptTriggers`), a `ScriptTagsProperties : ScriptActorProperties, Requires<ScriptTagsInfo>` that exposes methods for `AddTag`, `HasTag`, `RemoveTag`, and perhaps a `ScriptTagsGlobal` that exposes global queries for getting all actors on the map with certain tags (although this could be done with a lua-side filter over all the actors in the map, so doesn't need new code).\n"
  }
]
