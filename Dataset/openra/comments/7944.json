[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/92420044",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7944#issuecomment-92420044",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7944",
    "id": 92420044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyNDIwMDQ0",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-13T16:36:01Z",
    "updated_at": "2015-04-13T16:36:01Z",
    "author_association": "MEMBER",
    "body": "You should change this into a while loop.\n\nI imagine we'll also want to remove the matching `catch(EndOfStreamException) { }` below.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/92532669",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7944#issuecomment-92532669",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7944",
    "id": 92532669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyNTMyNjY5",
    "user": {
      "login": "LunaticEdit",
      "id": 11513891,
      "node_id": "MDQ6VXNlcjExNTEzODkx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/11513891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LunaticEdit",
      "html_url": "https://github.com/LunaticEdit",
      "followers_url": "https://api.github.com/users/LunaticEdit/followers",
      "following_url": "https://api.github.com/users/LunaticEdit/following{/other_user}",
      "gists_url": "https://api.github.com/users/LunaticEdit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LunaticEdit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LunaticEdit/subscriptions",
      "organizations_url": "https://api.github.com/users/LunaticEdit/orgs",
      "repos_url": "https://api.github.com/users/LunaticEdit/repos",
      "events_url": "https://api.github.com/users/LunaticEdit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LunaticEdit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-13T23:29:20Z",
    "updated_at": "2015-04-13T23:29:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "We need to keep the EndOfStreamException catch because the lower function calls completely disregards the end of stream and instead utilizes a \"hope for the best\" strategy. At worst, it will continue to act as it always has if I leave the catch in there.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/92536377",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7944#issuecomment-92536377",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7944",
    "id": 92536377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyNTM2Mzc3",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-13T23:40:34Z",
    "updated_at": "2015-04-13T23:40:34Z",
    "author_association": "MEMBER",
    "body": "Indeed, you're right.\n\n:+1: Confirmed this gets rid of those silly first-chance EndOfStreamException exceptions.\n"
  }
]
