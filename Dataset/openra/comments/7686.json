[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/83889123",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-83889123",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 83889123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzODg5MTIz",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-20T04:15:14Z",
    "updated_at": "2015-03-20T08:46:51Z",
    "author_association": "MEMBER",
    "body": "I tested bleed with a Mig on a huge map - shroud is revealed pretty fluently.\nWith this PR, however, shroud is revealed once roughly every second, as expected, which is far from smooth on a Mig. A value of 5 ticks or less looks acceptable though, considering performance, even if not as smooth as without any interval.\n\n~~It would also be worth it to disable the trait entirely after the first tick on static actors (structures (don't forget fake structures!) and deployed units that can't move (tick tanks, thumpers, nod artillery, GIs, mobile sensor arrays)).\nImagine a 5v5 game. 10 bases do contain quite a few buildings. Especially if the players like to turtle.\nThe performance gain won't be as good as with units, since those would be a lot more, but would still mean that you have to update the shroud for ... 150-200 (?) actors less.~~ (EDIT: I now realized that the `cachedLocation` in the trait effectively disables it for buildings, which is kind of sad - we won't be able to squeeze much more performance from there :/ )\n\nAnother idea would be to try and give each unit type a shroud update interval that corresponds to the unit's moving speed.\nRangers, trikes and Migs would need to update shroud much more frequently than Devastators and Mamooth tanks to make it look smooth, because they move a lot faster.\nTeleportation needs to be taken into account here, though!\n(EDIT 2: Devastators seem to update shroud pretty much once every ~ 0.7 seconds on bleed, which is again because `cachedLocation` and because it uses `CPos`, so the shroud gets updated depending on the unit's speed, but **not** fluently. So this idea might be crap as well :| )\nEDIT 3: A 20-tick interval might be OK for for the devastators btw, have to test.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/84158420",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-84158420",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 84158420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTU4NDIw",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-20T21:41:15Z",
    "updated_at": "2015-03-20T21:41:15Z",
    "author_association": "MEMBER",
    "body": "Something strange is going on here. This pr should hurt perf, not help it.  The previous code should only be updating thr visibility when a unit moves into a different cell (max of once every half second or so for many units, and never for stationary actors).  This new code appears to update everything unconditionally.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/84160920",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-84160920",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 84160920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTYwOTIw",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-20T21:44:47Z",
    "updated_at": "2015-03-20T21:44:47Z",
    "author_association": "MEMBER",
    "body": "On a closer read this looks to be a case of micro-optimizing a single case (migs, which are one of the fastest actors, so worst case for the existing code) at the expense of everything else.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/84199400",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-84199400",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 84199400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTk5NDAw",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-21T00:04:40Z",
    "updated_at": "2015-03-21T00:04:40Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  This new code appears to update everything unconditionally.\n\nIf that's the case, something went wrong with my implementation. The idea is that it updates if the actor has moved position AND this many ticks have passed since the last update.\nMigs, yaks and large groups of helicopters (due to repulsion) are worst cases, because they move almost constantly even when idle.\n\nA possible compromise solution could be to set the default value to 1 (i.e. no change in update rate), and only try to find the best trade-off values for the worst cases mentioned above. At the very least I'd like to have the option to customise these values for my own projects, so even if yaml changes for the shipping mods get rejected, it would be great if at least the code (once updated accordingly) is merged.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/84247159",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-84247159",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 84247159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MjQ3MTU5",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-21T04:07:54Z",
    "updated_at": "2015-03-21T04:07:54Z",
    "author_association": "MEMBER",
    "body": "No, it's not updating everything unconditionally. The `cachedLocation != self.Location` check is still there.\nBut yes, due to that check the improvement in performance will depend on the unit's movement speed.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/84296143",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-84296143",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 84296143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0Mjk2MTQz",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-21T10:06:38Z",
    "updated_at": "2015-03-21T10:06:38Z",
    "author_association": "MEMBER",
    "body": "Ah, I see.  I missed that when reading the code on the gh mobile interface.  Sorry about that.\n\nMinor nit, but could you switch the order of `cachedLocation != self.Location` and `shroudUpdateTick == info.VisibilityUpdateDelay` in the conditional to make it clearer that the primary check is still location-based?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/84736710",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-84736710",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 84736710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzM2NzEw",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T00:26:23Z",
    "updated_at": "2015-03-23T00:26:23Z",
    "author_association": "MEMBER",
    "body": "OK, I saw nit-picking from everybody involved (including myself), but as it stands, we have 1 very important, but unanswered question - do we want this?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/84742041",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-84742041",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 84742041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzQyMDQx",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T01:13:11Z",
    "updated_at": "2015-03-23T01:13:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "As said before, I want at least the functionality, so I can decide on my own whether I use it in my projects. \nAnd I think we want the fix for #7669 in any case, as it has no drawbacks.\n\nThe yaml changes are certainly a matter of taste. The performance improvements are there, but so are the less fluent shroud updates.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/85166260",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-85166260",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 85166260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTY2MjYw",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T19:48:48Z",
    "updated_at": "2015-03-23T19:48:48Z",
    "author_association": "MEMBER",
    "body": "Just an opinion: I find the obvious slugishness of the revealing a bit distasteful on the idling aircraft as they circle, but it's not unbearable.\n\nIt would be interesting to know if losing a half-second of sight when scouting with the affected units mattered to players, too.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/85167388",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-85167388",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 85167388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTY3Mzg4",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T19:53:02Z",
    "updated_at": "2015-03-23T19:53:08Z",
    "author_association": "MEMBER",
    "body": "What kind of perf improvement does this give with a reasonable (say 5 - 10) number of aircraft?  I agree with @RoosterDragon that sluggish revealing is a bit distasteful.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/85268255",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-85268255",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 85268255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MjY4MjU1",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T00:53:50Z",
    "updated_at": "2015-03-24T00:53:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "> What kind of perf improvement does this give with a reasonable (say 5 - 10) number of aircraft? I agree with @RoosterDragon that sluggish revealing is a bit distasteful.\n\nWith 10 Migs (and nothing else on the map but cyard and airfield), the difference is quite low, seems to be less than a half ms.\n\nThis was mostly aimed at larger battles (everyone vs. everyone in particular), but if most dislike it, I guess it would be wrong to let everyone else suffer just to make things a little better in such edge cases.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/85290097",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-85290097",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 85290097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MjkwMDk3",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T01:58:13Z",
    "updated_at": "2015-03-24T01:58:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Since #7723 does a far better job at improving performance for many moving actors, I've cut this PR down to a pure fix for #7669. I think this time I got the player check right, too.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/85410533",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-85410533",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 85410533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDEwNTMz",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T09:03:56Z",
    "updated_at": "2015-03-24T09:03:56Z",
    "author_association": "MEMBER",
    "body": "Haven't tested it but my gut says the following might be an issue:\n- Imagine you have A & B in a team.\n- A disables shroud & fog with the cheat. B does not.\n- B moves some units and waits for them to stop. During this time, A will be skipping their shroud updates because stuff is disabled.\n- A turns the shroud and fog back on.\n- A's shroud and fog is outdated because it was skipping updates. B's units are stationary and thus do not cause an update.\n- B's units move, A's shroud is repaired but fog might not be fully revealed.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/85464109",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-85464109",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 85464109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDY0MTA5",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T11:51:04Z",
    "updated_at": "2015-03-24T11:51:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@RoosterDragon: You have a point there, question is: How likely is that scenario, outside of A being a human player and B being AI?\nAnd in a game where cheats are turned on and off, we're likely not talking about a serious game, and someone playing around with cheats should be aware that this can have side-effects.\n\nDon't get me wrong, I'm not saying this is not an issue. Any idea how this could be worked around?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/85465642",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-85465642",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 85465642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDY1NjQy",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T11:54:21Z",
    "updated_at": "2015-03-24T11:54:21Z",
    "author_association": "MEMBER",
    "body": "The solution here is straightforward: force a full rebuild of the shroud state when it is enabled or disabled.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/85484513",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-85484513",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 85484513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDg0NTEz",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T12:54:04Z",
    "updated_at": "2015-03-24T12:54:04Z",
    "author_association": "MEMBER",
    "body": "You'd still be missing any exploration revealed by your ally in that time.\n\nPossible idea: This optimization becomes valid if the disabled states cannot be changed since if they are permanently disabled then you know you will never need to provide the actual state. If you could tell the Shroud class ahead of time that cheats were off then you can indeed skip updating the state because nothing can possibly ever query it.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/85505678",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-85505678",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 85505678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NTA1Njc4",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T13:58:02Z",
    "updated_at": "2015-03-24T13:58:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think in that case it would be easier to only check the lobby options. If both options were disabled in the lobby, we can skip updating entirely, since they affect all players anyway and cannot be turned on ingame.\n\nThen disabling it via cheats instead would have no positive performance impact, but I guess that's ok since #7723 already improves performance quite a bit.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/88653995",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-88653995",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 88653995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4NjUzOTk1",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-01T22:35:08Z",
    "updated_at": "2015-04-01T22:35:08Z",
    "author_association": "MEMBER",
    "body": ":+1:\n\nNeeds a rebase.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/88657622",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-88657622",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 88657622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4NjU3NjIy",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-01T22:59:38Z",
    "updated_at": "2015-04-01T22:59:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/89391871",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-89391871",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 89391871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MzkxODcx",
    "user": {
      "login": "obrakmann",
      "id": 4331210,
      "node_id": "MDQ6VXNlcjQzMzEyMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4331210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obrakmann",
      "html_url": "https://github.com/obrakmann",
      "followers_url": "https://api.github.com/users/obrakmann/followers",
      "following_url": "https://api.github.com/users/obrakmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/obrakmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obrakmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obrakmann/subscriptions",
      "organizations_url": "https://api.github.com/users/obrakmann/orgs",
      "repos_url": "https://api.github.com/users/obrakmann/repos",
      "events_url": "https://api.github.com/users/obrakmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obrakmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-03T18:58:54Z",
    "updated_at": "2015-04-03T18:58:54Z",
    "author_association": "CONTRIBUTOR",
    "body": ":+1: \n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/89392266",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7686#issuecomment-89392266",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7686",
    "id": 89392266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MzkyMjY2",
    "user": {
      "login": "obrakmann",
      "id": 4331210,
      "node_id": "MDQ6VXNlcjQzMzEyMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4331210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obrakmann",
      "html_url": "https://github.com/obrakmann",
      "followers_url": "https://api.github.com/users/obrakmann/followers",
      "following_url": "https://api.github.com/users/obrakmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/obrakmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obrakmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obrakmann/subscriptions",
      "organizations_url": "https://api.github.com/users/obrakmann/orgs",
      "repos_url": "https://api.github.com/users/obrakmann/repos",
      "events_url": "https://api.github.com/users/obrakmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obrakmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-03T19:01:44Z",
    "updated_at": "2015-04-03T19:01:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "[Changelog](https://github.com/OpenRA/OpenRA/wiki/Changelog/_compare/f600bc1621d1f331d6e1b11d39139b237b7de120%5E...f600bc1621d1f331d6e1b11d39139b237b7de120)\n"
  }
]
