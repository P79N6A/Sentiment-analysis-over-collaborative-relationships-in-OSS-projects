[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/137971209",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9268#issuecomment-137971209",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9268",
    "id": 137971209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzk3MTIwOQ==",
    "user": {
      "login": "Unit158",
      "id": 706008,
      "node_id": "MDQ6VXNlcjcwNjAwOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/706008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Unit158",
      "html_url": "https://github.com/Unit158",
      "followers_url": "https://api.github.com/users/Unit158/followers",
      "following_url": "https://api.github.com/users/Unit158/following{/other_user}",
      "gists_url": "https://api.github.com/users/Unit158/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Unit158/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Unit158/subscriptions",
      "organizations_url": "https://api.github.com/users/Unit158/orgs",
      "repos_url": "https://api.github.com/users/Unit158/repos",
      "events_url": "https://api.github.com/users/Unit158/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Unit158/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-05T16:06:25Z",
    "updated_at": "2015-09-07T00:50:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "A raycaster for hit detection happens to be a really bad idea. We need proper collision detection. This could also be implemented with some relatively simple trigonometry.\n\nOn 2015-09-05, at 9:21 AM, reaperrr notifications@github.com wrote:\n\n> A possible, relatively simple approach would be to compare the projectile facing right before explosion with the facing of directly hit actors (explosion happened inside their health radius / hit box / whatever).\n> \n> If the projectile facing exactly matched or diverted by no more than X degrees, it must have hit the weak rear armor, giving a damage bonus.\n> If the facing was the opposite, it must have hit the front, reducing the damage.\n> In between it must have hit the sides, so apply normal damage.\n> \n> This is just a possibility. If we had a raycaster and rectangular hit boxes, it would be possible to check more accurately what side was hit.\n> \n> ―\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168312282",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9268#issuecomment-168312282",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9268",
    "id": 168312282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODMxMjI4Mg==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-01T15:02:04Z",
    "updated_at": "2016-01-01T15:02:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "#9800 might be a big step towards making this easier.\n\nFor example, for rectangular shapes we could simply check which edge is closest to the center of impact, if I'm not mistaken.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168320671",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9268#issuecomment-168320671",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9268",
    "id": 168320671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODMyMDY3MQ==",
    "user": {
      "login": "Unit158",
      "id": 706008,
      "node_id": "MDQ6VXNlcjcwNjAwOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/706008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Unit158",
      "html_url": "https://github.com/Unit158",
      "followers_url": "https://api.github.com/users/Unit158/followers",
      "following_url": "https://api.github.com/users/Unit158/following{/other_user}",
      "gists_url": "https://api.github.com/users/Unit158/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Unit158/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Unit158/subscriptions",
      "organizations_url": "https://api.github.com/users/Unit158/orgs",
      "repos_url": "https://api.github.com/users/Unit158/repos",
      "events_url": "https://api.github.com/users/Unit158/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Unit158/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-01T17:47:24Z",
    "updated_at": "2016-01-01T17:47:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Unfortunately, I don't think it really is. The edge detection doesn't provide direction, and could probably be done fairly simply with some vector subtraction and wangle work, but I need a sanity check to be sure.\n\nOn 2016-01-01, at 10:02, reaperrr <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n#9800https://github.com/OpenRA/OpenRA/pull/9800 might be a big step towards making this easier.\n\nFor example, for rectangular shapes we could simply check which edge is closest to the center of impact, if I'm not mistaken.\n\n—\nReply to this email directly or view it on GitHubhttps://github.com/OpenRA/OpenRA/issues/9268#issuecomment-168312282.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/169159457",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9268#issuecomment-169159457",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9268",
    "id": 169159457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTE1OTQ1Nw==",
    "user": {
      "login": "Unit158",
      "id": 706008,
      "node_id": "MDQ6VXNlcjcwNjAwOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/706008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Unit158",
      "html_url": "https://github.com/Unit158",
      "followers_url": "https://api.github.com/users/Unit158/followers",
      "following_url": "https://api.github.com/users/Unit158/following{/other_user}",
      "gists_url": "https://api.github.com/users/Unit158/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Unit158/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Unit158/subscriptions",
      "organizations_url": "https://api.github.com/users/Unit158/orgs",
      "repos_url": "https://api.github.com/users/Unit158/repos",
      "events_url": "https://api.github.com/users/Unit158/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Unit158/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-05T22:50:05Z",
    "updated_at": "2016-01-05T22:50:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am working on this.\n"
  }
]
