[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/84003480",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7685#issuecomment-84003480",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7685",
    "id": 84003480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDAzNDgw",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-20T12:31:31Z",
    "updated_at": "2015-03-20T12:31:40Z",
    "author_association": "MEMBER",
    "body": "My money is on [this fellow right here](https://github.com/OpenRA/OpenRA/blob/0dc65e5cf328f51f80b8f2940ae53119a7fc1afb/OpenRA.Mods.Common/Traits/Player/PlayerStatistics.cs#L57), which looks extremely slow.\nIf I'm right, then we need to switch that with a direct query to get the cells that are visible to the player.\nIt shouldn't be too hard, too. I'm unfamiliar with the all the visibility stuff, but [this](https://github.com/OpenRA/OpenRA/blob/0dc65e5cf328f51f80b8f2940ae53119a7fc1afb/OpenRA.Game/Traits/World/Shroud.cs#L30) looks like a good place to start (and hopefully finish).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/84107325",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7685#issuecomment-84107325",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7685",
    "id": 84107325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTA3MzI1",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-20T19:24:31Z",
    "updated_at": "2015-03-20T19:24:31Z",
    "author_association": "MEMBER",
    "body": "I think you are right. These are large queries on all actors with multiple trait lookups and we are doing it 4 times per second. A simpler way would be to just make it not update that often.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/84162016",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7685#issuecomment-84162016",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7685",
    "id": 84162016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTYyMDE2",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-20T21:48:24Z",
    "updated_at": "2015-03-20T21:48:24Z",
    "author_association": "MEMBER",
    "body": "It is the Shroud trait's job to track that kind of state. The stats code needs to use that instead of rolling its own.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/89064265",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7685#issuecomment-89064265",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7685",
    "id": 89064265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MDY0MjY1",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-02T22:28:31Z",
    "updated_at": "2015-04-02T22:28:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can't reproduce these massive 23ms lag spikes anymore, maybe it was a specific map, or indirectly fixed by something else.\n\nIt still takes ~7-8ms every 10 seconds on my rather fast system, though.\n\nMight be something for @RoosterDragon to look at, my own attempts have just proven that this is still well over my head.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/89069744",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7685#issuecomment-89069744",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7685",
    "id": 89069744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MDY5NzQ0",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-02T23:01:48Z",
    "updated_at": "2015-04-02T23:01:48Z",
    "author_association": "MEMBER",
    "body": "penev is on the right track here, it will be the `UpdateMapControl` function slowing things down.\n\nThe current function depends on the number of actors, try creating lots of actors and see if the slowdown returns. It takes a while because it has to determine the union of all the actors visibility from scratch every time, which isn't free.\n\nThe shroud could help since it's obviously keeping track of this state all the time. You could write a function for it that simply enumerates all the cells in the map and does a count of where `IsVisibleCore` on them is true. Divide that by the total cells on the map and I believe you'd have the same calculation. (If you did write this function though, #7686 would be an invalid optimization again.) The speed of this method would be dependant on the map size, instead of the actor count.\n\nTry a large number of actors on a large map and see which works out faster in practise.\n\nHope that helps. :)\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/89206744",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7685#issuecomment-89206744",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7685",
    "id": 89206744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MjA2NzQ0",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-03T07:41:48Z",
    "updated_at": "2015-04-03T07:41:48Z",
    "author_association": "MEMBER",
    "body": "Pretty much anything that doesn't have a `Thread.Sleep()` will be faster than this.\nWhy would it invalidate #7686 though?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/89258030",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7685#issuecomment-89258030",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7685",
    "id": 89258030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MjU4MDMw",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-03T11:16:39Z",
    "updated_at": "2015-04-03T11:16:39Z",
    "author_association": "MEMBER",
    "body": "#7686 skips the internal bookkeeping the makes `IsVisibleCore` return the correct results when shroud & fog is disabled. It can do that because if shroud & fog is disabled then `IsVisibleCore` will never be called.\n\nHowever if we wrote a map control function that works like I described, then we'd need `IsVisibleCore` to return correct results even with shroud & fog disabled so that this theoretical map control function would work. Therefore we'd have to undo #7686 if that happened.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/89258255",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7685#issuecomment-89258255",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7685",
    "id": 89258255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MjU4MjU1",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-03T11:18:49Z",
    "updated_at": "2015-04-03T11:18:49Z",
    "author_association": "MEMBER",
    "body": "I don't think the map control statistic is important enough to justify its massive performance overhead.  Lets just remove it.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/89266597",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7685#issuecomment-89266597",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7685",
    "id": 89266597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MjY2NTk3",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-03T11:52:01Z",
    "updated_at": "2015-04-03T11:52:01Z",
    "author_association": "MEMBER",
    "body": "I also thought about that. It can make a return once optimized.\n"
  }
]
