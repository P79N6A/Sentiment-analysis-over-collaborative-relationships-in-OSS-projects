[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/93058736",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7951#issuecomment-93058736",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7951",
    "id": 93058736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzMDU4NzM2",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-14T21:01:15Z",
    "updated_at": "2015-04-14T21:27:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can confirm that this fixes the previews for me.\n\n:+1: \n\n(Scratch what I wrote here before about a crash, was my own fault, custom map).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/93155627",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7951#issuecomment-93155627",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7951",
    "id": 93155627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzMTU1NjI3",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-15T02:23:07Z",
    "updated_at": "2015-04-15T02:24:08Z",
    "author_association": "MEMBER",
    "body": "Code looks good, and it works. :+1: \n\nI'm not going to merge yet because I have a question: isn't this just hiding a problem with the images that would be better resolved by fixing the images themselves than hiding any problems? (the 2 images were obviously in a format that OpenRA doesn't like)\nAlso the image conversion for incompatible images will be ran every time the mod chooser loads. The game can instead fix the preview images itself (save the fixed image over the original) and save itself the trouble of converting them every time.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/93221748",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7951#issuecomment-93221748",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7951",
    "id": 93221748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzMjIxNzQ4",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-15T06:48:59Z",
    "updated_at": "2015-04-15T06:48:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "The problem appears to be that OpenRA wants PNGs in 32bpp (now at least, before #7919 24bpp worked fine), while some editing programs (applies at least to IrfanView and MS Paint) save PNGs in 24bpp.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/93425944",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7951#issuecomment-93425944",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7951",
    "id": 93425944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzNDI1OTQ0",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-15T14:38:08Z",
    "updated_at": "2015-04-15T14:38:08Z",
    "author_association": "MEMBER",
    "body": "Yeah we needed #7919 because a particular 24bbp custom map preview failed on mono. It seems to work most of the rest of the time though.\n\nSo we have a few options:\n1) Have `sheetBuilder.Add` perform a conversion internally if the input is not right.\n2) Have callers of `sheetBuilder.Add` only be allowed to pass stuff in the right format.\n3) Have all game images be forced to be 32bbp.\n\nOptions 3 seems dumb to me. I don't want to force people to save their image in a certain bit depth just because we're too lame to handle that.\n\nOption 1 and 2 are both fine by me.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/93771282",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7951#issuecomment-93771282",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7951",
    "id": 93771282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzNzcxMjgy",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-16T15:58:35Z",
    "updated_at": "2015-04-16T16:02:28Z",
    "author_association": "MEMBER",
    "body": "Converting all incorrect images to the correct format at runtime each time the game loads seems pretty crap to me. (which both 1) and 2) do in case there are such images)\nI have to say I only like 3)\nBeing consistent is a good thing, and it shouldn't be a problem for modders to save their mods' images in the proper format. Also, in case they can't for some reason, the game can convert them itself, so how about having it convert and overwrite images that are in a different format? That way the next time it runs all will be in order.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/93777412",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7951#issuecomment-93777412",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7951",
    "id": 93777412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzNzc3NDEy",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-16T16:25:30Z",
    "updated_at": "2015-04-16T16:25:30Z",
    "author_association": "MEMBER",
    "body": "My preference here is 1 (for mod compatibility) plus converting any assets that aren't 32bpp in our default mods (to avoid unnecessary work).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/94037391",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7951#issuecomment-94037391",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7951",
    "id": 94037391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MDM3Mzkx",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T17:46:35Z",
    "updated_at": "2015-04-17T17:46:35Z",
    "author_association": "MEMBER",
    "body": "OK #7961 has ensured our provided images are in 32bbp. I have rewritten this PR to follow option 1, and convert to 32bbp just-in-time within the `FastCopyIntoSprite` method which will handle things for mod or map previews not in our control.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/94056059",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7951#issuecomment-94056059",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7951",
    "id": 94056059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MDU2MDU5",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T19:16:12Z",
    "updated_at": "2015-04-17T19:16:12Z",
    "author_association": "MEMBER",
    "body": "Looks OK to me :+1: \n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/94061910",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7951#issuecomment-94061910",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7951",
    "id": 94061910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MDYxOTEw",
    "user": {
      "login": "obrakmann",
      "id": 4331210,
      "node_id": "MDQ6VXNlcjQzMzEyMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4331210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obrakmann",
      "html_url": "https://github.com/obrakmann",
      "followers_url": "https://api.github.com/users/obrakmann/followers",
      "following_url": "https://api.github.com/users/obrakmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/obrakmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obrakmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obrakmann/subscriptions",
      "organizations_url": "https://api.github.com/users/obrakmann/orgs",
      "repos_url": "https://api.github.com/users/obrakmann/repos",
      "events_url": "https://api.github.com/users/obrakmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obrakmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T19:52:33Z",
    "updated_at": "2015-04-17T19:52:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I reverted 8b07c08 for testing and can confirm that this works as intended. Code looks good, too. :+1: \n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/94063039",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7951#issuecomment-94063039",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7951",
    "id": 94063039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MDYzMDM5",
    "user": {
      "login": "obrakmann",
      "id": 4331210,
      "node_id": "MDQ6VXNlcjQzMzEyMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4331210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obrakmann",
      "html_url": "https://github.com/obrakmann",
      "followers_url": "https://api.github.com/users/obrakmann/followers",
      "following_url": "https://api.github.com/users/obrakmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/obrakmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obrakmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obrakmann/subscriptions",
      "organizations_url": "https://api.github.com/users/obrakmann/orgs",
      "repos_url": "https://api.github.com/users/obrakmann/repos",
      "events_url": "https://api.github.com/users/obrakmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obrakmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T19:59:57Z",
    "updated_at": "2015-04-17T19:59:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "[Changelog](https://github.com/OpenRA/OpenRA/wiki/Changelog/_compare/9eefbddf04503290d1e9d5c71b7c5a42dbe5b79e%5E...9eefbddf04503290d1e9d5c71b7c5a42dbe5b79e)\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/94147236",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7951#issuecomment-94147236",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7951",
    "id": 94147236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MTQ3MjM2",
    "user": {
      "login": "obrakmann",
      "id": 4331210,
      "node_id": "MDQ6VXNlcjQzMzEyMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4331210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obrakmann",
      "html_url": "https://github.com/obrakmann",
      "followers_url": "https://api.github.com/users/obrakmann/followers",
      "following_url": "https://api.github.com/users/obrakmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/obrakmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obrakmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obrakmann/subscriptions",
      "organizations_url": "https://api.github.com/users/obrakmann/orgs",
      "repos_url": "https://api.github.com/users/obrakmann/repos",
      "events_url": "https://api.github.com/users/obrakmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obrakmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-18T09:26:26Z",
    "updated_at": "2015-04-18T09:26:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "err... this worked for the mod previews, but it does not seem to work for the map previews in ra, which are all RGB images. (the cnc ones are all RGBA already). It seems there's a check left in `MapCache.cs` which throws away RGB images. I'll whip up a patch.\n"
  }
]
