[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/290685672",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13040#issuecomment-290685672",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13040",
    "id": 290685672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDY4NTY3Mg==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T11:13:16Z",
    "updated_at": "2017-03-31T11:13:16Z",
    "author_association": "MEMBER",
    "body": "This should be a relatively simple new `Attack*` implementation, see `AttackCharges` for a somewhat related reference."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/291039309",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13040#issuecomment-291039309",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13040",
    "id": 291039309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTAzOTMwOQ==",
    "user": {
      "login": "StormWingDelta",
      "id": 2048775,
      "node_id": "MDQ6VXNlcjIwNDg3NzU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2048775?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/StormWingDelta",
      "html_url": "https://github.com/StormWingDelta",
      "followers_url": "https://api.github.com/users/StormWingDelta/followers",
      "following_url": "https://api.github.com/users/StormWingDelta/following{/other_user}",
      "gists_url": "https://api.github.com/users/StormWingDelta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/StormWingDelta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StormWingDelta/subscriptions",
      "organizations_url": "https://api.github.com/users/StormWingDelta/orgs",
      "repos_url": "https://api.github.com/users/StormWingDelta/repos",
      "events_url": "https://api.github.com/users/StormWingDelta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/StormWingDelta/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T03:04:45Z",
    "updated_at": "2017-04-03T03:04:45Z",
    "author_association": "NONE",
    "body": "what about things that don't attack but still need to be able to deploy, like the mcv and the sensor unit? Maybe a sub trait for those could help or just accounting for them somehow."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/330120747",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13040#issuecomment-330120747",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13040",
    "id": 330120747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDEyMDc0Nw==",
    "user": {
      "login": "forcecore",
      "id": 632278,
      "node_id": "MDQ6VXNlcjYzMjI3OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/632278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/forcecore",
      "html_url": "https://github.com/forcecore",
      "followers_url": "https://api.github.com/users/forcecore/followers",
      "following_url": "https://api.github.com/users/forcecore/following{/other_user}",
      "gists_url": "https://api.github.com/users/forcecore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/forcecore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/forcecore/subscriptions",
      "organizations_url": "https://api.github.com/users/forcecore/orgs",
      "repos_url": "https://api.github.com/users/forcecore/repos",
      "events_url": "https://api.github.com/users/forcecore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/forcecore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T03:13:08Z",
    "updated_at": "2017-09-18T03:16:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I sort of have this in my mod, but I guess people can come up with a better micro-AI.\r\nThis one seems to be working well for RA2 GI and Desolator.\r\n\r\nhttps://github.com/forcecore/OpenRA/blob/yupgi-20170902/OpenRA.Mods.yupgi_alert/AS/AIDeployHelper.cs\r\n\r\nIIRC, TS didn't have undeploy AI for artilleries so I guess timed undeploy is an improvement (?)."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/469077065",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13040#issuecomment-469077065",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13040",
    "id": 469077065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTA3NzA2NQ==",
    "user": {
      "login": "mazarf",
      "id": 7960915,
      "node_id": "MDQ6VXNlcjc5NjA5MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7960915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mazarf",
      "html_url": "https://github.com/mazarf",
      "followers_url": "https://api.github.com/users/mazarf/followers",
      "following_url": "https://api.github.com/users/mazarf/following{/other_user}",
      "gists_url": "https://api.github.com/users/mazarf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mazarf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mazarf/subscriptions",
      "organizations_url": "https://api.github.com/users/mazarf/orgs",
      "repos_url": "https://api.github.com/users/mazarf/repos",
      "events_url": "https://api.github.com/users/mazarf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mazarf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-03T23:32:12Z",
    "updated_at": "2019-03-03T23:32:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I tried implementing this in an AttackDeploys trait.  It seems to work but I have a few concerns.\r\n\r\n1.  I'm not sure if issuing unit orders inside the traits/activities was the best way to do this. I did this to avoid coupling the traits too much.\r\n2.  I don't know how to guarantee that AttackDeploys.FinishedDeploy will always occur after GrantConditionOnDeploy.FinishedDeploy\r\n3.  If the unit tries to deploy on a spot where it can't deploy, it will give up.  In TS, the unit will find a nearby spot where it can deploy.  Not sure how best to implement this.\r\n\r\nhttps://github.com/OpenRA/OpenRA/compare/bleed...mazarf:attackdeploys"
  }
]
