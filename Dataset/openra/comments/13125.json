[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/294150894",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13125#issuecomment-294150894",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13125",
    "id": 294150894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDE1MDg5NA==",
    "user": {
      "login": "jrb0001",
      "id": 2380263,
      "node_id": "MDQ6VXNlcjIzODAyNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2380263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrb0001",
      "html_url": "https://github.com/jrb0001",
      "followers_url": "https://api.github.com/users/jrb0001/followers",
      "following_url": "https://api.github.com/users/jrb0001/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrb0001/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrb0001/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrb0001/subscriptions",
      "organizations_url": "https://api.github.com/users/jrb0001/orgs",
      "repos_url": "https://api.github.com/users/jrb0001/repos",
      "events_url": "https://api.github.com/users/jrb0001/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrb0001/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T13:09:38Z",
    "updated_at": "2017-04-14T13:09:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "This can be combined with the support for multiple master servers as it is a similar problem.\r\n\r\nHere is my idea based on separate master servers for IPv4 and IPv6:\r\n- Servers try to ping all master servers and ignore any connection errors unless all master servers failed.\r\n- Clients get the list from all master servers and ignore any connection errors unless all master servers failed.\r\n- Optional: Clients merge the server lists based on some sort of id.\r\n\r\nIt should be impossible to spoof server id so it has to be a shared secret between the server and all master servers or some sort of public key cryptography. I prefer public key cryptography because it doesn't require shared storage which is less scalable and can fail.\r\n\r\nThe id could be implemented by generating a new RSA keypair on each server start and then use that to sign all ping requests. The public key is used as the id for merging the server lists on the client. If the original content of ping requests is also sent to the client, it could even detect compromised master servers by verifying the signature of all server list entries."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/294154502",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13125#issuecomment-294154502",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13125",
    "id": 294154502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDE1NDUwMg==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T13:35:47Z",
    "updated_at": "2017-04-14T13:42:14Z",
    "author_association": "MEMBER",
    "body": "My main concern is that confusing/mixing IPv6 support with master server redundancy will be a great way to make sure that we don't support either feature for the forseeable future.  IPv4 vs IPv6 requires matching up and deduplicating game records, while redundancy requires having completely independent servers.  Trying to match and deduplicate records across completely independent servers will require a lot of unwanted and unneeded complexity that I expect would sink any attempted implementations.\r\n\r\nLife is a lot simpler if we have IPv4 vs IPv6 on the same server, and then as a completely separate feature (to be discussed in #2568) let the game talk to parallel or fallback master servers."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/294176093",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13125#issuecomment-294176093",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13125",
    "id": 294176093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDE3NjA5Mw==",
    "user": {
      "login": "IceReaper",
      "id": 1322277,
      "node_id": "MDQ6VXNlcjEzMjIyNzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1322277?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/IceReaper",
      "html_url": "https://github.com/IceReaper",
      "followers_url": "https://api.github.com/users/IceReaper/followers",
      "following_url": "https://api.github.com/users/IceReaper/following{/other_user}",
      "gists_url": "https://api.github.com/users/IceReaper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/IceReaper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IceReaper/subscriptions",
      "organizations_url": "https://api.github.com/users/IceReaper/orgs",
      "repos_url": "https://api.github.com/users/IceReaper/repos",
      "events_url": "https://api.github.com/users/IceReaper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/IceReaper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T15:38:54Z",
    "updated_at": "2017-04-14T15:38:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seprate ipv4 and ip6 will either the server to list twice if someone supports both, or split the users into two groups. Having the option to provide an ipv4 and ipv6 for one server will solve this problem. My Idea:\r\n\r\n1. The Gameserver should call the list handler for master.openra.net using ipv4.\r\n2. Either he gets an OK or ERROR (in case of he cannot host on ipv4)\r\n3. This handler will also return a special generated session-key. Noone else can see this key\r\n3. Then the server tries to call the master server with ipv6.\r\n\r\nNow comes the special part: only if ipv4 was sucessfull, the ipv6 route gets added the session key.\r\n\r\nMasterServer: If both requests were sucessfull, the ipv6 route will not list a new server, but instead add the ipv6 ip to the server in list.\r\n\r\nThis would allow ipv4 only users to play with ipv6 only users if the server is able to handle both.\r\n\r\nClient: When listing servers, you actualy get the same list + the ipv4 and ipv6 adress, which is null or empty-string if not present. By checking wether ipv4 and ipv6 were available to the client at all before getting the server list, we can automatically filter servers which the client cannot connect to.\r\n\r\nAlso the result of this checks can be used to toggle the behavior which handlers to call upon hosting a game.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/294177111",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13125#issuecomment-294177111",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13125",
    "id": 294177111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDE3NzExMQ==",
    "user": {
      "login": "jrb0001",
      "id": 2380263,
      "node_id": "MDQ6VXNlcjIzODAyNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2380263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrb0001",
      "html_url": "https://github.com/jrb0001",
      "followers_url": "https://api.github.com/users/jrb0001/followers",
      "following_url": "https://api.github.com/users/jrb0001/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrb0001/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrb0001/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrb0001/subscriptions",
      "organizations_url": "https://api.github.com/users/jrb0001/orgs",
      "repos_url": "https://api.github.com/users/jrb0001/repos",
      "events_url": "https://api.github.com/users/jrb0001/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrb0001/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T15:44:28Z",
    "updated_at": "2017-04-14T15:44:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@IceReaper I prefer separate server lists for IPv4 and IPv6 because:\r\n- There is no need to show IPv4-only servers to an IPv6-only client and the other way around.\r\n- In case a new layer 3 protocol gets introduced, separate server lists are already compatible while your solution requires changes on the master server and probably *all* client versions too.\r\n- Separate server lists means that you can also have multiple servers for the same address family --> scalability and availability."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/294280652",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13125#issuecomment-294280652",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13125",
    "id": 294280652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI4MDY1Mg==",
    "user": {
      "login": "xp65",
      "id": 6690499,
      "node_id": "MDQ6VXNlcjY2OTA0OTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6690499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xp65",
      "html_url": "https://github.com/xp65",
      "followers_url": "https://api.github.com/users/xp65/followers",
      "following_url": "https://api.github.com/users/xp65/following{/other_user}",
      "gists_url": "https://api.github.com/users/xp65/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xp65/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xp65/subscriptions",
      "organizations_url": "https://api.github.com/users/xp65/orgs",
      "repos_url": "https://api.github.com/users/xp65/repos",
      "events_url": "https://api.github.com/users/xp65/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xp65/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-15T08:46:18Z",
    "updated_at": "2017-04-15T08:46:18Z",
    "author_association": "NONE",
    "body": "I implented IPv6 in other solutions. I would suggest:\r\n\r\n- Accept that IPv4 will be here still for at least 5 to 10 years:  ( https://www.google.com/intl/nl/ipv6/statistics.html )\r\n- Almost all current implementations are dualstack or convert to an IPv4 (mainly mobile networks) before reaching the internet: Maybe on the exception of a few geeks, it will still be 5 to 10 years ahead before people will consider turning off IPv4. \r\n- Avoid splitting the community as much as possible.\r\n\r\nI'm in favor of IceReaper's suggestion, but I would suggest to turn things around to make it future proof and IPv6 first, IPv4 second. But important, without damaging the full support of IPv4:\r\n\r\n- Detect if the server has IPv6 or only IPv4.\r\n\r\nIf it has IPv6, use IPv6 to connect to master.openra.net:\r\n- Register itself as a server with IPv6 AND IPv4 (if available).\r\n- To test IPv4, a seperate call could be made.\r\n- If a server registers with only Ipv6 and no ipv4, give a warning that majority of players can't join yet.\r\n\r\nIf it does not have IPv4, use IPv4 to connect to master.openra.net:\r\n- Register itself as a server with only IPv4.\r\n\r\nA status added to the serverlist showing if it is dual, or only 4 or 6.\r\n- If the browsing client cannot handle IPv6, automatically hide all IPv6 servers in the list who do not have IPv4 (avoid frustration among users). This will be a minority of servers, as most can handle both.\r\n\r\nIn the master.openra.net database, there should be room for both types of IP Addresses.\r\n- In the game itself, if the client has an IPv6, it favors connecting using IPv6, only falls back to IPv4 if IPv6 is not available on the server.\r\n\r\nOnly the network code layer is different, the same code receives the commands and triggers the commands, the same internal game server is used for IPv6 and IPv4."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/294877535",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13125#issuecomment-294877535",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13125",
    "id": 294877535,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDg3NzUzNQ==",
    "user": {
      "login": "IceReaper",
      "id": 1322277,
      "node_id": "MDQ6VXNlcjEzMjIyNzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1322277?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/IceReaper",
      "html_url": "https://github.com/IceReaper",
      "followers_url": "https://api.github.com/users/IceReaper/followers",
      "following_url": "https://api.github.com/users/IceReaper/following{/other_user}",
      "gists_url": "https://api.github.com/users/IceReaper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/IceReaper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IceReaper/subscriptions",
      "organizations_url": "https://api.github.com/users/IceReaper/orgs",
      "repos_url": "https://api.github.com/users/IceReaper/repos",
      "events_url": "https://api.github.com/users/IceReaper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/IceReaper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T15:15:13Z",
    "updated_at": "2017-04-19T06:42:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Working implementation (tested locally):\r\n\r\n- OpenRA https://github.com/IceReaper/OpenRA/tree/ipv6\r\n- MasterServer https://github.com/IceReaper/OpenRAMasterServer/tree/ipv6\r\n\r\nMasterServer still lacks \"Client\"-Table. Will add this later.\r\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/295164955",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13125#issuecomment-295164955",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13125",
    "id": 295164955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTE2NDk1NQ==",
    "user": {
      "login": "jrb0001",
      "id": 2380263,
      "node_id": "MDQ6VXNlcjIzODAyNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2380263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrb0001",
      "html_url": "https://github.com/jrb0001",
      "followers_url": "https://api.github.com/users/jrb0001/followers",
      "following_url": "https://api.github.com/users/jrb0001/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrb0001/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrb0001/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrb0001/subscriptions",
      "organizations_url": "https://api.github.com/users/jrb0001/orgs",
      "repos_url": "https://api.github.com/users/jrb0001/repos",
      "events_url": "https://api.github.com/users/jrb0001/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrb0001/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T08:36:58Z",
    "updated_at": "2017-04-19T08:36:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "It looks fine to me except these things:\n- Announcing the IPv6 address will probably take a very long time if IPv4 connectivity is broken (blackholed or something similar).\n- The client requires IPv4 connectivity to get the server list AFAIK.\n- The dedicated server listens on IPv4 only AFAIK.\n- Hardcoding address families is not nice because that doesn't work if multiple layer 3 protocols are involved or new protocols are introduced.\n\nIt has to be tested on all possible combinations of no, broken (blackholed and / or ports closed) and full connectivity of both address families. I can provide a testing environment if someone needs it.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/295259446",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13125#issuecomment-295259446",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13125",
    "id": 295259446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTI1OTQ0Ng==",
    "user": {
      "login": "IceReaper",
      "id": 1322277,
      "node_id": "MDQ6VXNlcjEzMjIyNzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1322277?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/IceReaper",
      "html_url": "https://github.com/IceReaper",
      "followers_url": "https://api.github.com/users/IceReaper/followers",
      "following_url": "https://api.github.com/users/IceReaper/following{/other_user}",
      "gists_url": "https://api.github.com/users/IceReaper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/IceReaper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IceReaper/subscriptions",
      "organizations_url": "https://api.github.com/users/IceReaper/orgs",
      "repos_url": "https://api.github.com/users/IceReaper/repos",
      "events_url": "https://api.github.com/users/IceReaper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/IceReaper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T12:53:56Z",
    "updated_at": "2017-04-19T12:53:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "- Announcing has to be done one after the other for the session to work out, except if there are some special networking problems. but even in that case, it will only take a little more time which is not that problematic in my eyes?\r\n- using my approach, default master... will listen on v4 and v6.\r\n- dedicated: doesnt it use the same game code to create the listen socket?\r\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/295738622",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13125#issuecomment-295738622",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13125",
    "id": 295738622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTczODYyMg==",
    "user": {
      "login": "jrb0001",
      "id": 2380263,
      "node_id": "MDQ6VXNlcjIzODAyNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2380263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrb0001",
      "html_url": "https://github.com/jrb0001",
      "followers_url": "https://api.github.com/users/jrb0001/followers",
      "following_url": "https://api.github.com/users/jrb0001/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrb0001/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrb0001/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrb0001/subscriptions",
      "organizations_url": "https://api.github.com/users/jrb0001/orgs",
      "repos_url": "https://api.github.com/users/jrb0001/repos",
      "events_url": "https://api.github.com/users/jrb0001/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrb0001/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-20T13:28:58Z",
    "updated_at": "2017-04-20T13:28:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "We are talking about a minute or more (depends on the os and os configuration). That's not \"a little more time\" for me.\n\nSo you mean that the dns name used by the client will have an A and an AAAA record while the server uses separate names for them? Which command line arguments can be used to override each of them?\n\nThe dedicated server uses it's own code to create the socked before passing it to the server logic.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/325958427",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13125#issuecomment-325958427",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13125",
    "id": 325958427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTk1ODQyNw==",
    "user": {
      "login": "Micr0Bit",
      "id": 9139965,
      "node_id": "MDQ6VXNlcjkxMzk5NjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9139965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Micr0Bit",
      "html_url": "https://github.com/Micr0Bit",
      "followers_url": "https://api.github.com/users/Micr0Bit/followers",
      "following_url": "https://api.github.com/users/Micr0Bit/following{/other_user}",
      "gists_url": "https://api.github.com/users/Micr0Bit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Micr0Bit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Micr0Bit/subscriptions",
      "organizations_url": "https://api.github.com/users/Micr0Bit/orgs",
      "repos_url": "https://api.github.com/users/Micr0Bit/repos",
      "events_url": "https://api.github.com/users/Micr0Bit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Micr0Bit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T11:07:11Z",
    "updated_at": "2017-08-30T11:07:11Z",
    "author_association": "MEMBER",
    "body": "My ISP out of the sudden just decided to update my modem (its a modem-router combination) remove my IPv4 connection and replace it with IPv6 \r\n\r\nneedless to say that i cant port-forward any OpenRA-Server now , and i probably have to call and tell them to activate IPv4 again"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/325964874",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13125#issuecomment-325964874",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13125",
    "id": 325964874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTk2NDg3NA==",
    "user": {
      "login": "Micr0Bit",
      "id": 9139965,
      "node_id": "MDQ6VXNlcjkxMzk5NjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9139965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Micr0Bit",
      "html_url": "https://github.com/Micr0Bit",
      "followers_url": "https://api.github.com/users/Micr0Bit/followers",
      "following_url": "https://api.github.com/users/Micr0Bit/following{/other_user}",
      "gists_url": "https://api.github.com/users/Micr0Bit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Micr0Bit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Micr0Bit/subscriptions",
      "organizations_url": "https://api.github.com/users/Micr0Bit/orgs",
      "repos_url": "https://api.github.com/users/Micr0Bit/repos",
      "events_url": "https://api.github.com/users/Micr0Bit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Micr0Bit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T11:39:58Z",
    "updated_at": "2017-08-30T14:29:54Z",
    "author_association": "MEMBER",
    "body": "I've managed to direct-connect to my server with @IceReaper 's https://github.com/IceReaper/OpenRA/tree/ipv6 ... so thats a success"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/326077583",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13125#issuecomment-326077583",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13125",
    "id": 326077583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjA3NzU4Mw==",
    "user": {
      "login": "jrb0001",
      "id": 2380263,
      "node_id": "MDQ6VXNlcjIzODAyNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2380263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrb0001",
      "html_url": "https://github.com/jrb0001",
      "followers_url": "https://api.github.com/users/jrb0001/followers",
      "following_url": "https://api.github.com/users/jrb0001/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrb0001/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrb0001/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrb0001/subscriptions",
      "organizations_url": "https://api.github.com/users/jrb0001/orgs",
      "repos_url": "https://api.github.com/users/jrb0001/repos",
      "events_url": "https://api.github.com/users/jrb0001/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrb0001/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T18:24:47Z",
    "updated_at": "2017-08-30T18:24:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Let me explain the procedure of my current idea.\r\n\r\nLaunch of the game server:\r\n- The game server generates a random RSA keypair for all following operations.\r\n- The game server asks all configured master servers for his current public addresses. Remove failed master servers from that list.\r\n\r\nPing to a master server:\r\n- The game server puts the current state into some yaml or json blob. This has to include the current timestamp and the public address which was returned by the master server when it was asked at launch (see below for the reason).\r\n- The game server signs the whole blob using his private key.\r\n- The game server sends the whole blob and its public key to the master server.\r\n- The master server validates the signature and the contained public address. If it passes, the blob and the public key are written into the unshared database.\r\n\r\nRefresh of the client for a master server:\r\n- Get the current list from the master server.\r\n- Verify the signatures and remove all invalid entries.\r\n\r\nAfter all responses are available or have timed out:\r\n- Merge the lists by public key. The entry with a higher timestamp overwrites the other except that the address lists are concatenated and duplicates removed.\r\n\r\nClient wants to connect to a server list entry:\r\n- Clone the list of addresses into a new list.\r\n- (Optionally) shuffle the list.\r\n- Connect to the first address.\r\n  - If successful --> break the loop and use the connection.\r\n  - If not successful --> remove the first address and repeat.\r\n  - If the list is empty --> show error message to the user.\r\n\r\nThis is the most reliable and future-proof method I could find so far. Because clients and servers always connect to all available master servers and have a timeout set, a broken connection does not prevent the announcement process. Also it doesn't show game servers to players if they can't connect anyway. Even though it has the side effect of providing the necessary changes for https://github.com/OpenRA/OpenRA/issues/2568, it isn't the only advantage over other approaches."
  }
]
