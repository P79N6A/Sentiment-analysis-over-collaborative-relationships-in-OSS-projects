[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/457877555",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/16028#issuecomment-457877555",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/16028",
    "id": 457877555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzg3NzU1NQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-27T00:13:23Z",
    "updated_at": "2019-01-27T00:13:23Z",
    "author_association": "MEMBER",
    "body": "The low-level targeting fixes have now been merged, so can you please rebase this to help with testing?\r\n\r\nI'd still like it if at least one of our lua experts can look at this, as I am a long way removed from the scripts."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/457879460",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/16028#issuecomment-457879460",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/16028",
    "id": 457879460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzg3OTQ2MA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-27T00:56:35Z",
    "updated_at": "2019-01-27T00:56:35Z",
    "author_association": "MEMBER",
    "body": "A concern that i have with the air attacks, plus all other scripted attacks, is that fixing the freezes probably isn't sufficient.  The visibility changes have made it so that scripting an order to target a unit that is under the shroud on the other side of the map is going to fail. The changes here should fix the infinite loop, but I expect this will just fall back to the units idling instead of attacking the player.\r\n\r\nA better fix might be to enable the ModularAI for all scripted mission players, even if they start with no modules.  This will then disable the shroud/fog constraints (see #15979), which better matches how the scripts worked in the original games."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/457914729",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/16028#issuecomment-457914729",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/16028",
    "id": 457914729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzkxNDcyOQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-27T12:44:43Z",
    "updated_at": "2019-01-27T12:44:43Z",
    "author_association": "MEMBER",
    "body": "> A better fix might be to enable the ModularAI for all scripted mission players, even if they start with no modules. This will then disable the shroud/fog constraints (see #15979), which better matches how the scripts worked in the original games.\r\n\r\n\r\nThis seems to have done the trick, and I have filed #16119 implementing this approach.\r\nI don't think #16119 entirely supersedes this pr - we will still want at least the sln changes, and the delays may improve the ingame behaviour in other ways(?)."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/459242266",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/16028#issuecomment-459242266",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/16028",
    "id": 459242266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTI0MjI2Ng==",
    "user": {
      "login": "portablestew",
      "id": 20881580,
      "node_id": "MDQ6VXNlcjIwODgxNTgw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/20881580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/portablestew",
      "html_url": "https://github.com/portablestew",
      "followers_url": "https://api.github.com/users/portablestew/followers",
      "following_url": "https://api.github.com/users/portablestew/following{/other_user}",
      "gists_url": "https://api.github.com/users/portablestew/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/portablestew/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/portablestew/subscriptions",
      "organizations_url": "https://api.github.com/users/portablestew/orgs",
      "repos_url": "https://api.github.com/users/portablestew/repos",
      "events_url": "https://api.github.com/users/portablestew/events{/privacy}",
      "received_events_url": "https://api.github.com/users/portablestew/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T07:20:31Z",
    "updated_at": "2019-01-31T07:20:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "The delays did improve gameplay a little by allowing the yaks more time to reload. But their main purpose was always to avoid the application hanging (by avoiding CallFunc). TBH I was not certain why CallFunc only sometimes caused an application hang. I will make some time to retest and dive deeper, after your changes are in. "
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/460378213",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/16028#issuecomment-460378213",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/16028",
    "id": 460378213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDM3ODIxMw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T19:25:40Z",
    "updated_at": "2019-02-04T19:25:40Z",
    "author_association": "MEMBER",
    "body": "Ok. In any case, it sounds like this isn't a requirement for the playtest, so bumping off the milestone."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/462243738",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/16028#issuecomment-462243738",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/16028",
    "id": 462243738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjI0MzczOA==",
    "user": {
      "login": "portablestew",
      "id": 20881580,
      "node_id": "MDQ6VXNlcjIwODgxNTgw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/20881580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/portablestew",
      "html_url": "https://github.com/portablestew",
      "followers_url": "https://api.github.com/users/portablestew/followers",
      "following_url": "https://api.github.com/users/portablestew/following{/other_user}",
      "gists_url": "https://api.github.com/users/portablestew/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/portablestew/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/portablestew/subscriptions",
      "organizations_url": "https://api.github.com/users/portablestew/orgs",
      "repos_url": "https://api.github.com/users/portablestew/repos",
      "events_url": "https://api.github.com/users/portablestew/events{/privacy}",
      "received_events_url": "https://api.github.com/users/portablestew/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-11T08:02:27Z",
    "updated_at": "2019-02-11T08:02:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay, I've revised this PR with what I believe is a better lua fix. I've exposed the aircraft's AbortOnResupply setting to lua, and set it to false for the mission yaks. This allows the yak to continue its original Attack activity automatically after reloading, until the target is dead. Only then does the next CallFunc occur, to select a new target. \r\n\r\nAircraft are peculiar in that they almost never finish their current activity or go idle. They're either in FlyCircle or the WaitFor after resupply. An alternate solution here could be to tick idle (or provide some other hook) during those events, so lua can instruct the yak to continue attacking."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/462263521",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/16028#issuecomment-462263521",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/16028",
    "id": 462263521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjI2MzUyMQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-11T09:30:42Z",
    "updated_at": "2019-02-11T09:30:42Z",
    "author_association": "MEMBER",
    "body": "> An alternate solution here could be to tick idle (or provide some other hook) during those events, so lua can instruct the yak to continue attacking.\r\n\r\nThis is definitely the best solution, so I filed #16197 to track the issue and give some thoughts on how it could be approached."
  }
]
