[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/298331883",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13220#issuecomment-298331883",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13220",
    "id": 298331883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODMzMTg4Mw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-01T13:16:38Z",
    "updated_at": "2017-05-01T13:16:38Z",
    "author_association": "MEMBER",
    "body": "> - make all depleted bursts replenish after a cooldown (Weapon.ReloadDelay after last burst was fired, normally) even if there were bursts remaining\r\n\r\nThis should be pretty easy.  Replace the current `FireDelay` / `Burst` dance with a `ticksSinceLastShot` variable, and:\r\n* From `ITick.Tick` increment `ticksSinceLastShot` and if it equals the reload delay unconditionally reset the burst count and reset `ticksSinceLastShot` to 0.  You don't need to care if the weapon hasn't fired in the meantime, because you're just resetting values to their current values in that case.\r\n* From `CheckFire` you only need to check if there are any bursts remaining.  If there are, fire the weapon, decrement the bursts, and reset `ticksSinceLastShot` to 0."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/299024657",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/13220#issuecomment-299024657",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/13220",
    "id": 299024657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTAyNDY1Nw==",
    "user": {
      "login": "KOYK",
      "id": 5400487,
      "node_id": "MDQ6VXNlcjU0MDA0ODc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5400487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KOYK",
      "html_url": "https://github.com/KOYK",
      "followers_url": "https://api.github.com/users/KOYK/followers",
      "following_url": "https://api.github.com/users/KOYK/following{/other_user}",
      "gists_url": "https://api.github.com/users/KOYK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KOYK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KOYK/subscriptions",
      "organizations_url": "https://api.github.com/users/KOYK/orgs",
      "repos_url": "https://api.github.com/users/KOYK/repos",
      "events_url": "https://api.github.com/users/KOYK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KOYK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-03T20:24:23Z",
    "updated_at": "2017-05-03T20:35:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't know if this is relative but here we go(if its not relative i will remove it and make a new issue, just tell me). \r\n\r\nIf a modded unit (heli) use 2 weapons (including separate ammo per weapon) that use different target types, \r\nthe unit will immediately return to reload after the ammo depletion of the firing weapon, instead of waiting to fire the other weapon against the other target types on its range.\r\n\r\nAn example will be a weapon vs infantry only and a weapon vs tanks only. the unit will **not** engage the other target type if it runs out of ammo in its firing weapon.\r\n\r\nAlso here is a code to provide you with more information about the above example.\r\n\r\n```\r\nHELI: \r\n\tAircraft:\r\n\t\tRearmBuildings: hpad\r\n\tArmament@PRIMARY:\r\n\t\tWeapon: HeliAGGun\r\n\t\tLocalOffset: 128,-213,-85, 128,213,-85\r\n\t\tMuzzleSequence: muzzle\r\n\t\tAmmoPoolName: HeliAGGunA\r\n\tArmament@SECONDARY:\r\n\t\tName: secondary\r\n\t\tWeapon: HeliMissiles\r\n\t\tLocalOffset: 128,-213,-85, 128,213,-85\r\n\t\tMuzzleSequence: muzzle\r\n\t\tAmmoPoolName: HeliMissilesA\r\n\tAmmoPool@HeliAGGunA:\r\n\t\tName: HeliAGGunA\r\n\t\tAmmo: 20\r\n\t\tSelfReloads: False\r\n\t\tSelfReloadDelay: 20\r\n\t\tReloadCount: 1\r\n\t\tPipCount: 0\r\n\tAmmoPool@HeliMissilesA:\r\n\t\tName: HeliMissilesA\r\n\t\tAmmo: 8\r\n\t\tPipCount: 5\r\n\t\tSelfReloads: False\r\n\t\tReloadCount: 8\r\n\r\nHeliAGGun:\r\n\tValidTargets: Infantry\r\n\tInvalidTargets: Vehicle, Water, Structure, Wall, Husk\r\n\tProjectile: Bullet\r\n\t\tSpeed: 1c682\r\n\t\tBlockable: false\r\n\tWarhead@1Dam: SpreadDamage\r\n\t\tValidTargets: Infantry\r\n\r\nHeliMissiles:\r\n\tValidTargets: Ground, Vehicle, Structure, Wall\r\n\tInvalidTargets: Infantry\r\n\tWarhead@1Dam: SpreadDamage\r\n\t\tValidTargets: Ground, Vehicle, Structure\r\n\r\n```"
  }
]
