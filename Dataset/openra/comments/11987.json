[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/244898384",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-244898384",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 244898384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDg5ODM4NA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-06T09:29:34Z",
    "updated_at": "2016-09-06T09:29:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/244903685",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-244903685",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 244903685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDkwMzY4NQ==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-06T09:52:34Z",
    "updated_at": "2016-09-06T09:52:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated again.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/244906746",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-244906746",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 244906746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDkwNjc0Ng==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-06T10:06:28Z",
    "updated_at": "2016-09-06T10:15:39Z",
    "author_association": "MEMBER",
    "body": "This still doesn't look safe to me...\n\nA more robust approach may be to explicitly record owner-changed events in the trigger and then let the things that bind the trigger deal with these themselves at the normal trigger update time.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/244911559",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-244911559",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 244911559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDkxMTU1OQ==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-06T10:29:59Z",
    "updated_at": "2016-09-06T10:29:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thing is: owner-changing runs in a frame-end task, and in order to maintain sync with proxtriggers, they also need to be updated in that frame-end task.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/244912265",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-244912265",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 244912265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDkxMjI2NQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-06T10:33:40Z",
    "updated_at": "2016-09-06T10:33:40Z",
    "author_association": "MEMBER",
    "body": "This is why the fix needs to be carefully designed and integrated.  The timing/order of execution is subtle and important.  Brute-forcing the triggers to update at arbitrary times _will_ break edge cases that we probably won't predict.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/244914153",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-244914153",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 244914153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDkxNDE1Mw==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-06T10:43:18Z",
    "updated_at": "2016-09-06T10:43:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "If timing/order of execution is important, then why you keep insisting to break the actor-proxtrigger synchronization by a tick (unless you want to introduce a race condition when the trigger provider gets changed in the followup frame of an owner change on an affected-by-trigger actor).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/244915116",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-244915116",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 244915116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDkxNTExNg==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-06T10:48:18Z",
    "updated_at": "2016-09-06T10:55:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "~~Also this PR as-is doesn't resolve the crash because the affected proxtriggers on the actor doesn't get updated. The previous iteration could fix it, but this doesn't anymore.~~\n\nFalse alarm, wrong branch >_>\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/244922253",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-244922253",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 244922253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDkyMjI1Mw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-06T11:25:19Z",
    "updated_at": "2016-09-06T11:26:54Z",
    "author_association": "MEMBER",
    "body": "I'll be blunt because your comments are coming across as increasingly aggressive.\n\nYou want to make it possible to execute the triggers from an arbitrary point in a FrameEndTask.  This means that any logic run by the trigger (i'll point out here that you've forgotten about cell triggers in this pr) becomes sensitive to the order that FrameEndTasks are executed.\n\nConsider a lua-bound trigger that makes a player lose if an enemy unit crosses a trigger region.  An enemy captures one of your units inside the region during the same tick that that is killed.  If the capture task runs before the kill task, then you lose and go WTF there was no enemy unit in my area!?!  If the kill task runs first, then everything is fine.  The order that the tasks run will typically depend on the order that the units were initialized by the game.\n\nConsider a trigger that changes the owner of something within its range.  Congratulations, you've introduced a potential stack overflow.\n\nThere are a whole pile of subtle issues like this that the trigger system was specifically set up to avoid.  Running the triggers at a single known time each tick is the only way we can safely avoid them, so it is not acceptable to change this behaviour.\n\nI think that's all I need to say on the matter, now.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/244945870",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-244945870",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 244945870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDk0NTg3MA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-06T13:14:43Z",
    "updated_at": "2016-09-06T13:14:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/250953935",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-250953935",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 250953935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDk1MzkzNQ==",
    "user": {
      "login": "chrisforbes",
      "id": 128877,
      "node_id": "MDQ6VXNlcjEyODg3Nw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/128877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisforbes",
      "html_url": "https://github.com/chrisforbes",
      "followers_url": "https://api.github.com/users/chrisforbes/followers",
      "following_url": "https://api.github.com/users/chrisforbes/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisforbes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisforbes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisforbes/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisforbes/orgs",
      "repos_url": "https://api.github.com/users/chrisforbes/repos",
      "events_url": "https://api.github.com/users/chrisforbes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisforbes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-02T05:03:05Z",
    "updated_at": "2016-10-02T05:03:29Z",
    "author_association": "MEMBER",
    "body": "Are the (intended) invalidation conditions the same or different to those used for Targets? We use target generations there to avoid touching things much.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/251683652",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-251683652",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 251683652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTY4MzY1Mg==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-05T14:02:23Z",
    "updated_at": "2016-10-05T14:02:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/251691809",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-251691809",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 251691809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTY5MTgwOQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-05T14:31:08Z",
    "updated_at": "2016-10-05T14:31:08Z",
    "author_association": "MEMBER",
    "body": "Please see my comment above re owner / exit ordering.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/251697804",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-251697804",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 251697804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTY5NzgwNA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-05T14:51:10Z",
    "updated_at": "2016-10-05T14:51:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "No, you missed an important detail here: _the unit still leaves the trigger a tick later compared to leaving the area affected_. If I do what you say, it will just render #11707 to a heisencrash which will still happen in the situation I described above the post you responded.\n\nAlso, `OnExited` never runs twice. Please review the actual code.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/251703714",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-251703714",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 251703714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTcwMzcxNA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-05T15:10:38Z",
    "updated_at": "2016-10-05T15:22:37Z",
    "author_association": "MEMBER",
    "body": "Please explain the code flow that you think causes the problem, and we can go from there.  The entire motivation for my suggestions above were to ensure that actor change events would be managed in the same tick as the movement triggers.  I am unable to review your code that would lead to this because you haven't pushed it.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/251704275",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-251704275",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 251704275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTcwNDI3NQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-05T15:12:36Z",
    "updated_at": "2016-10-05T15:12:36Z",
    "author_association": "MEMBER",
    "body": "> Also, OnExited never runs twice. Please review the actual code.\n\nMy comment above was with regards to\n\n> having OnExited running before OnActorChanged would crash the game if a player hijacks an enemy tank which was just leaving his Cloak Generator's range in TS\n\nPlease explain what you mean by \"crash\" if you aren't referring to `OnExited` running twice and double-revoking UpgradeActorsNear.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/251710270",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-251710270",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 251710270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTcxMDI3MA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-05T15:32:39Z",
    "updated_at": "2016-10-05T15:32:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "If `OnOwnerChanged` in this code iteration is shifted to happen only after `OnExited`, then `OnExited` will crash the game by removing the cloakgenerator upgrade which the captured unit could only acquire from `OnOwnerChanged`.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/251718109",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-251718109",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 251718109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTcxODEwOQ==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-05T15:59:30Z",
    "updated_at": "2016-10-05T16:00:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Example situation (although it will be the vice versa problem, where no crash happens with assuming on current TS rules):\n\nUnit A owned by Player X is under X's cloakgenerator and X ordered it to leave it.\nIt leaves the area in Tick 33, and in this same Tick 33, player Y successfully hijacks it.\nBetween Tick 33 and Tick 34, the capture function runs.\nIn Tick 34, ActorMap.Tick calls the trigger updates.\n\nIF OnOwnerChanged runs before Exited/Entered\n- OnOwnerChanged revokes the cloakgen since X lost the unit and will not apply the upgrade back since Y isn't an ally of X.\n- OnExited does nothing, since Y isn't an ally of X.\n\nA leaves the area with the cloak upgrade removed.\n\nIF OnExited/Entered runs first\n- OnExited does nothing, since Y isn't an ally of X.\n- OnOwnerChanged will be prevented to run, since the unit is no longer in the area of the cloakgen.\n\nA leaves the area with the cloakgenerator upgrade still enabled.\n\nThis is the actual issue.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/251723669",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-251723669",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 251723669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTcyMzY2OQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-05T16:18:44Z",
    "updated_at": "2016-10-05T16:25:56Z",
    "author_association": "MEMBER",
    "body": "Ok.  All these problems come from `UpgradeActorsNear` having no sanity checks preventing it from granting upgrades more than once or removing more than it has applied.  It would be good practice, regardless of what happens outside the trait, for it to keep its own `HashSet<Actor>` and skip grant/revokes that would violate these rules.\n\nWe can then remove the stances check from the revoke case so that any actor that has been granted an upgrade will lose it when it leaves.\n\nWe then have, with `OnExit` running before `OnOwnerChanged`:\n- At the start of the tick we have the unit owned by the \"wrong\" player and the cloak upgrade applied\n- `OnExit` runs, and the upgrade is removed because it has left the trigger area (owner doesn't matter).\n- `OnOwnerChanged` doesn't run, because `OnExit` has been run.\n- At the end of the tick we have the enemy actor outside the trigger without the upgrade applied.\n\nOr alternatively (actor captured enemy -> ally when leaving a trigger):\n- At the start of the tick we have the unit owned by the \"right\" player, with no upgrade applied\n- `OnExit` runs, and nothing happens because there is no upgrade to revoke.\n- `OnOwnerChanged` doesn't run, because `OnExit` has been run.\n- At the end of the tick we have the allied actor outside the trigger without the upgrade applied.\n\nAnd on the reverse case, with `OnEnter` running before `OnOwnerChanged`:\n- At the start of the tick we have the unit owned by the \"wrong\" player, with no upgrade applied.\n- `OnEnter` runs, and the upgrade isn't applied because the owner is wrong.\n- `OnOwnerChanged` doesn't run, because `OnEnter` has been run.\n- At the end of the tick we have the enemy actor inside the trigger without the upgrade applied.\n\nOr alternatively (actor captured enemy -> ally when entering a trigger):\n- At the start of the tick we have the unit owned by the \"right\" player, with no upgrade applied.\n- `OnEnter` runs, and the upgrade is applied because the owner is correct.\n- `OnOwnerChanged` doesn't run, because `OnEnter` has been run.\n- At the end of the tick we have the allied actor inside the trigger the the upgrade applied.\n\nThese are the behaviors we want for `UpgradeActorsNear`, without regressing the cases that I explained above.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/251739001",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-251739001",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 251739001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTczOTAwMQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-05T17:16:22Z",
    "updated_at": "2016-10-05T17:17:53Z",
    "author_association": "MEMBER",
    "body": ">  It would be good practice, regardless of what happens outside the trait, for it to keep its own `HashSet<Actor>` and skip grant/revokes that would violate these rules.\n\nIf we're smart about this then we won't even need a new `HashSet`.  The upgrades code already tracks which objects have granted levels, so we just need to expose a `bool UpgradeManager.HasGrantedUpgrade(string upgrade, object source)` method to check whether `this` (the `UpgradeActorsNear` trait) has granted an upgrade level or not.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/254088987",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-254088987",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 254088987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDA4ODk4Nw==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-17T00:41:46Z",
    "updated_at": "2016-10-17T00:41:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sounds like a \"downstream-workaround-for-an-upstream-issue\" hack to me if you insist changing the PR's current contents as well.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/255585501",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-255585501",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 255585501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTU4NTUwMQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-23T12:18:17Z",
    "updated_at": "2016-10-23T12:18:17Z",
    "author_association": "MEMBER",
    "body": "I've tried to be reasonable, and have explained why I consider the approach in this PR to be flawed.  I have also spent a lot more time than I consider worthwhile giving directions towards fixing these, but so far all you've done is be hostile towards these review comments.\n\nDo you want to work with me towards getting this important fix merged, or shall we give up and close this PR?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/255587225",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-255587225",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 255587225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTU4NzIyNQ==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-23T12:58:58Z",
    "updated_at": "2016-10-23T12:58:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't see why the trigger-sanity checks should be strictly relegated to the trigger usecases besides that at the moment there's no proximity trigger applying a continuous effect except UAN.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/255587474",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-255587474",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 255587474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTU4NzQ3NA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-23T13:04:31Z",
    "updated_at": "2016-10-23T13:04:31Z",
    "author_association": "MEMBER",
    "body": "UAN is a special case because it uses the trigger notifications to modify _other_ actors.  This means that it needs to deal with the timing and state consistency of other actors, not just itself (which is handled by the triggers themselves).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/255588374",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-255588374",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 255588374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTU4ODM3NA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-23T13:23:41Z",
    "updated_at": "2016-10-23T13:23:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't see what makes that so much of a special case that it needs safeguards relegated to the trigger user code - I haven't seen any comment where said effect is beyond the trigger's intended use (considering that the Lua trigger descriptions also imply them be used to affect all actors in the affected area).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/255589213",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-255589213",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 255589213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTU4OTIxMw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-23T13:40:44Z",
    "updated_at": "2016-10-23T13:40:44Z",
    "author_association": "MEMBER",
    "body": "Are you really trying to argue that UAN is so simple that we should intentionally avoid adding sanity or safety checks?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/255589881",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-255589881",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 255589881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTU4OTg4MQ==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-23T13:52:11Z",
    "updated_at": "2016-10-23T13:52:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "No, I am trying to argue that UAN shouldn't require safety checkes in itself and the trigger code should provide the required checks for the complicated case of UAN as well.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/255594008",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-255594008",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 255594008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTU5NDAwOA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-23T15:12:15Z",
    "updated_at": "2016-10-23T15:13:15Z",
    "author_association": "MEMBER",
    "body": "This is a notification ordering problem, which is something that we don't generally have control over.  Traits are expected to be robust against the order that notifications are called, which is why we have FrameEndTasks and Actor.IsDead checks everywhere.\n\nThis is a specific case where we _can_ control it, but that's a crappy excuse for avoiding our best practices and safety checks.  Changing the engine code to depend on the implementation details of one specific trait in mod code is a terrible idea.  When the next person comes along and wants to change it back (because they don't see why their code should implement sanity checks when they can just change the trigger order) we end up back at square one with hard to reproduce crashes.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260165393",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-260165393",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 260165393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDE2NTM5Mw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T03:53:34Z",
    "updated_at": "2016-11-13T03:53:34Z",
    "author_association": "MEMBER",
    "body": "I think this discussion has run its course.  I will end up solving some of these problems myself in the upgrades rewrite which is now underway.  Moving the the future milestone so that we can find and resurrect the remaining parts of this once that painful process is complete.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/264699627",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11987#issuecomment-264699627",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11987",
    "id": 264699627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDY5OTYyNw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-04T11:57:30Z",
    "updated_at": "2016-12-04T11:57:30Z",
    "author_association": "MEMBER",
    "body": "#12449 implements the UAN rework that I outlined above."
  }
]
