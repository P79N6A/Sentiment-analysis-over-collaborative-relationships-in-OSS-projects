[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/150100340",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9703#issuecomment-150100340",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9703",
    "id": 150100340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDEwMDM0MA==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-22T04:04:21Z",
    "updated_at": "2015-10-22T04:04:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated.\n\nAfter some thinking I've come to the conclusion that the 'safest' fix is to simply replace `Ground` with `Barrel` on `ValidTargets`, like already done on the warhead. \n\nThe only reason I previously left Ground there and instead tried to disable building targeting via InvalidTargets was so players still had the option to force-fire on (empty) ground, but I guess in practice that's pretty pointless anyway.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/150146945",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9703#issuecomment-150146945",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9703",
    "id": 150146945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDE0Njk0NQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-22T08:31:25Z",
    "updated_at": "2015-10-22T08:31:41Z",
    "author_association": "MEMBER",
    "body": "All the other non-melee units in all the games are able to force-fire on the ground.  It's just part of the game!  I'm really not a fan of disabling it for tanya.\n\nIf there is a bug in the way InvalidTargets works, then we need to fix that instead.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/150527451",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9703#issuecomment-150527451",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9703",
    "id": 150527451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDUyNzQ1MQ==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-23T09:28:20Z",
    "updated_at": "2015-10-23T09:28:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I've done some more testing and I think I found the real problem.\n- Adding `C4` to the list of `InvalidTargets` 'fixed' it\n- Changing the order of `TargetTypes` on `^BasicBuilding` to list `Structure` _before_ `C4` 'fixed' it\n\nSince the order shouldn't matter, I took a look at `WeaponInfo`.\nI _believe_ the problem is that line 130 is missing a `.ToHashSet()`, and a quick test seems to confirm it.\n\nUpdated accordingly.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/150532171",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9703#issuecomment-150532171",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9703",
    "id": 150532171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDUzMjE3MQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-23T09:57:45Z",
    "updated_at": "2015-10-23T09:57:45Z",
    "author_association": "MEMBER",
    "body": "That is a bit worrying, because it sounds like the `.Overlaps` may be behaving differently for collections that contain duplicate entries vs collections that don't... that would be quite bogus.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/150532177",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9703#issuecomment-150532177",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9703",
    "id": 150532177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDUzMjE3Nw==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-23T09:57:47Z",
    "updated_at": "2015-10-23T09:57:47Z",
    "author_association": "MEMBER",
    "body": "This seems dodgy - why would need need to explicitly remove the duplicates here before letting everything else chow down on them? Are you sure this isn't, say, a side-effect of the reordering of the elements? Does `.Distinct()` (which preserves the source order) have different behaviour?\n\nThere's also a several places that enumerate the target types in the same way that we'll want to check, if you current hypothesis correct\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/150535617",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9703#issuecomment-150535617",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9703",
    "id": 150535617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDUzNTYxNw==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-23T10:14:00Z",
    "updated_at": "2015-10-23T10:14:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "> This seems dodgy - why would need need to explicitly remove the duplicates here before letting everything else chow down on them? Are you sure this isn't, say, a side-effect of the reordering of the elements?\n\nNo idea. I mostly tried this because `FrozenActor.TargetTypes` uses `.ToHashSet()` as well.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/150537019",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9703#issuecomment-150537019",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9703",
    "id": 150537019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDUzNzAxOQ==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-23T10:23:26Z",
    "updated_at": "2015-10-23T10:23:26Z",
    "author_association": "MEMBER",
    "body": "That's probably so it can use the Overlaps method in other places, for performance.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/150672310",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9703#issuecomment-150672310",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9703",
    "id": 150672310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDY3MjMxMA==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-23T19:42:18Z",
    "updated_at": "2015-10-23T19:42:18Z",
    "author_association": "MEMBER",
    "body": "I was unable to see any difference when adding a `ToHashSet` myself - however if you had other changes in your YAML that may have affected things.\n\nI posted some more info back on #9673.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/150769999",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9703#issuecomment-150769999",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9703",
    "id": 150769999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDc2OTk5OQ==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-24T06:47:09Z",
    "updated_at": "2015-10-24T06:47:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ouch... somehow I completely overlooked the possibility that the individual buildings' `TargetTypes` might differ from the inherited default.\n\nSo yes, this actually isn't a code issue, our yaml definitions are flawed. Several buildings - power plants among them - simply didn't list `Structure` under `TargetTypes`.\n\nUpdated.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/150827771",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9703#issuecomment-150827771",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9703",
    "id": 150827771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDgyNzc3MQ==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-24T15:38:20Z",
    "updated_at": "2015-10-24T15:38:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another option could be giving a `TargetTypes@Spyable: ValidTargets SpyInfiltrate` to these ones.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/150840483",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9703#issuecomment-150840483",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9703",
    "id": 150840483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDg0MDQ4Mw==",
    "user": {
      "login": "obrakmann",
      "id": 4331210,
      "node_id": "MDQ6VXNlcjQzMzEyMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4331210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obrakmann",
      "html_url": "https://github.com/obrakmann",
      "followers_url": "https://api.github.com/users/obrakmann/followers",
      "following_url": "https://api.github.com/users/obrakmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/obrakmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obrakmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obrakmann/subscriptions",
      "organizations_url": "https://api.github.com/users/obrakmann/orgs",
      "repos_url": "https://api.github.com/users/obrakmann/repos",
      "events_url": "https://api.github.com/users/obrakmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obrakmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-24T18:46:49Z",
    "updated_at": "2015-10-24T18:46:49Z",
    "author_association": "CONTRIBUTOR",
    "body": ":+1: Tanya behaves now.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/150842228",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9703#issuecomment-150842228",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9703",
    "id": 150842228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDg0MjIyOA==",
    "user": {
      "login": "abcdefg30",
      "id": 7704140,
      "node_id": "MDQ6VXNlcjc3MDQxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7704140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcdefg30",
      "html_url": "https://github.com/abcdefg30",
      "followers_url": "https://api.github.com/users/abcdefg30/followers",
      "following_url": "https://api.github.com/users/abcdefg30/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcdefg30/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcdefg30/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcdefg30/subscriptions",
      "organizations_url": "https://api.github.com/users/abcdefg30/orgs",
      "repos_url": "https://api.github.com/users/abcdefg30/repos",
      "events_url": "https://api.github.com/users/abcdefg30/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcdefg30/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-24T19:21:00Z",
    "updated_at": "2015-10-24T19:21:00Z",
    "author_association": "MEMBER",
    "body": "Looks good to me, too. :+1: / :white_check_mark: \n"
  }
]
