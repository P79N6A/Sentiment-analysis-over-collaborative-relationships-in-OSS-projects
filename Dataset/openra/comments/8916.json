[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/216043116",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/8916#issuecomment-216043116",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8916",
    "id": 216043116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjA0MzExNg==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-01T13:49:28Z",
    "updated_at": "2016-05-01T13:49:28Z",
    "author_association": "MEMBER",
    "body": "Discussion from #10764 before it was closed:\n\n> we actually have all the logic you need to implement low bridge destruction. The only bits we're still missing for complete low bridges are the random art selection (this could be done with a random upgrade trait switching different WithSpriteBody traits) and demolition/repair via bridge huts.\n> \n> You can implement destruction by setting up two \"normal\" actors (one for each bridge orientation), two \"dead\" husk actors, and the four ramps (set up like the normal actors). The normal actors have regular and damaged art states, and spawn the \"dead\" actors on death. The \"dead\" actors use WithWallSpriteBody to render the damaged-end overhang when they are next to or between undamaged bridge segments. The artwork for the different adjacency cases are in different files, which you assemble into a single sequence for the wall trait using an aggregate sequence.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/216063101",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/8916#issuecomment-216063101",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8916",
    "id": 216063101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjA2MzEwMQ==",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-01T18:38:52Z",
    "updated_at": "2016-05-01T18:38:52Z",
    "author_association": "MEMBER",
    "body": "That approach will create unpassable bridges that don't render correctly: https://github.com/Mailaender/OpenRA/tree/combined-lowbridges\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/220123657",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/8916#issuecomment-220123657",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8916",
    "id": 220123657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDEyMzY1Nw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T18:54:11Z",
    "updated_at": "2016-05-18T18:54:25Z",
    "author_association": "MEMBER",
    "body": "That branch does not appear to implement the approach that I have outlined, so i'm not sure how you can say that.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/220126630",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/8916#issuecomment-220126630",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8916",
    "id": 220126630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDEyNjYzMA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T19:05:08Z",
    "updated_at": "2016-05-18T19:05:08Z",
    "author_association": "MEMBER",
    "body": "More discussion from IRC:\n\n```\n[19:02:52]  <Mailaender> our current bridges work exactly the same way except that the actors are tilset templates for each damage state as well\n[19:03:10]  <pchote> actually bridges work the way i'm asking\n[19:03:38]  <Mailaender> I probably also don't get you right, but I have the impression you thought about it in theory, but didn't make any attempts to try out the approach you demand shall not be deviated from.\n[19:04:46]  <pchote> the wall logic / \"spawn actors at the edge upon destruction\" is exactly what the Destroyed*Template stuff on Bridge is\n[19:05:08]  <pchote> the only difference is that it is done using existing code and sequences instead of a pile of hardcoded logic referencing tile templates\n[19:05:30]  <pchote> I know it works because I spent a long time with ^\n[19:05:35]  <Mailaender> but how do you define the endings\n[19:05:44]  <Mailaender> walls are 1x1 tiles not 3x1 or 1x3\n[19:05:54]  <Mailaender> that is causing the biggest headache for me\n[19:06:07]  <pchote> walls don't care\n[19:06:12]  <pchote> it only cares about adjacent actors\n[19:06:20]  <Mailaender> and that TS treats them as 1x1 tiles which makes the import terrible as I have to detect the middle actor somehow\n[19:06:34]  <Nolt> so you could make a wall of gates?\n[19:07:10]  <pchote> Mailaender: that is another solved problem: look at BridgeLayer\n[19:07:32]  <pchote> again, the only difference is that we are moving it out of a special-case-runtime-hack into a different place\n[19:12:09]  <pchote> with regards to Bridge neighbors: DestroyedTemplate is equivalent to a wall with no neighbours, DestroyedPlusNorthTemplate to a wall with one segment above, DestroyedPlusSouthTemplate to a wall with one segment below, and DestroyedPlusBothTemplate to a wall with segments above and below\n[19:12:24]  <pchote> and wall segments in any other positions are ignored\n[19:12:31]  <pchote> just map wall -> bridge\n[19:13:04]  <pchote> you can either do it by repeating frames in the sequences, or extending the rendering trait to explicitly list the neighbour cells to check\n[19:13:12]  <pchote> like we did for line build connections \n```\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/225463276",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/8916#issuecomment-225463276",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8916",
    "id": 225463276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ2MzI3Ng==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T22:04:20Z",
    "updated_at": "2016-06-12T22:04:29Z",
    "author_association": "MEMBER",
    "body": "I did some more research on this as part of #11441\n\n> I did some testing with the original game, and think I have decyphered a reasonable frame mapping. It doesn't perfectly match the original (which almost seems to calculate damage along the edges of overlays instead of the center?), but I feel it gives a nice compromise between looks and implementation feasibility. Like for ice, artwork selection is based on the health of the actor and its neighbours:\n> - Healthy, both neighbours healthy -> lobrdg1/2/3/4 (randomized).\n> - Healthy, one neighbour damaged -> lobrdg5/6 (depending on neighbour)\n> - Damaged -> lobrdg7\n> - Heavily damaged -> lobrdg8/9 (randomized)\n> - Dead -> lobrdg27\n> \n> Similar for the other direction, just add 9.\n> \n> This gives us the following sequence for damage states:\n> ![screen shot 2016-06-12 at 23 00 04](https://cloud.githubusercontent.com/assets/167819/15994071/7cc3bc58-30f1-11e6-9ebc-046c60616bdb.png)\n\nThe end ramps would then use their damaged art state if _either_ they or their neighbour is damaged.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/243563035",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/8916#issuecomment-243563035",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8916",
    "id": 243563035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzU2MzAzNQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-30T20:07:52Z",
    "updated_at": "2016-08-30T20:07:52Z",
    "author_association": "MEMBER",
    "body": "The first steps towards this have been taken in #11441.\n\nWe now need to resolve:\n- [ ] Adjacency rendering, probably wanting to use the mapping I suggest above\n- [ ] ActorPreview rendering support (using RuntimeNeighbourInit)\n- [ ] Linking adjacent bridge segments and huts for repair / demolition (probably needs a new trait to use on the dead bridge placeholder actors)\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/243564384",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/8916#issuecomment-243564384",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8916",
    "id": 243564384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzU2NDM4NA==",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-30T20:12:03Z",
    "updated_at": "2016-08-30T20:12:03Z",
    "author_association": "MEMBER",
    "body": "I thought about doing the sprite randomization next which might be easy.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/244536039",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/8916#issuecomment-244536039",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8916",
    "id": 244536039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDUzNjAzOQ==",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-03T09:10:45Z",
    "updated_at": "2016-09-03T09:10:45Z",
    "author_association": "MEMBER",
    "body": "@penev92: Are you still working on it? :arrow_up:\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260064934",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/8916#issuecomment-260064934",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8916",
    "id": 260064934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDA2NDkzNA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-11T21:57:05Z",
    "updated_at": "2016-11-11T21:57:05Z",
    "author_association": "MEMBER",
    "body": "I have the bulk of bridge linking/damage/repair done, and will file a pr once I'm happy with it.\n"
  }
]
