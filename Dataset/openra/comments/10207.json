[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/164201227",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/10207#issuecomment-164201227",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10207",
    "id": 164201227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDIwMTIyNw==",
    "user": {
      "login": "abcdefg30",
      "id": 7704140,
      "node_id": "MDQ6VXNlcjc3MDQxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7704140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcdefg30",
      "html_url": "https://github.com/abcdefg30",
      "followers_url": "https://api.github.com/users/abcdefg30/followers",
      "following_url": "https://api.github.com/users/abcdefg30/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcdefg30/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcdefg30/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcdefg30/subscriptions",
      "organizations_url": "https://api.github.com/users/abcdefg30/orgs",
      "repos_url": "https://api.github.com/users/abcdefg30/repos",
      "events_url": "https://api.github.com/users/abcdefg30/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcdefg30/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-12T23:16:09Z",
    "updated_at": "2015-12-12T23:16:09Z",
    "author_association": "MEMBER",
    "body": "See also https://github.com/OpenRA/OpenRA/pull/10206#issuecomment-164196266 or [this irc log](http://logs.openra.net/?year=2015&month=12&day=08#16:22:33).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/164418078",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/10207#issuecomment-164418078",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10207",
    "id": 164418078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDQxODA3OA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-14T11:49:58Z",
    "updated_at": "2015-12-14T11:49:58Z",
    "author_association": "MEMBER",
    "body": "So much for unit tests catching future breaking :)\n\nCan we get a testcase showing this working before #9710 and not working now?  I'll then look into what went wrong.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/167584059",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/10207#issuecomment-167584059",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10207",
    "id": 167584059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzU4NDA1OQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-28T14:55:33Z",
    "updated_at": "2015-12-28T14:55:42Z",
    "author_association": "MEMBER",
    "body": "I expect this is happening because of the split between resolving merges/removals (which happens in the lowest level miniyaml code) and resolving inheritance (which happens in the actor loading code).  Before #9710 we resolved all removals before considering inheritance, which meant that you couldn't remove nodes from inherited parents.  After #9710 we resolve all removals at the end, which I expect means that it _also_ removes from children, as well as parents (which is equally bogus).\n\nThe fix for this will be to change the actor inheritance to use head recursion and fully resolve the removals at each step on the way out.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/167584306",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/10207#issuecomment-167584306",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10207",
    "id": 167584306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzU4NDMwNg==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-28T14:57:48Z",
    "updated_at": "2015-12-28T14:57:48Z",
    "author_association": "MEMBER",
    "body": "Calling `MiniYaml.ApplyRemovals` inside `MergeWithParents` may be sufficient, but we need some testcases to verify this first.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/167692581",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/10207#issuecomment-167692581",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10207",
    "id": 167692581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzY5MjU4MQ==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-29T01:45:13Z",
    "updated_at": "2015-12-29T01:50:22Z",
    "author_association": "MEMBER",
    "body": "Try adding these to `ActorInfoTest.cs`\n\n``` c#\nclass MockStringInfo : MockTraitInfo { public string AString = null; }\n```\n\n``` c#\n        [TestCase(TestName = \"Trait can be removed and later overridden\")]\n        public void TraitCanBeRemovedAndLaterOverridden()\n        {\n            var baseYaml = @\"\n^BaseA:\n    MockStringInfo:\n        AString: \"\"Base\"\"\nActor:\n    Inherits: ^BaseA\n    -MockStringInfo:\n\";\n            var overrideYaml = @\"\nActor:\n    MockStringInfo:\n        AString: \"\"Override\"\"\n\";\n\n            var actorInfo = CreateActorInfoFromYaml(\"Actor\", null, baseYaml, overrideYaml);\n            Assert.IsTrue(actorInfo.HasTraitInfo<MockStringInfo>(), \"Actor should have the MockStringInfo trait, but does not.\");\n            Assert.IsTrue(actorInfo.TraitInfo<MockStringInfo>().AString == \"Override\",\n                \"MockStringInfo trait has not been set with the correct override value for AString.\");\n        }\n```\n\nI didn't test this pre-#9710, but it fails on the current bleed with:\n\n```\nResult Message: \nActor should have the MockStringInfo trait, but does not.\n  Expected: True\n  But was:  False\n```\n"
  }
]
