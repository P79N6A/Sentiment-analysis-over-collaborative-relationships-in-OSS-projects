[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/449707912",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/15942#issuecomment-449707912",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/15942",
    "id": 449707912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTcwNzkxMg==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-24T09:20:32Z",
    "updated_at": "2018-12-24T09:20:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks good. We should at least check if the building repair module can be performance-optimized as checking sync around it can lag even fast machines, but that's a separate issue."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/449709179",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/15942#issuecomment-449709179",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/15942",
    "id": 449709179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTcwOTE3OQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-24T09:30:55Z",
    "updated_at": "2018-12-24T09:31:07Z",
    "author_association": "MEMBER",
    "body": "The issue won't be the repair module, but with the sync calculation itself which is relatively expensive."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/449709340",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/15942#issuecomment-449709340",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/15942",
    "id": 449709340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTcwOTM0MA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-24T09:32:22Z",
    "updated_at": "2018-12-24T09:32:22Z",
    "author_association": "MEMBER",
    "body": "I wonder whether it would be smarter to not implement a GUI option for this - we don't want people accidentally enabling this considering the perf overheads."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/449770817",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/15942#issuecomment-449770817",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/15942",
    "id": 449770817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTc3MDgxNw==",
    "user": {
      "login": "obrakmann",
      "id": 4331210,
      "node_id": "MDQ6VXNlcjQzMzEyMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4331210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obrakmann",
      "html_url": "https://github.com/obrakmann",
      "followers_url": "https://api.github.com/users/obrakmann/followers",
      "following_url": "https://api.github.com/users/obrakmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/obrakmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obrakmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obrakmann/subscriptions",
      "organizations_url": "https://api.github.com/users/obrakmann/orgs",
      "repos_url": "https://api.github.com/users/obrakmann/repos",
      "events_url": "https://api.github.com/users/obrakmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obrakmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-24T20:58:37Z",
    "updated_at": "2018-12-24T20:58:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I wonder whether it would be smarter to not implement a GUI option for this - we don't want people accidentally enabling this considering the perf overheads.\r\n\r\nWhat I'd do is keep all the checkboxes, but hide them all behind a config option that doesn't have one. So for normal users, the whole Debug section on the advanced page wouldn't be visible."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/449897699",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/15942#issuecomment-449897699",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/15942",
    "id": 449897699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTg5NzY5OQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-26T03:43:04Z",
    "updated_at": "2018-12-26T03:43:04Z",
    "author_association": "MEMBER",
    "body": "Done. I also added a checkbox for your strict activity checking (will hopefully remind people that this work is still not complete), and additional description tags for https://github.com/OpenRA/OpenRA/wiki/Settings."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/449991230",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/15942#issuecomment-449991230",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/15942",
    "id": 449991230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTk5MTIzMA==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-26T16:39:55Z",
    "updated_at": "2018-12-26T16:39:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/OpenRA/OpenRA/wiki/Changelog-(bleed)/_compare/d54cc51d494e4351eff387a3df630c7d95accef3...cb2c37c3307842959cbe5c31498f96ff05700145"
  }
]
