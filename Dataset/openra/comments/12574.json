[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/272678548",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12574#issuecomment-272678548",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12574",
    "id": 272678548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjY3ODU0OA==",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T07:13:25Z",
    "updated_at": "2017-01-15T07:13:25Z",
    "author_association": "MEMBER",
    "body": "How about a lint warning that detects these flaws so they don't get re-introduced when weapon rules are not observed by your watchful eyes like in thirdparty mods?"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/272686534",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12574#issuecomment-272686534",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12574",
    "id": 272686534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjY4NjUzNA==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T10:30:18Z",
    "updated_at": "2017-01-15T10:30:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good idea."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/272702069",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12574#issuecomment-272702069",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12574",
    "id": 272702069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjcwMjA2OQ==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T15:26:18Z",
    "updated_at": "2017-01-15T15:26:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have a working lint rule locally, but I can only repeat, that would be much easier to tweak once we use inheritance for all weapons."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/273315294",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12574#issuecomment-273315294",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12574",
    "id": 273315294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzMxNTI5NA==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T22:05:53Z",
    "updated_at": "2017-01-17T23:01:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "~In light of @pchote's comment on #12582, I'm beginning to wonder whether it would be a better approach to make the `SpreadDamageWarhead` and projectiles smarter, by refactoring `TargetExtraSearchRadius` into a `MinimumVictimScanRadius`. Instead of unconditionally adding that to Width/total spread radius, resulting in wasted resources, the warhead/projectile code would only add as much `WDist` as needed to reach that minimum scan radius. That way we'd only need to set a single value per mod instead of individual values per projectile/warhead, saving us and modders a ton of manual yaml labour and lint rule complexity.\r\nOn top of that, we could make the property name consistent (`CreateEffectWarhead` would no longer need to be a special case without that `Extra` in the property name).~\r\n\r\n~Actually, makes way too much sense to not go down that route, but pinging @pchote just in case I'm overlooking something.~\r\n\r\nEdit: Forget what i said. We obviously need to check for actors *beyond* the most outer spread, to make sure it damages any health shapes it touches even if the CenterPosition of the target is outside the outer spread."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/273335250",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12574#issuecomment-273335250",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12574",
    "id": 273335250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzMzNTI1MA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T23:32:18Z",
    "updated_at": "2017-01-17T23:34:00Z",
    "author_association": "MEMBER",
    "body": "We could in principle automate the extra distance calculation here too.  Hook `IRulesetLoaded` and then enumerate all (&rarr; all relevant) actors and take the maximum hit shape radius at load time.  Then keep an optional override, and add a lint rule to stop people from setting excessive/problematic hit shapes that would kill perf."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/290509823",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12574#issuecomment-290509823",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12574",
    "id": 290509823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDUwOTgyMw==",
    "user": {
      "login": "krisradio",
      "id": 1300227,
      "node_id": "MDQ6VXNlcjEzMDAyMjc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1300227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krisradio",
      "html_url": "https://github.com/krisradio",
      "followers_url": "https://api.github.com/users/krisradio/followers",
      "following_url": "https://api.github.com/users/krisradio/following{/other_user}",
      "gists_url": "https://api.github.com/users/krisradio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krisradio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krisradio/subscriptions",
      "organizations_url": "https://api.github.com/users/krisradio/orgs",
      "repos_url": "https://api.github.com/users/krisradio/repos",
      "events_url": "https://api.github.com/users/krisradio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krisradio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-30T18:54:34Z",
    "updated_at": "2017-03-30T18:54:34Z",
    "author_association": "NONE",
    "body": "I would like to take on this issue along with #12582 and #11848 as a combined fix."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/290532859",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12574#issuecomment-290532859",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12574",
    "id": 290532859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDUzMjg1OQ==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-30T20:20:14Z",
    "updated_at": "2017-03-30T20:20:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@7heSAMA Sure :) \r\nI haven't gotten around to updating #12609 and probably wouldn't for a while longer, so I don't mind if someone else takes over.\r\nI suggest you take a look at that PR (if you haven't already), some of the code or at least the comments might be of use."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/290543168",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12574#issuecomment-290543168",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12574",
    "id": 290543168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDU0MzE2OA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-30T20:59:13Z",
    "updated_at": "2017-03-30T20:59:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@7heSAMA Please also read the discussion of https://github.com/OpenRA/OpenRA/pull/11624#issuecomment-238219913 and followups. I'd be happy to see that issue resolved myself as well."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/290581593",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12574#issuecomment-290581593",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12574",
    "id": 290581593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDU4MTU5Mw==",
    "user": {
      "login": "krisradio",
      "id": 1300227,
      "node_id": "MDQ6VXNlcjEzMDAyMjc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1300227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krisradio",
      "html_url": "https://github.com/krisradio",
      "followers_url": "https://api.github.com/users/krisradio/followers",
      "following_url": "https://api.github.com/users/krisradio/following{/other_user}",
      "gists_url": "https://api.github.com/users/krisradio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krisradio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krisradio/subscriptions",
      "organizations_url": "https://api.github.com/users/krisradio/orgs",
      "repos_url": "https://api.github.com/users/krisradio/repos",
      "events_url": "https://api.github.com/users/krisradio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krisradio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T00:21:52Z",
    "updated_at": "2017-03-31T00:21:52Z",
    "author_association": "NONE",
    "body": "@GraionDilach Refactoring ImpactTypes seems like a good first step for this and your PR. \r\n@reaperrr, I will look at that one as well. It doesn't look like you modified the ImpactTypes there, any tips or a PR to reference? "
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/290739975",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12574#issuecomment-290739975",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12574",
    "id": 290739975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDczOTk3NQ==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T15:13:15Z",
    "updated_at": "2017-03-31T15:13:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@7heSAMA That was the primary missing part, basically.\r\n\r\nAs for tips, well the important bits are (as far as I'm aware):\r\n- Valid/InvalidTargetTypes (inherited from parent `Warhead`) need to be taken into consideration, to fix issues like explosion displaying on submerged RA subs\r\n- the `IsWater` check should be removed in favor of either using the above, or a separate `Valid/InvalidTerrainTargetTypes` check (I remember running into difficulties with the former approach, but I don't remember the details, unfortunately).\r\n- the hardcoded `airMargin` of 128 WDist should be replaced with something better. My idea would have been to add a `ValidMinimumAltitude` and a `ValidMaximumAltitude`, the former with a default of 0, the latter with a default of \"unlimited unless not 0\". Then modders would have to set things up like this: ground-/water-only effect warheads would need to define `ValidMaximumAltitude: 128`, while the air-only warhead(s) would define a `ValidMinimumAltitude: 129`, for example."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/290838144",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12574#issuecomment-290838144",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12574",
    "id": 290838144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDgzODE0NA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T21:46:26Z",
    "updated_at": "2017-03-31T21:46:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Terrains can multiple have TargetTypes, so I don't see the reason behind a separate list for them. I'd suggest https://github.com/GraionDilach/OpenRA.Mods.AS/blob/master/Traits/Warheads/WarheadAS.cs as a reference, because it's my solution to this issue - albeit I have a hardcoded hack which is why I didn't PRed it - and it hasn't failed me on all 5 of my custom warheads so far (with #11624's final code being among them)."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/299728119",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12574#issuecomment-299728119",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12574",
    "id": 299728119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTcyODExOQ==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-07T19:19:14Z",
    "updated_at": "2017-05-07T19:20:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Kris-with-a-K Sorry, but since my old PR was basically about 80% there already and I needed it quickly to avoid work-arounds in #13196 and its follow-ups, I went ahead and updated it, so the bulk of this issue will be adressed by that: #13236\r\n\r\nThat being said, #12582 / point 3) of this issue and #11848 are not adressed by my PR, so if you focus on those there shouldn't be much - if any - overlapping between our PRs."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/301274854",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12574#issuecomment-301274854",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12574",
    "id": 301274854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTI3NDg1NA==",
    "user": {
      "login": "krisradio",
      "id": 1300227,
      "node_id": "MDQ6VXNlcjEzMDAyMjc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1300227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krisradio",
      "html_url": "https://github.com/krisradio",
      "followers_url": "https://api.github.com/users/krisradio/followers",
      "following_url": "https://api.github.com/users/krisradio/following{/other_user}",
      "gists_url": "https://api.github.com/users/krisradio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krisradio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krisradio/subscriptions",
      "organizations_url": "https://api.github.com/users/krisradio/orgs",
      "repos_url": "https://api.github.com/users/krisradio/repos",
      "events_url": "https://api.github.com/users/krisradio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krisradio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-13T21:07:10Z",
    "updated_at": "2017-05-13T21:07:10Z",
    "author_association": "NONE",
    "body": "Ok @reaperrr, sounds good. Again, sorry I haven't been able to chip in, just really busy. "
  }
]
