[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/365610732",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12088#issuecomment-365610732",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12088",
    "id": 365610732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTYxMDczMg==",
    "user": {
      "login": "fruestueck",
      "id": 25386322,
      "node_id": "MDQ6VXNlcjI1Mzg2MzIy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/25386322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fruestueck",
      "html_url": "https://github.com/fruestueck",
      "followers_url": "https://api.github.com/users/fruestueck/followers",
      "following_url": "https://api.github.com/users/fruestueck/following{/other_user}",
      "gists_url": "https://api.github.com/users/fruestueck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fruestueck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fruestueck/subscriptions",
      "organizations_url": "https://api.github.com/users/fruestueck/orgs",
      "repos_url": "https://api.github.com/users/fruestueck/repos",
      "events_url": "https://api.github.com/users/fruestueck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fruestueck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T13:43:26Z",
    "updated_at": "2018-02-14T13:51:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would like to try to implement this functionality. Therefore i think, it would be easyer to start implementing GDI Guard Towers (size 1x1) to be build on Walls and later figure out how to handle Gates (size 4x1).\r\n\r\nDue to beeing new to openra development i will try to explain my approach and am happy for any advice how to do it right.\r\n\r\n- First, i'd add a Trait called e.g. 'ReplacesWall'\r\n  - Add Trait `ReplacesWall` to `mods\\ts\\rules\\gdi-support.yaml` in `GACTWR` (gdi guard tower base)\r\n\r\nNext step would be to allow placing of guard tower not only on empty buildable are, but also on area already occupied by a wall (deleting the wall and adding the tower instead).\r\n\r\n This seems to be handled in `OpenRA.Mods.Common\\Traits\\Buildings\\BuildingUtils.cs` in `IsCellBuildable` but i do not think it would be right to change modify that script for one special function. Would be better to adapt this function in a specific script.\r\n\r\n- Create cs script in `OpenRA.Mods.Common\\Traits\\Buildings\\ReplacesWall.cs`\r\nor should it be added to / handeld in \r\n- `OpenRA.Mods.Common\\Traits\\Buildings\\Buildings.cs`?\r\n\r\nDon't know exactly how to approach this in a good way and am happy for advice. I hope i could add this feature, if not at least i'd learn more about the openra structure. Still hopfully it'll work : )"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/365661577",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12088#issuecomment-365661577",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12088",
    "id": 365661577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTY2MTU3Nw==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T16:25:09Z",
    "updated_at": "2018-02-14T16:25:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd take a different approach, which would fix a technicality bug along.\r\n\r\nThere are terrain layers in OpenRA, with the resource layer being the most well known one (there's also D2k concrete though). What I'd go with is that actors with foundation could also very well define such a terrain layer with a terrain type and then the building placement logic could also take all these layers in effect when placing the building.\r\n\r\nThis'd even allow reciprocating the Warcraft 3 undead blight logic as well via using a resource."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/365669326",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12088#issuecomment-365669326",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12088",
    "id": 365669326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTY2OTMyNg==",
    "user": {
      "login": "MunWolf",
      "id": 3696546,
      "node_id": "MDQ6VXNlcjM2OTY1NDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3696546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MunWolf",
      "html_url": "https://github.com/MunWolf",
      "followers_url": "https://api.github.com/users/MunWolf/followers",
      "following_url": "https://api.github.com/users/MunWolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/MunWolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MunWolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MunWolf/subscriptions",
      "organizations_url": "https://api.github.com/users/MunWolf/orgs",
      "repos_url": "https://api.github.com/users/MunWolf/repos",
      "events_url": "https://api.github.com/users/MunWolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MunWolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T16:47:04Z",
    "updated_at": "2018-02-14T16:47:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@GraionDilach idea along with a sell on placement trait (or something similar) would create this functionality, aka limiting the sell to a terrain layer (though a similar thing could be achieved by defining actors that it can sell)"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/365676818",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12088#issuecomment-365676818",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12088",
    "id": 365676818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTY3NjgxOA==",
    "user": {
      "login": "fruestueck",
      "id": 25386322,
      "node_id": "MDQ6VXNlcjI1Mzg2MzIy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/25386322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fruestueck",
      "html_url": "https://github.com/fruestueck",
      "followers_url": "https://api.github.com/users/fruestueck/followers",
      "following_url": "https://api.github.com/users/fruestueck/following{/other_user}",
      "gists_url": "https://api.github.com/users/fruestueck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fruestueck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fruestueck/subscriptions",
      "organizations_url": "https://api.github.com/users/fruestueck/orgs",
      "repos_url": "https://api.github.com/users/fruestueck/repos",
      "events_url": "https://api.github.com/users/fruestueck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fruestueck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T17:09:26Z",
    "updated_at": "2018-02-14T17:10:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@GraionDilach simplyfied, you mean to give walls there own terrain layer?\r\n\r\nI won't be able to make that. Simply due to the fact that i am still a beginner with openra dev (at best ; )\r\nWas just looking for a nother way to contribute and learn more about openra structure. But if anyone more experienced wants to take over, thats fine : )"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/365677192",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12088#issuecomment-365677192",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12088",
    "id": 365677192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTY3NzE5Mg==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T17:10:37Z",
    "updated_at": "2018-02-14T17:10:37Z",
    "author_association": "MEMBER",
    "body": "I suggest familiarizing yourself with how the plug placement code works.  You could generalize or copy this to support actor replacement."
  }
]
