[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/109555287",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/8392#issuecomment-109555287",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8392",
    "id": 109555287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTU1NTI4Nw==",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-06T09:18:40Z",
    "updated_at": "2015-06-06T09:18:40Z",
    "author_association": "MEMBER",
    "body": "Suggested way to review: https://github.com/OpenRA/OpenRA/pull/8392/files?w=1\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/109557595",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/8392#issuecomment-109557595",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8392",
    "id": 109557595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTU1NzU5NQ==",
    "user": {
      "login": "ScottNZ",
      "id": 1712619,
      "node_id": "MDQ6VXNlcjE3MTI2MTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1712619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ScottNZ",
      "html_url": "https://github.com/ScottNZ",
      "followers_url": "https://api.github.com/users/ScottNZ/followers",
      "following_url": "https://api.github.com/users/ScottNZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/ScottNZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ScottNZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ScottNZ/subscriptions",
      "organizations_url": "https://api.github.com/users/ScottNZ/orgs",
      "repos_url": "https://api.github.com/users/ScottNZ/repos",
      "events_url": "https://api.github.com/users/ScottNZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ScottNZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-06T09:32:17Z",
    "updated_at": "2015-06-06T09:33:41Z",
    "author_association": "MEMBER",
    "body": "I don't think this is going to work. It's going to dispose the stream at the end of the constructor, except we still need to use the stream later (see Entry.GetData). `s` should be pulled out into a field and disposed in a destructor/IDisposable implementation.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/109562393",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/8392#issuecomment-109562393",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8392",
    "id": 109562393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTU2MjM5Mw==",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-06T10:06:17Z",
    "updated_at": "2015-06-06T10:06:17Z",
    "author_association": "MEMBER",
    "body": "`Entry.GetData` gets the stream from the `Entry` constructor.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/109562550",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/8392#issuecomment-109562550",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8392",
    "id": 109562550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTU2MjU1MA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-06T10:10:56Z",
    "updated_at": "2015-06-06T10:10:56Z",
    "author_association": "MEMBER",
    "body": "The stream from the `Entry` constructor is the same stream that you're disposing, so it is bogus by the time `Entry.GetData` uses it.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/111263381",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/8392#issuecomment-111263381",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8392",
    "id": 111263381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTI2MzM4MQ==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-11T20:13:39Z",
    "updated_at": "2015-06-11T20:13:39Z",
    "author_association": "MEMBER",
    "body": "Try storing the stream in a field and implementing `IDisposable` on `BigFile`, you can throw away the stream there. Check out MixFile.cs which does a similar thing.\n\nFor bonus points on top of that change you should make sure the constructor is exception-safe. You'd need to do roughly the following:\n\n```\ns = GlobalFileSystem.Open(filename);\ntry\n{\n    // Other ctor stuff that might throw.\n}\ncatch\n{\n    Dispose();\n    throw;\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/111688527",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/8392#issuecomment-111688527",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/8392",
    "id": 111688527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY4ODUyNw==",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T08:48:24Z",
    "updated_at": "2015-06-13T08:48:24Z",
    "author_association": "MEMBER",
    "body": "Probably not worth the effort with zero progress on the Generals demake.\n"
  }
]
