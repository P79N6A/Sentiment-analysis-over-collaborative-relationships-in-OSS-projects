[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/252369951",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12188#issuecomment-252369951",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12188",
    "id": 252369951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjM2OTk1MQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-07T21:51:38Z",
    "updated_at": "2016-10-07T21:52:13Z",
    "author_association": "MEMBER",
    "body": "Since somebody asked on IRC I want to clarify that I see this as a compromise to cover the cases where our current review system fails.  It is _not_ a golden ticket to people to be lazy and file a half-done PR because they've lost interest or coded themselves into a mess that they want somebody else to fix.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/252449374",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12188#issuecomment-252449374",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12188",
    "id": 252449374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjQ0OTM3NA==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-08T21:28:01Z",
    "updated_at": "2016-10-08T21:28:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "`WithSpriteBarrel` is a good example where this would help, it has 'lagged behind' the other sprite/voxel traits at least twice in terms of regressions due to lack of test cases.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/281006226",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12188#issuecomment-281006226",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12188",
    "id": 281006226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTAwNjIyNg==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-20T07:27:54Z",
    "updated_at": "2017-02-20T07:27:54Z",
    "author_association": "MEMBER",
    "body": "We are in a sore spot of C# when implementing this on top of `Desc`.\r\n\r\n```csharp\r\npublic sealed class DescAttribute : Attribute\r\n{\r\n\tpublic readonly string[] Lines;\r\n\tpublic DescAttribute(params string[] lines) { Lines = lines; }\r\n}\r\n```\r\n\r\n`params` arguments _must_ be at the end of the argument list which means the boolean would need to be the first argument.\r\n\r\nWe cannot simply change this like so,\r\n```csharp\r\npublic sealed class DescAttribute : Attribute\r\n{\r\n\tpublic readonly bool IsUnstable;\r\n\tpublic readonly string[] Lines;\r\n\tpublic DescAttribute(bool isUnstable = false, params string[] lines) { Lines = lines; }\r\n}\r\n```\r\n\r\nbecause a value needs to be given everywhere (the default does us no good here).\r\n\r\n```\r\nOpenRA.Game//Traits/World/Shroud.cs(29,9): error CS1503: Argument `#1' cannot convert `string' expression to type `bool'\r\n```\r\n\r\nWe may be better off implementing this as a separate attribute.\r\n\r\n```csharp\r\n[AttributeUsage(AttributeTargets.All)]\r\npublic sealed class UnstableAttribute : Attribute\r\n{\r\n\tpublic readonly string Reason;\r\n\tpublic readonly string GitHubTicketUrl;\r\n\r\n\tpublic UnstableAttribute(string reason, string gitHubTicketUrl)\r\n\t{\r\n\t\tReason = reason;\r\n\t\tGitHubTicketUrl = gitHubTicketUrl;\r\n\t}\r\n}\r\n\r\n[Unstable(\"Math is hard, yo!\", \"https://github.com/OpenRA/OpenRA/issues/12345\")]\r\npublic class HealthInfo : ITraitInfo, UsesInit<HealthInit>\r\n{\r\n\t// ...\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/281085916",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12188#issuecomment-281085916",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12188",
    "id": 281085916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTA4NTkxNg==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-20T13:58:33Z",
    "updated_at": "2017-02-20T13:58:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, I think we can safely add this to the list of issues closed in favor of the new external mod support system/plan."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/281089429",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12188#issuecomment-281089429",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12188",
    "id": 281089429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTA4OTQyOQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-20T14:13:26Z",
    "updated_at": "2017-02-20T14:13:26Z",
    "author_association": "MEMBER",
    "body": "IMO this is an orthogonal issue: mods are no longer *forced* to upstream engine changes if they want to do something new, but it is still the preferred option."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/281089908",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12188#issuecomment-281089908",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12188",
    "id": 281089908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTA4OTkwOA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-20T14:15:30Z",
    "updated_at": "2017-02-20T14:15:30Z",
    "author_association": "MEMBER",
    "body": "> We cannot simply change this like so,\r\n\r\nYou can add a second explicit constructor that has a bool as the first argument.\r\nI like your idea of linking a github issue (id is enough, don't need the full URL) explaining why the feature is unstable, so I would support having this as a separate attribute."
  }
]
