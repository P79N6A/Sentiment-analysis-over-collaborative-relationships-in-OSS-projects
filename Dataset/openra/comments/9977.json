[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/156550945",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9977#issuecomment-156550945",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9977",
    "id": 156550945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjU1MDk0NQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-13T20:42:33Z",
    "updated_at": "2015-11-13T20:42:33Z",
    "author_association": "MEMBER",
    "body": "I'm not sure I like the idea of silently disposing the arguments to a method from deep inside it.  Would it be possible to use a `using` block or explicitly dispose in the methods that 'own' the objects instead?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/156553643",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9977#issuecomment-156553643",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9977",
    "id": 156553643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjU1MzY0Mw==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-13T20:54:05Z",
    "updated_at": "2015-11-13T20:56:45Z",
    "author_association": "MEMBER",
    "body": "Which methods are you worried about specifically? Bear in mind most of these are callbacks from Lua land - the methods I'm disposing in *are* the owners of these objects. Eluant creates the objects specifically to pass as parameters for the CLR method - we own them the instant our callback is invoked.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/156555533",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9977#issuecomment-156555533",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9977",
    "id": 156555533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjU1NTUzMw==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-13T21:02:26Z",
    "updated_at": "2015-11-13T21:02:26Z",
    "author_association": "MEMBER",
    "body": "Trying to explain it reminds me of how this melted my brain a bit when I was fixing it in the first place.\n\nI think I'll throw in some code comments to de-mystify it somewhat.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/159459268",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9977#issuecomment-159459268",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9977",
    "id": 159459268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTQ1OTI2OA==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-25T01:39:36Z",
    "updated_at": "2015-11-25T01:39:36Z",
    "author_association": "MEMBER",
    "body": "So in the process of adding comments, I noticed I'd missing a bunch of things so I've had to throw in a bunch more cleanup.\n\nI've also had to leave myself some TODOs. :(\n\nI'm going to have to investigate more closely exactly where we need some of these calls to `Dispose` as previously I was just sticking in calls so the RA shellmap would have less to finalize. But since the RA shellmap doesn't exercise all the possible methods I don't know if I've done things comprehensively yet or not. Some of the stuff that goes into deferred actions is even more mind-bending. Do we really need a copy of the Lua functions/values for these? Which ones do we need to dispose if we do and when? Blugh.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/166971791",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9977#issuecomment-166971791",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9977",
    "id": 166971791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Njk3MTc5MQ==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-23T19:04:52Z",
    "updated_at": "2015-12-23T19:04:52Z",
    "author_association": "MEMBER",
    "body": "I have updated my code and solved the remaining TODOs.\n\n`ScriptMemberWrapper.Invoke` now ensures any `LuaValues` it passed in as parameters are disposed automatically, which solves most of the problem without requiring major surgery in all the methods. \n\nThe rest of the cleanup generally involves just making sure we call dispose or use usings in a few places. Some common patterns we've missed are when enumerating a `LuaTable` (the key and value are created on demand, and must be disposed unless they are saved elsewhere) and when populating a newly created `LuaTable` (the keys and values we add need to be disposed after we're done adding them).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/167291883",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9977#issuecomment-167291883",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9977",
    "id": 167291883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzI5MTg4Mw==",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-26T07:12:43Z",
    "updated_at": "2015-12-26T07:12:43Z",
    "author_association": "MEMBER",
    "body": "Can't spot negative side effects in scripted maps. :white_check_mark: \n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/167422755",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9977#issuecomment-167422755",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9977",
    "id": 167422755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzQyMjc1NQ==",
    "user": {
      "login": "obrakmann",
      "id": 4331210,
      "node_id": "MDQ6VXNlcjQzMzEyMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4331210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obrakmann",
      "html_url": "https://github.com/obrakmann",
      "followers_url": "https://api.github.com/users/obrakmann/followers",
      "following_url": "https://api.github.com/users/obrakmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/obrakmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obrakmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obrakmann/subscriptions",
      "organizations_url": "https://api.github.com/users/obrakmann/orgs",
      "repos_url": "https://api.github.com/users/obrakmann/repos",
      "events_url": "https://api.github.com/users/obrakmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obrakmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-27T16:20:36Z",
    "updated_at": "2015-12-27T16:20:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks ok to me, :+1: \n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/167423564",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/9977#issuecomment-167423564",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9977",
    "id": 167423564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzQyMzU2NA==",
    "user": {
      "login": "obrakmann",
      "id": 4331210,
      "node_id": "MDQ6VXNlcjQzMzEyMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4331210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obrakmann",
      "html_url": "https://github.com/obrakmann",
      "followers_url": "https://api.github.com/users/obrakmann/followers",
      "following_url": "https://api.github.com/users/obrakmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/obrakmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obrakmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obrakmann/subscriptions",
      "organizations_url": "https://api.github.com/users/obrakmann/orgs",
      "repos_url": "https://api.github.com/users/obrakmann/repos",
      "events_url": "https://api.github.com/users/obrakmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obrakmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-27T16:23:53Z",
    "updated_at": "2015-12-27T16:23:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "[Changelog](https://github.com/OpenRA/OpenRA/wiki/Changelog-%28bleed%29/_compare/7cf33f2842adb549e6ed9cd755509a0ac3346e35)\n"
  }
]
