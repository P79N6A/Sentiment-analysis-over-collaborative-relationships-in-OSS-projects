[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260204868",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260204868",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260204868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIwNDg2OA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T19:02:30Z",
    "updated_at": "2016-11-13T19:02:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have one particular usecase where the limitations with this plan shines: Generals China horde logic, which is just a handful of liines on a template inheritable in the current system:\n\n```\n^DragonInfantry:\n    WithRankDecoration@horde:\n        Image: rank\n        Sequence: horde\n        Palette: apolred\n        ReferencePoint: Bottom, Right\n        UpgradeTypes: infhorde\n        UpgradeMinEnabledLevel: 5\n    FirepowerMultiplier@salvage:\n        UpgradeTypes: infhorde\n        Modifier: 116\n        BaseLevel: 5\n    ReloadDelayMultiplier@salvage:\n        UpgradeTypes: infhorde\n        Modifier: 87\n        BaseLevel: 5\n    UpgradeActorsNear@horde:\n        Upgrades: infhorde\n        AffectsParent: true\n        Range: 1c768\n```\n\nWith your conditions, I can see that UpgradeActorsNear would need to list 5 GrantConditions into a ConditionCombiner trait which grants the actual horde bonuses BUT that'll be confusing since with UANs granting different upgrades, it sounds to me that the horde bonus ends up failing if units don't overlap each other's aura exactly and it'll lead to granting mzultiple instances of the same infhorde subupgrade - unless you intend to refactor UpgradesActorsNear to constantly lookup the grantcondition, which I doubt you would.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260205555",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260205555",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260205555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIwNTU1NQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T19:13:35Z",
    "updated_at": "2016-11-13T19:15:41Z",
    "author_association": "MEMBER",
    "body": "The following should work the same:\n\n```\n^DragonInfantry:\n    WithRankDecoration@horde:\n        Image: rank\n        Sequence: horde\n        Palette: apolred\n        ReferencePoint: Bottom, Right\n        EnableCondition: infhordea && infhordeb && infhoardec && infhorded && infhordee\n    FirepowerMultiplier@salvage:\n        EnableCondition: infhordea && infhordeb && infhoardec && infhorded && infhordee\n        Modifier: 116\n    ReloadDelayMultiplier@salvage:\n        EnableCondition: infhordea && infhordeb && infhoardec && infhorded && infhordee\n        Modifier: 87\n    UpgradeActorsNear@horde:\n        Upgrades: infhordea, infhordeb, infhoardec, infhorded, infhordee\n        AffectsParent: true\n        Range: 1c768\n```\n\nOr alternatively you could define:\n\n```\nConditionCombiner:\n    EnableCondition: infhordea && infhordeb && infhoardec && infhorded && infhordee\n    GrantCondition: infhoarde\n```\n\nif you don't like repeating the longer condition on all the consumer traits.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260205827",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260205827",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260205827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIwNTgyNw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T19:17:31Z",
    "updated_at": "2016-11-13T19:17:31Z",
    "author_association": "MEMBER",
    "body": "Actually, I missed the `WithRankDecoration`, which I assume is showing a sprite that increments as you get more nearby?  You would indeed need to use `ConditionCombiner` to define the 1-5 neighbour conditions to toggle the correct sequence.  Take a look at how the veterancy icons work in #12381.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260206999",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260206999",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260206999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIwNjk5OQ==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T19:36:59Z",
    "updated_at": "2016-11-13T19:36:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nah, WithRankDecoration is basically a WithIdleOverlay there - I don't even know why I'm using a WRD instead of a WIO. You're missing the main point here, which I'd illustrate:\n\n![hordebonus](https://cloud.githubusercontent.com/assets/1136302/20248235/e5242d7a-a9df-11e6-936a-15f795bfdfe3.png)\n\nSorry for the image being messy though, but each UAN level is shown with a different color. Red, green and blue on the left gains horde bonus. Pink is missing yellow. Yellow is missing pink but gets a second blue instead since the 6th unit assumes blue is the first level missing and itself lacks them all. How do you intend to resolve that case?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260207792",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260207792",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260207792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIwNzc5Mg==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T19:50:19Z",
    "updated_at": "2016-11-13T19:50:19Z",
    "author_association": "MEMBER",
    "body": "I'm finding it difficult to interpret your diagram, so i'll take a guess.  Do you mean: you have 6 infantry in a group, with 5 of these each granting one of infhordea - infhordee, and one not applying anything.  Moving one of these infantry away would then break the condition unless the 6th one can re-evaluate itself and grant the now-missing condition?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260208514",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260208514",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260208514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIwODUxNA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T20:00:23Z",
    "updated_at": "2016-11-13T20:00:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, that's also a good example. Both that and mine leads to possibilities when unit A needs to grant infhordea to unit B but infhordee to unit C.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260208742",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260208742",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260208742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIwODc0Mg==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T20:04:05Z",
    "updated_at": "2016-11-13T20:04:05Z",
    "author_association": "MEMBER",
    "body": "> possibilities when unit A needs to grant infhordea to unit B but infhordee to unit C.\n\nThere's no problem here.  My example where UAN-having actors move will need further thought.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260210454",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260210454",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260210454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIxMDQ1NA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T20:31:49Z",
    "updated_at": "2016-11-13T20:31:49Z",
    "author_association": "MEMBER",
    "body": "The only feasible solution will be to drop support for stacked upgrades from `UpgradeActorsNear`.\n\nYour hoarde use case was a stretch of a use case for UAN, and can be easily and more efficiently done with a new `HoardBonus` trait that uses a proximity trigger that counts compatible actors inside range and then grants a local upgrade/condition when the threshold is met.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260211828",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260211828",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260211828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIxMTgyOA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T20:50:43Z",
    "updated_at": "2016-11-13T20:50:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah yes, that's a good idea. Come to think of it, I already have such a system implemented for proximity bounty. So carry on.\n\nI know it will be a PITA to convert everything to the new system but except this case, every usecase I can think of can be resolved with really long walls of texts, so I'd say you have dealt with my \"eventual tantrum\".\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260215982",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260215982",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260215982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIxNTk4Mg==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T21:58:27Z",
    "updated_at": "2016-11-13T21:58:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I have no concerns regarding this anymore. Will take care of the update/conversion in the mods I am participating in.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260319425",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260319425",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260319425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDMxOTQyNQ==",
    "user": {
      "login": "MunWolf",
      "id": 3696546,
      "node_id": "MDQ6VXNlcjM2OTY1NDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3696546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MunWolf",
      "html_url": "https://github.com/MunWolf",
      "followers_url": "https://api.github.com/users/MunWolf/followers",
      "following_url": "https://api.github.com/users/MunWolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/MunWolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MunWolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MunWolf/subscriptions",
      "organizations_url": "https://api.github.com/users/MunWolf/orgs",
      "repos_url": "https://api.github.com/users/MunWolf/repos",
      "events_url": "https://api.github.com/users/MunWolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MunWolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-14T12:08:54Z",
    "updated_at": "2016-11-14T12:08:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "This will probably simplify a lot of the logic in the end since it is easier to wrap your head around a condition that is either on or off instead of the 2 million something levels that were possible with the current system.\n:+1: from me on this idea.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260423737",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260423737",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260423737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDQyMzczNw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-14T18:45:36Z",
    "updated_at": "2016-11-14T18:45:36Z",
    "author_association": "MEMBER",
    "body": "Timed upgrade stacking from warheads has the same issues mentioned for UAN above, so i'm going to have to drop that too.  If that's going to be a problem then we will need to think about introducing a new concept for these stackable and timed conditions that bridge to regular bool conditions on the actor.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260438974",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260438974",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260438974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDQzODk3NA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-14T19:37:45Z",
    "updated_at": "2016-11-14T19:37:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not certain what do you mean here. The `GrantCondition` list you sketched in the first post already implied dropping timed upgrade stacking, superseding them with as many values on this `GrantCondition`s list as the amount of level it had, with the additional footwork of specifying `ConditionCombiner`s for each possible combination levels.\n\nIf that's still feasible, then my previous statement regarding the adjuration still applies, it'll lead to a PITA converting timed upgrades with many levels, but still not impossible.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260440088",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260440088",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260440088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDQ0MDA4OA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-14T19:41:35Z",
    "updated_at": "2016-11-14T19:45:24Z",
    "author_association": "MEMBER",
    "body": "It has the same problem as UAN, except replace \"granting actor moves out of range\" with \"upgrade times out\".  Instead of having an upgrade go from level 1 to level 2 then back to level 1 (when the first source times out), then gone you go from fakelevel-1 + fakelevel-2, then it stays at fakelevel-2 even after the fakelevel-1 condition disappears.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260443255",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260443255",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260443255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDQ0MzI1NQ==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-14T19:52:59Z",
    "updated_at": "2016-11-14T20:16:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nGrantUpgradeWarhead:\n    GrantCondition: slowtrigger1, slowtrigger2\n    Duration: 50\n\nConditionCombiner@slow75:\n    EnableCondition: slowtrigger1 || slowtrigger2\n    GrantCondition: slow75\nConditionCombiner@slow56:\n    EnableCondition: slowtrigger1 && slowtrigger2\n    GrantCondition: slow56\nSpeedMultiplier@slow75:\n    EnableCondition: slow75\n    Modifier: 75\nSpeedMultiplier@slow56:\n    EnableCondition: slow56\n    Modifier: 56            ;56.25 with slow75 also being enabled, stacking is possible\n```\n\nAm I missing something?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260445024",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260445024",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260445024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDQ0NTAyNA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-14T19:59:12Z",
    "updated_at": "2016-11-14T19:59:12Z",
    "author_association": "MEMBER",
    "body": "Compare the final applied conditions / modifiers with the old system (levels change based on number of active upgrade instances) vs new system (conditions fixed on behaviour at impact time):\n\n```\nwarhead 1:     x  x  x  x  x  x  x  x\nwarhead 2:                 x  x  x  x  x  x  x  x\nOld system:    56 56 56 56 75 75 75 75 56 56 56 56\nNew system:    56 56 56 56 75 75 75 75 75 75 75 75\n```\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260446830",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260446830",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260446830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDQ0NjgzMA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-14T20:06:09Z",
    "updated_at": "2016-11-14T20:06:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right, I see what you mean now, but that's why my example uses intermediate ConditionCombiners and doesn't use the GUW upgrades to trigger the modifiers directly. It just needs a further level of abstraction, I don't see that as a problem.\n\nExcluding that it straight flatout denies @WolfGaming's simplicity claim, but that's acceptable.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260450874",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260450874",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260450874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDQ1MDg3NA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-14T20:21:43Z",
    "updated_at": "2016-11-14T20:31:09Z",
    "author_association": "MEMBER",
    "body": "Ah yes, now I see your point.\n\nI am still leaning towards handling this with an `ExternalCondition` trait (for lack of a better name) that bridges these outside toggles (from warheads, other actors, lua) to conditions similarly to how `GlobalUpgradable` currently bridges prerequisites to upgrades.\n\nThis has three benefits:\n- Lua, warheads, and UAN keep the same behaviour they have now, supporting stacking and time delays.\n- We can move delays out of the core upgrade/condition logic, simplifying that even further.\n- Conditions are granted and consumed entirely within the same actor, which makes it easy to lint.\n\nThe trait could look like the following for the slow warhead example:\n\n```\nExternalCondition@slow:\n    Type: slow\n    GrantCondition: slow75, slow56  # Later items in the list are activated by higher concurrent activated conditions\n```\n\nThe tradeoff here is the extra complexity that comes from having conditions vs external conditions vs prerequisites that can be bridged together and named the same but are otherwise distinct concepts.\n\nI'll need to think about this some more before I decide which approach I prefer.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/260455880",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-260455880",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 260455880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDQ1NTg4MA==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-14T20:40:16Z",
    "updated_at": "2016-11-14T20:40:16Z",
    "author_association": "MEMBER",
    "body": "Would that example grant `slow75` and `slow56`, or just the latter?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/261797392",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12380#issuecomment-261797392",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12380",
    "id": 261797392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTc5NzM5Mg==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-20T19:00:08Z",
    "updated_at": "2016-11-20T19:00:08Z",
    "author_association": "MEMBER",
    "body": "#12406 implements the `ExternalCondition` behaviour above on the `UpgradeManager` itself.\n"
  }
]
