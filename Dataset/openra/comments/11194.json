[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/214972350",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-214972350",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 214972350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDk3MjM1MA==",
    "user": {
      "login": "MustaphaTR",
      "id": 7933210,
      "node_id": "MDQ6VXNlcjc5MzMyMTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7933210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MustaphaTR",
      "html_url": "https://github.com/MustaphaTR",
      "followers_url": "https://api.github.com/users/MustaphaTR/followers",
      "following_url": "https://api.github.com/users/MustaphaTR/following{/other_user}",
      "gists_url": "https://api.github.com/users/MustaphaTR/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MustaphaTR/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MustaphaTR/subscriptions",
      "organizations_url": "https://api.github.com/users/MustaphaTR/orgs",
      "repos_url": "https://api.github.com/users/MustaphaTR/repos",
      "events_url": "https://api.github.com/users/MustaphaTR/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MustaphaTR/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-27T05:20:17Z",
    "updated_at": "2016-04-27T05:20:17Z",
    "author_association": "MEMBER",
    "body": "I don't think this is the true way to go. It may break more things than it brings. I think there should be a new tag like `UpdateOnOwnerChange:` under `ProvidesPrerequisite:`.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/215074797",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-215074797",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 215074797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTA3NDc5Nw==",
    "user": {
      "login": "abcdefg30",
      "id": 7704140,
      "node_id": "MDQ6VXNlcjc3MDQxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7704140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcdefg30",
      "html_url": "https://github.com/abcdefg30",
      "followers_url": "https://api.github.com/users/abcdefg30/followers",
      "following_url": "https://api.github.com/users/abcdefg30/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcdefg30/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcdefg30/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcdefg30/subscriptions",
      "organizations_url": "https://api.github.com/users/abcdefg30/orgs",
      "repos_url": "https://api.github.com/users/abcdefg30/repos",
      "events_url": "https://api.github.com/users/abcdefg30/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcdefg30/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-27T13:03:10Z",
    "updated_at": "2016-04-27T13:03:10Z",
    "author_association": "MEMBER",
    "body": "> I don't think this is the true way to go. It may break more things than it brings. I think there should be a new tag like  UpdateOnOwnerChange:  under  ProvidesPrerequisite: .\n\nWe already have this and it's called `ResetOnOwnerChange`. The main problem here is probably that the `ParatroopersPower`s don't get \"notified\" about the now different prerequisites due to the different factions (same also happens for other things using prerequisites).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/215115322",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-215115322",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 215115322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTExNTMyMg==",
    "user": {
      "login": "abcdefg30",
      "id": 7704140,
      "node_id": "MDQ6VXNlcjc3MDQxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7704140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcdefg30",
      "html_url": "https://github.com/abcdefg30",
      "followers_url": "https://api.github.com/users/abcdefg30/followers",
      "following_url": "https://api.github.com/users/abcdefg30/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcdefg30/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcdefg30/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcdefg30/subscriptions",
      "organizations_url": "https://api.github.com/users/abcdefg30/orgs",
      "repos_url": "https://api.github.com/users/abcdefg30/repos",
      "events_url": "https://api.github.com/users/abcdefg30/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcdefg30/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-27T15:12:34Z",
    "updated_at": "2016-04-27T15:12:34Z",
    "author_association": "MEMBER",
    "body": "Updated.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/215956965",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-215956965",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 215956965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTk1Njk2NQ==",
    "user": {
      "login": "abcdefg30",
      "id": 7704140,
      "node_id": "MDQ6VXNlcjc3MDQxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7704140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcdefg30",
      "html_url": "https://github.com/abcdefg30",
      "followers_url": "https://api.github.com/users/abcdefg30/followers",
      "following_url": "https://api.github.com/users/abcdefg30/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcdefg30/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcdefg30/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcdefg30/subscriptions",
      "organizations_url": "https://api.github.com/users/abcdefg30/orgs",
      "repos_url": "https://api.github.com/users/abcdefg30/repos",
      "events_url": "https://api.github.com/users/abcdefg30/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcdefg30/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-30T11:19:21Z",
    "updated_at": "2016-04-30T11:19:21Z",
    "author_association": "MEMBER",
    "body": "Updated. Now I moved adding the captured actor back to world to after the `INotifyOwnerChanged` callbacks have run as suggested by @pchote.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/215975872",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-215975872",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 215975872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTk3NTg3Mg==",
    "user": {
      "login": "yaaaaa",
      "id": 11130958,
      "node_id": "MDQ6VXNlcjExMTMwOTU4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11130958?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yaaaaa",
      "html_url": "https://github.com/yaaaaa",
      "followers_url": "https://api.github.com/users/yaaaaa/followers",
      "following_url": "https://api.github.com/users/yaaaaa/following{/other_user}",
      "gists_url": "https://api.github.com/users/yaaaaa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yaaaaa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yaaaaa/subscriptions",
      "organizations_url": "https://api.github.com/users/yaaaaa/orgs",
      "repos_url": "https://api.github.com/users/yaaaaa/repos",
      "events_url": "https://api.github.com/users/yaaaaa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yaaaaa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-30T16:11:59Z",
    "updated_at": "2016-04-30T16:11:59Z",
    "author_association": "NONE",
    "body": "maybe...\nIf it captured by soviet engineer -> it give a soviet paradroopers\nIf it captured by allied engineer -> it give a allied paradroopers\n???\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/216032319",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-216032319",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 216032319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjAzMjMxOQ==",
    "user": {
      "login": "abcdefg30",
      "id": 7704140,
      "node_id": "MDQ6VXNlcjc3MDQxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7704140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcdefg30",
      "html_url": "https://github.com/abcdefg30",
      "followers_url": "https://api.github.com/users/abcdefg30/followers",
      "following_url": "https://api.github.com/users/abcdefg30/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcdefg30/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcdefg30/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcdefg30/subscriptions",
      "organizations_url": "https://api.github.com/users/abcdefg30/orgs",
      "repos_url": "https://api.github.com/users/abcdefg30/repos",
      "events_url": "https://api.github.com/users/abcdefg30/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcdefg30/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-01T10:04:25Z",
    "updated_at": "2016-05-01T10:04:25Z",
    "author_association": "MEMBER",
    "body": "> maybe...\n>  If it captured by soviet engineer -> it give a soviet paradroopers\n>  If it captured by allied engineer -> it give a allied paradroopers\n>  ???\n\nRA2 doesn't differentiate between allied and soviet engineer. Anyway, going the way you suggested would need more code changes and Imho it's better to fix the existing logic than creating new.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/216045524",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-216045524",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 216045524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjA0NTUyNA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-01T14:36:15Z",
    "updated_at": "2016-05-01T14:36:15Z",
    "author_association": "MEMBER",
    "body": "Have you looked over all of the `OnOwnerChanged` implementations to make sure that there aren't any other regressions hiding in them?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/216051781",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-216051781",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 216051781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjA1MTc4MQ==",
    "user": {
      "login": "MustaphaTR",
      "id": 7933210,
      "node_id": "MDQ6VXNlcjc5MzMyMTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7933210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MustaphaTR",
      "html_url": "https://github.com/MustaphaTR",
      "followers_url": "https://api.github.com/users/MustaphaTR/followers",
      "following_url": "https://api.github.com/users/MustaphaTR/following{/other_user}",
      "gists_url": "https://api.github.com/users/MustaphaTR/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MustaphaTR/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MustaphaTR/subscriptions",
      "organizations_url": "https://api.github.com/users/MustaphaTR/orgs",
      "repos_url": "https://api.github.com/users/MustaphaTR/repos",
      "events_url": "https://api.github.com/users/MustaphaTR/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MustaphaTR/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-01T15:59:24Z",
    "updated_at": "2016-05-01T15:59:24Z",
    "author_association": "MEMBER",
    "body": "> Have you looked over all of the OnOwnerChanged implementations to make sure that there aren't any other regressions hiding in them?\n\nThat is what i'm afraid of. For example RA1 WFac/Cyards. They are same building with side specific prerequisites. So capturing them from other side should give their Vehicles/Buildings, not our own. I think i need to check.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/216051994",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-216051994",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 216051994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjA1MTk5NA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-01T16:03:48Z",
    "updated_at": "2016-05-01T16:03:56Z",
    "author_association": "MEMBER",
    "body": "That is unrelated to my question.  I suggest you read through the `ProvidesPrerequisite` trait so you can see how race-specific tech works.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/216053917",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-216053917",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 216053917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjA1MzkxNw==",
    "user": {
      "login": "MustaphaTR",
      "id": 7933210,
      "node_id": "MDQ6VXNlcjc5MzMyMTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7933210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MustaphaTR",
      "html_url": "https://github.com/MustaphaTR",
      "followers_url": "https://api.github.com/users/MustaphaTR/followers",
      "following_url": "https://api.github.com/users/MustaphaTR/following{/other_user}",
      "gists_url": "https://api.github.com/users/MustaphaTR/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MustaphaTR/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MustaphaTR/subscriptions",
      "organizations_url": "https://api.github.com/users/MustaphaTR/orgs",
      "repos_url": "https://api.github.com/users/MustaphaTR/repos",
      "events_url": "https://api.github.com/users/MustaphaTR/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MustaphaTR/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-01T16:32:00Z",
    "updated_at": "2016-05-01T16:37:31Z",
    "author_association": "MEMBER",
    "body": "Whatever, this looks like working fine. I think i shouldn't mess with code changes.\n\nEdit: But i'm still not sure if this is the correct way. Doesn't `ResetOnOwnerChange` do what we are tring to achieve here.\n\n> We already have this and it's called ResetOnOwnerChange. The main problem here is probably that the ParatroopersPowers don't get \"notified\" about the now different prerequisites due to the different factions (same also happens for other things using prerequisites).\n\nWhat i understand from these sentences is it doesn't work as supposed, so fix it.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/216070663",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-216070663",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 216070663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjA3MDY2Mw==",
    "user": {
      "login": "abcdefg30",
      "id": 7704140,
      "node_id": "MDQ6VXNlcjc3MDQxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7704140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcdefg30",
      "html_url": "https://github.com/abcdefg30",
      "followers_url": "https://api.github.com/users/abcdefg30/followers",
      "following_url": "https://api.github.com/users/abcdefg30/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcdefg30/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcdefg30/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcdefg30/subscriptions",
      "organizations_url": "https://api.github.com/users/abcdefg30/orgs",
      "repos_url": "https://api.github.com/users/abcdefg30/repos",
      "events_url": "https://api.github.com/users/abcdefg30/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcdefg30/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-01T20:41:09Z",
    "updated_at": "2016-05-01T20:41:09Z",
    "author_association": "MEMBER",
    "body": "> Have you looked over all of the `OnOwnerChanged` implementations to make sure that there aren't any other regressions hiding in them?\n\nI should have covered all. (But you can never be sure, can you? Especially as I'm derping all the time. :p)\n\n> What i understand from these sentences is it doesn't work as supposed, so fix it.\n\nYep, that's what we're doing here.\nTo summarize it again (for others that don't want to read through all comments):\n- When capturing an actor two things that interest us are happening (in this order): a) The actor gets removed from world and then readded. Here the `TechTree` refreshes. b) The `INotifyOwnerChanged` callback runs.\n- Now, when the callback runs, the prerequiste granted by `ProvidesPrerequisite` is updated. The `TechTree` is _not_ refreshed again.\n- To \"fix\" that, @pchote suggested to move adding the actor back to world to _after_ the callback ran. So now the `TechTree` gets refreshed (during `AddedToWorld`) after `ProvidesPrerequisite` updated its prerequisite.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/216115718",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-216115718",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 216115718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjExNTcxOA==",
    "user": {
      "login": "MustaphaTR",
      "id": 7933210,
      "node_id": "MDQ6VXNlcjc5MzMyMTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7933210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MustaphaTR",
      "html_url": "https://github.com/MustaphaTR",
      "followers_url": "https://api.github.com/users/MustaphaTR/followers",
      "following_url": "https://api.github.com/users/MustaphaTR/following{/other_user}",
      "gists_url": "https://api.github.com/users/MustaphaTR/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MustaphaTR/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MustaphaTR/subscriptions",
      "organizations_url": "https://api.github.com/users/MustaphaTR/orgs",
      "repos_url": "https://api.github.com/users/MustaphaTR/repos",
      "events_url": "https://api.github.com/users/MustaphaTR/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MustaphaTR/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T06:27:31Z",
    "updated_at": "2016-05-02T07:00:53Z",
    "author_association": "MEMBER",
    "body": "Got it. The file that fixes is in fooled me a bit. I tought problem is in `ProvidesPrerequisite` not `Actor`. I think we need changes over RA2 mod yamls too. This doesn't sound like will fix it alone to me.\n\nAlso, can `Player:` actor provide prerequisite? If yes, i think using it instead of `structure.xxx` may also fix the issue. It already has `ProvidesTechPrerequisite:` on it, but i don't think its same thing. But this may be a hacky aproach. Just asking, your fix is fine.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/222308098",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-222308098",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 222308098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjMwODA5OA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-28T13:16:58Z",
    "updated_at": "2016-05-28T13:16:58Z",
    "author_association": "MEMBER",
    "body": "Looks good to me :+1:\n\nI went through the `INotifyOwnerChanged` implementations and didn't find any other cases that I expect to break with this change.\n\nI did notice, however, that capturing a transport will rewrite Owner directly instead of using ChangeOwner (which will then break any traits that rely on the owner change callback).  That's a different bug for a different PR.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/222373242",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-222373242",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 222373242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjM3MzI0Mg==",
    "user": {
      "login": "obrakmann",
      "id": 4331210,
      "node_id": "MDQ6VXNlcjQzMzEyMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4331210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obrakmann",
      "html_url": "https://github.com/obrakmann",
      "followers_url": "https://api.github.com/users/obrakmann/followers",
      "following_url": "https://api.github.com/users/obrakmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/obrakmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obrakmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obrakmann/subscriptions",
      "organizations_url": "https://api.github.com/users/obrakmann/orgs",
      "repos_url": "https://api.github.com/users/obrakmann/repos",
      "events_url": "https://api.github.com/users/obrakmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obrakmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-29T17:49:07Z",
    "updated_at": "2016-05-29T17:49:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks ok, :+1: \n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/222375415",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11194#issuecomment-222375415",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11194",
    "id": 222375415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjM3NTQxNQ==",
    "user": {
      "login": "obrakmann",
      "id": 4331210,
      "node_id": "MDQ6VXNlcjQzMzEyMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4331210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obrakmann",
      "html_url": "https://github.com/obrakmann",
      "followers_url": "https://api.github.com/users/obrakmann/followers",
      "following_url": "https://api.github.com/users/obrakmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/obrakmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obrakmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obrakmann/subscriptions",
      "organizations_url": "https://api.github.com/users/obrakmann/orgs",
      "repos_url": "https://api.github.com/users/obrakmann/repos",
      "events_url": "https://api.github.com/users/obrakmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obrakmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-29T18:32:04Z",
    "updated_at": "2016-05-29T18:32:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "[Changelog](https://github.com/OpenRA/OpenRA/wiki/Changelog-%28bleed%29/_compare/25f95c135d7ed9287b6452b6ff3c0c0c36235178)\n"
  }
]
