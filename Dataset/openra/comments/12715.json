[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/277881016",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12715#issuecomment-277881016",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12715",
    "id": 277881016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Nzg4MTAxNg==",
    "user": {
      "login": "Smittytron",
      "id": 23546299,
      "node_id": "MDQ6VXNlcjIzNTQ2Mjk5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/23546299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Smittytron",
      "html_url": "https://github.com/Smittytron",
      "followers_url": "https://api.github.com/users/Smittytron/followers",
      "following_url": "https://api.github.com/users/Smittytron/following{/other_user}",
      "gists_url": "https://api.github.com/users/Smittytron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Smittytron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Smittytron/subscriptions",
      "organizations_url": "https://api.github.com/users/Smittytron/orgs",
      "repos_url": "https://api.github.com/users/Smittytron/repos",
      "events_url": "https://api.github.com/users/Smittytron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Smittytron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T02:19:07Z",
    "updated_at": "2017-02-07T02:19:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe this is the same issue that cost Medium Tank in the King of the Hill Tournament vs Lorrydriver.\r\nhttps://www.twitch.tv/videos/117999892 (truck gets stuck around 3:33:30 after a lag spike)"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/277884211",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12715#issuecomment-277884211",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12715",
    "id": 277884211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Nzg4NDIxMQ==",
    "user": {
      "login": "forcecore",
      "id": 632278,
      "node_id": "MDQ6VXNlcjYzMjI3OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/632278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/forcecore",
      "html_url": "https://github.com/forcecore",
      "followers_url": "https://api.github.com/users/forcecore/followers",
      "following_url": "https://api.github.com/users/forcecore/following{/other_user}",
      "gists_url": "https://api.github.com/users/forcecore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/forcecore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/forcecore/subscriptions",
      "organizations_url": "https://api.github.com/users/forcecore/orgs",
      "repos_url": "https://api.github.com/users/forcecore/repos",
      "events_url": "https://api.github.com/users/forcecore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/forcecore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T02:40:11Z",
    "updated_at": "2017-02-07T02:48:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like it. Wow. Experienced players do actually get this bug. Manual dock order to the refinery should get it sorted out. I wonder if he kept clicking on the ore. In that case it will never get out of this activity loop. (alternatively the player can tell the truck to move out of the dock then issue the mining order, has happened in the stream)"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/278115477",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12715#issuecomment-278115477",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12715",
    "id": 278115477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODExNTQ3Nw==",
    "user": {
      "login": "forcecore",
      "id": 632278,
      "node_id": "MDQ6VXNlcjYzMjI3OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/632278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/forcecore",
      "html_url": "https://github.com/forcecore",
      "followers_url": "https://api.github.com/users/forcecore/followers",
      "following_url": "https://api.github.com/users/forcecore/following{/other_user}",
      "gists_url": "https://api.github.com/users/forcecore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/forcecore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/forcecore/subscriptions",
      "organizations_url": "https://api.github.com/users/forcecore/orgs",
      "repos_url": "https://api.github.com/users/forcecore/repos",
      "events_url": "https://api.github.com/users/forcecore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/forcecore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T19:36:02Z",
    "updated_at": "2017-02-07T19:37:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "A quick and dirty fix is to return a dummy activity sequencing when the harvester is already at the dock:\r\n\r\n\tif (self.Location ==  proc.Location + iao.DeliveryOffset)\r\n    {\r\n        return ActivityUtils.SequenceActivities(new Wait(5), this);\r\n    }\r\n    else\r\n\t{\r\n\t\tvar notify = self.TraitsImplementing<INotifyHarvesterAction>();\r\n\t\tforeach (var n in notify)\r\n\t\t\tn.MovingToRefinery(self, dest, this);\r\n\r\n\t\treturn ActivityUtils.SequenceActivities(movement.MoveTo(dest, 0), this);\r\n\t}\r\n\r\nStill I don't understand what is really happening when ActivityUtils.SequenceActivities is called. What happenes to the actions queued by iao.OnDock()? iao.OnDock() queues 3 actions successfully but they never get to tick() unless I have \"return ActivityUtils.SequenceActivities()\" called before reaching iao.OnDock()."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/279141556",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12715#issuecomment-279141556",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12715",
    "id": 279141556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTE0MTU1Ng==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-11T12:42:52Z",
    "updated_at": "2017-02-11T12:42:52Z",
    "author_association": "MEMBER",
    "body": "This bug has existed for a long time, and is one of the many broken activity cancelling bugs that @obrakmann's activity refactor is aiming to fix.\r\n\r\n`DeliverResources` enters the `if (!isDocking)` branch, sets `isDocking` to true, and then queues the docking activities.  Issuing the harvest order somehow (I haven't dug deep enough to work out exactly how) overrides the activity queue to remove the docking activies without cancelling them, but keeps the `DeliverResources` active with `isDocking` true.  `DeliverResources` then ends up stuck in a loop where it waits forever for the docking that no longer exists to complete."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/279141603",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12715#issuecomment-279141603",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12715",
    "id": 279141603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTE0MTYwMw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-11T12:43:42Z",
    "updated_at": "2017-02-11T12:43:42Z",
    "author_association": "MEMBER",
    "body": "I'm going to remove this from the milestone because it's old and does not have a simple fix."
  }
]
