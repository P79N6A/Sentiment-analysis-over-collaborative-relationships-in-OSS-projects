[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/471324731",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/16052#issuecomment-471324731",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/16052",
    "id": 471324731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTMyNDczMQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-10T17:11:55Z",
    "updated_at": "2019-03-10T17:11:55Z",
    "author_association": "MEMBER",
    "body": "Can you please outline a testcase that demonstrates the issue and fix?"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/471325425",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/16052#issuecomment-471325425",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/16052",
    "id": 471325425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTMyNTQyNQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-10T17:20:03Z",
    "updated_at": "2019-03-10T17:20:03Z",
    "author_association": "MEMBER",
    "body": "From the IRC logs:\r\n\r\n> [20:29:00] | &lt;jrb0001&gt;  pchote: but I found the real issue now. those pong orders can sometimes  be attached to a frame and thus replace the client orders with a server  order. this caused the freeze because my implementation doesn't forward  server orders from client to client (why should it? it's called \"server  order\" and not \"client order\" for a reason, I assumed).\r\n\r\n> [21:46:42] | &lt;jrb0001&gt;  no, the server doesn't tell the clients anything like that except for  the StartGame ServerOrder. the clients wait themselves until they have  one order from each client before running a tick.\r\n> [21:48:12] | &lt;pchote&gt; this is the whole job of the server\r\n> [21:48:19] | &lt;pchote&gt; it collects orders from clients, and then forwards them on\r\n> [21:48:35] | &lt;jrb0001&gt;  or if it does, then it isn't needed. my implementation doesn't forwards  orders as soon as they arrive and because it is a distributed system,  there isn't even a global ordering.\r\n\r\nCan you please provide a link to your server source so we can understand this in more detail?"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/471357152",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/16052#issuecomment-471357152",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/16052",
    "id": 471357152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTM1NzE1Mg==",
    "user": {
      "login": "jrb0001",
      "id": 2380263,
      "node_id": "MDQ6VXNlcjIzODAyNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2380263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrb0001",
      "html_url": "https://github.com/jrb0001",
      "followers_url": "https://api.github.com/users/jrb0001/followers",
      "following_url": "https://api.github.com/users/jrb0001/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrb0001/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrb0001/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrb0001/subscriptions",
      "organizations_url": "https://api.github.com/users/jrb0001/orgs",
      "repos_url": "https://api.github.com/users/jrb0001/repos",
      "events_url": "https://api.github.com/users/jrb0001/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrb0001/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-10T21:46:18Z",
    "updated_at": "2019-03-10T21:46:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "The server sends PingOrders in the lobby but also while playing. But because the official server doesn't do anything if it doesn't receive the PongOrders while playing (it actually receives them but ignores them due to another bug/strange assumption), you will never notice it. My implementation detects server orders slightly differently which caused it to detect the server order PDU with client orders in it as a regular server orders and thus didn't forward anything to the clients. This caused the game to freeze usually at tick 9 (sometimes around tick 100).\r\n\r\nThere are two differences in between server orders and client orders besides the name (some string) and the actual payload. The type field contains 0xFE for a server order PDU and 0xFF for a client order PDU (0xBF would be a disconnect PDU and 0x65 would be a sync PDU). If the type field is missing (see length field), then it is an empty client order PDU. There is also a tick field which is needed for client orders, disconnect and sync PDUs. It is currently always set to 0 when sending a server order (not really relevant for chat messages and stuff like that).\r\n\r\nIf server and client orders can end up in the same PDU (like they do at the moment), then the type field is obviously meaningless. The first commit splits immediate orders and regular orders into separate PDUs and the second commit splits all immediate orders into separate PDUs. The former is needed to avoid attaching immediate orders to a tick. The latter should make it robust in case some new type of \"immediate client order\" gets introduced in the future and also removes a very rare corner case from the protocol completely so that servers don't have to handle it.\r\n\r\nMy git server isn't public but I will try to attach a dump of the current code. But be warned that it is overly complex because it is designed to scale across multiple servers (mostly to reduce latency) and also partly because I used it to learn a new framework. Due to the way how the master server protocol works, the scaling requires anycasting which would be fine for UDP and short TCP connections, but isn't that great for OpenRA. This caused issues for some of the players where their ISP most likely did some sort of ECMP which is why I will drop the scaling functionality in the next rewrite/overhaul. It has some additional checks exactly for this bug and disconnect you with a link to this bug if you run into it (usually tick 9 or around tick 100) so you can use it as a testcase, if you want.\r\n\r\n[ora-server.tar.gz](https://github.com/OpenRA/OpenRA/files/2950100/ora-server.tar.gz)"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/475533375",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/16052#issuecomment-475533375",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/16052",
    "id": 475533375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTUzMzM3NQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-22T08:28:54Z",
    "updated_at": "2019-03-22T08:28:54Z",
    "author_association": "MEMBER",
    "body": "Thanks for the description and the code.  I haven't forgotten about this, I just haven't had the time to dig into both your and OpenRA's code to start to understand this."
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/475696465",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/16052#issuecomment-475696465",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/16052",
    "id": 475696465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTY5NjQ2NQ==",
    "user": {
      "login": "jrb0001",
      "id": 2380263,
      "node_id": "MDQ6VXNlcjIzODAyNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2380263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrb0001",
      "html_url": "https://github.com/jrb0001",
      "followers_url": "https://api.github.com/users/jrb0001/followers",
      "following_url": "https://api.github.com/users/jrb0001/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrb0001/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrb0001/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrb0001/subscriptions",
      "organizations_url": "https://api.github.com/users/jrb0001/orgs",
      "repos_url": "https://api.github.com/users/jrb0001/repos",
      "events_url": "https://api.github.com/users/jrb0001/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrb0001/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-22T16:53:27Z",
    "updated_at": "2019-03-22T16:53:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "This has been in AS (and thus SP and RV) for two months now and I didn't get a single complaint. That should hopefully solve all regression testing needs unless you have some very specific cases in mind."
  }
]
