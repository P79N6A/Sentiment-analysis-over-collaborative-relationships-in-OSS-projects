[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/138165629",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9297#issuecomment-138165629",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9297",
    "id": 138165629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODE2NTYyOQ==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T02:49:05Z",
    "updated_at": "2015-09-07T02:49:05Z",
    "author_association": "MEMBER",
    "body": "Could you please reword this? I can't make any sense of it.\n\n> A solution for keeping the ranges in sync would be to have negative a range in CreatesShroud mean use range from RevealsShroud.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/138170516",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9297#issuecomment-138170516",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9297",
    "id": 138170516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODE3MDUxNg==",
    "user": {
      "login": "atlimit8",
      "id": 4957137,
      "node_id": "MDQ6VXNlcjQ5NTcxMzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4957137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atlimit8",
      "html_url": "https://github.com/atlimit8",
      "followers_url": "https://api.github.com/users/atlimit8/followers",
      "following_url": "https://api.github.com/users/atlimit8/following{/other_user}",
      "gists_url": "https://api.github.com/users/atlimit8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atlimit8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atlimit8/subscriptions",
      "organizations_url": "https://api.github.com/users/atlimit8/orgs",
      "repos_url": "https://api.github.com/users/atlimit8/repos",
      "events_url": "https://api.github.com/users/atlimit8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atlimit8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T03:27:28Z",
    "updated_at": "2015-09-07T03:27:28Z",
    "author_association": "MEMBER",
    "body": "Wording slightly changed and example added.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/138183318",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9297#issuecomment-138183318",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9297",
    "id": 138183318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODE4MzMxOA==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T04:17:56Z",
    "updated_at": "2015-09-07T04:17:56Z",
    "author_association": "MEMBER",
    "body": "What should happen if an actor `CreatesShroud` but doesn't `RevealsShroud` and gives `-1`?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/138183473",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9297#issuecomment-138183473",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9297",
    "id": 138183473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODE4MzQ3Mw==",
    "user": {
      "login": "atlimit8",
      "id": 4957137,
      "node_id": "MDQ6VXNlcjQ5NTcxMzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4957137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atlimit8",
      "html_url": "https://github.com/atlimit8",
      "followers_url": "https://api.github.com/users/atlimit8/followers",
      "following_url": "https://api.github.com/users/atlimit8/following{/other_user}",
      "gists_url": "https://api.github.com/users/atlimit8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atlimit8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atlimit8/subscriptions",
      "organizations_url": "https://api.github.com/users/atlimit8/orgs",
      "repos_url": "https://api.github.com/users/atlimit8/repos",
      "events_url": "https://api.github.com/users/atlimit8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atlimit8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T04:21:06Z",
    "updated_at": "2015-09-07T04:21:06Z",
    "author_association": "MEMBER",
    "body": "Not sure, either default to 0 or report an error.\nPerhaps the best solution would be to default to 0, but have `OpenRA.Utility.exe`_mod_`--check-yaml` report an error.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/138219776",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9297#issuecomment-138219776",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9297",
    "id": 138219776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODIxOTc3Ng==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T07:55:38Z",
    "updated_at": "2015-09-07T07:55:38Z",
    "author_association": "MEMBER",
    "body": "The two traits share the same plumbing, but their functionality is separate.  Linking the ranges of the traits would be a bad idea.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/138220241",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9297#issuecomment-138220241",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9297",
    "id": 138220241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODIyMDI0MQ==",
    "user": {
      "login": "atlimit8",
      "id": 4957137,
      "node_id": "MDQ6VXNlcjQ5NTcxMzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4957137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atlimit8",
      "html_url": "https://github.com/atlimit8",
      "followers_url": "https://api.github.com/users/atlimit8/followers",
      "following_url": "https://api.github.com/users/atlimit8/following{/other_user}",
      "gists_url": "https://api.github.com/users/atlimit8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atlimit8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atlimit8/subscriptions",
      "organizations_url": "https://api.github.com/users/atlimit8/orgs",
      "repos_url": "https://api.github.com/users/atlimit8/repos",
      "events_url": "https://api.github.com/users/atlimit8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atlimit8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T07:57:16Z",
    "updated_at": "2015-09-07T07:57:16Z",
    "author_association": "MEMBER",
    "body": "OK, then they should be completely separated.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/138228114",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9297#issuecomment-138228114",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9297",
    "id": 138228114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODIyODExNA==",
    "user": {
      "login": "atlimit8",
      "id": 4957137,
      "node_id": "MDQ6VXNlcjQ5NTcxMzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4957137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atlimit8",
      "html_url": "https://github.com/atlimit8",
      "followers_url": "https://api.github.com/users/atlimit8/followers",
      "following_url": "https://api.github.com/users/atlimit8/following{/other_user}",
      "gists_url": "https://api.github.com/users/atlimit8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atlimit8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atlimit8/subscriptions",
      "organizations_url": "https://api.github.com/users/atlimit8/orgs",
      "repos_url": "https://api.github.com/users/atlimit8/repos",
      "events_url": "https://api.github.com/users/atlimit8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atlimit8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T08:15:37Z",
    "updated_at": "2015-09-10T18:17:01Z",
    "author_association": "MEMBER",
    "body": "@pchote upon rereading, I wonder if you think that they are currently separate. As mentioned above, `CreatesShroud` **currently** derives from `RevealsShroud`:\n\n``` c#\n    public class CreatesShroud : RevealsShroud\n    {\n        public CreatesShroud(Actor self, CreatesShroudInfo info)\n            : base(self, info)\n        {\n```\n\nI'm proposing that that be change to:\n\n``` c#\n    public class CreatesShroud : AffectsShroud\n    {\n        public CreatesShroud(Actor self, CreatesShroudInfo info)\n            : base(self, info)\n        {\n```\n\nwhere `AffectsShroud` is an absract base class for `RevealsShroud` & `CreatesShroud`.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/138236706",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9297#issuecomment-138236706",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9297",
    "id": 138236706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODIzNjcwNg==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T08:38:25Z",
    "updated_at": "2015-09-07T08:38:25Z",
    "author_association": "MEMBER",
    "body": "I know that CreatesShroud derives from RevealsShroud - I was responding to the wording of your first post, which sounds like you were thinking that this derivation implies that the CreatesShroud trait also reveals shroud (it doesn't).\n\nYou could split the plumbing into a base class and then have two stub classes that inherit it, but I don't see the need.  We are not going to have more than the current two traits that use it.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/138236753",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9297#issuecomment-138236753",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9297",
    "id": 138236753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODIzNjc1Mw==",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T08:38:42Z",
    "updated_at": "2015-09-07T08:38:42Z",
    "author_association": "MEMBER",
    "body": "Those two use the same code to do completely different things. Copying all that code from `RevealsShroud` to `CreatesShroud` just to remove the inheritance is a \"no\". A common base abstract class like `AffectsShroud` would be fine, but doesn't sound like it's worth it. Or maybe it could make the idea easier to understand to new readers?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/138238508",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9297#issuecomment-138238508",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9297",
    "id": 138238508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODIzODUwOA==",
    "user": {
      "login": "atlimit8",
      "id": 4957137,
      "node_id": "MDQ6VXNlcjQ5NTcxMzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4957137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atlimit8",
      "html_url": "https://github.com/atlimit8",
      "followers_url": "https://api.github.com/users/atlimit8/followers",
      "following_url": "https://api.github.com/users/atlimit8/following{/other_user}",
      "gists_url": "https://api.github.com/users/atlimit8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atlimit8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atlimit8/subscriptions",
      "organizations_url": "https://api.github.com/users/atlimit8/orgs",
      "repos_url": "https://api.github.com/users/atlimit8/repos",
      "events_url": "https://api.github.com/users/atlimit8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atlimit8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T08:45:27Z",
    "updated_at": "2015-09-07T08:45:27Z",
    "author_association": "MEMBER",
    "body": "It seems wrong to have `CreatesShroud` \"is a\" (inherit from) `RevealsShroud` when `CreatesShroud` (conceptually) is _not_ a `RevealsShroud`. I'm leaning towards creating `AffectsShroud` in `OpenRA.Mods.Common/Traits/RevealsShroud.cs` since that is the smallest remedy.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/138243053",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9297#issuecomment-138243053",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9297",
    "id": 138243053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODI0MzA1Mw==",
    "user": {
      "login": "atlimit8",
      "id": 4957137,
      "node_id": "MDQ6VXNlcjQ5NTcxMzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4957137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atlimit8",
      "html_url": "https://github.com/atlimit8",
      "followers_url": "https://api.github.com/users/atlimit8/followers",
      "following_url": "https://api.github.com/users/atlimit8/following{/other_user}",
      "gists_url": "https://api.github.com/users/atlimit8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atlimit8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atlimit8/subscriptions",
      "organizations_url": "https://api.github.com/users/atlimit8/orgs",
      "repos_url": "https://api.github.com/users/atlimit8/repos",
      "events_url": "https://api.github.com/users/atlimit8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atlimit8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T08:57:02Z",
    "updated_at": "2015-09-07T08:57:02Z",
    "author_association": "MEMBER",
    "body": "It could, in theory, cause problems in the future if code fetches `RevealsShroud` expecting it to mean the actor reveals shroud, or at least that the range is how much shroud is revealed. Reading subclasses shouldn't be required to know how (most) classes function and especially their purpose - `RevealsShroud` serves both to provide reveals shroud behaviour and as a base for `CreatesShroud` which serves a different purpose.\n\nI agree with @penev92 that someone new could may not understand it. In fact, they probably wouldn't look at `CreatesShroud` if they're concerned with revealing shroud behaviour but not shroud creation behaviour.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/138247845",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9297#issuecomment-138247845",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9297",
    "id": 138247845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODI0Nzg0NQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T09:18:32Z",
    "updated_at": "2015-09-07T09:18:32Z",
    "author_association": "MEMBER",
    "body": "> It could, in theory, cause problems in the future if code fetches `RevealsShroud` expecting it to mean the actor reveals shroud, or at least that the range is how much shroud is revealed.\n\nThis is a good point, and more than enough justification by itself to split out an `AffectsShroud` base class.\n"
  }
]
