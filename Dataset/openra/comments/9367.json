[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/143291230",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9367#issuecomment-143291230",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9367",
    "id": 143291230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzI5MTIzMA==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-25T17:14:39Z",
    "updated_at": "2015-09-25T17:14:39Z",
    "author_association": "MEMBER",
    "body": "Do you have any thoughts on how we handle changes to the world state whilst such calculations are being done?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/143311642",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9367#issuecomment-143311642",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9367",
    "id": 143311642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzMxMTY0Mg==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-25T18:12:10Z",
    "updated_at": "2015-09-25T18:13:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not generally speaking, no.\n\nWhat I had in mind for cases where it's applicable was something similar to what I did in #9370, but then do the first smaller-radius scan on first tick and only if that fails, scan the outer annulus on 2nd tick (maybe with some minor overlap to avoid moving actors \"slipping through\"). That way, even in a worst-case scenario where both checks combined are more expensive than a single large check due to overhead, the performance impact per tick and therefore potential lag spikes should be lower, and best-case the first check succeeds and we can avoid the 2nd check completely.\n\nI haven't really investigated whether there are that many suitable candidates, though (the AI might need some refactoring before this can be applied to attack decisions, for example).\n"
  }
]
