[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/251193830",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12163#issuecomment-251193830",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12163",
    "id": 251193830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTE5MzgzMA==",
    "user": {
      "login": "LipkeGu",
      "id": 2057932,
      "node_id": "MDQ6VXNlcjIwNTc5MzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2057932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LipkeGu",
      "html_url": "https://github.com/LipkeGu",
      "followers_url": "https://api.github.com/users/LipkeGu/followers",
      "following_url": "https://api.github.com/users/LipkeGu/following{/other_user}",
      "gists_url": "https://api.github.com/users/LipkeGu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LipkeGu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LipkeGu/subscriptions",
      "organizations_url": "https://api.github.com/users/LipkeGu/orgs",
      "repos_url": "https://api.github.com/users/LipkeGu/repos",
      "events_url": "https://api.github.com/users/LipkeGu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LipkeGu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-03T18:57:23Z",
    "updated_at": "2016-10-03T19:03:03Z",
    "author_association": "MEMBER",
    "body": "How about a generic function, where we can pass filenames without offsets and the function does the rest? We could reuse them in the Installer and Utility.\n\nsomething like\n\n```\nvoid ExtractFileFromPackage(string filename)\n{\n<Code that gets the offset and length for the File that we want to extract from the Package-File (Mix)>\n<Extract the file>\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/251654532",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12163#issuecomment-251654532",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12163",
    "id": 251654532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTY1NDUzMg==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-05T11:58:43Z",
    "updated_at": "2016-10-05T11:58:43Z",
    "author_association": "MEMBER",
    "body": "Is this implicitly asking for the packaged to be downloaded from an entry in `MirrorList` as well as extraction?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/251753368",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/12163#issuecomment-251753368",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/12163",
    "id": 251753368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTc1MzM2OA==",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-05T18:09:35Z",
    "updated_at": "2016-10-05T18:09:35Z",
    "author_association": "MEMBER",
    "body": "> How about a generic function, where we can pass filenames without offsets and the function does the rest?\n\nWe already have that with `--extract`. What I think about is about what the mod chooser GUI does, but exposed to the command line.\n"
  }
]
