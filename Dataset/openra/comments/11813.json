[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/239447749",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/11813#issuecomment-239447749",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11813",
    "id": 239447749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQ0Nzc0OQ==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T13:35:48Z",
    "updated_at": "2016-08-12T13:41:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd say consider the possibility to change everything with private access to protected instead (atleast in Traits). That would allow downstream direct modifications to Common code through derived classes without actual direct modifications in Common code.\n\nIt was just yesterday when I wanted to make a `RefineryRA2` trait to implement the Ore Purifier (without dwelving into the IMO-still messy plans of multiple resources) by simply overriding `Refinery.GiveResource` but turned out that I can't do that without copying the whole trait because `Refinery.currentDisplayValue` is a private variable and I'd lose the refinery ticks if I can't update that one.\n\nI'm not against this but I don't think this is a good solution to the problem either.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/239450504",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/11813#issuecomment-239450504",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11813",
    "id": 239450504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQ1MDUwNA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T13:47:14Z",
    "updated_at": "2016-08-12T13:47:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another thing to consider, that we are quite low on reviewers already, and this Unsupported dll would just make that issue worse. I mean, I have a PR in the queue since May which I'm constantly updating but it didn't got even a single :+1: by now - and my frustration comes that I did everything to fix my local issue yet I can't fix it for close three months now because there are no reviewers on it.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/239457252",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/11813#issuecomment-239457252",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11813",
    "id": 239457252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQ1NzI1Mg==",
    "user": {
      "login": "MunWolf",
      "id": 3696546,
      "node_id": "MDQ6VXNlcjM2OTY1NDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3696546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MunWolf",
      "html_url": "https://github.com/MunWolf",
      "followers_url": "https://api.github.com/users/MunWolf/followers",
      "following_url": "https://api.github.com/users/MunWolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/MunWolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MunWolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MunWolf/subscriptions",
      "organizations_url": "https://api.github.com/users/MunWolf/orgs",
      "repos_url": "https://api.github.com/users/MunWolf/repos",
      "events_url": "https://api.github.com/users/MunWolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MunWolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T14:13:23Z",
    "updated_at": "2016-08-12T14:13:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is a great idea, but one of the main points about it is that it would introduce a lot of new PRs which is good because hey more coding but bad since we don't have a lot of reviewers.\n\nAlso to the first point @GraionDilach made is that we have to be careful to not expose variables that won't are overrideable, what I mean by this lets say we have a variable called X, we set X in method Y and then the modder used it in method Z, all is good there. However what if the modder overrode method Y, suddenly the variable X doesn't serve its purpose anymore.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/239466988",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/11813#issuecomment-239466988",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11813",
    "id": 239466988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQ2Njk4OA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T14:49:29Z",
    "updated_at": "2016-08-12T14:49:29Z",
    "author_association": "MEMBER",
    "body": "In the long term, I'd really like to see us discard the \"Common\" part of Mods.Common, and require all mods to ship _all_ of their own mod code.  We would, of course, maintain a set of standard logic (possibly in its own repository, and certainly split into multiple smaller dlls), but all mods (including our default ones) would ship their own versions of that logic.\n\nWe could then unbundle our core mods from the engine, and update them independently.  We would still merge changes upstream into the common mod code, but this would only affect other mods when they explicitly choose to pull down the newer mod logic.  This will make testing common-logic changes for regressions much more difficult, but new tooling could make this a bit less painful.\n\nThere is one big problem here: .NET doesn't support unloading assemblies.  When a mod imports a dll all those objects are imported into the program space and remain there until the game quits, even if you switch to another mod.  This is why it is so important that mods reference dlls instead of copying them, and why you must rename traits when you copy and modify them in downstream dlls â€“ if you don't they will conflict and cause some really weird bugs that depend on the order that you load and switch between mods.\n\nI remember reading about a plan to include support for unloading assemblies in a future version of .NET Core, but in the best case it would be many years before we could rely on that logic being available everywhere that we support.\n\nThe only way we could do this then is to force an engine restart when switching mods.  We would still support direct switching between mods ingame, but the game window would be closed and reopened which can be jarring for players (especially on OSX and other platforms where \"fullscreen\" windows exist in their own space with animations transitioning to and from them).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/243135587",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/11813#issuecomment-243135587",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11813",
    "id": 243135587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzEzNTU4Nw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-29T14:12:45Z",
    "updated_at": "2016-08-29T14:12:45Z",
    "author_association": "MEMBER",
    "body": "If we go the separate dlls + engine restart route then we could install different engine versions side by side into the main install dir to provide backwards compatibility for external mods.  The main difficulty would come from needing to freeze our web interfaces so that we didn't break game list / resource center / etc lookups for older versions.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/243144175",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/11813#issuecomment-243144175",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11813",
    "id": 243144175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzE0NDE3NQ==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-29T14:40:39Z",
    "updated_at": "2016-08-29T14:42:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "It also requres some refactoring in TraitsInterfaces - Game has a lot of Common's.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/243147370",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/11813#issuecomment-243147370",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11813",
    "id": 243147370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzE0NzM3MA==",
    "user": {
      "login": "MunWolf",
      "id": 3696546,
      "node_id": "MDQ6VXNlcjM2OTY1NDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3696546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MunWolf",
      "html_url": "https://github.com/MunWolf",
      "followers_url": "https://api.github.com/users/MunWolf/followers",
      "following_url": "https://api.github.com/users/MunWolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/MunWolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MunWolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MunWolf/subscriptions",
      "organizations_url": "https://api.github.com/users/MunWolf/orgs",
      "repos_url": "https://api.github.com/users/MunWolf/repos",
      "events_url": "https://api.github.com/users/MunWolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MunWolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-29T14:51:20Z",
    "updated_at": "2016-08-29T14:51:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I give my thumbs up to separate dlls + engine restart, question though can we minimize the restarts by checking if it requires the same version or would that be too much work?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/243201900",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/11813#issuecomment-243201900",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11813",
    "id": 243201900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzIwMTkwMA==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-29T17:57:42Z",
    "updated_at": "2016-08-29T17:57:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> It also requres some refactoring in TraitsInterfaces - Game has a lot of Common's.\n\nI believe a good chunk of that could already be moved to `Common` without even having to make any other changes (except for updating some usings, probably).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/252791959",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/11813#issuecomment-252791959",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11813",
    "id": 252791959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mjc5MTk1OQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-11T02:01:44Z",
    "updated_at": "2016-10-11T02:01:44Z",
    "author_association": "MEMBER",
    "body": "I filed #12188 as a refinement of point 2 above.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/280929347",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/11813#issuecomment-280929347",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11813",
    "id": 280929347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDkyOTM0Nw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-19T16:19:11Z",
    "updated_at": "2017-02-19T16:19:11Z",
    "author_association": "MEMBER",
    "body": "Superseded by #12188 and #12554."
  }
]
