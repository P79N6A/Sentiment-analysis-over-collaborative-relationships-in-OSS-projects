[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/184677770",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10771#issuecomment-184677770",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10771",
    "id": 184677770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDY3Nzc3MA==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T13:14:16Z",
    "updated_at": "2016-02-16T13:14:16Z",
    "author_association": "MEMBER",
    "body": "```\nChecking for code style violations in OpenRA.Mods.Common...\n\nOpenRA.Mods.Common/UtilityCommands/DisplayMiniYamlTreeActor.cs:L48: [SA1010] Invalid spacing around the opening square bracket.\n\nmake: *** [check] Error 1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/184802543",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10771#issuecomment-184802543",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10771",
    "id": 184802543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDgwMjU0Mw==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T18:02:20Z",
    "updated_at": "2016-02-16T18:03:03Z",
    "author_association": "MEMBER",
    "body": "I've taken another approach to this (that hasn't been pushed) that solves some problems here, but produces another that nullifies this entire feature.\n\nThis prints out the yaml tree directly (so types are a non-issue) but inheritance isn't being flattened (but the Inherits nodes are removed).\n\nCompare the two `Mobile`s, for example.\n\n``` csharp\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nnamespace OpenRA.Mods.Common.UtilityCommands\n{\n    class DisplayMiniYamlTreeActor : IUtilityCommand\n    {\n        static readonly List<MiniYamlNode> NoMapRules = new List<MiniYamlNode>();\n\n        string IUtilityCommand.Name { get { return \"--miniyaml-tree-actor\"; } }\n\n        [Desc(\"ACTOR [PATH/TO/MAP.oramap]\", \"Display the final miniyaml tree for the given actor type.\")]\n        void IUtilityCommand.Run(ModData modData, string[] args)\n        {\n            Game.ModData = modData;\n\n            var actorName = args[1];\n\n            var nodes = args.Length == 3 ? new Map(args[2]).RuleDefinitions : NoMapRules;\n            var tree = LoadYamlRules(modData.Manifest.Rules, nodes);\n\n            MiniYaml actorMiniYaml;\n            if (!tree.TryGetValue(actorName, out actorMiniYaml))\n            {\n                Console.WriteLine(\"Could not find actor '{0}'.\", args[1]);\n                Environment.Exit(1);\n            }\n\n            Console.WriteLine(actorMiniYaml.Value);\n            RecursivePrintMiniYaml(actorMiniYaml.Nodes);\n        }\n\n        void RecursivePrintMiniYaml(List<MiniYamlNode> nodes, int indent = 0)\n        {\n            foreach (var n in nodes)\n            {\n                Console.WriteLine(new string('\\t', indent) + \"{0}: {1}\", n.Key, n.Value.Value);\n                RecursivePrintMiniYaml(n.Value.Nodes, indent + 1);\n            }\n        }\n\n        bool IUtilityCommand.ValidateArguments(string [] args)\n        {\n            return args.Length == 2 || args.Length == 3;\n        }\n\n        Dictionary<string, MiniYaml> LoadYamlRules(string[] files, List<MiniYamlNode> nodes)\n        {\n            return MiniYaml.Merge(files.Select(s => MiniYaml.FromStream(Game.ModData.ModFiles.Open(s))).Append(nodes))\n                .ToDictionaryWithConflictLog(n => n.Key, n => n.Value, \"LoadYamlRules\", null, null);\n        }\n    }\n}\n```\n\n``` yaml\nAppearsOnRadar: \nCombatDebugOverlay: \nGivesExperience: \nScriptTriggers: \nUpgradeManager: \nHuntable: \nRenderDebugState: \nGainsExperience: \n    Upgrades: \n        200: firepower, damage, speed, reload, inaccuracy, rank\n        400: firepower, damage, speed, reload, inaccuracy, rank\n        800: firepower, damage, speed, reload, inaccuracy, rank\n        1600: firepower, damage, speed, reload, inaccuracy, rank, eliteweapon, selfheal\nDamageMultiplier@EXPERIENCE: \n    UpgradeTypes: damage\n    Modifier: 95, 90, 85, 75\nFirepowerMultiplier@EXPERIENCE: \n    UpgradeTypes: firepower\n    Modifier: 105, 110, 120, 130\nSpeedMultiplier@EXPERIENCE: \n    UpgradeTypes: speed\n    Modifier: 105, 110, 120, 140\nReloadDelayMultiplier@EXPERIENCE: \n    UpgradeTypes: reload\n    Modifier: 95, 90, 85, 75\nInaccuracyMultiplier@EXPERIENCE: \n    UpgradeTypes: inaccuracy\n    Modifier: 90, 80, 70, 50\nSelfHealing@ELITE: \n    Step: 2\n    Ticks: 100\n    HealIfBelow: 1\n    DamageCooldown: 125\n    UpgradeTypes: selfheal\n    UpgradeMinEnabledLevel: 1\nWithRankDecoration: \n    Image: rank\n    Sequence: rank\n    Palette: effect\n    ReferencePoint: Bottom, Right\n    UpgradeTypes: rank\n    ZOffset: 256\n    UpgradeMinEnabledLevel: 1\n    UpgradeMaxAcceptedLevel: 4\nBodyOrientation: \nQuantizeFacingsFromSequence: \n    Sequence: stand\nAutoSelectionSize: \nRenderSprites: \nDrawLineToTarget: \nHealth: \n    HP: 50\n    Shape: Circle\n        Radius: 128\nArmor: \n    Type: None\nRevealsShroud: \n    Range: 4c0\nMobile: \n    Speed: 56\n    Crushes: mine, crate\n    SharesCell: true\n    TerrainSpeeds: \n        Clear: 90\n        Rough: 80\n        Road: 100\n        Bridge: 100\n        Ore: 80\n        Gems: 80\n        Beach: 80\nSelectionDecorations: \nSelectable: \n    Bounds: 12,18,0,-8\nTargetable: \n    TargetTypes: Ground, Infantry, Disguise\n    UpgradeTypes: parachute\n    UpgradeMaxEnabledLevel: 0\nWithInfantryBody: \n    IdleSequences: idle1,idle2\n    StandSequences: stand,stand2\n    AttackSequence: shoot\nWithDeathAnimation: \n    DeathTypes: \n        DefaultDeath: 1\n        BulletDeath: 2\n        SmallExplosionDeath: 3\n        ExplosionDeath: 4\n        FireDeath: 5\n        ElectricityDeath: 6\n    CrushedSequence: die-crushed\nAttackMove: \nPassenger: \n    CargoType: Infantry\nHiddenUnderFog: \nActorLostNotification: \nGivesBounty: \nGpsDot: \n    String: Infantry\nCrushable: \n    CrushSound: squishy2.aud\nGuard: \nGuardable: \nTooltip: \n    GenericName: Soldier\n    Name: Rifle Infantry\n    Description: General-purpose infantry.\\n  Strong vs Infantry\\n  Weak vs Vehicles, Aircraft\nSelfHealing@HOSPITAL: \n    Step: 5\n    Ticks: 100\n    HealIfBelow: 1\n    DamageCooldown: 125\n    UpgradeTypes: hospitalheal\n    UpgradeMinEnabledLevel: 1\nGlobalUpgradable: \n    Upgrades: hospitalheal\n    Prerequisites: hosp\nDeathSounds@NORMAL: \n    DeathTypes: DefaultDeath, BulletDeath, SmallExplosionDeath, ExplosionDeath\nDeathSounds@BURNED: \n    Voice: Burned\n    DeathTypes: FireDeath\nDeathSounds@ZAPPED: \n    Voice: Zapped\n    DeathTypes: ElectricityDeath\nParachutable: \n    FallRate: 26\n    KilledOnImpassableTerrain: true\n    GroundImpactSound: squishy2.aud\n    WaterImpactSound: splash9.aud\n    WaterCorpseSequence: small_splash\nCloneable: \n    Types: Infantry\nVoiced: \n    VoiceSet: GenericVoice\nWithParachute: \n    UpgradeTypes: parachute\n    UpgradeMinEnabledLevel: 1\n    ShadowImage: parach-shadow\n    ShadowSequence: idle\n    Image: parach\n    Sequence: idle\n    OpeningSequence: open\n    Offset: 0,0,427\nUpdatesPlayerStatistics: \nMustBeDestroyed: \nAutoTarget: \nProximityCaptor: \n    Types: Infantry\nTakeCover: \n    DamageModifiers: \n        Prone50Percent: 50\n    DamageTriggers: TriggerProne\nDetectCloaked: \n    CloakTypes: Hijacker\nBuildable: \n    Queue: Infantry\n    BuildAtProductionType: Soldier\n    BuildPaletteOrder: 10\n    Prerequisites: ~barracks, ~techlevel.infonly\nValued: \n    Cost: 100\nArmament@PRIMARY: \n    Weapon: M1Carbine\nArmament@GARRISONED: \n    Name: garrisoned\n    Weapon: Vulcan\n    MuzzleSequence: garrison-muzzle\nAttackFrontal: \nProducibleWithLevel: \n    Prerequisites: barracks.upgraded\n```\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/184804279",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10771#issuecomment-184804279",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10771",
    "id": 184804279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDgwNDI3OQ==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T18:07:02Z",
    "updated_at": "2016-02-16T18:07:02Z",
    "author_association": "MEMBER",
    "body": "Okay so I was wrong about what this is actually producing.\nI was expecting the same results as the current code but this is actually showing everything defined in yaml, not defaults in code.\n\n```\n12:03 <+pchote> Phrohdoh: the inheritance nodes are being removed because it replaces them with what they reference\n12:04 <+pchote> the yaml tree you paste looks fine to me\n12:04 <+pchote> it only shows you what is actually defined in the yaml\n```\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/184809619",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10771#issuecomment-184809619",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10771",
    "id": 184809619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDgwOTYxOQ==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T18:20:42Z",
    "updated_at": "2016-02-16T18:20:42Z",
    "author_association": "MEMBER",
    "body": "This is ready for review now!\n\nI've updated the original description.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/184837092",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10771#issuecomment-184837092",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10771",
    "id": 184837092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDgzNzA5Mg==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T19:15:38Z",
    "updated_at": "2016-02-16T19:15:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Now I'll raise the one question: What is this for?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/184837517",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10771#issuecomment-184837517",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10771",
    "id": 184837517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDgzNzUxNw==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T19:16:58Z",
    "updated_at": "2016-02-16T19:16:58Z",
    "author_association": "MEMBER",
    "body": "Mainly for debugging the case where someone thinks an actor should have a trait but doesn't (or a certain property or whatever).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/184838555",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10771#issuecomment-184838555",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10771",
    "id": 184838555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDgzODU1NQ==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T19:19:28Z",
    "updated_at": "2016-02-16T19:19:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "In that case could you reorganize the output, say list the traits in alphabetical order? Right now it just gives me the feeling of a wall of text and just proving how awesome and mandatory the inheritance feat is...\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/184843322",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10771#issuecomment-184843322",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10771",
    "id": 184843322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDg0MzMyMg==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T19:29:16Z",
    "updated_at": "2016-02-16T19:29:16Z",
    "author_association": "MEMBER",
    "body": "How is alphabetical any more useful or less arbitrary?\n\nThat completely trashes order while this may(?) show traits in construct order.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/184855296",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10771#issuecomment-184855296",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10771",
    "id": 184855296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDg1NTI5Ng==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T20:00:55Z",
    "updated_at": "2016-02-16T20:00:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "For debugging purposes, this requires one to know which lines onwards are from which template since the inheritance information is lost - in which case one just ends up better checking the yamls one by one. Alphabetical order atleast gives a clear intention to know where should one look for to check if a trait is defined on the dump.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/184876005",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10771#issuecomment-184876005",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10771",
    "id": 184876005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDg3NjAwNQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T21:10:26Z",
    "updated_at": "2016-02-16T21:11:00Z",
    "author_association": "MEMBER",
    "body": "It is currently ordered in the way that the engine parses it, which is important for debugging cases like crashes caused by a `TraitInfo` missing a `Requires<>`.  It also retains the order of inheritance (each Inherits property is directly replaced with the contents of that block).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/199017063",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10771#issuecomment-199017063",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10771",
    "id": 199017063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTAxNzA2Mw==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-20T20:43:47Z",
    "updated_at": "2016-03-20T20:43:47Z",
    "author_association": "MEMBER",
    "body": "I don't have interest in reworking this at the moment.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/204960765",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10771#issuecomment-204960765",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10771",
    "id": 204960765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDk2MDc2NQ==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-03T12:35:22Z",
    "updated_at": "2016-04-03T12:35:22Z",
    "author_association": "MEMBER",
    "body": "I am at a bit of a loss here.\n\nIn a custom map I have:\n\n``` yaml\nRules:\n    World:\n        GlobalLightingPaletteEffect:\n            Red: 1.1\n            Green: 1.1\n            Blue: 1\n            Ambient: 0.55\n        EditorFilterRenderedActors:  # <--- this is what I'm testing for\n        -StartGameNotification:\n        -SpawnMPUnits:\n        -MPStartLocations:\n        LuaScript:\n            Scripts: map.lua\n```\n\n``` csharp\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing OpenRA.FileSystem;\n\nnamespace OpenRA.Mods.Common.UtilityCommands\n{\n    [Desc(\"ACTOR-TYPE [PATH/TO/MAP-DIRECTORY]\", \"Display the merged miniyaml tree for the given actor type.\")]\n    public class OutputActorMiniYamlCommand : IUtilityCommand\n    {\n        static readonly MiniYaml NoMapRules = null;\n\n        string IUtilityCommand.Name { get { return \"--actor-yaml\"; } }\n\n        bool IUtilityCommand.ValidateArguments(string[] args)\n        {\n            return args.Length == 2 || args.Length == 3;\n        }\n\n        void IUtilityCommand.Run(ModData modData, string[] args)\n        {\n            var actorType = args[1];\n\n            Map map = null;\n            if (args.Length == 2)\n            {\n                map = new Map(modData, modData.ModFiles.OpenPackage(args[2]));\n                Console.WriteLine(\"Using map: \" + map.Title);\n            }\n\n            var fs = map ?? modData.DefaultFileSystem;\n\n            var tree = LoadYamlRules(fs, modData.Manifest, map == null ? NoMapRules : map.RuleDefinitions);\n\n            MiniYaml actorMiniYaml;\n            if (!tree.TryGetValue(actorType, out actorMiniYaml))\n            {\n                Console.WriteLine(\"Could not find actor '{0}'.\", actorType);\n                Console.WriteLine(\"Found keys: \" + tree.Keys.JoinWith(\",\"));\n                Environment.Exit(1);\n            }\n\n            Console.WriteLine(args[1] + \":\");\n            RecursivePrintMiniYamlNodes(actorMiniYaml.Nodes, 1);\n        }\n\n        void RecursivePrintMiniYamlNodes(List<MiniYamlNode> nodes, int indent)\n        {\n            foreach (var n in nodes)\n            {\n                Console.WriteLine(new string('\\t', indent) + \"{0}: {1}\", n.Key, n.Value.Value);\n                RecursivePrintMiniYamlNodes(n.Value.Nodes, indent + 1);\n            }\n        }\n\n        Dictionary<string, MiniYaml> LoadYamlRules(IReadOnlyFileSystem fs, Manifest manifest, MiniYaml additionalMiniYaml)\n        {\n            return MiniYaml.Load(fs, manifest.Rules, additionalMiniYaml)\n                .ToDictionaryWithConflictLog(n => n.Key, n => n.Value, \"LoadYamlRules\", null, null);\n\n        }\n    }\n}\n```\n\nHere is the output I get:\n\n``` yaml\nWorld:\n    PaletteFromFile@mouse: \n        Name: mouse\n        Filename: mousepal.pal\n    PaletteFromFile@playersno: \n        Name: player\n        Tileset: SNOW\n        Filename: unitsno.pal\n        ShadowIndex: 1\n    PaletteFromFile@playertem: \n        Name: player\n        Tileset: TEMPERATE\n        Filename: unittem.pal\n        ShadowIndex: 1\n    PaletteFromFile@depth: \n        Name: depth\n        Filename: depth.pal\n    PaletteFromCurrentTileset: \n        Name: terrain\n    PaletteFromCurrentTileset@decoration: \n        Name: terraindecoration\n        ShadowIndex: 1\n    PaletteFromFile@chrome: \n        Name: chrome\n        Filename: cameo.pal\n        AllowModifiers: false\n    PaletteFromFile@chromewithshadow: \n        Name: chromewithshadow\n        Filename: cameo.pal\n        AllowModifiers: false\n        ShadowIndex: 242\n    PaletteFromFile@pips: \n        Name: pips\n        Filename: palette.pal\n        AllowModifiers: false\n        ShadowIndex: 4\n    PaletteFromFile@ra: \n        Name: ra\n        Filename: palette.pal\n        ShadowIndex: 4\n    PaletteFromFile@effect: \n        Name: effect\n        Filename: anim.pal\n    PaletteFromFile@sidebar: \n        Name: sidebar\n        Filename: sidebar-nod|sidebar.pal\n    PaletteFromPaletteWithAlpha@clock: \n        Name: iconclock\n        BasePalette: sidebar\n        Alpha: 0.5\n        AllowModifiers: false\n    PaletteFromFile@colorpicker: \n        Name: colorpicker\n        Filename: unittem.pal\n        AllowModifiers: false\n        ShadowIndex: 1\n    PaletteFromFile@alpha: \n        Name: alpha\n        Filename: alpha.pal\n    PaletteFromRGBA@shadow: \n        Name: shadow\n        R: 0\n        G: 0\n        B: 0\n        A: 140\n    PaletteFromRGBA@highlight: \n        Name: highlight\n        R: 255\n        G: 255\n        B: 255\n        A: 128\n    PaletteFromRGBA@moveflash: \n        Name: moveflash\n        R: 255\n        G: 255\n        B: 255\n        A: 64\n    PaletteFromRGBA@disabled: \n        Name: disabled\n        R: 0\n        G: 0\n        B: 0\n        A: 180\n    PaletteFromPaletteWithAlpha@placebuilding: \n        Name: placebuilding\n        BasePalette: ra\n        Alpha: 0.75\n    TSShroudPalette@shroud: \n        Name: shroud\n        Type: Shroud\n    VoxelNormalsPalette@normals: \n        Name: normals\n        Type: TiberianSun\n    FixedColorPalette@GreenTiberium: \n        Base: player\n        Name: greentiberium\n        Color: 7EFF01\n        RemapIndex: 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31\n    FixedColorPalette@BlueTiberium: \n        Base: player\n        Name: bluetiberium\n        Color: 5980FF\n        RemapIndex: 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31\n    PlayerColorPalette: \n        BasePalette: player\n        RemapIndex: 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31\n    PaletteFromPlayerPaletteWithAlpha@cloak: \n        BaseName: cloak\n        BasePalette: player\n        Alpha: 0.55\n    PlayerHighlightPalette: \n    MenuPaletteEffect: \n    AlwaysVisible: \n    ScreenMap: \n    ActorMap: \n    MusicPlaylist: \n        VictoryMusic: score\n        DefeatMusic: maps\n    ShroudRenderer: \n        Index: 255, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240, 20, 40, 56, 65, 97, 130, 148, 194, 24, 33, 66, 132, 28, 41, 67, 134, 1, 2, 4, 8, 3, 6, 12, 9, 7, 14, 13, 11, 5, 10, 15, 255\n        UseExtendedIndex: true\n        ShroudPalette: shroud\n        FogPalette: shroud\n    Faction@Random: \n        Name: Any\n        InternalName: Random\n        RandomFactionMembers: gdi, nod\n    Faction@0: \n        Name: GDI\n        InternalName: gdi\n    Faction@1: \n        Name: Nod\n        InternalName: nod\n    ResourceType@Tiberium: \n        ResourceType: 1\n        Palette: greentiberium\n        Variants: tib01, tib02, tib03, tib04, tib05, tib06, tib07, tib08, tib09, tib10, tib11, tib12, tib13, tib14, tib15, tib16, tib17, tib18, tib19, tib20\n        MaxDensity: 12\n        ValuePerUnit: 50\n        Name: Tiberium\n        PipColor: Green\n        AllowedTerrainTypes: Clear, Rough, DirtRoad\n        AllowUnderActors: true\n        TerrainType: Tiberium\n    ResourceType@BlueTiberium: \n        ResourceType: 2\n        Palette: bluetiberium\n        Variants: tib01, tib02, tib03, tib04, tib05, tib06, tib07, tib08, tib09, tib10, tib11, tib12, tib13, tib14, tib15, tib16, tib17, tib18, tib19, tib20\n        MaxDensity: 12\n        ValuePerUnit: 100\n        Name: BlueTiberium\n        PipColor: Blue\n        AllowedTerrainTypes: Clear, Rough, DirtRoad\n        AllowUnderActors: true\n        TerrainType: BlueTiberium\n    ResourceType@Veins: \n        ResourceType: 3\n        Palette: player\n        Variants: veins\n        MaxDensity: 1\n        ValuePerUnit: 0\n        Name: Veins\n        PipColor: Red\n        AllowedTerrainTypes: Clear\n        AllowUnderActors: true\n        TerrainType: Veins\n    TerrainGeometryOverlay: \n    ChatCommands: \n    DevCommands: \n    PlayerCommands: \n    HelpCommand: \n    BuildingInfluence: \n    ProductionQueueFromSelection: \n        ProductionPaletteWidget: PRODUCTION_PALETTE\n    DomainIndex: \n    SmudgeLayer@SMALLSCORCH: \n        Type: SmallScorch\n        Sequence: smallscorches\n        SmokeType: smallfire\n        SmokePercentage: 50\n    SmudgeLayer@MEDIUMSCORCH: \n        Type: MediumScorch\n        Sequence: mediumscorches\n        SmokeType: mediumfire\n        SmokePercentage: 75\n    SmudgeLayer@LARGESCORCH: \n        Type: LargeScorch\n        Sequence: largescorches\n        SmokeType: largefire\n        SmokePercentage: 100\n    SmudgeLayer@SMALLCRATER: \n        Type: SmallCrater\n        SmokeType: smallsmoke\n        Sequence: smallcraters\n    SmudgeLayer@MEDIUMCRATER: \n        Type: MediumCrater\n        SmokeType: smallsmoke\n        Sequence: mediumcraters\n    SmudgeLayer@LARGECRATER: \n        Type: LargeCrater\n        SmokeType: largesmoke\n        Sequence: largecraters\n    ResourceLayer: \n    ResourceClaimLayer: \n    PathfinderDebugOverlay: \n    WarheadDebugOverlay: \n    SpawnMapActors: \n    MapBuildRadius: \n    MapOptions: \n    CreateMPPlayers: \n    MPStartUnits@MCV: \n        Class: none\n        ClassName: MCV Only\n        Factions: gdi, nod\n        BaseActor: mcv\n    MPStartUnits@light.gdi: \n        Class: light\n        ClassName: Light\n        Factions: gdi\n        BaseActor: mcv\n        SupportActors: e1,e1,e1,e2,e2\n        InnerSupportRadius: 3\n        OuterSupportRadius: 5\n    MPStartUnits@light.nod: \n        Class: light\n        ClassName: Light\n        Factions: nod\n        BaseActor: mcv\n        SupportActors: e1,e1,e1,e3,e3\n        InnerSupportRadius: 3\n        OuterSupportRadius: 5\n    MPStartUnits@med.gdi: \n        Class: medium\n        ClassName: Medium\n        Factions: gdi\n        BaseActor: mcv\n        SupportActors: e1,e1,e2,jumpjet,smech\n        InnerSupportRadius: 3\n        OuterSupportRadius: 5\n    MPStartUnits@med.nod: \n        Class: medium\n        ClassName: Medium\n        Factions: nod\n        BaseActor: mcv\n        SupportActors: e1,e1,e3,cyborg,bggy\n        InnerSupportRadius: 3\n        OuterSupportRadius: 5\n    MPStartUnits@heavy.gdi: \n        Class: heavy\n        ClassName: Heavy\n        Factions: gdi\n        BaseActor: mcv\n        SupportActors: e1,e2,e2,smech,mmch\n        InnerSupportRadius: 3\n        OuterSupportRadius: 5\n    MPStartUnits@heavy.nod: \n        Class: heavy\n        ClassName: Heavy\n        Factions: nod\n        BaseActor: mcv\n        SupportActors: e1,e3,bggy,bike,ttnk\n        InnerSupportRadius: 3\n        OuterSupportRadius: 5\n    MPStartLocations: \n    SpawnMPUnits: \n    CrateSpawner: \n        Minimum: 1\n        Maximum: 6\n        SpawnInterval: 3000\n        WaterChance: 0\n        ValidGround: Clear, Rough, Road, DirtRoad, Tiberium, BlueTiberium\n        InitialSpawnDelay: 1500\n    PathFinder: \n    ValidateOrder: \n    DebugPauseState: \n    ScreenShaker: \n    RadarPings: \n    StartGameNotification: \n    ObjectivesPanel: \n        PanelName: SKIRMISH_STATS\n    LoadWidgetAtGameStart: \n```\n\nNone of my map's rules are present.\n"
  }
]
