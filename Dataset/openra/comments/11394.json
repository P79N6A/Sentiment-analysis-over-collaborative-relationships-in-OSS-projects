[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/223752215",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11394#issuecomment-223752215",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11394",
    "id": 223752215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzc1MjIxNQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-04T12:08:55Z",
    "updated_at": "2016-06-04T12:13:43Z",
    "author_association": "MEMBER",
    "body": "Unfortunately, like I mentioned in IRC earlier, I do not think this a good approach:\n- It ignores the existing conventions that we use for actor rendering, and instead invents its own without good reason.\n- We still pay the cost of generating all the renderables (which is a significant chunk of the rendering!), and then pay an additional cost of a duplicate `PrepareRender` on each.\n\nI suspect that these tradeoffs may completely negate the benefits that we want from #9443.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/223752700",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11394#issuecomment-223752700",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11394",
    "id": 223752700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzc1MjcwMA==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-04T12:20:19Z",
    "updated_at": "2016-06-04T12:20:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "> We still pay the cost of generating all the renderables (which is a significant chunk of the rendering!), and then pay an additional cost of a duplicate PrepareRender on each.\n\nJust a thought, would it be possible/feasible to simply create some \"is WPos in player's viewport\" boolean (similar to the `FogObscures` check, just hopefully much cheaper in terms of performance), and then only generate the renderable if that is `true`?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/223752876",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11394#issuecomment-223752876",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11394",
    "id": 223752876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzc1Mjg3Ng==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-04T12:24:26Z",
    "updated_at": "2016-06-04T12:24:26Z",
    "author_association": "MEMBER",
    "body": "Yes (except in screen space instead of world).  This is essentially what actors and #9699 do.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/223753036",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11394#issuecomment-223753036",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11394",
    "id": 223753036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzc1MzAzNg==",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-04T12:28:02Z",
    "updated_at": "2016-06-04T12:29:23Z",
    "author_association": "MEMBER",
    "body": "I tried it in https://github.com/OpenRA/OpenRA/pull/9699 and it doesn't work for text and line renderables, because they don't define a position and don't have a valid bound ready in the constructor, because that is calculated just before getting rendered. Another downside is if you forget to `Add`, `Update` and `Remove` them manually the whole system breaks.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/223753071",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11394#issuecomment-223753071",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11394",
    "id": 223753071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzc1MzA3MQ==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-04T12:28:46Z",
    "updated_at": "2016-06-04T12:28:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Mailaender isn't the 2nd commit possibly the fix for the issue you had in #9699?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/223753166",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11394#issuecomment-223753166",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11394",
    "id": 223753166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzc1MzE2Ng==",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-04T12:31:07Z",
    "updated_at": "2016-06-04T12:32:07Z",
    "author_association": "MEMBER",
    "body": "Sadly screen bounds for sprites are offset + bounds and effects are location + bounds. Plus all non-sprite effects will crash the game as they have empty bounds in constructor and the first iterations of Tick.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/223753438",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/11394#issuecomment-223753438",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/11394",
    "id": 223753438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzc1MzQzOA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-04T12:37:43Z",
    "updated_at": "2016-06-04T13:24:28Z",
    "author_association": "MEMBER",
    "body": "Those are implementation details/issues with those specific effects (which can be fixed).  Adding engine level workarounds for bad code just cements the technical debt and makes it harder for the next person.\n\nStart with a PR that keeps the current effect rendering but makes whatever changes you need to have the position and size info available when you need it.  After that has been merged the guts of #9443 will be easy (since you've already written it).\n"
  }
]
