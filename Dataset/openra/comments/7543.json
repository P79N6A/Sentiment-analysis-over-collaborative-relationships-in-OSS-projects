[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76276815",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7543#issuecomment-76276815",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7543",
    "id": 76276815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2Mjc2ODE1",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T21:26:05Z",
    "updated_at": "2015-02-26T21:26:05Z",
    "author_association": "MEMBER",
    "body": ":+1: This is very likely to fix the NRE suspected in line\n\n``` csharp\nvar pingFromClient = LobbyInfo.PingFromClient(GetClient(conn));\n```\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76283927",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7543#issuecomment-76283927",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7543",
    "id": 76283927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjgzOTI3",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T22:02:25Z",
    "updated_at": "2015-02-26T22:02:25Z",
    "author_association": "MEMBER",
    "body": "It doesn't look like `conn` can ever become null to me - the caller verifies it as not-null before calling the method.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76474236",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7543#issuecomment-76474236",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7543",
    "id": 76474236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDc0MjM2",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T21:23:45Z",
    "updated_at": "2015-02-27T21:23:45Z",
    "author_association": "MEMBER",
    "body": "We have those `conn == null` checks on multiple occasions in the source code so I thought it may also be necessary here. Any idea what else causes https://github.com/OpenRA/OpenRA/issues/7515?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76475107",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7543#issuecomment-76475107",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7543",
    "id": 76475107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDc1MTA3",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T21:29:26Z",
    "updated_at": "2015-02-27T21:29:40Z",
    "author_association": "MEMBER",
    "body": "I'm not going to claim to know enough to be able to answer that. My assumption is that the null check on the socket is what actually fixes it - but LipkeGu would have to explain it.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76509981",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7543#issuecomment-76509981",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7543",
    "id": 76509981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTA5OTgx",
    "user": {
      "login": "LipkeGu",
      "id": 2057932,
      "node_id": "MDQ6VXNlcjIwNTc5MzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2057932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LipkeGu",
      "html_url": "https://github.com/LipkeGu",
      "followers_url": "https://api.github.com/users/LipkeGu/followers",
      "following_url": "https://api.github.com/users/LipkeGu/following{/other_user}",
      "gists_url": "https://api.github.com/users/LipkeGu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LipkeGu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LipkeGu/subscriptions",
      "organizations_url": "https://api.github.com/users/LipkeGu/orgs",
      "repos_url": "https://api.github.com/users/LipkeGu/repos",
      "events_url": "https://api.github.com/users/LipkeGu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LipkeGu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-28T04:32:01Z",
    "updated_at": "2015-02-28T04:32:20Z",
    "author_association": "MEMBER",
    "body": "My Idea was to check both so we doesnt take the null socket  and null conn down to other functions, so i choosed that existing if function to check if conn and conn.socket is not null...\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76632292",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7543#issuecomment-76632292",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7543",
    "id": 76632292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjMyMjky",
    "user": {
      "login": "huwpascoe",
      "id": 1812087,
      "node_id": "MDQ6VXNlcjE4MTIwODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1812087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huwpascoe",
      "html_url": "https://github.com/huwpascoe",
      "followers_url": "https://api.github.com/users/huwpascoe/followers",
      "following_url": "https://api.github.com/users/huwpascoe/following{/other_user}",
      "gists_url": "https://api.github.com/users/huwpascoe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huwpascoe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huwpascoe/subscriptions",
      "organizations_url": "https://api.github.com/users/huwpascoe/orgs",
      "repos_url": "https://api.github.com/users/huwpascoe/repos",
      "events_url": "https://api.github.com/users/huwpascoe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huwpascoe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-01T21:35:37Z",
    "updated_at": "2015-03-01T21:35:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "As far as I understand from involvement with the protocol, there are 3 places where sockets are used: \n\n`Network.Connection.Connection()` connection thread body is inline here\n`Server.Connection.ReadDataInner(Server)` which is referenced in ReadData(Server) then called from the server thread.\n`Server.SendData(Socket, byte[])` for some reason declared as a static member.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/78151569",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7543#issuecomment-78151569",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7543",
    "id": 78151569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTUxNTY5",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-10T21:24:20Z",
    "updated_at": "2015-03-11T09:01:58Z",
    "author_association": "MEMBER",
    "body": "Ok I don't think this PR will affect anything:\n- `conn` cannot be null here, it is verified as not-null by the only caller of this method.\n- `conn.Socket` is only assigned in one place, `Server.AcceptConnection`, where it is set to the value of `TcpListener.AcceptSocket()`. This is a framework method that does not appear to have any reason to return null. The `Connection` class is only ever instantiated here too, so `Socket` will never be left in its default null state.\n\nUnless I'm missing something here, these extra null checks here are pointless.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/78170239",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7543#issuecomment-78170239",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7543",
    "id": 78170239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTcwMjM5",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-10T23:23:05Z",
    "updated_at": "2015-03-10T23:23:05Z",
    "author_association": "MEMBER",
    "body": "Why not just put a `try/catch` over the whole iffy area and be done with it?\nWon't be bad for performance and will have a better chance of preventing the crashes.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/78354639",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7543#issuecomment-78354639",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7543",
    "id": 78354639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzU0NjM5",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T19:44:16Z",
    "updated_at": "2015-03-11T19:44:16Z",
    "author_association": "MEMBER",
    "body": "That doesn't fix the issue, that's just ignoring it and hoping something else won't react badly instead.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/78373816",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7543#issuecomment-78373816",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7543",
    "id": 78373816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzczODE2",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T21:17:10Z",
    "updated_at": "2015-03-11T21:17:10Z",
    "author_association": "MEMBER",
    "body": "Still, a seemingly highly volatile class like that should have a few catches, instead of crashing the game.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/78378123",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7543#issuecomment-78378123",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7543",
    "id": 78378123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4Mzc4MTIz",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T21:39:19Z",
    "updated_at": "2015-03-11T21:39:19Z",
    "author_association": "MEMBER",
    "body": "That only works if we know we can safely ignore the error.\n\nIf we don't what's causing the error then we can't trust our process to be in a reasonable state if some random exception occurs. Our process may very well be beyond any hope of running correctly again so there's no point trying to keep it alive - much better to crash early and hopefully get a stack trace close to the source of the real problem.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/78419672",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7543#issuecomment-78419672",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7543",
    "id": 78419672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDE5Njcy",
    "user": {
      "login": "huwpascoe",
      "id": 1812087,
      "node_id": "MDQ6VXNlcjE4MTIwODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1812087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huwpascoe",
      "html_url": "https://github.com/huwpascoe",
      "followers_url": "https://api.github.com/users/huwpascoe/followers",
      "following_url": "https://api.github.com/users/huwpascoe/following{/other_user}",
      "gists_url": "https://api.github.com/users/huwpascoe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huwpascoe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huwpascoe/subscriptions",
      "organizations_url": "https://api.github.com/users/huwpascoe/orgs",
      "repos_url": "https://api.github.com/users/huwpascoe/repos",
      "events_url": "https://api.github.com/users/huwpascoe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huwpascoe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T03:52:48Z",
    "updated_at": "2015-03-12T03:52:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "The entire network set is made of many try-catch bandaids over a confused attempt at multithreaded networking, which hasn't been changed since the beginning of the project. Adding more bandaids to the pile isn't going to hurt much at this point so go ahead.\n\nI'll keep trying to cram the new udp/protobuf code in the meantime, but it's a lot of work going through all that. Will be a while longer.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/78437047",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7543#issuecomment-78437047",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7543",
    "id": 78437047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDM3MDQ3",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T07:54:53Z",
    "updated_at": "2015-03-12T07:54:53Z",
    "author_association": "MEMBER",
    "body": "Thanks for the attempt @LipkeGu, but it sounds like the consensus here is to not take this.\n"
  }
]
