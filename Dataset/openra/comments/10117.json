[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/159997313",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-159997313",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 159997313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTk5NzMxMw==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-26T21:49:22Z",
    "updated_at": "2015-11-26T21:49:22Z",
    "author_association": "MEMBER",
    "body": "This disables frozen actors for all 5 players on the RA shellmap, which is certainly a speedup!\n\nHowever, won't this cause targeting changes? Any \"Invalid\" players now effectively sees everything all the time, right? Is that bad?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/159997568",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-159997568",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 159997568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTk5NzU2OA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-26T21:52:49Z",
    "updated_at": "2015-11-26T21:52:49Z",
    "author_association": "MEMBER",
    "body": "> Any \"Invalid\" players now effectively sees everything all the time, right? Is that bad?\n\nPotentially, yes.  In theory maps shouldn't use NonCombatant players for anything that impacts combat, but in practice people ignore theory.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/162110317",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-162110317",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 162110317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjExMDMxNw==",
    "user": {
      "login": "abcdefg30",
      "id": 7704140,
      "node_id": "MDQ6VXNlcjc3MDQxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7704140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcdefg30",
      "html_url": "https://github.com/abcdefg30",
      "followers_url": "https://api.github.com/users/abcdefg30/followers",
      "following_url": "https://api.github.com/users/abcdefg30/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcdefg30/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcdefg30/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcdefg30/subscriptions",
      "organizations_url": "https://api.github.com/users/abcdefg30/orgs",
      "repos_url": "https://api.github.com/users/abcdefg30/repos",
      "events_url": "https://api.github.com/users/abcdefg30/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcdefg30/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-04T23:34:44Z",
    "updated_at": "2015-12-04T23:34:44Z",
    "author_association": "MEMBER",
    "body": "This is indeed a problem. And I don't have an good idea on how to solve it.\n\nShould I just remove the `player.NonCombatant || !player.Playable` check?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/162234009",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-162234009",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 162234009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIzNDAwOQ==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T18:41:55Z",
    "updated_at": "2015-12-05T18:41:55Z",
    "author_association": "MEMBER",
    "body": "That would reduce our speedup to just removing frozen actors between perma-allies, right? Could still be a decent speedup for larger team games.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/162234598",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-162234598",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 162234598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIzNDU5OA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T18:54:45Z",
    "updated_at": "2015-12-05T18:54:45Z",
    "author_association": "MEMBER",
    "body": "This is yet another point in favor of removing the broken fragile alliances feature.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/163074322",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-163074322",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 163074322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzA3NDMyMg==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-09T01:05:58Z",
    "updated_at": "2015-12-09T01:05:58Z",
    "author_association": "MEMBER",
    "body": "The context of my comment (since it was discussed / questioned in IRC) is that team members are not perma-allies if that feature is enabled, negating the perf benefits.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/163434206",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-163434206",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 163434206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzQzNDIwNg==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-09T23:22:30Z",
    "updated_at": "2015-12-09T23:22:30Z",
    "author_association": "MEMBER",
    "body": "Some profiling reveals the stance lookup is almost as expensive as the state lookup - so unfortunately on average the method runs twice as slow since it often must do both lookups :(\n\nThis may be a dead-end, sorry.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/164188254",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-164188254",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 164188254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDE4ODI1NA==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-12T20:21:44Z",
    "updated_at": "2015-12-12T20:21:44Z",
    "author_association": "MEMBER",
    "body": "Thought: Could you move the check inside the `!initialized` branch and adjust the other branch to skip over players which lack a frozen actor (either `TryGetValue` on the dictionary itself, or maybe insert a null state and check for that, whichever makes life easier).\n\nThat might allow you to avoid the stance lookup cost on every tick.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/164203602",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-164203602",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 164203602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDIwMzYwMg==",
    "user": {
      "login": "abcdefg30",
      "id": 7704140,
      "node_id": "MDQ6VXNlcjc3MDQxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7704140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcdefg30",
      "html_url": "https://github.com/abcdefg30",
      "followers_url": "https://api.github.com/users/abcdefg30/followers",
      "following_url": "https://api.github.com/users/abcdefg30/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcdefg30/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcdefg30/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcdefg30/subscriptions",
      "organizations_url": "https://api.github.com/users/abcdefg30/orgs",
      "repos_url": "https://api.github.com/users/abcdefg30/repos",
      "events_url": "https://api.github.com/users/abcdefg30/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcdefg30/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-13T00:05:21Z",
    "updated_at": "2015-12-13T00:05:21Z",
    "author_association": "MEMBER",
    "body": "Updated.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/166406005",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-166406005",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 166406005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjQwNjAwNQ==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-21T20:11:31Z",
    "updated_at": "2015-12-21T20:12:20Z",
    "author_association": "MEMBER",
    "body": "This successfully prevents frozen actors being created for your own stuff - which on the face on it seems pretty good!\n\nUnfortunately, that leads to a crash if an engineer captures your building and that then must become frozen under fog - there's no frozen actor for it and then bad times happen. :/\n\nYou can recreate this by placing a building somewhere isolated (so it is the only thing providing sight on itself) and then having an engineer capture it.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/173976808",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-173976808",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 173976808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mzk3NjgwOA==",
    "user": {
      "login": "abcdefg30",
      "id": 7704140,
      "node_id": "MDQ6VXNlcjc3MDQxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7704140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcdefg30",
      "html_url": "https://github.com/abcdefg30",
      "followers_url": "https://api.github.com/users/abcdefg30/followers",
      "following_url": "https://api.github.com/users/abcdefg30/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcdefg30/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcdefg30/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcdefg30/subscriptions",
      "organizations_url": "https://api.github.com/users/abcdefg30/orgs",
      "repos_url": "https://api.github.com/users/abcdefg30/repos",
      "events_url": "https://api.github.com/users/abcdefg30/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcdefg30/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-22T16:57:19Z",
    "updated_at": "2016-01-22T17:00:46Z",
    "author_association": "MEMBER",
    "body": "Rebased and updated.\n\nUnfortunately, the newly introduced `PlayerDictionary frozenStates` is readonly, so I can't really create a new `FrozenActor` for the now-enemies (former allies) in case the actor was captured.\nIf noone has a good idea on how to solve that (without reverting the whole playerindex stuff), I'll close here.\n\nWhat I could do is just not render (and thus skip the visibility checks) when the player is an ally etc.\n@RoosterDragon would it be worth the perf to do that?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/174083457",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-174083457",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 174083457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDA4MzQ1Nw==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-22T23:14:11Z",
    "updated_at": "2016-01-22T23:14:11Z",
    "author_association": "MEMBER",
    "body": "You could try making the `FrozenActor` field inside `FrozenState` writable and nulling/unnulling it as needed, or maybe when the owner changes you can build a new `PlayerDictionary`, copy things across, and replace the old one.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/174085242",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-174085242",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 174085242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDA4NTI0Mg==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-22T23:22:57Z",
    "updated_at": "2016-01-22T23:22:57Z",
    "author_association": "MEMBER",
    "body": "Are the perf wins worth the increased complexity that would require, now that we spatially partition frozen actors updates?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/175236294",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-175236294",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 175236294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTIzNjI5NA==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-26T21:23:40Z",
    "updated_at": "2016-01-26T21:23:40Z",
    "author_association": "MEMBER",
    "body": "On the RA shellmap on bleed, ticking frozen actors takes 0.85% of total CPU, this PR in its current state brings that down to 0.61% which is pretty respectable.\n\nI think it'd be worthwhile. When the owner changes you need to handle the following:\n- Keep existing frozen actors in their current state.\n- Add a new frozen actor if there isn't one yet (e.g. our building was captured).\n- Remove the frozen actor if there was one but now we don't need it (e.g. we captured a building).\n\nShould be doable.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/175245177",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-175245177",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 175245177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTI0NTE3Nw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-26T21:41:07Z",
    "updated_at": "2016-01-26T21:42:29Z",
    "author_association": "MEMBER",
    "body": "That sounds like a bunch of complexity for a 0.24% (0.02 ms, assuming a 10ms tick) performance improvement.  On the other hand, if we do get rid of the fragile alliances then a lot of the complexity will go away.  It might still pay to wait until that happens.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/183981102",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-183981102",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 183981102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mzk4MTEwMg==",
    "user": {
      "login": "abcdefg30",
      "id": 7704140,
      "node_id": "MDQ6VXNlcjc3MDQxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7704140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcdefg30",
      "html_url": "https://github.com/abcdefg30",
      "followers_url": "https://api.github.com/users/abcdefg30/followers",
      "following_url": "https://api.github.com/users/abcdefg30/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcdefg30/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcdefg30/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcdefg30/subscriptions",
      "organizations_url": "https://api.github.com/users/abcdefg30/orgs",
      "repos_url": "https://api.github.com/users/abcdefg30/repos",
      "events_url": "https://api.github.com/users/abcdefg30/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcdefg30/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-14T21:31:40Z",
    "updated_at": "2016-02-14T21:31:40Z",
    "author_association": "MEMBER",
    "body": "Updated and rebased. Should be fine now that fragile alliances are removed.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/186394507",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-186394507",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 186394507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjM5NDUwNw==",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T20:32:54Z",
    "updated_at": "2016-02-19T20:32:54Z",
    "author_association": "MEMBER",
    "body": "Crashes on Allies 05 when putting the SPY in the TRUK which also removes the CAMERAs:\n\n```\nException of type `System.ArgumentException`: bounds must be non-empty.\nParameter name: bounds\n  at OpenRA.Primitives.SpatiallyPartitioned`1[T].ValidateBounds (Rectangle bounds) [0x0002b] in /home/matthias/Entwicklung/OpenRA/OpenRA.Game/Primitives/SpatiallyPartitioned.cs:37 \n  at OpenRA.Primitives.SpatiallyPartitioned`1[T].Add (OpenRA.Primitives.T item, Rectangle bounds) [0x00003] in /home/matthias/Entwicklung/OpenRA/OpenRA.Game/Primitives/SpatiallyPartitioned.cs:41 \n  at OpenRA.Traits.ScreenMap.Add (OpenRA.Actor a) [0x0000f] in /home/matthias/Entwicklung/OpenRA/OpenRA.Game/Traits/World/ScreenMap.cs:77 \n  at OpenRA.Mods.Common.Traits.Mobile.AddedToWorld (OpenRA.Actor self) <0x41607740 + 0x00063> in <filename unknown>:0 \n  at OpenRA.World.Add (OpenRA.Actor a) [0x00041] in /home/matthias/Entwicklung/OpenRA/OpenRA.Game/World.cs:245 \n  at OpenRA.Mods.Common.Scripting.ActorGlobal+<Create>c__AnonStorey0.<>m__0 (OpenRA.World w) <0x416bacb0 + 0x00023> in <filename unknown>:0 \n  at OpenRA.World.Tick () [0x00155] in /home/matthias/Entwicklung/OpenRA/OpenRA.Game/World.cs:309 \n  at OpenRA.Game.InnerLogicTick (OpenRA.Network.OrderManager orderManager) [0x00226] in /home/matthias/Entwicklung/OpenRA/OpenRA.Game/Game.cs:557 \n  at OpenRA.Game.LogicTick () [0x00055] in /home/matthias/Entwicklung/OpenRA/OpenRA.Game/Game.cs:582 \n  at OpenRA.Game.Loop () [0x000d4] in /home/matthias/Entwicklung/OpenRA/OpenRA.Game/Game.cs:709 \n  at OpenRA.Game.Run () [0x00042] in /home/matthias/Entwicklung/OpenRA/OpenRA.Game/Game.cs:749 \n  at OpenRA.Program.Run (System.String[] args) [0x00011] in /home/matthias/Entwicklung/OpenRA/OpenRA.Game/Support/Program.cs:117 \n  at OpenRA.Program.Main (System.String[] args) [0x00050] in /home/matthias/Entwicklung/OpenRA/OpenRA.Game/Support/Program.cs:39 \n```\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/186444193",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-186444193",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 186444193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjQ0NDE5Mw==",
    "user": {
      "login": "abcdefg30",
      "id": 7704140,
      "node_id": "MDQ6VXNlcjc3MDQxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7704140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcdefg30",
      "html_url": "https://github.com/abcdefg30",
      "followers_url": "https://api.github.com/users/abcdefg30/followers",
      "following_url": "https://api.github.com/users/abcdefg30/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcdefg30/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcdefg30/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcdefg30/subscriptions",
      "organizations_url": "https://api.github.com/users/abcdefg30/orgs",
      "repos_url": "https://api.github.com/users/abcdefg30/repos",
      "events_url": "https://api.github.com/users/abcdefg30/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcdefg30/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T23:09:00Z",
    "updated_at": "2016-02-19T23:09:00Z",
    "author_association": "MEMBER",
    "body": "I don't think that crash is caused by the pr here: #10766 \n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/186447765",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-186447765",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 186447765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjQ0Nzc2NQ==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T23:20:14Z",
    "updated_at": "2016-02-19T23:20:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's an issue.\n\nOn the other hand I'm not certain if we should encourage breaking the underlying game just because \"hey, we don't have fragile alliances, who cares?\".\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/186781655",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-186781655",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 186781655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Njc4MTY1NQ==",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-21T09:26:19Z",
    "updated_at": "2016-02-21T09:26:19Z",
    "author_association": "MEMBER",
    "body": "Can't spot negative side effects. :white_check_mark: \n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/201862687",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-201862687",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 201862687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTg2MjY4Nw==",
    "user": {
      "login": "obrakmann",
      "id": 4331210,
      "node_id": "MDQ6VXNlcjQzMzEyMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4331210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obrakmann",
      "html_url": "https://github.com/obrakmann",
      "followers_url": "https://api.github.com/users/obrakmann/followers",
      "following_url": "https://api.github.com/users/obrakmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/obrakmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obrakmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obrakmann/subscriptions",
      "organizations_url": "https://api.github.com/users/obrakmann/orgs",
      "repos_url": "https://api.github.com/users/obrakmann/repos",
      "events_url": "https://api.github.com/users/obrakmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obrakmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-26T15:41:20Z",
    "updated_at": "2016-03-26T15:41:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Replays will crash when viewing a player whose structure got captured. I'm guessing `frozenStates[byPlayer]` will be null, anything else doesn't make sense.\n\n```\nException of type `System.NullReferenceException`: Object reference not set to an instance of an object\n  at OpenRA.Mods.Common.Traits.FrozenUnderFog.IsVisibleInner (OpenRA.Actor self, OpenRA.Player byPlayer) <0x41177c40 + 0x0008c> in <filename unknown>:0 \n```\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/219216599",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-219216599",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 219216599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTIxNjU5OQ==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-14T12:01:39Z",
    "updated_at": "2016-05-14T12:01:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@abcdefg30 Any progress? Otherwise I'd say we close this for now and you reopen it when you have time to fix and update it.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/219216982",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10117#issuecomment-219216982",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10117",
    "id": 219216982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTIxNjk4Mg==",
    "user": {
      "login": "abcdefg30",
      "id": 7704140,
      "node_id": "MDQ6VXNlcjc3MDQxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7704140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcdefg30",
      "html_url": "https://github.com/abcdefg30",
      "followers_url": "https://api.github.com/users/abcdefg30/followers",
      "following_url": "https://api.github.com/users/abcdefg30/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcdefg30/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcdefg30/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcdefg30/subscriptions",
      "organizations_url": "https://api.github.com/users/abcdefg30/orgs",
      "repos_url": "https://api.github.com/users/abcdefg30/repos",
      "events_url": "https://api.github.com/users/abcdefg30/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcdefg30/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-14T12:11:02Z",
    "updated_at": "2016-05-14T12:11:02Z",
    "author_association": "MEMBER",
    "body": "Yeah, sounds like a good idea. Sorry for letting this rot that long.\n"
  }
]
