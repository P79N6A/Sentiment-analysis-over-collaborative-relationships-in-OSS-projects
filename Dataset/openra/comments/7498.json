[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/75012538",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7498#issuecomment-75012538",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7498",
    "id": 75012538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDEyNTM4",
    "user": {
      "login": "LipkeGu",
      "id": 2057932,
      "node_id": "MDQ6VXNlcjIwNTc5MzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2057932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LipkeGu",
      "html_url": "https://github.com/LipkeGu",
      "followers_url": "https://api.github.com/users/LipkeGu/followers",
      "following_url": "https://api.github.com/users/LipkeGu/following{/other_user}",
      "gists_url": "https://api.github.com/users/LipkeGu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LipkeGu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LipkeGu/subscriptions",
      "organizations_url": "https://api.github.com/users/LipkeGu/orgs",
      "repos_url": "https://api.github.com/users/LipkeGu/repos",
      "events_url": "https://api.github.com/users/LipkeGu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LipkeGu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-19T08:10:39Z",
    "updated_at": "2015-02-19T08:10:39Z",
    "author_association": "MEMBER",
    "body": "this allows also that you will know where the enemy is ...thats not the sense of the Shroud :(\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/75014540",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7498#issuecomment-75014540",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7498",
    "id": 75014540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDE0NTQw",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-19T08:32:23Z",
    "updated_at": "2015-02-19T08:32:23Z",
    "author_association": "MEMBER",
    "body": "Related to #5294.  Both cases can be fixed by writing a (fiddly but not inherently difficult) function that finds the intersection points of an arbitrary line with the underlying cell grid, and ends the line (or bullet path) early if it hits a hidden (or blocked) cell.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/75583545",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7498#issuecomment-75583545",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7498",
    "id": 75583545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NTgzNTQ1",
    "user": {
      "login": "pevers",
      "id": 3428649,
      "node_id": "MDQ6VXNlcjM0Mjg2NDk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3428649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pevers",
      "html_url": "https://github.com/pevers",
      "followers_url": "https://api.github.com/users/pevers/followers",
      "following_url": "https://api.github.com/users/pevers/following{/other_user}",
      "gists_url": "https://api.github.com/users/pevers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pevers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pevers/subscriptions",
      "organizations_url": "https://api.github.com/users/pevers/orgs",
      "repos_url": "https://api.github.com/users/pevers/repos",
      "events_url": "https://api.github.com/users/pevers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pevers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-23T17:01:30Z",
    "updated_at": "2015-02-23T17:01:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "If we end the bullet path or line as soon as it hits a cell which is blocked/hidden. The player would still have a good guess where the enemy is moving as the angle of the line will move. Shouldn't the unit just move to the location last known and draw the line to this location?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/75597528",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7498#issuecomment-75597528",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7498",
    "id": 75597528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NTk3NTI4",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-23T18:09:09Z",
    "updated_at": "2015-02-23T18:10:23Z",
    "author_association": "MEMBER",
    "body": "No, I think the point is that we can calculate if the line would enter a fogged/shrouded cell, so then we can just skip drawing it entirely.\nAlso yes, the unit losing the target, and probably moving to its last known location is the next step I would suggest. But that calls for a separate issue to be open.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/75642484",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7498#issuecomment-75642484",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7498",
    "id": 75642484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjQyNDg0",
    "user": {
      "login": "pevers",
      "id": 3428649,
      "node_id": "MDQ6VXNlcjM0Mjg2NDk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3428649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pevers",
      "html_url": "https://github.com/pevers",
      "followers_url": "https://api.github.com/users/pevers/followers",
      "following_url": "https://api.github.com/users/pevers/following{/other_user}",
      "gists_url": "https://api.github.com/users/pevers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pevers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pevers/subscriptions",
      "organizations_url": "https://api.github.com/users/pevers/orgs",
      "repos_url": "https://api.github.com/users/pevers/repos",
      "events_url": "https://api.github.com/users/pevers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pevers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-23T21:45:42Z",
    "updated_at": "2015-02-23T21:46:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is already such mechanism present I think. \n\nFor testing, I added a check to the RenderAfterWorld in DrawLineToTarget.cs:\nhttps://github.com/delftswa2014/OpenRA/blob/bugfix/disable_line_under_fog/OpenRA.Game/Traits/DrawLineToTarget.cs\n\n```\n                if (target.IsVisibleFor(self))\n                    continue;\n```\n\nAnd IsVisibleFor in Target.cs:\nhttps://github.com/delftswa2014/OpenRA/blob/bugfix/disable_line_under_fog/OpenRA.Game/Traits/Target.cs\n\n```\n        public bool IsVisibleFor(Actor targeter)\n        {\n            if (targeter == null || actor == null)\n                return false;\n\n            return targeter.Owner.Shroud.IsVisible(actor);\n        }\n```\n\nOfcourse this is pretty hacky because the targets should be removed when the target is lost. But doing this fixed this issue I think.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/75657993",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/7498#issuecomment-75657993",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7498",
    "id": 75657993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjU3OTkz",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-23T23:07:44Z",
    "updated_at": "2015-02-23T23:07:44Z",
    "author_association": "MEMBER",
    "body": "Oh yeah. Like I said above, I should open a new issue for actors losing their targets under fog, but I'm too lazy at the moment. And this issue is just for the target lines.\nBut both can be fixed in one PR and shouldn't be too much work, I think.\n"
  }
]
