[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76527275",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-76527275",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 76527275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTI3Mjc1",
    "user": {
      "login": "Rydra",
      "id": 5826108,
      "node_id": "MDQ6VXNlcjU4MjYxMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5826108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rydra",
      "html_url": "https://github.com/Rydra",
      "followers_url": "https://api.github.com/users/Rydra/followers",
      "following_url": "https://api.github.com/users/Rydra/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rydra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rydra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rydra/subscriptions",
      "organizations_url": "https://api.github.com/users/Rydra/orgs",
      "repos_url": "https://api.github.com/users/Rydra/repos",
      "events_url": "https://api.github.com/users/Rydra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rydra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-28T14:04:21Z",
    "updated_at": "2015-02-28T14:06:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems there are some problems when downloading the dependencies. Does anyone have any clue about that? It seems there are problems finding OpenAL, but in bleed, in the thirdparty/fetch-thirdparty-deps.ps1, it's placed in the same way as mine.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76535005",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-76535005",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 76535005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTM1MDA1",
    "user": {
      "login": "LipkeGu",
      "id": 2057932,
      "node_id": "MDQ6VXNlcjIwNTc5MzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2057932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LipkeGu",
      "html_url": "https://github.com/LipkeGu",
      "followers_url": "https://api.github.com/users/LipkeGu/followers",
      "following_url": "https://api.github.com/users/LipkeGu/following{/other_user}",
      "gists_url": "https://api.github.com/users/LipkeGu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LipkeGu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LipkeGu/subscriptions",
      "organizations_url": "https://api.github.com/users/LipkeGu/orgs",
      "repos_url": "https://api.github.com/users/LipkeGu/repos",
      "events_url": "https://api.github.com/users/LipkeGu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LipkeGu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-28T17:11:44Z",
    "updated_at": "2015-02-28T17:11:44Z",
    "author_association": "MEMBER",
    "body": "Will this PR also fix the Problem that the PF tries to calculate paths which are never reachable? =)\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76540373",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-76540373",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 76540373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTQwMzcz",
    "user": {
      "login": "Rydra",
      "id": 5826108,
      "node_id": "MDQ6VXNlcjU4MjYxMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5826108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rydra",
      "html_url": "https://github.com/Rydra",
      "followers_url": "https://api.github.com/users/Rydra/followers",
      "following_url": "https://api.github.com/users/Rydra/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rydra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rydra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rydra/subscriptions",
      "organizations_url": "https://api.github.com/users/Rydra/orgs",
      "repos_url": "https://api.github.com/users/Rydra/repos",
      "events_url": "https://api.github.com/users/Rydra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rydra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-28T19:04:34Z",
    "updated_at": "2015-02-28T19:04:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@LipkeGu Nope, but it will make it way easier to track down the problem by implementing a unit test that expresses this behaviour and it's what it is expected. The test initially should fail, and then work it out until we make it pass.\n\nOne idea should be, first, manage to get rid of the unholy FindBidiPath, then add a maxDepth to limit the search area of the pathfinder.\n\nThis is comented as an improvement through the code.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76561244",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-76561244",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 76561244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTYxMjQ0",
    "user": {
      "login": "LipkeGu",
      "id": 2057932,
      "node_id": "MDQ6VXNlcjIwNTc5MzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2057932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LipkeGu",
      "html_url": "https://github.com/LipkeGu",
      "followers_url": "https://api.github.com/users/LipkeGu/followers",
      "following_url": "https://api.github.com/users/LipkeGu/following{/other_user}",
      "gists_url": "https://api.github.com/users/LipkeGu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LipkeGu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LipkeGu/subscriptions",
      "organizations_url": "https://api.github.com/users/LipkeGu/orgs",
      "repos_url": "https://api.github.com/users/LipkeGu/repos",
      "events_url": "https://api.github.com/users/LipkeGu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LipkeGu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-01T00:38:58Z",
    "updated_at": "2015-03-01T00:38:58Z",
    "author_association": "MEMBER",
    "body": "Maybe we should also filter by directions when we have a path to the target (in front of the unit we doesnt need to calculate the ways behind the Unit except it is not able to find a path in front direction of the Unit\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76591430",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-76591430",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 76591430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTkxNDMw",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-01T10:40:06Z",
    "updated_at": "2015-03-01T10:40:06Z",
    "author_association": "MEMBER",
    "body": "> There is no clear barrier and meaning between Mobile and MobileInfo. There are lot of functions that Mobile could deal by himself and yet are delegated to MobileInfo...\n\nThe barrier is well defined in theory, but is perhaps not obvious and probably not implemented well in practice: `MobileInfo` (and the other trait infos) model an actor type (e.g. light tank), and `Mobile` (and other traits) model a specific actor (e.g. light tank #37, aka 'Bob').  Most of the logic in `Mobile` calls through to the Info because there isn't much actor-specific stuff in there - all light tanks behave the same.  Having it in the Info means that we can also reason about pathing without needing a specific actor to query against, which can useful in some cases.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76628818",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-76628818",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 76628818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjI4ODE4",
    "user": {
      "login": "MunWolf",
      "id": 3696546,
      "node_id": "MDQ6VXNlcjM2OTY1NDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3696546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MunWolf",
      "html_url": "https://github.com/MunWolf",
      "followers_url": "https://api.github.com/users/MunWolf/followers",
      "following_url": "https://api.github.com/users/MunWolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/MunWolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MunWolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MunWolf/subscriptions",
      "organizations_url": "https://api.github.com/users/MunWolf/orgs",
      "repos_url": "https://api.github.com/users/MunWolf/repos",
      "events_url": "https://api.github.com/users/MunWolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MunWolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-01T20:31:23Z",
    "updated_at": "2015-03-01T20:31:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "The only question about this that I have for you is this, is it somehow possible to remove this move constructor public Move(IActor self, Func<List<CPos>> getPath).\n\nBecause when i was working on serialization I didnt find any way to serialize the getPath parameter.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76631088",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-76631088",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 76631088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjMxMDg4",
    "user": {
      "login": "Rydra",
      "id": 5826108,
      "node_id": "MDQ6VXNlcjU4MjYxMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5826108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rydra",
      "html_url": "https://github.com/Rydra",
      "followers_url": "https://api.github.com/users/Rydra/followers",
      "following_url": "https://api.github.com/users/Rydra/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rydra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rydra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rydra/subscriptions",
      "organizations_url": "https://api.github.com/users/Rydra/orgs",
      "repos_url": "https://api.github.com/users/Rydra/repos",
      "events_url": "https://api.github.com/users/Rydra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rydra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-01T21:13:54Z",
    "updated_at": "2015-03-01T21:16:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, the problem is the Func member itself, not the constructor, right?\n\nThen one option could be to ignore that attribute so it's not serialized. I'm not aware if JSON can allow this kind of \"ignorable\" attribute, but it has to have one for sure. Look at http://stackoverflow.com/questions/1411577/ignoring-a-field-during-net-json-serialization-similar-to-xmlignore, it may help.\n\nThere is a workaround though, by using the strategy design pattern that I can implement if you still have troubles, but let's exhaust other options before that.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76650976",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-76650976",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 76650976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjUwOTc2",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-02T02:44:11Z",
    "updated_at": "2015-03-02T02:44:11Z",
    "author_association": "MEMBER",
    "body": "I'm not sure ignoring is an option, as I suspect we need **everything** to be serializeable.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76667066",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-76667066",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 76667066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjY3MDY2",
    "user": {
      "login": "Rydra",
      "id": 5826108,
      "node_id": "MDQ6VXNlcjU4MjYxMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5826108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rydra",
      "html_url": "https://github.com/Rydra",
      "followers_url": "https://api.github.com/users/Rydra/followers",
      "following_url": "https://api.github.com/users/Rydra/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rydra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rydra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rydra/subscriptions",
      "organizations_url": "https://api.github.com/users/Rydra/orgs",
      "repos_url": "https://api.github.com/users/Rydra/repos",
      "events_url": "https://api.github.com/users/Rydra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rydra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-02T07:08:14Z",
    "updated_at": "2015-03-02T07:08:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WolfGaming what is the specific error that arises when you try to serialize a class with a delegate\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/76765696",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-76765696",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 76765696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzY1Njk2",
    "user": {
      "login": "Rydra",
      "id": 5826108,
      "node_id": "MDQ6VXNlcjU4MjYxMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5826108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rydra",
      "html_url": "https://github.com/Rydra",
      "followers_url": "https://api.github.com/users/Rydra/followers",
      "following_url": "https://api.github.com/users/Rydra/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rydra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rydra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rydra/subscriptions",
      "organizations_url": "https://api.github.com/users/Rydra/orgs",
      "repos_url": "https://api.github.com/users/Rydra/repos",
      "events_url": "https://api.github.com/users/Rydra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rydra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-02T18:09:45Z",
    "updated_at": "2015-03-02T18:11:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Dear @WolfGaming, I've implemented a special branch for you in my repo, on a branch called upstream/moverefactor-2. In this branch I get rid of the Func<List<CPos>> that was disturbing you. I invite you to try that branch and see if you can use it for your purposes. If it works with you, we may cooperate together to open a separate PR with your changes and mine combined.\n\nhttps://github.com/Rydra/OpenRA/tree/upstream/moverefactor-2\n\nI await any comment you may have.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/77045814",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-77045814",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 77045814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDQ1ODE0",
    "user": {
      "login": "Rydra",
      "id": 5826108,
      "node_id": "MDQ6VXNlcjU4MjYxMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5826108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rydra",
      "html_url": "https://github.com/Rydra",
      "followers_url": "https://api.github.com/users/Rydra/followers",
      "following_url": "https://api.github.com/users/Rydra/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rydra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rydra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rydra/subscriptions",
      "organizations_url": "https://api.github.com/users/Rydra/orgs",
      "repos_url": "https://api.github.com/users/Rydra/repos",
      "events_url": "https://api.github.com/users/Rydra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rydra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T22:01:00Z",
    "updated_at": "2015-03-03T22:13:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "After some tests, I've seen have not altered the behaviour of the game with this refactor, so it can be reviewed and merged if necessary.\n\nGotta say I think this PR indicates a good way to proceed in terms of software quality and confidence, setting up tests to understand and secure the behaviour as well as to guide the architecture and detect which places can or should be refactored to ease understandibility and maintainibility.\n\nIf we could cover with tests a good number of functionalities, we can speed up highly the development of new features, ensure that nothing breaks and review every request waaaaaay faster.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/77054742",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-77054742",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 77054742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDU0NzQy",
    "user": {
      "login": "MunWolf",
      "id": 3696546,
      "node_id": "MDQ6VXNlcjM2OTY1NDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3696546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MunWolf",
      "html_url": "https://github.com/MunWolf",
      "followers_url": "https://api.github.com/users/MunWolf/followers",
      "following_url": "https://api.github.com/users/MunWolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/MunWolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MunWolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MunWolf/subscriptions",
      "organizations_url": "https://api.github.com/users/MunWolf/orgs",
      "repos_url": "https://api.github.com/users/MunWolf/repos",
      "events_url": "https://api.github.com/users/MunWolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MunWolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T22:44:20Z",
    "updated_at": "2015-03-03T22:44:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Rydra Ill have a look at your branch when my summer holidays start, which would be at the latest 8th of May.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/77057385",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-77057385",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 77057385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDU3Mzg1",
    "user": {
      "login": "Rydra",
      "id": 5826108,
      "node_id": "MDQ6VXNlcjU4MjYxMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5826108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rydra",
      "html_url": "https://github.com/Rydra",
      "followers_url": "https://api.github.com/users/Rydra/followers",
      "following_url": "https://api.github.com/users/Rydra/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rydra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rydra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rydra/subscriptions",
      "organizations_url": "https://api.github.com/users/Rydra/orgs",
      "repos_url": "https://api.github.com/users/Rydra/repos",
      "events_url": "https://api.github.com/users/Rydra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rydra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T22:56:32Z",
    "updated_at": "2015-03-03T22:56:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pchote amended all your requested changes.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/77704394",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-77704394",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 77704394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzA0Mzk0",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-07T19:05:39Z",
    "updated_at": "2015-03-07T19:05:39Z",
    "author_association": "MEMBER",
    "body": "I've put a bit of thought into this, and my earlier uneasyness over the direction we're heading with interfaces, mocks, and unit tests has solidified into a definite opinion.\n\nBefore I start my wall of text below, let me commend you on your general pathfinder/mobile reworking - that's great, and not an issue here (and I hope I don't scare you off with what follows).  It's also not about unit testing in general, but only their specific application to OpenRA.  I'm hoping that this spawns some discussion and alternative development rather than shutting down the pr!\n\n#### 1. It isn't viable to test real-world bugs using units and mocks\n\nThe majority of our gameplay logic relies on one or both of (a) interaction between multiple traits, or (b) lambdas that run at a later time.  Both of these cases are tricky to usefully unit test.\n\nOne could argue that (a) isn't a problem because we can just mock out everything that a trait interacts with. Similarly, (b) could be tested by writing mocks that store and run these lambdas to that their results can be tested.  I think this is (at best) short sighted, as it would require a significant amount of fiddly new code which will almost certainly miss subtle details in the real traits.  It would be difficult to guarantee that the tests don't diverge further as their counterpart traits evolve.\n\nConsider a bug like #6076 (and the related ones linked inside): this was triggered when two conflicting orders were resolved during the same tick (in this case attack and then sell).  I'm not sure where we would even begin with writing unit tests that could catch this kind of error, which is a common one and representative of the type of thing we need these tests to handle.\n\nAnother example is the commit 8676562d4712868478f95846fbdf08f8fe509647 from #3063.  This \"fixed\" what seemed to be an obvious bug that caused units on the (intact) sides of a destroyed bridge to explode when the bridge was repaired.  The problem was that CanEnterCell returned false for the cell the actor is already in.  The bridge code then assumes that this is a tank that has been dumped in the water (or a boat that is now beneath the newly-repaired bridge), and kills it.  If we had unit tests checking CanEnterCell then I would almost certainly have changed it, because \"of course this behaviour is wrong\".\n\nUnfortunately, other parts of the code rely on that specific behaviour, and this change completely broke harvesters (#3089) and a couple of other things (which I don't recall the specifics of).  We ended up reverting that commit, and IIRC the bridge repair problem has still not been fixed.\n\nMy point there is that a unit test wouldn't have helped, but a higher level \"check that harvesters still work\" test would have revealed it immediately.\n\nI'm also not saying that unit tests are completely useless for these kind of interactions, but more that the number of tests they would need and level of complexity in each to make them a useful part of our development is looking quite prohibitive (compared to the alternative).  Unit tests will also be useful at testing the core engine functionality, which use a more traditional structure.\n\n#### 2. We have a planned alternative that should (in theory) work better\n\nWe have a plan for how to test situations like the ones above, which is to come up with a way to load a map, do some setup, run it for N ticks without a renderer, and then test the results.  The missing piece here is working out how we want to implement the initial setup - instantiating from a self-contained test file vs having a dedicated test mod with tests implemented via scripted maps (@cjshmyr wrote an example scripted test map a while ago) vs something completely different.\n\nThe tests would run specific gameplay scenarios such as \"blow up a bridge with actors on it\" or \"operate a refinery with three harvesters for five (simulated) minutes\" and check at the end that the desired actions have occurred (\"actors in the middle have died, but not those at the edges\" and \"harvesters are still active and there are > X credits in the refinery\").  This kind of test code should be easy to build and maintain once the setup mechanism has been created.\n\n#### 3. _grumble_ Industry standards, over-abstraction, buzzwords _grumble_\n\nThis one is subjective and probably controversial, but bear with me.  OpenRA has its own set of conventions and design patterns that have been influenced by a bunch of outside sources (including non-OO languages), and some of these may seem pretty weird for someone coming fresh to the code.  These have evolved over time, and work very well for OpenRA - we've received a lot of compliments about the structure of the engine from people who have gotten over the initial learning curve and started working with it.\n\nI expect that your experience with the pathfinder and Mobile code has been rather different, as everyone agrees that corner of the code is just completely terrible.  It violates our own conventions, and most people refuse to touch it because of its opaqueness and fragility.  Given this, I wouldn't blame you if your opinion of OpenRA and its developers was \"these bozos don't know anything and need to be educated about how real object oriented code is written\".\n\nFrom the other side of the fence, it can be tricky to diplomatically deal with pull requests of the form \"rewrite system X to follow industry standard Y\" because, while done with good intentions, they often implicitly claim \"general-purpose rule A automatically overrides your specific use case B and experience C because that's just how these things are done\".  In some cases that's true (there's certainly a decent chunk of bad code and abstractions in the codebase), but it isn't universal.\n\nGetting back to specifics, I think that the work you've done on the pathfinder and Mobile are examples of the good and much needed kind of change, but that introducing all these new interfaces for mocking the world, map, tileset, traits, actors, etc is an example of letting the standard dogma override the project conventions to its detriment.  Given the limited utility (argued above) of unit-testing trait code, they add a lot of extra confusion, duplication, and points of failure that will hurt maintainability down the track.\n\nTo wrap up, i'm not asking for any specific changes here yet, but think this is something that needs to be discussed and decided before we proceed.  I think it would be useful to hear from @chrisforbes, @RoosterDragon, @huwpascoe who I have discussed elements of the above with in the past.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/77725299",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-77725299",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 77725299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzI1Mjk5",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-08T00:42:02Z",
    "updated_at": "2015-03-08T00:42:35Z",
    "author_association": "MEMBER",
    "body": "Having said all that ^ (I admit, I didn't read it, I just skimmed through it), everything movement-related in OpenRA still pretty much runs on dark magic (when it does work) and is in dire need to at least be refactored to hopefully shed some light on that dark magic.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/77738043",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-77738043",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 77738043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzM4MDQz",
    "user": {
      "login": "Rydra",
      "id": 5826108,
      "node_id": "MDQ6VXNlcjU4MjYxMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5826108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rydra",
      "html_url": "https://github.com/Rydra",
      "followers_url": "https://api.github.com/users/Rydra/followers",
      "following_url": "https://api.github.com/users/Rydra/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rydra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rydra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rydra/subscriptions",
      "organizations_url": "https://api.github.com/users/Rydra/orgs",
      "repos_url": "https://api.github.com/users/Rydra/repos",
      "events_url": "https://api.github.com/users/Rydra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rydra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-08T08:01:58Z",
    "updated_at": "2015-03-08T08:04:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "First, thanks @pchote for taking the time to write such a comprehensive comment about architecture. It's really fulfiling to see that something I made has created some kind of serious discussion in a community.\n\nIt's obvious that business and videogame worlds are extremely different. But you know, unit testing is not the only option that it is available for testing. In fact what you are talking about are integration tests, which tests the interaction between different \"units\", while Unit tests are about testing one thing in isolation. Unit tests do NOT replace the other. That's why I asked some time ago, for instance, some help regarding about how to instantiate, for instance, a Map in isolation, since the constructor is quite complex: to do some integration tests for the pathfinder.\n\nHaving said that, unit testing is about two things: confidence (which is different than correctness) and guidance. I'm quite fond on TDD (Test-driven development) and in a slowly and steady way, unit tests show you quite well what you have to expect from the code you intend to add or change, because it testes BEHAVIOUR (Which also guides you quite well about which architecture and patterns you should use to keep stuff in isolation). If you had some tests around the code you have to change, you can know (way better than without tests) when fiddling with that piece of code whether you are breaking it or not.\n\nThey also help in UNDERSTANDING the code. Holy cow, understanding how did the pathfinder, mobile and move activity worked was hellishly challenging (yet rewarding when I made it). Without separating the code in bounded areas (through interfaces) would had made it way harder.\n\nTL;DR#1: Unit tests help in understanding the code and test the behaviour of a piece of code in isolation. But for that to work the code needs to be TESTABLE (you'll love this: http://misko.hevery.com/attachments/Guide-Writing%20Testable%20Code.pdf). Furthermore, unit tests do not replace traditional testing, they add value by providing more confidence.\n\nOhhh, and it's quite common in TDD projects that there is more testing code than production code. If you see my Movetests.cs file, these tests provide a code coverage of roughly 90% of the Move class. Yet this does not mean that the code is bullet-proof.\n\n@pchote your point 2 does not enter in conflict with my PRs nor with unit tests.\n\nRegarding your concern about me introducing more complexity with those interfaces, etc... allow me to make my points:\n- Refer to the guide of writing testable code I posted above.\n- As you have seen, I haven't changed the existing architecture at all. I just added a \"man-in-the-middle\" (the interfaces) which allowed me to test code and understand what the hell was going on. Also those interfaces allowed me to do two very important things if you remember well from the Pathfinder PR: Switch implementations easily and microbenchmarking.\n\nI had two implementations of the pathfinder: LegacyPathSearch and PathSearch, which implemented a common interface. And the Trait only interacted with the interface, never knowing nor caring which was the implementation, and switching between legacy and current and benchmarking them was a piece-o-cake. Once I could see that the new implementation works faster and better, I could safely remove Legacy.\n\nAnd you'll really be grateful of the IGraph interface once you decide to implement a hierarchical pathfinding, because the A\\* algorithm can be graph-agnostic as long as it fulfills the interface.\n\nTo sum up, I haven't changed the architecture, I just add a small layer between layers that decoupled the dependencies and made the code clearer to understand. But introducing those interfaces was a necessity. Imagine that in the future I want to provide a different, alternate implementation of Actor or World. You'd wish you could compare both implementations through the interface.\n\nI hope I made my points clearer.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/83973429",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-83973429",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 83973429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzOTczNDI5",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-20T10:13:59Z",
    "updated_at": "2015-03-20T10:13:59Z",
    "author_association": "MEMBER",
    "body": "Needs a rebase.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/84165734",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-84165734",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 84165734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTY1NzM0",
    "user": {
      "login": "Rydra",
      "id": 5826108,
      "node_id": "MDQ6VXNlcjU4MjYxMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5826108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rydra",
      "html_url": "https://github.com/Rydra",
      "followers_url": "https://api.github.com/users/Rydra/followers",
      "following_url": "https://api.github.com/users/Rydra/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rydra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rydra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rydra/subscriptions",
      "organizations_url": "https://api.github.com/users/Rydra/orgs",
      "repos_url": "https://api.github.com/users/Rydra/repos",
      "events_url": "https://api.github.com/users/Rydra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rydra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-20T22:00:33Z",
    "updated_at": "2015-03-20T22:00:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/86367115",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-86367115",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 86367115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzY3MTE1",
    "user": {
      "login": "Rydra",
      "id": 5826108,
      "node_id": "MDQ6VXNlcjU4MjYxMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5826108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rydra",
      "html_url": "https://github.com/Rydra",
      "followers_url": "https://api.github.com/users/Rydra/followers",
      "following_url": "https://api.github.com/users/Rydra/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rydra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rydra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rydra/subscriptions",
      "organizations_url": "https://api.github.com/users/Rydra/orgs",
      "repos_url": "https://api.github.com/users/Rydra/repos",
      "events_url": "https://api.github.com/users/Rydra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rydra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-26T07:18:25Z",
    "updated_at": "2015-03-26T07:18:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would need this PR to be accepted as it would ease some unit testing I would wish to perform regarding pathfinding. Is there anything I can do to speed up the acceptance of this?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/86433289",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-86433289",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 86433289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDMzMjg5",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-26T10:05:57Z",
    "updated_at": "2015-03-26T10:09:34Z",
    "author_association": "MEMBER",
    "body": "I don't expect much progress here until more people weigh in on the topic.  You could try perhaps try prodding people in IRC to comment.\n\nLike I mentioned above, I think that TDD is fine in general, and the IGraph interface was a good idea.  While there's nothing in your comment above that I specifically object to (except maybe the idea that we would need multiple Actor implementations. EDIT: and certainly to the idea that test coverage of 90% of the Move class implies 90% of the Move behavior), I also don't think it really counters my main assertion.\n\nMy main objection is to the idea that the specific benefits to OpenRA that come from unit testing the trait code (which I argued aren't nearly as large as one might first assume) are large enough to outweigh the increased indirection, code volume, fragility, and organizational changes that they would require.  That makes them a net-negative in the grand scheme of things.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/86442360",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-86442360",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 86442360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDQyMzYw",
    "user": {
      "login": "Rydra",
      "id": 5826108,
      "node_id": "MDQ6VXNlcjU4MjYxMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5826108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rydra",
      "html_url": "https://github.com/Rydra",
      "followers_url": "https://api.github.com/users/Rydra/followers",
      "following_url": "https://api.github.com/users/Rydra/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rydra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rydra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rydra/subscriptions",
      "organizations_url": "https://api.github.com/users/Rydra/orgs",
      "repos_url": "https://api.github.com/users/Rydra/repos",
      "events_url": "https://api.github.com/users/Rydra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rydra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-26T10:27:15Z",
    "updated_at": "2015-03-26T10:53:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "The matter and main issue is that I'd wish to test stuff in isolation, without any noise from other classes if possible in a controlled environment. World and Player for example are environment classes and I'd wish to easily instantiate and mock them. Same goes to actor and other classes.\n\nThe problem with them is that they are hard as the hell to instantiate. I need separate complex files to do a very simple thing.\n\nOne example would be a test I have in mind regarding my other PR for improving harvester logic: search a specific square that fullfills conditions in a cellLayer. For this I have dependencies with map, world, actors... And I don't want full blown instances of them, I just want to put my function in a test harness and see that it works.\n\nIt adds a layer (which is an interface) but the performance hit is negligible compared with the performance improvement I get because I finally could safely refactor and understand what it does.\n\nI understand the code volume counterpart (yet I disagree with your \"fragility\" point).\n\nAs I said, the point of creating interfaces is to ease and make safer these refactors I'm applying and minimize regressions.\n\nPlease read this:http://www.gamasutra.com/blogs/AlistairDoulin/20111124/90671/Test_Driven_Game_Development_Experiences.php\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/86478455",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-86478455",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 86478455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDc4NDU1",
    "user": {
      "login": "Unit158",
      "id": 706008,
      "node_id": "MDQ6VXNlcjcwNjAwOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/706008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Unit158",
      "html_url": "https://github.com/Unit158",
      "followers_url": "https://api.github.com/users/Unit158/followers",
      "following_url": "https://api.github.com/users/Unit158/following{/other_user}",
      "gists_url": "https://api.github.com/users/Unit158/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Unit158/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Unit158/subscriptions",
      "organizations_url": "https://api.github.com/users/Unit158/orgs",
      "repos_url": "https://api.github.com/users/Unit158/repos",
      "events_url": "https://api.github.com/users/Unit158/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Unit158/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-26T11:43:50Z",
    "updated_at": "2015-03-26T11:43:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Honestly, the unit tests do prove useful. I am often starting a game and playing until a certain event occurs then using breakpoint to examine the execution and result of the code, which is slow as hell. The unit tests do help when I am testing an individual function and I don't know how well it works or if it works for the right reason. They aren't for everyone's problem, however.\n\nOn 2015-03-26, at 6:27 AM, David Jiménez notifications@github.com wrote:\n\n> The matter and main issue is that I'd wish to test stuff in isolation, without any noise from other classes if possible in a controlled environment. World and Player for example are environment classes and I'd wish to easily instantiate and mock them. Same goes to actor and other classes.\n> \n> The problem with them is that they are hard as the hell to instantiate. I need separate complex files to do a very simple thing.\n> \n> One example would be a test I have in mind regarding my other PR for improving harvester logic: search a specific square that fullfills conditions in a cellLayer. For this I have dependencies with map, world, actors... And I don't want full blown implementations of them, I just want to put my function in a test harness and see that it works.\n> \n> It adds a layer (which is an interface) but the performance hit is negligible compared with the performance improvement I get because I finally could safely refactor and understand what it does.\n> \n> I understand the code volume counterpart (yet I disagree with your \"fragility\" point).\n> \n> As I said, the point of creating interfaces is to ease and make safer these refactors I'm applying and minimize regressions.\n> \n> Please read this:http://www.gamasutra.com/blogs/AlistairDoulin/20111124/90671/Test_Driven_Game_Development_Experiences.php\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/86708344",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-86708344",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 86708344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NzA4MzQ0",
    "user": {
      "login": "Rydra",
      "id": 5826108,
      "node_id": "MDQ6VXNlcjU4MjYxMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5826108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rydra",
      "html_url": "https://github.com/Rydra",
      "followers_url": "https://api.github.com/users/Rydra/followers",
      "following_url": "https://api.github.com/users/Rydra/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rydra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rydra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rydra/subscriptions",
      "organizations_url": "https://api.github.com/users/Rydra/orgs",
      "repos_url": "https://api.github.com/users/Rydra/repos",
      "events_url": "https://api.github.com/users/Rydra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rydra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-26T20:45:33Z",
    "updated_at": "2015-03-26T20:45:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've added a new commit that merges with #7658. In the PathfinderTests.cs file I added a new Test for the pathfinding Search algorithm to prove you, @pchote, how easy it's been for me to unit test it. This test will also tell me visually if the call is too complex (which indeed it is) and give me a clearer idea how to tackle it.\n\nNot only this, but now given that there are no heavy dependencies, I can easily benchmark with Stopwatches precisely the inner algorithm of Search and see how changes to this algorithm (because the current implementation is not the most optimal, that's to say) affects execution time.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/86731124",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-86731124",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 86731124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NzMxMTI0",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-26T21:51:11Z",
    "updated_at": "2015-03-26T21:51:11Z",
    "author_association": "MEMBER",
    "body": "I'm going to be that annoying guy and say I generally agree with both of you.\n\nI agree with @pchote in as far as throwing interfaces and abstractions at most of the traits won't likely gain us much as the bugs tend to occur at the integration level and not the unit level.\n\nThat said, I think the pathfinding and movement is something that would benefit significantly from being detangled from the rest of the code. It's so directly interdependent on so many things that nobody has been really willing to do anything substantial with it until now.\n\nAnyway, to get to the point about getting the commit reviewed. Try breaking it down into a bunch of smaller, easily consumable, commits or even PRs. ~2500 changes is simply too much for most of us to work up the motivation to go through in one go, I expect.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/87158452",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-87158452",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 87158452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MTU4NDUy",
    "user": {
      "login": "huwpascoe",
      "id": 1812087,
      "node_id": "MDQ6VXNlcjE4MTIwODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1812087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huwpascoe",
      "html_url": "https://github.com/huwpascoe",
      "followers_url": "https://api.github.com/users/huwpascoe/followers",
      "following_url": "https://api.github.com/users/huwpascoe/following{/other_user}",
      "gists_url": "https://api.github.com/users/huwpascoe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huwpascoe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huwpascoe/subscriptions",
      "organizations_url": "https://api.github.com/users/huwpascoe/orgs",
      "repos_url": "https://api.github.com/users/huwpascoe/repos",
      "events_url": "https://api.github.com/users/huwpascoe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huwpascoe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-28T04:02:59Z",
    "updated_at": "2015-03-28T04:03:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I found it impossibly hard to write tests for the project when installing NUnit, because everything is so tightly connected. You can’t even create an actor without a world. “yeah yeah, actors don’t exist outside of the world bro.” But that’s the problem. What purpose other than mistrusting imaginary programmers does that strange entangled structure exist? There’s no reason for it.\n\nSo here’s someone who’s experienced and clearly knows what he’s doing, at least more than most of us, who’s put so much work into really fixing this long term issue. After taking him through the journey of coding style and rejected and rebased PRs, you’re finally at the point where it’s time to take the leap of faith and you’re too scared to jump.\n\nWhat are you waiting for? The next release deadline is never; the master branch is still very much a mess. Merge it, then fix things when they break. No commit is noise! Bugs happen!\n\nWhat do you want?! : P\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/87189900",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-87189900",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 87189900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MTg5OTAw",
    "user": {
      "login": "Rydra",
      "id": 5826108,
      "node_id": "MDQ6VXNlcjU4MjYxMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5826108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rydra",
      "html_url": "https://github.com/Rydra",
      "followers_url": "https://api.github.com/users/Rydra/followers",
      "following_url": "https://api.github.com/users/Rydra/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rydra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rydra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rydra/subscriptions",
      "organizations_url": "https://api.github.com/users/Rydra/orgs",
      "repos_url": "https://api.github.com/users/Rydra/repos",
      "events_url": "https://api.github.com/users/Rydra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rydra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-28T08:23:59Z",
    "updated_at": "2015-03-28T12:04:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "As suggested by @RoosterDragon, I've reorganized the PR into 3 discrete, separate commits. The first one prepares the infrastructure that allows me to refactor and reorganize Mobile and Move, the second one does the refactor, and the third one adds unit tests to cover them.\n\nAs discussed, unit tests DO NOT cover all possibilities, yet they help a lot in reducing the chance of bugs and creating code which is easier to understand. EDIT: Here's some reference regarding testability from 0 A.D.: http://trac.wildfiregames.com/wiki/WritingTests\n\nFurther work and refactoring will be required in the future probably, but I set the foundations to ease this pain in the future.\n\nThis PR also merges #7658.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/87233094",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-87233094",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 87233094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjMzMDk0",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-28T14:09:58Z",
    "updated_at": "2015-03-28T14:09:58Z",
    "author_association": "MEMBER",
    "body": "@chrisforbes What is your opinion on the matter?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/87235982",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-87235982",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 87235982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjM1OTgy",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-28T14:31:03Z",
    "updated_at": "2015-03-28T14:31:03Z",
    "author_association": "MEMBER",
    "body": "@huwpascoe: I believe I have covered your main points in my comment above: specifically my concerns about return on (code) investment, and dogma overriding specific project requirements.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/87329565",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-87329565",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 87329565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzI5NTY1",
    "user": {
      "login": "huwpascoe",
      "id": 1812087,
      "node_id": "MDQ6VXNlcjE4MTIwODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1812087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huwpascoe",
      "html_url": "https://github.com/huwpascoe",
      "followers_url": "https://api.github.com/users/huwpascoe/followers",
      "following_url": "https://api.github.com/users/huwpascoe/following{/other_user}",
      "gists_url": "https://api.github.com/users/huwpascoe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huwpascoe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huwpascoe/subscriptions",
      "organizations_url": "https://api.github.com/users/huwpascoe/orgs",
      "repos_url": "https://api.github.com/users/huwpascoe/repos",
      "events_url": "https://api.github.com/users/huwpascoe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huwpascoe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-28T23:26:47Z",
    "updated_at": "2015-03-28T23:26:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I finished with 'what do you want?!' (in my usual hyperbolic style) because I really mean that. How do you see the project? What is the goal of the project?\n\nAre your decisions in favor of the goal?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/87362661",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/7565#issuecomment-87362661",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/7565",
    "id": 87362661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzYyNjYx",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T06:19:38Z",
    "updated_at": "2015-03-29T06:20:06Z",
    "author_association": "MEMBER",
    "body": "Can we please return to an objective debate?!\n"
  }
]
