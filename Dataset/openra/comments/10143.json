[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/160388246",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-160388246",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 160388246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDM4ODI0Ng==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-29T07:12:02Z",
    "updated_at": "2015-11-29T07:12:02Z",
    "author_association": "MEMBER",
    "body": "I think the best approach, to start with at least, is to keep a Type[] array whitelisting the specific interfaces we want to check. We can convert them over a few prs, and then after the dust settles change it to a blacklist of the few interfaces we dont want to enforce it on.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/160417083",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-160417083",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 160417083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQxNzA4Mw==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-29T13:40:09Z",
    "updated_at": "2015-11-29T13:55:54Z",
    "author_association": "MEMBER",
    "body": "I did not take that approach because:\n1) White-listed interfaces must be accessible to this namespace at compilation time.\n2) Who decides what should be white-listed? Are we going to bicker back and forth about which interfaces we should check and eventually get nowhere with this PR?\n\nBut I can agree that the proposed approach would move things along more smoothly.\n\nI had the idea of using attributes for this instead of a `Type[]` such as `[AllowImplicitImplementation]`, but this may not be the best way forward.\n\nEither way the logic here for methods doesn't work properly and I do not know why.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/160474250",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-160474250",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 160474250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQ3NDI1MA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-29T21:44:03Z",
    "updated_at": "2015-11-29T21:44:03Z",
    "author_association": "MEMBER",
    "body": "If you can make the attribute work, then go for that.  In any case we can't take this if it causes the tests to fail, and changing all the interfaces in this pr would be way out of scope, so you need _some_ way to define what interfaces should be checked.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/161923709",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-161923709",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 161923709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTkyMzcwOQ==",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-04T09:52:49Z",
    "updated_at": "2015-12-04T09:52:49Z",
    "author_association": "MEMBER",
    "body": "It would probably be quite a while before I can take a look at this, but I'm all for the idea, so don't give up on it.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/162070882",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-162070882",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 162070882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjA3MDg4Mg==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-04T20:16:36Z",
    "updated_at": "2015-12-04T20:16:36Z",
    "author_association": "MEMBER",
    "body": "Consider using [`GetInterfaceMap`](https://msdn.microsoft.com/en-us/library/system.type.getinterfacemap.aspx) to make converting between the interface definitions and the implementing methods easier and more robust.\n\nI'm also unsure of a portable way to check for explicitly implemented methods across different languages. For example VB makes all interface methods explicit and public and you don't get a choice in the matter.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/162110348",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-162110348",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 162110348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjExMDM0OA==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-04T23:34:57Z",
    "updated_at": "2015-12-04T23:37:49Z",
    "author_association": "MEMBER",
    "body": "We don't care about VB at this time, nor do I think we'll ever.\nIf the time comes this can be reworked then.\n\nI didn't use `GetInterfaceMap` because an `[InterfaceMapping]` doesn't have Properties, only Methods.\nSure I could do `typeof(myInterfaceMapping.InterfaceType).GetProperties()` but that is extra code and is unnecessary as-is.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/166445113",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-166445113",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 166445113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjQ0NTExMw==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-21T22:47:53Z",
    "updated_at": "2015-12-21T22:47:53Z",
    "author_association": "MEMBER",
    "body": "Well TIL `GetInterfaceMap` has some serious shortcomings. Pretty lame.\n\nI'm not against this for trait interfaces for reasons that have been pointed out before - but I'm not a fan of blindly applying this to all our interfaces. Making the useful methods on objects unavailable unless you happen to remember to cast things seems counterproductive - moreso if you're not aware that's even an option.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/167437236",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-167437236",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 167437236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzQzNzIzNg==",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-27T19:28:28Z",
    "updated_at": "2015-12-27T19:28:28Z",
    "author_association": "MEMBER",
    "body": "Could not reproduce the bug you mention in the PR description.\nAdding some 'IFolder.`to the methods inside`BigFile` produced this:\n\n> ZipFile.Name (from IFolder) is not explicit!\n> BigFile.Write (from IFolder) is not explicit!\n> BigFile.Priority (from IFolder) is not explicit!\n> BigFile.Name (from IFolder) is not explicit!\n> TraitContainer`1.Add (from ITraitContainer) is not explicit!\n\nThe rest of them are apparently explicit now.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/167816103",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-167816103",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 167816103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzgxNjEwMw==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-29T15:45:12Z",
    "updated_at": "2015-12-29T15:45:12Z",
    "author_association": "MEMBER",
    "body": "At this point I'd very much like this to not be merged.\nThe code is not something I'm proud of and if we are updating to 4.5 I could write an analyzer for this that would be much more accurate.\n\nIf you all still want this implementation now instead of something else later I'll clean up my local commits and push because I now have a working `RequiresExplicitImplementationAttribute`.\n\nLet me know.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/167817849",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-167817849",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 167817849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzgxNzg0OQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-29T15:56:23Z",
    "updated_at": "2015-12-29T15:56:23Z",
    "author_association": "MEMBER",
    "body": "Attribute and clean up please.  Doing something new based on 4.5 is going to have its own set of issues to block it, so let's go with the solution which works now and we can potentially replace it later.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168001168",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168001168",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168001168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODAwMTE2OA==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-30T13:45:40Z",
    "updated_at": "2015-12-30T13:45:40Z",
    "author_association": "MEMBER",
    "body": "This has been updated.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168004081",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168004081",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168004081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODAwNDA4MQ==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-30T13:59:15Z",
    "updated_at": "2015-12-30T14:06:27Z",
    "author_association": "MEMBER",
    "body": "Updated.\nWith the test commit you should get:\n\n```\ntmba:openra thill $ orautil all --check-explicit-interfaces\n\nAircraft.ROT (from IFacing) is not explicit!\nAircraft.Facing (from IFacing) is not explicit!\nHusk.ROT (from IFacing) is not explicit!\nHusk.Facing (from IFacing) is not explicit!\nMobile.ROT (from IFacing) is not explicit!\nMobile.Facing (from IFacing) is not explicit!\nExplicit interface violations: 6\n```\n\nMeaning CI **should** fail.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168067617",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168067617",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168067617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODA2NzYxNw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-30T20:19:24Z",
    "updated_at": "2015-12-30T20:19:24Z",
    "author_association": "MEMBER",
    "body": "Works as advertised. Awesome!\n\n:+1: after addressing the three fixups above and removing the test commit.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168068573",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168068573",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168068573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODA2ODU3Mw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-30T20:26:59Z",
    "updated_at": "2015-12-30T20:26:59Z",
    "author_association": "MEMBER",
    "body": "Found a problem with a bit more testing: this isn't picking up the implicit implementation of `ISelectionBar` by `OpenRA.OpenRA.Mods.RA.Traits.Chronoshiftable` (and probably other traits).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168197771",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168197771",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168197771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODE5Nzc3MQ==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-31T13:55:39Z",
    "updated_at": "2015-12-31T13:56:16Z",
    "author_association": "MEMBER",
    "body": "This has been fixed.\n\n```\ntmba:openra thill $ orautil all --check-explicit-interfaces\nAircraft.ROT (from IFacing) is not explicit!\nAircraft.Facing (from IFacing) is not explicit!\nBaseProvider.GetValue (from ISelectionBar) is not explicit!\nBaseProvider.GetColor (from ISelectionBar) is not explicit!\nExternalCapturableBar.GetValue (from ISelectionBar) is not explicit!\nExternalCapturableBar.GetColor (from ISelectionBar) is not explicit!\nHusk.ROT (from IFacing) is not explicit!\nHusk.Facing (from IFacing) is not explicit!\nMobile.ROT (from IFacing) is not explicit!\nMobile.Facing (from IFacing) is not explicit!\nAffectedByPowerOutage.GetValue (from ISelectionBar) is not explicit!\nAffectedByPowerOutage.GetColor (from ISelectionBar) is not explicit!\nProductionBar.GetValue (from ISelectionBar) is not explicit!\nProductionBar.GetColor (from ISelectionBar) is not explicit!\nSupportPowerChargeBar.GetValue (from ISelectionBar) is not explicit!\nSupportPowerChargeBar.GetColor (from ISelectionBar) is not explicit!\nTimedUpgradeBar.GetValue (from ISelectionBar) is not explicit!\nTimedUpgradeBar.GetColor (from ISelectionBar) is not explicit!\nChronoshiftable.GetValue (from ISelectionBar) is not explicit!\nChronoshiftable.GetColor (from ISelectionBar) is not explicit!\nPortableChrono.GetValue (from ISelectionBar) is not explicit!\nPortableChrono.GetColor (from ISelectionBar) is not explicit!\nTemporaryOwnerManager.GetValue (from ISelectionBar) is not explicit!\nTemporaryOwnerManager.GetColor (from ISelectionBar) is not explicit!\nExplicit interface violations: 24\n```\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168207403",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168207403",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168207403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODIwNzQwMw==",
    "user": {
      "login": "ScottNZ",
      "id": 1712619,
      "node_id": "MDQ6VXNlcjE3MTI2MTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1712619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ScottNZ",
      "html_url": "https://github.com/ScottNZ",
      "followers_url": "https://api.github.com/users/ScottNZ/followers",
      "following_url": "https://api.github.com/users/ScottNZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/ScottNZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ScottNZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ScottNZ/subscriptions",
      "organizations_url": "https://api.github.com/users/ScottNZ/orgs",
      "repos_url": "https://api.github.com/users/ScottNZ/repos",
      "events_url": "https://api.github.com/users/ScottNZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ScottNZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-31T14:57:31Z",
    "updated_at": "2015-12-31T14:57:31Z",
    "author_association": "MEMBER",
    "body": "I suggest a reword:\n`A.B does not explicitly implement IA.B`\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168208784",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168208784",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168208784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODIwODc4NA==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-31T15:04:52Z",
    "updated_at": "2015-12-31T15:04:52Z",
    "author_association": "MEMBER",
    "body": "How would you feel about `A does not explicitly implement IA.B`?\nI don't see any gain from duplicating the member name.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168233777",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168233777",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168233777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODIzMzc3Nw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-31T18:42:34Z",
    "updated_at": "2016-01-01T14:10:00Z",
    "author_association": "MEMBER",
    "body": "I'd prefer it if we could use wording that matched the other stylecop rules.\ne.g.: `PortableChrono must explicitly implement the interface member ISelectionBar.GetValue`\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168310910",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168310910",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168310910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODMxMDkxMA==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-01T14:27:47Z",
    "updated_at": "2016-01-01T14:27:47Z",
    "author_association": "MEMBER",
    "body": "Ok, done.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168339503",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168339503",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168339503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODMzOTUwMw==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-01T21:40:33Z",
    "updated_at": "2016-01-01T21:40:33Z",
    "author_association": "MEMBER",
    "body": "Food for thought: One drawback of doing this is that these interface methods become uncallable and unoverridable by derived classes.unless you manually provide workarounds for it.\n\nSee [here](https://msdn.microsoft.com/en-us/library/aa664593%28v=vs.71%29.aspx) and [here](https://msdn.microsoft.com/en-us/library/ms182153.aspx).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168339549",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168339549",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168339549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODMzOTU0OQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-01T21:42:10Z",
    "updated_at": "2016-01-01T21:42:10Z",
    "author_association": "MEMBER",
    "body": "@RoosterDragon is this a problem for us in practice?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168340374",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168340374",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168340374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODM0MDM3NA==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-01T21:54:23Z",
    "updated_at": "2016-01-01T21:54:56Z",
    "author_association": "MEMBER",
    "body": "Probably not a major issue, but it would be odd in that we'd up end having to write explicit implementations that just defer to a public equivalent anyway. In fact we already have an example of this in `Warhead.cs` which does:\n\n``` c#\npublic readonly int Delay = 0;\nint IWarhead.Delay { get { return Delay; } }\n```\n\nThe explicit implementation here is entirely redundant:\n- It does the same, morally, as the default, implicit, implementation would.\n- Since the `Delay` is already public, we're not protecting it from misuse by hiding it away in an explicit implementation.\n\nEssentially, we're painting ourselves into a slightly dumb anti-pattern for those few traits that are intended to be inherited and modified.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168490283",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168490283",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168490283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODQ5MDI4Mw==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-03T11:36:39Z",
    "updated_at": "2016-01-03T11:39:41Z",
    "author_association": "MEMBER",
    "body": "My understanding was that specific example was because we need a property for it to satisfy the warhead interface, so that we can access it without the concrete type.  The explicit implementation is only there to resolve the naming conflict.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168540797",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168540797",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168540797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODU0MDc5Nw==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-03T21:06:48Z",
    "updated_at": "2016-01-03T21:06:48Z",
    "author_association": "MEMBER",
    "body": "I'm just saying that this sort of thing might up end cropping up in a few places if we need to satisfy this linter.\n\nI'm not saying we shouldn't go ahead with this either, I'm just mentioning it.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168695754",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168695754",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168695754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODY5NTc1NA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T14:46:48Z",
    "updated_at": "2016-01-04T14:47:30Z",
    "author_association": "MEMBER",
    "body": "Ok, fair enough.  If this does become a problem then we can work around it by either keeping the interface implicit or by adding a new attribute to white-list specific members.\n\nNeeds a rebase, and then :+1: from me after dropping the test commit.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/168791110",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-168791110",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 168791110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc5MTExMA==",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T20:09:10Z",
    "updated_at": "2016-01-04T20:09:10Z",
    "author_association": "MEMBER",
    "body": "Why drop the test commit? Fix it and make it not-test.\nOtherwise this is adding dead weight.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/172387508",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-172387508",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 172387508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjM4NzUwOA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-17T21:58:05Z",
    "updated_at": "2016-01-17T21:58:05Z",
    "author_association": "MEMBER",
    "body": "This should be ready for merge.  Can we get a rebase and fixup here?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/172395487",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-172395487",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 172395487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjM5NTQ4Nw==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-17T23:32:11Z",
    "updated_at": "2016-01-17T23:32:11Z",
    "author_association": "MEMBER",
    "body": "I count a single :+1:.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/172533867",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-172533867",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 172533867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjUzMzg2Nw==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-18T14:02:42Z",
    "updated_at": "2016-01-18T14:02:42Z",
    "author_association": "MEMBER",
    "body": "Rebased and updated the test case to be a passing case.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/172628036",
    "html_url": "https://github.com/OpenRA/OpenRA/pull/10143#issuecomment-172628036",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10143",
    "id": 172628036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjYyODAzNg==",
    "user": {
      "login": "obrakmann",
      "id": 4331210,
      "node_id": "MDQ6VXNlcjQzMzEyMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4331210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obrakmann",
      "html_url": "https://github.com/obrakmann",
      "followers_url": "https://api.github.com/users/obrakmann/followers",
      "following_url": "https://api.github.com/users/obrakmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/obrakmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obrakmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obrakmann/subscriptions",
      "organizations_url": "https://api.github.com/users/obrakmann/orgs",
      "repos_url": "https://api.github.com/users/obrakmann/repos",
      "events_url": "https://api.github.com/users/obrakmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obrakmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-18T19:23:40Z",
    "updated_at": "2016-01-18T19:23:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks fine to me. :+1: \n"
  }
]
