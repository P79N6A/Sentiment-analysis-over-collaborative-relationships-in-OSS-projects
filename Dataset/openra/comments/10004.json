[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/174344323",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/10004#issuecomment-174344323",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10004",
    "id": 174344323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDM0NDMyMw==",
    "user": {
      "login": "Mailaender",
      "id": 756669,
      "node_id": "MDQ6VXNlcjc1NjY2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/756669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mailaender",
      "html_url": "https://github.com/Mailaender",
      "followers_url": "https://api.github.com/users/Mailaender/followers",
      "following_url": "https://api.github.com/users/Mailaender/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mailaender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mailaender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mailaender/subscriptions",
      "organizations_url": "https://api.github.com/users/Mailaender/orgs",
      "repos_url": "https://api.github.com/users/Mailaender/repos",
      "events_url": "https://api.github.com/users/Mailaender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mailaender/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-24T21:47:10Z",
    "updated_at": "2016-01-24T21:47:10Z",
    "author_association": "MEMBER",
    "body": "Is this a duplicate of https://github.com/OpenRA/OpenRA/issues/10361?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/176658572",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/10004#issuecomment-176658572",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10004",
    "id": 176658572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NjY1ODU3Mg==",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-29T09:22:03Z",
    "updated_at": "2016-01-29T09:22:03Z",
    "author_association": "MEMBER",
    "body": "[09:03:57]  < penev|m> Well the context is different\n[09:04:06]  < penev|m> One is about being unable to attack\n[09:04:31]  < penev|m> The other is about AutoTarget dismissing frozen actors as potential targets \n[09:05:13]  < pchote> I assume it was dismissing them because they were unable to attack\n[09:05:54]  < penev|m> Don't think so from what I recall\n[09:06:22]  < penev|m> Like I said on the ticket, they attack if ordered \n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/201537082",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/10004#issuecomment-201537082",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10004",
    "id": 201537082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTUzNzA4Mg==",
    "user": {
      "login": "obrakmann",
      "id": 4331210,
      "node_id": "MDQ6VXNlcjQzMzEyMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4331210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obrakmann",
      "html_url": "https://github.com/obrakmann",
      "followers_url": "https://api.github.com/users/obrakmann/followers",
      "following_url": "https://api.github.com/users/obrakmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/obrakmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obrakmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obrakmann/subscriptions",
      "organizations_url": "https://api.github.com/users/obrakmann/orgs",
      "repos_url": "https://api.github.com/users/obrakmann/repos",
      "events_url": "https://api.github.com/users/obrakmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obrakmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-25T21:59:24Z",
    "updated_at": "2016-03-26T13:19:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Found out that [this](https://github.com/OpenRA/OpenRA/blob/bleed/OpenRA.Mods.Common/Traits/Modifiers/FrozenUnderFog.cs#L88) returns false for frozen actors, which is obviously wrong.\n\n[This line](https://github.com/OpenRA/OpenRA/blob/bleed/OpenRA.Mods.Common/Traits/Modifiers/FrozenUnderFog.cs#L111) ends up being part of the problem. The targeting logic uses visibility as the only factor contributing to an attack decision. However, `FrozenUnderFog`'s `IsVisible` flag depends on the visibility of the frozen actor alone. So when the frozen actor is visible, we can't attack, when it isn't (ie., we can see the real actor), we can. The problem is that we can't just switch that logic around, because it's also used to decide what should be rendered.\n\nSo ultimately, the problem is that rendering of frozen actors vs the real actor (which are mutually exclusive, obviously) is governed by the same flag that is used for targeting (which should treat both the frozen actor and the real one the same way).\n\n@pchote, @RoosterDragon: any ideas?\n\nEdit: probably introduced by #9262.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/203152101",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/10004#issuecomment-203152101",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/10004",
    "id": 203152101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzE1MjEwMQ==",
    "user": {
      "login": "RoosterDragon",
      "id": 3399086,
      "node_id": "MDQ6VXNlcjMzOTkwODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3399086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoosterDragon",
      "html_url": "https://github.com/RoosterDragon",
      "followers_url": "https://api.github.com/users/RoosterDragon/followers",
      "following_url": "https://api.github.com/users/RoosterDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoosterDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoosterDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoosterDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/RoosterDragon/orgs",
      "repos_url": "https://api.github.com/users/RoosterDragon/repos",
      "events_url": "https://api.github.com/users/RoosterDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoosterDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T23:11:23Z",
    "updated_at": "2016-03-29T23:11:23Z",
    "author_association": "MEMBER",
    "body": "This isn't a regression - it's always been like this as best I can tell. I assume the fix we need is to disentangle the targeting and rendering decisions from each other - but there will probably be some side effects we'll have to fix if we do that.\n"
  }
]
