[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/145167088",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9511#issuecomment-145167088",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9511",
    "id": 145167088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTE2NzA4OA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T22:04:28Z",
    "updated_at": "2015-10-02T22:04:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Needs to be controllable though, RA2 broke/deleted this logic.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/145170830",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9511#issuecomment-145170830",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9511",
    "id": 145170830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTE3MDgzMA==",
    "user": {
      "login": "reaperrr",
      "id": 2857877,
      "node_id": "MDQ6VXNlcjI4NTc4Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2857877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reaperrr",
      "html_url": "https://github.com/reaperrr",
      "followers_url": "https://api.github.com/users/reaperrr/followers",
      "following_url": "https://api.github.com/users/reaperrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/reaperrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reaperrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reaperrr/subscriptions",
      "organizations_url": "https://api.github.com/users/reaperrr/orgs",
      "repos_url": "https://api.github.com/users/reaperrr/repos",
      "events_url": "https://api.github.com/users/reaperrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reaperrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T22:31:48Z",
    "updated_at": "2015-10-02T22:31:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe a `AlignWithArmament:` property on `WithVoxelBarrel`, which allows you to select with which `Armament` to align it with (and default would be `null`, of course).\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/145177594",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9511#issuecomment-145177594",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9511",
    "id": 145177594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTE3NzU5NA==",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T23:01:51Z",
    "updated_at": "2015-10-02T23:01:51Z",
    "author_association": "MEMBER",
    "body": "I'm all _for_ configurability, but doing it just because one of the original games broke the feature is silly.\nSame could then go for helicopter rotors in TS or FoW in TS/RA2. ;)\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/145180530",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9511#issuecomment-145180530",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9511",
    "id": 145180530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTE4MDUzMA==",
    "user": {
      "login": "atlimit8",
      "id": 4957137,
      "node_id": "MDQ6VXNlcjQ5NTcxMzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4957137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atlimit8",
      "html_url": "https://github.com/atlimit8",
      "followers_url": "https://api.github.com/users/atlimit8/followers",
      "following_url": "https://api.github.com/users/atlimit8/following{/other_user}",
      "gists_url": "https://api.github.com/users/atlimit8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atlimit8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atlimit8/subscriptions",
      "organizations_url": "https://api.github.com/users/atlimit8/orgs",
      "repos_url": "https://api.github.com/users/atlimit8/repos",
      "events_url": "https://api.github.com/users/atlimit8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atlimit8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T23:11:17Z",
    "updated_at": "2015-10-02T23:11:17Z",
    "author_association": "MEMBER",
    "body": "`primary` would be a better default. I also don't see why brake something for bug compatibility.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/145181190",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9511#issuecomment-145181190",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9511",
    "id": 145181190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTE4MTE5MA==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T23:16:18Z",
    "updated_at": "2015-10-02T23:16:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay, I reiterate. RA2 voxels are **not** made with this in mind - most of them look jarring with moving barrels. Animated voxels weren't using this neither (note that recoil was **always** a voxel animation via playing many voxels after each other in RA2 (Grand Cannon, Prism Tank)). That and separated barrels themselves fell out of use, with only the pre-RA2 Light Tank, Grizzly, Rhino and Apocalypse having such... hell, YR Lasher Tank even had a bug of having the  aforementioned pre-RA2 Light Tank barrel _along with it's own barrel merged into the turret_!\n\nI'm all up for fixing WW bugs and everything, but this should be definitely optional - I don't mind the default value itself though as long as the option exists.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/145181864",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9511#issuecomment-145181864",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9511",
    "id": 145181864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTE4MTg2NA==",
    "user": {
      "login": "penev92",
      "id": 7137365,
      "node_id": "MDQ6VXNlcjcxMzczNjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7137365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/penev92",
      "html_url": "https://github.com/penev92",
      "followers_url": "https://api.github.com/users/penev92/followers",
      "following_url": "https://api.github.com/users/penev92/following{/other_user}",
      "gists_url": "https://api.github.com/users/penev92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/penev92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/penev92/subscriptions",
      "organizations_url": "https://api.github.com/users/penev92/orgs",
      "repos_url": "https://api.github.com/users/penev92/repos",
      "events_url": "https://api.github.com/users/penev92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/penev92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T23:23:19Z",
    "updated_at": "2015-10-02T23:23:19Z",
    "author_association": "MEMBER",
    "body": "Fair enough. I guess RA2 will need that regardless of what we want, unless we redo the artwork, which isn't exactly fiesable.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/145182979",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9511#issuecomment-145182979",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9511",
    "id": 145182979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTE4Mjk3OQ==",
    "user": {
      "login": "atlimit8",
      "id": 4957137,
      "node_id": "MDQ6VXNlcjQ5NTcxMzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4957137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atlimit8",
      "html_url": "https://github.com/atlimit8",
      "followers_url": "https://api.github.com/users/atlimit8/followers",
      "following_url": "https://api.github.com/users/atlimit8/following{/other_user}",
      "gists_url": "https://api.github.com/users/atlimit8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atlimit8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atlimit8/subscriptions",
      "organizations_url": "https://api.github.com/users/atlimit8/orgs",
      "repos_url": "https://api.github.com/users/atlimit8/repos",
      "events_url": "https://api.github.com/users/atlimit8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atlimit8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T23:30:58Z",
    "updated_at": "2015-10-02T23:30:58Z",
    "author_association": "MEMBER",
    "body": "An empty string could be usable as meaning no armament. `primary` would still be the preferred default.\n"
  }
]
