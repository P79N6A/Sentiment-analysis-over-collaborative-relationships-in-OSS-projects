[
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/153202070",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9872#issuecomment-153202070",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9872",
    "id": 153202070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzIwMjA3MA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-03T00:20:49Z",
    "updated_at": "2015-11-03T00:21:22Z",
    "author_association": "MEMBER",
    "body": "The main advantage to the `ResourceAlias` is that it comes for free - no additional plumbing or coupling between traits is required.  The `SubstituteResource` would need an explicit check from either the resource being queried or the things trying to use it.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/153210734",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9872#issuecomment-153210734",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9872",
    "id": 153210734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzIxMDczNA==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-03T01:22:16Z",
    "updated_at": "2015-11-03T01:22:16Z",
    "author_association": "NONE",
    "body": "The more I think about it, the more I think that `ResourceAlias` is the more flexible design, since it provides more control to the client of the resource, and it allows for lots of possible permutations, possibly at the same time. On the flip side, it means that every client needs to be aware of all the possible aliases, and I doubt that flexibility would be needed in actual, reasonable module designs.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/153211008",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9872#issuecomment-153211008",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9872",
    "id": 153211008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzIxMTAwOA==",
    "user": {
      "login": "atlimit8",
      "id": 4957137,
      "node_id": "MDQ6VXNlcjQ5NTcxMzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4957137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atlimit8",
      "html_url": "https://github.com/atlimit8",
      "followers_url": "https://api.github.com/users/atlimit8/followers",
      "following_url": "https://api.github.com/users/atlimit8/following{/other_user}",
      "gists_url": "https://api.github.com/users/atlimit8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atlimit8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atlimit8/subscriptions",
      "organizations_url": "https://api.github.com/users/atlimit8/orgs",
      "repos_url": "https://api.github.com/users/atlimit8/repos",
      "events_url": "https://api.github.com/users/atlimit8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atlimit8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-03T01:24:48Z",
    "updated_at": "2015-11-03T03:40:14Z",
    "author_association": "MEMBER",
    "body": "I agree with the preference for `ResourceAlias` concept with it implementing `IResourceType`.\nExcept I would name it differently:\n\n``` yaml\nCompositeResource@Funds:\n    Name: Funds\n    From: Ore, Gems, Cash\n```\n\nor\n\n``` yaml\nCompositeResource@Funds:\n    Name: Funds\n    From: MixedOre, Cash\n    Ratios: # default is 1, 1 => 1:1\n        MixedOre: 25, 1 # 25 in funds : 1 unit of MixedOre\nCompositeResource@MixedOre:\n    Name: MixedOre\n    From: Ore, Gems\n    Ratios: # default is 1, 1 => 1:1\n        Gems: 2, 1 # 2 units of MixedOre : 1 unit of Gems\n```\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/153292357",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9872#issuecomment-153292357",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9872",
    "id": 153292357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzI5MjM1Nw==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-03T09:06:26Z",
    "updated_at": "2015-11-03T09:06:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could someone elaborate to me why allowing to have multiple `PlayerResources` ain't a way to go?\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/153351026",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9872#issuecomment-153351026",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9872",
    "id": 153351026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM1MTAyNg==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-03T13:23:51Z",
    "updated_at": "2015-11-03T13:23:51Z",
    "author_association": "MEMBER",
    "body": "@GraionDilach: It is.  It has just been renamed.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/153351489",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9872#issuecomment-153351489",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9872",
    "id": 153351489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM1MTQ4OQ==",
    "user": {
      "login": "Phrohdoh",
      "id": 4861023,
      "node_id": "MDQ6VXNlcjQ4NjEwMjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4861023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phrohdoh",
      "html_url": "https://github.com/Phrohdoh",
      "followers_url": "https://api.github.com/users/Phrohdoh/followers",
      "following_url": "https://api.github.com/users/Phrohdoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phrohdoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phrohdoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phrohdoh/subscriptions",
      "organizations_url": "https://api.github.com/users/Phrohdoh/orgs",
      "repos_url": "https://api.github.com/users/Phrohdoh/repos",
      "events_url": "https://api.github.com/users/Phrohdoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phrohdoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-03T13:25:48Z",
    "updated_at": "2015-11-03T13:25:48Z",
    "author_association": "MEMBER",
    "body": "```\n[13:09:56]  <Phrohdoh> hi all\n[13:11:22]  <Phrohdoh> wrt resources it is great that we're filling better possibilities, but I do feel that I need to say _please_ don't become unnecessarily complex. I'm not saying \"dumb it down\" but why do we *need* the ratios? etc. Also, if this is the way we're going, I think we should require plenty of documentation (and examples).\n[13:13:54]  <pchote> hi\n[13:13:56]  <pchote> ratios?\n[13:15:32]  <Phrohdoh> something atlimit8 suggested on the issue\n[13:15:33]  <pchote> ah, I missed that comment\n[13:15:36]  <pchote> I agree with you\n[13:17:27]  <Phrohdoh> I don't see why we even need conversions. Explicitly require a resource type and be done with that side. On the income side, make certain incomes directly related to certain resources (ie types, again).\n[13:17:54]  <pchote> Phrohdoh: the problem is that the original games have two different types of money that can be spent in the same way\n[13:18:12]  <Phrohdoh> I understand this, but why don't we implement both of those as cash?\n[13:18:14]  <pchote> we need a way of specifying that units can be bought using cash *or* ore\n[13:18:20]  <Phrohdoh> We don't store them in silos independantly.\n[13:18:25]  <pchote> we do actually\n[13:18:33]  <pchote> silos only apply to ore/tib\n[13:18:37]  <pchote> so is capped\n[13:18:38]  <Phrohdoh> We do globally, then we fill all silos visually.\n[13:18:39]  <pchote> cash is not capped\n[13:18:45]  <Phrohdoh> Okay, true.\n[13:19:45]  <Phrohdoh> I don't think modders will want to think about that (and the complexity), is all I'm trying to say. Unless they're creating an AoE they want things to be bought with \"money\", whatever you harvest.\n[13:20:00]  <Phrohdoh> So cash-or-(ore|tib) seems like the only sensible thing for us to do.\n[13:20:12]  <pchote> yes\n[13:20:29]  <pchote> I believe that my suggestion there is the simplest thing that will work\n[13:20:40]  <pchote> and that we need a strong justification for doing anything more complicated than that\n[13:21:26]  <Phrohdoh> I can agree with that, but not the naming coppro suggested.\n[13:22:05]  <pchote> naming is a bit of an issue, yes, because of the confusion with our harvestable resource definitions\n[13:22:16]  <pchote> it may be possible to combine those though\n[13:22:56]  <pchote> but that would bring its own uglyness\n[13:23:48]  <Phrohdoh> Certainly. Let's not take any of this without plenty of descs. \n```\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/153354976",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9872#issuecomment-153354976",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9872",
    "id": 153354976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM1NDk3Ng==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-03T13:37:53Z",
    "updated_at": "2015-11-03T13:37:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't see the need of `ResourceAlias` justified neither. A `StoredFirst/ProcessedFirst` boolean is enough per `PlayerResource`. The name property of said `PlayerResource` then can be shared with all resources then, so ore, gems and OilDerricks could reference, say the `Money` PR which has a `ProcessedFirst: false` or `StoredFirst:  true` property for bleed behaviour. \n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/153355679",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9872#issuecomment-153355679",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9872",
    "id": 153355679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM1NTY3OQ==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-03T13:41:31Z",
    "updated_at": "2015-11-03T13:41:31Z",
    "author_association": "MEMBER",
    "body": "@GraionDilach: the problem isn't with storage, but with spending.  Mods need the ability to define that a unit can be bought using either cash (not capped, not harvested) _or_ ore/tib, and other mods need the ability to define that a unit requires say stone _and_ gold _and_ steel.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/153357759",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9872#issuecomment-153357759",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9872",
    "id": 153357759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM1Nzc1OQ==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-03T13:48:49Z",
    "updated_at": "2015-11-03T13:48:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Units could have more `Valued` traits, one per `PlayerResource`.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/153362415",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9872#issuecomment-153362415",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9872",
    "id": 153362415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM2MjQxNQ==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-03T13:59:43Z",
    "updated_at": "2015-11-03T13:59:43Z",
    "author_association": "NONE",
    "body": "Not all resources have a stored/processed distinction. The intent is to separate them so that we don't maintain that distinction in C# any more but have capacity configurable on a per-resource basis. One could easily imagine a resource type that doesn't have processed resources, but all resources of that type contribute to capacity. We would then need to indicate somewhere both the type of resources that, say, selling a building gives you and also whether it gives processed or stored resources. Splitting these into two is much cleaner.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/156279756",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9872#issuecomment-156279756",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9872",
    "id": 156279756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjI3OTc1Ng==",
    "user": {
      "login": "GraionDilach",
      "id": 1136302,
      "node_id": "MDQ6VXNlcjExMzYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1136302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GraionDilach",
      "html_url": "https://github.com/GraionDilach",
      "followers_url": "https://api.github.com/users/GraionDilach/followers",
      "following_url": "https://api.github.com/users/GraionDilach/following{/other_user}",
      "gists_url": "https://api.github.com/users/GraionDilach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GraionDilach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GraionDilach/subscriptions",
      "organizations_url": "https://api.github.com/users/GraionDilach/orgs",
      "repos_url": "https://api.github.com/users/GraionDilach/repos",
      "events_url": "https://api.github.com/users/GraionDilach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GraionDilach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-13T00:29:14Z",
    "updated_at": "2015-11-13T00:29:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm all up with that. But let's see why I still think your way is fishy.\n\nCurrently there are 5 ways to gain income in the released mods.\n- Through the `OreRefinery` trait\n- Through selling an actor\n- Through a crate\n- Through the `CashTrickler` trait (Oil Derricks, both in RA and TD)\n- Through Supply Trucks (RA only)\n\nRight now, the `PlayerResources` trait handles both the storage management (albeit limited since it's hardcoded to distribute this between all actors with the `Storage` trait) and the differentiation between storage-required (all income involving the `OreRefinery` trait) and storage-ignoring (the other three ways) resource (where it prioritizes spending the resource which isn't stored first).\n\nThe main limits are the things I remarked.\n\nThe problem I see with your proposal is that you see the harvestable resource types of currently released mods (Ore/Gems, greenTiberium/blueTiberium) as different resources, while I see them as subtypes of the same resource, since both use the same `OreRefinery` trait. Shifting the untangling of these resource subtypes from `PlayerResources` level to `Valued` trait level (as @Phrohdoh shown it on the other day) will also imply that any other way excluding the depositable resource types will involve hacks through their traits/actions to duplicate a behaviour which exists already in the current `PlayerResources` trait and it sounds simpler to me to expand that trait with maintaining the resource aliases, unhardcoding the storage usage behaviour (which involves killing off storage for that particular resource as well) and the storaged-notstoraged resource-usage priority (which ofcourse would only apply if the actual resource type could be stored afterall).\n\nI'm fine with using the Valued trait for untangling distinct resource types (dictionary vs multiple traits is just a minor difference) but using it even for untangling resource subtypes is something I find an overhead considering the resources of the currently released mods.\n\nYes, I'm aware that most games involving multiple resources does not use a storage logic, but that alone does not enough to me to justify an entire trait-interaction logic refactor into something which ultimately scales well with individual resources, but gets messy with interchangeable resources when the default mods have the latter - and only TS will have noninterchangeable resources in the form of cash vs. veins.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/156359698",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9872#issuecomment-156359698",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9872",
    "id": 156359698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjM1OTY5OA==",
    "user": {
      "login": "pchote",
      "id": 167819,
      "node_id": "MDQ6VXNlcjE2NzgxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/167819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pchote",
      "html_url": "https://github.com/pchote",
      "followers_url": "https://api.github.com/users/pchote/followers",
      "following_url": "https://api.github.com/users/pchote/following{/other_user}",
      "gists_url": "https://api.github.com/users/pchote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pchote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pchote/subscriptions",
      "organizations_url": "https://api.github.com/users/pchote/orgs",
      "repos_url": "https://api.github.com/users/pchote/repos",
      "events_url": "https://api.github.com/users/pchote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pchote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-13T08:18:47Z",
    "updated_at": "2015-11-13T08:18:47Z",
    "author_association": "MEMBER",
    "body": "@GraionDilach: I don't think anyone is proposing that we track the different harvestable tiberium types as separate spendable resources.  They would all be stored and spent as a single Tiberium type.\n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/156513155",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9872#issuecomment-156513155",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9872",
    "id": 156513155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjUxMzE1NQ==",
    "user": {
      "login": "xan2622",
      "id": 1732773,
      "node_id": "MDQ6VXNlcjE3MzI3NzM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1732773?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xan2622",
      "html_url": "https://github.com/xan2622",
      "followers_url": "https://api.github.com/users/xan2622/followers",
      "following_url": "https://api.github.com/users/xan2622/following{/other_user}",
      "gists_url": "https://api.github.com/users/xan2622/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xan2622/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xan2622/subscriptions",
      "organizations_url": "https://api.github.com/users/xan2622/orgs",
      "repos_url": "https://api.github.com/users/xan2622/repos",
      "events_url": "https://api.github.com/users/xan2622/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xan2622/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-13T18:37:50Z",
    "updated_at": "2015-11-13T18:37:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@GraionDilach: Also, (like in Total Annihilation):\n- Through salvaged husks or wreckages \n"
  },
  {
    "url": "https://api.github.com/repos/OpenRA/OpenRA/issues/comments/354430390",
    "html_url": "https://github.com/OpenRA/OpenRA/issues/9872#issuecomment-354430390",
    "issue_url": "https://api.github.com/repos/OpenRA/OpenRA/issues/9872",
    "id": 354430390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDQzMDM5MA==",
    "user": {
      "login": "KOYK",
      "id": 5400487,
      "node_id": "MDQ6VXNlcjU0MDA0ODc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5400487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KOYK",
      "html_url": "https://github.com/KOYK",
      "followers_url": "https://api.github.com/users/KOYK/followers",
      "following_url": "https://api.github.com/users/KOYK/following{/other_user}",
      "gists_url": "https://api.github.com/users/KOYK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KOYK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KOYK/subscriptions",
      "organizations_url": "https://api.github.com/users/KOYK/orgs",
      "repos_url": "https://api.github.com/users/KOYK/repos",
      "events_url": "https://api.github.com/users/KOYK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KOYK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-29T10:50:06Z",
    "updated_at": "2017-12-29T10:50:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "is any one working on this?"
  }
]
