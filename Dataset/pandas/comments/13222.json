[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220107548",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13222#issuecomment-220107548",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13222",
    "id": 220107548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDEwNzU0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T17:56:16Z",
    "updated_at": "2016-05-18T17:56:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220112076",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13222#issuecomment-220112076",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13222",
    "id": 220112076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDExMjA3Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T18:12:30Z",
    "updated_at": "2016-05-18T18:12:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is functioning as designed.\n\nThe [docs](http://pandas.pydata.org/pandas-docs/version/0.18.1/style.html#Finer-Control:-Slicing) lay it out here. The second item \"A list (or series or numpy array)\" should say \"A list (or series or numpy array) is treated as a slice on the columns\".\n\nTo just style the first row you can use\n- `df.style.apply(highlight, subset=(0,))`  # note the comma to make it a tuple\n- `df.style.apply(highlight, subset=pd.IndexSlice[0, :])`\n\nThat section in the docs should be updated though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220120877",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13222#issuecomment-220120877",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13222",
    "id": 220120877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDEyMDg3Nw==",
    "user": {
      "login": "paulperry",
      "id": 501736,
      "node_id": "MDQ6VXNlcjUwMTczNg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/501736?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulperry",
      "html_url": "https://github.com/paulperry",
      "followers_url": "https://api.github.com/users/paulperry/followers",
      "following_url": "https://api.github.com/users/paulperry/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulperry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulperry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulperry/subscriptions",
      "organizations_url": "https://api.github.com/users/paulperry/orgs",
      "repos_url": "https://api.github.com/users/paulperry/repos",
      "events_url": "https://api.github.com/users/paulperry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulperry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T18:44:09Z",
    "updated_at": "2016-05-18T18:44:09Z",
    "author_association": "NONE",
    "body": "I'm trying to highlight a subset of rows (not just the first one).  \n\n```\ndf.style.apply(highlight, axis=0, subset=pd.IndexSlice[[0,1], :])\ndf.style.apply(highlight, subset=pd.IndexSlice[[0,1], :])\n```\n\nFail with \n\n```\n/Users/paulperry/anaconda/lib/python3.5/site-packages/pandas/core/style.py in _update_ctx(self, attrs)\n    376         matter.\n    377         \"\"\"\n--> 378         for row_label, v in attrs.iterrows():\n    379             for col_label, col in v.iteritems():\n    380                 i = self.index.get_indexer([row_label])[0]\n\n/Users/paulperry/anaconda/lib/python3.5/site-packages/pandas/core/generic.py in __getattr__(self, name)\n   2667             if name in self._info_axis:\n   2668                 return self[name]\n-> 2669             return object.__getattribute__(self, name)\n   2670 \n   2671     def __setattr__(self, name, value):\n\nAttributeError: 'Series' object has no attribute 'iterrows'\n```\n\nHow can I do this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220124057",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13222#issuecomment-220124057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13222",
    "id": 220124057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDEyNDA1Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T18:55:40Z",
    "updated_at": "2016-05-18T18:55:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, that one looks like it might be a bug. I'll take a closer look tonight.\n\nOn May 18 2016, at 1:44 pm, Paul Perry &lt;notifications@github.com&gt; wrote:  \n\n> I'm trying to highlight a subset of rows (not just the first one).\n> \n> ```\n> df.style.apply(highlight, axis=0, subset=pd.IndexSlice[[0,1], :])\n> \n> df.style.apply(highlight, subset=pd.IndexSlice[[0,1], :])\n> ```\n> \n> Fail with\n> \n> ```\n> /Users/paulperry/anaconda/lib/python3.5/site-\n> ```\n> \n> packages/pandas/core/style.py in _update_ctx(self, attrs)\n> \n> ```\n>     376         matter.\n> \n>     377         \"\"\"\n> \n> --> 378         for row_label, v in attrs.iterrows():\n> \n>     379             for col_label, col in v.iteritems():\n> \n>     380                 i = self.index.get_indexer([row_label])[0]\n> \n> \n> /Users/paulperry/anaconda/lib/python3.5/site-\n> ```\n> \n> packages/pandas/core/generic.py in **getattr**(self, name)\n> \n> ```\n>    2667             if name in self._info_axis:\n> \n>    2668                 return self[name]\n> \n> -> 2669             return object.__getattribute__(self, name)\n> \n>    2670\n> \n>    2671     def __setattr__(self, name, value):\n> \n> \n> AttributeError: 'Series' object has no attribute 'iterrows'\n> ```\n> \n> How can I do this?\n> \n> â€”  \n> You are receiving this because you were mentioned.  \n> Reply to this email directly or [view it on GitHub](https://github.com/pydata/\n> pandas/issues/13222#issuecomment-220120877)![](https://github.com/notification\n> s/beacon/ABQHIiOuLYlIIrjjk396jCeWO5G_tZUCks5qC14CgaJpZM4Ihh4e.gif)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220127144",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13222#issuecomment-220127144",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13222",
    "id": 220127144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDEyNzE0NA==",
    "user": {
      "login": "paulperry",
      "id": 501736,
      "node_id": "MDQ6VXNlcjUwMTczNg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/501736?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulperry",
      "html_url": "https://github.com/paulperry",
      "followers_url": "https://api.github.com/users/paulperry/followers",
      "following_url": "https://api.github.com/users/paulperry/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulperry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulperry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulperry/subscriptions",
      "organizations_url": "https://api.github.com/users/paulperry/orgs",
      "repos_url": "https://api.github.com/users/paulperry/repos",
      "events_url": "https://api.github.com/users/paulperry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulperry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T19:06:59Z",
    "updated_at": "2016-05-18T19:06:59Z",
    "author_association": "NONE",
    "body": "While you are at it you might reconsider the interpretation that subset lists are only considered slices of columns. (\"the second item\").  It seems to me that the axis parameter already identifies whether it is an index or a column.  It looks odd that axis=0 can only act on one row, and to do anything else requires a slice object. This renders the axis parameter useless.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220161585",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13222#issuecomment-220161585",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13222",
    "id": 220161585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDE2MTU4NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T21:19:44Z",
    "updated_at": "2016-05-18T21:20:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, there's a few things going on...\n1. To accomplish this specific task you'd be better off using `df.style.set_properties(subset=pd.IndexSlice[[0, 1], :], **{'background-color': 'yellow'})`. `set_properties` is a nice shortcut for functions that don't depend on the data that's passed in. If you notice in the definition for your `highlight`, you don't actually use `s` in the body, so you're safe to use `set_properties`.\n2. When you use `Styler.apply(func)`, the output shape of `func` has to be the same shape as the input. That's what's causing the error in your last message. To modify your `highlight` you'd want something like\n\n``` python\ndef highlight(s):\n    return ['background-color: yellow' for _ in s]\n```\n\nThe `df.style.apply(highlight, subset=(0,))` happened to work since the output shape was the same (one row input, one list output).\nThis need for the output-shape to match the input shape is not at all clear in the documentation.\n3. We do need `axis` and subset. axis determines whether a row or column is passed to `func`. `subset` determines which subset of the original dataframe those rows or columns are drawn from.\n\nI'll submit a PR tonight with some better documentation. Sorry it wasn't clearer to begin with, and thanks for the feedback.\n\nI'll think about how we can fail better here when the output shapes doesn't match, the current error message isn't great.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220188568",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13222#issuecomment-220188568",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13222",
    "id": 220188568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDE4ODU2OA==",
    "user": {
      "login": "paulperry",
      "id": 501736,
      "node_id": "MDQ6VXNlcjUwMTczNg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/501736?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulperry",
      "html_url": "https://github.com/paulperry",
      "followers_url": "https://api.github.com/users/paulperry/followers",
      "following_url": "https://api.github.com/users/paulperry/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulperry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulperry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulperry/subscriptions",
      "organizations_url": "https://api.github.com/users/paulperry/orgs",
      "repos_url": "https://api.github.com/users/paulperry/repos",
      "events_url": "https://api.github.com/users/paulperry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulperry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T23:32:06Z",
    "updated_at": "2016-05-18T23:32:06Z",
    "author_association": "NONE",
    "body": "Tom, that works, thank you.  The doc had me believe the apply func worked the same on rows as columns.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220341738",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13222#issuecomment-220341738",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13222",
    "id": 220341738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDM0MTczOA==",
    "user": {
      "login": "paulperry",
      "id": 501736,
      "node_id": "MDQ6VXNlcjUwMTczNg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/501736?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulperry",
      "html_url": "https://github.com/paulperry",
      "followers_url": "https://api.github.com/users/paulperry/followers",
      "following_url": "https://api.github.com/users/paulperry/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulperry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulperry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulperry/subscriptions",
      "organizations_url": "https://api.github.com/users/paulperry/orgs",
      "repos_url": "https://api.github.com/users/paulperry/repos",
      "events_url": "https://api.github.com/users/paulperry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulperry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-19T14:30:02Z",
    "updated_at": "2016-05-19T14:30:02Z",
    "author_association": "NONE",
    "body": "A little more on what I ran into: when the column names are integers I don't have a way of selecting them for styling.  This may be unrelated to styling, but I can't solve this without renaming the columns as strings.  I seem to do it positionally in the first example, but not the last one. Do you have a better suggestion?\n\nThese work:\n\n```\ndff = pd.DataFrame([[1,2],[3,4]])\ndisplay(dff.style.set_properties(subset=[1], **{'background-color': 'pink'}))\n\ngood_df = pd.DataFrame([[1,2],[3,4]], columns=['5','6'], index=[0,1]) \ngood_df.style.set_properties(subset=['5'], **{'background-color': 'pink'})\n```\n\nThese fail:\n\n```\nbad_df = pd.DataFrame([[1,2],[3,4]], columns=[5,6], index=[0,1]) \nbad_df.style.set_properties(subset=[5], **{'background-color': 'pink'})\nbad_df.style.set_properties(subset=pd.IndexSlice[:,[5]], **{'background-color': 'pink'})\n\npositional_list = [bad_df.columns.get_loc(c) for c in [bad_df.columns[1]]]\nbad_df.style.set_properties(subset=positional_list, **{'background-color': 'pink'})\n```\n\nEven though indexing by number works:\n\n```\nbad_df.loc[:,5]\nbad_df.loc[pd.IndexSlice[:,[5]]]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220344097",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13222#issuecomment-220344097",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13222",
    "id": 220344097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDM0NDA5Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-19T14:37:36Z",
    "updated_at": "2016-05-19T14:37:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@paulperry your first two `bad_df` examples work for me\n\n![screen shot 2016-05-19 at 9 34 55 am](https://cloud.githubusercontent.com/assets/1312546/15397252/08411560-1da5-11e6-90cd-513e617c8044.png)\n\nat least I assume that's your expected output. The last one (correctly) raises a KeyError. Only label-based indexing is allowed for `subset` (this one is documented, but maybe not emphasized enough).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220349284",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13222#issuecomment-220349284",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13222",
    "id": 220349284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDM0OTI4NA==",
    "user": {
      "login": "paulperry",
      "id": 501736,
      "node_id": "MDQ6VXNlcjUwMTczNg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/501736?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulperry",
      "html_url": "https://github.com/paulperry",
      "followers_url": "https://api.github.com/users/paulperry/followers",
      "following_url": "https://api.github.com/users/paulperry/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulperry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulperry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulperry/subscriptions",
      "organizations_url": "https://api.github.com/users/paulperry/orgs",
      "repos_url": "https://api.github.com/users/paulperry/repos",
      "events_url": "https://api.github.com/users/paulperry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulperry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-19T14:54:14Z",
    "updated_at": "2016-05-19T14:54:14Z",
    "author_association": "NONE",
    "body": "@TomAugspurger yes! That's the right output.  And I get the same good output you have in the environment I posted at the top of the thread, but not this one with the older pandas 0.17.1  : \n\n```\nINSTALLED VERSIONS\n------------------\ncommit: None\npython: 3.5.1.final.0\npython-bits: 64\nOS: Linux\nOS-release: 4.4.8-boot2docker\nmachine: x86_64\nprocessor: \nbyteorder: little\nLC_ALL: en_US.UTF-8\nLANG: en_US.UTF-8\n\npandas: 0.17.1\nnose: None\npip: 8.1.1\nsetuptools: 20.3\nCython: None\nnumpy: 1.10.4\nscipy: 0.17.0\nstatsmodels: None\nIPython: 4.1.2\nsphinx: None\npatsy: None\ndateutil: 2.5.0\npytz: 2016.1\nblosc: None\nbottleneck: None\ntables: None\nnumexpr: None\nmatplotlib: 1.5.1\nopenpyxl: None\nxlrd: None\nxlwt: None\nxlsxwriter: None\nlxml: None\nbs4: None\nhtml5lib: None\nhttplib2: None\napiclient: None\nsqlalchemy: None\npymysql: None\npsycopg2: None\nJinja2: None\n```\n\nThe error:\n\n```\nbad_df = pd.DataFrame([[1,2],[3,4]], columns=[5,6], index=[0,1]) \nbad_df.style.set_properties(subset=[5], **{'background-color': 'pink'})\n\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n/opt/conda/lib/python3.5/site-packages/IPython/core/formatters.py in __call__(self, obj)\n    341             method = _safe_get_formatter_method(obj, self.print_method)\n    342             if method is not None:\n--> 343                 return method()\n    344             return None\n    345         else:\n\n/opt/conda/lib/python3.5/site-packages/pandas/core/style.py in _repr_html_(self)\n    158         Hooks into Jupyter notebook rich display system.\n    159         '''\n--> 160         return self.render()\n    161 \n    162     def _translate(self):\n\n/opt/conda/lib/python3.5/site-packages/pandas/core/style.py in render(self)\n    259         \"\"\"\n    260         self._compute()\n--> 261         d = self._translate()\n    262         # filter out empty styles, every cell will have a class\n    263         # but the list of props may just be [['', '']].\n\n/opt/conda/lib/python3.5/site-packages/pandas/core/style.py in _translate(self)\n    220                 cs = [DATA_CLASS, \"row%s\" % r, \"col%s\" % c]\n    221                 cs.extend(cell_context.get(\"data\", {}).get(r, {}).get(c, []))\n--> 222                 row_es.append({\"type\": \"td\", \"value\": self.data.iloc[r][c],\n    223                                \"class\": \" \".join(cs), \"id\": \"_\".join(cs[1:])})\n    224                 props = []\n\n/opt/conda/lib/python3.5/site-packages/pandas/core/series.py in __getitem__(self, key)\n    555     def __getitem__(self, key):\n    556         try:\n--> 557             result = self.index.get_value(self, key)\n    558 \n    559             if not np.isscalar(result):\n\n/opt/conda/lib/python3.5/site-packages/pandas/core/index.py in get_value(self, series, key)\n   1788 \n   1789         try:\n-> 1790             return self._engine.get_value(s, k)\n   1791         except KeyError as e1:\n   1792             if len(self) > 0 and self.inferred_type in ['integer','boolean']:\n\npandas/index.pyx in pandas.index.IndexEngine.get_value (pandas/index.c:3204)()\n\npandas/index.pyx in pandas.index.IndexEngine.get_value (pandas/index.c:2903)()\n\npandas/index.pyx in pandas.index.IndexEngine.get_loc (pandas/index.c:3843)()\n\npandas/hashtable.pyx in pandas.hashtable.Int64HashTable.get_item (pandas/hashtable.c:6525)()\n\npandas/hashtable.pyx in pandas.hashtable.Int64HashTable.get_item (pandas/hashtable.c:6463)()\n\nKeyError: 0\n\n<pandas.core.style.Styler at 0x7f63edb63780>\n```\n\nThank you!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220360352",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13222#issuecomment-220360352",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13222",
    "id": 220360352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDM2MDM1Mg==",
    "user": {
      "login": "paulperry",
      "id": 501736,
      "node_id": "MDQ6VXNlcjUwMTczNg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/501736?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulperry",
      "html_url": "https://github.com/paulperry",
      "followers_url": "https://api.github.com/users/paulperry/followers",
      "following_url": "https://api.github.com/users/paulperry/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulperry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulperry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulperry/subscriptions",
      "organizations_url": "https://api.github.com/users/paulperry/orgs",
      "repos_url": "https://api.github.com/users/paulperry/repos",
      "events_url": "https://api.github.com/users/paulperry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulperry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-19T15:27:33Z",
    "updated_at": "2016-05-19T15:27:33Z",
    "author_association": "NONE",
    "body": "I forgot to mention that the Linux version above is the docker image of the dev environment for the declarativewidgets project and easily obtainable here: https://github.com/jupyter-incubator/declarativewidgets#develop \n"
  }
]
