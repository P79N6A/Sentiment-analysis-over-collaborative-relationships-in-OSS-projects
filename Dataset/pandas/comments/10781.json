[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/129405216",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10781#issuecomment-129405216",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10781",
    "id": 129405216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTQwNTIxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-10T10:50:22Z",
    "updated_at": "2015-08-10T10:50:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "You are observing whey `.loc` is always recommended over `.ix`.\n`.ix` is a bit inconsistent in its handling of integer-like indices in different scenarios.\n\nThis is not a bug but some inference magic. bottom line for consistent indexing always use `.loc`.\n\n```\nIn [13]: data.ix[0]\nOut[13]: \n        column\nlevel1        \n0            0\n1            1\n2            2\n\nIn [14]: data.ix[[0]]\nOut[14]: \n               column\nlevel0 level1        \n0      0            0\n\nIn [15]: data.loc[0]\nOut[15]: \n        column\nlevel1        \n0            0\n1            1\n2            2\n\nIn [16]: data.loc[[0]]\nOut[16]: \n               column\nlevel0 level1        \n0      0            0\n       1            1\n       2            2\n```\n"
  }
]
