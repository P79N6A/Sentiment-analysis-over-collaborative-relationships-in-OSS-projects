[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/310882775",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16769#issuecomment-310882775",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16769",
    "id": 310882775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg4Mjc3NQ==",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-25T05:03:20Z",
    "updated_at": "2017-06-25T05:03:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note that it works as excepted in pandas 0.19.2."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/310884007",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16769#issuecomment-310884007",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16769",
    "id": 310884007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg4NDAwNw==",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-25T05:41:14Z",
    "updated_at": "2017-06-25T05:41:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems that the problem is rather the DataFrame class itself.  It happens even when there are multiple keys.:\r\n\r\n```python\r\nIn [1]: import pandas\r\n\r\nIn [2]: pandas.DataFrame({('a',): [1], ('b',): [2]}).columns\r\nOut[2]: Index(['a', 'b'], dtype='object')\r\n\r\nIn [3]: pandas.DataFrame({('a',): [1], 'b': [2]}).columns\r\nOut[3]: Index([('a',), 'b'], dtype='object')\r\n```\r\n\r\nI expect `Out [2]: Index([('a',), ('b',)], dtype='object')`.\r\n\r\nReproduced in the current master (1265c27f4bbd06e1bb75f846139a164bdadd5b31):\r\n\r\n<details>\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: 1265c27f4bbd06e1bb75f846139a164bdadd5b31\r\npython: 3.6.0.final.0\r\npython-bits: 64\r\nOS: Linux\r\nOS-release: 4.4.47-1-lts\r\nmachine: x86_64\r\nprocessor:\r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: en_US.UTF-8\r\nLOCALE: en_US.UTF-8\r\n\r\npandas: 0.21.0.dev+179.g1265c27f4\r\npytest: None\r\npip: 9.0.1\r\nsetuptools: 36.0.1\r\nCython: 0.25.2\r\nnumpy: 1.13.0\r\nscipy: None\r\nxarray: None\r\nIPython: 6.1.0\r\nsphinx: None\r\npatsy: None\r\ndateutil: 2.6.0\r\npytz: 2017.2\r\nblosc: None\r\nbottleneck: None\r\ntables: None\r\nnumexpr: None\r\nfeather: None\r\nmatplotlib: None\r\nopenpyxl: None\r\nxlrd: None\r\nxlwt: None\r\nxlsxwriter: None\r\nlxml: None\r\nbs4: None\r\nhtml5lib: None\r\nsqlalchemy: None\r\npymysql: None\r\npsycopg2: None\r\njinja2: None\r\ns3fs: None\r\npandas_gbq: None\r\npandas_datareader: None\r\n</details>"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/310884201",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16769#issuecomment-310884201",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16769",
    "id": 310884201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg4NDIwMQ==",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-25T05:47:08Z",
    "updated_at": "2017-06-25T05:47:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another related strange and inconsistent behavior is that setting tuple(s) to `DataFrame.columns` changes the result depending on whether there is only one column or multiple columns:\r\n\r\n```python\r\nIn [1]: import pandas\r\n\r\nIn [2]: df1 = pandas.DataFrame({'a': [1]})\r\n\r\nIn [3]: df1.columns = [('a',)]\r\n\r\nIn [4]: df1.columns\r\nOut[4]: Index(['a'], dtype='object')\r\n\r\nIn [5]: df2 = pandas.DataFrame({'a': [1], 'b': [2]})\r\n\r\nIn [6]: df2.columns = [('a',), ('b',)]\r\n\r\nIn [7]: df2.columns\r\nOut[7]: Index([('a',), ('b',)], dtype='object')\r\n\r\nIn [8]: df3 = pandas.DataFrame({('a',): [1], ('b',): [2]})\r\n\r\nIn [9]: df3.columns\r\nOut[9]: Index(['a', 'b'], dtype='object')\r\n\r\nIn [10]: df3.columns = [('a',), ('b',)]\r\n\r\nIn [11]: df3.columns\r\nOut[11]: Index([('a',), ('b',)], dtype='object')\r\n```\r\n\r\nI expect `Out[4]: Index([('a',)], dtype='object')` (and as I already mentioned, `Out[9]: Index([('a',), ('b',)], dtype='object')`)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/310891307",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16769#issuecomment-310891307",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16769",
    "id": 310891307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg5MTMwNw==",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-25T09:03:35Z",
    "updated_at": "2017-06-25T09:03:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is a workaround I've found.  You can avoid pandas \"de-tupling\" a singleton tuple by adding a dummy column:\r\n\r\n```python\r\nnewcolumns = [c if isinstance(c, tuple) else (c,) for c in df.columns]\r\ndummy = object()\r\ndf[dummy] = pandas.Categorical(0)\r\ndf.columns = newcolumns + [dummy]\r\ndel df[dummy]\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/311619493",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16769#issuecomment-311619493",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16769",
    "id": 311619493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTYxOTQ5Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-28T10:21:40Z",
    "updated_at": "2017-06-28T10:21:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tkf a  len-1 tuple as an Index entry is not allowed. This would imply \r\n\r\n```\r\nIn [65]: pd.MultiIndex.from_tuples([('a',)])\r\nOut[65]: Index(['a'], dtype='object')\r\n```\r\nwould actually return a 1-level ``MultiIndex``.  which is by-definition an ``Index``. Tuples indicate levels on index contruction. In a Series/DataFrame construction w/o explicit instructions these go thru ``_ensure_index`` which will try to figure out what you want. if you want to be explicit it would work.\r\n\r\nYou can bisect if you want and see when this changed as you said it worked in 0.19.2."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/313578335",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16769#issuecomment-313578335",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16769",
    "id": 313578335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzU3ODMzNQ==",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-07T03:32:46Z",
    "updated_at": "2017-07-07T03:32:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I'm not talking about MultiIndex here. I want to use tuples of arbitrary length as keys.  This is actually noted as a valid use-case in the document:\r\n\r\n> It’s worth keeping in mind that there’s nothing preventing you from using tuples as atomic labels on an axis\r\n> --- http://pandas.pydata.org/pandas-docs/stable/advanced.html#creating-a-multiindex-hierarchical-index-object\r\n\r\nAt the \"atomic\" levels, I think any hashable has to be accepted as-is.  This includes a singleton tuple."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/313799922",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16769#issuecomment-313799922",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16769",
    "id": 313799922,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzc5OTkyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-07T21:41:39Z",
    "updated_at": "2017-07-07T21:41:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tkf well, you are fighting pandas here. I'll mark it, and if you can find a change that makes your test work and preserves other behavior then would accept."
  }
]
