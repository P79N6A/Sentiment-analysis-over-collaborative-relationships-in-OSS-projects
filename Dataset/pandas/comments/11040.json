[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/139143552",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11040#issuecomment-139143552",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11040",
    "id": 139143552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTE0MzU1Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-10T07:35:23Z",
    "updated_at": "2015-09-10T07:35:23Z",
    "author_association": "MEMBER",
    "body": "What is your questions exactly?\n\nThe error message says that you have to specify an escapechar (from the docs: `escapechar: Character used to escape sep and quotechar when appropriate`). This is because the separator you use (whitespace) also is present in the data. For this, you have to escape this.\n\nE.g.\n\n```\nIn [29]: print df.to_csv(index=False,header=False,quoting=3,sep=' ', escapechar='\\\\')\n123 this\\ is\\ \"out\\ text\"\n```\n\n or use another separator\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/139245225",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11040#issuecomment-139245225",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11040",
    "id": 139245225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTI0NTIyNQ==",
    "user": {
      "login": "valenal",
      "id": 2908462,
      "node_id": "MDQ6VXNlcjI5MDg0NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2908462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/valenal",
      "html_url": "https://github.com/valenal",
      "followers_url": "https://api.github.com/users/valenal/followers",
      "following_url": "https://api.github.com/users/valenal/following{/other_user}",
      "gists_url": "https://api.github.com/users/valenal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/valenal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/valenal/subscriptions",
      "organizations_url": "https://api.github.com/users/valenal/orgs",
      "repos_url": "https://api.github.com/users/valenal/repos",
      "events_url": "https://api.github.com/users/valenal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/valenal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-10T14:06:35Z",
    "updated_at": "2015-09-10T14:06:35Z",
    "author_association": "NONE",
    "body": "Joris, thanks for the help. My question or what I am trying to achieve is\nto imitate another files format.This files format uses spaces as\nseparators, specific spacing for each column and doesn't contain quotes at\nall. Like so (note varaible spaces between columns)\n\n  374140.00000 3756062.00000  9.663200e-03    30.00    30.00\n\n  369722.00000 3755236.00000  0.000000e+00    51.86    57.00\n\nHowever, due to the specific spaces in each column and the fact that it\nuses spaces as delimiter I can only achieve this with the to_csv function\nby saving my output to the file with quotes and then removing the quotes of\nthe created file.\n\n\"  374140.00000\" 3756062.00000 \" 9.663200e-03\" \"   30.00\" \"   30.00\"\n\n\"  369722.00000\" 3755236.00000 \" 0.000000e+00\" \"   51.86\" \"   57.00\"\n\nIs there no way in pandas to not output quotes ? I thought that was what\n\"quoting=3\" was for. Thanks in advance.\n\nOn Thu, Sep 10, 2015, 3:35 AM Joris Van den Bossche <\nnotifications@github.com> wrote:\n\n> What is your questions exactly?\n> \n> The error message says that you have to specify an escapechar (from the\n> docs: escapechar: Character used to escape sep and quotechar when\n> appropriate). This is because the separator you use (whitespace) also is\n> present in the data. For this, you have to escape this.\n> \n> E.g.\n> \n> In [29]: print df.to_csv(index=False,header=False,quoting=3,sep=' ', escapechar='\\')\n> 123 this\\ is\\ \"out\\ text\"\n> \n> or use another separator\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/issues/11040#issuecomment-139143552.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/139247832",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11040#issuecomment-139247832",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11040",
    "id": 139247832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTI0NzgzMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-10T14:15:25Z",
    "updated_at": "2015-09-10T14:15:25Z",
    "author_association": "MEMBER",
    "body": "It is certainly possible to not have quotes in the csv output, that is indeed where quoting=3 is for. But, you have following problems: 1) your example data included quotes, do you expect these to go away? Because the quoting is only to put around the values, it does not change anything inside the strings itself. And 2) pandas does not support using a space as a delimiter if there are also spaces in the values. This would lead to a file that cannot be interpreted correctly.\n\nBut can you provide a small reproducible example of what you like to do? (because now you used some other data). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/139335537",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11040#issuecomment-139335537",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11040",
    "id": 139335537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTMzNTUzNw==",
    "user": {
      "login": "valenal",
      "id": 2908462,
      "node_id": "MDQ6VXNlcjI5MDg0NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2908462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/valenal",
      "html_url": "https://github.com/valenal",
      "followers_url": "https://api.github.com/users/valenal/followers",
      "following_url": "https://api.github.com/users/valenal/following{/other_user}",
      "gists_url": "https://api.github.com/users/valenal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/valenal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/valenal/subscriptions",
      "organizations_url": "https://api.github.com/users/valenal/orgs",
      "repos_url": "https://api.github.com/users/valenal/repos",
      "events_url": "https://api.github.com/users/valenal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/valenal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-10T18:25:55Z",
    "updated_at": "2015-09-21T12:41:01Z",
    "author_association": "NONE",
    "body": "Joris thanks again for the help. What I want to do is something in the\nlines of \"2\". This is a space delimited file where the columns have spacing\nas well, but I understand that pandas doesn't allow a space delimiter without\nthe esacpechar.\n\n I can achieve what I want by allowing the escapechar (#) in my to_csv\noutput and then removing the \"#\" after the fact (example shown below), but\nI could have just done that be allowing quotes and then removing them.\nUltimately, I want to avoid having to read the file again to have to remove\nextra characters.\n\n```\n>>>import numpy as np\n>>>import pandas as pd\n>>>import os\n>>>import subprocess\n\n>>>df = pd.DataFrame(np.random.randn(6,4))\n>>>df[4] = 'Test'\n\n>>>c0   = lambda x: '{0:14.5f}'.format(x)\n>>>c1   = lambda x: '{0:13.5f}'.format(x)\n>>>c2   = lambda x: '{0:13.6e}'.format(x)\n>>>c3 = lambda x: '{0:8.2f}'.format(x)\n>>>c4   = lambda x: '{0:>7}'.format(x)\n\n>>>for ix,i in enumerate([c0,c1,c2,c3,c4]):\n>>>    df[ix] = df[ix].map(i)\n\n>>>with open('test1.txt', 'w') as outF:\n>>>    df.to_csv(outF, header=False, index=False, sep='\n',quoting=3,quotechar='',escapechar='#')\n\n>>>#What I want my output to look like without having to use SED\n>>>with open('test2.txt' ,'w') as f:\n>>>    subprocess.call(['sed','s/#//g','test1.txt'],stdout=f)\n```\n"
  }
]
