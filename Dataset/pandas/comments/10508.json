[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/118557346",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10508#issuecomment-118557346",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10508",
    "id": 118557346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExODU1NzM0Ng==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-04T21:53:31Z",
    "updated_at": "2015-07-09T11:34:45Z",
    "author_association": "MEMBER",
    "body": "Fixing `Categorical.unique` to return unique `Categorical`. Would like to confirm the expected behavior based on current impl.\n- unordered category: values and categories are sorted by appearance order, excluding unnecessary ones.\n- ordered category: values are sorted by appearance order, categories keeps existing order excluding unnecessary ones.\n\n```\nimport pandas as pd\nimport numpy as np\n\n# unordered\ncat = pd.Categorical([\"b\",\"b\",\"a\",\"a\"], categories=[\"a\",\"b\",\"c\"])\ncat.unique()\n# [b, a]\n# Categories (2, object): [b, a]\n\ncat = pd.Categorical([\"b\", \"b\", np.nan, \"a\"], categories=[\"a\",\"b\",\"c\"]) \ncat.unique()\n# [b, a]\n# Categories (2, object): [b, a]\n\n# ordered\ncat = pd.Categorical([\"b\",\"b\",\"a\",\"a\"], categories=[\"a\",\"b\",\"c\"], ordered=True)\ncat.unique()\n# [b, a]\n# Categories (2, object): [a < b]\n\ncat = pd.Categorical([\"b\", \"b\", np.nan, \"a\"], categories=[\"a\",\"b\",\"c\"], ordered=True) \ncat.unique()\n# [b, a]\n# Categories (2, object): [a < b]\n```\n\nLooks `groupby` needs some logic for `Categorical(ordered=True)` and `sort=False`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/118636468",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10508#issuecomment-118636468",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10508",
    "id": 118636468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExODYzNjQ2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-05T16:22:35Z",
    "updated_at": "2015-07-05T16:22:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "the uniques should not have `nan` in them. Further I think the `ordered=True` should order according to the categories (e.g. the present ones), this might be a small API change.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/119922960",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10508#issuecomment-119922960",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10508",
    "id": 119922960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTkyMjk2MA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-09T11:37:57Z",
    "updated_at": "2015-07-09T11:37:57Z",
    "author_association": "MEMBER",
    "body": "Ah, correct. Fixed and updated the example above.\n\nI understand `groupby` result must follows the same rule as above. It means `groupby(Categorical(ordered=True), sorted=False)` will have the index sorted by the order of categories, was previously ordered by appearance of values (unsorted).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121595610",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10508#issuecomment-121595610",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10508",
    "id": 121595610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTU5NTYxMA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T12:09:02Z",
    "updated_at": "2015-07-15T12:09:02Z",
    "author_association": "MEMBER",
    "body": "> uniques should not have nan\n\nI have misunderstand this with `value_counts`. Currently, `unique` returns array including `NaN` both normal and categorical.\n\n```\npd.Series([1., 2., 1., np.nan]).unique()\n# array([  1.,   2.,  nan])\npd.Series([1., 2., 1., np.nan], dtype='category').unique()\n# array([  1.,   2.,  nan])\n```\n\nSo, the fixed categorical result should preserve `NaN` in codes and not in categories as below? \n\n```\n>>> pd.Series([1., 2., 1., np.nan], dtype='category').unique()\n# [1, 2, NaN]\n# Categories (2, float64): [1, 2]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/125569890",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10508#issuecomment-125569890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10508",
    "id": 125569890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTU2OTg5MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-28T11:41:55Z",
    "updated_at": "2015-07-28T11:41:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "lgtm. merge when ready.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/125605171",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10508#issuecomment-125605171",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10508",
    "id": 125605171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTYwNTE3MQ==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-28T13:25:27Z",
    "updated_at": "2015-07-28T13:25:27Z",
    "author_association": "MEMBER",
    "body": "Thanks, let me merge this once rebase and gets green.\n"
  }
]
