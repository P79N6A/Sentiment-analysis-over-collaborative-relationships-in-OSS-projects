[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57358540",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8425#issuecomment-57358540",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8425",
    "id": 57358540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzU4NTQw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-30T18:20:28Z",
    "updated_at": "2014-09-30T18:20:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you make your code runnable (so can simply copy/paste). you have some undefined variables.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57377904",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8425#issuecomment-57377904",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8425",
    "id": 57377904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Mzc3OTA0",
    "user": {
      "login": "aimboden",
      "id": 8589139,
      "node_id": "MDQ6VXNlcjg1ODkxMzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8589139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aimboden",
      "html_url": "https://github.com/aimboden",
      "followers_url": "https://api.github.com/users/aimboden/followers",
      "following_url": "https://api.github.com/users/aimboden/following{/other_user}",
      "gists_url": "https://api.github.com/users/aimboden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aimboden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aimboden/subscriptions",
      "organizations_url": "https://api.github.com/users/aimboden/orgs",
      "repos_url": "https://api.github.com/users/aimboden/repos",
      "events_url": "https://api.github.com/users/aimboden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aimboden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-30T20:32:16Z",
    "updated_at": "2014-10-01T06:14:45Z",
    "author_association": "NONE",
    "body": "Sorry about that! Should be fine now. If not, will check when back in the office tomorrow. \n\nEDIT: the code now reproduces the above mentioned bug\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57504637",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8425#issuecomment-57504637",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8425",
    "id": 57504637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTA0NjM3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-01T17:37:15Z",
    "updated_at": "2014-10-01T17:37:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Gimli510 that does look buggy.\n\nwelcome a pull-request to fix.\n\nYou can use your test example above, just step thru the code and see where its breaking and try a fix.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57594885",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8425#issuecomment-57594885",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8425",
    "id": 57594885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTk0ODg1",
    "user": {
      "login": "aimboden",
      "id": 8589139,
      "node_id": "MDQ6VXNlcjg1ODkxMzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8589139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aimboden",
      "html_url": "https://github.com/aimboden",
      "followers_url": "https://api.github.com/users/aimboden/followers",
      "following_url": "https://api.github.com/users/aimboden/following{/other_user}",
      "gists_url": "https://api.github.com/users/aimboden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aimboden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aimboden/subscriptions",
      "organizations_url": "https://api.github.com/users/aimboden/orgs",
      "repos_url": "https://api.github.com/users/aimboden/repos",
      "events_url": "https://api.github.com/users/aimboden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aimboden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-02T07:51:34Z",
    "updated_at": "2014-10-02T07:52:56Z",
    "author_association": "NONE",
    "body": "@jreback I think I found where the bug comes from.\nThe function _union_index calls\nlib.fast_unique_multiple_list(indexes), which sorts the keys before returning them. Should we carry a flag telling this cython function not to sort the keys when the indexes list was created from an ordered dict? I guess there is a cleaner way to do this, but don't really have any idea about how to go about it.\n\n``` python\n# Up to this point, the future index is ordered as it should.\nindexes = [['zShould be first', 'Should be second'], ['zShould be first', 'Should be second']]\n# When indexes is a list with more than 1 items, we hit this path:        \n# return Index(lib.fast_unique_multiple_list(indexes))\n\n# However, \nlib.fast_unique_multiple_list(indexes)\n```\n\nreturns\n\n``` python\n['Should be second', 'zShould be first']\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57616916",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8425#issuecomment-57616916",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8425",
    "id": 57616916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjE2OTE2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-02T11:54:09Z",
    "updated_at": "2014-10-02T11:54:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this should be handled in `core/pandas/frame/extract_index`. Need to differentiate between a dict and an OrderedDict. \n\nmaybe add in a `have_ordered` in addition to setting `have_dict`. Then you can pass this to `_union_indexes(indexes,ordered=have_ordered)`\n\nThen you can validate that if `ordered=True` is passed (default is False)\nthen can do a unique preserving order (so pass the flag into `fast_unique_multiple`, iow don't sort)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/144202291",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8425#issuecomment-144202291",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8425",
    "id": 144202291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDIwMjI5MQ==",
    "user": {
      "login": "hamedhsn",
      "id": 4147327,
      "node_id": "MDQ6VXNlcjQxNDczMjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4147327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hamedhsn",
      "html_url": "https://github.com/hamedhsn",
      "followers_url": "https://api.github.com/users/hamedhsn/followers",
      "following_url": "https://api.github.com/users/hamedhsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hamedhsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hamedhsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hamedhsn/subscriptions",
      "organizations_url": "https://api.github.com/users/hamedhsn/orgs",
      "repos_url": "https://api.github.com/users/hamedhsn/repos",
      "events_url": "https://api.github.com/users/hamedhsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hamedhsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T21:55:07Z",
    "updated_at": "2015-09-29T21:55:07Z",
    "author_association": "NONE",
    "body": "@jreback \nI have done based on what you said  and in the last part how can I pass the flag to fast_unique_multiple because it calls fast_unique_multiple_list(_args, *_kwargs) and when I look at the lib.pyx it always sort the list at the end(uniques.sort())\nany idea?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/280752647",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8425#issuecomment-280752647",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8425",
    "id": 280752647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDc1MjY0Nw==",
    "user": {
      "login": "alichaudry",
      "id": 15057353,
      "node_id": "MDQ6VXNlcjE1MDU3MzUz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15057353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alichaudry",
      "html_url": "https://github.com/alichaudry",
      "followers_url": "https://api.github.com/users/alichaudry/followers",
      "following_url": "https://api.github.com/users/alichaudry/following{/other_user}",
      "gists_url": "https://api.github.com/users/alichaudry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alichaudry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alichaudry/subscriptions",
      "organizations_url": "https://api.github.com/users/alichaudry/orgs",
      "repos_url": "https://api.github.com/users/alichaudry/repos",
      "events_url": "https://api.github.com/users/alichaudry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alichaudry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-17T20:05:05Z",
    "updated_at": "2017-02-17T20:05:05Z",
    "author_association": "NONE",
    "body": "@jreback is this still an issue in the current version of `pandas`? I'm seeing the problem on an older version (v0.16.2) and I'm not sure if it's been addressed in the current one.\r\n\r\n```python\r\ndf = pd.DataFrame.from_dict(ordered_dict_data, orient='index') \r\n```\r\nsorts the index alphabetically. I've been using the following hack to address it:\r\n\r\n```python\r\ndf = pd.DataFrame.from_dict(ordered_dict_data, orient='columns').T\r\n```\r\nMy hack, however, sorts the columns alphabetically.\r\n\r\nFor the data that I have, it's easier for me to re-order these columns so the latter solution works better. To be precise, my `data` is an `OrderedDict` of `OrderedDict`s so I expect the sort order of both the index and columns to be respected. It looks something like this:\r\n\r\n```python\r\ndata = OrderedDict(\r\n    'a': OrderedDict('aa': 5, 'bb': 10),\r\n    'b': OrderedDict('aa': 7, 'bb': 14),\r\n    ...)\r\n```\r\n\r\nIf it's not fixed, I can take a stab at it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403155485",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8425#issuecomment-403155485",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8425",
    "id": 403155485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE1NTQ4NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T21:50:50Z",
    "updated_at": "2018-07-06T21:50:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Still an open issue."
  }
]
