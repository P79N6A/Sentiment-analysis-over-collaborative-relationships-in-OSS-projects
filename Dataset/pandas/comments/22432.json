[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414455584",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22432#issuecomment-414455584",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22432",
    "id": 414455584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDQ1NTU4NA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T20:40:20Z",
    "updated_at": "2018-08-20T20:40:20Z",
    "author_association": "MEMBER",
    "body": "Haven't reviewed in detail yet but high level would you still expect this code to live in the `.pxi.in` file? I was assuming we'd be able to do away with the template file altogether and simply migrate the code into a single `.pyx` file (here `algos_common.pyx`)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414462355",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22432#issuecomment-414462355",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22432",
    "id": 414462355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDQ2MjM1NQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T21:02:49Z",
    "updated_at": "2018-08-21T02:50:47Z",
    "author_association": "MEMBER",
    "body": "> Haven't reviewed in detail yet but high level would you still expect this code to live in the .pxi.in file?\r\n\r\nNo, for the real version of this the affected functions would be moved out of the pxi.in files into the regular pyx files.  While in progress it's easier to cut and paste within the same file."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414483991",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22432#issuecomment-414483991",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22432",
    "id": 414483991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDQ4Mzk5MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T22:29:03Z",
    "updated_at": "2018-08-20T22:29:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "so my 2 question are:\r\n\r\n1) perf - should be very close\r\n2) are there any blockers to getting rid of tempita completely (obvioulsy thru multiple PRs).  maybe try some *harder* ones, e.g. hashtable and see."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414499430",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22432#issuecomment-414499430",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22432",
    "id": 414499430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDQ5OTQzMA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T23:42:56Z",
    "updated_at": "2018-08-20T23:42:56Z",
    "author_association": "MEMBER",
    "body": "> perf - should be very close\r\n\r\nI'll run some asvs before long.  I'd like to clear up the other cython PRs (especially the fairly easy #22329) before diving into this too deep. \r\n\r\n> are there any blockers to getting rid of tempita completely (obvioulsy thru multiple PRs). maybe try some harder ones, e.g. hashtable and see.\r\n\r\nI ran into trouble in converting code in groupby_helper functions, so it definitely isn't trivial."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414733879",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22432#issuecomment-414733879",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22432",
    "id": 414733879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDczMzg3OQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T16:20:23Z",
    "updated_at": "2018-08-21T16:20:23Z",
    "author_association": "MEMBER",
    "body": "asvs for just the reshape functions:\r\n\r\nThese look like noise to me, erring on the side of slightly slower.\r\n\r\n```\r\ntime taskset 8 asv continuous -f 1.1 -E virtualenv master HEAD -b reshape\r\n[...]\r\n\r\n    before     after       ratio\r\n  [513c02cb] [5a4e7fc9]\r\n+    1.41ms     2.15ms      1.52  reshape.SparseIndex.time_unstack\r\n+    2.01ms     2.95ms      1.47  reshape.SimpleReshape.time_unstack\r\n+    5.02ms     6.26ms      1.24  reshape.SimpleReshape.time_stack\r\n+  129.36ms   152.83ms      1.18  reshape.Pivot.time_reshape_pivot_time_series\r\n-   15.53ms    11.07ms      0.71  reshape.GetDummies.time_get_dummies_1d\r\n\r\n    before     after       ratio\r\n  [513c02cb] [5a4e7fc9]\r\n-    5.24ms     4.40ms      0.84  reshape.Melt.time_melt_dataframe\r\n-  396.79ms   329.76ms      0.83  reshape.WideToLong.time_wide_to_long_big\r\n-  921.31ms   665.94ms      0.72  reshape.GetDummies.time_get_dummies_1d_sparse\r\n-    5.49ms     3.81ms      0.69  reshape.SimpleReshape.time_stack\r\n\r\n    before     after       ratio\r\n  [513c02cb] [5a4e7fc9]\r\n+   19.63ms    30.76ms      1.57  reshape.PivotTable.time_pivot_table\r\n+  122.98ms   146.45ms      1.19  reshape.Pivot.time_reshape_pivot_time_series\r\n-   15.63ms    14.05ms      0.90  reshape.GetDummies.time_get_dummies_1d\r\n-  852.38ms   663.50ms      0.78  reshape.GetDummies.time_get_dummies_1d_sparse\r\n\r\n    before     after       ratio\r\n  [513c02cb] [5a4e7fc9]\r\n+  327.94ms   436.79ms      1.33  reshape.WideToLong.time_wide_to_long_big\r\n-  107.96ms    95.90ms      0.89  reshape.Unstack.time_full_product\r\n-  908.24ms   760.68ms      0.84  reshape.GetDummies.time_get_dummies_1d_sparse\r\n-    2.99ms     2.15ms      0.72  reshape.SimpleReshape.time_unstack\r\n-   15.67ms    10.62ms      0.68  reshape.GetDummies.time_get_dummies_1d\r\n-   29.09ms    19.43ms      0.67  reshape.PivotTable.time_pivot_table\r\n\r\n    before     after       ratio\r\n  [513c02cb] [5a4e7fc9]\r\n+   19.04ms    31.11ms      1.63  reshape.PivotTable.time_pivot_table\r\n+    1.49ms     2.13ms      1.43  reshape.SparseIndex.time_unstack\r\n+  639.42ms   825.80ms      1.29  reshape.GetDummies.time_get_dummies_1d_sparse\r\n+    2.28ms     2.84ms      1.25  reshape.SimpleReshape.time_unstack\r\n+  219.25ms   243.20ms      1.11  reshape.Unstack.time_without_last_row\r\n-    4.42ms     3.96ms      0.90  reshape.Melt.time_melt_dataframe\r\n-  314.72ms   267.92ms      0.85  reshape.WideToLong.time_wide_to_long_big\r\n-   14.47ms    10.95ms      0.76  reshape.GetDummies.time_get_dummies_1d\r\n\r\n    before     after       ratio\r\n  [513c02cb] [5a4e7fc9]\r\n+   13.34ms    15.29ms      1.15  reshape.GetDummies.time_get_dummies_1d\r\n+  317.12ms   355.70ms      1.12  reshape.WideToLong.time_wide_to_long_big\r\n-    2.08ms     1.84ms      0.88  reshape.SparseIndex.time_unstack\r\n-  910.80ms   741.24ms      0.81  reshape.GetDummies.time_get_dummies_1d_sparse\r\n\r\n    before     after       ratio\r\n  [513c02cb] [5a4e7fc9]\r\n+   20.61ms    29.52ms      1.43  reshape.PivotTable.time_pivot_table\r\n+  508.07ms   700.57ms      1.38  reshape.GetDummies.time_get_dummies_1d_sparse\r\n+    3.56ms     4.78ms      1.34  reshape.Melt.time_melt_dataframe\r\n+   86.99ms   109.69ms      1.26  reshape.Unstack.time_full_product\r\n+    1.80ms     2.19ms      1.22  reshape.SparseIndex.time_unstack\r\n-    6.44ms     5.80ms      0.90  reshape.SimpleReshape.time_stack\r\n-  153.73ms   132.12ms      0.86  reshape.Pivot.time_reshape_pivot_time_series\r\n-   15.70ms     9.44ms      0.60  reshape.GetDummies.time_get_dummies_1d\r\n\r\n    before     after       ratio\r\n  [513c02cb] [5a4e7fc9]\r\n+  581.37ms   879.53ms      1.51  reshape.GetDummies.time_get_dummies_1d_sparse\r\n+   91.89ms   109.90ms      1.20  reshape.Unstack.time_full_product\r\n+  214.70ms   242.03ms      1.13  reshape.Unstack.time_without_last_row\r\n-   31.03ms    27.06ms      0.87  reshape.PivotTable.time_pivot_table\r\n-    5.18ms     4.20ms      0.81  reshape.Melt.time_melt_dataframe\r\n-    5.88ms     4.02ms      0.68  reshape.SimpleReshape.time_stack\r\n\r\n[100.00%] ··· Running reshape.WideToLong.time_wide_to_long_big                                                                                                 349.47ms    before     after       ratio\r\n  [513c02cb] [5a4e7fc9]\r\n+    3.36ms     4.20ms      1.25  reshape.Melt.time_melt_dataframe\r\n+   87.05ms   104.05ms      1.20  reshape.Unstack.time_full_product\r\n+    2.69ms     3.09ms      1.15  reshape.SimpleReshape.time_unstack\r\n+  349.47ms   392.85ms      1.12  reshape.WideToLong.time_wide_to_long_big\r\n-  135.33ms   122.51ms      0.91  reshape.Pivot.time_reshape_pivot_time_series\r\n-   23.49ms    21.22ms      0.90  reshape.PivotTable.time_pivot_table\r\n-    6.10ms     4.04ms      0.66  reshape.SimpleReshape.time_stack\r\n\r\n   before     after       ratio\r\n  [513c02cb] [5a4e7fc9]\r\n+    9.50ms    15.85ms      1.67  reshape.GetDummies.time_get_dummies_1d\r\n+    3.74ms     5.87ms      1.57  reshape.SimpleReshape.time_stack\r\n-  793.39ms   700.72ms      0.88  reshape.GetDummies.time_get_dummies_1d_sparse\r\n-  438.11ms   347.58ms      0.79  reshape.WideToLong.time_wide_to_long_big\r\n-   31.55ms    23.60ms      0.75  reshape.PivotTable.time_pivot_table\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414836536",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22432#issuecomment-414836536",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22432",
    "id": 414836536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDgzNjUzNg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T22:02:58Z",
    "updated_at": "2018-08-21T22:02:58Z",
    "author_association": "MEMBER",
    "body": "Closing this proof of concept, first real PR in this process is #22452."
  }
]
