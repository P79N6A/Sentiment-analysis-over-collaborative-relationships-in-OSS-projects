[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27395412",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5388#issuecomment-27395412",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5388",
    "id": 27395412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mzk1NDEy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-30T14:50:16Z",
    "updated_at": "2013-10-30T14:50:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is not a problem with hdf per se, much more of an issue of the creation of the Panel itself.\nThe blocks are not being separated correctly into Datetime and such. They are getting mashed together into an ObjectBlock, which is holding non-creatable types (like NaT)\n\n```\n(Pdb) df\n   A                   B\n0  1 2010-01-01 00:00:00\n1  2                 NaT\n\n(Pdb) df._data\n\nBlockManager\nItems: Index([u'A', u'B'], dtype='object')\nAxis 1: Int64Index([0, 1], dtype='int64')\nIntBlock: [A], 1 x 2, dtype: int64\nDatetimeBlock: [B], 1 x 2, dtype: datetime64[ns]\n\n\n(Pdb) Panel({ 'i1' : df, 'i2' : df})._data\n\nBlockManager\nItems: Index([u'i1', u'i2'], dtype='object')\nAxis 1: Int64Index([0, 1], dtype='int64')\nAxis 2: Index([u'A', u'B'], dtype='object')\nObjectBlock: [i1, i2], 2 x 2 x 2, dtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27397417",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5388#issuecomment-27397417",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5388",
    "id": 27397417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mzk3NDE3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-30T15:10:26Z",
    "updated_at": "2013-10-30T15:10:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "This correctly constructs the blocks; I think the dict constructor is failing when it has dtypes in a contained frame that are mixed.\n\n```\nIn [16]: df = pd.DataFrame({'A': [1, 2], 'B': pd.to_datetime(['2010-01-01', np.nan])})\n\nIn [17]: df\nOut[17]: \n   A                   B\n0  1 2010-01-01 00:00:00\n1  2                 NaT\n\nIn [18]: df.dtypes\nOut[18]: \nA             int64\nB    datetime64[ns]\ndtype: object\n\nIn [19]: y = Panel({'a' : df[['A']] })\n\nIn [20]: x = Panel({'b' : df[['B']] })\n\nIn [21]: y._data\nOut[21]: \nBlockManager\nItems: Index([u'a'], dtype='object')\nAxis 1: Int64Index([0, 1], dtype='int64')\nAxis 2: Index([u'A'], dtype='object')\nIntBlock: [a], 1 x 2 x 1, dtype: int64\n\nIn [22]: x._data\nOut[22]: \nBlockManager\nItems: Index([u'b'], dtype='object')\nAxis 1: Int64Index([0, 1], dtype='int64')\nAxis 2: Index([u'B'], dtype='object')\nDatetimeBlock: [b], 1 x 2 x 1, dtype: datetime64[ns]\n\nIn [23]: concat([x,y])\nOut[23]: \n<class 'pandas.core.panel.Panel'>\nDimensions: 2 (items) x 2 (major_axis) x 2 (minor_axis)\nItems axis: b to a\nMajor_axis axis: 0 to 1\nMinor_axis axis: A to B\n\nIn [24]: concat([x,y])._data\nOut[24]: \nBlockManager\nItems: Index([u'b', u'a'], dtype='object')\nAxis 1: Int64Index([0, 1], dtype='int64')\nAxis 2: Index([u'A', u'B'], dtype='object')\nDatetimeBlock: [b], 1 x 2 x 2, dtype: datetime64[ns]\nFloatBlock: [a], 1 x 2 x 2, dtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33320700",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5388#issuecomment-33320700",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5388",
    "id": 33320700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzIwNzAw",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-26T16:20:48Z",
    "updated_at": "2014-01-26T16:20:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I'm going to take a stab at this today.  Do you know offhand what a good approach would be? The problem is coming in `Panel._init_dict` where an array\n\n```\nipdb> arrays\n[array([[1, Timestamp('2010-01-01 00:00:00', tz=None)],\n       [2, NaT]], dtype=object), array([[1, Timestamp('2010-01-01 00:00:00', tz=None)],\n       [2, NaT]], dtype=object)]\n```\n\nis created and handed off to `create_block_manager_from_arrays`. I was thinking about creating the blocks individually instead of dumping all the data into an array. I'll see what happens.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33321427",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5388#issuecomment-33321427",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5388",
    "id": 33321427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzIxNDI3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-26T16:45:49Z",
    "updated_at": "2014-01-26T16:45:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "sounds good \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35342683",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5388#issuecomment-35342683",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5388",
    "id": 35342683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQyNjgz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-18T01:49:13Z",
    "updated_at": "2014-02-18T01:49:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger bumping this....but of course if you'd like to work on it...fee free\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35389754",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5388#issuecomment-35389754",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5388",
    "id": 35389754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mzg5NzU0",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-18T14:39:50Z",
    "updated_at": "2014-02-18T14:39:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I ran into some troubles with that approach, but I can't remember what the problem was. I'll look today and report back.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35408927",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5388#issuecomment-35408927",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5388",
    "id": 35408927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDA4OTI3",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-18T17:21:30Z",
    "updated_at": "2014-02-18T17:22:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not having any luck with this. Like I posted above, you've got a list of `arrays` with mixed type. I'm not sure how we could infer that it's actually contains datetime data along that slice.\n\nIt also doesn't matter whether `df` contains any `NaT`s.\n\n``` python\nIn [20]: dfa\nOut[20]: \n   A          B\n0  1 2010-01-01\n1  2 2010-01-01\n\n[2 rows x 2 columns]\n\nIn [21]: wp = pd.Panel({'i1': dfa, 'i2': dfa})\n\nIn [22]: wp._data\nOut[22]: \nBlockManager\nItems: Index([u'i1', u'i2'], dtype='object')\nAxis 1: Int64Index([0, 1], dtype='int64')\nAxis 2: Index([u'A', u'B'], dtype='object')\nObjectBlock: [i1, i2], 2 x 2 x 2, dtype: object\n```\n\nThe `form_blocks` function in `core/internals` isn't able to take this array:\n\n``` python\nipdb> p v\narray([[1, Timestamp('2010-01-01 00:00:00', tz=None)],\n       [2, Timestamp('2010-01-01 00:00:00', tz=None)]], dtype=object)\n```\n\nand split it into two blocks (not that I'm saying it should be able to).\n\nMaybe I'm trying to fix this in the wrong area though? Should we just construct it as is now, and then check if any objects can be converted before returning?  That isn't quite working either, but that may be a bug / not implemented:\n\n``` python\nIn [45]: wp._data\nOut[45]: \nBlockManager\nItems: Index([u'i1', u'i2'], dtype='object')\nAxis 1: Int64Index([0, 1], dtype='int64')\nAxis 2: Index([u'A', u'B'], dtype='object')\nObjectBlock: [i1, i2], 2 x 2 x 2, dtype: object  # should be split into an Int and Datetime\n\nIn [46]: wp.convert_objects(convert_dates=True)._data\nOut[46]: \nBlockManager\nItems: Index([u'i1', u'i2'], dtype='object')\nAxis 1: Int64Index([0, 1], dtype='int64')\nAxis 2: Index([u'A', u'B'], dtype='object')\nObjectBlock: [i1, i2], 2 x 2 x 2, dtype: object  # no change\n\nIn [47]: wp['i1']._data\nOut[47]: \nBlockManager\nItems: Index([u'A', u'B'], dtype='object')\nAxis 1: Int64Index([0, 1], dtype='int64')\nObjectBlock: [A, B], 2 x 2, dtype: object  # should be int and Datetime\n\nIn [48]: wp['i1'].convert_objects(convert_dates=True)._data\nOut[48]: \nBlockManager\nItems: Index([u'A', u'B'], dtype='object')\nAxis 1: Int64Index([0, 1], dtype='int64')\nIntBlock: [A], 1 x 2, dtype: int64\nDatetimeBlock: [B], 1 x 2, dtype: datetime64[ns]\n```\n\nso the convert objects work on the underlying DataFrames, but the changes don't get sent back up to the Panel. Sorry this comment got long.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35411287",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5388#issuecomment-35411287",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5388",
    "id": 35411287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDExMjg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-18T17:41:54Z",
    "updated_at": "2014-02-18T17:41:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not sure that this is really an issue.\n\nI think orientation really matters here; see below works just fine. Blocks are oriented with items as the 0th axis, so if ALL of the items are datetime then it will be a datetimeblock.\n\n```\nIn [28]: dfa = pd.DataFrame({'A': [1, 2], 'B': pd.to_datetime(['2010-01-01', np.nan])})\n\nIn [29]: dfb = pd.DataFrame({'A': [3, 4], 'B': pd.to_datetime(['2010-01-02', np.nan])})\n\nIn [30]: p = Panel({ 'dfa' : dfa, 'dfb' : dfb }).transpose(2,0,1)\n\nIn [31]: p\nOut[31]: \n<class 'pandas.core.panel.Panel'>\nDimensions: 2 (items) x 2 (major_axis) x 2 (minor_axis)\nItems axis: A to B\nMajor_axis axis: dfa to dfb\nMinor_axis axis: 0 to 1\n\nIn [32]: p['B']\nOut[32]: \n             0   1\ndfa 2010-01-01 NaT\ndfb 2010-01-02 NaT\n\n[2 rows x 2 columns]\n\nIn [33]: p['B'].dtypes\nOut[33]: \n0    datetime64[ns]\n1    datetime64[ns]\ndtype: object\n```\n\nI think maybe selection (via loc/iloc) on the non 0th axis that DOES NOT coerce is a problem, see this example below. Their may need a `convert_objects` step when ndim > 2 (e.g. this case)\nin the indexing routines.\n\n```\nIn [40]: p.transpose(2,0,1).loc[:,'B']\nOut[40]: \n             0   1\ndfa 2010-01-01 NaT\ndfb 2010-01-02 NaT\n\n[2 rows x 2 columns]\n\nIn [41]: p.transpose(2,0,1).loc[:,'B'].dtypes\nOut[41]: \n0    object\n1    object\ndtype: object\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/314244229",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5388#issuecomment-314244229",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5388",
    "id": 314244229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDI0NDIyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-10T21:09:13Z",
    "updated_at": "2017-07-10T21:09:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as Panels are deprecated"
  }
]
