[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123516842",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10647#issuecomment-123516842",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10647",
    "id": 123516842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzUxNjg0Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T00:32:17Z",
    "updated_at": "2015-07-22T00:32:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "R has the same behavior (at least for \"NA\"), for whatever that's worth. This is a pretty well engrained part of the API, and I don't think the upside is worth breaking it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123702988",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10647#issuecomment-123702988",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10647",
    "id": 123702988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcwMjk4OA==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T12:23:56Z",
    "updated_at": "2015-07-22T12:23:56Z",
    "author_association": "NONE",
    "body": "@TomAugspurger  Thanks for the response.  I did not know R also did this, but changing this would then be a positive way to differentiate from R IMO.  And pandas is not yet to version 1.  ;-)\n\n@jreback  Err, OK, was hoping maybe for a brief explanation at least, or maybe leave this open longer than 24 hrs to allow some community input.  Admittedly I'm not sure how disruptive a change like this would be.\n\nI don't want to be overly dramatic, but to me this is a very serious data integrity issue.  Although I doubt this commonly causes problems, when it does, it may go undetected.  And if detected it might be hard to debug.  Maybe some of it comes down to whether CSV is considered an important input method and I think it is even though it's hardly ever the first choice, it's sometimes the necessary choice.\n\nFWIW, I assumed all programs behaved like Excel and Stata and would never knowingly have the default option set to change potentially valid data to missing.  I mostly work with economic and survey data (for many years now) and often depend on CSV to move data between different programs.  I honestly have never been in a situation where I would want read_csv to set NA or NaN missing at all, much less as a default behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123704771",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10647#issuecomment-123704771",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10647",
    "id": 123704771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcwNDc3MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T12:29:08Z",
    "updated_at": "2015-07-22T12:29:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Even though we aren't at 1.0, backwards compatibility is important to us. We've got a lot of users already. That said, we _will_ break compatibility, but only if the upshot is big enough.\n\nThe fact that there's an option to control the behavior acknowledges that this is an ambiguous case (which comes down to CSV being bad way to store and transmit data, but like you said all too common).\n\nSomething like https://github.com/tomaugspurger/engarde could potentially help with ensure that you maintain data integrity as your data flows through.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123708106",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10647#issuecomment-123708106",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10647",
    "id": 123708106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcwODEwNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T12:41:57Z",
    "updated_at": "2015-07-22T12:43:53Z",
    "author_association": "MEMBER",
    "body": "@johne13 I think the desirability of the actual default (interpreting \"NA\" as a missing value or not) does depend a lot of the actual working/field use case, and so it will never be possible to the 'right' thing for everybody. \nE.g. for easy transfer of data from R to python using csv, this is a handy default as R's default output uses NA in csv to denote NA's.\n\nBut as it indeed can lead to hard to detect problems, there are maybe others ways to partially deal with this problem rather than changing the default. Just throwing two ideas (but not sure I would support these myself):\n- interprete NA only for numerical columns as NaN by default and not for string/object columns (but I don't know if this is 1) technically possible (don't know at which point the NA interference is done) and 2) desirable as it increases the complexity of the default value))\n- output a warning when \"NA\" occurences are replaced by NaN (so the user at least knows this is done, and is warned when this was not his/her intention), and an option to suppress this message (can be together with suppressing dtypewarnings)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123708191",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10647#issuecomment-123708191",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10647",
    "id": 123708191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcwODE5MQ==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T12:42:23Z",
    "updated_at": "2015-07-22T12:42:23Z",
    "author_association": "NONE",
    "body": "@TomAugspurger I disagree this is really an ambiguous case at all (and haven't heard an argument to the contrary yet, either here or on stack exchange), but I realize the cost-benefit decision of such a change that breaks backwards compatibility is up to you, Jeff, et al.\n\nWhat about a warning message when data values are changed?  Would it be reasonable to open an issue for that?\n\nI also found the documentation of this behavior to be very confusing, but I saw existing issues already posted for that and will comment in those rather than here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123709621",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10647#issuecomment-123709621",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10647",
    "id": 123709621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcwOTYyMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T12:49:55Z",
    "updated_at": "2015-07-22T12:50:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@johne13 as discussed above. this is really a choice that one has to make and it was made a long time ago. 'NA' is typically much much more used to indicate missing values. Now it maybe that in your field that is not so common, but for the vast majority of the user base when reading a csv that is true. \n\nSo a choice was made and very difficult to remove even if we wanted. You have the option to turn off the default parsing. I suppose one could have a `pd.set_option('csv.na_defaults',......)` that one could easily just change the default. If that is what you are proposing, then would be ok.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123712011",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10647#issuecomment-123712011",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10647",
    "id": 123712011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcxMjAxMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T13:00:31Z",
    "updated_at": "2015-07-22T13:00:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "there is some work being done on this, mainly to have an option to return the errors/warnings/conversions that the parser is doing as additional data to the user. so you have the option to 'see' what was changed/substituted/etc.\n\nFYI, since is generally not a great medium for describing data (though we all have/use them). You ought to consider other formats such as `HDF5` and `msgpack` for this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123712669",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10647#issuecomment-123712669",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10647",
    "id": 123712669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcxMjY2OQ==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T13:01:52Z",
    "updated_at": "2015-07-22T13:01:52Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche Thanks, I strongly agree with both suggestions if they are feasible.  If a column contains only numbers and NA then it seems reasonable that NA=missing.\n\nRegarding R, what will happen if I export from R a text column of, say, continents abbreviated as:  ['NA', 'EU', 'AF'] and then read that into pandas?  I assume that must be read as missing, but don't use R so don't know for sure how R outputs or if R treats NA the same for text and number columns?\n\n@jreback OK, thanks for the explanation. Personally I would be more interested in having pandas give a warning/info message rather than a new option. My concern is with all the people who are using read_csv without understanding default behavior, not all the people who do.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123715600",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10647#issuecomment-123715600",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10647",
    "id": 123715600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcxNTYwMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T13:14:11Z",
    "updated_at": "2015-07-22T13:14:11Z",
    "author_association": "MEMBER",
    "body": "Another change that we would maybe be more likely to consider, is the parsing of _quoted_ values of `NA` (so only changing `\"NA\"` not be converted automatically, but leaving `NA` and alike converted to NaN as it is now). \nPersonally, I would even this consider as a bug that it treats `\"NA\"` and `NA` the same, as I would expect that quoted values should be left untouched. But I don't know how long this behaviour has been this way.\n\n(to admit, I even thought it was this way, and wanted to answer that to your question on R, but I saw that in your original post above it is clearly an example with quotes)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123717405",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10647#issuecomment-123717405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10647",
    "id": 123717405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcxNzQwNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T13:21:04Z",
    "updated_at": "2015-07-22T13:21:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Another change that we would maybe be more likely to consider, is the parsing of quoted values of NA (so only changing \"NA\" not be converted automatically, but leaving NA and alike converted to NaN as it is now). \n> Personally, I would even this consider as a bug that it treats \"NA\" and NA the same, as I would expect that quoted values should be left untouched. But I don't know how long this behaviour has been this way.\n\nI’m potentially +1 on that Joris.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123745175",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10647#issuecomment-123745175",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10647",
    "id": 123745175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzc0NTE3NQ==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T14:41:48Z",
    "updated_at": "2015-07-22T14:42:48Z",
    "author_association": "NONE",
    "body": "@jreback  I'm not arguing that CSV or similar would ever be my first choice, but public economic data is often provided only as text or as text and SAS.  The private data I work with is similarly provided in that manner (always text, often SAS, nothing else ever and that's not changing soon).  So I think the defaults of read_csv and read_fwf are extremely important.\n\nI have also edited my original post to note that a round trip with `to_csv` and `read_csv` using defaults will convert a data value of 'NA' to NaN.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285927844",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10647#issuecomment-285927844",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10647",
    "id": 285927844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTkyNzg0NA==",
    "user": {
      "login": "BrenBarn",
      "id": 1439047,
      "node_id": "MDQ6VXNlcjE0MzkwNDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1439047?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BrenBarn",
      "html_url": "https://github.com/BrenBarn",
      "followers_url": "https://api.github.com/users/BrenBarn/followers",
      "following_url": "https://api.github.com/users/BrenBarn/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrenBarn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BrenBarn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrenBarn/subscriptions",
      "organizations_url": "https://api.github.com/users/BrenBarn/orgs",
      "repos_url": "https://api.github.com/users/BrenBarn/repos",
      "events_url": "https://api.github.com/users/BrenBarn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BrenBarn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-12T07:32:57Z",
    "updated_at": "2017-03-12T07:33:14Z",
    "author_association": "NONE",
    "body": "Just found this when searching for info about NaN reading/writing in Pandas.  I agree that quoted NA should be handled differently.\r\n\r\nA significant problem is that right now string values of `\"NA\"` or `\"NaN\"` are not CSV round-trippable without special-casing the arguments.  If you create a DataFrame with a string value like this, save with `.to_csv()`, and then read with `.read_csv()`, you get `NaN` (the float value) instead of your string value.  I think this is buggy behavior.  If pandas wants to read certain things as `NaN`, fine, but if you have a string value, it needs to have a way to write that value so that it will know later to read it in as the same string value, and not as the float `NaN`.  I think the simplest way to do this would be to distinguish quoted and unquoted NA values."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/286124332",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10647#issuecomment-286124332",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10647",
    "id": 286124332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjEyNDMzMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T14:31:37Z",
    "updated_at": "2017-03-13T14:31:37Z",
    "author_association": "MEMBER",
    "body": "Yes, as I said above, I think we should at least *consider* this (differentiating quotes vs unquoted \"NA\" strings), so therefore reopening.\r\n\r\nNot that by default this will not change much, as the default is to not write quotes. Bug at least if you have a source file with quotes, it would read in fine without additional keywords.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/286125741",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10647#issuecomment-286125741",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10647",
    "id": 286125741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjEyNTc0MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T14:36:26Z",
    "updated_at": "2017-03-13T14:36:26Z",
    "author_association": "MEMBER",
    "body": "Actually, opened a new issue: https://github.com/pandas-dev/pandas/issues/15669"
  }
]
