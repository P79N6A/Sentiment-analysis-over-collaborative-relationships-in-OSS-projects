[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/311224720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16775#issuecomment-311224720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16775",
    "id": 311224720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTIyNDcyMA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-27T01:12:53Z",
    "updated_at": "2017-06-27T01:12:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "The method you want is `nunique`, which will handle this for you, using the `dropna` parameter to tell it how to count nulls.\r\n```python\r\nIn [24]: dftest.groupby('b')['a'].nunique()\r\nOut[24]: \r\nb\r\n1    0\r\n2    0\r\n3    0\r\nName: a, dtype: int64\r\n\r\nIn [25]: dftest.groupby('b')['a'].nunique(dropna=False)\r\nOut[25]: \r\nb\r\n1    1\r\n2    1\r\n3    1\r\nName: a, dtype: int64\r\n```\r\n\r\nGenerally using `NaN` in any context requiring equality (such as a set) can result in strange behavior, due to the fact that `NaN != NaN`.  In particular, the issue here seems to be due to differences in a python `float` NaN and the numpy boxed float64 scalar version.\r\n\r\n```\r\nIn [45]: a = [np.nan] * 5\r\n\r\nIn [46]: b = list(np.asarray([np.nan] * 5))\r\n\r\nIn [47]: a\r\nOut[47]: [nan, nan, nan, nan, nan]\r\n\r\nIn [48]: b\r\nOut[48]: [nan, nan, nan, nan, nan]\r\n\r\nIn [49]: set(a)\r\nOut[49]: {nan}\r\n\r\nIn [50]: set(b)\r\nOut[50]: {nan, nan, nan, nan, nan}\r\n\r\nIn [54]: type(a[0])\r\nOut[54]: float\r\n\r\nIn [55]: type(b[0])\r\nOut[55]: numpy.float64\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/311225237",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16775#issuecomment-311225237",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16775",
    "id": 311225237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTIyNTIzNw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-27T01:16:11Z",
    "updated_at": "2017-06-27T01:16:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "SO answer with a more detailed explanation\r\nhttps://stackoverflow.com/a/6441990/3657742"
  }
]
