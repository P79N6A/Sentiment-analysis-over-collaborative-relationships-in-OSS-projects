[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253322517",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14400#issuecomment-253322517",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14400",
    "id": 253322517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMyMjUxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T20:04:01Z",
    "updated_at": "2016-10-12T20:04:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [8]: df.dtypes\nOut[8]: \nc1     object\nc2     object\nc3    float64\nc4      int64\ndtype: object\n\nIn [9]: df.stack().unstack().dtypes\nOut[9]: \nc1    object\nc2    object\nc3    object\nc4    object\ndtype: object\n\nIn [10]: df.stack().unstack().apply(lambda x: pd.to_numeric(x, errors='ignore')).dtypes\nOut[10]: \nc1     object\nc2     object\nc3    float64\nc4      int64\ndtype: object\n\nIn [11]: pd.to_numeric?\n\n# you can even request downcasting\nIn [12]: df.stack().unstack().apply(lambda x: pd.to_numeric(x, errors='ignore', downcast='integer')).dtypes\nOut[12]: \nc1     object\nc2     object\nc3    float64\nc4       int8\ndtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253322787",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14400#issuecomment-253322787",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14400",
    "id": 253322787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMyMjc4Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T20:04:59Z",
    "updated_at": "2016-10-12T20:04:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "if you really want to\n\n```\nIn [13]: df.stack().unstack().apply(lambda x: pd.to_numeric(x, errors='coerce')).dtypes\nOut[13]: \nc1    float64\nc2    float64\nc3    float64\nc4      int64\ndtype: object\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253323024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14400#issuecomment-253323024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14400",
    "id": 253323024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMyMzAyNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T20:05:49Z",
    "updated_at": "2016-10-12T20:05:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "note that the `downcast` kw is new in 0.19.0; `.to_numeric` has been around for a while.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253324887",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14400#issuecomment-253324887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14400",
    "id": 253324887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMyNDg4Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T20:12:02Z",
    "updated_at": "2016-10-12T20:12:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "docs are: http://pandas.pydata.org/pandas-docs/stable/basics.html#object-conversion\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253325886",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14400#issuecomment-253325886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14400",
    "id": 253325886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMyNTg4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T20:15:30Z",
    "updated_at": "2016-10-12T20:15:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Explict astyping is also available in 0.19.0\n\n```\nIn [9]: df.stack().unstack().astype({'c3' : 'float', 'c4' :'int8'}).dtypes\nOut[9]: \nc1     object\nc2     object\nc3    float64\nc4       int8\ndtype: object\n```\n\nAll of the above said, if you think the docs could use an enhancement, the pls submit a doc PR.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253326342",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14400#issuecomment-253326342",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14400",
    "id": 253326342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMyNjM0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T20:17:05Z",
    "updated_at": "2016-10-12T20:17:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Further note that the stack/unstack idiom does not generally play nice with mixed object and other dtypes, so a more typical pattern is.\n\n```\nIn [15]: df.set_index(['c1', 'c2']).stack().unstack().reset_index().dtypes\nOut[15]: \nc1     object\nc2     object\nc3    float64\nc4    float64\ndtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253345643",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14400#issuecomment-253345643",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14400",
    "id": 253345643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzM0NTY0Mw==",
    "user": {
      "login": "dragonator4",
      "id": 8196363,
      "node_id": "MDQ6VXNlcjgxOTYzNjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8196363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragonator4",
      "html_url": "https://github.com/dragonator4",
      "followers_url": "https://api.github.com/users/dragonator4/followers",
      "following_url": "https://api.github.com/users/dragonator4/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragonator4/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragonator4/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragonator4/subscriptions",
      "organizations_url": "https://api.github.com/users/dragonator4/orgs",
      "repos_url": "https://api.github.com/users/dragonator4/repos",
      "events_url": "https://api.github.com/users/dragonator4/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragonator4/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T21:30:53Z",
    "updated_at": "2016-10-21T03:47:17Z",
    "author_association": "NONE",
    "body": "@jreback, Thank you for all the replies. However, how will you explain the following behavior?\n\n```\nIn [1]: df = pd.DataFrame({'c1' : list('ABC'),\n                           'c2' : list('123'),\n                           'c3' : np.random.randn(3),\n                           'c4' : np.arange(3)})\n        df.dtypes\nOut[1]: c1     object\n        c2     object\n        c3    float64\n        c4      int64\n        dtype: object\n\nIn [2]: df.apply(lambda x: pd.to_numeric(x, errors='ignore'), axis=0).dtypes\nOut[2]: c1     object\n        c2     object\n        c3    float64\n        c4      int64\n        dtype: object\n```\n\nThe expected output (using `.set_types` method I proposed):\n\n```\nIn [2]: df.set_types(infer=True).dtypes\nOut[2]: c1     object\n        c2      int64\n        c3    float64\n        c4      int64\n        dtype: object\n```\n\nNote that this cannot be done by ignoring errors in `pd.to_numeric`. Errors will have to be coerced to get the desired output, which will loose data on the `object` column, while upcasting the `int64` columns to `float64`. `downcast='integer'` does nothing in this case.\n\nIn my present use case, I am fitting models to data from thousands of sensors, and returning a Series with model result information (see [this SO question](http://stackoverflow.com/q/39994804/3765319)). The resulting DataFrame is then unstacked (see answer to that question) and I get a frame with many columns, and hundreds of thousands of rows.\n\nUnfortunately, not all rows in a given column have the same type. For example, if the model fits one parameter, I get a single number, if it fits multiple parameters, I get a list. Since I cannot be expected to manually examine all values in the frame, and I cannot afford to loose data from typecasting, I need a better method to cast intelligently so that I can build further analysis of model results.\n\nEven the following doesn't help:\n\n```\ndf.apply(lambda x: pd.to_numeric(x, errors='corece'), axis=0).fillna(df)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253346374",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14400#issuecomment-253346374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14400",
    "id": 253346374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzM0NjM3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T21:34:03Z",
    "updated_at": "2016-10-12T21:34:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Your call here\n\n``` python\ndf.apply(lambda x: pd.to_numeric(x, errors='ignore'), axis=1).dtypes\n```\n\nis applying `pd.to_numeric` to each _row_. Are you sure you want `axis=1`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253348147",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14400#issuecomment-253348147",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14400",
    "id": 253348147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzM0ODE0Nw==",
    "user": {
      "login": "dragonator4",
      "id": 8196363,
      "node_id": "MDQ6VXNlcjgxOTYzNjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8196363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragonator4",
      "html_url": "https://github.com/dragonator4",
      "followers_url": "https://api.github.com/users/dragonator4/followers",
      "following_url": "https://api.github.com/users/dragonator4/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragonator4/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragonator4/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragonator4/subscriptions",
      "organizations_url": "https://api.github.com/users/dragonator4/orgs",
      "repos_url": "https://api.github.com/users/dragonator4/repos",
      "events_url": "https://api.github.com/users/dragonator4/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragonator4/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T21:41:31Z",
    "updated_at": "2016-10-12T21:46:46Z",
    "author_association": "NONE",
    "body": "Sorry @TomAugspurger, that was a typo, out of habit. I want `axis=0`. I have edited accordingly.\n\nActually, correcting that typo results in this behavior:\n\n```\nIn [3]: df.apply(lambda x: pd.to_numeric(x, errors='corece')).fillna(df).dtypes\nOut[3]: c1    object\n        c2     int64\n        c3    object\n        c4     int64\n        dtype: object\n```\n\nWhy is column `c3` converted to `object` from `float64`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253352752",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14400#issuecomment-253352752",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14400",
    "id": 253352752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzM1Mjc1Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T22:01:16Z",
    "updated_at": "2016-10-12T22:01:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [45]: df.apply(lambda x: pd.to_numeric(x, errors='corece')).fillna(df).apply(lambda x: pd.to_numeric(x, errors='ignore')).dtypes\nOut[45]: \nc1     object\nc2      int64\nc3    float64\nc4      int64\ndtype: object\n```\n\nfilling a formerly float column (e.g. c1) with objects works, but _also_ coerces c3 to object because its in the same block. This is an implementation detail ATM. But i'll open an issue for it.\n\nHaving _another_ method for this operation is really not worth it. We already have `.astype()` and explict conversions.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253359129",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14400#issuecomment-253359129",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14400",
    "id": 253359129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzM1OTEyOQ==",
    "user": {
      "login": "dragonator4",
      "id": 8196363,
      "node_id": "MDQ6VXNlcjgxOTYzNjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8196363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragonator4",
      "html_url": "https://github.com/dragonator4",
      "followers_url": "https://api.github.com/users/dragonator4/followers",
      "following_url": "https://api.github.com/users/dragonator4/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragonator4/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragonator4/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragonator4/subscriptions",
      "organizations_url": "https://api.github.com/users/dragonator4/orgs",
      "repos_url": "https://api.github.com/users/dragonator4/repos",
      "events_url": "https://api.github.com/users/dragonator4/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragonator4/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T22:32:53Z",
    "updated_at": "2016-10-12T22:34:19Z",
    "author_association": "NONE",
    "body": "I agree, having another method is not worth it if the method is not doing anything new. But the proposed method can, in principle, replace `.astype` and `pd.to_*` and the erstwhile `.convert_objects` methods. It can be like `pd.set_dtypes(<frame or series>, infer=<boolean>, types=<list or dict>, errors=<'ignore', 'coerce', 'raise'>)`. Basically, it is a one-size-fits-all solution..\n\nThe current solution of applying `to_numeric` twice, and filling NaNs is a bit too round about and clunky. It will also mess up datetime columns. In my use case, datetime is part of the index (raw data is grouped on datetime), but if it weren't (as in if I was returning datetime), then I can foresee it having problems. Post conversion with `to_numeric` (via applying it twice), one will also have to apply `to_datetime` in the case of datetimes.\n\nPandas already does a great job with converting datatime and timedelta types by inferring the format. Basically what I am driving at is a universal method to handle all generic forms of type casting, with the ability to automatically infer types if needed, and take user inputs as desired. I agree the algorithm for such a method might get a bit hairy with datetime types, but Pandas is known for it's simplistic flexibility. \n\nA method to handle all simple conditions of typecasting does not exist. I rest my case here, and leave the decision to you. But it is worth considering a universal type setting and resetting method.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253370011",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14400#issuecomment-253370011",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14400",
    "id": 253370011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzM3MDAxMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T23:36:29Z",
    "updated_at": "2016-10-12T23:36:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dragonator4 methods with lots of keyword args that are potentially overlapping are confusing and non-pythonic. \n\nyou should re-examine your pipeline to see why in fact you are doing `.stack().unstack()`; as I pointed above, this is not a normal idiom.\n\nFurther the reason `.convert_objects()` was removed because of ambiguity in type detection esp w.r.t datetime/timedeltas, multiple answers are correct and its an underspecified problem.\n\nIf you want to suggest a small API addition that fills out a need that is not currently satisfied, please do so. But, for example, removing `.astype()` is a non-starter, this is a long-time API method for many eco-systems.\n\nAs I xrefed the convert-fill-convert idiom is buggy ATM in this specific case. Pull-requests to fix are also welcome.\n"
  }
]
