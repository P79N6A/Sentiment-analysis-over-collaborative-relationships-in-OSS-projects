[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16541206",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-16541206",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 16541206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTQxMjA2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T23:05:56Z",
    "updated_at": "2013-04-17T23:05:56Z",
    "author_association": "MEMBER",
    "body": "Why not have it repr as if it were the columns of a DataFrame?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16541699",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-16541699",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 16541699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTQxNjk5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T23:20:43Z",
    "updated_at": "2013-09-22T11:16:20Z",
    "author_association": "NONE",
    "body": "Interesting. Along with a couple of similar changes queued for 0.12 though, \nI'd opt for having a repr() output be valid python code to recreate the object. That's\npythonic and useful.\n\nIf that sort of view is wanted, it's not difficult to convert the multindex tuples\ninto a dataframe explicitly.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16542108",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-16542108",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 16542108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTQyMTA4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T23:33:44Z",
    "updated_at": "2013-04-17T23:33:44Z",
    "author_association": "MEMBER",
    "body": "@y-p Oh I meant as if it were the actual column _index_ of a `DataFrame`, (e.g., a `DataFrame` with a column `MultiIndex` only just showing the column index), but I like your suggestion too.\n\nI've done that in the past with `DataFrame(np.row_stack(mi), columns=mi.names)` where `mi` is a `MultiIndex`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16588671",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-16588671",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 16588671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTg4Njcx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T16:52:59Z",
    "updated_at": "2013-04-18T16:55:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for repr being valid and give back the output to recreate object.\n\n```\nIn [1]: pd.Index([1, '2'])\nOut[1]: Index([1, 2], dtype=object)\n\nIn [2]: pd.Index([1, 2])\nOut[2]: Int64Index([1, 2], dtype=int64)\n```\n\nI suppose the possible caveat could be if the index is very long (the `...`s are kind of useful?):\n\n```\nIn [3]: pd.Index(xrange(100000))\nOut[3]: Int64Index([0, 1, 2, ..., 99997, 99998, 99999], dtype=int64)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24873443",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-24873443",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 24873443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODczNDQz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T00:30:14Z",
    "updated_at": "2013-09-22T00:30:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner didn't we have a recent issue related to multi-index formatting? can you link it here (and possibly close this one if a dupe)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24873554",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-24873554",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 24873554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODczNTU0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T00:40:43Z",
    "updated_at": "2013-09-22T00:40:43Z",
    "author_association": "MEMBER",
    "body": "related to https://github.com/pydata/pandas/pull/3941\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24875082",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-24875082",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 24875082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODc1MDgy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T03:00:01Z",
    "updated_at": "2013-09-22T03:00:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "how about we just change the MultiIndex repr to just look like how it looks with columns?\n\nSo if you have a Series with a MultiIndex like this:\n\n```\nC0       R0\nC_l0_g0  R_l0_g0    R0C0\n         R_l0_g1    R1C0\n         R_l0_g2    R2C0\n         R_l0_g3    R3C0\n         R_l0_g4    R4C0\nC_l0_g1  R_l0_g0    R0C1\n         R_l0_g1    R1C1\n         R_l0_g2    R2C1\n         R_l0_g3    R3C1\n         R_l0_g4    R4C1\nC_l0_g2  R_l0_g0    R0C2\n         R_l0_g1    R1C2\n         R_l0_g2    R2C2\n         R_l0_g3    R3C2\n         R_l0_g4    R4C2\nC_l0_g3  R_l0_g0    R0C3\n         R_l0_g1    R1C3\n         R_l0_g2    R2C3\n         R_l0_g3    R3C3\n         R_l0_g4    R4C3\nC_l0_g4  R_l0_g0    R0C4\n         R_l0_g1    R1C4\n         R_l0_g2    R2C4\n         R_l0_g3    R3C4\n         R_l0_g4    R4C4\ndtype: object\n```\n\nthen the MultiIndex repr should just be this (or maybe it's transpose?)\n\n```\nC0       R0\nC_l0_g0  R_l0_g0\n         R_l0_g1\n         R_l0_g2\n         R_l0_g3\n         R_l0_g4\nC_l0_g1  R_l0_g0\n         R_l0_g1\n         R_l0_g2\n         R_l0_g3\n         R_l0_g4\nC_l0_g2  R_l0_g0\n         R_l0_g1\n         R_l0_g2\n         R_l0_g3\n         R_l0_g4\nC_l0_g3  R_l0_g0\n         R_l0_g1\n         R_l0_g2\n         R_l0_g3\n         R_l0_g4\nC_l0_g4  R_l0_g0\n         R_l0_g1\n         R_l0_g2\n         R_l0_g3\n         R_l0_g4\n\ndtype: object\n```\n\nWay better.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24875663",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-24875663",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 24875663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODc1NjYz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T03:58:39Z",
    "updated_at": "2013-09-22T03:59:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can we have a str/unicode as @jtratner  suggests, but a repr which is valid python to recreate itself?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24875749",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-24875749",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 24875749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODc1NzQ5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T04:07:01Z",
    "updated_at": "2013-09-22T04:08:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure, but repr should just be this:\n\n```\n>>> mi = MultiIndex.from_arrays([[1, 1, 1, 1], [1, 3, 5, 7], [9, 9, 1, 1]])\n>>> print repr(mi)\nMultiIndex(levels=[[1], [1, 3, 5, 7], [1, 9]],\n           labels=[[0, 0, 0, 0], [0, 1, 2, 3], [1, 1, 0, 0]],\n           names=[None, None, None],\n           sortorder=None )\n```\n\nBut probably wouldn't show the ones that are all None.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24875919",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-24875919",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 24875919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODc1OTE5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T04:28:12Z",
    "updated_at": "2013-09-22T04:28:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "oh how nice, we can already just use `MultiIndex.format` to do this.  and if it's beyond max rows, add a ...\n\nSo if max rows were 10, it'd be:\n\n```\nC0       R0\nC_l0_g0  R_l0_g0\n         R_l0_g1\n         R_l0_g2\n         R_l0_g3\n         R_l0_g4\nC_l0_g1  R_l0_g0\n         R_l0_g1\n         ...\n         R_l0_g4\nC_l0_g2  R_l0_g0\n```\n\nAre we going to do something special for HTML?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24876220",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-24876220",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 24876220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODc2MjIw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T05:05:54Z",
    "updated_at": "2013-09-22T05:05:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Got this working - yay!\n\n```\nIn [1]: import pandas as pd\n\nIn [2]: pd.MultiIndex.from_arrays([[1, 1, 1, 1], [1, 3, 5, 7], [9, 9, 1, 1]])\nOut[2]:\nMultiIndex(levels=[[1], [1, 3, 5, 7], [1, 9]]\n           labels=[[0, 0, 0, 0], [0, 1, 2, 3], [1, 1, 0, 0]])\n\nIn [3]: mi = _\n\nIn [4]: mi.names = list('abc')\n\nIn [5]: print mi\na  b  c\n1  1  9\n   3  9\n   5  1\n   7  1\n```\n\nAnd with too many rows:\n\n```\nIn [10]: pd.set_option('display.max_rows', 15)\n\nIn [11]: lst1 = [1] * 3 + [2] * 5 + [3] * 2\n\nIn [12]: lst1\nOut[12]: [1, 1, 1, 2, 2, 2, 2, 2, 3, 3]\n\nIn [13]: lst2 = ['a'] * 6 + ['b'] * 3 + ['c'] * 1\n\nIn [14]: lst2\nOut[14]: ['a', 'a', 'a', 'a', 'a', 'a', 'b', 'b', 'b', 'c']\n\nIn [15]: mi = pd.MultiIndex.from_arrays([lst1 * 10, lst2 * 10, range(100)]); mi\nOut[15]:\nMultiIndex(levels=[[1, 2, 3], [u'a', u'b', u'c'], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]]\n           labels=[[0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2], [0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]])\n\nIn [16]: mi = _\n\nIn [17]: print mi\n\n1  a  0\n      1\n      2\n2  a  3\n      4\n      5\n  ...\n2  a  93\n      94\n      95\n   b  96\n      97\n3  b  98\n   c  99\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24876259",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-24876259",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 24876259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODc2MjU5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T05:10:47Z",
    "updated_at": "2013-09-22T05:11:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not sure how to handle too wide -- wrap? format() doesn't try to sparsify after a column with values everywhere.\n\n```\nIn [19]: mi = pd.MultiIndex.from_arrays([lst1 * 10, lst2 * 10, range(100)] * 10)\nIn [20]: print mi\n\n1  a  0   1  a  0   1  a  0   1  a  0   1  a  0   1  a  0   1  a  0   1  a  0   1  a  0   1  a  0\n      1   1  a  1   1  a  1   1  a  1   1  a  1   1  a  1   1  a  1   1  a  1   1  a  1   1  a  1\n      2   1  a  2   1  a  2   1  a  2   1  a  2   1  a  2   1  a  2   1  a  2   1  a  2   1  a  2\n2  a  3   2  a  3   2  a  3   2  a  3   2  a  3   2  a  3   2  a  3   2  a  3   2  a  3   2  a  3\n      4   2  a  4   2  a  4   2  a  4   2  a  4   2  a  4   2  a  4   2  a  4   2  a  4   2  a  4\n      5   2  a  5   2  a  5   2  a  5   2  a  5   2  a  5   2  a  5   2  a  5   2  a  5   2  a  5\n                                               ...\n2  a  93  2  a  93  2  a  93  2  a  93  2  a  93  2  a  93  2  a  93  2  a  93  2  a  93  2  a  93\n      94  2  a  94  2  a  94  2  a  94  2  a  94  2  a  94  2  a  94  2  a  94  2  a  94  2  a  94\n      95  2  a  95  2  a  95  2  a  95  2  a  95  2  a  95  2  a  95  2  a  95  2  a  95  2  a  95\n   b  96  2  b  96  2  b  96  2  b  96  2  b  96  2  b  96  2  b  96  2  b  96  2  b  96  2  b  96\n      97  2  b  97  2  b  97  2  b  97  2  b  97  2  b  97  2  b  97  2  b  97  2  b  97  2  b  97\n3  b  98  3  b  98  3  b  98  3  b  98  3  b  98  3  b  98  3  b  98  3  b  98  3  b  98  3  b  98\n   c  99  3  c  99  3  c  99  3  c  99  3  c  99  3  c  99  3  c  99  3  c  99  3  c  99  3  c  99\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24876323",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-24876323",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 24876323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODc2MzIz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T05:21:25Z",
    "updated_at": "2013-09-22T05:21:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "And here's @y-p's more complicated thing:\n\n```\nIn [9]: labels = [('foo', '2012-07-26T00:00:00', 'b5c2700'),\n   ...: ('foo', '2012-08-06T00:00:00', '900b2ca'),\n   ...: ('foo', '2012-08-15T00:00:00', '07f1ce0'),\n   ...: ('foo', '2012-09-25T00:00:00', '5c93e83'),\n   ...: ('foo', '2012-09-25T00:00:00', '9345bba')]\n\nIn [10]: print pd.MultiIndex.from_tuples(labels)\n\nfoo  2012-07-26T00:00:00  b5c2700\n     2012-08-06T00:00:00  900b2ca\n     2012-08-15T00:00:00  07f1ce0\n     2012-09-25T00:00:00  5c93e83\n                          9345bba\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/301383882",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-301383882",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 301383882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTM4Mzg4Mg==",
    "user": {
      "login": "naught101",
      "id": 167164,
      "node_id": "MDQ6VXNlcjE2NzE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/167164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naught101",
      "html_url": "https://github.com/naught101",
      "followers_url": "https://api.github.com/users/naught101/followers",
      "following_url": "https://api.github.com/users/naught101/following{/other_user}",
      "gists_url": "https://api.github.com/users/naught101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naught101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naught101/subscriptions",
      "organizations_url": "https://api.github.com/users/naught101/orgs",
      "repos_url": "https://api.github.com/users/naught101/repos",
      "events_url": "https://api.github.com/users/naught101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naught101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-15T06:03:41Z",
    "updated_at": "2017-05-15T06:03:41Z",
    "author_association": "NONE",
    "body": "I don't know what happened to this, whether the solution is unrelated to my problem, but my dataframe like this:\r\n\r\n```{python}\r\nIn [44]: met_data\r\nOut[44]: \r\nvariable                        SWdown        Tair\r\ntime                site                          \r\n2002-01-01 00:30:00 Tumba     0.000000  282.920013\r\n2002-01-01 01:00:00 Tumba     0.000000  282.898590\r\n2002-01-01 01:30:00 Tumba     0.000000  282.739990\r\n2002-01-01 02:00:00 Tumba     0.000000  282.565002\r\n2002-01-01 02:30:00 Tumba     0.000000  282.390015\r\n2002-01-01 03:00:00 Tumba     0.000000  281.714996\r\n2002-01-01 03:30:00 Tumba     0.000000  281.040009\r\n2002-01-01 04:00:00 Tumba     0.000000  280.420013\r\n2002-01-01 04:30:00 Tumba     0.000000  279.799988\r\n2002-01-01 05:00:00 Tumba    14.580000  279.890015\r\n2002-01-01 05:30:00 Tumba    29.160000  279.980011\r\n2002-01-01 06:00:00 Tumba    97.154999  280.255005\r\n2002-01-01 06:30:00 Tumba   165.149994  280.529999\r\n2002-01-01 07:00:00 Tumba   328.265015  280.690002\r\n2002-01-01 07:30:00 Tumba   491.380005  280.850006\r\n2002-01-01 08:00:00 Tumba   487.464996  280.875000\r\n2002-01-01 08:30:00 Tumba   483.549988  280.899994\r\n2002-01-01 09:00:00 Tumba   568.200012  281.315002\r\n2002-01-01 09:30:00 Tumba   652.849976  281.730011\r\n2002-01-01 10:00:00 Tumba   644.500000  282.095001\r\n2002-01-01 10:30:00 Tumba   636.150024  282.459991\r\n2002-01-01 11:00:00 Tumba   669.989990  283.075012\r\n2002-01-01 11:30:00 Tumba   703.830017  283.690002\r\n2002-01-01 12:00:00 Tumba   749.554993  284.095001\r\n2002-01-01 12:30:00 Tumba   795.280029  284.500000\r\n2002-01-01 13:00:00 Tumba   644.255005  284.779999\r\n2002-01-01 13:30:00 Tumba   493.230011  285.059998\r\n2002-01-01 14:00:00 Tumba   322.489990  284.934998\r\n2002-01-01 14:30:00 Tumba   151.750000  284.809998\r\n2002-01-01 15:00:00 Tumba   125.099998  284.744995\r\n...                                ...         ...\r\n2005-12-31 09:30:00 Tumba   878.200012  298.390015\r\n2005-12-31 10:00:00 Tumba   940.695007  299.079987\r\n2005-12-31 10:30:00 Tumba  1003.190002  299.769989\r\n2005-12-31 11:00:00 Tumba  1040.464966  300.190002\r\n2005-12-31 11:30:00 Tumba  1077.739990  300.609985\r\n2005-12-31 12:00:00 Tumba  1080.974976  301.005005\r\n2005-12-31 12:30:00 Tumba  1084.209961  301.399994\r\n2005-12-31 13:00:00 Tumba  1058.364990  301.834991\r\n2005-12-31 13:30:00 Tumba  1032.520020  302.269989\r\n2005-12-31 14:00:00 Tumba   978.469971  302.519989\r\n2005-12-31 14:30:00 Tumba   924.419983  302.769989\r\n2005-12-31 15:00:00 Tumba   838.005005  302.980011\r\n2005-12-31 15:30:00 Tumba   751.590027  303.190002\r\n2005-12-31 16:00:00 Tumba   649.864990  303.195007\r\n2005-12-31 16:30:00 Tumba   548.140015  303.200012\r\n2005-12-31 17:00:00 Tumba   441.904999  303.165009\r\n2005-12-31 17:30:00 Tumba   335.670013  303.130005\r\n2005-12-31 18:00:00 Tumba   215.830002  302.665009\r\n2005-12-31 18:30:00 Tumba    95.989998  302.200012\r\n2005-12-31 19:00:00 Tumba    49.535000  301.565002\r\n2005-12-31 19:30:00 Tumba     3.080000  300.929993\r\n2005-12-31 20:00:00 Tumba     1.540000  300.885010\r\n2005-12-31 20:30:00 Tumba     0.000000  300.839996\r\n2005-12-31 21:00:00 Tumba     0.000000  300.864990\r\n2005-12-31 21:30:00 Tumba     0.000000  300.890015\r\n2005-12-31 22:00:00 Tumba     0.000000  300.420013\r\n2005-12-31 22:30:00 Tumba     0.000000  299.950012\r\n2005-12-31 23:00:00 Tumba     0.000000  299.966675\r\n2005-12-31 23:30:00 Tumba     0.000000  299.529999\r\n2006-01-01 00:00:00 Tumba          NaN         NaN\r\n\r\n[70128 rows x 2 columns]\r\n\r\nIn [41]: len(str(met_data.index))\r\nOut[41]: 2162949\r\n\r\nIn [42]: print(str(met_data.index)[0:100], ' ... ', str(met_data.index)[-100:])\r\nMultiIndex(levels=[[2002-01-01 00:30:00, 2002-01-01 01:00:00, 2002-01-01 01:30:00, 2002-01-01 02:00:  ...   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],\r\n           names=['time', 'site'])\r\n\r\nIn [43]: print(str(met_data.index)[0:200], '\\n...\\n', str(met_data.index)[-200:])\r\nMultiIndex(levels=[[2002-01-01 00:30:00, 2002-01-01 01:00:00, 2002-01-01 01:30:00, 2002-01-01 02:00:00, 2002-01-01 02:30:00, 2002-01-01 03:00:00, 2002-01-01 03:30:00, 2002-01-01 04:00:00, 2002-01-01 0 \r\n...\r\n , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],\r\n           names=['time', 'site'])\r\n```\r\n\r\n2 million characters is a lot to print... it would be really nice to have a shorter representation."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/301432126",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3347#issuecomment-301432126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3347",
    "id": 301432126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTQzMjEyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-15T10:04:13Z",
    "updated_at": "2017-05-15T10:04:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@naught101 see #12423 "
  }
]
