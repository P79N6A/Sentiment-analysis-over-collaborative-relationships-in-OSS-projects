[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367990027",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19862#issuecomment-367990027",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19862",
    "id": 367990027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzk5MDAyNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T11:55:41Z",
    "updated_at": "2018-02-23T11:55:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "`df2.index.values[0] = 'c'  # changes both df1 and df2`\r\n\r\nIndexes are immutable. Changing its underlying data is going to cause all sorts of problems."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367990722",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19862#issuecomment-367990722",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19862",
    "id": 367990722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzk5MDcyMg==",
    "user": {
      "login": "skaae",
      "id": 2623134,
      "node_id": "MDQ6VXNlcjI2MjMxMzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2623134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skaae",
      "html_url": "https://github.com/skaae",
      "followers_url": "https://api.github.com/users/skaae/followers",
      "following_url": "https://api.github.com/users/skaae/following{/other_user}",
      "gists_url": "https://api.github.com/users/skaae/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skaae/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skaae/subscriptions",
      "organizations_url": "https://api.github.com/users/skaae/orgs",
      "repos_url": "https://api.github.com/users/skaae/repos",
      "events_url": "https://api.github.com/users/skaae/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skaae/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T11:59:17Z",
    "updated_at": "2018-02-23T11:59:17Z",
    "author_association": "NONE",
    "body": "ok. I think the documentation of copy is unclear then: `Make a deep copy, including a copy of the data and the indices.`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367991021",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19862#issuecomment-367991021",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19862",
    "id": 367991021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzk5MTAyMQ==",
    "user": {
      "login": "bordingj",
      "id": 7777521,
      "node_id": "MDQ6VXNlcjc3Nzc1MjE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7777521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bordingj",
      "html_url": "https://github.com/bordingj",
      "followers_url": "https://api.github.com/users/bordingj/followers",
      "following_url": "https://api.github.com/users/bordingj/following{/other_user}",
      "gists_url": "https://api.github.com/users/bordingj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bordingj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bordingj/subscriptions",
      "organizations_url": "https://api.github.com/users/bordingj/orgs",
      "repos_url": "https://api.github.com/users/bordingj/repos",
      "events_url": "https://api.github.com/users/bordingj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bordingj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T12:00:55Z",
    "updated_at": "2018-02-23T12:00:55Z",
    "author_association": "NONE",
    "body": "hhhmmm I would expect that a copy of a dataframe to be truly deep when deep=True"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367991331",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19862#issuecomment-367991331",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19862",
    "id": 367991331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzk5MTMzMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T12:02:32Z",
    "updated_at": "2018-02-23T12:02:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Which bit is unclear? The indices are copied, they are different objects:\r\n\r\n```python\r\nIn [3]: df1.index is df2.index\r\nOut[3]: False\r\n```\r\n\r\nBut the underlying data are shared between indexes since they're immutable.\r\n\r\nI am noticing that http://pandas-docs.github.io/pandas-docs-travis/dsintro.html doesn't have a section for `Index`. It'd be good to add a short one stating that\r\n\r\n1. They're containers for labels, used in indexing and alignment\r\n2. They're immutable\r\n3. There are many specializations of the `Index` for various dtypes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367997221",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19862#issuecomment-367997221",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19862",
    "id": 367997221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzk5NzIyMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T12:32:33Z",
    "updated_at": "2018-02-23T12:32:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "kind of the same issue as: https://github.com/pandas-dev/pandas/issues/19505\r\n\r\nmeaning docs need a bit more"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367998860",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19862#issuecomment-367998860",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19862",
    "id": 367998860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzk5ODg2MA==",
    "user": {
      "login": "skaae",
      "id": 2623134,
      "node_id": "MDQ6VXNlcjI2MjMxMzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2623134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skaae",
      "html_url": "https://github.com/skaae",
      "followers_url": "https://api.github.com/users/skaae/followers",
      "following_url": "https://api.github.com/users/skaae/following{/other_user}",
      "gists_url": "https://api.github.com/users/skaae/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skaae/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skaae/subscriptions",
      "organizations_url": "https://api.github.com/users/skaae/orgs",
      "repos_url": "https://api.github.com/users/skaae/repos",
      "events_url": "https://api.github.com/users/skaae/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skaae/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T12:41:02Z",
    "updated_at": "2018-02-23T12:42:01Z",
    "author_association": "NONE",
    "body": "> But the underlying data are shared between indexes since they're immutable.\r\n\r\n\r\nIs there any reason the underlying data in the index is not copied? It seems that the df.values is actually copied just the indices are not? \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368006529",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19862#issuecomment-368006529",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19862",
    "id": 368006529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAwNjUyOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T13:17:57Z",
    "updated_at": "2018-02-23T13:18:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Is there any reason the underlying data in the index is not copied?\r\n\r\nPerformance. Since indices are immutable, the underlying data can safely be shared. There's no reason to copy it. DataFrames / series are mutable, so the data need to be copied.\r\n\r\n> It seems that the df.values is actually copied just the indices are not?\r\n\r\nAnd just to be clear, the index *is* a copy, since they are different objects. Its the underlying values (which users should not be mutating) that are not copied."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369184763",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19862#issuecomment-369184763",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19862",
    "id": 369184763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTE4NDc2Mw==",
    "user": {
      "login": "skaae",
      "id": 2623134,
      "node_id": "MDQ6VXNlcjI2MjMxMzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2623134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skaae",
      "html_url": "https://github.com/skaae",
      "followers_url": "https://api.github.com/users/skaae/followers",
      "following_url": "https://api.github.com/users/skaae/following{/other_user}",
      "gists_url": "https://api.github.com/users/skaae/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skaae/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skaae/subscriptions",
      "organizations_url": "https://api.github.com/users/skaae/orgs",
      "repos_url": "https://api.github.com/users/skaae/repos",
      "events_url": "https://api.github.com/users/skaae/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skaae/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-28T09:46:43Z",
    "updated_at": "2018-02-28T09:46:43Z",
    "author_association": "NONE",
    "body": "ok. I'll close this. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/375585632",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19862#issuecomment-375585632",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19862",
    "id": 375585632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTU4NTYzMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T08:59:51Z",
    "updated_at": "2018-03-23T08:59:51Z",
    "author_association": "MEMBER",
    "body": "Apparently there is a `deep='all'`, that exactly deals with this (also copying underlying index data or not). To illustrate with the original example:\r\n\r\n```\r\nIn [21]: df1 = pd.DataFrame(index=['a', 'b'], columns=['foo', 'muu'])\r\n\r\nIn [22]: df2 = df1.copy(deep=True)\r\n\r\nIn [23]: df2.index.values[0] = 'c'\r\n\r\nIn [24]: df1\r\nOut[24]: \r\n     foo  muu\r\nc    NaN  NaN    <--- updated\r\nb    NaN  NaN\r\n\r\nIn [25]: df3 = df1.copy(deep='all')\r\n\r\nIn [26]: df3.index.values[1] = 'd'\r\n\r\nIn [27]: df1\r\nOut[27]: \r\n     foo  muu\r\nc    NaN  NaN\r\nb    NaN  NaN    <--- not updated\r\n```\r\n\r\nBut, `deep='all'` is completely undocumented, and as far as I can find from a quick search, also only used once in our own code base (https://github.com/pandas-dev/pandas/blob/master/pandas/_libs/reduction.pyx#L537)\r\n\r\nI am not sure we actually *want* to document this? \r\nBut then we should maybe just remove that ability?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/375611626",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19862#issuecomment-375611626",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19862",
    "id": 375611626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTYxMTYyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T10:33:45Z",
    "updated_at": "2018-03-23T10:33:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes, this was really only and never implemented (or meant to be), should be removed."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412552189",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19862#issuecomment-412552189",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19862",
    "id": 412552189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU1MjE4OQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T15:09:21Z",
    "updated_at": "2018-08-13T15:09:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "IMO, `copy(deep=True)` should completely sever all connections between the original and the copied object - compare the official python docs (https://docs.python.org/3/library/copy.html):\r\n> A _deep copy_ constructs a new compound object and then, recursively, inserts copies into it of the objects found in the original.\r\n\r\nSo, IMO, `deep=True` should come to mean what `deep='all'` does currently (and the latter can then be removed).\r\n\r\nRe:\r\n> Indexes are immutable. Changing its underlying data is going to cause all sorts of problems.\r\n\r\nThis is not a valid argument IMO - it's up to me as a user (consenting adults and all...) what I do with my objects, including the indexes, and if I make a deep copy, it's a justified expectation (I would even argue: a built-in expectation of the word \"deep\") that this will not mess with the original.\r\n\r\nPlus, if I'm already deep-copying the much larger `values` of a DF, not copying the `index` only saves a comparatively irrelevant amount of memory."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412565176",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19862#issuecomment-412565176",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19862",
    "id": 412565176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU2NTE3Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T15:47:26Z",
    "updated_at": "2018-08-13T15:47:26Z",
    "author_association": "MEMBER",
    "body": "> > Indexes are immutable. Changing its underlying data is going to cause all sorts of problems.\r\n\r\n> This is not a valid argument IMO - it's up to me as a user (consenting adults and all...) what I do with my objects, including the indexes\r\n\r\nThere are other problems as well that are not related to copying that makes directly changing underlying values a bad idea. For example, the internal hashtable that is used for indexing will be no longer valid if you change the underlying values of an index (so indexing will give wrong results).\r\n\r\n> not copying the index only saves a comparatively irrelevant amount of memory.\r\n\r\nFor DataFrame that might be true (depending on its size), but not for Series.\r\n\r\n---\r\n\r\nTo be clear, I am personally not necessarily against changing this (IMO this would make the behaviour more straightforward, at cost of some performance. So a trade-off, of which I am not fully sure on which side I am), only answering some of your arguments.\r\n\r\nOne additional thing. You mention the comparison to the stdlib deep copy behaviour, but note that even the `deep='all'` is not comparable to that (it does copy the index, but it still does not copy python objects inside the values recursively)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412636687",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19862#issuecomment-412636687",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19862",
    "id": 412636687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjYzNjY4Nw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T19:32:29Z",
    "updated_at": "2018-08-13T19:32:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "> One additional thing. You mention the comparison to the stdlib deep copy behaviour, but note that even the deep='all' is not comparable to that (it does copy the index, but it still does not copy python objects inside the values recursively).\r\n\r\nIsn't that moving the goal posts? It _is_ within the power of pandas to influence how its own indexes are handled, whereas arbitrary python objects can obviously be quite complicated.\r\n\r\nBut *even* then, the meaning of `deep` in vanilla python follows the \"complete separation\" interpretation:\r\n```\r\nfrom copy import deepcopy\r\nx = [0, 1]\r\nx.append(x)\r\nx\r\n# [0, 1, [...]]\r\ny = deepcopy(x)\r\ny[2][0] = 10  # same for arbitrarily many times \"[2]\"\r\ny\r\n# [10, 1, [...]]\r\nx\r\n# [0, 1, [...]]\r\n```"
  }
]
