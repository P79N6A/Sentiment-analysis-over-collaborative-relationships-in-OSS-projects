[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469050265",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25524#issuecomment-469050265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25524",
    "id": 469050265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTA1MDI2NQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-03-03T18:32:46Z",
    "updated_at": "2019-03-03T18:32:46Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25524?src=pr&el=h1) Report\n> Merging [#25524](https://codecov.io/gh/pandas-dev/pandas/pull/25524?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/42b4c975e55c59da7868f99f9949841aca12a08d?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/25524/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/25524?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #25524      +/-   ##\n==========================================\n+ Coverage   91.75%   91.76%   +<.01%     \n==========================================\n  Files         173      173              \n  Lines       52960    52964       +4     \n==========================================\n+ Hits        48595    48600       +5     \n+ Misses       4365     4364       -1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.33% <100%> (ø)` | :arrow_up: |\n| #single | `41.71% <100%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/25524?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/ops.py](https://codecov.io/gh/pandas-dev/pandas/pull/25524/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvb3BzLnB5) | `91.8% <100%> (+0.04%)` | :arrow_up: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/25524/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `87.66% <0%> (+0.09%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25524?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25524?src=pr&el=footer). Last update [42b4c97...2f6173c](https://codecov.io/gh/pandas-dev/pandas/pull/25524?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469050266",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25524#issuecomment-469050266",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25524",
    "id": 469050266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTA1MDI2Ng==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-03-03T18:32:47Z",
    "updated_at": "2019-03-05T21:58:04Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25524?src=pr&el=h1) Report\n> Merging [#25524](https://codecov.io/gh/pandas-dev/pandas/pull/25524?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/42b4c975e55c59da7868f99f9949841aca12a08d?src=pr&el=desc) will **decrease** coverage by `0.49%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/25524/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/25524?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##           master   #25524     +/-   ##\n=========================================\n- Coverage   91.75%   91.26%   -0.5%     \n=========================================\n  Files         173      173             \n  Lines       52960    52970     +10     \n=========================================\n- Hits        48595    48341    -254     \n- Misses       4365     4629    +264\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.83% <100%> (-0.5%)` | :arrow_down: |\n| #single | `41.72% <100%> (+0.01%)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/25524?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/ops.py](https://codecov.io/gh/pandas-dev/pandas/pull/25524/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvb3BzLnB5) | `91.74% <100%> (-0.03%)` | :arrow_down: |\n| [pandas/core/panel.py](https://codecov.io/gh/pandas-dev/pandas/pull/25524/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcGFuZWwucHk=) | `38.56% <0%> (-33.19%)` | :arrow_down: |\n| [pandas/core/sparse/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/25524/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc3BhcnNlL3Nlcmllcy5weQ==) | `93.3% <0%> (-2.24%)` | :arrow_down: |\n| [pandas/core/indexing.py](https://codecov.io/gh/pandas-dev/pandas/pull/25524/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhpbmcucHk=) | `90.88% <0%> (-1.41%)` | :arrow_down: |\n| [pandas/core/internals/managers.py](https://codecov.io/gh/pandas-dev/pandas/pull/25524/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL21hbmFnZXJzLnB5) | `93.92% <0%> (-0.92%)` | :arrow_down: |\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/25524/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `93.64% <0%> (-0.53%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/25524/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `96.79% <0%> (-0.06%)` | :arrow_down: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/25524/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `93.68% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25524?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25524?src=pr&el=footer). Last update [42b4c97...6d7ed91](https://codecov.io/gh/pandas-dev/pandas/pull/25524?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469058168",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25524#issuecomment-469058168",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25524",
    "id": 469058168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTA1ODE2OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-03T20:00:35Z",
    "updated_at": "2019-03-03T20:00:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for working on this. I think it's OK that other ops like mod (temporarily) lack examples.\r\n\r\nTwo questions\r\n\r\n1. Maybe add a `fill_value` for Series.multiply\r\n2. How to test this? It'd be nice if we could run the doctests, but I don't know how easy that is due to how we define these methods. Do you have any thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469418155",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25524#issuecomment-469418155",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25524",
    "id": 469418155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTQxODE1NQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T20:55:50Z",
    "updated_at": "2019-03-05T21:10:45Z",
    "author_association": "NONE",
    "body": "Hello @danielplawrence! Thanks for updating this PR. We checked the lines you've touched for [PEP 8](https://www.python.org/dev/peps/pep-0008) issues, and found:\n\n\n\nThere are currently no PEP 8 issues detected in this Pull Request. Cheers! :beers: \n\n##### Comment last updated at 2019-03-05 21:10:44 UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469433912",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25524#issuecomment-469433912",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25524",
    "id": 469433912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTQzMzkxMg==",
    "user": {
      "login": "danielplawrence",
      "id": 8767088,
      "node_id": "MDQ6VXNlcjg3NjcwODg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8767088?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielplawrence",
      "html_url": "https://github.com/danielplawrence",
      "followers_url": "https://api.github.com/users/danielplawrence/followers",
      "following_url": "https://api.github.com/users/danielplawrence/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielplawrence/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielplawrence/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielplawrence/subscriptions",
      "organizations_url": "https://api.github.com/users/danielplawrence/orgs",
      "repos_url": "https://api.github.com/users/danielplawrence/repos",
      "events_url": "https://api.github.com/users/danielplawrence/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielplawrence/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T21:45:00Z",
    "updated_at": "2019-03-04T21:45:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Brief update:\r\n- I've gone through and added examples for several other ops. We now have:\r\n    - add\r\n    - sub\r\n    - mul\r\n    - mod\r\n    - pow\r\n    - truediv\r\n    - floordiv\r\n- These are all just examples with the same input arrays of 1s and NaN which were in the previous docstring.\r\n- Added fill_value=0 to each example as suggested above.\r\n- Didn't do divmod as I couldn't get it to work. divmod() works fine, but Series.divmod() fails with a ValueError, see example below.\r\n<details>\r\n<summary>Series.divmod examples</summary>\r\n<pre>\r\n>>> a = pd.Series([1, 1, 1, np.nan], index=['a', 'b', 'c', 'd'])\r\n>>> b = pd.Series([1, np.nan, 1, np.nan], index=['a', 'b', 'd', 'e'])\r\n>>> divmod(a,b)\r\n(a    1.0\r\nb    NaN\r\nc    NaN\r\nd    NaN\r\ne    NaN\r\ndtype: float64, a    0.0\r\nb    NaN\r\nc    NaN\r\nd    NaN\r\ne    NaN\r\ndtype: float64)\r\n>>> a.divmod(b)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/danlaw/Projects/pandas/pandas/core/ops.py\", line 2046, in flex_wrapper\r\n    return self._binop(other, op, level=level, fill_value=fill_value)\r\n  File \"/Users/danlaw/Projects/pandas/pandas/core/series.py\", line 2522, in _binop\r\n    result = self._constructor(result, index=new_index, name=name)\r\n  File \"/Users/danlaw/Projects/pandas/pandas/core/series.py\", line 250, in __init__\r\n    .format(val=len(data), ind=len(index)))\r\nValueError: Length of passed values is 2, index implies 5\r\n</pre>\r\n</details>\r\n\r\n- Checked the doctests with validate_docstrings.py, these are validating correctly and fail if I introduce incorrect examples. \r\n- Doctests raised several errors: (full output attached below)\r\n    - Complained about the spaces introduced by using a format string at the end of the template. I've fixed this so that _make_flex_doc() simply concatenates the base doc with the examples -- this removes trailing whitespace from the cases with no examples.\r\n    - These errors:\r\n          **a)\tParameters {axis} not documented**\r\n*It seems that Series ops can take a parameter which raises 'No axis named a for object type <class 'type'>' for values other than 0. Should this parameter be removed from Series? Doesn't seem to make sense to document it unless I'm missing something. I've added an example at the bottom of this comment.*\r\n\t  **b)   Parameter \"other\" has no description**  \r\n*Appears to be a false positive*\r\n\t  **c) Missing description for See Also \"Series.rpow\" reference**\r\n*False positive?*\r\n\r\n- I see that Azure piplines threw a linting failure ([link](https://dev.azure.com/pandas-dev/pandas/_build/results?buildId=8995&view=logs)), I'll look into it ASAP\r\n\r\n<details>\r\n  <summary>Full output of validate_docstrings.py</summary>\r\n<pre>\r\n(pandas-dev) 8c8590165d94% for op in add sub mul mod pow truediv floordiv\r\ndo\r\npython3 scripts/validate_docstrings.py pandas.Series.$op\r\ndone\r\n\r\n################################################################################\r\n######################## Docstring (pandas.Series.add)  ########################\r\n################################################################################\r\n\r\nReturn Addition of series and other, element-wise (binary operator `add`).\r\n\r\nEquivalent to ``series + other``, but with support to substitute a fill_value for\r\nmissing data in one of the inputs.\r\n\r\nParameters\r\n----------\r\nother : Series or scalar value\r\nfill_value : None or float value, default None (NaN)\r\n    Fill existing missing (NaN) values, and any new element needed for\r\n    successful Series alignment, with this value before computation.\r\n    If data in both corresponding Series locations is missing\r\n    the result will be missing.\r\nlevel : int or name\r\n    Broadcast across a level, matching Index values on the\r\n    passed MultiIndex level.\r\n\r\nReturns\r\n-------\r\nSeries\r\n    The result of the operation.\r\n\r\nSee Also\r\n--------\r\nSeries.radd\r\n\r\nExamples\r\n--------\r\n>>> a = pd.Series([1, 1, 1, np.nan], index=['a', 'b', 'c', 'd'])\r\n>>> a\r\na    1.0\r\nb    1.0\r\nc    1.0\r\nd    NaN\r\ndtype: float64\r\n>>> b = pd.Series([1, np.nan, 1, np.nan], index=['a', 'b', 'd', 'e'])\r\n>>> b\r\na    1.0\r\nb    NaN\r\nd    1.0\r\ne    NaN\r\ndtype: float64\r\n>>> a.add(b, fill_value=0)\r\na    2.0\r\nb    1.0\r\nc    1.0\r\nd    1.0\r\ne    NaN\r\ndtype: float64\r\n\r\n################################################################################\r\n################################## Validation ##################################\r\n################################################################################\r\n\r\n3 Errors found:\r\n\tParameters {axis} not documented\r\n\tParameter \"other\" has no description\r\n\tMissing description for See Also \"Series.radd\" reference\r\n\r\n################################################################################\r\n######################## Docstring (pandas.Series.sub)  ########################\r\n################################################################################\r\n\r\nReturn Subtraction of series and other, element-wise (binary operator `sub`).\r\n\r\nEquivalent to ``series - other``, but with support to substitute a fill_value for\r\nmissing data in one of the inputs.\r\n\r\nParameters\r\n----------\r\nother : Series or scalar value\r\nfill_value : None or float value, default None (NaN)\r\n    Fill existing missing (NaN) values, and any new element needed for\r\n    successful Series alignment, with this value before computation.\r\n    If data in both corresponding Series locations is missing\r\n    the result will be missing.\r\nlevel : int or name\r\n    Broadcast across a level, matching Index values on the\r\n    passed MultiIndex level.\r\n\r\nReturns\r\n-------\r\nSeries\r\n    The result of the operation.\r\n\r\nSee Also\r\n--------\r\nSeries.rsub\r\n\r\nExamples\r\n--------\r\n>>> a = pd.Series([1, 1, 1, np.nan], index=['a', 'b', 'c', 'd'])\r\n>>> a\r\na    1.0\r\nb    1.0\r\nc    1.0\r\nd    NaN\r\ndtype: float64\r\n>>> b = pd.Series([1, np.nan, 1, np.nan], index=['a', 'b', 'd', 'e'])\r\n>>> b\r\na    1.0\r\nb    NaN\r\nd    1.0\r\ne    NaN\r\ndtype: float64\r\n>>> a.subtract(b, fill_value=0)\r\na    0.0\r\nb    1.0\r\nc    1.0\r\nd   -1.0\r\ne    NaN\r\ndtype: float64\r\n\r\n################################################################################\r\n################################## Validation ##################################\r\n################################################################################\r\n\r\n3 Errors found:\r\n\tParameters {axis} not documented\r\n\tParameter \"other\" has no description\r\n\tMissing description for See Also \"Series.rsub\" reference\r\n\r\n################################################################################\r\n######################## Docstring (pandas.Series.mul)  ########################\r\n################################################################################\r\n\r\nReturn Multiplication of series and other, element-wise (binary operator `mul`).\r\n\r\nEquivalent to ``series * other``, but with support to substitute a fill_value for\r\nmissing data in one of the inputs.\r\n\r\nParameters\r\n----------\r\nother : Series or scalar value\r\nfill_value : None or float value, default None (NaN)\r\n    Fill existing missing (NaN) values, and any new element needed for\r\n    successful Series alignment, with this value before computation.\r\n    If data in both corresponding Series locations is missing\r\n    the result will be missing.\r\nlevel : int or name\r\n    Broadcast across a level, matching Index values on the\r\n    passed MultiIndex level.\r\n\r\nReturns\r\n-------\r\nSeries\r\n    The result of the operation.\r\n\r\nSee Also\r\n--------\r\nSeries.rmul\r\n\r\nExamples\r\n--------\r\n>>> a = pd.Series([1, 1, 1, np.nan], index=['a', 'b', 'c', 'd'])\r\n>>> a\r\na    1.0\r\nb    1.0\r\nc    1.0\r\nd    NaN\r\ndtype: float64\r\n>>> b = pd.Series([1, np.nan, 1, np.nan], index=['a', 'b', 'd', 'e'])\r\n>>> b\r\na    1.0\r\nb    NaN\r\nd    1.0\r\ne    NaN\r\ndtype: float64\r\n>>> a.multiply(b, fill_value=0)\r\na    1.0\r\nb    0.0\r\nc    0.0\r\nd    0.0\r\ne    NaN\r\ndtype: float64\r\n\r\n################################################################################\r\n################################## Validation ##################################\r\n################################################################################\r\n\r\n3 Errors found:\r\n\tParameters {axis} not documented\r\n\tParameter \"other\" has no description\r\n\tMissing description for See Also \"Series.rmul\" reference\r\n\r\n################################################################################\r\n######################## Docstring (pandas.Series.mod)  ########################\r\n################################################################################\r\n\r\nReturn Modulo of series and other, element-wise (binary operator `mod`).\r\n\r\nEquivalent to ``series % other``, but with support to substitute a fill_value for\r\nmissing data in one of the inputs.\r\n\r\nParameters\r\n----------\r\nother : Series or scalar value\r\nfill_value : None or float value, default None (NaN)\r\n    Fill existing missing (NaN) values, and any new element needed for\r\n    successful Series alignment, with this value before computation.\r\n    If data in both corresponding Series locations is missing\r\n    the result will be missing.\r\nlevel : int or name\r\n    Broadcast across a level, matching Index values on the\r\n    passed MultiIndex level.\r\n\r\nReturns\r\n-------\r\nSeries\r\n    The result of the operation.\r\n\r\nSee Also\r\n--------\r\nSeries.rmod\r\n\r\nExamples\r\n--------\r\n>>> a = pd.Series([1, 1, 1, np.nan], index=['a', 'b', 'c', 'd'])\r\n>>> a\r\na    1.0\r\nb    1.0\r\nc    1.0\r\nd    NaN\r\ndtype: float64\r\n>>> b = pd.Series([1, np.nan, 1, np.nan], index=['a', 'b', 'd', 'e'])\r\n>>> b\r\na    1.0\r\nb    NaN\r\nd    1.0\r\ne    NaN\r\ndtype: float64\r\n>>> a.mod(b, fill_value=0)\r\na    0.0\r\nb    NaN\r\nc    NaN\r\nd    0.0\r\ne    NaN\r\ndtype: float64\r\n\r\n################################################################################\r\n################################## Validation ##################################\r\n################################################################################\r\n\r\n3 Errors found:\r\n\tParameters {axis} not documented\r\n\tParameter \"other\" has no description\r\n\tMissing description for See Also \"Series.rmod\" reference\r\n\r\n################################################################################\r\n######################## Docstring (pandas.Series.pow)  ########################\r\n################################################################################\r\n\r\nReturn Exponential power of series and other, element-wise (binary operator `pow`).\r\n\r\nEquivalent to ``series ** other``, but with support to substitute a fill_value for\r\nmissing data in one of the inputs.\r\n\r\nParameters\r\n----------\r\nother : Series or scalar value\r\nfill_value : None or float value, default None (NaN)\r\n    Fill existing missing (NaN) values, and any new element needed for\r\n    successful Series alignment, with this value before computation.\r\n    If data in both corresponding Series locations is missing\r\n    the result will be missing.\r\nlevel : int or name\r\n    Broadcast across a level, matching Index values on the\r\n    passed MultiIndex level.\r\n\r\nReturns\r\n-------\r\nSeries\r\n    The result of the operation.\r\n\r\nSee Also\r\n--------\r\nSeries.rpow\r\n\r\nExamples\r\n--------\r\n>>> a = pd.Series([1, 1, 1, np.nan], index=['a', 'b', 'c', 'd'])\r\n>>> a\r\na    1.0\r\nb    1.0\r\nc    1.0\r\nd    NaN\r\ndtype: float64\r\n>>> b = pd.Series([1, np.nan, 1, np.nan], index=['a', 'b', 'd', 'e'])\r\n>>> b\r\na    1.0\r\nb    NaN\r\nd    1.0\r\ne    NaN\r\ndtype: float64\r\n>>> a.pow(b, fill_value=0)\r\na    1.0\r\nb    1.0\r\nc    1.0\r\nd    0.0\r\ne    NaN\r\ndtype: float64\r\n\r\n################################################################################\r\n################################## Validation ##################################\r\n################################################################################\r\n\r\n3 Errors found:\r\n\tParameters {axis} not documented\r\n\tParameter \"other\" has no description\r\n\tMissing description for See Also \"Series.rpow\" reference\r\n\r\n################################################################################\r\n###################### Docstring (pandas.Series.truediv)  ######################\r\n################################################################################\r\n\r\nReturn Floating division of series and other, element-wise (binary operator `truediv`).\r\n\r\nEquivalent to ``series / other``, but with support to substitute a fill_value for\r\nmissing data in one of the inputs.\r\n\r\nParameters\r\n----------\r\nother : Series or scalar value\r\nfill_value : None or float value, default None (NaN)\r\n    Fill existing missing (NaN) values, and any new element needed for\r\n    successful Series alignment, with this value before computation.\r\n    If data in both corresponding Series locations is missing\r\n    the result will be missing.\r\nlevel : int or name\r\n    Broadcast across a level, matching Index values on the\r\n    passed MultiIndex level.\r\n\r\nReturns\r\n-------\r\nSeries\r\n    The result of the operation.\r\n\r\nSee Also\r\n--------\r\nSeries.rtruediv\r\n\r\nExamples\r\n--------\r\n>>> a = pd.Series([1, 1, 1, np.nan], index=['a', 'b', 'c', 'd'])\r\n>>> a\r\na    1.0\r\nb    1.0\r\nc    1.0\r\nd    NaN\r\ndtype: float64\r\n>>> b = pd.Series([1, np.nan, 1, np.nan], index=['a', 'b', 'd', 'e'])\r\n>>> b\r\na    1.0\r\nb    NaN\r\nd    1.0\r\ne    NaN\r\ndtype: float64\r\n>>> a.divide(b, fill_value=0)\r\na    1.0\r\nb    inf\r\nc    inf\r\nd    0.0\r\ne    NaN\r\ndtype: float64\r\n\r\n################################################################################\r\n################################## Validation ##################################\r\n################################################################################\r\n\r\n3 Errors found:\r\n\tParameters {axis} not documented\r\n\tParameter \"other\" has no description\r\n\tMissing description for See Also \"Series.rtruediv\" reference\r\n\r\n################################################################################\r\n###################### Docstring (pandas.Series.floordiv) ######################\r\n################################################################################\r\n\r\nReturn Integer division of series and other, element-wise (binary operator `floordiv`).\r\n\r\nEquivalent to ``series // other``, but with support to substitute a fill_value for\r\nmissing data in one of the inputs.\r\n\r\nParameters\r\n----------\r\nother : Series or scalar value\r\nfill_value : None or float value, default None (NaN)\r\n    Fill existing missing (NaN) values, and any new element needed for\r\n    successful Series alignment, with this value before computation.\r\n    If data in both corresponding Series locations is missing\r\n    the result will be missing.\r\nlevel : int or name\r\n    Broadcast across a level, matching Index values on the\r\n    passed MultiIndex level.\r\n\r\nReturns\r\n-------\r\nSeries\r\n    The result of the operation.\r\n\r\nSee Also\r\n--------\r\nSeries.rfloordiv\r\n\r\nExamples\r\n--------\r\n>>> a = pd.Series([1, 1, 1, np.nan], index=['a', 'b', 'c', 'd'])\r\n>>> a\r\na    1.0\r\nb    1.0\r\nc    1.0\r\nd    NaN\r\ndtype: float64\r\n>>> b = pd.Series([1, np.nan, 1, np.nan], index=['a', 'b', 'd', 'e'])\r\n>>> b\r\na    1.0\r\nb    NaN\r\nd    1.0\r\ne    NaN\r\ndtype: float64\r\n>>> a.floordiv(b, fill_value=0)\r\na    1.0\r\nb    NaN\r\nc    NaN\r\nd    0.0\r\ne    NaN\r\ndtype: float64\r\n\r\n################################################################################\r\n################################## Validation ##################################\r\n################################################################################\r\n\r\n3 Errors found:\r\n\tParameters {axis} not documented\r\n\tParameter \"other\" has no description\r\n\tMissing description for See Also \"Series.rfloordiv\" reference\r\n</pre>\r\n</details>\r\n<details><summary>Example ValueError from axis parameter</summary>\r\n<pre>\r\n>>> a = pd.Series([1, 1, 1, np.nan], index=['a', 'b', 'c', 'd'])\r\n>>> b = pd.Series([1, np.nan, 1, np.nan], index=['a', 'b', 'd', 'e'])\r\n>>> a.add(b)\r\na    2.0\r\nb    NaN\r\nc    NaN\r\nd    NaN\r\ne    NaN\r\ndtype: float64\r\n>>> a.add(b,axis=0)\r\na    2.0\r\nb    NaN\r\nc    NaN\r\nd    NaN\r\ne    NaN\r\ndtype: float64\r\n>>> a.add(b,axis=1)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/danlaw/Projects/pandas/pandas/core/ops.py\", line 2044, in flex_wrapper\r\n    self._get_axis_number(axis)\r\n  File \"/Users/danlaw/Projects/pandas/pandas/core/generic.py\", line 361, in _get_axis_number\r\n    .format(axis, type(cls)))\r\nValueError: No axis named 1 for object type <class 'type'>\r\n</pre>\r\n</details>"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/471364508",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25524#issuecomment-471364508",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25524",
    "id": 471364508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTM2NDUwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-10T23:19:31Z",
    "updated_at": "2019-03-10T23:19:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/471510724",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25524#issuecomment-471510724",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25524",
    "id": 471510724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTUxMDcyNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-11T11:58:27Z",
    "updated_at": "2019-03-11T11:58:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @danielplawrence. The divmod failure is being worked on elsewhere, and documenting `axis` is out of scope for this PR."
  }
]
