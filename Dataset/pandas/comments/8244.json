[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55297972",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8244#issuecomment-55297972",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8244",
    "id": 55297972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1Mjk3OTcy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-11T17:24:38Z",
    "updated_at": "2014-09-11T17:24:49Z",
    "author_association": "MEMBER",
    "body": "The reason I didn't do this in #7780 is because, unlike coloring by column, you need to have \"size\" in the right units to make the result look reasonable. So we would need to invent another argument (e.g., `s_scale`) to adjust printer points to the right size. We could pick some sort of sane default based on the statistics of the \"size\" column. Possibly would be worth looking at how ggplot handles this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55331429",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8244#issuecomment-55331429",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8244",
    "id": 55331429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzMxNDI5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-11T21:27:17Z",
    "updated_at": "2014-09-11T21:27:17Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger Something else, which matplotlib style did you use in the plot above? I think the plots in out docs should look like that! Is it a style that you can express in rcParams, then we could update https://github.com/pydata/pandas/blob/master/pandas/tools/plotting.py#L34 (eg the grid lines -> white lines)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55333286",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8244#issuecomment-55333286",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8244",
    "id": 55333286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzMzMjg2",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-11T21:42:18Z",
    "updated_at": "2014-09-11T21:42:18Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche This is the style you get from importing [seaborn](http://stanford.edu/~mwaskom/software/seaborn/index.html). Just `import seaborn` should do it.\n\nBy the way, if you haven't tried Seaborn, you should definitely check it out. It's has a very well thought out design (both the API and the graphics style).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55333967",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8244#issuecomment-55333967",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8244",
    "id": 55333967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzMzOTY3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-11T21:47:29Z",
    "updated_at": "2014-09-11T21:47:29Z",
    "author_association": "MEMBER",
    "body": "Ah, OK. Yes, I know seaborn, but have not yet really used it. In any case, we could maybe copy some the rcParams to update the style of the plots in our docs.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55335289",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8244#issuecomment-55335289",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8244",
    "id": 55335289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzM1Mjg5",
    "user": {
      "login": "onesandzeroes",
      "id": 1460294,
      "node_id": "MDQ6VXNlcjE0NjAyOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1460294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onesandzeroes",
      "html_url": "https://github.com/onesandzeroes",
      "followers_url": "https://api.github.com/users/onesandzeroes/followers",
      "following_url": "https://api.github.com/users/onesandzeroes/following{/other_user}",
      "gists_url": "https://api.github.com/users/onesandzeroes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onesandzeroes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onesandzeroes/subscriptions",
      "organizations_url": "https://api.github.com/users/onesandzeroes/orgs",
      "repos_url": "https://api.github.com/users/onesandzeroes/repos",
      "events_url": "https://api.github.com/users/onesandzeroes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onesandzeroes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-11T21:59:09Z",
    "updated_at": "2014-09-11T21:59:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "The seaborn style looks like it's just `ggplot`'s default style. It's one of the built in styles in matplotlib 1.4, so if you wanted to use that for the docs, then you could just do:\n\n``` python\nimport matplotlib.style\nmatplotlib.style.use('ggplot')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55342952",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8244#issuecomment-55342952",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8244",
    "id": 55342952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzQyOTUy",
    "user": {
      "login": "onesandzeroes",
      "id": 1460294,
      "node_id": "MDQ6VXNlcjE0NjAyOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1460294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onesandzeroes",
      "html_url": "https://github.com/onesandzeroes",
      "followers_url": "https://api.github.com/users/onesandzeroes/followers",
      "following_url": "https://api.github.com/users/onesandzeroes/following{/other_user}",
      "gists_url": "https://api.github.com/users/onesandzeroes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onesandzeroes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onesandzeroes/subscriptions",
      "organizations_url": "https://api.github.com/users/onesandzeroes/orgs",
      "repos_url": "https://api.github.com/users/onesandzeroes/repos",
      "events_url": "https://api.github.com/users/onesandzeroes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onesandzeroes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-11T23:22:29Z",
    "updated_at": "2014-09-11T23:22:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, at first glance the way ggplot handles this doesn't seem super complicated, it seems like it's all done [here](https://github.com/hadley/ggplot2/blob/master/R/scale-size.r). So basically, it sets up a range between 1 and 6 (units are arbitrary, we'll just have to pick a range that looks good I guess) and normalizes the values to that range.\n\nThe main difference is that I think ggplot is scaling based on the radius, whereas matplotlib markersize sets the area, so we might need to transform? There's a bit of discussion on SO [here](http://stackoverflow.com/questions/14827650/pyplot-scatter-plot-marker-size), the scaling in the second example looks quite good.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55391367",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8244#issuecomment-55391367",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8244",
    "id": 55391367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzkxMzY3",
    "user": {
      "login": "onesandzeroes",
      "id": 1460294,
      "node_id": "MDQ6VXNlcjE0NjAyOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1460294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onesandzeroes",
      "html_url": "https://github.com/onesandzeroes",
      "followers_url": "https://api.github.com/users/onesandzeroes/followers",
      "following_url": "https://api.github.com/users/onesandzeroes/following{/other_user}",
      "gists_url": "https://api.github.com/users/onesandzeroes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onesandzeroes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onesandzeroes/subscriptions",
      "organizations_url": "https://api.github.com/users/onesandzeroes/orgs",
      "repos_url": "https://api.github.com/users/onesandzeroes/repos",
      "events_url": "https://api.github.com/users/onesandzeroes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onesandzeroes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-12T11:36:52Z",
    "updated_at": "2014-09-12T11:36:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "To me, the sizes seem pretty good if we just pick sensible defaults for the min and max point size, and then normalize the values to that range, e.g.:\n\n``` python\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef convert_to_points(vals, size_range=(50, 1000)):\n    min_size, max_size = size_range\n    val_range = vals.max() - vals.min()\n    normalized_vals = (vals - vals.min()) / val_range\n    point_sizes = (min_size + (normalized_vals * (max_size - min_size)))\n    return point_sizes\n\ndf2 = pd.DataFrame({\n    'x': np.linspace(0, 50, 6),\n    'y': np.linspace(0, 20, 6)\n})\ndf2.plot(kind='scatter', x='x', y='y', s=convert_to_points(df2.x.values))\n```\n\n![point_scaling](https://cloud.githubusercontent.com/assets/1460294/4249084/7b985c54-3a70-11e4-810a-f92cba80d294.png)\n\nI can't claim to have the best eye for visual design though, so if anyone can suggest scaling methods that work better than a straight linear transform I'm happy to hear them. If the aim is to provide an argument that lets people adjust the min and max size up and down, it might also be nice to present the user with more sensible numbers like ggplot does with its default `(1, 6)` range\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403162063",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8244#issuecomment-403162063",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8244",
    "id": 403162063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE2MjA2Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T22:30:27Z",
    "updated_at": "2018-07-06T22:30:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Dupe of https://github.com/pandas-dev/pandas/issues/16827"
  }
]
