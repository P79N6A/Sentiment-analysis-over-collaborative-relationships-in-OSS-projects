[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225173415",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13420#issuecomment-225173415",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13420",
    "id": 225173415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTE3MzQxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T12:50:48Z",
    "updated_at": "2016-06-10T12:50:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Your grouper is not a valid categorical as it doesn't map anything. Though this still fails.\n\n```\nIn [30]: grp = pd.Categorical.from_codes([1,0,1],categories=list('abc'))\n\nIn [31]: grp\nOut[31]: \n[b, a, b]\nCategories (3, object): [a, b, c]\n\nIn [32]: grp.codes\nOut[32]: array([1, 0, 1], dtype=int8)\n```\n\nSo i'd say this is a bug, but need a bit of workout on the tests.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225179692",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13420#issuecomment-225179692",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13420",
    "id": 225179692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTE3OTY5Mg==",
    "user": {
      "login": "thorbjornwolf",
      "id": 3935060,
      "node_id": "MDQ6VXNlcjM5MzUwNjA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3935060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thorbjornwolf",
      "html_url": "https://github.com/thorbjornwolf",
      "followers_url": "https://api.github.com/users/thorbjornwolf/followers",
      "following_url": "https://api.github.com/users/thorbjornwolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/thorbjornwolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thorbjornwolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thorbjornwolf/subscriptions",
      "organizations_url": "https://api.github.com/users/thorbjornwolf/orgs",
      "repos_url": "https://api.github.com/users/thorbjornwolf/repos",
      "events_url": "https://api.github.com/users/thorbjornwolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thorbjornwolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T13:19:26Z",
    "updated_at": "2016-06-10T13:19:26Z",
    "author_association": "NONE",
    "body": "That's great!\n\nA question for your answer, though: You say that `grp = pd.Categorical([1,0,1])` is \n\n> not a valid categorical as it doesn't map anything.\n\nWhat do you mean by this? The counter-example shown above has the categories given explicitly, but the first example (giving only values) should work fine, as [the categories, if not given, are assumed to be the unique values of values.](http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Categorical.html#pandas.Categorical). What am I missing?\n\n#### Small demo of codes and categories from first example\n\n```\nIn [4]: grp = pd.Categorical([1,0,1])\n\nIn [5]: grp\nOut[5]: \n[1, 0, 1]\nCategories (2, int64): [0, 1]\n\nIn [6]: grp.codes\nOut[6]: array([1, 0, 1], dtype=int8)\n\nIn [7]: grp.categories\nOut[7]: Int64Index([0, 1], dtype='int64')\n```\n\nThank you for your work!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225264079",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13420#issuecomment-225264079",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13420",
    "id": 225264079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI2NDA3OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T18:45:20Z",
    "updated_at": "2016-06-10T18:45:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "the problem in your example is that nothing maps\niow need to map the column names to groups\n\nbut you are mapping integers - I don't think we error on this but everything gets into the man group and it should return an empty frame I think\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/331911614",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13420#issuecomment-331911614",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13420",
    "id": 331911614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTkxMTYxNA==",
    "user": {
      "login": "naure",
      "id": 8718243,
      "node_id": "MDQ6VXNlcjg3MTgyNDM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8718243?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naure",
      "html_url": "https://github.com/naure",
      "followers_url": "https://api.github.com/users/naure/followers",
      "following_url": "https://api.github.com/users/naure/following{/other_user}",
      "gists_url": "https://api.github.com/users/naure/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naure/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naure/subscriptions",
      "organizations_url": "https://api.github.com/users/naure/orgs",
      "repos_url": "https://api.github.com/users/naure/repos",
      "events_url": "https://api.github.com/users/naure/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naure/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-25T15:07:51Z",
    "updated_at": "2017-09-25T15:11:57Z",
    "author_association": "NONE",
    "body": "This is in fact related to grouping by categories. Here is an example:\r\n\r\n```\r\nIn [1]: import pandas\r\n   ...: df = pandas.DataFrame({'A': [\"pos\", \"neg\", \"pos\"], 'B': [1, -1, 2]})\r\n   ...: df.A = df.A.astype(\"category\")\r\n   ...: df\r\nOut[1]:\r\n     A  B\r\n0  pos  1\r\n1  neg -1\r\n2  pos  2\r\n\r\nIn [2]: grp = df.A[1:]                      # Same indexing, different lengths\r\n\r\nIn [4]: df.groupby(grp).mean()              # Categorical + different length = bug\r\n\r\n~/Library/Python/3.6/lib/python/site-packages/pandas/core/groupby.py in _get_grouper(obj, key, axis, level, sort, mutated)\r\n   2624\r\n   2625         if is_categorical_dtype(gpr) and len(gpr) != len(obj):\r\n-> 2626             raise ValueError(\"Categorical dtype grouper must \"\r\n   2627                              \"have len(grouper) == len(data)\")\r\n   2628\r\n\r\nValueError: Categorical dtype grouper must have len(grouper) == len(data)\r\n\r\nIn [5]: df.groupby(grp.astype(str)).mean()  # Convert to string to avoid the buggy check\r\nOut[5]:\r\n     B\r\nA\r\nneg -1\r\npos  2\r\n```"
  }
]
