[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31689590",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5863#issuecomment-31689590",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5863",
    "id": 31689590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjg5NTkw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-06T21:35:28Z",
    "updated_at": "2014-01-06T21:35:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "try with master\nshould raise\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31689947",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5863#issuecomment-31689947",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5863",
    "id": 31689947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjg5OTQ3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-06T21:39:28Z",
    "updated_at": "2014-01-06T21:39:28Z",
    "author_association": "MEMBER",
    "body": "And for the reason, see here: http://pandas.pydata.org/pandas-docs/dev/gotchas.html#minimum-and-maximum-timestamps\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31692211",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5863#issuecomment-31692211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5863",
    "id": 31692211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjkyMjEx",
    "user": {
      "login": "CarstVaartjes",
      "id": 2722815,
      "node_id": "MDQ6VXNlcjI3MjI4MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2722815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarstVaartjes",
      "html_url": "https://github.com/CarstVaartjes",
      "followers_url": "https://api.github.com/users/CarstVaartjes/followers",
      "following_url": "https://api.github.com/users/CarstVaartjes/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarstVaartjes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarstVaartjes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarstVaartjes/subscriptions",
      "organizations_url": "https://api.github.com/users/CarstVaartjes/orgs",
      "repos_url": "https://api.github.com/users/CarstVaartjes/repos",
      "events_url": "https://api.github.com/users/CarstVaartjes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarstVaartjes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-06T22:03:12Z",
    "updated_at": "2014-01-06T22:04:23Z",
    "author_association": "NONE",
    "body": "Thanks, just built and installed 0.13-dev, it does not give a raise a warning or error however, but returns the series as an object (still a lot better than 0.12!). try this in master:\n\n```\ntime_ser = pd.Series([np.nan, '2013-04-08 00:00:00.000', '2013-06-04 00:00:00.000', '2013-09-06 00:00:00.000', '2013-10-02 00:00:00.000', '2013-10-03 00:00:00.000', '2013-10-30 00:00:00.000', '2013-10-31 00:00:00.000', '2013-11-30 00:00:00.000', '2013-12-02 00:00:00.000', '2013-12-17 00:00:00.000', '2013-12-31 00:00:00.000', '2014-01-15 00:00:00.000', '2014-01-31 00:00:00.000', '2014-02-15 00:00:00.000', '2014-02-28 00:00:00.000', '2014-03-15 00:00:00.000', '2014-03-31 00:00:00.000', '2014-06-15 00:00:00.000', '2014-06-30 00:00:00.000', '2099-12-31 00:00:00.000', '2999-12-31 00:00:00.000', '9990-12-31 00:00:00.000', '9999-12-31 00:00:00.000'])\npd.to_datetime(time_ser, '%Y-%m-%d %H:%M:%S.%f')[-3:]\npd.to_datetime(time_ser, '%Y-%m-%d %H:%M:%S.%f').dtype\n\ntime_ser = pd.Series([np.nan, '2013-04-08 00:00:00.000', '2013-06-04 00:00:00.000', '2013-09-06 00:00:00.000', '2013-10-02 00:00:00.000', '2013-10-03 00:00:00.000', '2013-10-30 00:00:00.000', '2013-10-31 00:00:00.000', '2013-11-30 00:00:00.000', '2013-12-02 00:00:00.000', '2013-12-17 00:00:00.000', '2013-12-31 00:00:00.000', '2014-01-15 00:00:00.000', '2014-01-31 00:00:00.000', '2014-02-15 00:00:00.000', '2014-02-28 00:00:00.000', '2014-03-15 00:00:00.000', '2014-03-31 00:00:00.000', '2014-06-15 00:00:00.000', '2014-06-30 00:00:00.000', '2099-12-31 00:00:00.000'])\npd.to_datetime(time_ser, '%Y-%m-%d %H:%M:%S.%f')\npd.to_datetime(time_ser, '%Y-%m-%d %H:%M:%S.%f').dtype\n```\n\nThe second one (without out-of-range dates) will convert, the first one will not. (@joris: I will try to do the period index/frequency solution and see if that works out, also with HDF5 writing/reading)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31692530",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5863#issuecomment-31692530",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5863",
    "id": 31692530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjkyNTMw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-06T22:06:27Z",
    "updated_at": "2014-01-06T22:06:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "sorry by default it will do that\nyou can pass errors='raise' to force it to fail\nor coerce=True to make non valid dates be NaT\n\nneither of your examples will be valid for HDF5 FYI\n\nunless you use coerce=True\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31692682",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5863#issuecomment-31692682",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5863",
    "id": 31692682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjkyNjgy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-06T22:08:09Z",
    "updated_at": "2014-01-06T22:08:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "don't pass them as Series the. it will raise I believe\non e you make it a Series it will automatically be object \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31694284",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5863#issuecomment-31694284",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5863",
    "id": 31694284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjk0Mjg0",
    "user": {
      "login": "CarstVaartjes",
      "id": 2722815,
      "node_id": "MDQ6VXNlcjI3MjI4MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2722815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarstVaartjes",
      "html_url": "https://github.com/CarstVaartjes",
      "followers_url": "https://api.github.com/users/CarstVaartjes/followers",
      "following_url": "https://api.github.com/users/CarstVaartjes/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarstVaartjes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarstVaartjes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarstVaartjes/subscriptions",
      "organizations_url": "https://api.github.com/users/CarstVaartjes/orgs",
      "repos_url": "https://api.github.com/users/CarstVaartjes/repos",
      "events_url": "https://api.github.com/users/CarstVaartjes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarstVaartjes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-06T22:27:43Z",
    "updated_at": "2014-01-06T22:27:43Z",
    "author_association": "NONE",
    "body": "with errors='raise' I indeed get a nice: pandas.tslib.OutOfBoundsDatetime: Out of bounds nanosecond timestamp: 2999-12-31 00:00:00. :)\n\n0.13 handles this nicely enough to be honest with the object return (0.12 got me rather confused) so this can be closed for me! thank you very much for your help\n\nI'll think on how to handle this for my own specific problem. The most elegant way would be to have a integer-based \"date\" class that pandas and hdf5 just see as int (but that gives issues with nans though). \nI guess i'll go a bit down a dirty route: we made something to replace all  attribute / non-numeric columns with an integer-index columns that refer to separately saved (unique) value series. Those value series sometimes get pickled anyway by HDF5 because of unicodes, but it also saves a lot of space in general as most of my data often has repeating values in the attribute columns. So I guess I will have to save dates as objects in a standard format there and then later transform them using standard python functionality when needed.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31701332",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5863#issuecomment-31701332",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5863",
    "id": 31701332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzAxMzMy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-07T00:07:58Z",
    "updated_at": "2014-01-07T00:07:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "was a slight error here in any event (the np.nan was raising when passed with a format, and a non-strng would fail)\n\nhere's the behavior (which matches current)\n\n```\nIn [1]: ts = Series([np.nan, '2013-04-08 00:00:00.000', '9999-12-31 00:00:00.000'])\n\nIn [2]: ts\nOut[2]: \n0                        NaN\n1    2013-04-08 00:00:00.000\n2    9999-12-31 00:00:00.000\ndtype: object\n\nIn [4]: pd.to_datetime(ts, format='%Y-%m-%d %H:%M:%S.%f')\nOut[4]: \n0                        NaN\n1    2013-04-08 00:00:00.000\n2    9999-12-31 00:00:00.000\ndtype: object\n\nIn [5]: pd.to_datetime(ts, format='%Y-%m-%d %H:%M:%S.%f',coerce=True)\nOut[5]: \n0                   NaT\n1   2013-04-08 00:00:00\n2                   NaT\ndtype: datetime64[ns]\n\nIn [6]: pd.to_datetime(ts, format='%Y-%m-%d %H:%M:%S.%f',errors='raise')\nOutOfBoundsDatetime: Out of bounds nanosecond timestamp: 9999-12-31 00:00:00\n```\n"
  }
]
