[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395479860",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21353#issuecomment-395479860",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21353",
    "id": 395479860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTQ3OTg2MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T16:17:30Z",
    "updated_at": "2018-06-07T16:17:48Z",
    "author_association": "MEMBER",
    "body": "@kuraga : Thanks for the updated issue!\r\n\r\ncc @jreback @jorisvandenbossche "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/396915220",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21353#issuecomment-396915220",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21353",
    "id": 396915220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjkxNTIyMA==",
    "user": {
      "login": "kuraga",
      "id": 1063219,
      "node_id": "MDQ6VXNlcjEwNjMyMTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1063219?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kuraga",
      "html_url": "https://github.com/kuraga",
      "followers_url": "https://api.github.com/users/kuraga/followers",
      "following_url": "https://api.github.com/users/kuraga/following{/other_user}",
      "gists_url": "https://api.github.com/users/kuraga/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kuraga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kuraga/subscriptions",
      "organizations_url": "https://api.github.com/users/kuraga/orgs",
      "repos_url": "https://api.github.com/users/kuraga/repos",
      "events_url": "https://api.github.com/users/kuraga/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kuraga/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T12:10:43Z",
    "updated_at": "2018-06-13T13:49:18Z",
    "author_association": "NONE",
    "body": "Seems like it's not `pd.read_csv` issue only...\r\n\r\n![memory_leak_2](https://user-images.githubusercontent.com/1063219/41355248-b485e422-6f29-11e8-9ffc-30867944e4a6.png)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397051617",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21353#issuecomment-397051617",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21353",
    "id": 397051617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzA1MTYxNw==",
    "user": {
      "login": "nynorbert",
      "id": 12208310,
      "node_id": "MDQ6VXNlcjEyMjA4MzEw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12208310?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nynorbert",
      "html_url": "https://github.com/nynorbert",
      "followers_url": "https://api.github.com/users/nynorbert/followers",
      "following_url": "https://api.github.com/users/nynorbert/following{/other_user}",
      "gists_url": "https://api.github.com/users/nynorbert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nynorbert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nynorbert/subscriptions",
      "organizations_url": "https://api.github.com/users/nynorbert/orgs",
      "repos_url": "https://api.github.com/users/nynorbert/repos",
      "events_url": "https://api.github.com/users/nynorbert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nynorbert/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T19:08:08Z",
    "updated_at": "2018-06-13T19:14:38Z",
    "author_association": "NONE",
    "body": "I have a similiar issue. I have tried to debug it with memory_profiler but I don't see the source of the leak.\r\nThe output of the profiler:\r\n\r\n```\r\n Line #    Mem usage    Increment   Line Contents\r\n ================================================\r\n    187    261.3 MiB      0.0 MiB        if \"history\" in self.watch_list:\r\n    188    491.9 MiB    230.6 MiB            self.history = pd.read_csv(self.path + '/' + self.history_files[self.current][1], delimiter=';', header=None)\r\n    189    491.9 MiB      0.0 MiB            self.history_group = self.history.groupby([0])\r\n```\r\n\r\nThis snippet of the code is inside a loop and every time it increments the memory usage. I also tried to delete the history and history_group object and calling gc.collect() manually, but nothing seems to work.\r\nIs it possible that this is some cyclic dependency between history and history_group? And if it is then why deleting both history_group and history was not solving the problem?\r\n\r\np.s: My pandas version is 0.23.1"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397069182",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21353#issuecomment-397069182",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21353",
    "id": 397069182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzA2OTE4Mg==",
    "user": {
      "login": "nynorbert",
      "id": 12208310,
      "node_id": "MDQ6VXNlcjEyMjA4MzEw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12208310?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nynorbert",
      "html_url": "https://github.com/nynorbert",
      "followers_url": "https://api.github.com/users/nynorbert/followers",
      "following_url": "https://api.github.com/users/nynorbert/following{/other_user}",
      "gists_url": "https://api.github.com/users/nynorbert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nynorbert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nynorbert/subscriptions",
      "organizations_url": "https://api.github.com/users/nynorbert/orgs",
      "repos_url": "https://api.github.com/users/nynorbert/repos",
      "events_url": "https://api.github.com/users/nynorbert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nynorbert/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T20:09:44Z",
    "updated_at": "2018-06-13T20:09:44Z",
    "author_association": "NONE",
    "body": "Sorry, I was wrong. Not the read_csv which consumes the memory rather than a drop:\r\n\r\n```\r\nLine #    Mem usage    Increment   Line Contents\r\n ================================================\r\n   265   1425.1 MiB      9.6 MiB                        self.history.drop(self.history_group.get_group(self.current_timestamp).index)\r\n```\r\nAnd I think I found out that malloc_trim solves the problem, similar to this: https://github.com/pandas-dev/pandas/issues/2659\r\n\r\n@kuraga Maybe you should try it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427870923",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21353#issuecomment-427870923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21353",
    "id": 427870923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzg3MDkyMw==",
    "user": {
      "login": "zhezherun",
      "id": 43962586,
      "node_id": "MDQ6VXNlcjQzOTYyNTg2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/43962586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhezherun",
      "html_url": "https://github.com/zhezherun",
      "followers_url": "https://api.github.com/users/zhezherun/followers",
      "following_url": "https://api.github.com/users/zhezherun/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhezherun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhezherun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhezherun/subscriptions",
      "organizations_url": "https://api.github.com/users/zhezherun/orgs",
      "repos_url": "https://api.github.com/users/zhezherun/repos",
      "events_url": "https://api.github.com/users/zhezherun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhezherun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-08T15:06:56Z",
    "updated_at": "2018-10-08T15:06:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I also noticed a memory leak in `read_csv` and ran it through valgrind, which said that the result of the `kset_from_list` function was never freed. I was able to fix this leak locally by patching parsers.pyx and rebuilding pandas.\r\n\r\n@gfyoung, could you please review the patch below? It might also help with the leak discussed here, although I am not sure if it is the same leak or not. The patch\r\n- Moves the allocation of `na_hashset` further down, closer to where it is used. Otherwise it will not be freed if `continue` is executed,\r\n- Makes sure that `na_hashset` is deleted if there is an exception,\r\n- Also cleans up the allocation inside `kset_from_list` before raising an exception.\r\n\r\n```diff\r\n--- parsers.pyx\t2018-08-01 19:57:16.000000000 +0100\r\n+++ parsers.pyx\t2018-10-08 15:25:32.124526087 +0100\r\n@@ -1054,18 +1054,6 @@\r\n \r\n             conv = self._get_converter(i, name)\r\n \r\n-            # XXX\r\n-            na_flist = set()\r\n-            if self.na_filter:\r\n-                na_list, na_flist = self._get_na_list(i, name)\r\n-                if na_list is None:\r\n-                    na_filter = 0\r\n-                else:\r\n-                    na_filter = 1\r\n-                    na_hashset = kset_from_list(na_list)\r\n-            else:\r\n-                na_filter = 0\r\n-\r\n             col_dtype = None\r\n             if self.dtype is not None:\r\n                 if isinstance(self.dtype, dict):\r\n@@ -1090,13 +1078,26 @@\r\n                                               self.c_encoding)\r\n                 continue\r\n \r\n-            # Should return as the desired dtype (inferred or specified)\r\n-            col_res, na_count = self._convert_tokens(\r\n-                i, start, end, name, na_filter, na_hashset,\r\n-                na_flist, col_dtype)\r\n+            # XXX\r\n+            na_flist = set()\r\n+            if self.na_filter:\r\n+                na_list, na_flist = self._get_na_list(i, name)\r\n+                if na_list is None:\r\n+                    na_filter = 0\r\n+                else:\r\n+                    na_filter = 1\r\n+                    na_hashset = kset_from_list(na_list)\r\n+            else:\r\n+                na_filter = 0\r\n \r\n-            if na_filter:\r\n-                self._free_na_set(na_hashset)\r\n+            try:\r\n+                # Should return as the desired dtype (inferred or specified)\r\n+                col_res, na_count = self._convert_tokens(\r\n+                    i, start, end, name, na_filter, na_hashset,\r\n+                    na_flist, col_dtype)\r\n+            finally:\r\n+                if na_filter:\r\n+                    self._free_na_set(na_hashset)\r\n \r\n             if upcast_na and na_count > 0:\r\n                 col_res = _maybe_upcast(col_res)\r\n@@ -2043,6 +2044,7 @@\r\n \r\n         # None creeps in sometimes, which isn't possible here\r\n         if not PyBytes_Check(val):\r\n+            kh_destroy_str(table)\r\n             raise ValueError('Must be all encoded bytes')\r\n \r\n         k = kh_put_str(table, PyBytes_AsString(val), &ret)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427885897",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21353#issuecomment-427885897",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21353",
    "id": 427885897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzg4NTg5Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-08T15:50:44Z",
    "updated_at": "2018-10-08T15:50:44Z",
    "author_association": "MEMBER",
    "body": "@zhezherun : That's a good catch!  Create a PR, and we can review."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/432178663",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21353#issuecomment-432178663",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21353",
    "id": 432178663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjE3ODY2Mw==",
    "user": {
      "login": "kuraga",
      "id": 1063219,
      "node_id": "MDQ6VXNlcjEwNjMyMTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1063219?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kuraga",
      "html_url": "https://github.com/kuraga",
      "followers_url": "https://api.github.com/users/kuraga/followers",
      "following_url": "https://api.github.com/users/kuraga/following{/other_user}",
      "gists_url": "https://api.github.com/users/kuraga/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kuraga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kuraga/subscriptions",
      "organizations_url": "https://api.github.com/users/kuraga/orgs",
      "repos_url": "https://api.github.com/users/kuraga/repos",
      "events_url": "https://api.github.com/users/kuraga/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kuraga/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T09:50:13Z",
    "updated_at": "2018-10-23T09:50:13Z",
    "author_association": "NONE",
    "body": "Trying to patch is cool but fear that https://github.com/pandas-dev/pandas/issues/2659#issuecomment-15039241..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439877667",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21353#issuecomment-439877667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21353",
    "id": 439877667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTg3NzY2Nw==",
    "user": {
      "login": "kuraga",
      "id": 1063219,
      "node_id": "MDQ6VXNlcjEwNjMyMTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1063219?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kuraga",
      "html_url": "https://github.com/kuraga",
      "followers_url": "https://api.github.com/users/kuraga/followers",
      "following_url": "https://api.github.com/users/kuraga/following{/other_user}",
      "gists_url": "https://api.github.com/users/kuraga/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kuraga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kuraga/subscriptions",
      "organizations_url": "https://api.github.com/users/kuraga/orgs",
      "repos_url": "https://api.github.com/users/kuraga/repos",
      "events_url": "https://api.github.com/users/kuraga/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kuraga/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-19T12:31:54Z",
    "updated_at": "2018-11-19T12:31:54Z",
    "author_association": "NONE",
    "body": "@zhezherun , @TomAugspurger , thanks very much!\r\n\r\nBut could you, please, describe the connection with @nynorbert 's [observation](https://github.com/pandas-dev/pandas/issues/21353#issuecomment-397069182):\r\n\r\n> And I think I found out that malloc_trim solves the problem, similar to this: #2659\r\n\r\nSo, we had memory leak in Pandas in addition to glibc's feature to not trim after `free`?\r\n\r\nThanks."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439879585",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21353#issuecomment-439879585",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21353",
    "id": 439879585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTg3OTU4NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-19T12:39:40Z",
    "updated_at": "2018-11-19T12:39:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't know C, so no. Perhaps @nynorbert can clarify."
  }
]
