[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321990423",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-321990423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 321990423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTk5MDQyMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-12T16:12:11Z",
    "updated_at": "2017-08-12T16:12:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think coverage is setup up to mark this. I suppose it could be added, though generally codecov is pretty poor."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321994415",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-321994415",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 321994415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTk5NDQxNQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-12T17:23:11Z",
    "updated_at": "2017-08-12T17:23:11Z",
    "author_association": "MEMBER",
    "body": "I'm vaguely aware of long-term plans to overhaul things in pandas2.  Are there medium-term plans for `_libs`?  In particular, I'd be interested in:\r\n\r\n- Implementing test coverage\r\n- Identifying and removing unused code (e.g. I think offsets.pyx)\r\n- Making it more accessible to those of us are only comfortable with python (more `import`, less `include` and `extern`)\r\n- Avoiding `from xyz import *`\r\n- Splitting up 5k line modules"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321994685",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-321994685",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 321994685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTk5NDY4NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-12T17:27:40Z",
    "updated_at": "2017-08-12T17:27:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbrockmendel there is an issue for removing ``offsets.pyx`` already\r\nif you want to propose a change pls do so before actually implementing it. \r\n\r\n- Splitting up 5k line modules, not sure we have any of those (the ones that are are all templated code and auto-generated).\r\n- ``from xyz import *`` is pretty standard in cython, but sure\r\n- Making it more accessible to those of us are only comfortable with python (more import, less include and extern), well this is cython, so this is not worth doing at all."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322019495",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-322019495",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 322019495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjAxOTQ5NQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-13T03:27:01Z",
    "updated_at": "2017-08-13T03:27:01Z",
    "author_association": "MEMBER",
    "body": "> Splitting up 5k line modules, not sure we have any of those\r\n\r\nYou're right, looks like `tslib` is the only one.  It clocks in at 5740.  `lib` gets close if you count the `include`d files.\r\n\r\n> from xyz import * is pretty standard in cython, but sure\r\n\r\nThis combined with `include` makes it really tough to figure out where names come from (especially when `*` is imported from more than one place).  A little bit of verbosity in these imports will make this a lot more accessible to newcomers (assuming that's desired).\r\n\r\n\r\n> Making it more accessible to those of us are only comfortable with python (more import, less include and extern), well this is cython, so this is not worth doing at all.\r\n\r\nTo be clear, I'm not suggesting de-cythoning anything.  Just refactoring enough that modules can be imported independently (a comment in _libs/\\_\\_init\\_\\_.py suggests this desirable at some point).  At is it, a bunch of these pyx files import `tslib` in many cases just to get at `NaT`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322057854",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-322057854",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 322057854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjA1Nzg1NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-13T18:16:08Z",
    "updated_at": "2017-08-13T18:16:08Z",
    "author_association": "MEMBER",
    "body": "Ref: #11214\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322932822",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-322932822",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 322932822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjkzMjgyMg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T00:07:43Z",
    "updated_at": "2017-08-17T00:15:11Z",
    "author_association": "MEMBER",
    "body": "For kicks I tried implementing `datetime_helper.total_seconds` in native cython and was surprised that  it was appreciably faster than the existing version.  Are these measurements misleading somehow?  Is the C version preferred for some other reason?\r\n\r\nUpdate: a comment in the C version says `// Python 2.6 compat`.  Is that relevant?\r\n\r\n```\r\ncdef extern from \"datetime_helper.h\":\r\n    double total_seconds(object)\r\n\r\nfrom numpy cimport float64_t\r\ncpdef float64_t ptotal_seconds(object obj):\r\n    return total_seconds(obj)\r\n\r\ncpdef float64_t total_seconds2(object td):\r\n    cdef int microseconds, seconds, days, days_in_seconds\r\n\r\n    microseconds = getattr(td, \"microseconds\", 0)\r\n    seconds = getattr(td, \"seconds\", 0)\r\n    days = getattr(td, \"days\", 0)\r\n    days_in_seconds = days * 24 * 3600;\r\n    return (microseconds + (seconds + days_in_seconds) * 1000000.0) / 1000000.0\r\n\r\nimport timeit\r\nfrom datetime import timedelta\r\ndt = timedelta(4)\r\n\r\ndef func0():\r\n    return total_seconds(dt)\r\n\r\ndef func1():\r\n    return ptotal_seconds(dt)\r\n\r\ndef func2():\r\n    return total_seconds2(dt)\r\n\r\ntimes = {}\r\ntimes['total_seconds'] = timeit.timeit(func0)\r\ntimes['ptotal_seconds'] = timeit.timeit(func1)\r\ntimes['total_seconds2'] = timeit.timeit(func2)\r\n```\r\n\r\nResults:\r\n```\r\n{'ptotal_seconds': 0.21397995948791504,\r\n 'total_seconds': 0.21534299850463867,\r\n 'total_seconds2': 0.07924604415893555}\r\n```\r\n\r\nI get roughly the same results if I run a loop inside the file instead of calling `timeit.timeit`.  The fact that the wrapped `ptotal_seconds` is slightly faster than the not-wrapped `total_seconds` seems fishy."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322979274",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-322979274",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 322979274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjk3OTI3NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T06:18:34Z",
    "updated_at": "2017-08-17T06:18:34Z",
    "author_association": "MEMBER",
    "body": "It looks like `pandas_datetime_struct` is [identical](https://github.com/numpy/numpy/blob/master/numpy/core/include/numpy/ndarraytypes.h#L754) to `npy_datetimestruct`.  Is there a compelling reason to have a separate implementation?\r\n\r\nIt also looks like every single use of `pandas_datetimestruct_to_datetime` uses `PANDAS_FR_ns`.  For `pandas_datetime_to_datetimestruct` there is one use in `_get_datetime64_nanos` that does not use `PANDAS_FR_ns`.  Are the general cases used somewhere else I'm not seeing?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/323026374",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-323026374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 323026374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzAyNjM3NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T10:05:49Z",
    "updated_at": "2017-08-17T10:05:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "pandas was originally written before cython was really that compat so a fair amount of c was written. not sue why the perf differences are there, but usually things like this come down to certain ways given type conversions and some not. find a real world benchmark where this actually matters. \r\n\r\n```\r\nIn [2]: import datetime\r\n\r\nIn [3]: dt = datetime.timedelta(4)\r\n\r\nIn [4]: dt.total_seconds()\r\nOut[4]: 345600.0\r\n\r\nIn [5]: %timeit dt.total_seconds()\r\n182 ns +- 2.61 ns per loop (mean +- std. dev. of 7 runs, 10000000 loops each)\r\n\r\nIn [6]: from pandas._libs.tslib import tot_seconds\r\n\r\nIn [7]: %timeit tot_seconds(dt)\r\n381 ns +- 3.46 ns per loop (mean +- std. dev. of 7 runs, 1000000 loops each)\r\n```\r\nthis makes almost no difference."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/323028228",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-323028228",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 323028228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzAyODIyOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T10:14:19Z",
    "updated_at": "2017-08-17T10:14:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "we don't really need an explicit issue for this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/323131251",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-323131251",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 323131251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzEzMTI1MQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T16:52:28Z",
    "updated_at": "2017-08-17T16:52:28Z",
    "author_association": "MEMBER",
    "body": "> we don't really need an explicit issue for this.\r\n\r\nI'll keep posting not-quite-issue questions here as they come up unless you point me somewhere else."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/323132705",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-323132705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 323132705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzEzMjcwNQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T16:58:10Z",
    "updated_at": "2017-08-17T16:58:10Z",
    "author_association": "MEMBER",
    "body": "Earlier I noted that `pandas_datetime_struct` appeared identical to `npy_datetimestruct`.  This makes sense now that I look at the comment at the top of the file saying it was derived from Numpy 1.7.  Is there some point at which we can just use the numpy versions?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/323151428",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-323151428",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 323151428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzE1MTQyOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T18:11:21Z",
    "updated_at": "2017-08-17T18:11:21Z",
    "author_association": "MEMBER",
    "body": "> >  we don't really need an explicit issue for this.\r\n\r\n> I'll keep posting not-quite-issue questions here as they come up unless you point me somewhere else.\r\n\r\nLet's either keep this issue open, or either use gitter for those questions.\r\n\r\nFor me keeping it in this issue is fine (it is somewhat easier to keep track off than a gitter conversation), but let's avoid opening new issues for every question.\r\n\r\n@jbrockmendel I can't answer your question regarding the datetime struct (I am not familiar with this part of the code). But, while digging into the the codebase, you are always welcome to better document what you are finding out! (to make it easier to grasp it for the next person)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/323505687",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-323505687",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 323505687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzUwNTY4Nw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-19T07:01:12Z",
    "updated_at": "2017-08-19T07:01:12Z",
    "author_association": "MEMBER",
    "body": "@shoyer I'm trying to figure out how to \"import\" functions from https://github.com/numpy/numpy/blob/master/numpy/core/src/multiarray/datetime_strings.h into _libs/src/ujson/python/objToJSON.c with no luck so far.  You were the last person to edit the np file, so I'm betting you're familiar with it.  What needs to be \\#included (or [verb]ed) to get those functions from the numpy version instead of from the copy in pandas?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/324155565",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-324155565",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 324155565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDE1NTU2NQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-22T21:22:32Z",
    "updated_at": "2017-08-22T21:22:32Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel I think these functions actually intentionally not exported as part of NumPy's C-API -- notice the `NPY_NO_EXPORT` macro. This could probably be reconsidered given that datetime64 is no longer as experimental as it once was, but would need to be brought up on the NumPy mailing list."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/324767821",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-324767821",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 324767821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDc2NzgyMQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-24T21:53:17Z",
    "updated_at": "2017-08-24T22:46:29Z",
    "author_association": "MEMBER",
    "body": "`Timestamp` subclasses `datetime.datetime`, but then overrides each of <s>`year`, `month`, ..., `second`</s>microsecond in such a way as to require re-computing <s>these attributes</s> this attribute on each access.  This is the reason why the performance [here](https://github.com/pandas-dev/pandas/pull/17297#pullrequestreview-57686247) behaves unexpectedly.\r\n\r\nDoes this do something helpful like lower the memory footprint?  The implementation of `_Timestamp` is explicitly documented as being a PITA, so it wouldn't be a huge surprise if the answer was \"because that's the only/easiest way to make it Just Work\"."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/324769706",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-324769706",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 324769706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDc2OTcwNg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-24T22:02:20Z",
    "updated_at": "2017-08-24T22:02:20Z",
    "author_association": "MEMBER",
    "body": "Three questions regarding modernization in `tslib`.\r\n\r\nFrom `tslib.convert_to_timedelta64` [docstring](https://github.com/pandas-dev/pandas/blob/master/pandas/_libs/tslib.pyx#L3554):\r\n\r\n```\r\n    # kludgy here until we have a timedelta scalar\r\n    # handle the numpy < 1.7 case\r\n```\r\n\r\nI think <1.7 is no longer supported.  Is that accurate, and if so, can some kludge be removed?\r\n\r\nFrom near the top of the [module](https://github.com/pandas-dev/pandas/blob/96f92eb1c696723b6465fdc273dc8406201c606a/pandas/_libs/tslib.pyx#L105):\r\n\r\n```\r\n\r\n# in numpy 1.7, will prob need the following:\r\n# numpy_pydatetime_import\r\n```\r\n\r\nIs this a going concern?\r\n\r\nLast, from `convert_to_tsobject` in the case [where](https://github.com/pandas-dev/pandas/blob/96f92eb1c696723b6465fdc273dc8406201c606a/pandas/_libs/tslib.pyx#L1492) input is a `datetime` (or subclass, including `Timestamp`):\r\n\r\n```\r\n        if tz is not None:\r\n            # sort of a temporary hack\r\n            if ts.tzinfo is not None:\r\n                if (hasattr(tz, 'normalize') and\r\n                    hasattr(ts.tzinfo, '_utcoffset')):\r\n```\r\n\r\nIt looks like this \"temporary hack\" has been in place for at least 5 years (still trying to figure out how to recurse with `git blame`).  Any idea what the longer-term plan is/was?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/324887443",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-324887443",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 324887443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDg4NzQ0Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-25T10:58:30Z",
    "updated_at": "2017-08-25T10:58:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think <1.7 is no longer supported. Is that accurate, and if so, can some kludge be removed?\r\n\r\nsounds ok\r\n\r\n> Is this a going concern?\r\n\r\nwell you can remove and see\r\n\r\n> It looks like this \"temporary hack\" has been in place for at least 5 years (still trying to figure out how to recurse with git blame). Any idea what the longer-term plan is/was?\r\n\r\nthis is related to how the tz objects (``dateutil/pytz``). We still support somewhat older versions of these (that have these methods/properties). You can certainly check whether things pass when taking this out.\r\n\r\nAs always, do self-contained / related changes in a single PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/324960646",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-324960646",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 324960646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDk2MDY0Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-25T15:50:52Z",
    "updated_at": "2017-08-25T15:50:52Z",
    "author_association": "MEMBER",
    "body": ">> I think <1.7 is no longer supported. Is that accurate, and if so, can some kludge be removed?\r\n\r\n> sounds ok\r\n\r\nI should have been more clear: what is the kludge?  It isn't obvious what the comment is referring to."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/324963653",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-324963653",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 324963653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDk2MzY1Mw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-25T16:01:16Z",
    "updated_at": "2017-08-25T16:01:16Z",
    "author_association": "MEMBER",
    "body": "_libs/src/util.pxd gets a function `is_datetime64_object` that it gets from numpy_helper.h.  In numpy_helper it is defined as:\r\n\r\n```\r\nPANDAS_INLINE int is_datetime64_object(PyObject* obj) {\r\n    return PyArray_IsScalar(obj, Datetime);\r\n}\r\n```\r\n\r\nI have been unable to figure out how `Datetime` gets into the namespace or what it is.  Is this function equivalent to `isinstance(obj, np.datetime64)`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/325048715",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17234#issuecomment-325048715",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17234",
    "id": 325048715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTA0ODcxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-25T22:33:46Z",
    "updated_at": "2017-08-25T22:33:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes these are equivalent but you need to use the c routines"
  }
]
