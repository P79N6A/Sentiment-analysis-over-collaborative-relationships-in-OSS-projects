[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/148501161",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11337#issuecomment-148501161",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11337",
    "id": 148501161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODUwMTE2MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-15T19:45:20Z",
    "updated_at": "2015-10-15T19:45:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you share an example? I wasn't able to reproduce:\n\n```\nIn [4]: df = pd.DataFrame({'A': [1, 2, 3], 'B': ['a', 'b', 'c']}, index=[1, 0, 2])\n\nIn [5]: df\nOut[5]:\n   A  B\n1  1  a\n0  2  b\n2  3  c\n\nIn [6]: df.sort_index(inplace=True)  # no warning\n```\n\nI'm guessing your `rows` is a slice from another DataFrame?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/148503611",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11337#issuecomment-148503611",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11337",
    "id": 148503611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODUwMzYxMQ==",
    "user": {
      "login": "phaethon",
      "id": 1088890,
      "node_id": "MDQ6VXNlcjEwODg4OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1088890?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phaethon",
      "html_url": "https://github.com/phaethon",
      "followers_url": "https://api.github.com/users/phaethon/followers",
      "following_url": "https://api.github.com/users/phaethon/following{/other_user}",
      "gists_url": "https://api.github.com/users/phaethon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phaethon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phaethon/subscriptions",
      "organizations_url": "https://api.github.com/users/phaethon/orgs",
      "repos_url": "https://api.github.com/users/phaethon/repos",
      "events_url": "https://api.github.com/users/phaethon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phaethon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-15T19:56:19Z",
    "updated_at": "2015-10-15T19:56:33Z",
    "author_association": "NONE",
    "body": "`rows` is created by filtering from a different DataFrame. This is a more complete example. `sort_index(inplace = True)` works for rows1 without warning, but produces warning for rows2.\n\n```\ninitial_rows = pd.DataFrame([{'a': 1, 'b': 'x'}, {'a': 2, 'b': 'c'}])\nrows = rows[initial_rows['b'] == 'x']\nrows.sort_index(inplace = True)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/148503892",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11337#issuecomment-148503892",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11337",
    "id": 148503892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODUwMzg5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-15T19:57:41Z",
    "updated_at": "2015-10-15T19:57:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@phaethon this of course won't work, you cannot sort inplace on something ELSE which is filtered. Furthermore this is not a good patten. never use inplace\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/148506317",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11337#issuecomment-148506317",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11337",
    "id": 148506317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODUwNjMxNw==",
    "user": {
      "login": "phaethon",
      "id": 1088890,
      "node_id": "MDQ6VXNlcjEwODg4OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1088890?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phaethon",
      "html_url": "https://github.com/phaethon",
      "followers_url": "https://api.github.com/users/phaethon/followers",
      "following_url": "https://api.github.com/users/phaethon/following{/other_user}",
      "gists_url": "https://api.github.com/users/phaethon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phaethon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phaethon/subscriptions",
      "organizations_url": "https://api.github.com/users/phaethon/orgs",
      "repos_url": "https://api.github.com/users/phaethon/repos",
      "events_url": "https://api.github.com/users/phaethon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phaethon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-15T20:06:00Z",
    "updated_at": "2015-10-15T20:06:00Z",
    "author_association": "NONE",
    "body": "In my code I actually update index after filtering with a function of one of the columns:\n\n```\ninitial_rows = pd.DataFrame([{'a': 1, 'b': 'x'}, {'a': 2, 'b': 'c'}])\nrows = rows[initial_rows['b'] == 'x']\nrows.index = function_of_a(rows['a'])\nrows.sort_index(inplace = True)\n```\n\nWhat would be suggested pattern of usage in this case?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/148506620",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11337#issuecomment-148506620",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11337",
    "id": 148506620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODUwNjYyMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-15T20:07:45Z",
    "updated_at": "2015-10-15T20:07:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "`rows = rows.sort_index()` will work. Using `inplace` is tricky since you (the user) _has_ to be sure it's not a view. It's not always clear when reading the code whether this is the case. And using `inplace=True` usually won't have any performance benefits, so it's just easier to always reassign `rows = rows.sort_index()`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/148508120",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11337#issuecomment-148508120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11337",
    "id": 148508120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODUwODEyMA==",
    "user": {
      "login": "phaethon",
      "id": 1088890,
      "node_id": "MDQ6VXNlcjEwODg4OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1088890?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phaethon",
      "html_url": "https://github.com/phaethon",
      "followers_url": "https://api.github.com/users/phaethon/followers",
      "following_url": "https://api.github.com/users/phaethon/following{/other_user}",
      "gists_url": "https://api.github.com/users/phaethon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phaethon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phaethon/subscriptions",
      "organizations_url": "https://api.github.com/users/phaethon/orgs",
      "repos_url": "https://api.github.com/users/phaethon/repos",
      "events_url": "https://api.github.com/users/phaethon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phaethon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-15T20:15:07Z",
    "updated_at": "2015-10-15T20:15:07Z",
    "author_association": "NONE",
    "body": "Actually `rows.sort_index(inplace = True)` works, too. Just displaying annoying warning.\nIf there was no such option `inplace` mentioned in documentation, I would have used `rows = rows.sort_index()`, but I was expecting some performance benefit. Adding additional comment on this in documentation certainly would help. Or removing inplace option if it brings no benefits.\n"
  }
]
