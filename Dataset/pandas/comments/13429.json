[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/226976067",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13429#issuecomment-226976067",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13429",
    "id": 226976067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjk3NjA2Nw==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-19T02:42:01Z",
    "updated_at": "2016-06-19T02:42:01Z",
    "author_association": "MEMBER",
    "body": "During the fix, found partial string selection behaves strangely if `PeriodIndex` is non-monotonic\n\n```\n# monotonic\ns = pd.Series([1, 2, 3], index=pd.PeriodIndex(['2011-01-01', '2011-01-02', '2011-01-03'], freq='D'))\ns['2011-01']\n# 2011-01-01    1\n# 2011-01-02    2\n# 2011-01-03    3\n# Freq: D, dtype: int64\n\n# non-monotonic\ns = pd.Series([1, 2, 3], index=pd.PeriodIndex(['2011-03-01', '2011-01-01', '2011-01-01'], freq='D'))\n\n# NG\ns['2011-01']\n# KeyError: '2011-01'\n\n# but it works on yearly selection\ns['2011']\n# 2011-03-01    1\n# 2011-01-01    2\n# 2011-01-01    3\n# Freq: D, dtype: int64\n```\n\n`DatetimeIndex` works as expected.\n\n```\ns = pd.Series([1, 2, 3], index=pd.DatetimeIndex(['2011-03-01', '2011-01-01', '2011-01-01']))\ns['2011-01']\n# 2011-01-01    2\n# 2011-01-01    3\n# dtype: int64\n```\n\n`PeriodIndex` has an explicit check whether the index is monotonic, but I think it should be supported as the same as `DatetimeIndex`.\n- https://github.com/pydata/pandas/blob/master/pandas/tseries/period.py#L797\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/231675141",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13429#issuecomment-231675141",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13429",
    "id": 231675141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTY3NTE0MQ==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-11T08:43:22Z",
    "updated_at": "2016-07-11T08:43:22Z",
    "author_association": "MEMBER",
    "body": "Would like to clarify 2 points comparing with `DatetimeIndex`.\n\n## 1. should support non-monotonic?\n\nCurrently the logic seems to assume the index is monotonic. The behavior is erroneous:\n\n```\nps = pd.Series([1, 2, 3], index=pd.PeriodIndex(['2011-01-01', '2011-03-01', '2011-02-01'], freq='D'))\nps['2011-03']\n#     650                     if ord2 < vals[0] or ord1 > vals[-1]:\n# --> 651                         raise KeyError(key)\n#     652 \n#     653                     pos = np.searchsorted(self.values, [ord1, ord2])\n# \n# KeyError: '2011-03'\n```\n\nI think adding non-monotonic path is possible, but `DatetimeIndex` says that supporting non-monotonic is derived from historical reason.\n- https://github.com/pydata/pandas/blob/master/pandas/tseries/index.py#L1532\n\nThus, would like to decide either:\n- `PeriodIndex` should support non-monotonic partial string indexing\n- Or, deprecate `DatetimeIndex` non-monotonic partial string indexing\n\n## 2. should string selection always regarded as partial?\n\n`DatetimeIndex` always returns `Series/DataFrame` (not scalar) via string selection.\n\n```\nds = pd.Series([1, 2, 3], index=pd.DatetimeIndex(['2011-01-01', '2011-03-01', '2011-02-01']))\nds['2011-01-01']\n# 2011-01-01    1\n# dtype: int64\n```\n\nBut `PeriodIndex` may return scalar.\n\n```\nps['2011-01-01']\n# 1\n```\n\nThus, would like to decide either:\n- `PeriodIndex` may return scalar if input string has the same freq as `PI`.\n- Or, always returns `Series/DataFrame` (not scalar)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/231882009",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13429#issuecomment-231882009",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13429",
    "id": 231882009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTg4MjAwOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-11T22:14:19Z",
    "updated_at": "2016-07-11T22:14:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "1) I think could support non-monotonic indexing on a `PeriodIndex` (its just a mask), ideally unify these between DTI and PI.\n\n2) I think match DTI is fine. by-definition partial string indexing is not exact, you need to specify an `Timestamp`/`Period` to achieve exactness.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/231900918",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13429#issuecomment-231900918",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13429",
    "id": 231900918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTkwMDkxOA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-12T00:00:42Z",
    "updated_at": "2016-07-12T00:00:42Z",
    "author_association": "MEMBER",
    "body": "Thx, will submit a PR.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239908765",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13429#issuecomment-239908765",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13429",
    "id": 239908765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTkwODc2NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-15T19:50:33Z",
    "updated_at": "2016-08-15T19:50:33Z",
    "author_association": "MEMBER",
    "body": "@sinhrks I bumped this to next relaese (as it is not a blocker I think), but of course that does not mean a PR can still be merged if you have one :-)\n"
  }
]
