[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390451941",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21136#issuecomment-390451941",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21136",
    "id": 390451941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDQ1MTk0MQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-20T01:54:38Z",
    "updated_at": "2018-05-20T01:54:38Z",
    "author_association": "MEMBER",
    "body": "Thanks for the report - investigation and PRs welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391052072",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21136#issuecomment-391052072",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21136",
    "id": 391052072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTA1MjA3Mg==",
    "user": {
      "login": "bschreck",
      "id": 3237925,
      "node_id": "MDQ6VXNlcjMyMzc5MjU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3237925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bschreck",
      "html_url": "https://github.com/bschreck",
      "followers_url": "https://api.github.com/users/bschreck/followers",
      "following_url": "https://api.github.com/users/bschreck/following{/other_user}",
      "gists_url": "https://api.github.com/users/bschreck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bschreck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bschreck/subscriptions",
      "organizations_url": "https://api.github.com/users/bschreck/orgs",
      "repos_url": "https://api.github.com/users/bschreck/repos",
      "events_url": "https://api.github.com/users/bschreck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bschreck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-22T16:19:01Z",
    "updated_at": "2018-05-22T16:32:03Z",
    "author_association": "NONE",
    "body": "It has to do with sorting via MultiIndex vs. normal Index. Internally, MultiIndexes are already sorted upon initialization. Each level gets a corresponding pd.Categorical array, which is initialized with ordered=True. Later on, the sorting is just done by looking at the already ordered categories. So the fix would either be to make pd.Categorical() fail for mixed dtype when ordered=True, or to do some sort of check when initializing MultiIndex to not call ordered=True when creating these Categorical arrays (and then keep track of the fact that its not ordered).\r\n\r\nI don't know enough about Pandas internals to know which route is better.\r\n\r\nIn the past, it looks like an explicit argsort() call was made, but now it just looks at the already sorted categories."
  }
]
