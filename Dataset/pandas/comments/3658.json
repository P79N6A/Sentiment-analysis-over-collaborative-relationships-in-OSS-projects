[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18183786",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3658#issuecomment-18183786",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3658",
    "id": 18183786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTgzNzg2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-21T01:18:56Z",
    "updated_at": "2013-05-21T01:19:27Z",
    "author_association": "MEMBER",
    "body": "what other possible cases can you think of where the keys cannot be sorted (other than the trivial \"object has no `__lt__` and friends\" and are not the same object?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18185964",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3658#issuecomment-18185964",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3658",
    "id": 18185964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTg1OTY0",
    "user": {
      "login": "BrenBarn",
      "id": 1439047,
      "node_id": "MDQ6VXNlcjE0MzkwNDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1439047?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BrenBarn",
      "html_url": "https://github.com/BrenBarn",
      "followers_url": "https://api.github.com/users/BrenBarn/followers",
      "following_url": "https://api.github.com/users/BrenBarn/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrenBarn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BrenBarn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrenBarn/subscriptions",
      "organizations_url": "https://api.github.com/users/BrenBarn/orgs",
      "repos_url": "https://api.github.com/users/BrenBarn/repos",
      "events_url": "https://api.github.com/users/BrenBarn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BrenBarn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-21T02:41:41Z",
    "updated_at": "2013-05-21T02:43:11Z",
    "author_association": "NONE",
    "body": "The case I actually want to use it for is a case where the keys are custom objects like you describe.  In that situation, I encountered odd behavior where pandas thought that the array was monotonic but it actually wasn't (because the object-id-based ordering wasn't transitive).  The way I got around this was by having my class raise an exception from `__lt__`.  There may be another way around that, but I'd have to delve into it a bit more to make a reproducible test case.\n\nNote that using numpy.sort won't help for arbitrary unorderable objects.  It works for complex numbers because numpy converts them to its own orderable complex type.\n\nEither way, though, there should be a way to handle this.  At the very least it should be documented that Series requires its keys to be sortable.  I think it could also make sense to just wrap the sort() call in a try/except and ignore a TypeError --- that is, try to sort, but don't complain if you can't.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18186007",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3658#issuecomment-18186007",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3658",
    "id": 18186007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTg2MDA3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-21T02:43:30Z",
    "updated_at": "2013-05-21T02:43:30Z",
    "author_association": "MEMBER",
    "body": "why don't you just define a total ordering on your object?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18186029",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3658#issuecomment-18186029",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3658",
    "id": 18186029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTg2MDI5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-21T02:44:07Z",
    "updated_at": "2013-05-21T02:44:18Z",
    "author_association": "MEMBER",
    "body": "there's a nice decorator `functools.total_ordering` which does exactly that (modulo you defining two methods IIRC)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18186053",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3658#issuecomment-18186053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3658",
    "id": 18186053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTg2MDUz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-21T02:45:13Z",
    "updated_at": "2013-05-21T02:45:13Z",
    "author_association": "MEMBER",
    "body": "in any case an example would be great :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18186126",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3658#issuecomment-18186126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3658",
    "id": 18186126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTg2MTI2",
    "user": {
      "login": "BrenBarn",
      "id": 1439047,
      "node_id": "MDQ6VXNlcjE0MzkwNDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1439047?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BrenBarn",
      "html_url": "https://github.com/BrenBarn",
      "followers_url": "https://api.github.com/users/BrenBarn/followers",
      "following_url": "https://api.github.com/users/BrenBarn/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrenBarn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BrenBarn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrenBarn/subscriptions",
      "organizations_url": "https://api.github.com/users/BrenBarn/orgs",
      "repos_url": "https://api.github.com/users/BrenBarn/repos",
      "events_url": "https://api.github.com/users/BrenBarn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BrenBarn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-21T02:48:05Z",
    "updated_at": "2013-05-21T02:50:54Z",
    "author_association": "NONE",
    "body": "Because my class doesn't have a meaningful ordering relation (just like complex numbers don't).  I could define a fake one (just like numpy does for complex numbers), but that's not really any better than passing in the dict keys and values separately.\n\nThe point is that there is no reason that Series needs to sort the index on creation.  It's fine if it wants to do this to make the output look nice by default, but there should be a way to turn it off if it causes problems.\n\nA simple example would be just some kind of Point class representing points in two-dimensional space (which is, again, what complex numbers are).  There's no real definition of ordering for this.  Yes, it's possible to define a fake ordering that orders the points lexicographically or whatever, but my point is that pandas shouldn't force the user to define extra stuff on the class when pandas doesn't actually need that information for any core functionality.  There's no need to sort the index at all; if I don't ever want to sort the index myself (by explicitly calling sort), pandas shouldn't force me to make the index sortable.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18186211",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3658#issuecomment-18186211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3658",
    "id": 18186211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTg2MjEx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-21T02:51:16Z",
    "updated_at": "2013-05-21T02:51:16Z",
    "author_association": "MEMBER",
    "body": "u could submit a pr...as u can see from my travis failing it may not be as easy as just forcing an array on the keys and using `numpy.sort`...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18186327",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3658#issuecomment-18186327",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3658",
    "id": 18186327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTg2MzI3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-21T02:56:38Z",
    "updated_at": "2013-05-21T02:56:38Z",
    "author_association": "MEMBER",
    "body": "anyway i agree with you, not meaning to be pedantic\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44499806",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3658#issuecomment-44499806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3658",
    "id": 44499806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDk5ODA2",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T06:53:23Z",
    "updated_at": "2014-05-29T06:53:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "this appears to be fixed in master\n"
  }
]
