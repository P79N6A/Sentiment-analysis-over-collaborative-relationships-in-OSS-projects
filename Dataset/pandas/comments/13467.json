[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/226619016",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13467#issuecomment-226619016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13467",
    "id": 226619016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjYxOTAxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-16T21:27:30Z",
    "updated_at": "2016-06-16T21:27:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "`tslib.is_timestamp_array` looks totally out of place / is old, need to remove that and replace with routine from `src/inference.pyx` (which is where `is_timedelta_array` is defined, along with all other inference routines); these get put into `lib.pyx` at compile time.\n\nbut your result should be the same (e.g. `M8[ns]`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/226622498",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13467#issuecomment-226622498",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13467",
    "id": 226622498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjYyMjQ5OA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-16T21:42:31Z",
    "updated_at": "2016-06-16T21:42:31Z",
    "author_association": "MEMBER",
    "body": "OK. Also there is no tests to guarantee the behavior. Will submit a PR.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/226975542",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13467#issuecomment-226975542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13467",
    "id": 226975542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjk3NTU0Mg==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-19T02:21:09Z",
    "updated_at": "2016-06-19T02:21:09Z",
    "author_association": "MEMBER",
    "body": "Found there are inconsistencies depending on the order. Is it OK that all these must be datetime64?\n\n```\n# OK\npd.Index([np.nan, pd.NaT])\n# DatetimeIndex(['NaT', 'NaT'], dtype='datetime64[ns]', freq=None)\n\n# NG, must be DatetimeIndex\npd.Index([pd.NaT, np.nan])\n# TimedeltaIndex([NaT, NaT], dtype='timedelta64[ns]', freq=None)\n```\n\n```\n# OK\npd.lib.infer_dtype([np.nan, pd.NaT])\n# 'datetime64'\n\n# NG, msut be 'datetime64'\npd.lib.infer_dtype([pd.NaT, np.nan])\n# 'mixed'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/226980178",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13467#issuecomment-226980178",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13467",
    "id": 226980178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjk4MDE3OA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-19T05:19:51Z",
    "updated_at": "2016-06-19T05:19:51Z",
    "author_association": "MEMBER",
    "body": "Actually it is not simple than I initially thought. On current master, we don't distinguish datetime64/timedelta64 NaT. Thus below input is regarded as `timedelta`.\n\n```\npd.lib.infer_dtype(np.array([np.datetime64('nat'), pd.Timedelta('1 day')]))\n# 'timedelta'\n```\n\nHowever, if input is all nan/nat like, it is inferred using last element.\n\n```\npd.lib.infer_dtype(np.array([np.datetime64('nat'), np.timedelta64('nat')], dtype=object))\n# 'timedelta'\n\npd.lib.infer_dtype(np.array([np.timedelta64('nat'), np.datetime64('nat')], dtype=object))\n# 'datetime64'\n```\n\nIf we regard np.datetime/timedelta nat as the same as `pd.NaT`, the both results should be \"datetime64\". Otherwise, np.datetime/timedelta mixture should be infered as \"mixed\".\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/228306195",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13467#issuecomment-228306195",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13467",
    "id": 228306195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODMwNjE5NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T09:56:41Z",
    "updated_at": "2016-06-24T09:56:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "ahh I c. Since we have a single `pd.NaT` for both M8 and m8, I think we need to keep that all nan -> M8 if not-specified.\n"
  }
]
