[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54742864",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8188#issuecomment-54742864",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8188",
    "id": 54742864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzQyODY0",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-07T10:20:50Z",
    "updated_at": "2014-09-07T10:20:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is really something that happens because of a quirk of how the CSV module is set up (converts everything to str) vs. how excel writers are set up (tries to do the right thing by value type).  You can actually just do something like: df['myrow'] = df['myrow'].astype(str):\n\n``` python\nIn [24]: df['rating_as_dict'] = df['rating_as_dict'].astype(str)\n\nIn [25]: df\nOut[25]:\n                               titles                     genre_as_list  \\\n0                    Toy Story (1995)   [Animation, Children's, Comedy]\n1                      Jumanji (1995)  [Adventure, Children's, Fantasy]\n2             Grumpier Old Men (1995)                 [Comedy, Romance]\n3            Waiting to Exhale (1995)                   [Comedy, Drama]\n4  Father of the Bride Part II (1995)                          [Comedy]\n\n         rating_as_dict\n0  {'M': 0.6, 'F': 0.5}\n1  {'M': 0.2, 'F': 0.1}\n2  {'M': 0.3, 'F': 0.3}\n3  {'M': 0.8, 'F': 0.8}\n4  {'M': 0.6, 'F': 0.8}\n\nIn [26]: df['rating_as_dict'][0]\nOut[26]: \"{'M': 0.6, 'F': 0.5}\"\n```\n\nThere isn't really a 'correct' answer here (I think I'd personally want an error to be raised).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54769407",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8188#issuecomment-54769407",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8188",
    "id": 54769407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzY5NDA3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T01:52:38Z",
    "updated_at": "2014-09-08T01:52:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "but it wouldn't be that difficult to incorporate that - do you want to take a stab at it? (the code isn't that complicated and I believe it's all contained within `pandas/io/excel.py`, really just adding another case to the checks - you can use core's `pandas.core.common.is_list_like()` for your check\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54807637",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8188#issuecomment-54807637",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8188",
    "id": 54807637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODA3NjM3",
    "user": {
      "login": "onesandzeroes",
      "id": 1460294,
      "node_id": "MDQ6VXNlcjE0NjAyOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1460294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onesandzeroes",
      "html_url": "https://github.com/onesandzeroes",
      "followers_url": "https://api.github.com/users/onesandzeroes/followers",
      "following_url": "https://api.github.com/users/onesandzeroes/following{/other_user}",
      "gists_url": "https://api.github.com/users/onesandzeroes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onesandzeroes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onesandzeroes/subscriptions",
      "organizations_url": "https://api.github.com/users/onesandzeroes/orgs",
      "repos_url": "https://api.github.com/users/onesandzeroes/repos",
      "events_url": "https://api.github.com/users/onesandzeroes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onesandzeroes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T11:57:31Z",
    "updated_at": "2014-09-08T11:57:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can have a go at this if @MarkInLabcoat doesn't want to. My thinking is that it should be a non-default behaviour, so we'd be adding a `convert_to_str=False` default arg to `to_excel()`. Would also need to add a note about it in the `TypeError` message so people know where to look if they want to enable. \n\nDoes that sound about right @jtratner ? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54810374",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8188#issuecomment-54810374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8188",
    "id": 54810374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODEwMzc0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T12:28:06Z",
    "updated_at": "2014-09-08T12:28:06Z",
    "author_association": "MEMBER",
    "body": "Is it necessary to have a specific keyword for this? The other possibility is to leave this up to the user to do themselves `astype(str)` on the needed columns instead of something like `convert_to_str=True` if they really want to store lists or dicts with `to_excel`?\n\nBut the error message could certainly be improved.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54847092",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8188#issuecomment-54847092",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8188",
    "id": 54847092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODQ3MDky",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T16:26:48Z",
    "updated_at": "2014-09-08T16:26:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche @onesandzeroes - is there a reason why it's useful to _not_ convert to string (given that `to_csv` does it already)?  it's not a particularly large performance impact (a third if clause branch) and it just means that you can do `to_excel()` without worrying about the types in your DataFrame.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54895436",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8188#issuecomment-54895436",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8188",
    "id": 54895436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODk1NDM2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T22:12:55Z",
    "updated_at": "2014-09-08T22:12:55Z",
    "author_association": "MEMBER",
    "body": "Yes, indeed, that is also good. I just wouldn't introduce a keyword for it. But converting it to string by default seems also good. Certainly if that is also the behaviour of `to_csv`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54909282",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8188#issuecomment-54909282",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8188",
    "id": 54909282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTA5Mjgy",
    "user": {
      "login": "onesandzeroes",
      "id": 1460294,
      "node_id": "MDQ6VXNlcjE0NjAyOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1460294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onesandzeroes",
      "html_url": "https://github.com/onesandzeroes",
      "followers_url": "https://api.github.com/users/onesandzeroes/followers",
      "following_url": "https://api.github.com/users/onesandzeroes/following{/other_user}",
      "gists_url": "https://api.github.com/users/onesandzeroes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onesandzeroes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onesandzeroes/subscriptions",
      "organizations_url": "https://api.github.com/users/onesandzeroes/orgs",
      "repos_url": "https://api.github.com/users/onesandzeroes/repos",
      "events_url": "https://api.github.com/users/onesandzeroes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onesandzeroes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-09T00:50:53Z",
    "updated_at": "2014-09-09T00:50:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess I was thinking in terms of how easy it is to actually doing anything with the string-converted lists once you've got them in Excel, but now that I think about it, that's probably not a big concern. I'll start working on converting to string by default.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54922390",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8188#issuecomment-54922390",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8188",
    "id": 54922390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTIyMzkw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-09T04:17:25Z",
    "updated_at": "2014-09-09T04:17:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can do this pretty easily, all you need to do is slightly modify this function (in pandas/io/excel.py):\n\n``` python\ndef _conv_value(val):\n    # Convert numpy types to Python types for the Excel writers.\n    if com.is_integer(val):\n        val = int(val)\n    elif com.is_float(val):\n        val = float(val)\n    elif com.is_bool(val):\n        val = bool(val)\n    elif isinstance(val, Period):\n        val = \"%s\" % val\n\n    return val\n```\n\njust make up a few test cases and we're good :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54960939",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8188#issuecomment-54960939",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8188",
    "id": 54960939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTYwOTM5",
    "user": {
      "login": "teese",
      "id": 8667542,
      "node_id": "MDQ6VXNlcjg2Njc1NDI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8667542?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teese",
      "html_url": "https://github.com/teese",
      "followers_url": "https://api.github.com/users/teese/followers",
      "following_url": "https://api.github.com/users/teese/following{/other_user}",
      "gists_url": "https://api.github.com/users/teese/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teese/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teese/subscriptions",
      "organizations_url": "https://api.github.com/users/teese/orgs",
      "repos_url": "https://api.github.com/users/teese/repos",
      "events_url": "https://api.github.com/users/teese/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teese/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-09T12:23:51Z",
    "updated_at": "2014-09-09T12:23:51Z",
    "author_association": "NONE",
    "body": "Thanks for the comments. Please go ahead with your own solution. It's somewhat beyond my current ability, and I'm busy wearing my labcoat this week :)\n"
  }
]
