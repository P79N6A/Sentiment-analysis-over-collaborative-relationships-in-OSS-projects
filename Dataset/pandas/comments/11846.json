[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/164877755",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11846#issuecomment-164877755",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11846",
    "id": 164877755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDg3Nzc1NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-15T19:54:53Z",
    "updated_at": "2015-12-15T19:54:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is a dupe of this: https://github.com/pydata/pandas/issues/4471\n\nessentially `uint64` support in pandas is not well tested / buggy.\n\npull-request are for sure welcome. Not really sure what actual use-cases in the wild are for this type of integer.as IMHO it doesn't buy you much.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/199599456",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11846#issuecomment-199599456",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11846",
    "id": 199599456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTU5OTQ1Ng==",
    "user": {
      "login": "aoz",
      "id": 1459228,
      "node_id": "MDQ6VXNlcjE0NTkyMjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1459228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aoz",
      "html_url": "https://github.com/aoz",
      "followers_url": "https://api.github.com/users/aoz/followers",
      "following_url": "https://api.github.com/users/aoz/following{/other_user}",
      "gists_url": "https://api.github.com/users/aoz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aoz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aoz/subscriptions",
      "organizations_url": "https://api.github.com/users/aoz/orgs",
      "repos_url": "https://api.github.com/users/aoz/repos",
      "events_url": "https://api.github.com/users/aoz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aoz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-22T02:41:48Z",
    "updated_at": "2016-03-22T02:41:48Z",
    "author_association": "NONE",
    "body": "@jreback FYI: I've just hit this issue while working on a real life, commercial project. My largish (few GB) datasets consist of uint64 elements, runs failed on some of them, and I tracked down the issue to this. Trying to find a workaround...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/219501714",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11846#issuecomment-219501714",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11846",
    "id": 219501714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTUwMTcxNA==",
    "user": {
      "login": "pwaller",
      "id": 438648,
      "node_id": "MDQ6VXNlcjQzODY0OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/438648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwaller",
      "html_url": "https://github.com/pwaller",
      "followers_url": "https://api.github.com/users/pwaller/followers",
      "following_url": "https://api.github.com/users/pwaller/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwaller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwaller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwaller/subscriptions",
      "organizations_url": "https://api.github.com/users/pwaller/orgs",
      "repos_url": "https://api.github.com/users/pwaller/repos",
      "events_url": "https://api.github.com/users/pwaller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwaller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-16T18:15:14Z",
    "updated_at": "2016-05-16T18:15:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Re: you can't think of a use case â€” unfortunately I'm importing a dataset which already has uint64's in it. Not being able to use them is quite a big inconvenience, as I keep hitting this, even if I work around it!\n\nI think this is really surprising behaviour, but I guess that's because DataFrame's storage is somehow different from that of a Series in a way I don't understand...\n\n``` python\nIn [1]: import pandas as pd, numpy as np\n\nIn [2]: s = pd.Series(np.array([2**64 - 1]))\n\nIn [3]: s.dtype\nOut[3]: dtype('uint64')\n\nIn [4]: df = pd.DataFrame({\"s\": s})\n\nIn [5]: df.dtypes\nOut[5]: \ns    object\ndtype: object\n```\n"
  }
]
