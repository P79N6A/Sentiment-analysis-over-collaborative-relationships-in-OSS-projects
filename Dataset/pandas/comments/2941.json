[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54389982",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2941#issuecomment-54389982",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2941",
    "id": 54389982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzg5OTgy",
    "user": {
      "login": "chrisaycock",
      "id": 453745,
      "node_id": "MDQ6VXNlcjQ1Mzc0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/453745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisaycock",
      "html_url": "https://github.com/chrisaycock",
      "followers_url": "https://api.github.com/users/chrisaycock/followers",
      "following_url": "https://api.github.com/users/chrisaycock/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisaycock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisaycock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisaycock/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisaycock/orgs",
      "repos_url": "https://api.github.com/users/chrisaycock/repos",
      "events_url": "https://api.github.com/users/chrisaycock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisaycock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T00:47:56Z",
    "updated_at": "2014-09-04T01:37:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any thoughts on this? Right now DataFrame.asof() can be emulated via\n\n``` python\ndf.apply(lambda x: x.asof(some_series))\n```\n\nBut this is wasteful because it searches each column redundantly.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54390426",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2941#issuecomment-54390426",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2941",
    "id": 54390426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzkwNDI2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T00:54:22Z",
    "updated_at": "2014-09-04T00:54:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is pretty straightforward to do for a frame, (its very similar to the series logic), in fact I would move to `core/generic.py` (with a small adjustment). PR?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54390489",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2941#issuecomment-54390489",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2941",
    "id": 54390489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzkwNDg5",
    "user": {
      "login": "chrisaycock",
      "id": 453745,
      "node_id": "MDQ6VXNlcjQ1Mzc0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/453745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisaycock",
      "html_url": "https://github.com/chrisaycock",
      "followers_url": "https://api.github.com/users/chrisaycock/followers",
      "following_url": "https://api.github.com/users/chrisaycock/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisaycock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisaycock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisaycock/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisaycock/orgs",
      "repos_url": "https://api.github.com/users/chrisaycock/repos",
      "events_url": "https://api.github.com/users/chrisaycock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisaycock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T00:55:20Z",
    "updated_at": "2014-09-04T00:55:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I can take a stab at it this weekend if you like.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54390739",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2941#issuecomment-54390739",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2941",
    "id": 54390739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzkwNzM5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T00:59:34Z",
    "updated_at": "2014-09-04T00:59:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "that would be awesome!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54393786",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2941#issuecomment-54393786",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2941",
    "id": 54393786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzkzNzg2",
    "user": {
      "login": "chrisaycock",
      "id": 453745,
      "node_id": "MDQ6VXNlcjQ1Mzc0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/453745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisaycock",
      "html_url": "https://github.com/chrisaycock",
      "followers_url": "https://api.github.com/users/chrisaycock/followers",
      "following_url": "https://api.github.com/users/chrisaycock/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisaycock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisaycock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisaycock/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisaycock/orgs",
      "repos_url": "https://api.github.com/users/chrisaycock/repos",
      "events_url": "https://api.github.com/users/chrisaycock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisaycock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T01:47:04Z",
    "updated_at": "2014-09-04T01:47:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback The biggest issue I see is that `take_1d()` is for arrays rather than DataFrames. The `Series.asof()` invokes `take_1d()` to handle indices from `asof_locs()` that might be -1 (indicating that `np.searchsorted()` failed to find an appropriate location). Is there an equivalent to `take_1d()` for DataFrames? I tried calling it in `df.apply()`, but got an error about shape.\n\n``` python\ndf = pd.DataFrame({'letter':['a', 'b', 'c'], 'number':[1, 2, 3]})\ndf.apply(lambda x: pd.core.common.take_1d(x.values, [-1, 1]))\n```\n\nHere is a quick-and-dirty hack that produces what I'm looking for:\n\n``` python\nIn [20]: pd.DataFrame(dict(zip(df.columns, map(lambda x: pd.core.common.take_1d(df[x].values, [-1, 1]), df.columns))))\nOut[20]: \n  letter  number\n0    NaN     NaN\n1      b       2\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54394353",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2941#issuecomment-54394353",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2941",
    "id": 54394353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzk0MzUz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T01:56:23Z",
    "updated_at": "2014-09-04T01:56:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "you can just use DAtaFrame.take\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54395234",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2941#issuecomment-54395234",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2941",
    "id": 54395234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzk1MjM0",
    "user": {
      "login": "chrisaycock",
      "id": 453745,
      "node_id": "MDQ6VXNlcjQ1Mzc0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/453745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisaycock",
      "html_url": "https://github.com/chrisaycock",
      "followers_url": "https://api.github.com/users/chrisaycock/followers",
      "following_url": "https://api.github.com/users/chrisaycock/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisaycock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisaycock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisaycock/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisaycock/orgs",
      "repos_url": "https://api.github.com/users/chrisaycock/repos",
      "events_url": "https://api.github.com/users/chrisaycock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisaycock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T02:10:34Z",
    "updated_at": "2014-09-04T02:10:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback That just treats the -1 the same way regular Python does: wrapping around the end of the array:\n\n``` python\nIn [4]: df.take([-1, 1])    # doesn't matter what I set 'convert' to\nOut[4]: \n  letter  number\n2      c       3\n1      b       2\n```\n\nI'm looking for a way to return a `nan` when the index is -1, just like in `take_1d()`. That's how the `Series.asof()` works to resolve instances when an element in the `where` parameter occurs before anything in the Series.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54395648",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2941#issuecomment-54395648",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2941",
    "id": 54395648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzk1NjQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T02:18:29Z",
    "updated_at": "2014-09-04T02:18:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "you need to look at the internal functions for this, eg take_2d\n\nor you can 1s take with a flattened array then reshape \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/107079983",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2941#issuecomment-107079983",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2941",
    "id": 107079983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzA3OTk4Mw==",
    "user": {
      "login": "bwillers",
      "id": 4094953,
      "node_id": "MDQ6VXNlcjQwOTQ5NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4094953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bwillers",
      "html_url": "https://github.com/bwillers",
      "followers_url": "https://api.github.com/users/bwillers/followers",
      "following_url": "https://api.github.com/users/bwillers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bwillers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bwillers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bwillers/subscriptions",
      "organizations_url": "https://api.github.com/users/bwillers/orgs",
      "repos_url": "https://api.github.com/users/bwillers/repos",
      "events_url": "https://api.github.com/users/bwillers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bwillers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-30T20:05:07Z",
    "updated_at": "2015-05-30T20:05:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've been toying with this a little and it's not clear that it's possible to avoid doing the asof_locs call for each column, since they might have missings in different positions. So you probably dont end up gaining much over what the df.apply(lambda s: s.asof(t)) approach gives you.\n\nHowever, if you don't want missings to be ffilled, then you only need to do it once. Perhaps it makes sense to have a flag argument which indicates whether the user wants missings to be ffilled during the asof operation?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111652186",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2941#issuecomment-111652186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2941",
    "id": 111652186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY1MjE4Ng==",
    "user": {
      "login": "bwillers",
      "id": 4094953,
      "node_id": "MDQ6VXNlcjQwOTQ5NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4094953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bwillers",
      "html_url": "https://github.com/bwillers",
      "followers_url": "https://api.github.com/users/bwillers/followers",
      "following_url": "https://api.github.com/users/bwillers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bwillers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bwillers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bwillers/subscriptions",
      "organizations_url": "https://api.github.com/users/bwillers/orgs",
      "repos_url": "https://api.github.com/users/bwillers/repos",
      "events_url": "https://api.github.com/users/bwillers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bwillers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T01:48:38Z",
    "updated_at": "2015-06-13T01:48:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer  As discussed in #10266 this functionality is already available via `df.reindex(where, method='ffill')`, potentially with a dropna/fillna depending exactly what you want out at the end of the day. So we can probably close this this issue?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111664862",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2941#issuecomment-111664862",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2941",
    "id": 111664862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY2NDg2Mg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T03:37:23Z",
    "updated_at": "2015-06-13T03:37:23Z",
    "author_association": "MEMBER",
    "body": "Yep, let's close it.\n"
  }
]
