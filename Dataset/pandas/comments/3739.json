[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18810567",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3739#issuecomment-18810567",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3739",
    "id": 18810567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODEwNTY3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-02T18:01:31Z",
    "updated_at": "2013-06-02T18:01:31Z",
    "author_association": "MEMBER",
    "body": "I like the alternative you present at the bottom. Why is that behavior surprising? I can see that if you're completely new to Python or you've only been using Python 3 and living in a bubble and for some reason you need to switch to Python 2, but if you're not new and you don't live in a bubble then this would be the most consistent with the language. I think maintaining _that_ invariant is important until the entire scientific community moves to Python 3 which may be a long time. Have `div` and `truediv` methods just like the `operator` module. What do you mean by pandas doesn't respect `from __future__ import division`? If you import it in an ipython session it works fine.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18811699",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3739#issuecomment-18811699",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3739",
    "id": 18811699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODExNjk5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-02T19:03:20Z",
    "updated_at": "2013-06-02T19:03:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud What I mean by surprising is that, if you run `from __future__ import division` and then try to use the `div` method, it only does integer division. (try running the code snippet I posted).\n\nI'd argue that if you know nothing about special methods like `__div__` and `__truediv__`, it's counter-intuitive that `div` doesn't change to doing true division when you use `from __future__ import division`. The `/` operator feels synonymous to division.\n\nThat said, it's a pretty quick error to notice, so I guess just adding `floordiv`, `truediv` in general and removing `div` from Python 3 would work.  Is there a way to add something to the docstring for `div` that indicates that it will only do integer division?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18811818",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3739#issuecomment-18811818",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3739",
    "id": 18811818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODExODE4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-02T19:10:38Z",
    "updated_at": "2013-06-02T19:10:38Z",
    "author_association": "MEMBER",
    "body": "i c what u mean. the reason why `div` doesn't work even when you import division is because that's how the `operator` module works `operator.div(1, 2)` is invariant to the division import. i'm guessing u know that already though. i don't agree that div should change to true division (except of course in python 3), but others may feel different. the fewer things that conflict with python's conventions the better. not necessarily because i think python's conventions are the \"best\" (whatever that means), but because they are so widely used.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18811840",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3739#issuecomment-18811840",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3739",
    "id": 18811840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODExODQw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-02T19:11:51Z",
    "updated_at": "2013-06-02T19:12:24Z",
    "author_association": "MEMBER",
    "body": "- python 2 `div` and `truediv` maybe `floordiv` since the syntax `a // b` is valid, just make `div` an alias for `floordiv` or vice versa\n- python 3 `floordiv` and `div`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18811858",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3739#issuecomment-18811858",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3739",
    "id": 18811858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODExODU4",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-02T19:13:01Z",
    "updated_at": "2013-06-02T19:13:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud well, it's actually because the `lambda x, y: x / y` is executed in the context of `pandas.core.frame`, which doesn't have the `from __future__ import division` enabled.\n\n`operator.div` is gone in Python 3, so under that scenario it should be gone from pandas too, right?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18811873",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3739#issuecomment-18811873",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3739",
    "id": 18811873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODExODcz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-02T19:13:50Z",
    "updated_at": "2013-06-02T19:13:50Z",
    "author_association": "MEMBER",
    "body": "oh ur right i didn't acutally look at the function my bad. i assumed pandas just passed the operator module funcs\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18811884",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3739#issuecomment-18811884",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3739",
    "id": 18811884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODExODg0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-02T19:14:33Z",
    "updated_at": "2013-06-02T19:16:51Z",
    "author_association": "MEMBER",
    "body": "and it does now that i look except for a few\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18811921",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3739#issuecomment-18811921",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3739",
    "id": 18811921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODExOTIx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-02T19:16:36Z",
    "updated_at": "2013-06-02T19:16:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud I'm not sure why that is, actually. Maybe it was an attempt to handle the div / truediv difference? The test cases didn't explicitly handle integer division, so I'm unclear. I left it as close to the original as I could.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18811960",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3739#issuecomment-18811960",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3739",
    "id": 18811960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODExOTYw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-02T19:19:26Z",
    "updated_at": "2013-06-02T19:25:24Z",
    "author_association": "MEMBER",
    "body": "it looks like that is what's happening, but i think there's a scoping issue here since the import is not respected\n\nnot sure why `lambda x, y: x / y` doesn't respect the import. doesn't look like there's an easy way to add notes to a docstring appender. what u could do is add a default string interpolating function, although passing parameters to a function that formats strings is really annoying. but it might be ok for this case\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18812140",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3739#issuecomment-18812140",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3739",
    "id": 18812140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODEyMTQw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-02T19:28:31Z",
    "updated_at": "2013-06-02T19:28:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Since `from __future__ import division` only affects the current file, so you'd need to do a bunch of workarounds to make sure this happens. It's also slightly problematic throughout, because any function that uses the div method anywhere will run differently in Python 3 and Python 2.\n\nThat said, I realize I missed adding truediv and floordiv to other containers (sparse versions, etc.), so I think it makes more sense to close this, split out the commits to add `truediv` and `floordiv` to all the containers in one PR and then write up another that suggests changing the behavior of `div` and removing `div` from the Python 3. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18812331",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3739#issuecomment-18812331",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3739",
    "id": 18812331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODEyMzMx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-02T19:39:31Z",
    "updated_at": "2013-06-02T19:39:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud okay, further update - this probably doesn't work correctly with numexpr, since it would use the string representation of `/` and probably do the wrong thing at that point. So, definitely more to think over with changing div and truediv (and probably a good idea to add a test case that explicitly checks that, with numexpr installed, it does `div` and `truediv` appropriately).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18812364",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3739#issuecomment-18812364",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3739",
    "id": 18812364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODEyMzY0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-02T19:41:16Z",
    "updated_at": "2013-06-02T19:41:16Z",
    "author_association": "MEMBER",
    "body": "indeed numexpr enforces the numpy convention on everything so it will be hard to get around that without a bunch of casts i think.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18814173",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3739#issuecomment-18814173",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3739",
    "id": 18814173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODE0MTcz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-02T21:23:33Z",
    "updated_at": "2013-06-02T21:23:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "why don't we do something like evaluate division always wih astype(float) then cast back if we can (we do this is other cases as well)?\n\nas a side note - does numpy respect div / truediv? \nnumpy was buggy for mod wih integers should be straightforward to do something similar here I think\n"
  }
]
