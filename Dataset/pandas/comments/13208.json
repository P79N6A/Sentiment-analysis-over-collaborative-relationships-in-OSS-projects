[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/219869588",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13208#issuecomment-219869588",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13208",
    "id": 219869588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTg2OTU4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-17T22:10:23Z",
    "updated_at": "2016-05-17T22:10:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah it appears some paths don't call finalize; though you can't just call finalize for example on binary operations between 2 Series. This would have to be handled in the sub-class itself. We don't have the machinery to ignore this though.\n\nSo I am suggesting that we DO call `__finalize__` but maybe pass a parameter that will be default propogate (but on binary functions this parameter can be set to `False` and prevent propogation / unless overriden)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/219869691",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13208#issuecomment-219869691",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13208",
    "id": 219869691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTg2OTY5MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-17T22:10:49Z",
    "updated_at": "2016-05-17T22:10:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "pull-requests welcome!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/219923768",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13208#issuecomment-219923768",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13208",
    "id": 219923768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTkyMzc2OA==",
    "user": {
      "login": "pfrcks",
      "id": 10297394,
      "node_id": "MDQ6VXNlcjEwMjk3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10297394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pfrcks",
      "html_url": "https://github.com/pfrcks",
      "followers_url": "https://api.github.com/users/pfrcks/followers",
      "following_url": "https://api.github.com/users/pfrcks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pfrcks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pfrcks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pfrcks/subscriptions",
      "organizations_url": "https://api.github.com/users/pfrcks/orgs",
      "repos_url": "https://api.github.com/users/pfrcks/repos",
      "events_url": "https://api.github.com/users/pfrcks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pfrcks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T04:42:59Z",
    "updated_at": "2016-05-18T04:42:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I would like to attempt it. Based on what you have written, I have located the function def of **finalize** in generic.py. \nI'm thinking of adding a paramter with default value as True just as you mentioned above( which can be set to False on binary functions.)\nHowever I'm not able to understand what do you mean by \"DO call **finalize**\". Does that mean that something has to be changed in the process during operations between two Series?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/219927092",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13208#issuecomment-219927092",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13208",
    "id": 219927092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTkyNzA5Mg==",
    "user": {
      "login": "jdfekete",
      "id": 1331338,
      "node_id": "MDQ6VXNlcjEzMzEzMzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1331338?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfekete",
      "html_url": "https://github.com/jdfekete",
      "followers_url": "https://api.github.com/users/jdfekete/followers",
      "following_url": "https://api.github.com/users/jdfekete/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfekete/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfekete/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfekete/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfekete/orgs",
      "repos_url": "https://api.github.com/users/jdfekete/repos",
      "events_url": "https://api.github.com/users/jdfekete/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfekete/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T05:13:43Z",
    "updated_at": "2016-05-18T05:13:43Z",
    "author_association": "NONE",
    "body": "@pfrcks I think it means you need to change pandas/core/ops.py so that binary operations now call your brand new **finalize**\nEach call to self._constructor should be followed by a call to __finalize__ to make sure the metadata is propagated.\nAlso, adding a named argument to **finalize** will break upward compatibility, but that might be the only way to do it right.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/219929608",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13208#issuecomment-219929608",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13208",
    "id": 219929608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTkyOTYwOA==",
    "user": {
      "login": "pfrcks",
      "id": 10297394,
      "node_id": "MDQ6VXNlcjEwMjk3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10297394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pfrcks",
      "html_url": "https://github.com/pfrcks",
      "followers_url": "https://api.github.com/users/pfrcks/followers",
      "following_url": "https://api.github.com/users/pfrcks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pfrcks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pfrcks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pfrcks/subscriptions",
      "organizations_url": "https://api.github.com/users/pfrcks/orgs",
      "repos_url": "https://api.github.com/users/pfrcks/repos",
      "events_url": "https://api.github.com/users/pfrcks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pfrcks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T05:35:16Z",
    "updated_at": "2016-05-18T05:35:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jdfekete That makes more sense. Thanks. Will look into it. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220017405",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13208#issuecomment-220017405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13208",
    "id": 220017405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDAxNzQwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T12:56:29Z",
    "updated_at": "2016-05-18T12:57:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "so to clarify `x` and `y` are `NDFrames` (e.g. `Series/DataFrame`)\n\n`x + 1` -> `__finalize__(other)`\n`x + y` -> `__finalize__(other, method = '__add__')`\n\nwould prob work. So the result in both cases is a `NDFrame`, they can be distinguished (and possibly operated on but a sub-class) when `method` is `not None`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220075849",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13208#issuecomment-220075849",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13208",
    "id": 220075849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDA3NTg0OQ==",
    "user": {
      "login": "jdfekete",
      "id": 1331338,
      "node_id": "MDQ6VXNlcjEzMzEzMzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1331338?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfekete",
      "html_url": "https://github.com/jdfekete",
      "followers_url": "https://api.github.com/users/jdfekete/followers",
      "following_url": "https://api.github.com/users/jdfekete/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfekete/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfekete/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfekete/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfekete/orgs",
      "repos_url": "https://api.github.com/users/jdfekete/repos",
      "events_url": "https://api.github.com/users/jdfekete/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfekete/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T16:06:15Z",
    "updated_at": "2016-05-18T16:06:15Z",
    "author_association": "NONE",
    "body": "I am not sure. Looking in ops.py on the `wrapper` methods, maybe:\n`x + 1` -> `__finalize__(self)`\n`x + y` -> `__finalize__(self, method='__add__', other=other)`\n\nSo far, the operators are not passed to the `__finalize__` function. It could be handy in general, but that's a separate issue I think. Adding `method=operator` is useful  but does not brake the API (I think). Adding the `other=other` parameter do change it a bit, although the current `__finalize__` method will take it in its `**kwargs` .\nAlso, I have seen references to possible cycles/loops in some exchanges but I don't quite understand when they happen and whether my solution solves them.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220076592",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13208#issuecomment-220076592",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13208",
    "id": 220076592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDA3NjU5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T16:08:43Z",
    "updated_at": "2016-05-18T16:08:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "> So far, the operators are not passed to the **finalize** function. It could be handy in general, but that's a separate issue I think. Adding method=operator is useful but does not brake the API (I think). Adding the other=other parameter do change it a bit, although the current **finalize** method will take it in its **kwargs .\n\nthat's exactly what needs to be one, `__finalize__` NEEDS to be called. There is no API change.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/326553927",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13208#issuecomment-326553927",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13208",
    "id": 326553927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjU1MzkyNw==",
    "user": {
      "login": "matthiasha",
      "id": 1838091,
      "node_id": "MDQ6VXNlcjE4MzgwOTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1838091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthiasha",
      "html_url": "https://github.com/matthiasha",
      "followers_url": "https://api.github.com/users/matthiasha/followers",
      "following_url": "https://api.github.com/users/matthiasha/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthiasha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthiasha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthiasha/subscriptions",
      "organizations_url": "https://api.github.com/users/matthiasha/orgs",
      "repos_url": "https://api.github.com/users/matthiasha/repos",
      "events_url": "https://api.github.com/users/matthiasha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthiasha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-01T11:07:15Z",
    "updated_at": "2017-09-01T11:07:15Z",
    "author_association": "NONE",
    "body": "## Same issue, different context\r\n#### Code Sample\r\n\r\n```python\r\nimport pandas\r\n\r\n# subclass series and define property 'meta' to be passed on\r\nclass S(pandas.Series):\r\n    _metadata = ['meta']\r\n    \r\n    @property\r\n    def _constructor(self):\r\n        return S\r\n    \r\n# create new instance of Series subclass and set custom property\r\nx = S(range(3))\r\nx.meta = 'test'\r\n\r\n# 'meta' gets passed on to slice, as expected\r\nprint(x[1:].meta)\r\n\r\n# calculation results \r\nprint((x * 2).meta)\r\n```\r\n#### Problem description\r\n\r\nThe documentation states:\r\n```Define _metadata for normal properties which will be passed to manipulation results```\r\n\r\nSee http://pandas.pydata.org/pandas-docs/stable/internals.html#define-original-properties.\r\n\r\nI think multiplication / adding etc. are also manipulation results.\r\n\r\nThis should be discussed with others who are already subclassing Pandas classes and are making use of _metadata.\r\n\r\n#### Expected Output\r\n\r\nThe property is expected to be passed on to the calculation result.\r\n\r\n#### Output of ``pd.show_versions()``\r\n\r\n<details>\r\n\r\n\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: None\r\npython: 3.5.1.final.0\r\npython-bits: 64\r\nOS: Darwin\r\nOS-release: 16.6.0\r\nmachine: x86_64\r\nprocessor: i386\r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: en_US.UTF-8\r\nLOCALE: en_US.UTF-8\r\n\r\npandas: 0.20.3\r\npytest: 3.2.1\r\npip: 9.0.1\r\nsetuptools: 36.2.0\r\nCython: None\r\nnumpy: 1.13.1\r\nscipy: 0.19.1\r\nxarray: None\r\nIPython: 6.1.0\r\nsphinx: None\r\npatsy: None\r\ndateutil: 2.6.1\r\npytz: 2017.2\r\nblosc: None\r\nbottleneck: None\r\ntables: None\r\nnumexpr: None\r\nfeather: None\r\nmatplotlib: None\r\nopenpyxl: None\r\nxlrd: None\r\nxlwt: None\r\nxlsxwriter: None\r\nlxml: None\r\nbs4: None\r\nhtml5lib: 0.999999999\r\nsqlalchemy: None\r\npymysql: None\r\npsycopg2: None\r\njinja2: 2.9.6\r\ns3fs: None\r\npandas_gbq: None\r\npandas_datareader: None\r\n\r\n</details>\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/326556232",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13208#issuecomment-326556232",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13208",
    "id": 326556232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjU1NjIzMg==",
    "user": {
      "login": "matthiasha",
      "id": 1838091,
      "node_id": "MDQ6VXNlcjE4MzgwOTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1838091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthiasha",
      "html_url": "https://github.com/matthiasha",
      "followers_url": "https://api.github.com/users/matthiasha/followers",
      "following_url": "https://api.github.com/users/matthiasha/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthiasha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthiasha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthiasha/subscriptions",
      "organizations_url": "https://api.github.com/users/matthiasha/orgs",
      "repos_url": "https://api.github.com/users/matthiasha/repos",
      "events_url": "https://api.github.com/users/matthiasha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthiasha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-01T11:21:08Z",
    "updated_at": "2017-09-01T11:21:08Z",
    "author_association": "NONE",
    "body": "My workaround: Always call `__finalize__` when constructing a new Series:\r\n```python\r\n@property\r\ndef _constructor(self):\r\n    def f(*args, **kwargs):\r\n        # workaround for https://github.com/pandas-dev/pandas/issues/13208\r\n        return MySubclass(*args, **kwargs).__finalize__(self)\r\n    return f\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/360423576",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13208#issuecomment-360423576",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13208",
    "id": 360423576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQyMzU3Ng==",
    "user": {
      "login": "akashgurava",
      "id": 13036662,
      "node_id": "MDQ6VXNlcjEzMDM2NjYy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13036662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akashgurava",
      "html_url": "https://github.com/akashgurava",
      "followers_url": "https://api.github.com/users/akashgurava/followers",
      "following_url": "https://api.github.com/users/akashgurava/following{/other_user}",
      "gists_url": "https://api.github.com/users/akashgurava/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akashgurava/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akashgurava/subscriptions",
      "organizations_url": "https://api.github.com/users/akashgurava/orgs",
      "repos_url": "https://api.github.com/users/akashgurava/repos",
      "events_url": "https://api.github.com/users/akashgurava/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akashgurava/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T10:20:00Z",
    "updated_at": "2018-01-25T10:20:00Z",
    "author_association": "NONE",
    "body": "Which module contains the operations part? Like __add__ I would love to be able to contribute. "
  }
]
