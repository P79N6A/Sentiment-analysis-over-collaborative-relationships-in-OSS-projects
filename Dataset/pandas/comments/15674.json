[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/286197682",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15674#issuecomment-286197682",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15674",
    "id": 286197682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjE5NzY4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T18:21:09Z",
    "updated_at": "2017-03-13T18:21:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "``np.sum`` is translated directly to pandas sum. so this is as expected.\r\n\r\nif you really really want this behavior of ``np.sum``. This is not useful in any way IMHO.\r\n```\r\nIn [15]: df.groupby('l')['v'].apply(lambda x: np.sum(np.array(x)))['right']\r\nOut[15]: nan\r\n```\r\n\r\nor \r\n\r\n```\r\nIn [18]: df.groupby('l')['v'].apply(lambda x: x.sum(skipna=False))\r\nOut[18]: \r\nl\r\nleft    -3.0\r\nright    NaN\r\n```\r\n\r\nThe passthru ``skipna`` parameter is not implemented ATM on groupby. So I will make an issue for that (thought we had one)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/286198399",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15674#issuecomment-286198399",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15674",
    "id": 286198399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjE5ODM5OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T18:23:28Z",
    "updated_at": "2017-03-13T18:23:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref https://github.com/pandas-dev/pandas/issues/15675"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/286201533",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15674#issuecomment-286201533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15674",
    "id": 286201533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjIwMTUzMw==",
    "user": {
      "login": "flipdazed",
      "id": 8991915,
      "node_id": "MDQ6VXNlcjg5OTE5MTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8991915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flipdazed",
      "html_url": "https://github.com/flipdazed",
      "followers_url": "https://api.github.com/users/flipdazed/followers",
      "following_url": "https://api.github.com/users/flipdazed/following{/other_user}",
      "gists_url": "https://api.github.com/users/flipdazed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flipdazed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flipdazed/subscriptions",
      "organizations_url": "https://api.github.com/users/flipdazed/orgs",
      "repos_url": "https://api.github.com/users/flipdazed/repos",
      "events_url": "https://api.github.com/users/flipdazed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flipdazed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T18:33:37Z",
    "updated_at": "2017-03-13T18:33:56Z",
    "author_association": "NONE",
    "body": "> This is not useful in any way IMHO.\r\n\r\nconsider the following\r\n\r\n - merge two dataframes together from an SQl database\r\n - carry out data manipulation to get an aggregated figure per some index values that is dependent on all values being present\r\n\r\nShould a database entry be missing for some aggregated index value, the final figure should be returned as `NaN` as missing data is an extremely common occurrence in industry\r\n\r\nEither way, I agree with your assessment that it is inconsistent with current implementation as `skipna` should be a `kwarg` - many thanks for creating the new issue"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/286204678",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15674#issuecomment-286204678",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15674",
    "id": 286204678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjIwNDY3OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T18:44:24Z",
    "updated_at": "2017-03-13T18:44:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@flipdazed pandas propogates NaN values on purpose. Generally on aggregations you want to skip them. If you don't there are many options (e.g. look at ``.filter`` on groupby, or simply ``.fillna``). but that is far less common than simply aggregating.\r\n\r\n> Should a database entry be missing for some aggregated index value, the final figure should be returned as NaN as missing data is an extremely common occurrence in industry\r\n\r\nyou really think so? sounds like you don't handle missing data at all.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/286273850",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15674#issuecomment-286273850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15674",
    "id": 286273850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjI3Mzg1MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T23:19:15Z",
    "updated_at": "2017-03-13T23:19:15Z",
    "author_association": "MEMBER",
    "body": "> you really think so?\r\n\r\nJeff, there are certainly cases imaginable where you don't want to ignore missing values. And therefore we have that as a keyword."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/286275120",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15674#issuecomment-286275120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15674",
    "id": 286275120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjI3NTEyMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T23:26:20Z",
    "updated_at": "2017-03-13T23:26:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Jeff, there are certainly cases imaginable where you don't want to ignore missing values. And therefore we have that as a keyword.\r\n\r\nsure, but the vast vast majority, you want to skipna. Its very uncommon in fact to assume ALL data is valid; that is my point."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373175769",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15674#issuecomment-373175769",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15674",
    "id": 373175769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzE3NTc2OQ==",
    "user": {
      "login": "exchez",
      "id": 13267827,
      "node_id": "MDQ6VXNlcjEzMjY3ODI3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13267827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/exchez",
      "html_url": "https://github.com/exchez",
      "followers_url": "https://api.github.com/users/exchez/followers",
      "following_url": "https://api.github.com/users/exchez/following{/other_user}",
      "gists_url": "https://api.github.com/users/exchez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/exchez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/exchez/subscriptions",
      "organizations_url": "https://api.github.com/users/exchez/orgs",
      "repos_url": "https://api.github.com/users/exchez/repos",
      "events_url": "https://api.github.com/users/exchez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/exchez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-14T21:09:56Z",
    "updated_at": "2018-03-14T21:09:56Z",
    "author_association": "NONE",
    "body": "It would be nice to have a keyword and get those NAs back in this case:\r\ngroupby(['x']).resample('D').sum()\r\n\r\nWhen I resample after a groupby i need and aggregating function. it would be nice not to get zeros when I increase the resolution so I can use .fillna(method='ffill')."
  }
]
