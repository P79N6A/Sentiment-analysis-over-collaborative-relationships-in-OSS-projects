[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234429743",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13746#issuecomment-234429743",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13746",
    "id": 234429743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDQyOTc0Mw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T01:15:34Z",
    "updated_at": "2016-07-22T01:15:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I could see an argument for the first case raising - although it's been this way forever and the warning is decent and gives explicit corrective action?\n\n```\ndf2 = pd.read_csv('test', sep='\\t')\nC:\\Users\\Chris\\Anaconda\\lib\\site-packages\\IPython\\core\\interactiveshell.py:2705: DtypeWarning: \nColumns (0) have mixed types. Specify dtype option on import or set low_memory=False.\n```\n\nCase 2 is a different issue altogether - you have a space in your data and need to pass `skipinitialspace=True`\n\n``` python\nIn [26]: from pandas.compat import StringIO\n    ...: df = pd.read_csv(StringIO('1, \"1\"\\n\"1\",1'), header=None, skipinitialspace=True)\n    ...: df\nOut[26]: \n   0  1\n0  1  1\n1  1  1\n\nIn [27]: df.dtypes\nOut[27]: \n0    int64\n1    int64\ndtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234445387",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13746#issuecomment-234445387",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13746",
    "id": 234445387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDQ0NTM4Nw==",
    "user": {
      "login": "pkch",
      "id": 1593648,
      "node_id": "MDQ6VXNlcjE1OTM2NDg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1593648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pkch",
      "html_url": "https://github.com/pkch",
      "followers_url": "https://api.github.com/users/pkch/followers",
      "following_url": "https://api.github.com/users/pkch/following{/other_user}",
      "gists_url": "https://api.github.com/users/pkch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pkch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pkch/subscriptions",
      "organizations_url": "https://api.github.com/users/pkch/orgs",
      "repos_url": "https://api.github.com/users/pkch/repos",
      "events_url": "https://api.github.com/users/pkch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pkch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T03:21:55Z",
    "updated_at": "2016-07-22T03:21:55Z",
    "author_association": "NONE",
    "body": "@chris-b1  Understood. Perhaps then clarify the docs? \nThe most common case I see where this was a problem is this:\n\n```\ndf = pd.read_csv(io.StringIO('1,\\n\"\",\\n3a,\\n4,'), header=None)\n```\n\nNow `df[0]` is inferred as object due to some values that couldn't be converted. But there's no easy to identify which rows caused this problem. Applying `pd.numeric(df[0], errors='ignore')` somehow leaves the entire column as a string as long as at least one value couldn't be parsed (is it a bug btw?). Applying `pd.numeric(df[0], errors='coerce')` would not separate the (usually numerous) empty strings that are interpreted as NaN from the actual data issues that cause conversion to fail.\n\nThe ideal solution would have been to produce an optional log of parse errors. Barring that, perhaps modifying `pd.to_numeric` to actually ignore only the unconvertible value rather than the entire column.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234487881",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13746#issuecomment-234487881",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13746",
    "id": 234487881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDQ4Nzg4MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T08:42:33Z",
    "updated_at": "2016-07-22T08:42:33Z",
    "author_association": "MEMBER",
    "body": "@pkch For converting the object column to numeric, you need to set `errors='coerce'`:\n\n```\nIn [61]: pd.to_numeric(df[0], errors='coerce')\nOut[61]:\n0    1.0\n1    NaN\n2    NaN\n3    4.0\nName: 0, dtype: float64\n```\n\nAs the docstring says, `errors='ignore'` will \"invalid parsing will return the input\". But maybe it can be made clearer that the entire input is returned, and not for the single element that failed parsing. (PRs always welcome!)\n\nIf you want to find the values that did cause the conversion to fail, you can first drop the NaN values before applying `to_numeric`, or you can compare where there were NaN values before and after. Eg this identifies the problematic values: `df0_converted = pd.to_numeric(df[0], errors='coerce'); df[0].notnull() &  df0_converted.isnull()`\n\nIt would maybe also be nice if `to_numeric(df[0], errors='raise')` actually showed the failing string.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234600128",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13746#issuecomment-234600128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13746",
    "id": 234600128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDYwMDEyOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T17:08:35Z",
    "updated_at": "2016-07-22T17:09:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah at best this is a doc issue, a nice note section under dtypes in io.rst / cookbook of the perils of having mixed dtypes.\n"
  }
]
