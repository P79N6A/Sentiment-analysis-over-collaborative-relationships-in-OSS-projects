[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332678649",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17697#issuecomment-332678649",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17697",
    "id": 332678649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjY3ODY0OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-27T22:55:47Z",
    "updated_at": "2017-09-27T22:56:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref to #13712 \r\n\r\nthese I suppose should parse the same. but this is quite tricky. should these be given pytz or dateutil stamps? \r\n\r\nwe prob have a hardcoding somewhere.\r\n\r\nalso ``.to_datetime`` doesn't accept tz atm so it can only parse to UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332891864",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17697#issuecomment-332891864",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17697",
    "id": 332891864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjg5MTg2NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-28T16:31:48Z",
    "updated_at": "2017-09-28T16:31:48Z",
    "author_association": "MEMBER",
    "body": "> should these be given pytz or dateutil stamps?\r\n\r\nI'm partial to `dateutil`, but will be happy either way.\r\n\r\n> we prob have a hardcoding somewhere.\r\n\r\nIt looks like `tslib.array_to_datetime` and `tslib.convert_str_to_tsobject` both call `_string_to_dts` but do different post-processing.  Need to do some tinkering, but I suspect that unifying these will fix this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332932204",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17697#issuecomment-332932204",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17697",
    "id": 332932204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjkzMjIwNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-28T18:59:11Z",
    "updated_at": "2017-09-28T18:59:11Z",
    "author_association": "MEMBER",
    "body": "I agree it would be nice they give the same result, but I am not sure the fixed offset behaviour of `Timestamp` is that useful.\r\n\r\nThis is also not only the behaviour of `to_datetime` on scalar input, but also for parsing sequences of strings (and thus also of read_csv, etc). Changing this may break a lot of people's code.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332992250",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17697#issuecomment-332992250",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17697",
    "id": 332992250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjk5MjI1MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-28T23:38:29Z",
    "updated_at": "2017-09-28T23:38:29Z",
    "author_association": "MEMBER",
    "body": "> but I am not sure the fixed offset behaviour of `Timestamp` is that useful.\r\n\r\nDo you mean you would prefer something other than `FixedOffset`, or that you prefer the tz-naive output?\r\n\r\n> This is also not only the behaviour of to_datetime on scalar input, but also for parsing sequences of strings (and thus also of read_csv, etc). Changing this may break a lot of people's code.\r\n\r\nFair point.  How about a proof of concept that unifies the implementations and we'll see if that causes any test failures, then reevaluate.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/333322135",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17697#issuecomment-333322135",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17697",
    "id": 333322135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzMyMjEzNQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-30T17:08:20Z",
    "updated_at": "2017-09-30T17:08:20Z",
    "author_association": "MEMBER",
    "body": "This came up when I was looking at `tests.scalar.test_timestamp`.  A handful of tests use e.g. `stamp = date_range(...)[0]` instead of just `stamp = Timestamp(...)`.  In these particular cases they turn out to be equivalent.  Any objection to\r\n\r\na) changing these existing tests to use the Timestamp constructor and \r\nb) adding TestEquivalency tests to assert that `date_range(...)[0] == Timestamp(...)` in the relevant cases?\r\n\r\nThe idea here is that `tslib`/`tslibs` would be easier to test/maintain if the `tests.scalar` tests were self-contained. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/333401674",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17697#issuecomment-333401674",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17697",
    "id": 333401674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzQwMTY3NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-01T19:46:52Z",
    "updated_at": "2017-10-01T19:46:52Z",
    "author_association": "MEMBER",
    "body": "> Any objection to changing these existing tests to use the Timestamp constructor and\r\n\r\nAs long as there are other tests for `date_range` that checks those things (eg the different types of timezones), then I have no objection \r\n\r\n>  adding TestEquivalency tests to assert that date_range(...)[0] == Timestamp(...) in the relevant cases?\r\n\r\ndo you mean `to_datetime` instead of `date_range` ? (as that was the original issue)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/333403573",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17697#issuecomment-333403573",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17697",
    "id": 333403573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzQwMzU3Mw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-01T20:16:56Z",
    "updated_at": "2017-10-01T20:16:56Z",
    "author_association": "MEMBER",
    "body": "> do you mean to_datetime instead of date_range ? (as that was the original issue)\r\n\r\nIn this case the tests I'm referring to specifically use `date_range`.  Under the hood `date_range` calls `DatetimeIndex` which calls `to_datetime`, so for the purposes of scalar-izing tests, I think of them as being in the same bucket.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340510175",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17697#issuecomment-340510175",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17697",
    "id": 340510175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDUxMDE3NQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T16:55:26Z",
    "updated_at": "2017-10-30T16:55:26Z",
    "author_association": "MEMBER",
    "body": "The more I think about it, the more unsettling the behavior of `to_datetime` is.\r\n\r\n```\r\n>>> pd.to_datetime('2017-10-30 09:53:15-08:00')\r\nTimestamp('2017-10-30 17:53:15')\r\n```\r\n\r\nstrikes me as distinctly less correct than returning a tz-aware `Timestamp`.  Is it just me?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340512179",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17697#issuecomment-340512179",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17697",
    "id": 340512179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDUxMjE3OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T17:01:25Z",
    "updated_at": "2017-10-30T17:01:37Z",
    "author_association": "MEMBER",
    "body": "You are correct, but still the question is: what to return instead and how much user code will this break?\r\n\r\n> Do you mean you would prefer something other than FixedOffset, or that you prefer the tz-naive output?\r\n\r\nI don't really know, I only know that often I don't want a `pytz.FixedOffset`. \r\nMaybe returning a tz-aware datetime, but localized to UTC would make more sense as opposed to the current UTC but tz-naive result. Although that is something you can already obtain with the `utc` keyword:\r\n\r\n```\r\nIn [11]: pd.to_datetime('2017-10-30 09:53:15-08:00')\r\nOut[11]: Timestamp('2017-10-30 17:53:15')\r\n\r\nIn [12]: pd.to_datetime('2017-10-30 09:53:15-08:00', utc=True)\r\nOut[12]: Timestamp('2017-10-30 17:53:15+0000', tz='UTC')\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340658473",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17697#issuecomment-340658473",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17697",
    "id": 340658473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDY1ODQ3Mw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-31T04:43:58Z",
    "updated_at": "2017-10-31T04:43:58Z",
    "author_association": "MEMBER",
    "body": "> what to return instead [...]\r\n\r\nSeems like 3 cases:\r\na) all tzaware with same tz --> DatetimeTZIndex (or whatever its called)\r\nb) all naive --> DatetimeIndex\r\nc) mixed --> object-dtype Index/Series with each entry correct\r\n\r\nImplementing this will be a minor hassle, but I'm bothered enough by this behavior to volunteer.\r\n\r\n> [...] and how much user code will this break?\r\n\r\nThat I have no idea.  How would we go about figuring this out?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346862140",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17697#issuecomment-346862140",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17697",
    "id": 346862140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njg2MjE0MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-24T16:16:02Z",
    "updated_at": "2017-11-24T16:16:02Z",
    "author_association": "MEMBER",
    "body": "Two more mismatched cases: \"today\" and \"now\".  to_datetime goes through the iso8601 parser, while Timestamp goes through the datetime.now/datetime.today calls:\r\n\r\n```\r\n>>> pd.Timestamp(\"now\")\r\nTimestamp('2017-11-24 08:15:35.366420')\r\n>>> pd.to_datetime(\"now\")\r\nTimestamp('2017-11-24 16:15:39')\r\n>>> pd.Timestamp(\"today\")\r\nTimestamp('2017-11-24 08:15:42.678363')\r\n>>> pd.to_datetime(\"today\")\r\nTimestamp('2017-11-24 00:00:00')\r\n```"
  }
]
