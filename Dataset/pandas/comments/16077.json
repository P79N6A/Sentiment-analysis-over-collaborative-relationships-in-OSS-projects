[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/295908923",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16077#issuecomment-295908923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16077",
    "id": 295908923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTkwODkyMw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-20T20:55:30Z",
    "updated_at": "2017-04-20T20:55:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Our normal semantics are that missing data propagates on binary-like ops so this feels pretty consistent.  \r\n```python\r\npd.Series([1,2.2,np.nan]) + pd.Series([1,2,3])\r\nOut[56]: \r\n0    2.0\r\n1    4.2\r\n2    NaN\r\ndtype: float64\r\n```\r\n\r\nBut probably could add something like a `ignore_na=False` parameter to ignore and produce your expected output.  Or this is easy enough to do with `fillna`.\r\n\r\n```python\r\n\r\ns = pd.Series(['a', 'b', 'c'])\r\ns.str.cat(['A', np.NaN, 'C'], sep=',').fillna(s)\r\nOut[64]: \r\n0    a,A\r\n1      b\r\n2    c,C\r\ndtype: object\r\n```\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/295912523",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16077#issuecomment-295912523",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16077",
    "id": 295912523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTkxMjUyMw==",
    "user": {
      "login": "leoruiz",
      "id": 1610388,
      "node_id": "MDQ6VXNlcjE2MTAzODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1610388?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leoruiz",
      "html_url": "https://github.com/leoruiz",
      "followers_url": "https://api.github.com/users/leoruiz/followers",
      "following_url": "https://api.github.com/users/leoruiz/following{/other_user}",
      "gists_url": "https://api.github.com/users/leoruiz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leoruiz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leoruiz/subscriptions",
      "organizations_url": "https://api.github.com/users/leoruiz/orgs",
      "repos_url": "https://api.github.com/users/leoruiz/repos",
      "events_url": "https://api.github.com/users/leoruiz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leoruiz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-20T21:04:37Z",
    "updated_at": "2017-04-20T21:04:37Z",
    "author_association": "NONE",
    "body": "I may have NaN on \"s\" or the other.\r\n\r\nI think I can do as you say\r\n```python\r\ns1 = Series(['a', np.NaN, 'c'])\r\ns2 = Series(['A', 'B', np.NaN])\r\ns1.str.cat(s2, sep=',').fillna(s1).fillna(s2)\r\n\r\n0    a,A\r\n1      B\r\n2      c\r\ndtype: object\r\n```\r\nThank you ðŸ˜„ "
  }
]
