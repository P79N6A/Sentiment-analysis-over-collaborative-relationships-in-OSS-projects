[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/133186146",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10869#issuecomment-133186146",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10869",
    "id": 133186146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzE4NjE0Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-20T21:38:22Z",
    "updated_at": "2015-08-20T21:39:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "No this depends on whether things are converted to float (e.g. a `NaN` is needed or not). merge normally tries to preserve the incoming dtypes (and it works in this case for 11, they were `int64` to start)\n\n```\nIn [10]: df1.join(df2)       \nOut[10]: \n         0         1         2         3         4         5         6        7         8         9   10  11  12\n0  0.516009  0.060819  0.651483  0.272277  0.666867  0.559865  0.790434  0.11257  0.990345  0.329986   1   2   3\n1  0.355554  0.344380  0.835125  0.101141  0.691940  0.894923  0.922320  0.88279  0.497368  0.253967 NaN NaN NaN\n\nIn [11]: df1.drop(1).join(df2)\nOut[11]: \n         0         1         2         3         4         5         6        7         8         9   10  11  12\n0  0.516009  0.060819  0.651483  0.272277  0.666867  0.559865  0.790434  0.11257  0.990345  0.329986   1   2   3\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/133199677",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10869#issuecomment-133199677",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10869",
    "id": 133199677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzE5OTY3Nw==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-20T22:26:37Z",
    "updated_at": "2015-08-20T22:26:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "So i guess the only way to force dtype consistency is to copy the one row data frame n times the height of the first one to avoid the need for NaNs?\nLacks elegance**2. ;)\n\nSent from my iPhone\n\n> On Aug 20, 2015, at 15:39, Jeff Reback notifications@github.com wrote:\n> \n> brave man for using master though :)\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/133201227",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10869#issuecomment-133201227",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10869",
    "id": 133201227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzIwMTIyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-20T22:30:32Z",
    "updated_at": "2015-08-20T22:30:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "how can you avoid the need for `NaN` in a type that doesn't support it (ATM)?\n\nnot really sure how/why this is an issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/133219761",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10869#issuecomment-133219761",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10869",
    "id": 133219761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzIxOTc2MQ==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-21T00:01:17Z",
    "updated_at": "2015-08-21T00:01:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I need to join data frame 1 with data frame 2 and sometimes data frame 1 has 1 row and sometime more than 1.  When it has more than 1 the join operation leads to NaNs and therefore a type conversion of the Int columns of data frame 2 when joining them. \nAfter they have been joined I need to store them in HDF files during an parallel processing for later joining them into a big HDF store. But for that the types need to be consistent. So I need to avoid the automatic conversion to float for the case data frame 1 has more than 1 row (which I prefer to the solution of concert the whole data frame 2 to floats even so it's storing  integers conceptually).\n\nSent from my iPhone\n\n> On Aug 20, 2015, at 16:30, Jeff Reback notifications@github.com wrote:\n> \n> how can you avoid the need for NaN in a type that doesn't support it (ATM)?\n> \n> not really sure how/why this is an issue.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/133226383",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10869#issuecomment-133226383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10869",
    "id": 133226383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzIyNjM4Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-21T00:26:48Z",
    "updated_at": "2015-08-21T00:26:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "is their a reason you would just not use all floats in the first place ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/133453082",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10869#issuecomment-133453082",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10869",
    "id": 133453082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzQ1MzA4Mg==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-21T14:57:19Z",
    "updated_at": "2015-08-21T14:57:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I didn't calculate if it mattered in terms of space for me, but usually I stay with integers if I can in case I need to do selection on their values. df[df.a==x] is easier to type than df[(df.a - x) < eps]\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/133470105",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10869#issuecomment-133470105",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10869",
    "id": 133470105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzQ3MDEwNQ==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-21T15:52:59Z",
    "updated_at": "2015-08-21T15:53:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I shouldn't have used `join` in the first place, I think, as I do a simple concat actually.\nHere's my solution for keep using ints where appropriate:\n\n``` python\nif len(df1) > 1:\n    df2 = df2.append([df2] * (len(df1) -1), ignore_axis=True)\njoined = pd.concat([df1, df2], axis=1)\n```\n"
  }
]
