[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75941684",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-75941684",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 75941684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTQxNjg0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-25T10:59:24Z",
    "updated_at": "2015-02-25T10:59:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "there were a couple of issues w.r.t. to this that have been fixed in master, the upcoming 0.16.0 release. want to give a try. otherwise, pls `pd.show_versions()` and a small reproducible example would be helpful.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75949058",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-75949058",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 75949058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTQ5MDU4",
    "user": {
      "login": "harshnisar",
      "id": 6428892,
      "node_id": "MDQ6VXNlcjY0Mjg4OTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6428892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harshnisar",
      "html_url": "https://github.com/harshnisar",
      "followers_url": "https://api.github.com/users/harshnisar/followers",
      "following_url": "https://api.github.com/users/harshnisar/following{/other_user}",
      "gists_url": "https://api.github.com/users/harshnisar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harshnisar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harshnisar/subscriptions",
      "organizations_url": "https://api.github.com/users/harshnisar/orgs",
      "repos_url": "https://api.github.com/users/harshnisar/repos",
      "events_url": "https://api.github.com/users/harshnisar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harshnisar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-25T12:03:22Z",
    "updated_at": "2015-02-25T12:03:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "``` python\n!cat pandastrial.csv\nA,B,C\n1,2,3\n3,4,5\n1,2,4,5,1,6\n1,2,3,,,1,\n1,2,3\n5,6,7\n\nIn [3]: df = pd.read_csv('pandastrial.csv', error_bad_lines = False)\n\nSkipping line 4: expected 3 fields, saw 6\nSkipping line 5: expected 3 fields, saw 7\n\nIn [5]: df = pd.read_csv('pandastrial.csv', usecols = ['A','B','C'])\n\nCParserError: Error tokenizing data. C error: Expected 3 fields in line 4, saw 6\n```\n\nBasically, I know that there is an issue with other columns and I only trust three of them. How do I tell pandas to just read the first three values and truncate the rest?\n\n## INSTALLED VERSIONS\n\ncommit: None\npython: 2.7.9.final.0\npython-bits: 32\nOS: Windows\nOS-release: 7\nmachine: x86\nprocessor: x86 Family 6 Model 69 Stepping 1, GenuineIntel\nbyteorder: little\nLC_ALL: None\nLANG: None\n\npandas: 0.15.2\nnose: None\nCython: None\nnumpy: 1.9.1\nscipy: 0.15.1\nstatsmodels: None\nIPython: 2.3.1\nsphinx: None\npatsy: None\ndateutil: 2.4.0\npytz: 2014.10\nbottleneck: None\ntables: None\nnumexpr: None\nmatplotlib: 1.4.2\nopenpyxl: None\nxlrd: 0.9.3\nxlwt: None\nxlsxwriter: None\nlxml: None\nbs4: 4.3.2\nhtml5lib: None\nhttplib2: None\napiclient: None\nrpy2: None\nsqlalchemy: None\npymysql: None\npsycopg2: None\n\n```\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75949293",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-75949293",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 75949293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTQ5Mjkz",
    "user": {
      "login": "harshnisar",
      "id": 6428892,
      "node_id": "MDQ6VXNlcjY0Mjg4OTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6428892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harshnisar",
      "html_url": "https://github.com/harshnisar",
      "followers_url": "https://api.github.com/users/harshnisar/followers",
      "following_url": "https://api.github.com/users/harshnisar/following{/other_user}",
      "gists_url": "https://api.github.com/users/harshnisar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harshnisar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harshnisar/subscriptions",
      "organizations_url": "https://api.github.com/users/harshnisar/orgs",
      "repos_url": "https://api.github.com/users/harshnisar/repos",
      "events_url": "https://api.github.com/users/harshnisar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harshnisar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-25T12:05:49Z",
    "updated_at": "2015-02-25T12:05:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I came up with this hack.\nn_clean_cols is the first n columns I trust\nmaxcols is the maximum length of a bad row. Ideally infinity.\n\n``` python\n\ndef clean_csv(filename, n_clean_cols, maxcols = 20):\n    df = pd.read_csv(filename, names = range(maxcols), index_col = False)\n    cols = df.columns\n    rename_dict = dict([ (c, df[c][0]) for c in cols])\n    df.rename(columns = rename_dict, inplace = True)\n\n    #removing the first row which is no longer needed.\n    # df = df.drop(df.head(1).index)\n    df = df.ix[1:,:n_clean_cols]\n    return df\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76153705",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-76153705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 76153705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTUzNzA1",
    "user": {
      "login": "harshnisar",
      "id": 6428892,
      "node_id": "MDQ6VXNlcjY0Mjg4OTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6428892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harshnisar",
      "html_url": "https://github.com/harshnisar",
      "followers_url": "https://api.github.com/users/harshnisar/followers",
      "following_url": "https://api.github.com/users/harshnisar/following{/other_user}",
      "gists_url": "https://api.github.com/users/harshnisar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harshnisar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harshnisar/subscriptions",
      "organizations_url": "https://api.github.com/users/harshnisar/orgs",
      "repos_url": "https://api.github.com/users/harshnisar/repos",
      "events_url": "https://api.github.com/users/harshnisar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harshnisar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T10:18:34Z",
    "updated_at": "2015-02-26T10:18:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback  ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76386453",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-76386453",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 76386453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2Mzg2NDUz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T12:19:23Z",
    "updated_at": "2015-02-27T12:19:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "This looks like a good soln to me. I don't think `usecols` should be default ignore bad lines, which is what you are suggesting, its pretty error-prone to do that.\n\n```\nIn [2]: read_csv(StringIO(data),error_bad_lines=False,usecols=['A','B','C'])\nSkipping line 5: expected 3 fields, saw 6\nSkipping line 6: expected 3 fields, saw 7\n\nOut[2]: \n   A  B  C\n0  1  2  3\n1  3  4  5\n2  1  2  3\n3  5  6  7\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76452020",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-76452020",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 76452020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDUyMDIw",
    "user": {
      "login": "selasley",
      "id": 831833,
      "node_id": "MDQ6VXNlcjgzMTgzMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/831833?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/selasley",
      "html_url": "https://github.com/selasley",
      "followers_url": "https://api.github.com/users/selasley/followers",
      "following_url": "https://api.github.com/users/selasley/following{/other_user}",
      "gists_url": "https://api.github.com/users/selasley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/selasley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/selasley/subscriptions",
      "organizations_url": "https://api.github.com/users/selasley/orgs",
      "repos_url": "https://api.github.com/users/selasley/repos",
      "events_url": "https://api.github.com/users/selasley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/selasley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T19:04:26Z",
    "updated_at": "2015-02-27T19:04:26Z",
    "author_association": "NONE",
    "body": "I added a process_bad_lines option to the c parser for times when you want to get as much data out of a csv file with bad lines as possible without pre-processing the file.  The doc string mentions the danger of using this option.  Using it outputs WARNING lines for bad lines that are processed\n\npd.read_csv(StringIO(data),process_bad_lines=True)\nWARNING! Processing bad line 3: expected 3 fields, saw 6\nWARNING! Processing bad line 4: expected 6 fields, saw 7\n\nOut[8]: \n   A  B  C\n0  1  2  3\n1  3  4  5\n2  1  2  4\n3  1  2  3\n4  1  2  3\n5  5  6  7\n\nIt's still easy to get bad data from bad lines with this option, so it's not a cure for bad data\npd.read_csv(StringIO(data),process_bad_lines=True, header=False, names=range(6))\n   0  1  2   3   4   5\n0  1  2  3   3   4   5\n1  3  4  5   1   2   4\n2  1  2  4   5   1   6\n3  1  2  3 NaN NaN   1\n4  1  2  3 NaN NaN NaN\n5  5  6  7 NaN NaN NaN\n\nIf this is an option that would be useful I can clean up the code and create a pull request.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76486711",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-76486711",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 76486711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDg2NzEx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T22:44:03Z",
    "updated_at": "2015-02-27T22:44:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "how does this differ from my example above?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76496034",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-76496034",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 76496034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDk2MDM0",
    "user": {
      "login": "selasley",
      "id": 831833,
      "node_id": "MDQ6VXNlcjgzMTgzMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/831833?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/selasley",
      "html_url": "https://github.com/selasley",
      "followers_url": "https://api.github.com/users/selasley/followers",
      "following_url": "https://api.github.com/users/selasley/following{/other_user}",
      "gists_url": "https://api.github.com/users/selasley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/selasley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/selasley/subscriptions",
      "organizations_url": "https://api.github.com/users/selasley/orgs",
      "repos_url": "https://api.github.com/users/selasley/repos",
      "events_url": "https://api.github.com/users/selasley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/selasley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-28T00:05:02Z",
    "updated_at": "2015-02-28T00:05:02Z",
    "author_association": "NONE",
    "body": "error_bad_lines and warn_bad_lines skip over bad rows.  process_bad_lines attempts to extract data from the bad rows.  So the dataframe in your example with error_bad_lines=False contains data from lines 1,2,5,6 while the dataframe with process_bad_rows=True has data from all 6 lines.  I believe this is what the op was looking for.  process_bad_lines would be useful when you know the data in the columns your are interested in are OK even on lines in the file that contain extra columns you don't care about.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76496461",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-76496461",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 76496461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDk2NDYx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-28T00:09:25Z",
    "updated_at": "2015-02-28T00:09:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I not add a new arg then instead\nmake error_bad_lines='skip' do this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76497863",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-76497863",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 76497863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDk3ODYz",
    "user": {
      "login": "selasley",
      "id": 831833,
      "node_id": "MDQ6VXNlcjgzMTgzMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/831833?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/selasley",
      "html_url": "https://github.com/selasley",
      "followers_url": "https://api.github.com/users/selasley/followers",
      "following_url": "https://api.github.com/users/selasley/following{/other_user}",
      "gists_url": "https://api.github.com/users/selasley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/selasley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/selasley/subscriptions",
      "organizations_url": "https://api.github.com/users/selasley/orgs",
      "repos_url": "https://api.github.com/users/selasley/repos",
      "events_url": "https://api.github.com/users/selasley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/selasley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-28T00:26:08Z",
    "updated_at": "2015-02-28T00:26:08Z",
    "author_association": "NONE",
    "body": "OK, so something like this for the bad_lines options?\n\nerror_bad_lines : True, False, \"process\", default True\n    Lines with too many fields (e.g. a csv line with too many commas) will by\n    default cause an exception to be raised, and no DataFrame will be returned.\n    If False, then these \"bad lines\" will dropped from the DataFrame that is\n    returned.  If \"process\", then these \"bad lines\" will processed and added to \n    the DataFrame that is returned. (Only valid with C parser)\nwarn_bad_lines : boolean, default True\n    If error_bad_lines is False or \"process\" and warn_bad_lines is True, a \n    warning for each \"bad line\" will be output. (Only valid with C parser).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76498787",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-76498787",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 76498787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDk4Nzg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-28T00:37:57Z",
    "updated_at": "2015-02-28T00:38:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think I would change things a bit\n\nwhy don't we make a new argument (and deprecate `error_bad_lines, warn_bad_lines`)\n\n`bad_lines='error'|'warn'|'skip'|'process'`\n\ndefault would be `error` (to replicate the current back compat)\nor `warn` if `error_bad_lines=False` and `warn_bad_lines=True`\n\n`skip` would simply skip them\n`process` would only make a difference if `usecols` were specified and they were\nthen valid.\n\ntoo confusing? (or less confusing)?\n\n(obviously not all of these apply to c/python parsers but that is a separate issue)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76956395",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-76956395",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 76956395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTU2Mzk1",
    "user": {
      "login": "harshnisar",
      "id": 6428892,
      "node_id": "MDQ6VXNlcjY0Mjg4OTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6428892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harshnisar",
      "html_url": "https://github.com/harshnisar",
      "followers_url": "https://api.github.com/users/harshnisar/followers",
      "following_url": "https://api.github.com/users/harshnisar/following{/other_user}",
      "gists_url": "https://api.github.com/users/harshnisar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harshnisar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harshnisar/subscriptions",
      "organizations_url": "https://api.github.com/users/harshnisar/orgs",
      "repos_url": "https://api.github.com/users/harshnisar/repos",
      "events_url": "https://api.github.com/users/harshnisar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harshnisar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T14:37:05Z",
    "updated_at": "2015-03-03T14:37:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@selasley  Yes. That is what I wanted. My work involved checking csv's which over the years some people had edited and added comments etc. But the data was clean, the parts I wanted atleast.\n\nI finally used the hack I have mentioned earlier. But it was a little slow and dirty. How did you implement it initially?\n\n@jreback Your last comment makes sense. I didn't find it that confusing. Maybe something other than `process`. Maybe `force` ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76997594",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-76997594",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 76997594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTk3NTk0",
    "user": {
      "login": "selasley",
      "id": 831833,
      "node_id": "MDQ6VXNlcjgzMTgzMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/831833?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/selasley",
      "html_url": "https://github.com/selasley",
      "followers_url": "https://api.github.com/users/selasley/followers",
      "following_url": "https://api.github.com/users/selasley/following{/other_user}",
      "gists_url": "https://api.github.com/users/selasley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/selasley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/selasley/subscriptions",
      "organizations_url": "https://api.github.com/users/selasley/orgs",
      "repos_url": "https://api.github.com/users/selasley/repos",
      "events_url": "https://api.github.com/users/selasley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/selasley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T17:54:25Z",
    "updated_at": "2015-03-03T17:54:25Z",
    "author_association": "NONE",
    "body": "@harshnisar I am modifying the python, cython and c files for the parser and tokenizer so bad_lines will eventually be available in a release version of pandas.\n\nWhat do you think about this\n\nbad_lines : string, {'error', 'skip', or 'keep'}, default 'error'\n    Specifies how to handle lines with too many fields in the input file, \n    e.g. a csv line with too many commas.\n    'error' will raise an exception when the first bad line is enocuntered.\n    and will not return a DataFrame.\n    'skip' will skip bad lines and continue processing the input file. \n    'keep' will attempt to process the bad lines and include the data in \n    the DataFrame that is returned.  The 'keep' option requires the usecols \n    option to specify the good columns in the input file. \n    (Only valid with C parser)\nerror_bad_lines : deprecated, boolean, default True\n    Lines with too many fields (e.g. a csv line with too many commas) will by\n    default cause an exception to be raised, and no DataFrame will be returned.\n    If False, then these \"bad lines\" will dropped from the DataFrame that is\n    returned. (Only valid with C parser)\nwarn_bad_lines : boolean, default True\n    If warn_bad_lines is True, a warning for each \"bad line\" will be output.\n    (Only valid with C parser).\n\nI vote to keep warn_bad_lines in order to turn warnings on or off with the skip and keep options.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77142065",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-77142065",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 77142065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MTQyMDY1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T11:27:51Z",
    "updated_at": "2015-03-04T11:27:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@selasley why would you need `warn_bad_lines` in addition to the 6 options above?\n\nmaybe enumerate what the other 3, e.g. `skipwarn/keepwarn/errorwarn` mean/do? (I think the last one is a bit odd, maybe make it just warn)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77166039",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-77166039",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 77166039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MTY2MDM5",
    "user": {
      "login": "harshnisar",
      "id": 6428892,
      "node_id": "MDQ6VXNlcjY0Mjg4OTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6428892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harshnisar",
      "html_url": "https://github.com/harshnisar",
      "followers_url": "https://api.github.com/users/harshnisar/followers",
      "following_url": "https://api.github.com/users/harshnisar/following{/other_user}",
      "gists_url": "https://api.github.com/users/harshnisar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harshnisar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harshnisar/subscriptions",
      "organizations_url": "https://api.github.com/users/harshnisar/orgs",
      "repos_url": "https://api.github.com/users/harshnisar/repos",
      "events_url": "https://api.github.com/users/harshnisar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harshnisar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T14:25:08Z",
    "updated_at": "2015-03-04T14:28:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@selasley \nWhy do we need to always specify usecols?\nCan't we by default take the number of columns in the first row as the ones we want. This would go with the assumption that the first row is always clean.\n\nThe heuristic way would be to take the most frequent row length as the default. But is this an overkill? \n\nAlso, warning as a different argument seems more intuitive too.  I vote for that too, if it counts :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77202232",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-77202232",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 77202232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjAyMjMy",
    "user": {
      "login": "selasley",
      "id": 831833,
      "node_id": "MDQ6VXNlcjgzMTgzMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/831833?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/selasley",
      "html_url": "https://github.com/selasley",
      "followers_url": "https://api.github.com/users/selasley/followers",
      "following_url": "https://api.github.com/users/selasley/following{/other_user}",
      "gists_url": "https://api.github.com/users/selasley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/selasley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/selasley/subscriptions",
      "organizations_url": "https://api.github.com/users/selasley/orgs",
      "repos_url": "https://api.github.com/users/selasley/repos",
      "events_url": "https://api.github.com/users/selasley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/selasley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T17:20:30Z",
    "updated_at": "2015-03-04T17:20:30Z",
    "author_association": "NONE",
    "body": "@jreback\nMy second post was a possible scheme for deprecating both error_bad_lines and warn_bad_lines when adding bad_lines.  It seemed hacky to me even as I was writing it so I deleted it.  I would like to keep warn_bad_lines if you don't have strong objections, deprecate error_bad_lines and add bad_lines with three options error, skip, keep.\n\n@harshnisar\nI misread jreback's post regarding usecols.  The code I've written so far does not require it so I'll remove that section of the docstring for the keep option.  Using the most frequent row length would require reading the file twice or keeping data for each row in memory.  This could be a problem for very large files.  If a user needs information from the extra columns in the bad rows they can do something like this for the data string used above\n\n```\n read_csv(StringIO(data), bad_lines='keep',names=list('ABCDEF'),skiprows=1)) \n    A  B  C   D   E   F\n 0  1  2  3 NaN NaN NaN\n 1  3  4  5 NaN NaN NaN\n 2  1  2  4   5   1   6\n 3  1  2  3 NaN NaN   1\n 4  1  2  3 NaN NaN NaN\n 5  5  6  7 NaN NaN NaN\n```\n\nI'm still working on the code.  For example, I would like to make header=False work as well as skiprows=1 when they are used with bad_lines='keep' \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272301930",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-272301930",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 272301930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjMwMTkzMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-12T22:18:30Z",
    "updated_at": "2017-01-12T22:18:30Z",
    "author_association": "MEMBER",
    "body": "@selasley I think the addition described here for processing bad lines would be very useful. Do you still want to make a PR for this? Or just push your code to a branch on your fork so somebody else could use it?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272310611",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9549#issuecomment-272310611",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9549",
    "id": 272310611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjMxMDYxMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-12T22:57:06Z",
    "updated_at": "2017-01-12T22:57:06Z",
    "author_association": "MEMBER",
    "body": "Closing this in favor of #15122, the discussion here was a bit buried under the original related but different issue report"
  }
]
