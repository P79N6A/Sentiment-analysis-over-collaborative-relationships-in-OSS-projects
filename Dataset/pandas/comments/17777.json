[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334163635",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17777#issuecomment-334163635",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17777",
    "id": 334163635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDE2MzYzNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T13:57:03Z",
    "updated_at": "2017-10-04T13:57:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is pretty non-idiomatic, and you are pretty much on your own here. you *could* do it by just using a list/tuple around it\r\n\r\n\r\n```\r\nIn [14]: df.loc[0, 'a'] = [dict(x=2)]\r\n\r\nIn [15]: df\r\nOut[15]: \r\n            a    b\r\n0  [{'x': 2}]  NaN\r\n1         NaN  NaN\r\n2         NaN  NaN\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354184542",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17777#issuecomment-354184542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17777",
    "id": 354184542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDE4NDU0Mg==",
    "user": {
      "login": "aaclayton",
      "id": 2468703,
      "node_id": "MDQ6VXNlcjI0Njg3MDM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2468703?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aaclayton",
      "html_url": "https://github.com/aaclayton",
      "followers_url": "https://api.github.com/users/aaclayton/followers",
      "following_url": "https://api.github.com/users/aaclayton/following{/other_user}",
      "gists_url": "https://api.github.com/users/aaclayton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aaclayton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aaclayton/subscriptions",
      "organizations_url": "https://api.github.com/users/aaclayton/orgs",
      "repos_url": "https://api.github.com/users/aaclayton/repos",
      "events_url": "https://api.github.com/users/aaclayton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aaclayton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-27T22:05:35Z",
    "updated_at": "2017-12-27T22:05:35Z",
    "author_association": "NONE",
    "body": "Encountered the same issue, had two thoughts:\r\n\r\nStoring a dict within a DataFrame is unusual, but there are valid cases where software may be using Pandas as a way to represent and manipulate arbitrary key/value style data where the data is indexed in a way that makes sense for panel representation.\r\n\r\nThe behavior that location based indexing will update columns based on the keys/values of a provided dictionary was a surprise to me. This is a cool convenience feature that makes sense when an explicit column is not referenced. For example, when providing:\r\n\r\n`df.loc[row, :] = dict(key1=value1, key2=value2)`\r\n\r\nIt makes sense that the keys of the dictionary might be written as columns and that `df.loc[row, key1] == value1`. However, when providing an explicit column index, inferring the target columns from a provided dictionary is (to me) counter-intuitive. If I instead supply:\r\n\r\n`df.loc[row, col] = dict(key=value)`\r\n\r\nI am explicitly denoting that I want to store the entire value in the `col` column, and I would expect the dictionary to be inserted as-is.\r\n\r\nAnyways, I agree with @jreback that this is somewhat non-idiomatic BUT I am sympathetic to the original issue raised by @andreas-thomik. I encountered a problem where trying to store a dict to an element of a dataframe using this syntax made sense for the particular problem I was facing, so he isn't entirely on his own with this request."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354296003",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17777#issuecomment-354296003",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17777",
    "id": 354296003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDI5NjAwMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-28T14:23:39Z",
    "updated_at": "2017-12-28T14:23:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@aaclayton this is related to #18955 . We could/should prob supporting setting scalars of dicts better (and other iterables). Its a bit tricky though."
  }
]
