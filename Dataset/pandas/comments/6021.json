[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32818351",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-32818351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 32818351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODE4MzUx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-21T03:24:27Z",
    "updated_at": "2014-01-21T03:24:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "what happens if their are mixed formats in a list of strings?\n\ndoes it gues based in 1st? (eg how do u sample what to guess)\n\nI suppose that some formats if they are mixed will cause the reader to barf - so maybe have some tests\n\nand prob just need to document this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32886360",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-32886360",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 32886360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg2MzYw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-21T13:53:04Z",
    "updated_at": "2014-01-21T13:54:15Z",
    "author_association": "NONE",
    "body": "Looking good: unintrusive, covers the major use case and has a good bang/buck ratio.\n\nNotes: \n- avoid different names for the same keyword arg in different places.\n- I agree with basics first, the case  where the first line contains a nan for the date is important \n  enough to handle though.\n- The iso8601 fallback is nice touch, are you sure there are no other major variations?\n- as jreback asked, sane behavior when the consistent format assumption is violated is important\n  and deserves a test and some description.\n- Please add a test for a series that contains nan. Even if you're reusing existign code paths.\n\nAs far as generality,  I think this is hits a balance nearly perfectly. marking it for 0.14.\n\na future iteration could tackle the case of multiple date formats in a column:\n- exploiting locality (runs of the same format) \n- or an optimistic cache of seen-so-far format-strings prioritized by hit-counts. \n\nThose are just for fun though,  this already delivers what we really care about.\n\n:+1:\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32887262",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-32887262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 32887262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg3MjYy",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-21T14:04:45Z",
    "updated_at": "2014-01-22T00:51:49Z",
    "author_association": "NONE",
    "body": "two more:\n- there's another fast path @jreback added in #4826, '%Y%m%d'.\n- The guessing code refines my quick snippet which took a shortcut by not handling\n  something like `2011-01-1 00:00:00`, where the repeated values defy naive guessing. \n  Unfortunately, round times are fairly common and dateutil fills in such a default for missing fields:\n  \n  ```\n  In [3]: parse('2011-02-01')\n  Out[3]: datetime.datetime(2011, 2, 1, 0, 0)\n  ```\n  \n  both will flubber the hit rate in real usage. ideas? perhaps putting sentinels values\n  in the defaults used by `parse()` can disambiguate.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32888461",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-32888461",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 32888461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg4NDYx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-21T14:19:44Z",
    "updated_at": "2014-01-22T00:50:45Z",
    "author_association": "NONE",
    "body": "One more:\nUsing a different lexer from dateutil has a high prob. of incompat behavior in some cases.\nif you prefer not call a `_foo` method in dateutil  inside a try/except, dateutil is BSD\nand you can just copy the lexing function and throw a license in `LICENSES/`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32989451",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-32989451",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 32989451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTg5NDUx",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T03:00:28Z",
    "updated_at": "2014-01-22T03:00:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alright, updated version:\n- Switched to `_timelex`, which allows for dates like \"30/Dec/2011\" to be parsed.  If you want I can go extremely cautious and put the `_timelex` import in a special section so pandas will survive if that breaks in a future version of `dateutil`.\n- Added in logic so it will use the `dayfirst` parameter if you pass that to `to_datetime` to help infer the right format\n- Changed `datetime_format` back to `format`.  I wanted to switch away from using a python built-in function name, but at this point it really is too late for that so I see it just adds confusion.\n- Yes, iso8601 (and substrings thereof) are the only fast-path variations -- this happens in `array_to_datetime`\n- This doesn't interfere with the `%Y%m%d` fast-path, but it additionally doesn't help that path, because `_guess_datetime_format()` can't guess that one as of right now.\n- Changed logic to base the format on the first non-nan string in the array (using the logic `arr[com.notnull(arr).nonzero()[0][0]]` which seems to be right to me, but I really pulled that out of my ass so have no clue --- it seems to work though and it is fast)\n- Added a bunch of tests for: dealing with nans, dealing with strings with various formats (which actually was broken before), more strings.\n\nOddities:\n- `_timelex` breaks in dateutil2.2 unless you do the `StringIO(str(datetime_string))` thing\n- Any of the tests for parsing month names can fail when the locale is set (because \"%b\" might be \"Dec\" in one locale, or \"Dic\" in another one).  So I made those tests skip if the locale is set.  I think if you have a non-US locale and your datetime strings are of the format \"12/Dic/2011\" then you wont get the speed-up because dateutil won't properly parse that.\n\nOther things:\n- The fact that `dateutil` does fill in some defaults but I don't think this is that big of a problem.  In any situation if the guessed format is proved to be wrong in practice, then all results are ignored and it just falls back to the default (which will be 10% slower to so, but the results will be the same).  Also with `dayfirst` you do have a little control over helping it infer the right thing.\n- This doesn't support timezones right now because `_timelex` doesn't parse them out properly.  I think it is a relatively easy fix (good for a future change), but it will require some addition filtering of the `_timelex` result which I didn't want to add into this change (further complicating an already complicated change).\n- As of right now, this inferring feature is set to `False` for both `to_datetime` and `read_csv`, which is certainly the safest thing.  Maybe it would want to be set to `True` at some point, I really don't know how you evaluation the risk/reward for such a thing.  In theory it should almost never be slower, often be significantly faster, and if it provides different values than the default then your entire input case was technically ambiguous to begin with.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33023491",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33023491",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33023491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDIzNDkx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T13:53:02Z",
    "updated_at": "2014-01-22T13:53:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "instead of adding infer_datetime_format to read_csv\n\ncan u just intercept parse_dates='infer'\n\nand if it's a dict maybe could for individual fields (if parse_dates is a list might be trickier)\n\nI am normally against overloading too much \nbut I. this case seems natural\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33023941",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33023941",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33023941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDIzOTQx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T13:57:14Z",
    "updated_at": "2014-01-22T13:57:14Z",
    "author_association": "NONE",
    "body": "oh. oh nice. yeah. you're against overloading. sure. \n\nhehe :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33025343",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33025343",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33025343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDI1MzQz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T14:10:53Z",
    "updated_at": "2014-01-22T14:10:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "closet overloader :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33027416",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33027416",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33027416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDI3NDE2",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T14:29:52Z",
    "updated_at": "2014-01-22T14:29:52Z",
    "author_association": "NONE",
    "body": "I was thinking \"filthy liar\" but close enough :).\n\n@danbirken \n- fine on punting for locale/tz\n- yes, if we're relying on the dateutil lexer the whole infer machinery should silenty fallback\n  to the old path. I'm assuming the tests will let us know if dateutil makes a breaking change.\n- Since the `%Y%m%d` fastpath makes such a difference, I think testing specifically for it\n  if the parse() roundtrip doesn't match would be good.\n- I disagree on the the dateutil defaults not mattering, since we're inferring the format string\n  from a single data point. That will appear as widely divergent perf for basically identical datasets if one\n  of them happens to have a bad datum as the first. It's not a blocker, but 0.14 will be in dev for \n  a few months,  it would be nice to remove that limitation.\n\nOn risk/defaults, I suggest we ship this as off by default in 0.14, give it a prominent place\nin the ANN, and if it proves stable we can make it the default in a future release.\n\nI'd like to avoid making non-battle-tested code the default for everyone's production\ncode, even if it's a big perf win. @jreback?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33028115",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33028115",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33028115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDI4MTE1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T14:36:46Z",
    "updated_at": "2014-01-22T14:36:46Z",
    "author_association": "CONTRIBUTOR",
    "body": ":+1: on 0.14.0 (though could put in 0.13.1 if its turned off by default)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33030967",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33030967",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33030967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDMwOTY3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T15:06:42Z",
    "updated_at": "2014-01-22T15:07:11Z",
    "author_association": "NONE",
    "body": "You're totally right. @danbirken if you can sort out the remaining issues let's just ship it next\nweek in 0.13.1. the only blocker from my notes is the handling of `_timelex` import failures, the rest is just nice to have.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33035567",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33035567",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33035567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDM1NTY3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T15:51:01Z",
    "updated_at": "2014-01-22T15:51:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@danbirken \n\nwhy don't you just have an import flag in `tseries/tools.py` something like '_DATEUTIL_LEXER`\n\nand set it if the function exists\n\nwe do this when we want to know at run-time if a module exists, but no reason why you can't do this \nfor a function (see `pandas.computation.expressions.py` for the way numexpr is handled)\n\nthen your guesser can decide what to do based on the availability of the dateutil function?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33035569",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33035569",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33035569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDM1NTY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T15:51:01Z",
    "updated_at": "2014-01-22T15:51:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@danbirken \n\nwhy don't you just have an import flag in `tseries/tools.py` something like '_DATEUTIL_LEXER`\n\nand set it if the function exists\n\nwe do this when we want to know at run-time if a module exists, but no reason why you can't do this \nfor a function (see `pandas.computation.expressions.py` for the way numexpr is handled)\n\nthen your guesser can decide what to do based on the availability of the dateutil function?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33085327",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33085327",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33085327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDg1MzI3",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-23T00:26:46Z",
    "updated_at": "2014-01-23T00:26:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "- If `_timelex` or `_timelex.split` doesn't exist, pandas will work fine except for this feature, which just will do nothing.\n- I added `%Y%m%d` support to `_guess_datetime_format`.  Unlike the iso-8601 fast-path, this particular fast-path is actually hard to opt into (I don't think you can do it from `read_csv`), but now `infer_datetime_format` will do it for you if enabled.  This is about a ~20-30x speedup for those cases.\n- As for overloading `parse_dates`, I think adding a new field is better for 2 reasons.\n1. `parse_dates` already supports a wide variety of input formats, which makes squeezing in something else more complicated.\n2. Since this is theoretically going from not-enabled to enabled by default, having it be a separate field is really nice because we can flip the one boolean value and that is that.  If it were in `parse_dates`, then to flip it we would probably have to add in something like `parse_dates='not_infer'` (and keep supporting `parse_dates='infer'`) for the people who explicitly want to opt-out for whatever reason, which would be really confusing.\n- As for the sentinel values, I thought a lot about this.  We can use `dateutil.parser.DEFAULTPARSER._parse` which gives the raw values without any defaults (I tried a bunch of ways to trick `dateutil.parser.parse` into doing it for me, and couldn't find a way).  However, it is using another private method and requires essentially repeating existing/tested/good code in `dateutil.parser.parse` to get it into a proper datetime.  So I thought about doing this, but as it turns out, the fact that `datetime.datetime` puts 0 as default values is fine.  0 is a nice sentinel value, because 0 is invalid for both month and day, the only two fields it could possibly be confused with (as of right now, this function only supports 4-digit years).  So the only potential failure mode is that a datetime like: `\"2011/01/01 00:00\"` will default to `\"%Y/%m/%d %H:%M\"`.  This is ambiguous, as the time-string could be referring to `%H:%M` or `%M:%S` (but it seems incredibly likely it is `%H:%M`, which is the default guess).  It is impossible for something like \"2011/01/01\" to be mis-guessed as \"%Y/%M/%S\", because 0 is an invalid value for either month or date so they will be immediately ignored.\n\nHowever, the situation isn't perfect.  It will still mess up cases a human wouldn't:\n\n```\nIn [4]: tools._guess_datetime_format('01:01 2011/01/01')\nOut[4]: '%m:%d %Y/%H/%M'  # wrong!\n\nIn [6]: tools._guess_datetime_format('00:00 2011/01/01')\nOut[6]: '%H:%M %Y/%m/%d'  # right!\n```\n\nBut sentinel values don't actually improve this case, this is just a problem with the current guessing method.  However, this is a pretty rare edge case, as pretty much every standard datetime format puts the Y-m-d information first, which is what the guesser expects.\n\nSo in conclusion, I think the sentinel values of 0 are actually perfectly good and I can't think of any case where they cause the guesser to do the wrong thing.\n\n---\n\nNew questions:\n\nAssuming everybody is content with adding the `infer_datetime_format` keyword to `read_csv`, should I also add this to `Series.from_csv` and `DataFrame.from_csv`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33086160",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33086160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33086160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDg2MTYw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-23T00:39:23Z",
    "updated_at": "2014-01-23T00:39:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "you can add to the `from_csv` methods, though they apparently have `parse_dates=True` as a default IIRC (and eventually / their is an open issue) to deprectate these, but until then I guess should be in sync.\n\nseparate issue: \n\nif you use the separate option (ok by me then :)) in theory it should be able to take a list of columns, because you might want to only infer on certain columns (annoying but prob needed)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33086213",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33086213",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33086213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDg2MjEz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-23T00:40:08Z",
    "updated_at": "2014-01-23T00:40:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@danbirken also will need an example in v0.13.1.txt (and you can use the same example) in io.rst (which you can prob use from a test you have anyhow)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33118514",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33118514",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33118514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTE4NTE0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-23T12:09:28Z",
    "updated_at": "2014-01-23T12:26:00Z",
    "author_association": "NONE",
    "body": "- If dateutil breaks we can't detect the regression currently, please add a vbench.\n- about overloading `parse_dates`, you're right that adding it there would make some usage impossible.\n  It could be another possible value for `date_parser=\"infer\"`. but read_csv is such a monster already that, meh, whatever. Keep the kwarg, however...\n- The new kwarg is still named differently in `to_csv` vs `to_datetime`.\n- Please always add new keyword at the tail position of the signature (right before the catch-all **kwds if\n  there is one). yes it's grouped logically now, no, no-one really uses positional args when you have 30 kwargs.\n  This is the general pattern we follow and we stick to it.\n\nI'm convinced by your points on the sentinals idea.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33192199",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33192199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33192199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTkyMTk5",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T02:27:44Z",
    "updated_at": "2014-01-24T02:28:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added vbench, fixed kwarg ordering, made keyword consistent everywhere (`infer_datetime_format`), added documentation to both io.rst and 13.1.txt, added kwarg to `from_csv`s\n\nHere is a link just to the changes from this round (the \"official\" pull request has all of these smashed together, but that makes it harder to review.  Hopefully this helps): https://github.com/danbirken/pandas/compare/731120f3305b1ca2bea9c7bac8742388bd30e632...6ed08d1945bb7b3dc0fc8ebecfb53b4e52a2b7f9\n\nI admit I am saying this partially out of laziness, but making `infer_datetime_format` support all of the variations that `parse_dates` really is a headache.  It gives people the possibility of doing inconsistent/weird things (`parse_dates=[[1,4],], infer_datetime_format=[1,]`) that would have to be checked somehow.  Additionally, I think this is such a rare case that if for some reason inferring the datetime format is bad for some, but not all, of your date columns, disabling it for everything is an appropriate solution.  Since this is purely about performance, those rare people will not get this optimization, but it wont change their data or cause them harm in any other way.  And finally, if there is a large clamoring for it in the future, it can always be added on without any BC problems.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33192472",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33192472",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33192472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTkyNDcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T02:33:40Z",
    "updated_at": "2014-01-24T02:33:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@danbirken agree with your point about infer_datetime_format just being a boolean\n\nlooks good\n\nwould add the YYYYMMDD format to the common parsed format section\n\ncan u post a run of the new vbenches?\n\notherwise looks good!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33192933",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33192933",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33192933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTkyOTMz",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T02:43:57Z",
    "updated_at": "2014-01-24T02:48:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated docs.\n\nHere are the vbench outputs from my machine:\n\nWith `infer_datetime_format=True`:\n\n```\n---------------------------------------------------------\nTest name                                    |    #0    |\n---------------------------------------------------------\nread_csv_infer_datetime_format_custom        |  13.5159 |\nread_csv_infer_datetime_format_iso8601       |   2.0467 |\nread_csv_infer_datetime_format_ymd           |   2.4966 |\n---------------------------------------------------------\nTest name                                    |    #0    |\n---------------------------------------------------------\n```\n\nWhen I manually set them to False (I don't know another way\nto do this, otherwise I get nan's because the kw doesn't exist)\n\n```\n---------------------------------------------------------\nTest name                                    |    #0    |\n---------------------------------------------------------\nread_csv_infer_datetime_format_custom        | 130.3443 |\nread_csv_infer_datetime_format_iso8601       |   1.4033 |\nread_csv_infer_datetime_format_ymd           |  62.3440 |\n---------------------------------------------------------\nTest name                                    |    #0    |\n---------------------------------------------------------\n```\n\nThe iso8601 one is a little slower, which makes sense because the extra time of guessing the format has to be taken into account, and you don't actually get any speedup.  I don't know what these time units are, but in an absolute real-world sense I don't think the difference is a big deal.  The bigger your input case, the less this difference will be felt additionally.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33215315",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33215315",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33215315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjE1MzE1",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T11:22:07Z",
    "updated_at": "2014-01-24T11:22:07Z",
    "author_association": "NONE",
    "body": "Let's call this after the doc tweaks, it's plenty good enough to merge.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33215582",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33215582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33215582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjE1NTgy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T11:26:54Z",
    "updated_at": "2014-01-24T11:26:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p merge away\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33229082",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33229082",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33229082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjI5MDgy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T14:59:41Z",
    "updated_at": "2014-01-24T14:59:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "this going to close #5490 \n@danbirken (you had put related....any reason not to close that issue?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33264761",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33264761",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33264761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjY0NzYx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T21:50:14Z",
    "updated_at": "2014-01-24T21:50:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@danbirken thanks for this ! awesome!!!!\n\npls check docs and behavior....if need a small followup can easily put in 0..13.1!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33265173",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33265173",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33265173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjY1MTcz",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T21:55:14Z",
    "updated_at": "2014-01-24T21:55:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm packing for a flight right now, but I'll get to those doc fixes when I'm on the plane in a few hours.  I misunderstood the formatting and that was a case of copy/pasting gone wrong!\n\nAnd yes, this should close that issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33265313",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33265313",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33265313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjY1MzEz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T21:56:44Z",
    "updated_at": "2014-01-24T21:56:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@danbirken gr8! doc updates can take anytime....\n\nthanks again!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33265342",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33265342",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33265342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjY1MzQy",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T21:57:04Z",
    "updated_at": "2014-01-24T21:57:04Z",
    "author_association": "NONE",
    "body": "I'll push a release note thanking @lexual and @danbirken \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33265419",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6021#issuecomment-33265419",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6021",
    "id": 33265419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjY1NDE5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T21:58:02Z",
    "updated_at": "2014-01-24T21:58:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure\n"
  }
]
