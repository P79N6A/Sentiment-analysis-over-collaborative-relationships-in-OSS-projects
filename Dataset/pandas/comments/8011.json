[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52299580",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8011#issuecomment-52299580",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8011",
    "id": 52299580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjk5NTgw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-15T12:13:26Z",
    "updated_at": "2014-08-15T12:13:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you show an example of usage\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52703246",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8011#issuecomment-52703246",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8011",
    "id": 52703246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzAzMjQ2",
    "user": {
      "login": "rkyleg",
      "id": 4260414,
      "node_id": "MDQ6VXNlcjQyNjA0MTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4260414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkyleg",
      "html_url": "https://github.com/rkyleg",
      "followers_url": "https://api.github.com/users/rkyleg/followers",
      "following_url": "https://api.github.com/users/rkyleg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkyleg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkyleg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkyleg/subscriptions",
      "organizations_url": "https://api.github.com/users/rkyleg/orgs",
      "repos_url": "https://api.github.com/users/rkyleg/repos",
      "events_url": "https://api.github.com/users/rkyleg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkyleg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-19T21:41:24Z",
    "updated_at": "2014-08-19T21:42:26Z",
    "author_association": "NONE",
    "body": "Sure, code below is taken from my script that is using the workbook.parse() method to return the iterable object. Before I changed 'return parser.read()' to just 'return parser' in the code above, this did not work as it would return each 'cell' of data in the dataframe in the 'for chunk' loop rather than each row. \n\n``` python\ndf = workbook.parse(sheetname, chunksize=2000, iterator=True)\nfor chunk in df:\n       df = chunk.where(pandas.notnull(chunk), None)\n       df.to_sql(name='table_name', con=self.engine, if_exists='append', index=False)\n```\n"
  }
]
