[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/459032911",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25006#issuecomment-459032911",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25006",
    "id": 459032911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTAzMjkxMQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T17:26:37Z",
    "updated_at": "2019-01-30T17:26:37Z",
    "author_association": "MEMBER",
    "body": "Thanks for the issue and clear example. I think `skipna` could make sense as an argument here. PRs are always welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/462153438",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25006#issuecomment-462153438",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25006",
    "id": 462153438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjE1MzQzOA==",
    "user": {
      "login": "albertvillanova",
      "id": 8515462,
      "node_id": "MDQ6VXNlcjg1MTU0NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8515462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertvillanova",
      "html_url": "https://github.com/albertvillanova",
      "followers_url": "https://api.github.com/users/albertvillanova/followers",
      "following_url": "https://api.github.com/users/albertvillanova/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertvillanova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertvillanova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertvillanova/subscriptions",
      "organizations_url": "https://api.github.com/users/albertvillanova/orgs",
      "repos_url": "https://api.github.com/users/albertvillanova/repos",
      "events_url": "https://api.github.com/users/albertvillanova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertvillanova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-10T17:26:48Z",
    "updated_at": "2019-02-10T17:26:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd and what should be the expected result for a DataFrame with non-aligned NaNs?\r\n```python\r\ndf = pd.DataFrame({'a': [np.nan, 1., 2., 3., np.nan, 4., np.nan], \r\n                   'b': [np.nan, np.nan,  1.,  2.,  3., np.nan,  4.]})\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/462198723",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25006#issuecomment-462198723",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25006",
    "id": 462198723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjE5ODcyMw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-11T01:02:57Z",
    "updated_at": "2019-02-11T01:02:57Z",
    "author_association": "MEMBER",
    "body": "@albertvillanova not sure I understand the distinction you are trying to make; this should work against each series in a DataFrame individually"
  }
]
