[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/453271492",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24698#issuecomment-453271492",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24698",
    "id": 453271492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzI3MTQ5Mg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-10T22:03:03Z",
    "updated_at": "2019-01-10T22:03:03Z",
    "author_association": "MEMBER",
    "body": "Unfortunately there's not a lot to diagnose with the information provided. Are you sure you aren't generating some kind of cartesian product?\r\n\r\nFWIW I'm not sure what the `mem_usage` function you are using is but those numbers seem way off from what I'd expect with normal construction\r\n\r\n```python\r\nIn [12]: pd.DataFrame(np.zeros((28858789, 20))).info()                                                                       \r\n<class 'pandas.core.frame.DataFrame'>\r\nRangeIndex: 28858789 entries, 0 to 28858788\r\nData columns (total 20 columns):\r\n0     float64\r\n1     float64\r\n2     float64\r\n3     float64\r\n4     float64\r\n5     float64\r\n6     float64\r\n7     float64\r\n8     float64\r\n9     float64\r\n10    float64\r\n11    float64\r\n12    float64\r\n13    float64\r\n14    float64\r\n15    float64\r\n16    float64\r\n17    float64\r\n18    float64\r\n19    float64\r\ndtypes: float64(20)\r\nmemory usage: 4.3 GB\r\n\r\nIn [13]: pd.DataFrame(np.zeros((28858505, 2))).info()                                                                        \r\n<class 'pandas.core.frame.DataFrame'>\r\nRangeIndex: 28858505 entries, 0 to 28858504\r\nData columns (total 2 columns):\r\n0    float64\r\n1    float64\r\ndtypes: float64(2)\r\nmemory usage: 440.3 MB\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/453374380",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24698#issuecomment-453374380",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24698",
    "id": 453374380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzM3NDM4MA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T04:27:13Z",
    "updated_at": "2019-01-11T04:27:13Z",
    "author_association": "MEMBER",
    "body": "Closing as unfortunately this isn't reproducible and lacks some necessary info. If you can provide code to reproduce the issue feel free to reopen"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/453625833",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24698#issuecomment-453625833",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24698",
    "id": 453625833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzYyNTgzMw==",
    "user": {
      "login": "Shellcat-Zero",
      "id": 5893998,
      "node_id": "MDQ6VXNlcjU4OTM5OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5893998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Shellcat-Zero",
      "html_url": "https://github.com/Shellcat-Zero",
      "followers_url": "https://api.github.com/users/Shellcat-Zero/followers",
      "following_url": "https://api.github.com/users/Shellcat-Zero/following{/other_user}",
      "gists_url": "https://api.github.com/users/Shellcat-Zero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Shellcat-Zero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Shellcat-Zero/subscriptions",
      "organizations_url": "https://api.github.com/users/Shellcat-Zero/orgs",
      "repos_url": "https://api.github.com/users/Shellcat-Zero/repos",
      "events_url": "https://api.github.com/users/Shellcat-Zero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Shellcat-Zero/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T19:13:39Z",
    "updated_at": "2019-01-11T19:29:49Z",
    "author_association": "NONE",
    "body": "@WillAyd I'll try to get you a reproducible example.  My dataframes consist mostly of string objects rather than floats.  Here is my `mem_usage` function:\r\n```python\r\ndef mem_usage(pandas_obj):\r\n    if isinstance(pandas_obj,pd.DataFrame):\r\n        usage_b = pandas_obj.memory_usage(deep=True).sum()\r\n    else: # we assume if not a df it's a series\r\n        usage_b = pandas_obj.memory_usage(deep=True)\r\n    usage_mb = usage_b / 1024 ** 2 # convert bytes to megabytes\r\n    return \"{:03.2f} MB\".format(usage_mb)\r\n```\r\n\r\n\r\nCan you elaborate on what cartesian product you are referring to?  The nature of the left merge should imply that the length of the resulting dataframe will match the left (ccn) dataframe supplied to the argument, regardless of whether or not any names matched between the 2 dataframes.  The 'name' column in `namemaps` are all unique in the series of that dataframe, while there exist duplicates in the 'name' column of `ccn`."
  }
]
