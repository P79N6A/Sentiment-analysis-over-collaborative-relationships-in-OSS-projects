[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39109442",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6751#issuecomment-39109442",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6751",
    "id": 39109442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTA5NDQy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T16:28:53Z",
    "updated_at": "2014-03-31T16:29:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "show your definition of `XSeries`. Why are you using a custom Series?\n\nversion of pandas/numpy\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39113768",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6751#issuecomment-39113768",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6751",
    "id": 39113768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTEzNzY4",
    "user": {
      "login": "wrobell",
      "id": 105664,
      "node_id": "MDQ6VXNlcjEwNTY2NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/105664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wrobell",
      "html_url": "https://github.com/wrobell",
      "followers_url": "https://api.github.com/users/wrobell/followers",
      "following_url": "https://api.github.com/users/wrobell/following{/other_user}",
      "gists_url": "https://api.github.com/users/wrobell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wrobell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wrobell/subscriptions",
      "organizations_url": "https://api.github.com/users/wrobell/orgs",
      "repos_url": "https://api.github.com/users/wrobell/repos",
      "events_url": "https://api.github.com/users/wrobell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wrobell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T17:06:06Z",
    "updated_at": "2014-03-31T17:06:06Z",
    "author_association": "NONE",
    "body": "Pandas 0.12.0, Numpy 1.7.1 and Python 3.3.2.\n\nI will confirm the issue with Pandas 0.13.1 and Numpy 1.8.1 in few hours.\n\nThe `XSeries` is simply defined as in the example above.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39115182",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6751#issuecomment-39115182",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6751",
    "id": 39115182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTE1MTgy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T17:18:38Z",
    "updated_at": "2014-03-31T17:18:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "won't work with 0.12 at all.\n\nyou would need to define the `_constructor` propery in DataFrame as well.\n\nWhat is your usecase for doing this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39115681",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6751#issuecomment-39115681",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6751",
    "id": 39115681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTE1Njgx",
    "user": {
      "login": "wrobell",
      "id": 105664,
      "node_id": "MDQ6VXNlcjEwNTY2NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/105664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wrobell",
      "html_url": "https://github.com/wrobell",
      "followers_url": "https://api.github.com/users/wrobell/followers",
      "following_url": "https://api.github.com/users/wrobell/following{/other_user}",
      "gists_url": "https://api.github.com/users/wrobell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wrobell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wrobell/subscriptions",
      "organizations_url": "https://api.github.com/users/wrobell/orgs",
      "repos_url": "https://api.github.com/users/wrobell/repos",
      "events_url": "https://api.github.com/users/wrobell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wrobell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T17:22:59Z",
    "updated_at": "2014-03-31T17:22:59Z",
    "author_association": "NONE",
    "body": "The custom series is useful when one wants to provide vectorized methods for the contained objects.\n\nFor example see GeoPandas or GeoCoon projects (both on github), which provide series for Shapely objects, i.e. PointSeries can have `x` and `y` properties to return the coordinates of all contained objects without map/apply hassle.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39117098",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6751#issuecomment-39117098",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6751",
    "id": 39117098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTE3MDk4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T17:34:42Z",
    "updated_at": "2014-03-31T17:34:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Something like this would work, requies >= 0.13 (though 0.13.1 has a couple of fixes for various operations, so would suggest that).\n\nGeoPandas has a pretty good subclass framework for this. E.g. if you want to propogate metadata you need to define a few more things.\n\n```\nIn [6]: class XSeries(pandas.Series):\n   ...:     @property\n   ...:     def _constructor(self):\n   ...:         return XSeries\n   ...:     \n\nIn [7]: class XDataFrame(pandas.DataFrame):\n   ...:     @property\n   ...:     def _constructor(self):\n   ...:         return XDataFrame\n   ...:     _constructor_sliced = XSeries\n   ...:     \n\nIn [8]: df = XDataFrame({'a': XSeries([1, 2, 3]), 'b': pandas.Series([3, 4, 5])})\n\nIn [9]: df\nOut[9]: \n   a  b\n0  1  3\n1  2  4\n2  3  5\n\n[3 rows x 2 columns]\n\nIn [10]: type(df.a)\nOut[10]: __main__.XSeries\n```\n\nIn general this is non-trivial and requires a bit of work.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39121000",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6751#issuecomment-39121000",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6751",
    "id": 39121000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTIxMDAw",
    "user": {
      "login": "wrobell",
      "id": 105664,
      "node_id": "MDQ6VXNlcjEwNTY2NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/105664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wrobell",
      "html_url": "https://github.com/wrobell",
      "followers_url": "https://api.github.com/users/wrobell/followers",
      "following_url": "https://api.github.com/users/wrobell/following{/other_user}",
      "gists_url": "https://api.github.com/users/wrobell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wrobell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wrobell/subscriptions",
      "organizations_url": "https://api.github.com/users/wrobell/orgs",
      "repos_url": "https://api.github.com/users/wrobell/repos",
      "events_url": "https://api.github.com/users/wrobell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wrobell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T18:06:13Z",
    "updated_at": "2014-03-31T18:06:13Z",
    "author_association": "NONE",
    "body": "With Pandas 0.13.1 and Numpy 1.8.0\n\n```\nimport pandas\n\nclass XSeries(pandas.Series):\n    @property\n    def _constructor(self):\n        return self.__class__  # why not in Pandas by default, BTW? :)\n\n\ndf = pandas.DataFrame({'a': XSeries([1, 2, 3]), 'b': pandas.Series([3, 4, 5])})\nprint(type(df.a))\n```\n\n`XSeries` type is lost.\n\nI would like to avoid writing custom data frames like in your example above. However, if that's not a bug but conscious design choice, then that's OK. Just please confirm. :)\n\nBTW. Does your example force all series in `XDataFrame` to be instance of `XSeries`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39121553",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6751#issuecomment-39121553",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6751",
    "id": 39121553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTIxNTUz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T18:10:39Z",
    "updated_at": "2014-03-31T18:12:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "`df.a` is a _slice_ / getitem of the dataframe it is NOT stored as a series internally but as the raw numpy data. Then when you slice it is constructed according to the `_constructor_sliced` exactly as I show.\n\nYou don't actually have to do a sub-class of DataFrame, this would work too\n\n`DataFrame._constructor_sliced = XSeries`\n\nThe reason for being explicit about the constructor as each sub-class must define this. It is a construction requirement.\n\nto your BTW: the internals need to be consistent, so yes all series would be the same type. No easy way around this, and would be way less performant.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39122798",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6751#issuecomment-39122798",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6751",
    "id": 39122798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTIyNzk4",
    "user": {
      "login": "wrobell",
      "id": 105664,
      "node_id": "MDQ6VXNlcjEwNTY2NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/105664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wrobell",
      "html_url": "https://github.com/wrobell",
      "followers_url": "https://api.github.com/users/wrobell/followers",
      "following_url": "https://api.github.com/users/wrobell/following{/other_user}",
      "gists_url": "https://api.github.com/users/wrobell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wrobell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wrobell/subscriptions",
      "organizations_url": "https://api.github.com/users/wrobell/orgs",
      "repos_url": "https://api.github.com/users/wrobell/repos",
      "events_url": "https://api.github.com/users/wrobell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wrobell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T18:21:23Z",
    "updated_at": "2014-03-31T18:21:23Z",
    "author_association": "NONE",
    "body": "The code\n\n```\nimport pandas\n\nclass XSeries(pandas.Series):\n    @property\n    def _constructor(self):\n        return self.__class__\n\nclass XDataFrame(pandas.DataFrame):\n    @property\n    def _constructor(self):\n\n        return XDataFrame\n\n    _constructor_sliced = XSeries\n\n\ndf = XDataFrame({'a': XSeries([1, 2, 3]), 'b': pandas.Series([3, 4, 5])})\nprint(type(df.a))\nprint(type(df.b))\n```\n\nprints `XSeries` in both cases, while `b` should be of type `Series`.\n\nTo make it work is not trivial, i.e. see https://github.com/wrobell/geocoon/blob/master/geocoon/core.py, so the question is how much Series extending could be supported without custom hackery.\n\nI hope pushing with various examples here is OK as I believe there is no official guideline how to perform such things in Pandas, yet.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39123771",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6751#issuecomment-39123771",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6751",
    "id": 39123771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTIzNzcx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T18:29:18Z",
    "updated_at": "2014-03-31T18:29:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "you didn't copy it correctly\n\n```\nclass XSeries(pandas.Series):\n    @property\n    def _constructor(self):\n        return XSeries\n```\n\nreturn `self.__class__` wont' work correctly you need to be explict\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39123953",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6751#issuecomment-39123953",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6751",
    "id": 39123953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTIzOTUz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T18:30:45Z",
    "updated_at": "2014-03-31T18:30:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "commenting here is fine. In general their is very little reason to sub-class a pandas object. The exception is probably what you are doing (ala geopandas). In general for 99% of cases its simply not a good idea and composition should be used instead.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39124803",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6751#issuecomment-39124803",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6751",
    "id": 39124803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTI0ODAz",
    "user": {
      "login": "wrobell",
      "id": 105664,
      "node_id": "MDQ6VXNlcjEwNTY2NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/105664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wrobell",
      "html_url": "https://github.com/wrobell",
      "followers_url": "https://api.github.com/users/wrobell/followers",
      "following_url": "https://api.github.com/users/wrobell/following{/other_user}",
      "gists_url": "https://api.github.com/users/wrobell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wrobell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wrobell/subscriptions",
      "organizations_url": "https://api.github.com/users/wrobell/orgs",
      "repos_url": "https://api.github.com/users/wrobell/repos",
      "events_url": "https://api.github.com/users/wrobell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wrobell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T18:37:41Z",
    "updated_at": "2014-03-31T18:37:41Z",
    "author_association": "NONE",
    "body": "So far `self.__class__` and `XSeries` worked for me exactly the same. Could you explain why the former would not work correctly?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39125292",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6751#issuecomment-39125292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6751",
    "id": 39125292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTI1Mjky",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T18:41:55Z",
    "updated_at": "2014-03-31T18:41:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "easy, `self.__class__` provides a run-time lookup, while hardcoding is a static lookup. The object asking for the `_constructor` may be asking a Series OR an an XSeries, so the answer is dependent on what it happens to be. This is very confusing and should not be done. The `_constructor` is their on purpose (and is static on purpose).\n"
  }
]
