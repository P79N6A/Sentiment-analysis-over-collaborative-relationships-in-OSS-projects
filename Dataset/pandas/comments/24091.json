[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/444708837",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24091#issuecomment-444708837",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24091",
    "id": 444708837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDcwODgzNw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-06T00:58:48Z",
    "updated_at": "2018-12-06T00:59:01Z",
    "author_association": "MEMBER",
    "body": "Weird!  Investigation and PR are welcome!\r\n\r\ncc @jreback @toobaz "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446860903",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24091#issuecomment-446860903",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24091",
    "id": 446860903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Njg2MDkwMw==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T06:48:44Z",
    "updated_at": "2018-12-13T06:48:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Following the data initialized in the original post, I've expanded some further findings:\r\n\r\n```python\r\ngood_key = mi_key = (pd.Period(\"2018-11-01\", freq=\"B\"), \"1\")\r\nbad_key = (pd.Period(\"2018-11-01\", freq=\"B\"), \"1\", \"1\")\r\n\r\nlvls = mi_series.index.levels[0]\r\ngood_key in lvls\r\n# > False\r\nbad_key in lvls\r\n# > True\r\n```\r\n\r\nIn both these cases, due to it being a period index, it hits this dunder method:\r\nhttps://github.com/pandas-dev/pandas/blob/b7ee8292b465aa507a37777443efbaecb07b3f57/pandas/core/indexes/period.py#L404-L415\r\nThen it hits get_loc.\r\n\r\nHere we see (similar to the original post) that the 'bad key', which has three levels, does exist in the lvls, when it shouldn't. Looking into it a little deeper the reasoning seems to be due to this block (specifically line 681): \r\n\r\nhttps://github.com/pandas-dev/pandas/blob/b7ee8292b465aa507a37777443efbaecb07b3f57/pandas/core/indexes/period.py#L680-L690\r\n\r\nFor a key that has length != 3, this fails. For example, with good_key in my example above, it raises a value error in the try block, and as a result doesn't run the following line and assign a value to key.\r\n> ValueError: not enough values to unpack (expected 3, got 2)\r\n\r\nWhereas for bad_key, it succeeds 'unexpectedly'. \r\nIf I break into this method and introspect the variables, we can see what's going on\r\n``` python\r\nprint(asdt)\r\n> Period('2018-11-01', 'B')\r\nprint(parsed\r\n> '1'\r\nprint(reso)\r\n> '1'\r\n```\r\nAs a result, the key is now set to only Period('2018-11-01', 'B'). In fact, it seems in this case this try block should never be reached, and the fact that it fails on all levels that are not of length three is the correct outcome, but not deliberately expected.\r\n\r\nI'd love to hear from someone more familiar with the code base, but it seems the correct first step would be to add a test for this here \r\nhttps://github.com/pandas-dev/pandas/blob/b7ee8292b465aa507a37777443efbaecb07b3f57/pandas/tests/indexes/period/test_indexing.py#L347\r\n\r\nAnd next would be to (potentially) add a conditional on line 680 of periods.py that ensures we aren't passing the wrong type of tuple to parse_time_string. If this seems sensible I can work on it and submit a PR.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446976608",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24091#issuecomment-446976608",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24091",
    "id": 446976608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Njk3NjYwOA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T13:56:15Z",
    "updated_at": "2018-12-13T13:56:15Z",
    "author_association": "MEMBER",
    "body": "@SimonAlecks thanks for your analysis! I don't have much time right now, but tomorrow I will give a more detailed look and report back."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447396854",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24091#issuecomment-447396854",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24091",
    "id": 447396854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzM5Njg1NA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-14T17:36:24Z",
    "updated_at": "2018-12-14T17:36:24Z",
    "author_association": "MEMBER",
    "body": "> And next would be to (potentially) add a conditional on line 680 of periods.py that ensures we aren't passing the wrong type of tuple to parse_time_string. If this seems sensible I can work on it and submit a PR.\r\n\r\nI think your diagnosis is correct; concerning the cure, I think that ``parse_time_string`` should definitely raise ``TypeError`` if passed a non-string, and after all ``PeriodIndex.get_loc`` seems to expect precisely that in the ``try... except`` block you isolated. So I would say that\r\nhttps://github.com/pandas-dev/pandas/blob/040f06f731a09fc6e0663cada6697f6602b36f1d/pandas/_libs/tslibs/parsing.pyx#L116\r\n\r\nshould raise a ``TypeError`` rather than returning its argument. @SimonAlecks does this make sense to you?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447397852",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24091#issuecomment-447397852",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24091",
    "id": 447397852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzM5Nzg1Mg==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-14T17:39:55Z",
    "updated_at": "2018-12-14T17:39:55Z",
    "author_association": "MEMBER",
    "body": "> And next would be to (potentially) add a conditional on line 680 of periods.py that ensures we aren't passing the wrong type of tuple to parse_time_string. If this seems sensible I can work on it and submit a PR.\r\n\r\nI think your diagnosis is correct; concerning the cure, I think that ``parse_time_string`` should definitely raise ``TypeError`` if passed a non-string, and after all ``PeriodIndex.get_loc`` seems to expect precisely that in the ``try... except`` block you isolated. So I would say that\r\nhttps://github.com/pandas-dev/pandas/blob/040f06f731a09fc6e0663cada6697f6602b36f1d/pandas/_libs/tslibs/parsing.pyx#L113-L116\r\n\r\nshould raise a ``TypeError`` rather than returning its argument. @SimonAlecks does this make sense to you?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447535036",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24091#issuecomment-447535036",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24091",
    "id": 447535036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzUzNTAzNg==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-15T03:59:03Z",
    "updated_at": "2018-12-15T03:59:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Makes perfect sense, thanks @toobaz I'll work on it and submit a PR."
  }
]
