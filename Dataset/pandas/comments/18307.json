[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344614877",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-344614877",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 344614877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDYxNDg3Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T14:48:56Z",
    "updated_at": "2017-11-15T14:48:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added the \"special\" section in the whatsnew for this and the changes we're making to NaN/empty sum."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344638287",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-344638287",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 344638287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDYzODI4Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T15:59:39Z",
    "updated_at": "2017-11-15T15:59:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "What are people's thoughts on moving the `register` import to `pandas.plotting` instead of `pandas.tseries`? I'm not sure I see the benefit, unless we're planning to remove `pandas.tseries` in the future."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344640572",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-344640572",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 344640572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDY0MDU3Mg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-15T16:06:36Z",
    "updated_at": "2017-11-15T16:06:36Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=h1) Report\n> Merging [#18307](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/9c799e2c4331e5e42cfda03323eef165feb5be1a?src=pr&el=desc) will **decrease** coverage by `0.01%`.\n> The diff coverage is `84.61%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18307/graphs/tree.svg?width=650&height=150&src=pr&token=eZ4WkYLtcO)](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18307      +/-   ##\n==========================================\n- Coverage   91.39%   91.38%   -0.02%     \n==========================================\n  Files         164      164              \n  Lines       49854    49869      +15     \n==========================================\n+ Hits        45566    45571       +5     \n- Misses       4288     4298      +10\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.18% <84.61%> (ø)` | :arrow_up: |\n| #single | `39.45% <30.76%> (-0.05%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/plotting/\\_core.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb3JlLnB5) | `82.37% <66.66%> (-0.09%)` | :arrow_down: |\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `65.92% <94.11%> (+0.67%)` | :arrow_up: |\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `25% <0%> (-58.34%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.8% <0%> (-0.1%)` | :arrow_down: |\n| [pandas/tseries/converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=tree#diff-cGFuZGFzL3RzZXJpZXMvY29udmVydGVyLnB5) | `100% <0%> (+100%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=footer). Last update [9c799e2...ba88a04](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344640578",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-344640578",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 344640578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDY0MDU3OA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-15T16:06:36Z",
    "updated_at": "2017-12-01T21:05:47Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=h1) Report\n> Merging [#18307](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/7627ccaf9442f4101afda69b6077e7f035e23543?src=pr&el=desc) will **increase** coverage by `0.08%`.\n> The diff coverage is `92.06%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18307/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18307      +/-   ##\n==========================================\n+ Coverage   91.35%   91.43%   +0.08%     \n==========================================\n  Files         164      157       -7     \n  Lines       49802    51424    +1622     \n==========================================\n+ Hits        45496    47019    +1523     \n- Misses       4306     4405      +99\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.3% <92.06%> (+0.16%)` | :arrow_up: |\n| #single | `40.58% <42.85%> (-0.3%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/tseries/converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307/diff?src=pr&el=tree#diff-cGFuZGFzL3RzZXJpZXMvY29udmVydGVyLnB5) | `100% <100%> (+100%)` | :arrow_up: |\n| [pandas/core/config\\_init.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvY29uZmlnX2luaXQucHk=) | `98.46% <100%> (+0.11%)` | :arrow_up: |\n| [pandas/plotting/\\_core.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307/diff?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb3JlLnB5) | `82.37% <66.66%> (-0.13%)` | :arrow_down: |\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307/diff?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `66.52% <97.14%> (+1.26%)` | :arrow_up: |\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `25% <0%> (-58.34%)` | :arrow_down: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `81.6% <0%> (-18.4%)` | :arrow_down: |\n| [pandas/io/json/json.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2pzb24vanNvbi5weQ==) | `91.75% <0%> (-8.25%)` | :arrow_down: |\n| [pandas/io/formats/style.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvc3R5bGUucHk=) | `96.21% <0%> (-3.79%)` | :arrow_down: |\n| [pandas/core/indexes/interval.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9pbnRlcnZhbC5weQ==) | `93.05% <0%> (-0.17%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/18307/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.81% <0%> (-0.1%)` | :arrow_down: |\n| ... and [13 more](https://codecov.io/gh/pandas-dev/pandas/pull/18307/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=footer). Last update [7627cca...ee7b457](https://codecov.io/gh/pandas-dev/pandas/pull/18307?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344646625",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-344646625",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 344646625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDY0NjYyNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T16:24:39Z",
    "updated_at": "2017-11-15T16:24:39Z",
    "author_association": "MEMBER",
    "body": "Should we also add some language on how to avoid this warning *without* registering the converters by default? So if you in the future don't want to manually register them, but rely on the matplotlib ones (eg when working with datetime.datetime) ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344649599",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-344649599",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 344649599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDY0OTU5OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T16:33:32Z",
    "updated_at": "2017-11-15T16:33:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess a pandas option?\r\n\r\n```\r\npd.options.register_formatters : bool\r\n```\r\n\r\nAnd we check that before ever calling register?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344650303",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-344650303",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 344650303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDY1MDMwMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T16:35:37Z",
    "updated_at": "2017-11-15T16:35:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Though, future-proofing a bit, should that be spread across several options, one per type? We currently register for\r\n\r\n```\r\n    units.registry[lib.Timestamp] = DatetimeConverter()\r\n    units.registry[Period] = PeriodConverter()\r\n    units.registry[pydt.datetime] = DatetimeConverter()\r\n    units.registry[pydt.date] = DatetimeConverter()\r\n    units.registry[pydt.time] = TimeConverter()\r\n    units.registry[np.datetime64] = DatetimeConverter()\r\n```\r\n\r\nIn the ideal future, we would I think just do Timestamp and Period, and matplotlib would have datetime64, I don't know who wants to own python dates / times / datetimes.\r\n\r\ncc @tacaswell if any of this interests you."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344667632",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-344667632",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 344667632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDY2NzYzMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T17:30:59Z",
    "updated_at": "2017-11-15T17:30:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added a rough implementation of the option in 16c33f1.\r\n\r\n\r\n```python\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: import matplotlib.pyplot as plt\r\n\r\nIn [3]: fig, ax = plt.subplots()\r\n\r\nIn [4]: s = pd.Series(range(12), index=pd.date_range('2017', periods=12))\r\n\r\nIn [5]: pd.options.plotting.matplotlib.register_formatters = False\r\n\r\nIn [6]: ax.plot(s)\r\nOut[6]: [<matplotlib.lines.Line2D at 0x1131ce588>]\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344771272",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-344771272",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 344771272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDc3MTI3Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T00:06:50Z",
    "updated_at": "2017-11-16T00:06:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "> What are people's thoughts on moving the register import to pandas.plotting instead of pandas.tseries? I'm not sure I see the benefit, unless we're planning to remove pandas.tseries in the future.\r\n\r\nif its not too much trouble. I would like to at least deprecate ``pandas.tseries``"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344796499",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-344796499",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 344796499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDc5NjQ5OQ==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T02:32:57Z",
    "updated_at": "2017-11-16T02:32:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks :heart: ."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345240154",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-345240154",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 345240154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTI0MDE1NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T13:12:12Z",
    "updated_at": "2017-11-17T13:12:12Z",
    "author_association": "MEMBER",
    "body": "Some other things related to the option:\r\n\r\n- It seems you kept the terminology of 'converters' (and not 'formatters') throughout the whatsnew and code? (which is I think the terminology of matplotlib, as the converter calls a formatter). But the option is called 'register_formatters'. So we should choose here.\r\n\r\n- When you set the `pd.options.plotting.matplotlib.register_formatters = False`, they will also not get registered when using pandas' plot methods ? I don't think that is the case, but shouldn't it be?\r\n\r\n- The \"unregistering\" (setting `pd.options.plotting.matplotlib.register_formatters = False`) will also remove the converters for datetime.datetime, which are actually the default ones. Ideally they are set back as well. @tacaswell Is there a way to restore the default units? (like with rcParams). Of course we can also save them when we overwrite them, to set it back properly.\r\n\r\n- I would make the option maybe a bit shorter, like `pd.options.plotting.register_matplotlib_formatters` (not shorter, but a '.' less so quicker to tab-complete) ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345274152",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-345274152",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 345274152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTI3NDE1Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T15:26:26Z",
    "updated_at": "2017-11-17T15:26:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "> It seems you kept the terminology of 'converters' (and not 'formatters') \r\n\r\nSwitched to formatters everywhere.\r\n\r\n> they will also not get registered when using pandas' plot methods ?\r\n\r\nCorrect. To be more specific, they're *always* registered when pandas is imported. The option toggles whether or not they're in the `matplotlib.units.registry` dict. `True` adds them, `False` removes them. That means that doing\r\n\r\n```python\r\nIn [8]: pd.options.plotting.matplotlib.register_formatters = False\r\n\r\nIn [9]: s.plot()\r\n```\r\n\r\nWill fall back to whatever matplotlib does with datetimes / periods (potentially an exception, e.g. for periods).\r\n\r\n> will also remove the converters for datetime.datetime, which are actually the default ones\r\n\r\nHmm, not sure about that. My registry is empty upon import:\r\n\r\n```python\r\nIn [1]: import matplotlib.units\r\n\r\nIn [2]: matplotlib.units.registry\r\nOut[2]: {}\r\n```\r\n\r\nThough maybe I'm misunderstanding. The intent is return the registry to the state before we mucked with it.\r\n\r\n> I would make the option maybe a bit shorter\r\n\r\nYeah, thoughts on `pd.options.plotting.mpl.converters`? I want the `.mpl` / matplotlib namespace for if / when we allow different engines for `.plot`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345280957",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-345280957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 345280957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTI4MDk1Nw==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T15:51:07Z",
    "updated_at": "2017-11-17T15:51:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "The unit registry gets filled on import.  If you import `matplotlib.dates` they will be added.  These imports are done in `pyplot` so _most_ users have this import done. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345283142",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-345283142",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 345283142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTI4MzE0Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T15:58:11Z",
    "updated_at": "2017-11-17T15:58:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah thanks.\r\n\r\n```python\r\nIn [1]: import matplotlib.units\r\n\r\nIn [2]: import matplotlib.pyplot as plt\r\n\r\nIn [3]: matplotlib.units.registry\r\nOut[3]:\r\n{str: <matplotlib.category.StrCategoryConverter at 0x10beb7f60>,\r\n numpy.str_: <matplotlib.category.StrCategoryConverter at 0x10beb7f28>,\r\n bytes: <matplotlib.category.StrCategoryConverter at 0x10beb7ef0>,\r\n numpy.bytes_: <matplotlib.category.StrCategoryConverter at 0x10beb7f98>,\r\n datetime.date: <matplotlib.dates.DateConverter at 0x10bf2c208>,\r\n datetime.datetime: <matplotlib.dates.DateConverter at 0x10bf2c240>}\r\n\r\nIn [4]: import pandas as pd\r\n\r\nIn [5]: matplotlib.units.registry\r\nOut[5]:\r\n{str: <matplotlib.category.StrCategoryConverter at 0x10beb7f60>,\r\n numpy.str_: <matplotlib.category.StrCategoryConverter at 0x10beb7f28>,\r\n bytes: <matplotlib.category.StrCategoryConverter at 0x10beb7ef0>,\r\n numpy.bytes_: <matplotlib.category.StrCategoryConverter at 0x10beb7f98>,\r\n datetime.date: <pandas.plotting._converter.DatetimeConverter at 0x10bf2c240>,\r\n datetime.datetime: <pandas.plotting._converter.DatetimeConverter at 0x10eaa3828>,\r\n pandas._libs.tslib.Timestamp: <pandas.plotting._converter.DatetimeConverter at 0x10eaa3780>,\r\n pandas._libs.period.Period: <pandas.plotting._converter.PeriodConverter at 0x10eaa37b8>,\r\n datetime.time: <pandas.plotting._converter.TimeConverter at 0x10bf2c208>,\r\n numpy.datetime64: <pandas.plotting._converter.DatetimeConverter at 0x10eaac0f0>}\r\n\r\nIn [6]: pd.options.plotting.matplotlib.register_formatters = False\r\n\r\nIn [7]: matplotlib.units.registry\r\nOut[7]:\r\n{str: <matplotlib.category.StrCategoryConverter at 0x10beb7f60>,\r\n numpy.str_: <matplotlib.category.StrCategoryConverter at 0x10beb7f28>,\r\n bytes: <matplotlib.category.StrCategoryConverter at 0x10beb7ef0>,\r\n numpy.bytes_: <matplotlib.category.StrCategoryConverter at 0x10beb7f98>}\r\n```\r\n\r\nSo not great... We could of course maintain our own global state when we overwrite them... Though we'll have to make sure `matplotlib.pyplot` is imported first. Let me give that a shot."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345440273",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-345440273",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 345440273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ0MDI3Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-18T12:49:52Z",
    "updated_at": "2017-11-20T08:48:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just pushed a few changes, if you have a chance to review again.\r\n\r\n- Moved recommended import to `pandas.plotting.register_formatters`, `pandas.plotting.deregister_formatters`\r\n- Added a `deregister_formatters` to undo what pandas does (needed it anyway for the callback, might as well make it public)\r\n- Updated the release note / error message to always use the term \"converter\"\r\n\r\n\r\nTODO:\r\n\r\n- [x] add depr warning in tseries\r\n- [ ] *Another* PR to matplotlib updating their FAQ (sorry)\r\n\r\nShould be able to do those later today."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345440676",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-345440676",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 345440676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ0MDY3Ng==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-18T12:57:36Z",
    "updated_at": "2017-12-01T14:53:29Z",
    "author_association": "NONE",
    "body": "Hello @TomAugspurger! Thanks for updating the PR.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on December 01, 2017 at 14:53 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345629224",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-345629224",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 345629224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTYyOTIyNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-20T08:50:45Z",
    "updated_at": "2017-11-20T08:50:45Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger Thanks a lot for the updates!\r\n\r\n> Moved recommended import to pandas.plotting.register_formatters, pandas.plotting.deregister_formatters\r\n\r\n+1. I was only wondering if we should make it more explicit it is for matplotlib (like `register_matplotlib_converters`)? (although I know I previously wondered if it could be shorter ... :-), but for case matplotlib is not the only supported plotting engine in the future)\r\n\r\n> Yeah, thoughts on pd.options.plotting.mpl.converters? I want the .mpl / matplotlib namespace for if / when we allow different engines for .plot.\r\n\r\nOK, yes, having 'matplotlib' in there makes sense. Although I prefer the full 'matplotlib' instead of `mpl`. And I think I find 'register_converters = True/False' clearer than `converters = True/False`. Although then we are back at the original `pd.options.plotting.matplotlib.register_converters` :-)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345637950",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-345637950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 345637950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTYzNzk1MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-20T09:25:41Z",
    "updated_at": "2017-11-20T09:25:41Z",
    "author_association": "MEMBER",
    "body": "Something else: I was wondering if it actually *would* be possible to do the registration/deregistration in a context manager in our plotting machinery. The reason we said this would be impossible is that you after a `df.plot` call you want to use matplotlib's machinery to tune the figure (eg `ax.set_xlim(..)`), so this still needs to know about the converters. \r\nBut, it seems that the `ax` object actually stores the used converters for plotting. So maybe that would be enough?\r\n\r\n```\r\nIn [15]: s = pd.Series(range(10), pd.date_range(\"2012-01-01\", periods=10))\r\n\r\nIn [16]: ax = s.plot()\r\n\r\nIn [17]: ax.xaxis.converter\r\nOut[17]: <pandas.plotting._converter.PeriodConverter at 0x7f3c112f9ac8>\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345641553",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-345641553",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 345641553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTY0MTU1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-20T09:39:24Z",
    "updated_at": "2017-11-20T09:39:24Z",
    "author_association": "MEMBER",
    "body": "As a small example:\r\n\r\n```\r\nIn [1]: s = pd.Series(range(10), pd.date_range(\"2012-01-01\", periods=10))\r\n\r\nIn [3]: import matplotlib.pyplot as plt\r\n\r\nIn [4]: fig, ax = plt.subplots()\r\n\r\nIn [5]: s.plot(ax=ax)\r\nOut[5]: <matplotlib.axes._subplots.AxesSubplot at 0x7fd4580d4fd0>\r\n\r\nIn [6]: pd.plotting.deregister_converters()\r\n\r\nIn [7]: ax.xaxis.converter\r\nOut[7]: <pandas.plotting._converter.PeriodConverter at 0x7fd45d4538d0>\r\n\r\nIn [8]: ax.set_xlim(\"2012-01-01\", \"2012-01-04\")    # <---- still works although converters are no longer registered\r\nOut[8]: (15340, 15343)\r\n\r\nIn [10]: import matplotlib\r\n\r\nIn [11]: matplotlib.units.registry\r\nOut[11]: \r\n{bytes: <matplotlib.category.StrCategoryConverter at 0x7fd472ac6278>,\r\n datetime.date: <matplotlib.dates.DateConverter at 0x7fd45d1fd6d8>,\r\n numpy.bytes_: <matplotlib.category.StrCategoryConverter at 0x7fd472ac6320>,\r\n str: <matplotlib.category.StrCategoryConverter at 0x7fd472ac62e8>,\r\n numpy.str_: <matplotlib.category.StrCategoryConverter at 0x7fd472ac62b0>,\r\n datetime.datetime: <matplotlib.dates.DateConverter at 0x7fd45d1fd710>}\r\n```\r\n\r\n@tacaswell any idea there would be caveats to this approach? Are there customizations that you can do on plots that will typically not work like that? (that would not be using the stored `converter` on the axis method)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345684955",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-345684955",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 345684955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTY4NDk1NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-20T12:43:42Z",
    "updated_at": "2017-11-20T12:43:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, that's neat.\r\n\r\nBut, do we want to do that for this PR or later on? And what would that look like? How about the option takes three values:\r\n\r\n- True  (register right away)\r\n- False (don't register / unregister)\r\n- auto (Use a context manager in our plots)\r\n\r\nThe current default will be True which is compatible with <0.21.0. In the future it'll be 'auto'.\r\n\r\nThough I'm not sure I'll have time to implement the 'auto' behavior today, and I'll be traveling the rest of the week."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345692423",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-345692423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 345692423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTY5MjQyMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-20T13:16:41Z",
    "updated_at": "2017-11-20T13:16:41Z",
    "author_association": "MEMBER",
    "body": "> But, do we want to do that for this PR or later on?\r\n\r\nI don't think it needs to be in this PR (as this already introduces a lot of useful architecture), but if we want to do it, I think we should try to do it for 0.21.1, as it will again be a change in behaviour (the change from True (once plotted once) to auto).\r\n\r\n>  And what would that look like? How about the option takes three values:\r\n\r\nI think those three options are good: either registerer it matplotlib-wide, either never registerer it, or only register it temporarily for plots that are made with pandas.\r\n\r\nBut we will probably still need to look at a couple of edge cases if it actually works.\r\n\r\nI would say let's try to merge this PR for now, and leave the 'auto' behaviour for a follow-up. I could also try to look at it this week.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346190497",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-346190497",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 346190497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjE5MDQ5Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-21T23:05:38Z",
    "updated_at": "2017-11-21T23:05:38Z",
    "author_association": "MEMBER",
    "body": "Another thing I was thinking: for users that were just relying on the converter by importing pandas (but for the rest plotting with pure matplotlib), deprecating it now can be a bit annoying, as the proper support in matplotlib will only come in the next release. \r\nSo in practice that means that they will have to add temporarily `pd.plotting.register_matplotlib_converters()` to their code for a couple of months, instead of directly being able to switch to the new matplotlib support.\r\n\r\nSo that said, another option is to just undo the change now for 0.21.1 and keep the actual deprecation for 0.22.0 (assuming that will only be released when matplotlib 2.2.0 will also more or less be released). \r\n@tacaswell Is there a timeline for matplotlib 2.2.0? Or could the datetime64 converter be sneaked into 2.1.1? (considering it as kind of a 'regression fix' to deal with the changes in pandas ..)\r\n\r\n(just a thought, not sure yet if I find postponing actual deprecation a good idea myself)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347859665",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-347859665",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 347859665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzg1OTY2NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-29T13:26:53Z",
    "updated_at": "2017-11-29T13:26:53Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger What do you think of the idea above to completely revert this for 0.21.1, and target this PR for 0.22.0, in the idea that by then matplotlib has the datetime64 support, and many users won't need to do the manual registration?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347860279",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-347860279",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 347860279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzg2MDI3OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-29T13:29:23Z",
    "updated_at": "2017-11-29T13:29:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "had a talk with @tacaswell about this. are we sure we want this behavior?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347861003",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-347861003",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 347861003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzg2MTAwMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-29T13:32:06Z",
    "updated_at": "2017-11-29T13:32:06Z",
    "author_association": "MEMBER",
    "body": "What do you mean with \"this behavior\"?\r\n\r\nIdeally (for pandas), matplotlib would already include the datetime64 converters in 2.1.1 bugfix release (the merged PR there was now targetted for matplotlib 2.2). But I assume they are not favoring that since it not a bugfix from the matplotlib point of view (if you see @tacaswell you could bring that up)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347862606",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-347862606",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 347862606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzg2MjYwNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-29T13:38:33Z",
    "updated_at": "2017-11-29T13:38:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Ideally (for pandas), matplotlib would already include the datetime64 converters in 2.1.1 bugfix release (the merged PR there was now targetted for matplotlib 2.2). But I assume they are not favoring that since it not a bugfix from the matplotlib point of view (if you see @tacaswell you could bring that up)\r\n\r\nyes, we changed and let's move on. mpl will catch up with the fix. reverting just makes this even more confusing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347863132",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-347863132",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 347863132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzg2MzEzMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-29T13:40:35Z",
    "updated_at": "2017-11-29T13:40:35Z",
    "author_association": "MEMBER",
    "body": "This PR *is* already reverting it (and we agree on doing this I thought), the question is more to already raise a deprecation warning or not?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347868447",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-347868447",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 347868447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzg2ODQ0Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-29T14:00:25Z",
    "updated_at": "2017-11-29T14:00:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just thinking out loud here to make sure I understand:\r\n\r\n1. We're going to register the converters again on `import pandas` either way\r\n2. We're uncertain on whether to include the deprecation warning for using an implicitly registered converter for datetime data.\r\n\r\nThe uncertainty with 2 comes from us *maybe* deprecating `converter.register`. We don't want to say \"you're required to register this\" and then remove that shortly after, right?\r\n\r\nI think pandas will always have to have *some* converters, if just for things like `PeriodIndex`, which matplotlib has no knowledge of. So I think my vote is for including the deprecation warning."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347870558",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-347870558",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 347870558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzg3MDU1OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-29T14:08:21Z",
    "updated_at": "2017-11-29T14:09:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "One more issue...  If someone with mpl2.2+ (with their datetime converters), we should *not* warn when they plot datetimes and have imported pandas, but have not registered the converters. I think...\r\n\r\nActually, we should just not override their formatter maybe."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347870702",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18307#issuecomment-347870702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18307",
    "id": 347870702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzg3MDcwMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-29T14:08:52Z",
    "updated_at": "2017-11-29T14:08:52Z",
    "author_association": "MEMBER",
    "body": "> The uncertainty with 2 comes from us maybe deprecating converter.register. We don't want to say \"you're required to register this\" and then remove that shortly after, right?\r\n\r\nNo, my reason to *delay* deprecation is that for the majority of the users (that do like `plt.plot(s.index, s.values` with DatetimeIndex) the matplotlib converters will be sufficient (I think). \r\nFor this part, if we release 0.21.1 with deprecation warning, we ask them to manually register the converters. But once matplotlib 2.2 comes out somewhere next year, they don't actually need this manually registering of the pandas converters anymore.  \r\nIf we wait with the deprecation until pandas 0.22.0 (assuming that matplotlib 2.2 is released by then), they will never need to bother with registering the converters\r\n\r\n> I think pandas will always have to have some converters, if just for things like PeriodIndex, which matplotlib has no knowledge of. So I think my vote is for including the deprecation warning.\r\n\r\nyes, and for those we will need to do that. But I think the majority of the usecase is DatetimeIndex and not PeriodIndex."
  }
]
