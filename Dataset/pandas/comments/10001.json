[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97727562",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10001#issuecomment-97727562",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10001",
    "id": 97727562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NzI3NTYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-30T10:09:12Z",
    "updated_at": "2015-04-30T10:09:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "you would have to show an example and `pd.show_versions()`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98552633",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10001#issuecomment-98552633",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10001",
    "id": 98552633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4NTUyNjMz",
    "user": {
      "login": "a59",
      "id": 2768322,
      "node_id": "MDQ6VXNlcjI3NjgzMjI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2768322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/a59",
      "html_url": "https://github.com/a59",
      "followers_url": "https://api.github.com/users/a59/followers",
      "following_url": "https://api.github.com/users/a59/following{/other_user}",
      "gists_url": "https://api.github.com/users/a59/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/a59/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/a59/subscriptions",
      "organizations_url": "https://api.github.com/users/a59/orgs",
      "repos_url": "https://api.github.com/users/a59/repos",
      "events_url": "https://api.github.com/users/a59/events{/privacy}",
      "received_events_url": "https://api.github.com/users/a59/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-03T22:42:26Z",
    "updated_at": "2015-05-03T22:42:26Z",
    "author_association": "NONE",
    "body": "In Excel (2013 Windows 7), I created a new Workbook. In Sheet1, I entered A in A1 and 10000000 in B1. I then formatted B1 to be a Short Date which displays the cell as #################. I saved the files as 'test.xlsx'.\n\nI then ran the following python code\n\n``` python\nimport pandas as pd\npd.show_versions()\nxl_file = pd.ExcelFile('test.xlsx')\nsheet = xl_file.parse('Sheet1',parse_dates=False)\n```\n\nwhich gives me the following output\n\n> ## INSTALLED VERSIONS\n> \n> commit: None\n> python: 2.7.9.final.0\n> python-bits: 64\n> OS: Darwin\n> OS-release: 14.3.0\n> machine: x86_64\n> processor: i386\n> byteorder: little\n> LC_ALL: None\n> LANG: en_US.UTF-8\n> \n> pandas: 0.16.0\n> nose: 1.3.6\n> Cython: 0.22\n> numpy: 1.9.2\n> scipy: 0.15.1\n> statsmodels: 0.6.1\n> IPython: 3.1.0\n> sphinx: 1.2.3\n> patsy: 0.3.0\n> dateutil: 2.4.2\n> pytz: 2015.2\n> bottleneck: None\n> tables: 3.1.1\n> numexpr: 2.3.1\n> matplotlib: 1.4.3\n> openpyxl: 2.0.2\n> xlrd: 0.9.3\n> xlwt: 1.0.0\n> xlsxwriter: 0.7.2\n> lxml: 3.4.3\n> bs4: 4.3.2\n> html5lib: None\n> httplib2: None\n> apiclient: None\n> sqlalchemy: 1.0.1\n> pymysql: None\n> psycopg2: None\n> Traceback (most recent call last):\n>  File \"test.py\", line 5, in <module>\n>    sheet = xl_file.parse('Sheet1',parse_dates=False)\n>  File \"/Users/myname/anaconda/lib/python2.7/site-packages/pandas/io/excel.py\", line 287, in parse\n>    **kwds)\n>  File \"/Users/myname/anaconda/lib/python2.7/site-packages/pandas/io/excel.py\", line 418, in _parse_excel\n>    row.append(_parse_cell(value,typ))\n>  File \"/Users/myname/anaconda/lib/python2.7/site-packages/pandas/io/excel.py\", line 342, in _parse_cell\n>    epoch1904)\n>  File \"/Users/myname/anaconda/lib/python2.7/site-packages/xlrd/xldate.py\", line 130, in xldate_as_datetime\n>    return epoch + datetime.timedelta(days, seconds, 0, milliseconds)\n> OverflowError: date value out of range\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98678716",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10001#issuecomment-98678716",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10001",
    "id": 98678716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4Njc4NzE2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-04T11:12:09Z",
    "updated_at": "2015-05-04T11:12:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "`parse_dates` is not implemented. But I think could be in the `_should_parse` function. pull-requests are welcome.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/202850220",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10001#issuecomment-202850220",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10001",
    "id": 202850220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjg1MDIyMA==",
    "user": {
      "login": "kwantopia",
      "id": 875524,
      "node_id": "MDQ6VXNlcjg3NTUyNA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/875524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kwantopia",
      "html_url": "https://github.com/kwantopia",
      "followers_url": "https://api.github.com/users/kwantopia/followers",
      "following_url": "https://api.github.com/users/kwantopia/following{/other_user}",
      "gists_url": "https://api.github.com/users/kwantopia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kwantopia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kwantopia/subscriptions",
      "organizations_url": "https://api.github.com/users/kwantopia/orgs",
      "repos_url": "https://api.github.com/users/kwantopia/repos",
      "events_url": "https://api.github.com/users/kwantopia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kwantopia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T11:55:46Z",
    "updated_at": "2016-03-29T11:55:46Z",
    "author_association": "NONE",
    "body": "Hi, I am adding this patch here, in case it's useful for those who do not want to parse dates from excel file by setting parse_dates=False.  Please review.  I had trouble parsing the following excel file from Crunchbase Excel Export which had really old dates which gave OverflowError.\n\n```\nFrom aae19c65e2a4b3a965f91bdffa5bd4595b0b7d7b Mon Sep 17 00:00:00 2001\nFrom: Kwan Lee <kwan@openviewpartners.com>\nDate: Tue, 29 Mar 2016 14:52:03 +0300\nSubject: [PATCH] parse_dates=False in read_excel should prevent from parsing\n dates.  It was throwing overflowerror when the dates were too old. update\n #10001\n\n---\n pandas/io/excel.py | 6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ndiff --git a/pandas/io/excel.py b/pandas/io/excel.py\nindex 5656c36..b4b8996 100644\n--- a/pandas/io/excel.py\n+++ b/pandas/io/excel.py\n@@ -321,11 +321,11 @@ class ExcelFile(object):\n\n         epoch1904 = self.book.datemode\n\n-        def _parse_cell(cell_contents, cell_typ):\n+        def _parse_cell(cell_contents, cell_typ, parse_dates=True):\n             \"\"\"converts the contents of the cell into a pandas\n                appropriate object\"\"\"\n\n-            if cell_typ == XL_CELL_DATE:\n+            if cell_typ == XL_CELL_DATE and parse_dates:\n                 if xlrd_0_9_3:\n                     # Use the newer xlrd datetime handling.\n                     cell_contents = xldate.xldate_as_datetime(cell_contents,\n@@ -405,7 +405,7 @@ class ExcelFile(object):\n                         should_parse[j] = self._should_parse(j, parse_cols)\n\n                     if parse_cols is None or should_parse[j]:\n-                        row.append(_parse_cell(value, typ))\n+                        row.append(_parse_cell(value, typ, parse_dates))\n                 data.append(row)\n\n             if sheet.nrows == 0:\n-- \n2.7.2\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/202878321",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10001#issuecomment-202878321",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10001",
    "id": 202878321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjg3ODMyMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T12:52:59Z",
    "updated_at": "2016-03-29T12:52:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kwantopia It'll be easier to review that if you put it up as a pull request. Then we can comment inline.\n\nWhat's the desired behavior here? `read_csv` seems to silently \"fail\" to parse the columns that can't be represented as datetime64s.\n\n``` python\nIn [5]: !cat foo.csv\ndate,val\n1500-01-01,1\n1600-01-02,2\n1700-01-01,3\n1800-01-01,4\n1900-01-01,5\n2000-01-01,6\n\nIn [1]: pd.read_csv('foo.csv', parse_dates='date')\nOut[1]:\n         date  val\n0  1500-01-01    1\n1  1600-01-02    2\n2  1700-01-01    3\n3  1800-01-01    4\n4  1900-01-01    5\n5  2000-01-01    6\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/202893601",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10001#issuecomment-202893601",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10001",
    "id": 202893601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjg5MzYwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T13:30:15Z",
    "updated_at": "2016-03-29T13:30:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually maybe @jorisvandenbossche can comment here. IIRC the `parse_dates` kw only matters if in excel its NOT a date already (and in your case these are out-of-range, so they are strings and will be parsed to `object` even in pandas).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/202895018",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10001#issuecomment-202895018",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10001",
    "id": 202895018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjg5NTAxOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T13:32:13Z",
    "updated_at": "2016-03-29T13:32:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is related to the issue in #11544 and looks to be a dupe of these (there is a somewhat convoluted chain as to what the original issues actually though). maybe someone can figure this chain out and we can create a master issue so its more clear.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/202945097",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10001#issuecomment-202945097",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10001",
    "id": 202945097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjk0NTA5Nw==",
    "user": {
      "login": "kwantopia",
      "id": 875524,
      "node_id": "MDQ6VXNlcjg3NTUyNA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/875524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kwantopia",
      "html_url": "https://github.com/kwantopia",
      "followers_url": "https://api.github.com/users/kwantopia/followers",
      "following_url": "https://api.github.com/users/kwantopia/following{/other_user}",
      "gists_url": "https://api.github.com/users/kwantopia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kwantopia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kwantopia/subscriptions",
      "organizations_url": "https://api.github.com/users/kwantopia/orgs",
      "repos_url": "https://api.github.com/users/kwantopia/repos",
      "events_url": "https://api.github.com/users/kwantopia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kwantopia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T15:07:42Z",
    "updated_at": "2016-03-29T15:07:42Z",
    "author_association": "NONE",
    "body": "@TomAugspurger it's a problem in read_excel, but I guess I was also misunderstanding parse_dates field.  I was assuming that parse_dates=True means parse the dates and parse_dates=False means do not parse the dates for pandas.read_excel\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/466601601",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10001#issuecomment-466601601",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10001",
    "id": 466601601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjYwMTYwMQ==",
    "user": {
      "login": "ffranchina",
      "id": 8852116,
      "node_id": "MDQ6VXNlcjg4NTIxMTY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8852116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ffranchina",
      "html_url": "https://github.com/ffranchina",
      "followers_url": "https://api.github.com/users/ffranchina/followers",
      "following_url": "https://api.github.com/users/ffranchina/following{/other_user}",
      "gists_url": "https://api.github.com/users/ffranchina/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ffranchina/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ffranchina/subscriptions",
      "organizations_url": "https://api.github.com/users/ffranchina/orgs",
      "repos_url": "https://api.github.com/users/ffranchina/repos",
      "events_url": "https://api.github.com/users/ffranchina/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ffranchina/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-23T01:24:09Z",
    "updated_at": "2019-02-23T01:24:09Z",
    "author_association": "NONE",
    "body": "Hello, sorry for writing here but it seems a quite common wish the ability of disabling date parsing from the function `pd.read_excel()`. [Yet another stackoverflow question](https://stackoverflow.com/questions/35579042/pandas-read-excel-reads-date-into-timestamp-i-want-a-string) without a proper answer.\r\nAs @kwantopia underlined, I also would expect that setting the flag `parse_dates=False` could help me to achieve the desired result but, instead, seems to be ignored or to work in a different (and hence obscure) way.\r\nCan anyone tell me which is the situation of this issue and if actually it's an issue? And, in case everything it's regular, can I have a definitive answer that can allow me to read an `.xls` without having the dates parsed?\r\nIf there's need for changing or fixing some code, I'm very willing and ready to help, I'd just like to be pointed in the right direction.\r\nThank you in advance!"
  }
]
