[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39479998",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6783#issuecomment-39479998",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6783",
    "id": 39479998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDc5OTk4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-03T17:29:30Z",
    "updated_at": "2014-04-03T17:29:30Z",
    "author_association": "MEMBER",
    "body": "somewhat of an edge case ... not sure how many people need or are using this level of precision\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39481106",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6783#issuecomment-39481106",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6783",
    "id": 39481106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDgxMTA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-03T17:38:30Z",
    "updated_at": "2014-04-03T17:38:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep....part of the whole, formatting for csv output.....welcome to figure this out in a general way! (the timedelta formatting pretty trivial (as it already takes a format kw, just need to interpret it), bigger issue is how to tell to_csv the formats that you want...\n\ne.g. dict of column -> format, or prob better to have a Class that you can override, call to set state, etc.\n"
  }
]
