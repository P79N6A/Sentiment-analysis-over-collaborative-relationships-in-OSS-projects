[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299878944",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-299878944",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 299878944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTg3ODk0NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T14:15:43Z",
    "updated_at": "2017-05-08T14:15:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, this kind of already works when you use the `scipy` methods, since that's the default for scipy when you extraploate\r\n\r\n```python\r\nIn [31]: dfMain.interpolate(method='slinear')\r\nOut[31]:\r\n     a    b    c\r\n0  0.0  NaN  0.0\r\n1  1.0  NaN  1.0\r\n2  2.0  NaN  2.0\r\n3  3.0  3.0  3.0\r\n4  4.0  4.0  NaN\r\n```\r\n\r\nThis is an implementation detail that the user shouldn't need to worry about... But I'm not sure that we can make this consistent across methods in a backwards-compatible way."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299931336",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-299931336",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 299931336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTkzMTMzNg==",
    "user": {
      "login": "WBare",
      "id": 16143425,
      "node_id": "MDQ6VXNlcjE2MTQzNDI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16143425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WBare",
      "html_url": "https://github.com/WBare",
      "followers_url": "https://api.github.com/users/WBare/followers",
      "following_url": "https://api.github.com/users/WBare/following{/other_user}",
      "gists_url": "https://api.github.com/users/WBare/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WBare/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WBare/subscriptions",
      "organizations_url": "https://api.github.com/users/WBare/orgs",
      "repos_url": "https://api.github.com/users/WBare/repos",
      "events_url": "https://api.github.com/users/WBare/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WBare/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T17:19:44Z",
    "updated_at": "2017-05-08T17:19:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you very much, @TomAugspurger !  I did not know that, and that solves the problem for me, but I agree completely that it would be nice to somehow make this more visible to the user.\r\n\r\nI don't know, but I'm guessing method='slinear' will not have an option to respect the limit= on number of NaNs to fill in, otherwise the code could just intercept something like limit_direction='inside' and save a bunch of work.\r\n\r\nThanks again!!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/300253767",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-300253767",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 300253767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDI1Mzc2Nw==",
    "user": {
      "login": "WBare",
      "id": 16143425,
      "node_id": "MDQ6VXNlcjE2MTQzNDI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16143425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WBare",
      "html_url": "https://github.com/WBare",
      "followers_url": "https://api.github.com/users/WBare/followers",
      "following_url": "https://api.github.com/users/WBare/following{/other_user}",
      "gists_url": "https://api.github.com/users/WBare/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WBare/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WBare/subscriptions",
      "organizations_url": "https://api.github.com/users/WBare/orgs",
      "repos_url": "https://api.github.com/users/WBare/repos",
      "events_url": "https://api.github.com/users/WBare/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WBare/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-09T18:09:25Z",
    "updated_at": "2017-05-09T18:09:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "This needs to run through the existing interpolate function so that it will respect the limit=n parameter correctly."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303132712",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-303132712",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 303132712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzEzMjcxMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T15:23:10Z",
    "updated_at": "2017-05-22T15:23:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Continuing from https://github.com/pandas-dev/pandas/pull/16307#issuecomment-303125751\r\n\r\nHmm I hadn't considered the interaction of `limit` and extrapolation...  I think that's covered by our current limit handling though.\r\n\r\nMy initial (very rough) thoughts are something like\r\n\r\n```python\r\ndef interpolate(self, method='linear', axis=0, limit=None, inplace=False,\r\n                limit_direction='forward', downcast=None, extrapolate=None, **kwargs)\r\n    \"\"\"\r\n    ...\r\n    extrapolate : array-like, two-tuple, \"extrapolate\", or None, optional\r\n\r\n        This is similar to scipy.interpolate.interp1d's `fill_value` keyword,\r\n        with special handling for pandas interpolation methods. By default,\r\n        pandas interpolation methods (...) will extrapolate forward only by\r\n        repeating the last valid observation, while scipy methods will not\r\n        interpolate (following the default for scipy). To disable extrapolation\r\n        for pandas methods, use `extrapolate=np.nan`.\r\n\r\n```\r\n\r\nThe difference between pandas and scipy methods is unfortunate, but I don't think it's worth deprecating one or the other (willing to change my mind on this).\r\n\r\nI don't think an `interpolate=True` argument is necessary. @WBare d"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303166225",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-303166225",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 303166225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE2NjIyNQ==",
    "user": {
      "login": "WBare",
      "id": 16143425,
      "node_id": "MDQ6VXNlcjE2MTQzNDI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16143425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WBare",
      "html_url": "https://github.com/WBare",
      "followers_url": "https://api.github.com/users/WBare/followers",
      "following_url": "https://api.github.com/users/WBare/following{/other_user}",
      "gists_url": "https://api.github.com/users/WBare/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WBare/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WBare/subscriptions",
      "organizations_url": "https://api.github.com/users/WBare/orgs",
      "repos_url": "https://api.github.com/users/WBare/repos",
      "events_url": "https://api.github.com/users/WBare/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WBare/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T17:26:28Z",
    "updated_at": "2017-05-22T17:27:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I don't think an interpolate=True argument is necessary. \r\n\r\n@TomAugspurger I agree in that I personally do not have a case where I would only want to extrapolate only, BUT, I'm concerned we are arbitrarily eliminating a use case that should get completed while we are in the code.\r\n\r\nMore generally, as a complete set of options, if we have the ability to interpolate only, why not the ability to extrapolate only?  I can imagine a user that would like to extend a series, but not disturb existing NaNs inside the series.\r\n\r\nI have not needed that myself so I'm basing this more on a logically complete set options than personal experience.\r\n\r\nWith that said, if we do choose to have an option for both, I'm changing my mind on the parameter.  I like your initial idea better (something like limit_type='interpolate' | 'extrapolate') as opposed to extrapolate=False because the logical flags allow for a combination that would never make sense (i.e. both interpolate=False and extrapolate=False). The single parameter more clearly conveys the idea of limiting to one or the other.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303176057",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-303176057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 303176057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE3NjA1Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T18:04:55Z",
    "updated_at": "2017-05-22T18:04:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> BUT, I'm concerned we are arbitrarily eliminating a use case that should get completed while we are in the code.\r\n\r\nYeah, that makes sense. You'll just have to balance ease of implementation with not breaking existing code :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303183974",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-303183974",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 303183974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE4Mzk3NA==",
    "user": {
      "login": "WBare",
      "id": 16143425,
      "node_id": "MDQ6VXNlcjE2MTQzNDI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16143425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WBare",
      "html_url": "https://github.com/WBare",
      "followers_url": "https://api.github.com/users/WBare/followers",
      "following_url": "https://api.github.com/users/WBare/following{/other_user}",
      "gists_url": "https://api.github.com/users/WBare/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WBare/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WBare/subscriptions",
      "organizations_url": "https://api.github.com/users/WBare/orgs",
      "repos_url": "https://api.github.com/users/WBare/repos",
      "events_url": "https://api.github.com/users/WBare/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WBare/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T18:35:46Z",
    "updated_at": "2017-05-22T18:35:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, cool.  Any ideas on the actual parameter?\r\n\r\nIs everyone cool with\r\n\r\nlimit_type= ('interpolate' | 'extrapolate' | None=default to both which is current_behavior)\r\n\r\nThis seems consistent with existing parameters limit=n and limit_direction\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303370543",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-303370543",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 303370543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzM3MDU0Mw==",
    "user": {
      "login": "naifrec",
      "id": 14828647,
      "node_id": "MDQ6VXNlcjE0ODI4NjQ3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/14828647?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naifrec",
      "html_url": "https://github.com/naifrec",
      "followers_url": "https://api.github.com/users/naifrec/followers",
      "following_url": "https://api.github.com/users/naifrec/following{/other_user}",
      "gists_url": "https://api.github.com/users/naifrec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naifrec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naifrec/subscriptions",
      "organizations_url": "https://api.github.com/users/naifrec/orgs",
      "repos_url": "https://api.github.com/users/naifrec/repos",
      "events_url": "https://api.github.com/users/naifrec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naifrec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T11:32:53Z",
    "updated_at": "2017-05-23T11:48:58Z",
    "author_association": "NONE",
    "body": "hey guys, if you let me jump in. I have the feeling the `limit` kwarg does not behave as you would expect it to when working with time series. To cite @rhkarls in the issue #1892 :\r\n\r\n> Say limit=2, if there is a NaN gap of 2 it would be completely filled with interpolated values. If there is a NaN gap of 4 nothing is filled, which is different from the fillna limit where the two first entries would be filled when using forward filling. This is very applicable for time series where it is often valid to interpolate between small gaps, while larger gaps should not be filled.\r\n\r\nSo lemme write an example:\r\n\r\n```python\r\nimport pandas as pd\r\n\r\n\r\ndf = pd.DataFrame(\r\n    index=pd.date_range(\r\n        start='02-01-2017 06:00:00',\r\n        end='02-07-2017 06:00:00'),\r\n    data={'A': range(7)})\r\ndf = df.drop(pd.to_datetime('2017-02-02 06:00:00'), axis=0)\r\n\r\ndf.head()\r\n\r\n                     A\r\n2017-02-01 06:00:00  0\r\n2017-02-03 06:00:00  2\r\n2017-02-04 06:00:00  3\r\n2017-02-05 06:00:00  4\r\n2017-02-06 06:00:00  5\r\n```\r\n\r\nNow what I want is to resample and interpolate the time series every 12 hours, but only for the consecutive days, so as not to make too big assumptions on the behavior of the time series for larger time deltas. That is not immediately possible currently, because of how `limit` works. See below, where putting `limit` of 2 (i.e. limit of a day) means that if two consecutive values are NaN, please do not fill in:\r\n\r\n```python\r\ndf.resample(rule='12H',base=6).interpolate('time', limit=2)\r\n\r\n                       A\r\n2017-02-01 06:00:00  0.0\r\n2017-02-01 18:00:00  0.5  # I would expect this to be NaN\r\n2017-02-02 06:00:00  1.0  # I would expect this to be NaN\r\n2017-02-02 18:00:00  NaN\r\n2017-02-03 06:00:00  2.0\r\n2017-02-03 18:00:00  2.5\r\n2017-02-04 06:00:00  3.0\r\n2017-02-04 18:00:00  3.5\r\n2017-02-05 06:00:00  4.0\r\n2017-02-05 18:00:00  4.5\r\n2017-02-06 06:00:00  5.0\r\n2017-02-06 18:00:00  5.5\r\n2017-02-07 06:00:00  6.0\r\nIn [ ]:\r\n\r\n```\r\n\r\nTo achieve what I want now, I have to use these functions I made:\r\n\r\n```python\r\ndef interpolate_consecutive(df, frequency):\r\n    \"\"\"\r\n    Only interpolates value at the frequency asked if the\r\n    values where separated by a day.\r\n    \r\n    Paramteres\r\n    ----------\r\n    df : pd.DataFrame\r\n        Dataframe with Time series index\r\n    frequency : basestring\r\n        Frequency to use to resample then interpolate.\r\n        Only expects 'H' or 'T' based rules, but that's\r\n        because I only need to support these in my case.\r\n    \r\n    Returns\r\n    -------\r\n    df : pd.DataFrame\r\n        Resampled and interpolated dataframe.\r\n\r\n    \"\"\"\r\n    base = 6 if 'H' in frequency else 0\r\n    start_indices, end_indices = get_non_consecutive(\r\n        df, pd.Timedelta(days=1))\r\n    df = df.resample(rule=frequency, base=base).interpolate('time')\r\n\r\n    indices_to_drop = []\r\n    for start_date, end_date in zip(start_indices, end_indices):\r\n        indices_to_drop.extend(list(df.index[\r\n            np.logical_and(start_date < df.index,\r\n                           df.index < end_date)]))\r\n    df.drop(indices_to_drop, axis=0, inplace=True)\r\n    return df\r\n\r\n\r\ndef get_non_consecutive(df, timedelta):\r\n    \"\"\"\r\n    Get the tuple start_indices, end_indices of all\r\n    non consecutive period in the dataframe index.\r\n    Two timestamps separated with more than timedelta\r\n    are considered non consecutive.\r\n    \r\n    Parameters\r\n    ----------\r\n    df : pandas.DataFrame\r\n        Dataframe with Time series index\r\n    timedelta : pd.Timedelta\r\n        Time delta.\r\n    \r\n    Returns\r\n    -------\r\n    start_dates : array-like\r\n        List of start dates of non consecutive periods\r\n    end_dates : array-like\r\n        List of end dates of non consecutive periods\r\n\r\n    \"\"\"\r\n    where = np.where(\r\n        df.index[1:] - df.index[:-1] > timedelta)[0]\r\n    return df.index[where], df.index[where + 1]\r\n```\r\n\r\nusing these function I now get my desired output:\r\n\r\n```python\r\ninterpolate_consecutive(df, '12H')\r\n\r\n                       A\r\n2017-02-01 06:00:00  0.0\r\n2017-02-03 06:00:00  2.0\r\n2017-02-03 18:00:00  2.5\r\n2017-02-04 06:00:00  3.0\r\n2017-02-04 18:00:00  3.5\r\n2017-02-05 06:00:00  4.0\r\n2017-02-05 18:00:00  4.5\r\n2017-02-06 06:00:00  5.0\r\n2017-02-06 18:00:00  5.5\r\n2017-02-07 06:00:00  6.0\r\n```\r\n\r\ntldr, `limit` should actually not always do forward filling, but check the length of the NaN gap and not fill in anything if this gap is longer than the limit.\r\n\r\nThank you for taking the time to read this, hope I made myself clear.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303380670",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-303380670",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 303380670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzM4MDY3MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T12:22:01Z",
    "updated_at": "2017-05-23T12:22:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@naifrec thanks for the detailed example, I think I understand the behavior you're looking for.\r\n\r\n`limit` currently has the clearly defined behavior of \"fill at most this many NaNs in a row\", which is useful so we can't change that. We'll have to add another keyword to interpolate.\r\n\r\nI think we should add an additional option to `limit_direction` like `consecutive` (there's probably a better word. Something that describes \"all or nothing\").\r\n\r\nCould you open up a new issue for this (you can just copy your last message). This issue is focusing on extrapolation (which would be orthogonal to this issue)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303389075",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-303389075",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 303389075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzM4OTA3NQ==",
    "user": {
      "login": "WBare",
      "id": 16143425,
      "node_id": "MDQ6VXNlcjE2MTQzNDI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16143425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WBare",
      "html_url": "https://github.com/WBare",
      "followers_url": "https://api.github.com/users/WBare/followers",
      "following_url": "https://api.github.com/users/WBare/following{/other_user}",
      "gists_url": "https://api.github.com/users/WBare/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WBare/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WBare/subscriptions",
      "organizations_url": "https://api.github.com/users/WBare/orgs",
      "repos_url": "https://api.github.com/users/WBare/repos",
      "events_url": "https://api.github.com/users/WBare/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WBare/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T12:56:28Z",
    "updated_at": "2017-05-23T12:56:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Perhaps max_gap meaning it will only interpolate over gaps up to a given size?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/304000094",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-304000094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 304000094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDAwMDA5NA==",
    "user": {
      "login": "WBare",
      "id": 16143425,
      "node_id": "MDQ6VXNlcjE2MTQzNDI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16143425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WBare",
      "html_url": "https://github.com/WBare",
      "followers_url": "https://api.github.com/users/WBare/followers",
      "following_url": "https://api.github.com/users/WBare/following{/other_user}",
      "gists_url": "https://api.github.com/users/WBare/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WBare/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WBare/subscriptions",
      "organizations_url": "https://api.github.com/users/WBare/orgs",
      "repos_url": "https://api.github.com/users/WBare/repos",
      "events_url": "https://api.github.com/users/WBare/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WBare/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T12:37:29Z",
    "updated_at": "2017-05-25T12:37:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm going to get started on this.  \r\n\r\nI think we need to move the naifrec idea of limiting \"gap size\" or \"all or none\" to another issue.\r\n\r\nI did not get any comments on the suggested parameter, so I will use if everyone is cool with that.\r\n\r\nlimit_type= ('interpolate' | 'extrapolate' | None=default to both which is current_behavior)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/304121282",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-304121282",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 304121282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDEyMTI4Mg==",
    "user": {
      "login": "WBare",
      "id": 16143425,
      "node_id": "MDQ6VXNlcjE2MTQzNDI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16143425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WBare",
      "html_url": "https://github.com/WBare",
      "followers_url": "https://api.github.com/users/WBare/followers",
      "following_url": "https://api.github.com/users/WBare/following{/other_user}",
      "gists_url": "https://api.github.com/users/WBare/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WBare/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WBare/subscriptions",
      "organizations_url": "https://api.github.com/users/WBare/orgs",
      "repos_url": "https://api.github.com/users/WBare/repos",
      "events_url": "https://api.github.com/users/WBare/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WBare/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T20:53:06Z",
    "updated_at": "2017-05-25T20:53:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger , I've got this change ready to go but in writing the docs, I realized I may create a little confusion.\r\n\r\nTechnically we are limiting the the .interpolate method to either doing an interpolation or an extrapolation, but since the name of the method is interpolate, it seems weird, from a documentation perspective, to say we can limit the interpolate method only extrapolate and not interpolate.\r\n\r\nIt is easy to describe these values as 'inside' (i.e. NaNs surrounded by valid values - interpolated), or 'outside' (beyond any existing valid value.  How about if we call it this:\r\n\r\nlimit_range= ('inside' | 'outside' | None=default to both which is current_behavior)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/304125230",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-304125230",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 304125230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDEyNTIzMA==",
    "user": {
      "login": "WBare",
      "id": 16143425,
      "node_id": "MDQ6VXNlcjE2MTQzNDI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16143425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WBare",
      "html_url": "https://github.com/WBare",
      "followers_url": "https://api.github.com/users/WBare/followers",
      "following_url": "https://api.github.com/users/WBare/following{/other_user}",
      "gists_url": "https://api.github.com/users/WBare/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WBare/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WBare/subscriptions",
      "organizations_url": "https://api.github.com/users/WBare/orgs",
      "repos_url": "https://api.github.com/users/WBare/repos",
      "events_url": "https://api.github.com/users/WBare/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WBare/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T21:08:42Z",
    "updated_at": "2017-05-25T21:08:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Or, since range has meaning, limit_area =('inside' | 'outside') may be even better.  That sort of fits with limit_direction since you move in a direction and move in an area."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362269790",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-362269790",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 362269790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjI2OTc5MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T13:44:53Z",
    "updated_at": "2018-02-01T13:44:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @WBare finally go this in!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/371253928",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16284#issuecomment-371253928",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16284",
    "id": 371253928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTI1MzkyOA==",
    "user": {
      "login": "WBare",
      "id": 16143425,
      "node_id": "MDQ6VXNlcjE2MTQzNDI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16143425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WBare",
      "html_url": "https://github.com/WBare",
      "followers_url": "https://api.github.com/users/WBare/followers",
      "following_url": "https://api.github.com/users/WBare/following{/other_user}",
      "gists_url": "https://api.github.com/users/WBare/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WBare/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WBare/subscriptions",
      "organizations_url": "https://api.github.com/users/WBare/orgs",
      "repos_url": "https://api.github.com/users/WBare/repos",
      "events_url": "https://api.github.com/users/WBare/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WBare/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T19:23:06Z",
    "updated_at": "2018-03-07T19:23:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @TomAugspurger and @jreback,\r\n\r\nthanks for getting this done.  I just logged into GitHub and I saw you two had to take this over the finish line.  I apologize for that.  I thought we were totally done last year and I have not been back on GitHub since then. I will be more careful to check the status if I submit again in the future.\r\n"
  }
]
