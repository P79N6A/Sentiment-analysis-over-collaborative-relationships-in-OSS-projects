[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168354013",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11939#issuecomment-168354013",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11939",
    "id": 168354013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODM1NDAxMw==",
    "user": {
      "login": "mortada",
      "id": 1642081,
      "node_id": "MDQ6VXNlcjE2NDIwODE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1642081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mortada",
      "html_url": "https://github.com/mortada",
      "followers_url": "https://api.github.com/users/mortada/followers",
      "following_url": "https://api.github.com/users/mortada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mortada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mortada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mortada/subscriptions",
      "organizations_url": "https://api.github.com/users/mortada/orgs",
      "repos_url": "https://api.github.com/users/mortada/repos",
      "events_url": "https://api.github.com/users/mortada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mortada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-02T01:04:00Z",
    "updated_at": "2016-01-02T01:04:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "seems odd to me to do `.astype(np.object)`, as you are essentially trying to convert the integers into strings or bytes? I'd suggest something like `.apply(str)`\n\n```\nIn [1]: import pandas as pd\n\nIn [2]: df = pd.DataFrame({'a': [1, 2]})\n\nIn [3]: print df.dtypes\na    int64\ndtype: object\n\nIn [4]: df.a = df.a.apply(str)\n\nIn [5]: print df.dtypes\na    object\ndtype: object\n\nIn [6]: df.a.str.decode('utf-8', errors='ignore').str.encode('utf-8')\nOut[6]:\n0    1\n1    2\nName: a, dtype: object\n```\n\nthis works for me with python2.7.x and pandas 0.17.1\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168354582",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11939#issuecomment-168354582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11939",
    "id": 168354582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODM1NDU4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-02T01:25:50Z",
    "updated_at": "2016-01-02T01:25:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@michaelbilow you shouldn't use object except if you have only strings. Putting numbers and such in object dtypes, while possible, is non-performant.\n\nThis is reacting correctly, so closing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168355075",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11939#issuecomment-168355075",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11939",
    "id": 168355075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODM1NTA3NQ==",
    "user": {
      "login": "michaelbilow",
      "id": 1712022,
      "node_id": "MDQ6VXNlcjE3MTIwMjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1712022?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelbilow",
      "html_url": "https://github.com/michaelbilow",
      "followers_url": "https://api.github.com/users/michaelbilow/followers",
      "following_url": "https://api.github.com/users/michaelbilow/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelbilow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelbilow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelbilow/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelbilow/orgs",
      "repos_url": "https://api.github.com/users/michaelbilow/repos",
      "events_url": "https://api.github.com/users/michaelbilow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelbilow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-02T01:43:55Z",
    "updated_at": "2016-01-02T01:43:55Z",
    "author_association": "NONE",
    "body": "Thanks for explaining. The bigger issue is that I'm trying to do the unicode conversion (for the purpose of writing to Excel) on a huge number of completely different dataframes, to the point that it'd be a big headache to figure out what the format of each thing that ends up being labeled an object's actual dtype should be.\n\ndf.convert_objects() does a very good job of figuring out what is a string and what isn't, but with it being deprecated I don't know of an efficient replacement.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168356071",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11939#issuecomment-168356071",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11939",
    "id": 168356071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODM1NjA3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-02T01:47:19Z",
    "updated_at": "2016-01-02T01:47:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "the replacements are `pd.to_numeric/pd.to_datetime/pd.to_timedelta`. The point is `.convert_objects` essentially would convert too aggressivley. You need to have _some_ idea what the things are (or you are certainly welcome to try progressive conversions yourself. But its too magical for pandas to do this directly).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168357485",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11939#issuecomment-168357485",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11939",
    "id": 168357485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODM1NzQ4NQ==",
    "user": {
      "login": "michaelbilow",
      "id": 1712022,
      "node_id": "MDQ6VXNlcjE3MTIwMjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1712022?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelbilow",
      "html_url": "https://github.com/michaelbilow",
      "followers_url": "https://api.github.com/users/michaelbilow/followers",
      "following_url": "https://api.github.com/users/michaelbilow/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelbilow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelbilow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelbilow/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelbilow/orgs",
      "repos_url": "https://api.github.com/users/michaelbilow/repos",
      "events_url": "https://api.github.com/users/michaelbilow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelbilow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-02T02:16:16Z",
    "updated_at": "2016-01-02T02:16:16Z",
    "author_association": "NONE",
    "body": "I see. For my purpose, perhaps I'm better off either converting all the unknown object types using `astype(str)`, or by catching the AttributeErrors as they arise, since the only thing I really care about is dodging the UnicodeDecodeErrors that come up when writing to Excel.\n"
  }
]
