[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54624106",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8177#issuecomment-54624106",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8177",
    "id": 54624106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjI0MTA2",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T13:25:08Z",
    "updated_at": "2014-09-05T13:25:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll add this argument to `df.plot(..., fillna=None)` and `series.plot(..., fillna=None)`. The default is `None`, which means follow these defaults:\n- Line Plot: Don't fill anything, leaves gaps in the line at the missing values\n- (Stacked) Bar Plot: Fill with zeros before plotting (This PR fixes the bug on stacked bar plots not drawing past a NaN).\n- Hist: `df.plot(kind='hist')` <==> `df.dropna().plot(kind='hist')` (column-wise I think)\n- Boxplot: `df.plot(kind='box')` <==> `df.dropna().plot(kind='box')` (column-wise I think)\n- Areaplot `df.plot(kind='area')` <==> `df.fillna(0).plot(kind='area')`\n- Hexbin: `df.plot(kind='hexbin')` <==> `df.dropna().plot(kind='area')`\n- Pie: `df.plot(kind='pie')` <==> `df.fillna(0).plot(kind='pie')`\n\nAll look good? The only end-user change from this PR is barplot not bugging out with NaNs.\nThe reason that I don't see a need for a kwarg is that I don't really think there's anything to turn off here. I think that for all of these, the default is the _only_ sensible thing to do. Any counterexamples where our defaults do the wrong thing?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54624985",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8177#issuecomment-54624985",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8177",
    "id": 54624985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjI0OTg1",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T13:33:28Z",
    "updated_at": "2014-09-05T13:33:44Z",
    "author_association": "MEMBER",
    "body": "Complement:\n- Line Plot(unstacked): Don't fill anything, leaves gaps in the line at the missing values\n- Line Plot(stacked): `df.fillna(0).plot(stacked=True)`\n- Kde: `df.dropna().plot(kind='kde')`\n- Scatter: `df.dropna().plot(kind='scatter')`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54711316",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8177#issuecomment-54711316",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8177",
    "id": 54711316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzExMzE2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-06T12:46:10Z",
    "updated_at": "2014-09-06T12:46:10Z",
    "author_association": "MEMBER",
    "body": "+1 for _not_ a new keyword, let's just implement sane default behaviour (which is already the case I think apart from the bug addressed iin this PR), and let people use `fillna` if they want something else.\n\nOne remark, the default for `pie` is fill with 0, would it not more logical to drop?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54711513",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8177#issuecomment-54711513",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8177",
    "id": 54711513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzExNTEz",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-06T12:54:46Z",
    "updated_at": "2014-09-06T12:55:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Re the default for pie, I think you're correct.\n\n``` python\nIn [11]: series = Series(3 * np.random.rand(8),\n    index=['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'], name='series')\nIn [15]: series.iloc[:4] = np.nan\n\nIn [16]: series.plot(kind='pie')\nOut[16]: <matplotlib.axes._subplots.AxesSubplot at 0x11183e128>\n```\n\n![nana](https://cloud.githubusercontent.com/assets/1312546/4175194/c8b246d6-35c4-11e4-9513-b1539f956d72.png)\n\nA bit hard to see, but all the NaNs are piled on top of each other (middle right). New issue?\n"
  }
]
