[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222760609",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13335#issuecomment-222760609",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13335",
    "id": 222760609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjc2MDYwOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-31T17:30:03Z",
    "updated_at": "2016-05-31T17:30:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "is the same issue I think as here: https://github.com/pydata/pandas/issues/13166\n\nfrom @pitrou \n\n```\nPyHash_double is doing this so that hash(float(x)) == hash(x) for every integer x that's exactly representable as a double\nActually, as the comment suggests, it also ensures that the invariant holds if x is a Fraction\n >>> x = Fraction(5, 4)\n>>> hash(x)\n576460752303423489\n>>> hash(float(x))\n576460752303423489\n```\n\nSo I think we could simply change as suggested in #13166 and see. Probably seeing LOTS of hash collisions.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222760760",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13335#issuecomment-222760760",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13335",
    "id": 222760760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjc2MDc2MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-31T17:30:37Z",
    "updated_at": "2016-05-31T17:30:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suspect the upcasting from float32 -> float64 might contribute to this as well.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/223032716",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13335#issuecomment-223032716",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13335",
    "id": 223032716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzAzMjcxNg==",
    "user": {
      "login": "RogerThomas",
      "id": 3211163,
      "node_id": "MDQ6VXNlcjMyMTExNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3211163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RogerThomas",
      "html_url": "https://github.com/RogerThomas",
      "followers_url": "https://api.github.com/users/RogerThomas/followers",
      "following_url": "https://api.github.com/users/RogerThomas/following{/other_user}",
      "gists_url": "https://api.github.com/users/RogerThomas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RogerThomas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RogerThomas/subscriptions",
      "organizations_url": "https://api.github.com/users/RogerThomas/orgs",
      "repos_url": "https://api.github.com/users/RogerThomas/repos",
      "events_url": "https://api.github.com/users/RogerThomas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RogerThomas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-01T15:37:12Z",
    "updated_at": "2016-06-01T15:37:12Z",
    "author_association": "NONE",
    "body": "@jreback i've been looking into this, but I'm not getting very far, any advice on why we're seeing this issue in python3 and not python2, since both are being compiled into c code I don't see how the python version can have an effect\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/223067721",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13335#issuecomment-223067721",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13335",
    "id": 223067721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzA2NzcyMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-01T17:35:16Z",
    "updated_at": "2016-06-01T17:35:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "see the issue I referenced. I think you can fix it by changing the hashing code as indicated.\n\nI think that python 3 is taking great care with the hashing, somewhat to the detriment of perf. (which is what the `Float64Hashtable` ultimately does via `kh_*` functions). The adjustment makes it much faster (and for all intents and purposes works the same).\n"
  }
]
