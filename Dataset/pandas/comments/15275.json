[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276664364",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15275#issuecomment-276664364",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15275",
    "id": 276664364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjY2NDM2NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T14:03:10Z",
    "updated_at": "2017-02-01T14:03:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "The documentation is actually right. What happens is that ``.groupby`` uses the doc string for certain 'whitelisted' methods, IOW, methods that are effectively called like\r\n\r\n``df.groupby(...).apply(lambda x: getattr(x, method)(...))`` so in this case\r\n``df.groupby(...).apply(lambda x: x.idxmin())``\r\n\r\nthen the results are inferred to be of the appropriate shape. Since this is a groupby, you get a Series for each group which are then stacked.\r\n\r\nSo the result is correct and the method of generating the document is 'correct', but this is a method that generates a Series (and not a scalar return), so ``.apply`` infers the correct output shape.\r\n\r\nSo we would need to update the templates a bit to fix this. A PR is welcome for this. I suspect there are several other methods that have this issue as well, but you would have to scan the doc-strings I think to see.\r\n\r\nwe actually just had some discussion w.r.t. this for ``.describe`` https://github.com/pandas-dev/pandas/pull/15260#issuecomment-276073724 and in #15272 so these are going to be solved differently (but the idea is the same)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276672012",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15275#issuecomment-276672012",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15275",
    "id": 276672012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjY3MjAxMg==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T14:33:43Z",
    "updated_at": "2017-02-01T14:33:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, I think I understand what you are saying, but I'm a bit confused still about what the \"expected result\" should be here. If I'm reading you correctly, you're saying that the templates need to be changed such that `DataFrameGroupby.idxmin()` (and, presumably, `idxmax()` and possibly a host of other methods where the same thing happens) explicitly states that it returns a `DataFrame`, right?\r\n\r\nI'm just confused because you say that \"the documentation is actually right\", but then go on to explain why the documentation says the wrong thing. I'm guessing that you meant that it's the right documentation for `x.idxmin()`, but that when it gets inherited by things that stack it, the *final* documentation is wrong."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276676483",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15275#issuecomment-276676483",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15275",
    "id": 276676483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjY3NjQ4Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T14:50:46Z",
    "updated_at": "2017-02-01T14:50:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pganssle yes, I mean the *groupby* documention is wrong, but the source itself (DataFrame.idxmin/Series.idxmin) is right. We simply use that documentation.\r\n\r\nWe need a slightly more sophisticated strategy of using the source documentation, but changing the return type to what it actually is for *some* groupby methods. A way to do this would be to make the return type a replaceable parameter in the doc-string for Series/Dataframe (and then replace it locally there), and use that here as a template.\r\n\r\nA bit of work, but I think we need to go down this route to avoid copy-pasting doc-strings, IOW, they will be defined in a singular place (on the source method, e.g. Series.idxmin or DataFrame.idxmin / even these *could* combined also), then using that in groupby with some Substitution parameters."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276683641",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15275#issuecomment-276683641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15275",
    "id": 276683641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjY4MzY0MQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T15:16:04Z",
    "updated_at": "2017-02-01T15:16:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, yeah, that's what I thought. I agree on the point of documentation, by the way - I've always felt like documentation tools (at least in Python, which is where I'm most familiar with them) were lacking in support for the DRY (don't repeat yourself) principle. You end up having to do some funky stuff like creating metaclasses or dynamically generate docstrings on import (which makes things a bit harder when navigating the code instead of looking at the generated documentation).\r\n\r\nI'll take a look at how the templating looks and see if I can find an easy way to either make the return type a replaceable parameter, infer it from the code or both."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276685273",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15275#issuecomment-276685273",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15275",
    "id": 276685273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjY4NTI3Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T15:21:27Z",
    "updated_at": "2017-02-01T15:21:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pganssle yep, tooling is not great, though using Appender and Substitution we get pretty far.\r\n\r\nthanks for looking into this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303569312",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15275#issuecomment-303569312",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15275",
    "id": 303569312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzU2OTMxMg==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T23:49:53Z",
    "updated_at": "2017-05-23T23:49:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hm... This is quite complicated, I'm not quite sure how `Appender` and `Substitution` are supposed to work in the case of inherited docstrings, because the top-level documentation itself has to be displayed, meaning the substitution has to take place there. In all derived functions, there's nothing to substitute.\r\n\r\nI think the best way to handle this is to modify `Substitution` and `Appender` to preserve the original template versions to allow for function-specific docstring modifications.\r\n"
  }
]
