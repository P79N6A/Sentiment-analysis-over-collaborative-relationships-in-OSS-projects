[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/320631036",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17190#issuecomment-320631036",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17190",
    "id": 320631036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDYzMTAzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T10:42:23Z",
    "updated_at": "2017-08-07T10:42:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "``.apply`` does quite a lot of inference, some of this depends on whether its a mixed type (your first example) or not (your 2nd). You are welcome to have a look. Not sure why you aren't using the canonical (which is also vectorized).\r\n\r\n```\r\nIn [48]: df.impressions/df.clicks\r\nOut[48]: \r\n0    1.000000\r\n1         inf\r\ndtype: float64\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/320631398",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17190#issuecomment-320631398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17190",
    "id": 320631398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDYzMTM5OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T10:44:18Z",
    "updated_at": "2017-08-07T10:44:18Z",
    "author_association": "MEMBER",
    "body": "Simpler reproducible example:\r\n\r\n```\r\nIn [27]: pd.Series([1, 2]) / 0\r\nOut[27]: \r\n0    inf\r\n1    inf\r\ndtype: float64\r\n\r\nIn [30]: pd.Series([1, 2], dtype=object) / 0\r\n...\r\nZeroDivisionError: division by zero\r\n```\r\n\r\nThis is due to underlying behaviour of numpy (returning inf) vs standard python (raising an error). \r\nThe numpy behaviour can be changed with a setting (https://docs.scipy.org/doc/numpy/reference/generated/numpy.seterr.html)\r\n\r\nIn this case specifically, the reason you get this difference between the two cases is because `apply` converts the rows to a series, which needs a single dtype, so in the first it become object due to the string, but in the second case it keeps the int64 numpy dtype.\r\n\r\nI agree this can be surprising, but given my explanation above, I am not sure we can/should fix this in pandas.\r\n\r\nWorkaround can also be to first select the needed columns when doing the apply (`df[['clicks', 'impressions']].apply(..)`\r\n\r\nAnd of course in this case it is even much better to just do `df['impressions'] / df['clicks']` (but your example was maybe simplified?)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/320642289",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17190#issuecomment-320642289",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17190",
    "id": 320642289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDY0MjI4OQ==",
    "user": {
      "login": "alexeygrigorev",
      "id": 875246,
      "node_id": "MDQ6VXNlcjg3NTI0Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/875246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexeygrigorev",
      "html_url": "https://github.com/alexeygrigorev",
      "followers_url": "https://api.github.com/users/alexeygrigorev/followers",
      "following_url": "https://api.github.com/users/alexeygrigorev/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexeygrigorev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexeygrigorev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexeygrigorev/subscriptions",
      "organizations_url": "https://api.github.com/users/alexeygrigorev/orgs",
      "repos_url": "https://api.github.com/users/alexeygrigorev/repos",
      "events_url": "https://api.github.com/users/alexeygrigorev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexeygrigorev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T11:46:12Z",
    "updated_at": "2017-08-07T11:46:12Z",
    "author_association": "NONE",
    "body": "Yes, of course the example was simplified - it was taken from some existing codebase and I had a lot of fun trying to understand what's going on there.\r\n\r\nThanks for explanation! "
  }
]
