[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43320092",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7141#issuecomment-43320092",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7141",
    "id": 43320092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzIwMDky",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-16T11:06:00Z",
    "updated_at": "2014-05-16T11:06:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://pandas-docs.github.io/pandas-docs-travis/io.html#specifying-column-data-types\n\ndtype inference is currently only supported in the c engine\nread_fwf uses the python engine\n\nthat said adding a dtype arg to the python engine is pretty easy\n\nthen read_fwf should follow from their\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43320270",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7141#issuecomment-43320270",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7141",
    "id": 43320270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzIwMjcw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-16T11:08:36Z",
    "updated_at": "2014-05-16T11:08:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "read_fwf should raise if dtype is passed - is that not the case? (on master)\n\nFYI most dtype issues are because you have an int64 dtype in one chunk and Nan's in another hence it's float64\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43324748",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7141#issuecomment-43324748",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7141",
    "id": 43324748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzI0NzQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-16T12:17:35Z",
    "updated_at": "2014-05-16T12:18:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "related: https://github.com/pydata/pandas/pull/6889\n\n@mcwitt did we add the warning for `read_fwf` which calls the python parser (when specifying dtype)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43356526",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7141#issuecomment-43356526",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7141",
    "id": 43356526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzU2NTI2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-16T17:16:45Z",
    "updated_at": "2014-05-16T17:16:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [2]:         data1 = \"\"\"\\\n   ...: 201158    360.242940   149.910199   11950.7\n   ...: 201159    444.953632   166.985655   11788.4\n   ...: 201160    364.136849   183.628767   11806.2\n   ...: 201161    413.836124   184.375703   11916.8\n   ...: 201162    502.953953   173.237159   12468.3\n   ...: \"\"\"\n\nIn [3]:         colspecs = [(0, 4), (4, 8), (8, 20), (21, 33), (34, 43)]\n\nIn [5]:         df = pd.read_fwf(StringIO(data1), colspecs=colspecs, header=None)\n\nIn [6]: df\nOut[6]: \n      0   1           2           3        4\n0  2011  58  360.242940  149.910199  11950.7\n1  2011  59  444.953632  166.985655  11788.4\n2  2011  60  364.136849  183.628767  11806.2\n3  2011  61  413.836124  184.375703  11916.8\n4  2011  62  502.953953  173.237159  12468.3\n\nIn [7]: df.dtypes\nOut[7]: \n0      int64\n1      int64\n2    float64\n3    float64\n4    float64\ndtype: object\n\nIn [8]:         df = pd.read_fwf(StringIO(data1), colspecs=colspecs, header=None,dtype={0 : 'float64'})\nValueError: The 'dtype' option is not supported with the 'python-fwf' engine\n```\n\nSo this is correctly raising in master (so tested for the option not-allowed in python-fwf).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44219697",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7141#issuecomment-44219697",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7141",
    "id": 44219697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjE5Njk3",
    "user": {
      "login": "brendon9x",
      "id": 491483,
      "node_id": "MDQ6VXNlcjQ5MTQ4Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/491483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brendon9x",
      "html_url": "https://github.com/brendon9x",
      "followers_url": "https://api.github.com/users/brendon9x/followers",
      "following_url": "https://api.github.com/users/brendon9x/following{/other_user}",
      "gists_url": "https://api.github.com/users/brendon9x/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brendon9x/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brendon9x/subscriptions",
      "organizations_url": "https://api.github.com/users/brendon9x/orgs",
      "repos_url": "https://api.github.com/users/brendon9x/repos",
      "events_url": "https://api.github.com/users/brendon9x/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brendon9x/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-26T21:42:04Z",
    "updated_at": "2014-05-26T21:42:04Z",
    "author_association": "NONE",
    "body": "Hi Jeff,\n\nThanks for getting back so quickly and sorry for not doing the same.  I should have checked master before mentioning the lack of error message, so thanks retrospectively for having fixed that.  I think having looked at the source, it is possible for me to work around the issue using the `converters` argument.  \n\nIf you're amenable to a PR though, I'm keen to try with your guidance as I think converters are probably going to be slow (maybe numba though?).  There are a few ways I've spotted to add this functionality in ascending order of ambition:\n1. Convert a `dtype` argument into a `converters` argument.  Looks easy and purely additive, but probably very slow.\n2. Add a new Cython function `try_convert_using_dtype` based on `maybe_convert_numeric` but simplified to throw on error (like np.int64 casting a nan).\n3. Possibly just use standard numpy.astype instead in `_convert_types`.  (guessing not because of all the options).\n4. Look for ways to adapt the c parser.  I'm excited by the potential speed of fwf files, but the state machine in there is maybe not needed at all.  Perhaps too much of complexity sacrifice.\n\nDo any of these options sound right?  Is there another way?  And would be happy for me to take a stab at it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44220845",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7141#issuecomment-44220845",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7141",
    "id": 44220845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjIwODQ1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-26T22:10:08Z",
    "updated_at": "2014-05-26T22:10:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "No problem! So here's the approach that I would take:\n\nFixed width reading is just a sub-class of `PythonParser`, and that needs dtype support (the c-parser ALREADY has dtype support directly).\n\nI think it should go just about here somewhere: https://github.com/pydata/pandas/blob/master/pandas/io/parsers.py#L1833\n\nEssentially you just try to convert the specified column (using `astype` in a `try: except:` block). If it works then its good, otherwise not.\n\nYou can look in the c-parser for reference here: https://github.com/pydata/pandas/blob/master/pandas/parser.pyx#L1216 Though that is a LOT more complicated because its in c-land and not so friendly. \n\nyou also need to do _some_ conversions on the passed dtypes (e.g. you run then thru `np.dtype`in a try-except, as users can pass myriad of things!). Then you need to convert those a bit (the main one is all string ones get converted to `object`, e.g. passing `S64` yields an object dtype), you need to do something like this: https://github.com/pydata/pandas/blob/master/pandas/parser.pyx#L998 (note that you really can't 'reuse' this code, but no worries as the python code for this is MUCH simpler).\n\nThe main thing this needs is a bunch of tests (for possible weird user input), but I think c-parser has a bunch of tests (that are just turned off for Python/FixedWidth parser ATM - that's where the warning/error comes from).\n\nlmk as you progress\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222030036",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7141#issuecomment-222030036",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7141",
    "id": 222030036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjAzMDAzNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T00:19:09Z",
    "updated_at": "2016-05-27T00:19:09Z",
    "author_association": "MEMBER",
    "body": "@jreback : Is it just that simple that we do `try-except` for each specified `dtype`?  Why can it be that simple compared to the C engine?  I didn't quite follow your explanation above.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222030948",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7141#issuecomment-222030948",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7141",
    "id": 222030948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjAzMDk0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T00:26:23Z",
    "updated_at": "2016-05-27T00:26:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "In python I think it IS that simple. The c-engine does all of this in cython (basically the same thing); though it does it with much more c-code, which happens to not hold the GIL (though it wasn't that way to start). I don't know why it was not done with `try-except`; could be efficiency actually; though most of the c-code is doing `.astype`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222031149",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7141#issuecomment-222031149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7141",
    "id": 222031149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjAzMTE0OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T00:28:03Z",
    "updated_at": "2016-05-27T00:28:03Z",
    "author_association": "MEMBER",
    "body": "Fair enough.  Will give it a shot and see what happens.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222032324",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7141#issuecomment-222032324",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7141",
    "id": 222032324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjAzMjMyNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T00:37:37Z",
    "updated_at": "2016-05-27T00:37:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "btw there _might_ be more issues (that are open) w.r.t. dtype handling by python engine. IIRC\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222270094",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7141#issuecomment-222270094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7141",
    "id": 222270094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjI3MDA5NA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T22:52:34Z",
    "updated_at": "2016-05-27T22:52:34Z",
    "author_association": "MEMBER",
    "body": "Perhaps.  The more I keep looking at this, the more complicated the issue _seems_ to be because of that inconsistent handling of converters, dtypes, and coerced casting.  I could put the attempted `dtype` casting where you had initially put it, but it isn't consistent with what the C engine does because currently the C engine doesn't respect `dtype` if there are converters involved (similar to #13302).  The casting behaviour on both engines is not aligned in fact, and it's surprising to an extent how consistent their behaviour has been in testing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/263089851",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7141#issuecomment-263089851",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7141",
    "id": 263089851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA4OTg1MQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T22:30:48Z",
    "updated_at": "2016-11-26T22:30:48Z",
    "author_association": "MEMBER",
    "body": "@chris-b1 : Does #14295 resolve this issue?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/263092045",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7141#issuecomment-263092045",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7141",
    "id": 263092045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA5MjA0NQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T23:23:49Z",
    "updated_at": "2016-11-26T23:23:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "It should, although I didn't add any docs or tests for that case - I'll do a follow-up PR, thanks for noticing this."
  }
]
