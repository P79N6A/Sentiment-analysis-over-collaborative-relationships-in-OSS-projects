[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305198999",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16552#issuecomment-305198999",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16552",
    "id": 305198999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTE5ODk5OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T14:11:55Z",
    "updated_at": "2017-05-31T14:11:55Z",
    "author_association": "MEMBER",
    "body": "Yes, this is the expected behaviour. Accessing a row like that gives you a Series, and a Series always has a single dtype. So in this case it upcasts all elements to float (and not to object and keeping the original types)\r\n\r\nIf you want to do something row by row (and when this is inevitable), I would rather suggest to use eg `itertuples`, which does not convert each row to a Series, and thus preserves original dtypes.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305201983",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16552#issuecomment-305201983",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16552",
    "id": 305201983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTIwMTk4Mw==",
    "user": {
      "login": "jlopezpena",
      "id": 3518950,
      "node_id": "MDQ6VXNlcjM1MTg5NTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3518950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlopezpena",
      "html_url": "https://github.com/jlopezpena",
      "followers_url": "https://api.github.com/users/jlopezpena/followers",
      "following_url": "https://api.github.com/users/jlopezpena/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlopezpena/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlopezpena/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlopezpena/subscriptions",
      "organizations_url": "https://api.github.com/users/jlopezpena/orgs",
      "repos_url": "https://api.github.com/users/jlopezpena/repos",
      "events_url": "https://api.github.com/users/jlopezpena/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlopezpena/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T14:21:53Z",
    "updated_at": "2017-05-31T14:21:53Z",
    "author_association": "NONE",
    "body": "I see... but what if I don't want to iterate over all rows?\r\nSo far I have got around the issue by forcing the selector to return me a dataframe that I send to my db writer (doing something like `a.loc[[0]]`), but this is not ideal. \r\nIs there a way to extract a single row (either by name or location) preserving the original types?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305203102",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16552#issuecomment-305203102",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16552",
    "id": 305203102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTIwMzEwMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T14:25:35Z",
    "updated_at": "2017-05-31T14:25:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "You could `.astype` everything to object ahead of time.\r\n\r\n```\r\na.astype(object).loc[1]\r\n```\r\n\r\nwill have a mix of (python) integers and floats. But FYI, this will in general be slow if you do any other operations (maybe not a concern if it's a single row), and if you do any pandas operations on that, they could be cast back to floats."
  }
]
