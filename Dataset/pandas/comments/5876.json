[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31830206",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5876#issuecomment-31830206",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5876",
    "id": 31830206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODMwMjA2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-08T13:22:36Z",
    "updated_at": "2014-01-08T13:22:36Z",
    "author_association": "MEMBER",
    "body": "This also does not work with matplotlib (eg `plt.hist([u\"abc\", u\"bcd\", u\"cde\", u\"abc\"])`), although with another error. So maybe mark an issue there.\n\nBut should it work with non numeric data? A histogram is about binning? Maybe a better error message is possible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31858601",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5876#issuecomment-31858601",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5876",
    "id": 31858601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODU4NjAx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-08T17:44:11Z",
    "updated_at": "2014-01-08T17:44:11Z",
    "author_association": "MEMBER",
    "body": "@JanSchulz What would you expect to happen here? Non-numeric data don't really make sense for a histogram, because nominal data (such as strings) don't have an ordering, can't be added together numerically and don't have any sort of multiplication operation that's germane to computing a histogram.\n\nThat said, I agree with @jorisvandenbossche that the error message _could_ be a bit less cryptic.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31861270",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5876#issuecomment-31861270",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5876",
    "id": 31861270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODYxMjcw",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-08T18:10:37Z",
    "updated_at": "2014-01-08T18:10:37Z",
    "author_association": "NONE",
    "body": "I have noticed series.hist() also fails for datetime64ns series. It would be cool if we could handle this. I'm not sure how NumPy/MatplotLib computes the bucketing on these value types to get the histogram. If its just 64bit ints underlying then it should not be too hard to bucket with datetime bin edges.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31861564",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5876#issuecomment-31861564",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5876",
    "id": 31861564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODYxNTY0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-08T18:13:42Z",
    "updated_at": "2014-01-08T18:13:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "`value_counts` handles all of the dtypes, so easy enough to prob just catch the error, do a value_counts and retry\n\n```\nIn [4]: df['name'].value_counts()\nOut[4]: \nabc    2\ncde    1\nbcd    1\ndtype: int64\n\nIn [5]: df['name'].value_counts().hist()\nOut[5]: <matplotlib.axes.AxesSubplot at 0x30fb250>\n\nIn [6]: df['name'].hist()\n\nTypeError: coercing to Unicode: need string or buffer, float found\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31871240",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5876#issuecomment-31871240",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5876",
    "id": 31871240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODcxMjQw",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-08T19:52:24Z",
    "updated_at": "2014-01-08T19:52:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually I expected a bar plot (value -> count). So in the above example I wanted to have three bars, labels are \"abc\", \"cde\", \"bcd\" with the length of the bars 2, 1, 1.\n\nUsung plot with kind=bar also fails:\n\n```\ns = df[\"name\"]\ns.plot(kind='bar')\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-30-0d9dfbe49ce9> in <module>()\n      1 s = df[\"name\"]\n----> 2 s.plot(kind='bar')\n\nC:\\portabel\\Python27\\lib\\site-packages\\pandas\\tools\\plotting.pyc in plot_series(series, label, kind, use_index, rot, xticks, yticks, xlim, ylim, ax, style, grid, legend, logx, logy, secondary_y, **kwds)\n   1797                      secondary_y=secondary_y, **kwds)\n   1798 \n-> 1799     plot_obj.generate()\n   1800     plot_obj.draw()\n   1801 \n\nC:\\portabel\\Python27\\lib\\site-packages\\pandas\\tools\\plotting.pyc in generate(self)\n    874     def generate(self):\n    875         self._args_adjust()\n--> 876         self._compute_plot_data()\n    877         self._setup_subplots()\n    878         self._make_plot()\n\nC:\\portabel\\Python27\\lib\\site-packages\\pandas\\tools\\plotting.pyc in _compute_plot_data(self)\n    955         if is_empty:\n    956             raise TypeError('Empty {0!r}: no numeric data to '\n--> 957                             'plot'.format(numeric_data.__class__.__name__))\n    958 \n    959         self.data = numeric_data\n\nTypeError: Empty 'Series': no numeric data to plot\n```\n\n`df[\"name\"].value_counts().hist()` is not what I wanted: this does a histogram over the count values, so ends up in the above case with two bars, one for '1' (length two, as 1 is two times present) and one for '2' with length 1.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31871339",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5876#issuecomment-31871339",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5876",
    "id": 31871339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODcxMzM5",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-08T19:53:23Z",
    "updated_at": "2014-01-08T19:53:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thats what I wanted:\n\n```\ndf[\"name\"].value_counts().plot(kind=\"bar\")\n```\n\n:-)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157565865",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5876#issuecomment-157565865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5876",
    "id": 157565865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzU2NTg2NQ==",
    "user": {
      "login": "themrmax",
      "id": 8220288,
      "node_id": "MDQ6VXNlcjgyMjAyODg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8220288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/themrmax",
      "html_url": "https://github.com/themrmax",
      "followers_url": "https://api.github.com/users/themrmax/followers",
      "following_url": "https://api.github.com/users/themrmax/following{/other_user}",
      "gists_url": "https://api.github.com/users/themrmax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/themrmax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/themrmax/subscriptions",
      "organizations_url": "https://api.github.com/users/themrmax/orgs",
      "repos_url": "https://api.github.com/users/themrmax/repos",
      "events_url": "https://api.github.com/users/themrmax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/themrmax/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T01:14:44Z",
    "updated_at": "2015-11-18T01:14:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I really want this feature, since most of the data I deal with is categorical, and so I can never use the convenience of `hist`. (This is also relevant to https://github.com/pydata/pandas/issues/8712 and maybe https://github.com/pydata/pandas/issues/10254) Philosophically, I think this type of behaviour could be seen as more like an enhancement for `bar`, rather than `hist` for example in R, by default `geom_bar` will plot the value counts; you only get the actual values if you pass `stat=\"identity\"` (opposite of the behaviour of `pandas.plot.bar`). So maybe this could also be referenced inside `BarPlot` via an optional `value_counts` flag.\n\nI've hacked together something which provides this functionality using the Pandas `DataFrame.plot` API. Would this be suitable for merging into `tools.plotting`? My concern is that `tools.plotting` is mostly written using native calls to `matplotlib`, is it a problem to have calls to a Pandas API inside this library. \n\nApologies if this is a dumb question, or if I'm rasing this in the wrong place, this would be my first contribution to Pandas and I'm having trouble wrapping my head around exactly where this fits in.\n\n```\ndef categorical_hist(data,column=None,by=None,layout=None,legend=None,**params):\n  \"\"\"\n      Draw a bar plot of value counts. If layout=none, layout will be a square \n      grid, overriding the DataFrame.plot default of a single column of \n      stacked plots\n\n      Parameters\n      ----------\n      data : DataFrame or Series\n      column : object, optional\n          the column to plot (only valid if data is a dataframe)\n      by : object optional\n          if passed, then used to form bar plots for separate groups\n      layout : (int,int), optional\n          a tuple (width, height) of the subplots grid\n      legend : False/True/'reverse'\n          place legend on axis subplots\n      kwds : other plotting keyword arguments\n\n  \"\"\"\n  from math import sqrt, ceil\n  from pandas import DataFrame\n\n  if column is None: column = data.name #if data is a Series, need to set this\n  data = DataFrame(data) #if data is a series, make it a DataFrame\n\n  if by is not None:\n    if layout==None:\n      s = ceil(sqrt(data[column].unique().size))\n      layout = (s,s)\n    data = data.groupby(by).value_counts().sort_index().unstack()\n    return data[column].plot.bar(subplots=True,layout=layout,\n                                 legend=legend,**params)\n  return data[column].value_counts().plot.bar(subplots=False,layout=layout,\n                                              legend=legend,**params)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403153413",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5876#issuecomment-403153413",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5876",
    "id": 403153413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE1MzQxMw==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T21:39:26Z",
    "updated_at": "2018-07-06T21:39:26Z",
    "author_association": "MEMBER",
    "body": "This doesn't raise an error anymore, it generates a plot. Not sure if the plot is meaningul, it's not equivalent to `df[\"name\"].value_counts().plot(kind=\"bar\")`. May be we can review in a separate issue the content of the plot, if that hasn't already been reported. Closing this issue.\r\n\r\nExample output:\r\n\r\n`pandas.Series(['a', 'a', 'b', 'b', 'b', 'c'], dtype='object').hist()`\r\n\r\n![str_hist](https://user-images.githubusercontent.com/10058240/42401025-b0405b6e-816b-11e8-9506-0fa99b722d34.png)\r\n"
  }
]
