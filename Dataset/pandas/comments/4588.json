[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22822219",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-22822219",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 22822219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODIyMjE5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-18T00:12:03Z",
    "updated_at": "2013-08-18T00:12:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looking at this briefly I _think_ this stems from Index.intersection, whose docstring states:\n\n> Form the intersection of two Index objects. Sortedness of the result is not guaranteed\n\nNot sure in which cases they appear/are sorted, but the case when the columns are equal (in your first one) is special cased to return the same result...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22829622",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-22829622",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 22829622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODI5NjIy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-18T12:22:46Z",
    "updated_at": "2013-08-18T12:22:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@smcierney what order would you expect instead?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29177670",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-29177670",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 29177670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTc3Njcw",
    "user": {
      "login": "jerryzhujian9",
      "id": 4016707,
      "node_id": "MDQ6VXNlcjQwMTY3MDc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4016707?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jerryzhujian9",
      "html_url": "https://github.com/jerryzhujian9",
      "followers_url": "https://api.github.com/users/jerryzhujian9/followers",
      "following_url": "https://api.github.com/users/jerryzhujian9/following{/other_user}",
      "gists_url": "https://api.github.com/users/jerryzhujian9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jerryzhujian9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jerryzhujian9/subscriptions",
      "organizations_url": "https://api.github.com/users/jerryzhujian9/orgs",
      "repos_url": "https://api.github.com/users/jerryzhujian9/repos",
      "events_url": "https://api.github.com/users/jerryzhujian9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jerryzhujian9/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T04:51:21Z",
    "updated_at": "2013-11-25T05:28:48Z",
    "author_association": "NONE",
    "body": "I found the auto sort was a bit annoying too (well, I should say depends on your purpose), because I was trying to concat a frame to an empty frame in a loop (like append an element to a list). Then I realized my column order changed. This change also applies to index, if you are concatenating along axis=1.\n\nIn a case similar to that of @smcinerney , I expect the final order of CBDAE. E shows up last because the order CBDA shows up first when concatenating.\n\nTherefore I wrote a \"hack\" (kinda silly though)\n\nsorted = pd.concat(frameList, axis=axis, join=join, join_axes=join_axes, ignore_index=False, keys=None, levels=None, names=None, verify_integrity=False)\n\n```\nif join_axes:\n    return sorted\nelif sort:\n    return sorted\nelse:\n    # expand all original orders in each frame\n    sourceOrder = []\n    for frame in frameList:\n        sourceOrder.extend(frame.Columns()) if axis == 0 else sourceOrder.extend(frame.Indices())\n    sortedOrder = sorted.Columns() if axis == 0 else sorted.Indices()\n\n    positions = []\n    positionsSorted = []\n    for i in sortedOrder:\n        positions.append(sourceOrder.index(i))\n        positionsSorted.append(sourceOrder.index(i))\n    positionsSorted.sort()\n\n    unsortedOrder = []\n    for i in positionsSorted:\n        unsortedOrder.append(sortedOrder[positions.index(i)])\n\n    return sorted.ReorderCols(unsortedOrder) if axis == 0 else sorted.ReorderRows(unsortedOrder)\n```\n\nThe function is included in my personal module called kungfu! Anyone can adopt the above algorithm, or have a look at my module at https://github.com/jerryzhujian9/kungfu\n\nFinally, I greatly appreciate the work of the development team for this great module!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44421883",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-44421883",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 44421883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDIxODgz",
    "user": {
      "login": "asteppke",
      "id": 5851636,
      "node_id": "MDQ6VXNlcjU4NTE2MzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5851636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asteppke",
      "html_url": "https://github.com/asteppke",
      "followers_url": "https://api.github.com/users/asteppke/followers",
      "following_url": "https://api.github.com/users/asteppke/following{/other_user}",
      "gists_url": "https://api.github.com/users/asteppke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asteppke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asteppke/subscriptions",
      "organizations_url": "https://api.github.com/users/asteppke/orgs",
      "repos_url": "https://api.github.com/users/asteppke/repos",
      "events_url": "https://api.github.com/users/asteppke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asteppke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-28T15:27:39Z",
    "updated_at": "2014-05-28T15:29:26Z",
    "author_association": "NONE",
    "body": "This behavior is indeed quite unexpected and I also stumbled over it. \n\n```\n >>> df = pd.DataFrame()\n\n>>> df['b'] = [1,2,3]\n>>> df['c'] = [1,2,3]\n>>> df['a'] = [1,2,3]\n>>> print(df)\n   b  c  a\n0  1  1  1\n1  2  2  2\n2  3  3  3\n\n[3 rows x 3 columns]\n>>> df2 = pd.DataFrame({'a':[4,5]})\n>>> df3 = pd.concat([df, df2])\n```\n\nNaively one would expect that the order of columns is preserved. Instead the columns are sorted:\n\n```\n>>> print(df3)\n   a   b   c\n0  1   1   1\n1  2   2   2\n2  3   3   3\n0  4 NaN NaN\n1  5 NaN NaN\n\n[5 rows x 3 columns]\n```\n\nThis can be corrected by reindexing with the original columns as follows:\n\n```\n>>> df4 = df3.reindex_axis(df.columns, axis=1)\n>>> print(df4)\n    b   c  a\n0   1   1  1\n1   2   2  2\n2   3   3  3\n0 NaN NaN  4\n1 NaN NaN  5\n\n[5 rows x 3 columns]\n```\n\nStill it seems counter-intuitive that this automatic sorting takes place and cannot be disabled as far as I know. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63719829",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-63719829",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 63719829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzE5ODI5",
    "user": {
      "login": "zadacka",
      "id": 3505313,
      "node_id": "MDQ6VXNlcjM1MDUzMTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3505313?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zadacka",
      "html_url": "https://github.com/zadacka",
      "followers_url": "https://api.github.com/users/zadacka/followers",
      "following_url": "https://api.github.com/users/zadacka/following{/other_user}",
      "gists_url": "https://api.github.com/users/zadacka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zadacka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zadacka/subscriptions",
      "organizations_url": "https://api.github.com/users/zadacka/orgs",
      "repos_url": "https://api.github.com/users/zadacka/repos",
      "events_url": "https://api.github.com/users/zadacka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zadacka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-19T21:46:19Z",
    "updated_at": "2014-11-19T21:46:19Z",
    "author_association": "NONE",
    "body": "I've just come across this too. \n\n```\nnew_data = pd.concat([churn_data, numerical_data])\n```\n\nProduced a DataFrame:\n\n```\n     churn  Var1  Var10  Var100  Var101 \n0      -1   NaN    NaN     NaN     NaN     \n1      -1   NaN    NaN     NaN     NaN\n```\n\nIt would seem more natural for the numerical DataFrame to be concatenated without being sorted first!!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63723206",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-63723206",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 63723206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzIzMjA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-19T22:08:03Z",
    "updated_at": "2014-11-19T22:08:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "well, this is a bit of work to fix. but pull requests accepted!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69691158",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-69691158",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 69691158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjkxMTU4",
    "user": {
      "login": "rasbt",
      "id": 5618407,
      "node_id": "MDQ6VXNlcjU2MTg0MDc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5618407?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rasbt",
      "html_url": "https://github.com/rasbt",
      "followers_url": "https://api.github.com/users/rasbt/followers",
      "following_url": "https://api.github.com/users/rasbt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rasbt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rasbt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rasbt/subscriptions",
      "organizations_url": "https://api.github.com/users/rasbt/orgs",
      "repos_url": "https://api.github.com/users/rasbt/repos",
      "events_url": "https://api.github.com/users/rasbt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rasbt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-13T03:40:41Z",
    "updated_at": "2015-01-13T03:40:41Z",
    "author_association": "NONE",
    "body": "Just stumbled upon this same issue when I was concatenating `DataFrames`. It's a little bit annoying if you don't know about this issue, but actually there is a quick remedy:\n\nsay `dfs` is a list of `DataFrames` you want to concatenate, you can just take the the original column order and feed it back in:\n\n```\ndf = pd.concat(dfs, axis=0)\ndf = df[dfs[0].columns]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73116762",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-73116762",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 73116762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTE2NzYy",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-05T20:06:22Z",
    "updated_at": "2015-02-05T20:06:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe `append` causes the same behavior, FYI\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/86430564",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-86430564",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 86430564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDMwNTY0",
    "user": {
      "login": "tompicking",
      "id": 6849705,
      "node_id": "MDQ6VXNlcjY4NDk3MDU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6849705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tompicking",
      "html_url": "https://github.com/tompicking",
      "followers_url": "https://api.github.com/users/tompicking/followers",
      "following_url": "https://api.github.com/users/tompicking/following{/other_user}",
      "gists_url": "https://api.github.com/users/tompicking/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tompicking/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tompicking/subscriptions",
      "organizations_url": "https://api.github.com/users/tompicking/orgs",
      "repos_url": "https://api.github.com/users/tompicking/repos",
      "events_url": "https://api.github.com/users/tompicking/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tompicking/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-26T09:57:24Z",
    "updated_at": "2015-03-26T09:57:24Z",
    "author_association": "NONE",
    "body": "It's the default behaviour across the board. For example, if you apply a function, f, to a groupby() that returns a varying number of columns, the concatenation taking place behind the scene also auto-sorts the columns.\n\n> df.groupby(some_ts).apply(f)\n\nLikely because the known order of the columns is open to interpretation.\n\nHowever, this also happens for MultiIndices and all hierarchies in MultiIndices. So you can concat dataframes that agree on level0 columns and all bar one level1 columns, and all levels of the MultiIndices will be autosorted because of one mismatch within one level0 column. I don't imagine that is desirable.\n\nI'd love to help, but unfortunately fixing this issue is beyond my ability. Thanks for the hard work all.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/96219507",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-96219507",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 96219507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MjE5NTA3",
    "user": {
      "login": "vitalyisaev2",
      "id": 5507054,
      "node_id": "MDQ6VXNlcjU1MDcwNTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5507054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vitalyisaev2",
      "html_url": "https://github.com/vitalyisaev2",
      "followers_url": "https://api.github.com/users/vitalyisaev2/followers",
      "following_url": "https://api.github.com/users/vitalyisaev2/following{/other_user}",
      "gists_url": "https://api.github.com/users/vitalyisaev2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vitalyisaev2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vitalyisaev2/subscriptions",
      "organizations_url": "https://api.github.com/users/vitalyisaev2/orgs",
      "repos_url": "https://api.github.com/users/vitalyisaev2/repos",
      "events_url": "https://api.github.com/users/vitalyisaev2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vitalyisaev2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-25T14:56:19Z",
    "updated_at": "2015-04-25T14:56:19Z",
    "author_association": "NONE",
    "body": "+1 for this feature\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/107057034",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-107057034",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 107057034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzA1NzAzNA==",
    "user": {
      "login": "ashishsingal1",
      "id": 3426091,
      "node_id": "MDQ6VXNlcjM0MjYwOTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3426091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashishsingal1",
      "html_url": "https://github.com/ashishsingal1",
      "followers_url": "https://api.github.com/users/ashishsingal1/followers",
      "following_url": "https://api.github.com/users/ashishsingal1/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashishsingal1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashishsingal1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashishsingal1/subscriptions",
      "organizations_url": "https://api.github.com/users/ashishsingal1/orgs",
      "repos_url": "https://api.github.com/users/ashishsingal1/repos",
      "events_url": "https://api.github.com/users/ashishsingal1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashishsingal1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-30T16:01:31Z",
    "updated_at": "2015-05-30T16:01:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed, +1. Unexpected sorting happens all the time for me.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126894609",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-126894609",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 126894609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjg5NDYwOQ==",
    "user": {
      "login": "scyllagist",
      "id": 6854323,
      "node_id": "MDQ6VXNlcjY4NTQzMjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6854323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scyllagist",
      "html_url": "https://github.com/scyllagist",
      "followers_url": "https://api.github.com/users/scyllagist/followers",
      "following_url": "https://api.github.com/users/scyllagist/following{/other_user}",
      "gists_url": "https://api.github.com/users/scyllagist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scyllagist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scyllagist/subscriptions",
      "organizations_url": "https://api.github.com/users/scyllagist/orgs",
      "repos_url": "https://api.github.com/users/scyllagist/repos",
      "events_url": "https://api.github.com/users/scyllagist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scyllagist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-01T10:00:24Z",
    "updated_at": "2015-08-01T10:00:24Z",
    "author_association": "NONE",
    "body": "+1, this was an unpleasant surprise!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/135518440",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-135518440",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 135518440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTUxODQ0MA==",
    "user": {
      "login": "Zenadix",
      "id": 7153514,
      "node_id": "MDQ6VXNlcjcxNTM1MTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7153514?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zenadix",
      "html_url": "https://github.com/Zenadix",
      "followers_url": "https://api.github.com/users/Zenadix/followers",
      "following_url": "https://api.github.com/users/Zenadix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zenadix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zenadix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zenadix/subscriptions",
      "organizations_url": "https://api.github.com/users/Zenadix/orgs",
      "repos_url": "https://api.github.com/users/Zenadix/repos",
      "events_url": "https://api.github.com/users/Zenadix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zenadix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-27T18:40:31Z",
    "updated_at": "2015-08-27T18:40:31Z",
    "author_association": "NONE",
    "body": "+1, I hate having the columns sorted after every `append`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/137272942",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-137272942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 137272942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzI3Mjk0Mg==",
    "user": {
      "login": "summerela",
      "id": 9097886,
      "node_id": "MDQ6VXNlcjkwOTc4ODY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9097886?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/summerela",
      "html_url": "https://github.com/summerela",
      "followers_url": "https://api.github.com/users/summerela/followers",
      "following_url": "https://api.github.com/users/summerela/following{/other_user}",
      "gists_url": "https://api.github.com/users/summerela/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/summerela/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/summerela/subscriptions",
      "organizations_url": "https://api.github.com/users/summerela/orgs",
      "repos_url": "https://api.github.com/users/summerela/repos",
      "events_url": "https://api.github.com/users/summerela/events{/privacy}",
      "received_events_url": "https://api.github.com/users/summerela/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-02T23:29:39Z",
    "updated_at": "2015-09-02T23:29:39Z",
    "author_association": "NONE",
    "body": "+1 from me, as well. \n\nBecause even if I did want to manually re-order after a concat, when I try to print out the 60 + column names and positions in my dataframe: \n\n```\n for id, value in enumerate(df.columns):\n      print id, value\n```\n\nAll 60+ columns are output in alphabetical order, not their actual position in the data frame. \n\nSo that means that after ever concat, I have to manually type out a list of 60 columns to reorder. Ouch. \n\nWhile I'm here, does anyone have a way to print out column name and position that I'm missing? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/173028569",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-173028569",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 173028569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzAyODU2OQ==",
    "user": {
      "login": "jmwoloso",
      "id": 7530947,
      "node_id": "MDQ6VXNlcjc1MzA5NDc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7530947?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmwoloso",
      "html_url": "https://github.com/jmwoloso",
      "followers_url": "https://api.github.com/users/jmwoloso/followers",
      "following_url": "https://api.github.com/users/jmwoloso/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmwoloso/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmwoloso/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmwoloso/subscriptions",
      "organizations_url": "https://api.github.com/users/jmwoloso/orgs",
      "repos_url": "https://api.github.com/users/jmwoloso/repos",
      "events_url": "https://api.github.com/users/jmwoloso/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmwoloso/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-20T00:01:02Z",
    "updated_at": "2016-01-20T00:07:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for this feature, just ran across the same deal myself.\n\n@summerela Get the column index and then re-index your new dataframe using the original column index\n\n```\n# assuming you have two dataframes, `df_train` & `df_test` (with the same columns) \n# that you want to concatenate\n\n# get the columns from one of them\nall_columns = df_train.columns\n\n# concatenate them\ndf_concat = pd.concat([df_train,\n                       df_test])\n\n# finally, re-index the new dataframe using the original column index\ndf_concat = df_concat.ix[:, all_columns]\n\n```\n\nConversely, if you need to re-index a smaller subset of columns, you could use this function I made. It can operate with relative indices as well. For example, if you wanted to move a column to the end of a dataframe, but you aren't sure how many columns may remain after prior processing steps in your script (maybe you're dropping zero-variance columns, for instance), you could pass a relative index position to `new_indices` --> `new_indices = [-1]` and it will take care of the rest.\n\n```\ndef reindex_columns(dframe=None, columns=None, new_indices=None):\n    \"\"\"\n    Reorders the columns of a dataframe as specified by\n    `reorder_indices`. Values of `columns` should align with their\n    respective values in `new_indices`.\n\n    `dframe`: pandas dataframe.\n\n    `columns`: list,pandas.core.index.Index, or numpy array; columns to\n    reindex.\n\n    `reorder_indices`: list of integers or numpy array; indices\n    corresponding to where each column should be inserted during\n    re-indexing.\n    \"\"\"\n    print(\"Re-indexing columns.\")\n    try:\n        df = dframe.copy()\n\n        # ensure parameters are of correct type and length\n        assert isinstance(columns, (pd.core.index.Index,\n                                    list,\n                                    np.array)),\\\n        \"`columns` must be of type `pandas.core.index.Index` or `list`\"\n\n        assert isinstance(new_indices,\n                          list),\\\n        \"`reorder_indices` must be of type `list`\"\n\n        assert len(columns) == len(new_indices),\\\n        \"Length of `columns` and `reorder_indices` must be equal\"\n\n        # check for negative values in `new_indices`\n        if any(idx < 0 for idx in new_indices):\n\n            # get a list of the negative values\n            negatives = [value for value\n                         in new_indices\n                         if value < 0]\n\n            # find the index location for each negative value in\n            # `new_indices`\n            negative_idx_locations = [new_indices.index(negative)\n                                      for negative in negatives]\n\n            # zip the lists\n            negative_zipped = list(zip(negative_idx_locations,\n                                       negatives))\n\n            # replace the negatives in `new_indices` with their\n            # absolute position in the index\n            for idx, negative in negative_zipped:\n                new_indices[idx] = df.columns.get_loc(df.columns[\n                                                          negative])\n\n        # re-order the index now\n        # get all columns\n        all_columns = df.columns\n\n        # drop the columns that need to be re-indexed\n        all_columns = all_columns.drop(columns)\n\n        # now re-insert them at the specified locations\n        zipped_columns = list(zip(new_indices,\n                                  columns))\n\n        for idx, column in zipped_columns:\n            all_columns = all_columns.insert(idx,\n                                             column)\n        # re-index the dataframe\n        df = df.ix[:, all_columns]\n\n        print(\"Successfully re-indexed dataframe.\")\n\n    except Exception as e:\n        print(e)\n        print(\"Could not re-index columns. Something went wrong.\")\n\n    return df\n```\n\nEdit: Usage would look like the following:\n\n```\n# move 'Column_1' to the end, move 'Column_2' to the beginning\ndf = reindex_columns(dframe=df,\n                     columns=['Column_1', 'Column_2'],\n                     new_indices=[-1, 0])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/200467071",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-200467071",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 200467071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDQ2NzA3MQ==",
    "user": {
      "login": "patricktokeeffe",
      "id": 1348834,
      "node_id": "MDQ6VXNlcjEzNDg4MzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1348834?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patricktokeeffe",
      "html_url": "https://github.com/patricktokeeffe",
      "followers_url": "https://api.github.com/users/patricktokeeffe/followers",
      "following_url": "https://api.github.com/users/patricktokeeffe/following{/other_user}",
      "gists_url": "https://api.github.com/users/patricktokeeffe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patricktokeeffe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patricktokeeffe/subscriptions",
      "organizations_url": "https://api.github.com/users/patricktokeeffe/orgs",
      "repos_url": "https://api.github.com/users/patricktokeeffe/repos",
      "events_url": "https://api.github.com/users/patricktokeeffe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patricktokeeffe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T17:58:25Z",
    "updated_at": "2016-03-23T20:16:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I encountered this (with 0.13.1) from an edge case not mentioned: combining dataframes each containing unique columns. A naive re-assignment of column names didn't work:\n\n``` python\ndat = pd.concat([out_dust, in_dust, in_air, out_air])\ndat.columns = [out_dust.columns + in_dust.columns + in_air.columns + out_air.columns]\n```\n\nThe columns still get sorted. ~~Using lists intermediately resolved things, though:~~\n\nEdit: I spoke too soon..\n\n---\n\nFollow-up: fwiw, column order can be preserved with chained `.join` calls on singular objects:\n\n``` python\ndf1.join([df2, df3]) # sorts columns\ndf1.join(df2).join(df3) # column order retained\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/244416782",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-244416782",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 244416782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDQxNjc4Mg==",
    "user": {
      "login": "bejondshao",
      "id": 7846416,
      "node_id": "MDQ6VXNlcjc4NDY0MTY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7846416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bejondshao",
      "html_url": "https://github.com/bejondshao",
      "followers_url": "https://api.github.com/users/bejondshao/followers",
      "following_url": "https://api.github.com/users/bejondshao/following{/other_user}",
      "gists_url": "https://api.github.com/users/bejondshao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bejondshao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bejondshao/subscriptions",
      "organizations_url": "https://api.github.com/users/bejondshao/orgs",
      "repos_url": "https://api.github.com/users/bejondshao/repos",
      "events_url": "https://api.github.com/users/bejondshao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bejondshao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T16:02:53Z",
    "updated_at": "2016-09-02T16:03:14Z",
    "author_association": "NONE",
    "body": "Could there be a parameter when creating dataFrame about ordering columns? Like order=False. Thanks a lot\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278785385",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-278785385",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 278785385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODc4NTM4NQ==",
    "user": {
      "login": "MikeTam1021",
      "id": 7306740,
      "node_id": "MDQ6VXNlcjczMDY3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7306740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeTam1021",
      "html_url": "https://github.com/MikeTam1021",
      "followers_url": "https://api.github.com/users/MikeTam1021/followers",
      "following_url": "https://api.github.com/users/MikeTam1021/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeTam1021/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeTam1021/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeTam1021/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeTam1021/orgs",
      "repos_url": "https://api.github.com/users/MikeTam1021/repos",
      "events_url": "https://api.github.com/users/MikeTam1021/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeTam1021/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T21:51:06Z",
    "updated_at": "2017-02-09T21:51:06Z",
    "author_association": "NONE",
    "body": "just ran into this while creating a dataframe from a dictionary. Totally surprised me, was counterintuitive and defeated my whole purpose...\r\n\r\ncolumn names should be for clarity and the location of columns near each other is an organizational choice of the user to maintain coherency "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/326086636",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-326086636",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 326086636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjA4NjYzNg==",
    "user": {
      "login": "brycepg",
      "id": 441800,
      "node_id": "MDQ6VXNlcjQ0MTgwMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brycepg",
      "html_url": "https://github.com/brycepg",
      "followers_url": "https://api.github.com/users/brycepg/followers",
      "following_url": "https://api.github.com/users/brycepg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions",
      "organizations_url": "https://api.github.com/users/brycepg/orgs",
      "repos_url": "https://api.github.com/users/brycepg/repos",
      "events_url": "https://api.github.com/users/brycepg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brycepg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T18:58:13Z",
    "updated_at": "2017-08-30T19:01:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@patricktokeeffe \r\nThanks for the pointer to `join`. Series objects don't have that method so I ended up writing a function:\r\n\r\n```python\r\ndef concat_fixed(ndframe_seq, **kwargs):\r\n    \"\"\"Like pd.concat but fixes the ordering problem.\r\n\r\n    Converts Series objects to DataFrames to access join method\r\n    Use kwargs to pass through to repeated join method\r\n    \"\"\"\r\n    indframe_seq = iter(ndframe_seq)\r\n    # Use the first ndframe object as the base for the final\r\n    final_df = pd.DataFrame(next(indframe_seq))\r\n    for dataframe in indframe_seq:\r\n        if isinstance(dataframe, pd.Series):\r\n            dataframe = pd.DataFrame(dataframe)\r\n        # Iteratively build final table\r\n        final_df = final_df.join(dataframe, **kwargs)\r\n    return final_df\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/326103454",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-326103454",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 326103454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjEwMzQ1NA==",
    "user": {
      "login": "MikeTam1021",
      "id": 7306740,
      "node_id": "MDQ6VXNlcjczMDY3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7306740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeTam1021",
      "html_url": "https://github.com/MikeTam1021",
      "followers_url": "https://api.github.com/users/MikeTam1021/followers",
      "following_url": "https://api.github.com/users/MikeTam1021/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeTam1021/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeTam1021/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeTam1021/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeTam1021/orgs",
      "repos_url": "https://api.github.com/users/MikeTam1021/repos",
      "events_url": "https://api.github.com/users/MikeTam1021/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeTam1021/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T20:05:18Z",
    "updated_at": "2017-08-30T20:05:18Z",
    "author_association": "NONE",
    "body": "How's the efficiency on this?\n\nOn Wed, Aug 30, 2017 at 1:58 PM, Bryce Guinta <notifications@github.com>\nwrote:\n\n> @patricktokeeffe <https://github.com/patricktokeeffe>\n> Thanks for the pointer to join. Series objects don't have that method so\n> I ended up writing a function:\n>\n> def concat_fixed(ndframe_seq, **kwargs):\n>     \"\"\"Like pd.concat but fixes the ordering problem.\n>\n>     Converts Series objects to DataFrames to access join method\n>     Use kwargs to pass through to repeated join method\n>     \"\"\"\n>     indframe_seq = iter(ndframe_seq)\n>     # Use the first ndframe object as the base for the final\n>     final_df = pd.DataFrame(next(indframe_seq))\n>     for dataframe in indframe_seq:\n>         if isinstance(dataframe, pd.Series):\n>             # Convert Series objects into DataFrames since\n>             # series objects do not have a join method\n>             dataframe = pd.DataFrame(dataframe)\n>         # Iteratively build final table\n>         final_df = final_df.join(dataframe, **kwargs)\n>     return final_df\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/4588#issuecomment-326086636>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AG999MucF-NH5vHuKe-Zczq-jy9ziYkRks5sdbDogaJpZM4A6TeA>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/326132118",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-326132118",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 326132118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjEzMjExOA==",
    "user": {
      "login": "brycepg",
      "id": 441800,
      "node_id": "MDQ6VXNlcjQ0MTgwMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brycepg",
      "html_url": "https://github.com/brycepg",
      "followers_url": "https://api.github.com/users/brycepg/followers",
      "following_url": "https://api.github.com/users/brycepg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions",
      "organizations_url": "https://api.github.com/users/brycepg/orgs",
      "repos_url": "https://api.github.com/users/brycepg/repos",
      "events_url": "https://api.github.com/users/brycepg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brycepg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T22:02:45Z",
    "updated_at": "2017-08-30T23:46:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MikeTam1021 \r\n\r\nI'm not going to benchmark it atm, but I think it would be a function of the size of your ndframes, the amount of them. It does create a new dataframe for each ndframe, so I imagine it is much less efficient than `pd.concat`.\r\n\r\nIt works fine for my purposes, but I'm using a small amount of `ndframes` (around 10<sup>1</sup>) and relatively small amount of `records` for each ndframe (around 10<sup>2</sup>).\r\n\r\nMy goal is to include all records from every dataframe while preserving order of those records, even if not all ndframes contain data for a given record."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366017633",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-366017633",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 366017633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjAxNzYzMw==",
    "user": {
      "login": "nackerley",
      "id": 14931979,
      "node_id": "MDQ6VXNlcjE0OTMxOTc5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/14931979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nackerley",
      "html_url": "https://github.com/nackerley",
      "followers_url": "https://api.github.com/users/nackerley/followers",
      "following_url": "https://api.github.com/users/nackerley/following{/other_user}",
      "gists_url": "https://api.github.com/users/nackerley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nackerley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nackerley/subscriptions",
      "organizations_url": "https://api.github.com/users/nackerley/orgs",
      "repos_url": "https://api.github.com/users/nackerley/repos",
      "events_url": "https://api.github.com/users/nackerley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nackerley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T18:26:06Z",
    "updated_at": "2018-02-15T18:26:06Z",
    "author_association": "NONE",
    "body": "I can't see why preserving column order (as much as possible) isn't the default behaviour of concat().\r\n\r\nMy workaround uses `unique_everseen` from the [Itertools Recipes](https://docs.python.org/3/library/itertools.html#recipes).\r\n\r\n```python\r\ncolumns = unique_everseen([column for df in dfs for column in df.columns])\r\ndf = pd.concat(dfs)[columns]\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377471865",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-377471865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 377471865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzQ3MTg2NQ==",
    "user": {
      "login": "mrTsjolder",
      "id": 3738082,
      "node_id": "MDQ6VXNlcjM3MzgwODI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3738082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrTsjolder",
      "html_url": "https://github.com/mrTsjolder",
      "followers_url": "https://api.github.com/users/mrTsjolder/followers",
      "following_url": "https://api.github.com/users/mrTsjolder/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrTsjolder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrTsjolder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrTsjolder/subscriptions",
      "organizations_url": "https://api.github.com/users/mrTsjolder/orgs",
      "repos_url": "https://api.github.com/users/mrTsjolder/repos",
      "events_url": "https://api.github.com/users/mrTsjolder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrTsjolder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-30T07:59:50Z",
    "updated_at": "2018-03-30T07:59:50Z",
    "author_association": "NONE",
    "body": "Any updates on the status of this thread? I am currently using version 0.22.0 and there still seems to be no proper solution. Procrastination seems to be quite an issue here... \r\n\r\nI would also like to note that similar behaviour can be found when concatenating columns, i.e. `axis=1`, but only when passing the dataframes in a dictionary:\r\n\r\n```\r\n>>> df4a = DataFrame(columns=['C','B','D','A'], data=np.random.randn(3,4))\r\n>>> df4b = DataFrame(columns=['C','B','D','A'], data=np.random.randn(3,4))\r\n>>> df5  = DataFrame(columns=['C','B','E','D','A'], data=np.random.randn(3, 5))\r\n\r\n>>> pd.concat([df4a, df5], axis=1).columns\r\nIndex(['C', 'B', 'D', 'A', 'C', 'B', 'E', 'D', 'A'], dtype='object')\r\n>>> pd.concat({'df4a': df4a, 'df4b': df4b}, axis=1).columns.levels\r\nFrozenList([['df4a', 'df4b'], ['C', 'B', 'D', 'A']])\r\n>>> pd.concat({'df4a': df4a, 'df5': df5}, axis=1).columns.levels\r\nFrozenList([['df4a', 'df5'], ['A', 'B', 'C', 'D', 'E']])\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377523608",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-377523608",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 377523608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzUyMzYwOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-30T13:25:49Z",
    "updated_at": "2018-03-30T13:35:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Any updates on the status of this thread?\r\n\r\nStill open.\r\n\r\n> Procrastination seems to be quite an issue here...\r\n\r\nProcrastination? We have a lot of open issues. If you want to ensure this gets fixed in the next release then you're best bet is to put together a PR. Let us know if you need help getting started."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377654475",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-377654475",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 377654475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzY1NDQ3NQ==",
    "user": {
      "login": "smcinerney",
      "id": 1179309,
      "node_id": "MDQ6VXNlcjExNzkzMDk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1179309?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smcinerney",
      "html_url": "https://github.com/smcinerney",
      "followers_url": "https://api.github.com/users/smcinerney/followers",
      "following_url": "https://api.github.com/users/smcinerney/following{/other_user}",
      "gists_url": "https://api.github.com/users/smcinerney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smcinerney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smcinerney/subscriptions",
      "organizations_url": "https://api.github.com/users/smcinerney/orgs",
      "repos_url": "https://api.github.com/users/smcinerney/repos",
      "events_url": "https://api.github.com/users/smcinerney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smcinerney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-31T01:02:16Z",
    "updated_at": "2018-03-31T01:02:16Z",
    "author_association": "NONE",
    "body": "@jtratner: in case it wasn't obvious from my examples at the top, I'd expect the order to be:\r\n\r\n- shared columns, unsorted\r\n- columns unique to df1, unsorted (i.e. in order in which they occur in df1)\r\n- columns unique to df2, unsorted (i.e. in order in which they occur in df2)\r\n\r\nThis is what you get in other packages or languages, e.g. SQL. There should never be an unwanted automatic sort. If the user wants to sort the column names, let them do that manually."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377666503",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-377666503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 377666503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzY2NjUwMw==",
    "user": {
      "login": "MikeTam1021",
      "id": 7306740,
      "node_id": "MDQ6VXNlcjczMDY3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7306740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeTam1021",
      "html_url": "https://github.com/MikeTam1021",
      "followers_url": "https://api.github.com/users/MikeTam1021/followers",
      "following_url": "https://api.github.com/users/MikeTam1021/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeTam1021/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeTam1021/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeTam1021/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeTam1021/orgs",
      "repos_url": "https://api.github.com/users/MikeTam1021/repos",
      "events_url": "https://api.github.com/users/MikeTam1021/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeTam1021/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-31T05:02:15Z",
    "updated_at": "2018-03-31T05:02:15Z",
    "author_association": "NONE",
    "body": "Hey guys, 2 things. 1) Welcome to pandas! I suggest just using more python native types like dictionaries. Stop trying to turn python (or any language) into SQL. 2) This is not technically a bug. It is just an unwanted effect of the code. You can easily overcome it outside the context of the package, and that is what I would think is the correct answer unless someone here takes it upon themselves."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377667460",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-377667460",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 377667460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzY2NzQ2MA==",
    "user": {
      "login": "jmwoloso",
      "id": 7530947,
      "node_id": "MDQ6VXNlcjc1MzA5NDc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7530947?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmwoloso",
      "html_url": "https://github.com/jmwoloso",
      "followers_url": "https://api.github.com/users/jmwoloso/followers",
      "following_url": "https://api.github.com/users/jmwoloso/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmwoloso/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmwoloso/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmwoloso/subscriptions",
      "organizations_url": "https://api.github.com/users/jmwoloso/orgs",
      "repos_url": "https://api.github.com/users/jmwoloso/repos",
      "events_url": "https://api.github.com/users/jmwoloso/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmwoloso/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-31T05:25:52Z",
    "updated_at": "2018-03-31T05:25:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MikeTam1021 please explain how to overcome this outside the context of the package. Thanks."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377688565",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-377688565",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 377688565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzY4ODU2NQ==",
    "user": {
      "login": "MikeTam1021",
      "id": 7306740,
      "node_id": "MDQ6VXNlcjczMDY3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7306740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeTam1021",
      "html_url": "https://github.com/MikeTam1021",
      "followers_url": "https://api.github.com/users/MikeTam1021/followers",
      "following_url": "https://api.github.com/users/MikeTam1021/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeTam1021/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeTam1021/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeTam1021/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeTam1021/orgs",
      "repos_url": "https://api.github.com/users/MikeTam1021/repos",
      "events_url": "https://api.github.com/users/MikeTam1021/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeTam1021/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-31T12:09:03Z",
    "updated_at": "2018-03-31T12:09:03Z",
    "author_association": "NONE",
    "body": "I’m pretty sure that’s exactly what people in this thread have been discussing. I see lots of good solutions above that should work."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377791534",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-377791534",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 377791534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Nzc5MTUzNA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-01T14:43:21Z",
    "updated_at": "2018-04-01T14:43:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MikeTam1021 It's not about turning pandas into SQL (heaven forbid!), but I couldn't agree more with:\r\n> There should never be an unwanted automatic sort. If the user wants to sort the column names, let them do that manually.\r\n\r\nConcatenating DataFrames should have the same effect as \"writing them next to each other\", and that implicit sort definitely violates the principle of least astonishment."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377807465",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4588#issuecomment-377807465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4588",
    "id": 377807465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzgwNzQ2NQ==",
    "user": {
      "login": "MikeTam1021",
      "id": 7306740,
      "node_id": "MDQ6VXNlcjczMDY3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7306740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeTam1021",
      "html_url": "https://github.com/MikeTam1021",
      "followers_url": "https://api.github.com/users/MikeTam1021/followers",
      "following_url": "https://api.github.com/users/MikeTam1021/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeTam1021/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeTam1021/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeTam1021/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeTam1021/orgs",
      "repos_url": "https://api.github.com/users/MikeTam1021/repos",
      "events_url": "https://api.github.com/users/MikeTam1021/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeTam1021/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-01T18:40:28Z",
    "updated_at": "2018-04-01T18:40:28Z",
    "author_association": "NONE",
    "body": "I agree. It shouldn’t. It also assumes an order to the columns, which is SQLish, and not pure computer science. You should really know where you’re data is.\r\n\r\nI hardly use pandas anymore after discovering this and many other issues. It has made me a better programmer."
  }
]
