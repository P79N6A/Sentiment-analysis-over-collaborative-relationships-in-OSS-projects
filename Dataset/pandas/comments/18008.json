[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340160469",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18008#issuecomment-340160469",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18008",
    "id": 340160469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDE2MDQ2OQ==",
    "user": {
      "login": "pzajec",
      "id": 3332208,
      "node_id": "MDQ6VXNlcjMzMzIyMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3332208?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pzajec",
      "html_url": "https://github.com/pzajec",
      "followers_url": "https://api.github.com/users/pzajec/followers",
      "following_url": "https://api.github.com/users/pzajec/following{/other_user}",
      "gists_url": "https://api.github.com/users/pzajec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pzajec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pzajec/subscriptions",
      "organizations_url": "https://api.github.com/users/pzajec/orgs",
      "repos_url": "https://api.github.com/users/pzajec/repos",
      "events_url": "https://api.github.com/users/pzajec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pzajec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T08:48:08Z",
    "updated_at": "2017-10-28T08:48:08Z",
    "author_association": "NONE",
    "body": "I've tested it with the newest release  (v0.21) - error stays the same."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340201176",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18008#issuecomment-340201176",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18008",
    "id": 340201176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDIwMTE3Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T16:00:21Z",
    "updated_at": "2017-10-28T16:00:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is quite convoluted with what you are writing. Why are you not simply writing this. \r\n```\r\nIn [10]: df.groupby(['A']).mean()\r\nOut[10]: \r\n   values\r\nA        \r\n1       1\r\n\r\nIn [11]: df.groupby(['A', 'B']).mean()\r\nOut[11]: \r\n       values\r\nA B          \r\n1 cat       1\r\n  dog       1\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340203840",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18008#issuecomment-340203840",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18008",
    "id": 340203840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDIwMzg0MA==",
    "user": {
      "login": "pzajec",
      "id": 3332208,
      "node_id": "MDQ6VXNlcjMzMzIyMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3332208?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pzajec",
      "html_url": "https://github.com/pzajec",
      "followers_url": "https://api.github.com/users/pzajec/followers",
      "following_url": "https://api.github.com/users/pzajec/following{/other_user}",
      "gists_url": "https://api.github.com/users/pzajec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pzajec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pzajec/subscriptions",
      "organizations_url": "https://api.github.com/users/pzajec/orgs",
      "repos_url": "https://api.github.com/users/pzajec/repos",
      "events_url": "https://api.github.com/users/pzajec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pzajec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T16:41:00Z",
    "updated_at": "2017-10-28T16:41:00Z",
    "author_association": "NONE",
    "body": "This is just a simplified example. I need an actual custom aggregation function at the end. My example would be more like this:\r\n ```python\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\ndf = pd.DataFrame.from_dict([\r\n    {'A': 1, 'B': 'cat', 'values': np.array([1, 2])},\r\n    {'A': 1, 'B': 'cat', 'values': np.array([1, 2])},\r\n    {'A': 1, 'B': 'dog', 'values': np.array([1, 2])},\r\n])\r\ndf.set_index(['A', 'B'], drop=True, inplace=True)\r\n\r\nprint df.groupby(['A']).mean()\r\nprint df.groupby(['A', 'B']).mean()\r\n```\r\nWhich throws pandas.core.base.DataError because of numpy arrays in the dataframe - I actually have a set of columns I would like to aggregate differently so the use of custom aggregation function is inevitable. Designing the data frame in such a way could be a design flaw. But nevertheless I am wondering whether there is something wrong with my approach from the first post or is pandas not working as expected? \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340208919",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18008#issuecomment-340208919",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18008",
    "id": 340208919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDIwODkxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T17:59:02Z",
    "updated_at": "2017-10-28T17:59:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well pandas is trying to figure out what you are actually doing. So it tries a a couple of things to see what raises and what doesn't. your function *happens* to work in the first case, but not in the second.\r\n```\r\nIn [17]: def f(x):\r\n    ...:     print(type(x))\r\n    ...:     return {'values': x['values'].mean()}\r\n    ...: \r\n\r\nIn [18]: df.groupby(['A']).agg(f)\r\n<class 'pandas.core.series.Series'>\r\n<class 'pandas.core.series.Series'>\r\n<class 'pandas.core.frame.DataFrame'>\r\nOut[18]: \r\n   values\r\nA        \r\n1     1.0\r\n\r\nIn [19]: df.groupby(['A', 'B']).agg(f)\r\n\r\n... long traceback\r\n<class 'pandas.core.series.Series'>\r\nKeyError: 'values'\r\n```\r\n\r\nAs I said you are fighting pandas here and you have to control what happens in your lambda. If you want this to be robust you need to have  a defensive function.\r\n\r\n"
  }
]
