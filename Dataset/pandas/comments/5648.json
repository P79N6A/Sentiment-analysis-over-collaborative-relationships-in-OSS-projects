[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29939311",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5648#issuecomment-29939311",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5648",
    "id": 29939311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTM5MzEx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T21:21:49Z",
    "updated_at": "2013-12-05T21:21:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls give  fully reproducible frame.\n\nalso, it is generally quite inefficient to construct a frame this way. you should construct list of lists. in addition you can vectorize most of this code\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29947724",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5648#issuecomment-29947724",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5648",
    "id": 29947724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTQ3NzI0",
    "user": {
      "login": "wayeast",
      "id": 4589327,
      "node_id": "MDQ6VXNlcjQ1ODkzMjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4589327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wayeast",
      "html_url": "https://github.com/wayeast",
      "followers_url": "https://api.github.com/users/wayeast/followers",
      "following_url": "https://api.github.com/users/wayeast/following{/other_user}",
      "gists_url": "https://api.github.com/users/wayeast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wayeast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wayeast/subscriptions",
      "organizations_url": "https://api.github.com/users/wayeast/orgs",
      "repos_url": "https://api.github.com/users/wayeast/repos",
      "events_url": "https://api.github.com/users/wayeast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wayeast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T23:00:09Z",
    "updated_at": "2013-12-05T23:00:09Z",
    "author_association": "NONE",
    "body": "@jreback : Thanks for the tips.  How do I give a fully-reproducible frame?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29948300",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5648#issuecomment-29948300",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5648",
    "id": 29948300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTQ4MzAw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T23:07:49Z",
    "updated_at": "2013-12-05T23:07:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "show all the code that is needed to repro including imports and such\n\neg u can copy paste into ipython\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29953611",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5648#issuecomment-29953611",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5648",
    "id": 29953611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTUzNjEx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T00:38:33Z",
    "updated_at": "2013-12-06T00:38:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "you might want to simply save the offending frame (via to_pickle) and show that when u read it in it reproduces the error (and of course provide a link to the pickle on say Dropbox)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29955345",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5648#issuecomment-29955345",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5648",
    "id": 29955345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTU1MzQ1",
    "user": {
      "login": "wayeast",
      "id": 4589327,
      "node_id": "MDQ6VXNlcjQ1ODkzMjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4589327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wayeast",
      "html_url": "https://github.com/wayeast",
      "followers_url": "https://api.github.com/users/wayeast/followers",
      "following_url": "https://api.github.com/users/wayeast/following{/other_user}",
      "gists_url": "https://api.github.com/users/wayeast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wayeast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wayeast/subscriptions",
      "organizations_url": "https://api.github.com/users/wayeast/orgs",
      "repos_url": "https://api.github.com/users/wayeast/repos",
      "events_url": "https://api.github.com/users/wayeast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wayeast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T01:10:37Z",
    "updated_at": "2013-12-06T01:10:37Z",
    "author_association": "NONE",
    "body": "Well, that last one was pretty messy.  I thought I was sending an email, with attachments, to a person, not posting a very long comment!\n\nOK, have done what you suggested.  Here is a link to the pickle file (df.pkl): https://www.dropbox.com/s/twlnfmqltcxqlt8/df.pkl\n\nthe contents are a singel DataFrame object.  I just tried unpickling it and testing the df.idxmax() function and got the same results as before.  df.max() works as expected on it.  Again, for reference, the code that created this is here: https://github.com/wayeast/nltk in nltk/chunk/util, line 454 or so.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29957803",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5648#issuecomment-29957803",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5648",
    "id": 29957803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTU3ODAz",
    "user": {
      "login": "dsm054",
      "id": 980054,
      "node_id": "MDQ6VXNlcjk4MDA1NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/980054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsm054",
      "html_url": "https://github.com/dsm054",
      "followers_url": "https://api.github.com/users/dsm054/followers",
      "following_url": "https://api.github.com/users/dsm054/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsm054/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsm054/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsm054/subscriptions",
      "organizations_url": "https://api.github.com/users/dsm054/orgs",
      "repos_url": "https://api.github.com/users/dsm054/repos",
      "events_url": "https://api.github.com/users/dsm054/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsm054/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T02:03:11Z",
    "updated_at": "2013-12-06T02:03:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is happening because the DataFrame has object dtypes.  The original transcript showed that the element types themselves were floats, but not that the columns were:\n\n```\n>>> df\n          1          2           7            11\n3  0.4865759  0.2130292  0.06304571    0.0164135\n8  0.1379886  0.0604132   0.0178792  0.004654722\n\n[2 rows x 4 columns]\n>>> df.dtypes\n1     object\n2     object\n7     object\n11    object\ndtype: object\n>>> df.idxmax()\nTraceback (most recent call last):\n  File \"<ipython-input-41-0c78e75af756>\", line 1, in <module>\n    df.idxmax()\n  File \"/usr/local/lib/python2.7/dist-packages/pandas-0.13.0rc1_27_g4d5ca5c-py2.7-linux-i686.egg/pandas/core/frame.py\", line 4158, in idxmax\n    indices = nanops.nanargmax(self.values, axis=axis, skipna=skipna)\n  File \"/usr/local/lib/python2.7/dist-packages/pandas-0.13.0rc1_27_g4d5ca5c-py2.7-linux-i686.egg/pandas/core/nanops.py\", line 375, in nanargmax\n    isfinite=True)\n  File \"/usr/local/lib/python2.7/dist-packages/pandas-0.13.0rc1_27_g4d5ca5c-py2.7-linux-i686.egg/pandas/core/nanops.py\", line 141, in _get_values\n    mask = _isfinite(values)\n  File \"/usr/local/lib/python2.7/dist-packages/pandas-0.13.0rc1_27_g4d5ca5c-py2.7-linux-i686.egg/pandas/core/nanops.py\", line 174, in _isfinite\n    return -np.isfinite(values)\nTypeError: ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\n\n>>> df.astype(float).idxmax()\n1     3\n2     3\n7     3\n11    3\ndtype: int64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30011538",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5648#issuecomment-30011538",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5648",
    "id": 30011538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDExNTM4",
    "user": {
      "login": "wayeast",
      "id": 4589327,
      "node_id": "MDQ6VXNlcjQ1ODkzMjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4589327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wayeast",
      "html_url": "https://github.com/wayeast",
      "followers_url": "https://api.github.com/users/wayeast/followers",
      "following_url": "https://api.github.com/users/wayeast/following{/other_user}",
      "gists_url": "https://api.github.com/users/wayeast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wayeast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wayeast/subscriptions",
      "organizations_url": "https://api.github.com/users/wayeast/orgs",
      "repos_url": "https://api.github.com/users/wayeast/repos",
      "events_url": "https://api.github.com/users/wayeast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wayeast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T17:16:07Z",
    "updated_at": "2013-12-06T17:17:17Z",
    "author_association": "NONE",
    "body": "@dsm054 : OK, that answers my question.  I was still confused as to why df (in the original post above) would have a dtypes 'int64' while pr had dtypes 'object'.  With some experimenting, I've come to the conclusion that because df was instantiated with a dictionary of int values, its dtypes field was set to 'int64' on instantiation.  The code used to build the pr dataframe, on the other hand, first laid out an empty dataframe, then populated it with values.  Because the initial dataframe was empty, its dtypes was set to 'object'; even after being populated with float values the dtypes was still 'object'.  The incompatible dtypes, not the actual values in the dataframe cells, is what breaks idxmax.  Does this sound reasonable?\n"
  }
]
