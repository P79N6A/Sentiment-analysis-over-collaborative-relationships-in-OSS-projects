[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160737788",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11704#issuecomment-160737788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11704",
    "id": 160737788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDczNzc4OA==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-30T19:44:47Z",
    "updated_at": "2015-11-30T19:44:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't know if this is too ambitious, but for custom rolling aggregation, if you can let users supply a `StateVariables` object which is initialized using the first window, and supports two methods, `evolve()` and `compute()`, then you may be able to retain the efficiency when the evolution of the state variables is governed by a simple set of equations. `__iter__` becomes a special case of this where the `StateVariables` contains the whole window, and `evolve` moves the window forward/replaces the old window with the new window, and `compute` just returns the data structure inside.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340906425",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11704#issuecomment-340906425",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11704",
    "id": 340906425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDkwNjQyNQ==",
    "user": {
      "login": "selik",
      "id": 1328688,
      "node_id": "MDQ6VXNlcjEzMjg2ODg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1328688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/selik",
      "html_url": "https://github.com/selik",
      "followers_url": "https://api.github.com/users/selik/followers",
      "following_url": "https://api.github.com/users/selik/following{/other_user}",
      "gists_url": "https://api.github.com/users/selik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/selik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/selik/subscriptions",
      "organizations_url": "https://api.github.com/users/selik/orgs",
      "repos_url": "https://api.github.com/users/selik/repos",
      "events_url": "https://api.github.com/users/selik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/selik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-31T21:05:12Z",
    "updated_at": "2017-10-31T21:05:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Currently, iterating over a `pandas.core.window.Rolling` object will produce bizarre behavior. For DataFrames as it looks for columns named `0`, `1`, `2`, etc. until it hits a KeyError. For Series it raises AttributeError as it looks for a \"columns\" attribute.\r\n\r\nUntil the `__iter__` is implemented correctly, perhaps there should be a temporary measure of simply making it non-iterable by raising NotImplementedError."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340955515",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11704#issuecomment-340955515",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11704",
    "id": 340955515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDk1NTUxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T01:50:22Z",
    "updated_at": "2017-11-01T01:50:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@selik if you want to submit a PR to raise NotImplementedError would be great!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447797907",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11704#issuecomment-447797907",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11704",
    "id": 447797907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzc5NzkwNw==",
    "user": {
      "login": "antoinecomp",
      "id": 9776965,
      "node_id": "MDQ6VXNlcjk3NzY5NjU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9776965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antoinecomp",
      "html_url": "https://github.com/antoinecomp",
      "followers_url": "https://api.github.com/users/antoinecomp/followers",
      "following_url": "https://api.github.com/users/antoinecomp/following{/other_user}",
      "gists_url": "https://api.github.com/users/antoinecomp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antoinecomp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antoinecomp/subscriptions",
      "organizations_url": "https://api.github.com/users/antoinecomp/orgs",
      "repos_url": "https://api.github.com/users/antoinecomp/repos",
      "events_url": "https://api.github.com/users/antoinecomp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antoinecomp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T10:34:28Z",
    "updated_at": "2018-12-17T10:34:28Z",
    "author_association": "NONE",
    "body": "Okay, how to cope with this problem then ?\r\n\r\nI have an object, `EWM [com=9.5,min_periods=0,adjust=True,ignore_na=False,axis=0]` that I want to add to a dataframe:` predictions_df_list['ewma']` which raised this issue"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/448396654",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11704#issuecomment-448396654",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11704",
    "id": 448396654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODM5NjY1NA==",
    "user": {
      "login": "selik",
      "id": 1328688,
      "node_id": "MDQ6VXNlcjEzMjg2ODg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1328688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/selik",
      "html_url": "https://github.com/selik",
      "followers_url": "https://api.github.com/users/selik/followers",
      "following_url": "https://api.github.com/users/selik/following{/other_user}",
      "gists_url": "https://api.github.com/users/selik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/selik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/selik/subscriptions",
      "organizations_url": "https://api.github.com/users/selik/orgs",
      "repos_url": "https://api.github.com/users/selik/repos",
      "events_url": "https://api.github.com/users/selik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/selik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T22:32:46Z",
    "updated_at": "2018-12-18T22:33:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@antoinecomp Could you share a bit more of your code and the error message? The traceback will help. Also, what kind of object is EWM?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451102931",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11704#issuecomment-451102931",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11704",
    "id": 451102931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTEwMjkzMQ==",
    "user": {
      "login": "antoinecomp",
      "id": 9776965,
      "node_id": "MDQ6VXNlcjk3NzY5NjU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9776965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antoinecomp",
      "html_url": "https://github.com/antoinecomp",
      "followers_url": "https://api.github.com/users/antoinecomp/followers",
      "following_url": "https://api.github.com/users/antoinecomp/following{/other_user}",
      "gists_url": "https://api.github.com/users/antoinecomp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antoinecomp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antoinecomp/subscriptions",
      "organizations_url": "https://api.github.com/users/antoinecomp/orgs",
      "repos_url": "https://api.github.com/users/antoinecomp/repos",
      "events_url": "https://api.github.com/users/antoinecomp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antoinecomp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-03T10:16:56Z",
    "updated_at": "2019-01-03T10:16:56Z",
    "author_association": "NONE",
    "body": "@selik Sorry for answering so late. This is the code I used:\r\n\r\n`predictions_df['ewma'] = pd.DataFrame.ewm(predictions_df[\"prices\"], span=60)#, freq=\"D\")`\r\n\r\nAnd this is the error message: \r\n\r\n```\r\nNotImplementedError                       Traceback (most recent call last)\r\n<ipython-input-153-2a1b97ea7cf7> in <module>\r\n----> 1 predictions_df['ewma'] = pd.DataFrame.ewm(predictions_df[\"prices\"], span=60)#, freq=\"D\")\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pandas\\core\\frame.py in __setitem__(self, key, value)\r\n   3117         else:\r\n   3118             # set column\r\n-> 3119             self._set_item(key, value)\r\n   3120 \r\n   3121     def _setitem_slice(self, key, value):\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pandas\\core\\frame.py in _set_item(self, key, value)\r\n   3192 \r\n   3193         self._ensure_valid_index(value)\r\n-> 3194         value = self._sanitize_column(key, value)\r\n   3195         NDFrame._set_item(self, key, value)\r\n   3196 \r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pandas\\core\\frame.py in _sanitize_column(self, key, value, broadcast)\r\n   3385             value = _sanitize_index(value, self.index, copy=False)\r\n   3386 \r\n-> 3387         elif isinstance(value, Index) or is_sequence(value):\r\n   3388             from pandas.core.series import _sanitize_index\r\n   3389 \r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py in is_sequence(obj)\r\n    470 \r\n    471     try:\r\n--> 472         iter(obj)  # Can iterate over it.\r\n    473         len(obj)   # Has a length associated with it.\r\n    474         return not isinstance(obj, string_and_binary_types)\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pandas\\core\\window.py in __iter__(self)\r\n    184     def __iter__(self):\r\n    185         url = 'https://github.com/pandas-dev/pandas/issues/11704'\r\n--> 186         raise NotImplementedError('See issue #11704 {url}'.format(url=url))\r\n    187 \r\n    188     def _get_index(self, index=None):\r\n\r\nNotImplementedError: See issue #11704 https://github.com/pandas-dev/pandas/issues/11704\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452519214",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11704#issuecomment-452519214",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11704",
    "id": 452519214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjUxOTIxNA==",
    "user": {
      "login": "selik",
      "id": 1328688,
      "node_id": "MDQ6VXNlcjEzMjg2ODg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1328688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/selik",
      "html_url": "https://github.com/selik",
      "followers_url": "https://api.github.com/users/selik/followers",
      "following_url": "https://api.github.com/users/selik/following{/other_user}",
      "gists_url": "https://api.github.com/users/selik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/selik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/selik/subscriptions",
      "organizations_url": "https://api.github.com/users/selik/orgs",
      "repos_url": "https://api.github.com/users/selik/repos",
      "events_url": "https://api.github.com/users/selik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/selik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T00:58:23Z",
    "updated_at": "2019-01-09T00:58:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "It looks like `is_sequence`'s test of `iter(obj)` catching `TypeError` and `AttributeError` is inconsistent with `__iter__` raising `NotImplementedError`.\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/caf462c2a7699daf4b149d49f5aeaff822700113/pandas/core/dtypes/inference.py#L495\r\n\r\nReverting to the old behavior won't fix this, because `iter(obj)` would cause a `KeyError`, which is also unexpected.\r\n\r\n@topper-123 @evectant I'm not familiar with the `ewm` method. Is a NotImplementedError reasonable here?\r\n\r\n@jreback Should `is_sequence` catch NotImplementedError in addition to TypeError and AttributeError when trying `iter(obj)`?"
  }
]
