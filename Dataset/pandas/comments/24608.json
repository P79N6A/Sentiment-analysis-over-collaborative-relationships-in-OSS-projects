[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451401476",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24608#issuecomment-451401476",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24608",
    "id": 451401476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTQwMTQ3Ng==",
    "user": {
      "login": "ayhanfuat",
      "id": 6108349,
      "node_id": "MDQ6VXNlcjYxMDgzNDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6108349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ayhanfuat",
      "html_url": "https://github.com/ayhanfuat",
      "followers_url": "https://api.github.com/users/ayhanfuat/followers",
      "following_url": "https://api.github.com/users/ayhanfuat/following{/other_user}",
      "gists_url": "https://api.github.com/users/ayhanfuat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ayhanfuat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ayhanfuat/subscriptions",
      "organizations_url": "https://api.github.com/users/ayhanfuat/orgs",
      "repos_url": "https://api.github.com/users/ayhanfuat/repos",
      "events_url": "https://api.github.com/users/ayhanfuat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ayhanfuat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-04T10:00:04Z",
    "updated_at": "2019-01-04T10:01:30Z",
    "author_association": "NONE",
    "body": "`autocorrelation_plot` uses this formula (except that it uses N instead of N-k):\r\n![autocorrelation formula screenshot from wikipedia](https://user-images.githubusercontent.com/6108349/50682140-f3fcb900-101e-11e9-9d78-8b5d70f298f1.png)\r\n\r\nHere, mu is the mean of the entire series. `autocorr` on the other hand shifts the series and takes the correlation with the non-shifted one which is practically calculating separate means and variances for the lagged and not lagged versions. Wikipedia says that's also valid ([link](https://en.wikipedia.org/wiki/Autocorrelation#Estimation)):\r\n\r\n> Other possibilities derive from treating the two portions of data separately and calculating separate sample means and/or sample variances for use in defining the estimate.\r\n> The advantage of estimates of the last type is that the set of estimated autocorrelations, as a function of k, then form a function which is a valid autocorrelation in the sense that it is possible to define a theoretical process having exactly that autocorrelation. Other estimates can suffer from the problem that, if they are used to calculate the variance of a linear combination of the X's, the variance calculated may turn out to be negative.\r\n\r\nThat's not very common though. All the formulas I've seen before use the mean of the entire series. But of course this is just me. Different people from different backgrounds might be using different versions. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451412079",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24608#issuecomment-451412079",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24608",
    "id": 451412079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTQxMjA3OQ==",
    "user": {
      "login": "guocheng",
      "id": 4845980,
      "node_id": "MDQ6VXNlcjQ4NDU5ODA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4845980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guocheng",
      "html_url": "https://github.com/guocheng",
      "followers_url": "https://api.github.com/users/guocheng/followers",
      "following_url": "https://api.github.com/users/guocheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/guocheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guocheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guocheng/subscriptions",
      "organizations_url": "https://api.github.com/users/guocheng/orgs",
      "repos_url": "https://api.github.com/users/guocheng/repos",
      "events_url": "https://api.github.com/users/guocheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guocheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-04T10:50:04Z",
    "updated_at": "2019-01-04T10:57:02Z",
    "author_association": "NONE",
    "body": "> `autocorrelation_plot` uses this formula (except that it uses N instead of N-k):\r\n> ![autocorrelation formula screenshot from wikipedia](https://user-images.githubusercontent.com/6108349/50682140-f3fcb900-101e-11e9-9d78-8b5d70f298f1.png)\r\n> \r\n> Here, mu is the mean of the entire series. `autocorr` on the other hand shifts the series and takes the correlation with the non-shifted one which is practically calculating separate means and variances for the lagged and not lagged versions. Wikipedia says that's also valid ([link](https://en.wikipedia.org/wiki/Autocorrelation#Estimation)):\r\n> \r\n> > Other possibilities derive from treating the two portions of data separately and calculating separate sample means and/or sample variances for use in defining the estimate.\r\n> > The advantage of estimates of the last type is that the set of estimated autocorrelations, as a function of k, then form a function which is a valid autocorrelation in the sense that it is possible to define a theoretical process having exactly that autocorrelation. Other estimates can suffer from the problem that, if they are used to calculate the variance of a linear combination of the X's, the variance calculated may turn out to be negative.\r\n> \r\n> That's not very common though. All the formulas I've seen before use the mean of the entire series. But of course this is just me. Different people from different backgrounds might be using different versions.\r\n\r\nIf you look at [`autocorrelation_plot` source code](https://github.com/pandas-dev/pandas/blob/master/pandas/plotting/_misc.py#L622), you can see that it uses this equation:\r\n\r\n![image](https://user-images.githubusercontent.com/4845980/50684662-5c648e00-1051-11e9-91ae-2b8c82d59c24.png)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451413413",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24608#issuecomment-451413413",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24608",
    "id": 451413413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTQxMzQxMw==",
    "user": {
      "login": "ayhanfuat",
      "id": 6108349,
      "node_id": "MDQ6VXNlcjYxMDgzNDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6108349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ayhanfuat",
      "html_url": "https://github.com/ayhanfuat",
      "followers_url": "https://api.github.com/users/ayhanfuat/followers",
      "following_url": "https://api.github.com/users/ayhanfuat/following{/other_user}",
      "gists_url": "https://api.github.com/users/ayhanfuat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ayhanfuat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ayhanfuat/subscriptions",
      "organizations_url": "https://api.github.com/users/ayhanfuat/orgs",
      "repos_url": "https://api.github.com/users/ayhanfuat/repos",
      "events_url": "https://api.github.com/users/ayhanfuat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ayhanfuat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-04T10:56:09Z",
    "updated_at": "2019-01-04T10:56:09Z",
    "author_association": "NONE",
    "body": "@guocheng It's the same equation except for the normalization factor (n vs n-k).\r\n\r\nShifting occurs [here](https://github.com/pandas-dev/pandas/blob/master/pandas/core/series.py#L2171)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451455894",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24608#issuecomment-451455894",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24608",
    "id": 451455894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTQ1NTg5NA==",
    "user": {
      "login": "guocheng",
      "id": 4845980,
      "node_id": "MDQ6VXNlcjQ4NDU5ODA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4845980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guocheng",
      "html_url": "https://github.com/guocheng",
      "followers_url": "https://api.github.com/users/guocheng/followers",
      "following_url": "https://api.github.com/users/guocheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/guocheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guocheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guocheng/subscriptions",
      "organizations_url": "https://api.github.com/users/guocheng/orgs",
      "repos_url": "https://api.github.com/users/guocheng/repos",
      "events_url": "https://api.github.com/users/guocheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guocheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-04T14:19:36Z",
    "updated_at": "2019-01-04T14:19:36Z",
    "author_association": "NONE",
    "body": "@ayhanfuat Thanks for pointing that out.\r\n\r\nJust to clarify a few things:\r\n\r\nAssuming we have an array [1,2,3,4,5], when lag = 1:\r\n\r\n1.we are trying to calculate the correlation of:\r\n\r\n[1,2,3,4]\r\n[2,3,4,5]\r\n\r\nCorrect?\r\n\r\n2. If `self.corr(self.shift(lag))` is executed, then the correlation of the following is calculated:\r\n\r\n[1,2,3,4,5]\r\n[NaN,1,2,3,4]\r\n\r\nCorrect?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451478909",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24608#issuecomment-451478909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24608",
    "id": 451478909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTQ3ODkwOQ==",
    "user": {
      "login": "ayhanfuat",
      "id": 6108349,
      "node_id": "MDQ6VXNlcjYxMDgzNDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6108349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ayhanfuat",
      "html_url": "https://github.com/ayhanfuat",
      "followers_url": "https://api.github.com/users/ayhanfuat/followers",
      "following_url": "https://api.github.com/users/ayhanfuat/following{/other_user}",
      "gists_url": "https://api.github.com/users/ayhanfuat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ayhanfuat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ayhanfuat/subscriptions",
      "organizations_url": "https://api.github.com/users/ayhanfuat/orgs",
      "repos_url": "https://api.github.com/users/ayhanfuat/repos",
      "events_url": "https://api.github.com/users/ayhanfuat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ayhanfuat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-04T15:39:45Z",
    "updated_at": "2019-01-04T15:39:45Z",
    "author_association": "NONE",
    "body": "@guocheng Those two are actually the same thing since pandas ignores NaN's in calculations:\r\n\r\n    pd.Series([1, 2, 3, 4]).corr(pd.Series([2, 3, 4, 5]))\r\n\r\nand\r\n\r\n    pd.Series([1, 2, 3, 4, 5]).corr(pd.Series([np.nan, 1, 2, 3, 4]))\r\n\r\nyield the same result (1).\r\n\r\nI tried to illustrate the difference between `autocorr` and `autocorrelation_plot` in these equations:\r\n\r\n![autocorrelation equations](https://user-images.githubusercontent.com/6108349/50695613-3689ba00-104e-11e9-86c6-8fbbd1623c10.png)\r\n\r\nIn your example, [1, 2, 3, 4, 5] is the entire series. For the first lag you have two series: `left = [1, 2, 3, 4]` and `right = [2, 3, 4, 5]`. Now, if you calculate the correlation between left and right you first compute their corresponding means and variances (mu_left and mu_right, and sigma_left and sigma_right). `autocorrelation_plot` does not compute these separately. It computes a single mean (mean of [1, 2, 3, 4, 5]) and a single variance (again, computed on [1, 2, 3, 4, 5]). In its source code\r\n\r\n    def r(h):\r\n        return ((data[:n - h] - mean) *\r\n                (data[h:] - mean)).sum() / float(n) / c0\r\n\r\nyou see a single `mean`. This mean is computed over the entire `data` series. If you compute two different means (mean of `data[:n - h]` and mean of `data[h:]`) you would be doing the same thing `autocorr` is doing. Of course that would require you to modify `c0` for variances as well."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451618719",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24608#issuecomment-451618719",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24608",
    "id": 451618719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTYxODcxOQ==",
    "user": {
      "login": "guocheng",
      "id": 4845980,
      "node_id": "MDQ6VXNlcjQ4NDU5ODA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4845980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guocheng",
      "html_url": "https://github.com/guocheng",
      "followers_url": "https://api.github.com/users/guocheng/followers",
      "following_url": "https://api.github.com/users/guocheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/guocheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guocheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guocheng/subscriptions",
      "organizations_url": "https://api.github.com/users/guocheng/orgs",
      "repos_url": "https://api.github.com/users/guocheng/repos",
      "events_url": "https://api.github.com/users/guocheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guocheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-05T02:02:11Z",
    "updated_at": "2019-01-05T02:03:19Z",
    "author_association": "NONE",
    "body": "@ayhanfuat yes, I realised that using the sample mean vs Series mean made the difference. So the question is: Should `autocorr()` and `autocorrelation_plot()` behave the same? If so, which one is correct? (they are currently outputting vastly different result for this particular example)\r\n\r\nAside from the issue above, thank for pointing out the following:\r\n\r\n```python\r\npd.Series([1, 2, 3, 4]).corr(pd.Series([2, 3, 4, 5]))\r\npd.Series([1, 2, 3, 4, 5]).corr(pd.Series([np.nan, 1, 2, 3, 4])) #this one looks weird\r\n```\r\n\r\nThe \"shifted\" array  looks weird to me and it is unclear what is actually happening underneath. \r\n\r\nFor instance:\r\n\r\n```python\r\nInput: np.corrcoef(pd.Series([1,2,3,4,5]), pd.Series([np.nan,1,2,3,4]))\r\n\r\noutput: array([[ 1., nan],\r\n             [nan, nan]])\r\n\r\nInput: np.corrcoef(pd.Series([1,2,3,4]), pd.Series([2,3,4,5]))\r\n\r\noutput: array([[1., 1.],\r\n             [1., 1.]])\r\n```\r\n\r\nThe part that I am not clear is that how does Pandas automagically figure out that `pd.Series([np.nan, 1, 2, 3, 4])` is actually `pd.Series([2, 3, 4, 5])`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474164058",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24608#issuecomment-474164058",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24608",
    "id": 474164058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDE2NDA1OA==",
    "user": {
      "login": "shadiakiki1986",
      "id": 8392324,
      "node_id": "MDQ6VXNlcjgzOTIzMjQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8392324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shadiakiki1986",
      "html_url": "https://github.com/shadiakiki1986",
      "followers_url": "https://api.github.com/users/shadiakiki1986/followers",
      "following_url": "https://api.github.com/users/shadiakiki1986/following{/other_user}",
      "gists_url": "https://api.github.com/users/shadiakiki1986/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shadiakiki1986/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shadiakiki1986/subscriptions",
      "organizations_url": "https://api.github.com/users/shadiakiki1986/orgs",
      "repos_url": "https://api.github.com/users/shadiakiki1986/repos",
      "events_url": "https://api.github.com/users/shadiakiki1986/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shadiakiki1986/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T01:36:50Z",
    "updated_at": "2019-03-19T01:36:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi guys. I published [this jupyter notebook](https://gist.github.com/shadiakiki1986/a7ad08252d015fc1edd373ae32b4caf0) in which I suggest improvements to `autocorrelation_plot` along the lines of what is suggested in this issue. It would be great to hear your feedback before going through with a PR"
  }
]
