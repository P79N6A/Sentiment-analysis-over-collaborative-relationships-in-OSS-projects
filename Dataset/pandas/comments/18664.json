[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437196488",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18664#issuecomment-437196488",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18664",
    "id": 437196488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzE5NjQ4OA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T23:37:42Z",
    "updated_at": "2018-11-08T23:37:42Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger any idea what's going on here?  Seems like something to address as long as we're all focused on the DTA/TDA/PA constructors"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437230759",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18664#issuecomment-437230759",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18664",
    "id": 437230759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzIzMDc1OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-09T02:41:15Z",
    "updated_at": "2018-11-09T02:41:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seems like the DTI constructor goes CategoricalIndex -> ndarray[datetime64[ns]], which loses the tzinfo.\r\n\r\n```python\r\nIn [2]: a = pd.CategoricalIndex(pd.DatetimeIndex(['2015-01-01'], tz='US/Eastern'))\r\nIn [3]: pd.DatetimeIndex(a)\r\n> /Users/taugspurger/sandbox/pandas/pandas/core/indexes/datetimes.py(244)__new__()\r\n-> if isinstance(data, Index):\r\n(Pdb) data\r\nCategoricalIndex(['2015-01-01 00:00:00-05:00'], categories=[2015-01-01 00:00:00-05:00], ordered=False, dtype='category')\r\n(Pdb) c\r\n> /Users/taugspurger/sandbox/pandas/pandas/core/indexes/datetimes.py(244)__new__()\r\n-> if isinstance(data, Index):\r\n(Pdb) data\r\narray(['2015-01-01T05:00:00.000000000'], dtype='datetime64[ns]')\r\n```\r\n\r\nWe would ideally follow this check down the datetimetz path, but `is_dateimtetz(CategoricalIndex[datetime64[ns, tz]])` is false.\r\n\r\n```python\r\n279  ->         if not (is_datetime64_dtype(data) or is_datetimetz(data) or\r\n280                     is_integer_dtype(data) or lib.infer_dtype(data) == 'integer'):\r\n```\r\n\r\n```python\r\n(Pdb) data\r\nCategoricalIndex(['2015-01-01 00:00:00-05:00'], categories=[2015-01-01 00:00:00-05:00], ordered=False, dtype='category')\r\n(Pdb) is_datetimetz(data)\r\nFalse\r\n```\r\n\r\nTo the extent possible, I would recommend an array from the Series / Index as early as possible. Or we could maybe update `is_datetimetz` to look into index classes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437231160",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18664#issuecomment-437231160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18664",
    "id": 437231160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzIzMTE2MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-09T02:43:43Z",
    "updated_at": "2018-11-09T02:43:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is also fishy:\r\n\r\n```python\r\n(Pdb) tools.to_datetime(data)\r\nDatetimeIndex(['2015-01-01 05:00:00'], dtype='datetime64[ns]', freq=None)\r\n(Pdb) tools.to_datetime(data.categories)\r\nDatetimeIndex(['2015-01-01 00:00:00-05:00'], dtype='datetime64[ns, US/Eastern]', freq=None)\r\n```\r\n\r\nThose should probably both be `datetime64[ns, US/Eastern]`. We'd want to fix that for user code which may hit it, but again would be solved by unboxing arrays early in the index constructor (which maybe has to wait till we have lossless arrays for everything)."
  }
]
