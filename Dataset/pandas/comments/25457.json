[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/467743725",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25457#issuecomment-467743725",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25457",
    "id": 467743725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzc0MzcyNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T06:43:28Z",
    "updated_at": "2019-02-27T06:43:28Z",
    "author_association": "MEMBER",
    "body": "Bug indeed, though finding the proper \"name\" for this column needs more robustness (e.g. an algorithm that keeps \"building\" the column name until there are no conflicts).  Investigation and PR are welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/467958346",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25457#issuecomment-467958346",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25457",
    "id": 467958346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzk1ODM0Ng==",
    "user": {
      "login": "alkasm",
      "id": 9651002,
      "node_id": "MDQ6VXNlcjk2NTEwMDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9651002?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alkasm",
      "html_url": "https://github.com/alkasm",
      "followers_url": "https://api.github.com/users/alkasm/followers",
      "following_url": "https://api.github.com/users/alkasm/following{/other_user}",
      "gists_url": "https://api.github.com/users/alkasm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alkasm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alkasm/subscriptions",
      "organizations_url": "https://api.github.com/users/alkasm/orgs",
      "repos_url": "https://api.github.com/users/alkasm/repos",
      "events_url": "https://api.github.com/users/alkasm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alkasm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T17:38:39Z",
    "updated_at": "2019-02-27T17:40:28Z",
    "author_association": "NONE",
    "body": "> Bug indeed, though finding the proper \"name\" for this column needs more robustness (e.g. an algorithm that keeps \"building\" the column name until there are no conflicts). Investigation and PR are welcome!\r\n\r\nPresumably the coding isn't the hard part, but the API choices here. Also want to say it's not a column name, but an attribute name.\r\n\r\nOne other possibility that I didn't mention in the suggestions above is:\r\n\r\nAdd a kwarg to `apply()`, `transform()` and whatever other groupby methods that accept a function, which tells it whether to pass the group name as well as the group dataframe into the function. In other words, something like:\r\n\r\n```python\r\ndef groupedfunc(group, grouped_value):\r\n    print(grouped_value)\r\n    return group\r\n\r\ndf.groupby('col').apply(groupedfunc, pass_grouped_value=True)\r\n```\r\n\r\nSo that `groupedfunc` will pass the group *and* the grouped by value into the function. By default the kwarg would be `False` so it works like normal, but without the `name` attribute.\r\n\r\nI like this idea since it doesn't add attributes to a dataframe that aren't part of the documented dataframe interface. The biggest problem is that it's not as simple of a swap for anyone currently using the `.name` attribute, like it would be if the name were changed to `.name_` or pushed into a method call, but I think it's a better design overall."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/467959850",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25457#issuecomment-467959850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25457",
    "id": 467959850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzk1OTg1MA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T17:43:04Z",
    "updated_at": "2019-02-27T17:43:04Z",
    "author_association": "MEMBER",
    "body": "Admitting that I have a personal bias against attribute access do we really want to change anything here? It is a documented limitation of attribute access that things won't work if it conflicts with an existing attribute name:\r\n\r\nhttps://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#attribute-access\r\n\r\nI think we'd be going down an endless rabbit hole if we tried to make guarantees around this"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/467960438",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25457#issuecomment-467960438",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25457",
    "id": 467960438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzk2MDQzOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T17:44:41Z",
    "updated_at": "2019-02-27T17:44:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed with @WillAyd. Attribute access is merely a convenience especially geared towards interactive use. If you want to select columns, use `__getitem__`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/467964797",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25457#issuecomment-467964797",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25457",
    "id": 467964797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzk2NDc5Nw==",
    "user": {
      "login": "alkasm",
      "id": 9651002,
      "node_id": "MDQ6VXNlcjk2NTEwMDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9651002?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alkasm",
      "html_url": "https://github.com/alkasm",
      "followers_url": "https://api.github.com/users/alkasm/followers",
      "following_url": "https://api.github.com/users/alkasm/following{/other_user}",
      "gists_url": "https://api.github.com/users/alkasm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alkasm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alkasm/subscriptions",
      "organizations_url": "https://api.github.com/users/alkasm/orgs",
      "repos_url": "https://api.github.com/users/alkasm/repos",
      "events_url": "https://api.github.com/users/alkasm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alkasm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T17:56:52Z",
    "updated_at": "2019-02-27T17:59:14Z",
    "author_association": "NONE",
    "body": "> It is a documented limitation of attribute access that things won't work if it conflicts with an existing attribute name\r\n\r\nThe problem IMO is that it *isn't* an existing attribute name *until* it gets passed into the function. It's an undocumented attribute of a dataframe that gets \"magically\" added. It's not part of the dataframe interface and isn't something that exists with `dir()` or `help()` or whatever on `pd.DataFrame`.\r\n\r\nI understand that dotted access is syntactic sugar for quicker interactive work, but I'm more concerned with something working outside of a groupby function and then not working inside the function that acts on each group. The API just suddenly changes in one part of a pipeline.\r\n\r\nIf this is something that happens often in Pandas (adding new attributes to dataframes when passing them around), then I guess this is something that just needs to be documented better. But if it's a one-off case, I believe it's worth re-thinking the necessity of adding/overwriting an attribute."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/467966211",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25457#issuecomment-467966211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25457",
    "id": 467966211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzk2NjIxMQ==",
    "user": {
      "login": "alkasm",
      "id": 9651002,
      "node_id": "MDQ6VXNlcjk2NTEwMDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9651002?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alkasm",
      "html_url": "https://github.com/alkasm",
      "followers_url": "https://api.github.com/users/alkasm/followers",
      "following_url": "https://api.github.com/users/alkasm/following{/other_user}",
      "gists_url": "https://api.github.com/users/alkasm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alkasm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alkasm/subscriptions",
      "organizations_url": "https://api.github.com/users/alkasm/orgs",
      "repos_url": "https://api.github.com/users/alkasm/repos",
      "events_url": "https://api.github.com/users/alkasm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alkasm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T18:00:38Z",
    "updated_at": "2019-02-27T18:00:38Z",
    "author_association": "NONE",
    "body": "> https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#attribute-access\r\n\r\nIn terms of additional documentation, perhaps here it should be noted that `name` shouldn't be used, either."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/467980842",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25457#issuecomment-467980842",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25457",
    "id": 467980842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzk4MDg0Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T18:41:58Z",
    "updated_at": "2019-02-27T18:41:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Completely agreed that we can improve the documentation here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/467991138",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25457#issuecomment-467991138",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25457",
    "id": 467991138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzk5MTEzOA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T19:10:30Z",
    "updated_at": "2019-02-27T19:10:30Z",
    "author_association": "MEMBER",
    "body": "> The problem IMO is that it _isn't_ an existing attribute name _until_ it gets passed into the function. It's an undocumented attribute of a dataframe that gets \"magically\" added. It's not part of the dataframe interface and isn't something that exists with `dir()` or `help()` or whatever on `pd.DataFrame`.\r\n\r\nI haven't stepped through to verify but `.name` is a documented attribute of a Series, and by-Series evaluation could certainly be the culprit here"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/467998238",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25457#issuecomment-467998238",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25457",
    "id": 467998238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzk5ODIzOA==",
    "user": {
      "login": "alkasm",
      "id": 9651002,
      "node_id": "MDQ6VXNlcjk2NTEwMDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9651002?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alkasm",
      "html_url": "https://github.com/alkasm",
      "followers_url": "https://api.github.com/users/alkasm/followers",
      "following_url": "https://api.github.com/users/alkasm/following{/other_user}",
      "gists_url": "https://api.github.com/users/alkasm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alkasm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alkasm/subscriptions",
      "organizations_url": "https://api.github.com/users/alkasm/orgs",
      "repos_url": "https://api.github.com/users/alkasm/repos",
      "events_url": "https://api.github.com/users/alkasm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alkasm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T19:30:38Z",
    "updated_at": "2019-02-27T19:31:51Z",
    "author_association": "NONE",
    "body": "> I haven't stepped through to verify but `.name` is a documented attribute of a Series, and by-Series evaluation could certainly be the culprit here\r\n\r\nThat's good to know! What does \"by-Series evaluation\" mean in this context? The object passed into the function is indeed a dataframe and has the `.name` attribute. \r\n\r\nAlso to have it documented here, running `help(pd.core.groupby.DataFrameGroupBy.transform)` gives:\r\n\r\n```\r\nHelp on function transform in module pandas.core.groupby.groupby:\r\n\r\ntransform(self, func, *args, **kwargs)\r\n    Call function producing a like-indexed DataFrame on each group and\r\n    return a DataFrame having the same indexes as the original object\r\n    filled with the transformed values\r\n\r\n    Parameters\r\n    ----------\r\n    f : function\r\n        Function to apply to each group\r\n\r\n    Notes\r\n    -----\r\n    Each group is endowed the attribute 'name' in case you need to know\r\n    which group you are working on.\r\n\r\n...\r\n```\r\n\r\nOTOH `help(pd.core.groupby.DataFrameGroupBy.apply)` does not have a note about the `'name'` attribute."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/468005886",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25457#issuecomment-468005886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25457",
    "id": 468005886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODAwNTg4Ng==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T19:53:03Z",
    "updated_at": "2019-02-27T19:53:03Z",
    "author_association": "MEMBER",
    "body": "Interestingly enough that docstring you mention isn't part of the API. I think it might actually be wrong and only part of the SeriesGroupBy implementation linked below:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/fe1654faa86836a0007bb513504e57c5c9935b8b/pandas/core/groupby/generic.py#L932\r\n\r\nThough point remains that we can't make guarantees about all attributes name perhaps there is something here to be cleaned up given this isn't part of the API and may just be an internal modification. Not sure what value this provides"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/468044987",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25457#issuecomment-468044987",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25457",
    "id": 468044987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODA0NDk4Nw==",
    "user": {
      "login": "alkasm",
      "id": 9651002,
      "node_id": "MDQ6VXNlcjk2NTEwMDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9651002?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alkasm",
      "html_url": "https://github.com/alkasm",
      "followers_url": "https://api.github.com/users/alkasm/followers",
      "following_url": "https://api.github.com/users/alkasm/following{/other_user}",
      "gists_url": "https://api.github.com/users/alkasm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alkasm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alkasm/subscriptions",
      "organizations_url": "https://api.github.com/users/alkasm/orgs",
      "repos_url": "https://api.github.com/users/alkasm/repos",
      "events_url": "https://api.github.com/users/alkasm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alkasm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T21:50:58Z",
    "updated_at": "2019-02-27T21:57:56Z",
    "author_association": "NONE",
    "body": "> Interestingly enough that docstring you mention isn't part of the API.\r\n\r\nWhat do you mean? The `df.groupby('column'))` object is of type `pandas.core.groupby.groupby.DataFrameGroupBy` so I pulled the docstring from that class's `transform` method.\r\n\r\nThere's a similar thing also at [Line 481](https://github.com/pandas-dev/pandas/blob/fe1654faa86836a0007bb513504e57c5c9935b8b/pandas/core/groupby/generic.py#L481) in the `NDFrameGroupBy` (which is subclassed by `DataFrameGroupBy`):\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/fe1654faa86836a0007bb513504e57c5c9935b8b/pandas/core/groupby/generic.py#L480-L481"
  }
]
