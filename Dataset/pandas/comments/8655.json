[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60690096",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8655#issuecomment-60690096",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8655",
    "id": 60690096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjkwMDk2",
    "user": {
      "login": "agijsberts",
      "id": 1579083,
      "node_id": "MDQ6VXNlcjE1NzkwODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1579083?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agijsberts",
      "html_url": "https://github.com/agijsberts",
      "followers_url": "https://api.github.com/users/agijsberts/followers",
      "following_url": "https://api.github.com/users/agijsberts/following{/other_user}",
      "gists_url": "https://api.github.com/users/agijsberts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agijsberts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agijsberts/subscriptions",
      "organizations_url": "https://api.github.com/users/agijsberts/orgs",
      "repos_url": "https://api.github.com/users/agijsberts/repos",
      "events_url": "https://api.github.com/users/agijsberts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agijsberts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-27T23:55:49Z",
    "updated_at": "2014-10-27T23:55:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I wrote that documentation to reflect the changes in PR #6650 that I prepared for issue #6636. In short, pandas _does_ register its own formatters (see https://github.com/pydata/pandas/blob/master/pandas/tseries/converter.py#L27), so this behavior is entirely part of pandas. The PR obtained a speed-up by replacing a call to matplotlib's `date2num` (explicit for-loop) with `epoch2num` (vectorized), hence the statement that it's much faster since pandas 0.14.0.\n\nIt seems that the formatters registered by pandas are still correctly called:\n\n```\nIn [1]: from pandas import DataFrame, date_range\n\nIn [2]: import matplotlib.units as units\n\nIn [3]: df = DataFrame(range(100), index = date_range('20130101', periods=100))\n\nIn [4]: units.registry.get_converter(df.index)\nOut[4]: <pandas.tseries.converter.DatetimeConverter instance at 0x3f33f38>\n```\n\nSo far I do not see any obvious cause for the new problems, but I'll dive deeper into this later on.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60725414",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8655#issuecomment-60725414",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8655",
    "id": 60725414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzI1NDE0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T08:54:26Z",
    "updated_at": "2014-10-28T08:54:26Z",
    "author_association": "MEMBER",
    "body": "Ah, yes, I was confusing the 'converter' (which are registered in the matplotlib `units`) and the formatting of the labels (which is also nicer in pandas, but this is something you only have when plotting with pandas' `plot` and not when plotting directly with matplotlibs `plot`, while the unit converter works for both)\n\nBut, two points:\n- your statement about the improved performance also holds true when plotting with pandas, so it is not specific to plotting directly with matplotlib, so it is seems a bit out of place in this section?\n- The `units.registry.get_converter(df.index)` does indeed still work. But, the problem is, that when plotting with `plt.plot(df.index, df['col'])`, the `df.index` is first converted to a array of `datetime64`, and this is not recognized by matplotlib anymore: \n  \n  ```\n  In [35]: np.asarray(df.index)\n  Out[35]:\n  array(['2013-01-01T01:00:00.000000000+0100',\n         ...\n         '2013-04-10T02:00:00.000000000+0200'], dtype='datetime64[ns]')\n  \n  In [36]: units.registry.get_converter(np.asarray(df.index))\n  \n  -> None\n  ```\n  \n  To make it fully complex, the `plt.fill_between` in the example does not do this (and does still convert it to datetimes), and because of that the example now crashed.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60736608",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8655#issuecomment-60736608",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8655",
    "id": 60736608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzM2NjA4",
    "user": {
      "login": "agijsberts",
      "id": 1579083,
      "node_id": "MDQ6VXNlcjE1NzkwODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1579083?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agijsberts",
      "html_url": "https://github.com/agijsberts",
      "followers_url": "https://api.github.com/users/agijsberts/followers",
      "following_url": "https://api.github.com/users/agijsberts/following{/other_user}",
      "gists_url": "https://api.github.com/users/agijsberts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agijsberts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agijsberts/subscriptions",
      "organizations_url": "https://api.github.com/users/agijsberts/orgs",
      "repos_url": "https://api.github.com/users/agijsberts/repos",
      "events_url": "https://api.github.com/users/agijsberts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agijsberts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T10:39:22Z",
    "updated_at": "2014-10-28T10:39:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche Re. your points:\n- df.plot() did not benefit from the PR as it uses (at least back then) a different converter and formatter. See https://github.com/pydata/pandas/issues/6636#issuecomment-37870577 for details.\n- You're right, `plt.plot` ends up looking for a `datetime64` formatter, which does not exist. The easiest workaround to make things work as they were is to register pandas' `DateTimeFormatter` for `datetime64`:\n\n```\nfrom numpy import datetime64\nimport pandas as pd\nimport matplotlib.units as units\nimport matplotlib.pyplot as plt\ndf = pd.DataFrame(range(100), index = pd.date_range('20130101', periods=100))\nunits.registry[datetime64] = pd.tseries.converter.DatetimeConverter()\nplt.plot(df.index, df)\nplt.show()\n```\n- The `DateTimeConverter` in matplotlib is limited to `datetime.datetime` and `datetime.date`. Of course you could use it if you first convert the index with `to_pydatetime()`, but it is wasteful to convert `datetime64` to `datetime` and then again to `float`. An example with a `DateTimeIndex` of length 100000:\n\n```\nIn [22]: %timeit DatetimeConverter.convert(df.index, None, None)\n10000 loops, best of 3: 74.4 us per loop\n\nIn [23]: %timeit DateConverter.convert(df.index.to_pydatetime(), None, None)\n100 loops, best of 3: 9.35 ms per loop\n```\n- When not importing pandas, then I believe there two options to plot `datetime64` as a time-axis:\n  1. convert to `datetime.datetime` and use matplotlib's `DateConverter`  (slow, see above)\n  2. manually convert `datetime64` to matplotlib's time representation with `epoch2num(dt.asi8 / 1.0E9)`. Of course then you are still responsible for installing the date/time formatters. This conversion is however very fast and exactly what the PR implemented.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60737406",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8655#issuecomment-60737406",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8655",
    "id": 60737406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzM3NDA2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T10:47:08Z",
    "updated_at": "2014-10-28T10:50:58Z",
    "author_association": "MEMBER",
    "body": "So our `DatetimeConverter` already works for `datetime64`? So we should just register it, and the initial problem is solved! (#8614)\n\nSimply doing `units.registry[np.datetime64] = DatetimeConverter()` solves the issue\n\n@agijsberts Thanks a lot for shedding your light on this!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60738819",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8655#issuecomment-60738819",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8655",
    "id": 60738819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzM4ODE5",
    "user": {
      "login": "agijsberts",
      "id": 1579083,
      "node_id": "MDQ6VXNlcjE1NzkwODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1579083?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agijsberts",
      "html_url": "https://github.com/agijsberts",
      "followers_url": "https://api.github.com/users/agijsberts/followers",
      "following_url": "https://api.github.com/users/agijsberts/following{/other_user}",
      "gists_url": "https://api.github.com/users/agijsberts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agijsberts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agijsberts/subscriptions",
      "organizations_url": "https://api.github.com/users/agijsberts/orgs",
      "repos_url": "https://api.github.com/users/agijsberts/repos",
      "events_url": "https://api.github.com/users/agijsberts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agijsberts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T10:59:56Z",
    "updated_at": "2014-10-28T10:59:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I'm glad to help. And yes, `DatetimeConverter` should work for `datetime64`; it actually exploits the fact that `DatetimeIndex` is stored as `datetime64[ns]`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60739094",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8655#issuecomment-60739094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8655",
    "id": 60739094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzM5MDk0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T11:02:41Z",
    "updated_at": "2014-10-28T11:02:41Z",
    "author_association": "MEMBER",
    "body": "OK, I will then close this PR as it is totally the wrong way :-) \nand open an new one to register the converter for `datetime64`. Or would there be people who rely on the fact that `datetime64` arrays are regarded as ints in matplotlib? Let's discuss further in #8655.\n"
  }
]
