[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24941306",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-24941306",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 24941306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTQxMzA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T18:17:31Z",
    "updated_at": "2013-09-23T18:17:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner I think you might just want to incorporate this in your ops changes (or I can merge directly first), u lmk\n\n@hayd, @jtratner what do you think about non-matching cases. I am basically only matching on the lhs labels,\nso that's what you get back. If their are non-matches, then should prob fill with `False` I think? (so you always are returned a boolean array)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24955347",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-24955347",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 24955347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTU1MzQ3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T21:16:39Z",
    "updated_at": "2013-09-23T21:16:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd prefer you merge this first (if you can do it tonight/tomorrow).  I need to restart the arithmetic refactor soon, otherwise it's going to cover waay too much, but it'd be helpful to have this change in already with tests, so I don't break it or abstract too much.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24955683",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-24955683",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 24955683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTU1Njgz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T21:21:10Z",
    "updated_at": "2013-09-23T21:21:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "do u think I should be filling these with False \nor True if its a not operation ? (to be consistent and alway return a bool type)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24962077",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-24962077",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 24962077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTYyMDc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T22:53:15Z",
    "updated_at": "2013-09-23T22:53:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner @hayd pls look at the top of the PR for op results thxs\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24974452",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-24974452",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 24974452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTc0NDUy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T04:45:02Z",
    "updated_at": "2013-09-24T04:45:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not sure about:\n\n```\nIn [8]: a | Series([])\nOut[8]: \nb    True\nc    True\na    True\ndtype: bool\n```\n\nshouldn't this be `a` ? Or is this a nan being truthy thing... :s\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24974497",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-24974497",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 24974497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTc0NDk3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T04:47:41Z",
    "updated_at": "2013-09-24T04:47:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Realised you were saying exactly the same above: I also think this should be filled with False.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24995443",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-24995443",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 24995443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTk1NDQz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T11:39:45Z",
    "updated_at": "2013-09-24T11:39:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "updated...default is now `False` even for `|`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25009745",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25009745",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25009745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDA5NzQ1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T14:37:09Z",
    "updated_at": "2013-09-24T14:37:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd @jtratner all ok with this now?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25014477",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25014477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25014477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDE0NDc3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T15:22:36Z",
    "updated_at": "2013-09-24T15:22:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not quite, I think `a | Series()` should equal `a`... ?\n\nCripes, it's pretty tricky to be consistent here cos of bool(nan)...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25014940",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25014940",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25014940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDE0OTQw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T15:27:01Z",
    "updated_at": "2013-09-24T15:27:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is why I think default for `|` should be `True`\n\ncurrently (default is False)\n\n```\nIn [1]: a = Series([True, False, True], list('bca'))\n\nIn [2]: a | Series([])\nOut[2]: \nb    False\nc    False\na    False\ndtype: bool\n```\n\nand this is odd\n\n```\nIn [3]: a[a | Series([])]\nOut[3]: Series([], dtype: bool)\n```\n\nTHIS should return a (and will if `|` defaults nan to True)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25082996",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25082996",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25082996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDgyOTk2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T12:48:38Z",
    "updated_at": "2013-09-25T12:48:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25097390",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25097390",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25097390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDk3Mzkw",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T15:31:22Z",
    "updated_at": "2013-09-25T15:31:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "meh... so two things:\n1. These operations should commute, atm: (a & e) != (e & a)\n2. I think the fillna should happen before the constructor with False (currently it's too coarse), so something like:\n   \n   ```\n       index = self.index | other.index\n       new_self = self.reindex(index).fillna(False).astype(bool)\n       new_other = other.reindex(index).fillna(False).astype(bool)\n       return self._constructor(na_op(new_self.values, new_other.values),\n                                index=index, name=name)\n   ```\n\nI suspect this is too much overhead (too slow?).... :S but that would give what I would expect.\n\n```\nIn [2]: a = pd.Series([True, False, True], list('bca'))\n\nIn [3]: e = pd.Series()\n\nIn [4]: e & a\nOut[4]: \nb    False\nc    False\na    False\ndtype: bool\n\nIn [5]: e | a\nOut[5]: \nb     True\nc    False\na     True\ndtype: bool\n```\n\nI guess I should just accept that NaN is True. (...never!!)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25100262",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25100262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25100262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTAwMjYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T16:00:11Z",
    "updated_at": "2013-09-25T16:00:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd these are not comparing bools (except maybe in a special case). They are comparing values (possilby) nan, so the issue is that a nan compare with another nan gives a nan (I think in all cases). which you then _should_ fill\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25101429",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25101429",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25101429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTAxNDI5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T16:13:22Z",
    "updated_at": "2013-09-25T16:13:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback but then afterwards it's being forced to bool rather than values? (I think that confuses things...!)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25102199",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25102199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25102199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTAyMTk5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T16:22:25Z",
    "updated_at": "2013-09-25T16:22:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "no....its a comparison operation between 2 objects, you should get a bool dtype\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25103535",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25103535",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25103535,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTAzNTM1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T16:39:52Z",
    "updated_at": "2013-09-25T16:39:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "What do you think about the reindex thing?\n\nI think we agree that when both are NaN it should be False, however the weird behaviour imo is when only one is NaN - I think then `or` should be the non-NaN truey value i.e. True (and not what we have above), whilst and should be False (as we already have).\n\nThis is also a bit sketch as `True | np.nan == True` whist `NaN | True == NaN`, when we fillna (and I think this may be crux of the issue - grrr).\n\nShould it be commute? I think yes (because we're talking bool):\n\n```\n'a' | 'b' # doesn't commute\n`bool('a'|'b') # does\n```\n\n_Apologies if I'm not making any sense here..._\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25104023",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25104023",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25104023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTA0MDIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T16:45:00Z",
    "updated_at": "2013-09-25T16:45:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I originally was fillna for `&` with `False`, logic being that they both would have to be valid if you don't want a nan\nwhile `True` with `|` as only 1 needs to be valid (ignore both are `nan` for a second``), then these give\n\n`True | np.nan == True` and `NaN | True == True` and `True & np.nan == False` and `np.nan == False`\n\n'special' case of: `np.nan & np.nan == False` and `np.nan | np.nan == False`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25201001",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25201001",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25201001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjAxMDAx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-26T20:29:56Z",
    "updated_at": "2013-09-26T20:29:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd what do you think? default 'or' to True? (as I show above)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25211134",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25211134",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25211134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjExMTM0",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-26T23:03:58Z",
    "updated_at": "2013-09-26T23:03:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Does that mean that in psuedo: (e | a) == a == (a | e) ?\n\nWhat do you think about the index thing (should we | the indexes result)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25211394",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25211394",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25211394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjExMzk0",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-26T23:10:28Z",
    "updated_at": "2013-09-26T23:10:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "To separate the issues here:\n1. For any Series a and empty Series e, does (a | e) == a ?\n2. For a and b Series, atm the index of (a | b) is a.index, should it be (a.index | b.index) ?\n\n_I think the rest of the logic follows neatly from these..._\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25242752",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25242752",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25242752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjQyNzUy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-27T12:52:56Z",
    "updated_at": "2013-09-27T12:52:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd \n\nI think the answer is yes to both. as I think the identity `s[s|e] == s` should be true for all e (whether empty or not)\n\nso for 2) that would essentially be an `align` operation (and not what you are asking for here)\nfor 1) same thing\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25250432",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25250432",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25250432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjUwNDMy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-27T14:48:49Z",
    "updated_at": "2013-09-27T14:48:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "1. Currently this test seems confusing to me then:\n   \n   ```\n   result = a | Series([])\n   expected = Series([True, True, True], list('bca'))\n   assert_series_equal(result,expected) \n   ```\n\nShouldn't this be assert_series_equal(result, a)  ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25252125",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25252125",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25252125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjUyMTI1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-27T15:11:20Z",
    "updated_at": "2013-09-27T15:11:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "nope. this is a boolean evaluation, say basically, return me the 'truth' value element-wise with self 'or' other. The input series dtype is completely irrelevant; actually the only relevant characteristic of the input is the index.\n\n```\nIn [3]: index = list('bca')\n\nIn [4]: Series([True,False,True],index=index) | Series([])\nOut[4]: \nb    True\nc    True\na    True\ndtype: bool\n\nIn [5]: Series([1,2,3],index=index) | Series([])\nOut[5]: \nb    True\nc    True\na    True\ndtype: bool\n\nIn [6]: Series([np.nan,np.nan,np.nan],index=index) | Series([])\nOut[6]: \nb    True\nc    True\na    True\ndtype: bool\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25252150",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25252150",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25252150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjUyMTUw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-27T15:11:44Z",
    "updated_at": "2013-09-27T15:11:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "fyi...just found a bug when doing this with a scalar on the rhs\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25255280",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25255280",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25255280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjU1Mjgw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-27T15:48:41Z",
    "updated_at": "2013-09-27T15:48:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "These were blowing up before\n\n```\nIn [1]: Series([True,False,True]) | np.nan\nOut[1]: \n0    True\n1    True\n2    True\ndtype: bool\n\nIn [2]: Series([True,False,True]) & np.nan\nOut[2]: \n0    False\n1    False\n2    False\ndtype: bool\n```\n\nThese are really not 'valid' comparsions as they are effectiviely bitwise but numpy just gives an answer\nshould we do something about it?\n\n```\nIn [3]: Series([True,False,True]) & 1\nOut[3]: \n0     True\n1    False\n2     True\ndtype: bool\n\nIn [4]: Series([True,False,True]) & 2\nOut[4]: \n0    False\n1    False\n2    False\ndtype: bool\n\nIn [5]: Series([True,False,True]) & 3\nOut[5]: \n0     True\n1    False\n2     True\ndtype: bool\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25257383",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25257383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25257383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjU3Mzgz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-27T16:16:44Z",
    "updated_at": "2013-09-27T16:16:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I think the thing I'm upset with is that NaN should be overridden to be falsey before applying this, otherwise the results don't make sense (I don't see when you would **ever** use \"or\" to mean \"or, or NaN\"). This logic is overridden at other times e.g. when masking with NaNs, and I think it should be here too.\n\nAs it stands, I disagree with... :(. I think we need to fillna left and right before op.\n\nTo me the above seem valid (imo & is a relational operator just like ==... I get the feeling we are thinking about this differently...). The commutative/alignment thing raises it's head again here with `1 & s`... (but I guess we can't control that).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25266537",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25266537",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25266537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjY2NTM3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-27T18:30:03Z",
    "updated_at": "2013-09-27T18:30:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd you are talking about the scalar rhs (which have to admit is an odd thing to do in any event). or the Series that has nans?\n\nfilling is very difficult as what do you fill with?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25277842",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25277842",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25277842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mjc3ODQy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-27T21:14:42Z",
    "updated_at": "2013-09-27T21:14:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I still don't see why this wouldn't work ? (We special case the NaN)\n\n```\nnew_self = self.fillna(False)\nnew_other = other.reindex(index).fillna(False)\nreturn self._constructor(na_op(new_self.values, new_other.values),\n                         index=index, name=name)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25414891",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25414891",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25414891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDE0ODkx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T23:22:09Z",
    "updated_at": "2013-09-30T23:22:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "why are you filling with `False`? (that's ONLY ok for a boolean series, but self and other at this point could be anything). I mean, I CAN fill with a non-true value but I think much easier to mask each arrray and then define what to do ( at that point all you have to do is solve these cases)\n\n```\nNaN op NaN\nvalue op NaN\n```\n\nso then easy to define what to do.\nwhich would be False always? (for both the above cases)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25416547",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4953#issuecomment-25416547",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4953",
    "id": 25416547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDE2NTQ3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T23:59:59Z",
    "updated_at": "2013-09-30T23:59:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe I'm confused, my thinking was that this result is bool so why does it matter that self/other could be anything (non-bool)?\n"
  }
]
