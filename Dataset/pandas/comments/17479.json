[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/328195757",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17479#issuecomment-328195757",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17479",
    "id": 328195757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODE5NTc1Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-08T19:40:27Z",
    "updated_at": "2017-09-08T19:40:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you edit your example to just use the `data1 = np.random.randn(432000)`? We don't have your data file.\r\n\r\nIt looks like something buggy in our converter we register with matplotlib: https://github.com/pandas-dev/pandas/blob/master/pandas/plotting/_converter.py, if you want to dig into that (see if we're calling it too often maybe?)\r\n\r\nAs a workaround there's `voltage[::10000].plot(x_compat=True)`, which disables that converter."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/342562976",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17479#issuecomment-342562976",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17479",
    "id": 342562976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjU2Mjk3Ng==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T17:42:06Z",
    "updated_at": "2017-11-07T17:42:06Z",
    "author_association": "NONE",
    "body": "I profiled `voltage[::10000].plot()` call with `cProfile` and it seems like majority of the time is spent in `pandas._libs.period.get_period_field_arr` function.\r\n\r\n```python\r\nIn [4]: import pandas as pd\r\n   ...: import time\r\n   ...: import numpy\r\n   ...: \r\n   ...: \r\n   ...: # This is how it is in my code, but you don't have it.\r\n   ...: # data1 = load('../170907/data/1504817777.npy')\r\n   ...: \r\n   ...: # You could just as easily do \r\n   ...: data1 = numpy.random.randn(432000)\r\n   ...: \r\n   ...: date_index = pd.date_range(start=1504817777*1e9, periods=len(data1), freq='\r\n   ...: 100 ms', tz='UTC')\\\r\n   ...:     .tz_convert('America/Los_Angeles')\\\r\n   ...:     .tz_localize(None)\r\n   ...: voltage = pd.Series(data1, date_index)\r\n   ...: \r\n\r\nIn [5]: import cProfile, pstats\r\n\r\nIn [6]: cProfile.run('voltage[::10000].plot()', 'pandas.prof')\r\n\r\nIn [8]: p = pstats.Stats('pandas.prof')\r\n\r\nIn [12]: p.sort_stats('time').print_stats(10)\r\nTue Nov  7 18:36:36 2017    pandas.prof\r\n\r\n         258887 function calls (249954 primitive calls) in 39.934 seconds\r\n\r\n   Ordered by: internal time\r\n   List reduced from 2650 to 10 due to restriction <10>\r\n\r\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\r\n        8   36.270    4.534   36.270    4.534 {pandas._libs.period.get_period_field_arr}\r\n        2    1.057    0.529    1.057    0.529 {built-in method _operator.mod}\r\n        2    0.628    0.314    0.628    0.314 {method 'compress' of 'numpy.ndarray' objects}\r\n        1    0.382    0.382   38.957   38.957 /home/kris/projects/pandas/pandas/plotting/_converter.py:491(_daily_finder)\r\n        5    0.379    0.076    0.379    0.076 {method 'nonzero' of 'numpy.ndarray' objects}\r\n        4    0.363    0.091    0.363    0.091 {built-in method _operator.sub}\r\n        4    0.254    0.063    0.289    0.072 /home/kris/projects/pandas/pandas/core/indexes/period.py:713(shift)\r\n        2    0.064    0.032    0.064    0.032 {built-in method _operator.eq}\r\n       67    0.060    0.001    0.060    0.001 {built-in method numpy.core.multiarray.arange}\r\n       96    0.054    0.001    0.054    0.001 {built-in method marshal.loads}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/342580287",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17479#issuecomment-342580287",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17479",
    "id": 342580287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjU4MDI4Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T18:40:00Z",
    "updated_at": "2017-11-07T18:40:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, this is a bit tricky; the calls to `get_period_field_arr` are from `_daily_finder`, but I can't easily extract reproducible example without involving matplotlib.\r\n\r\n@tacaswell will you be a PyData NYC? Maybe we can sketch out a plan for finally getting these converters into matplotlib."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345120953",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17479#issuecomment-345120953",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17479",
    "id": 345120953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTEyMDk1Mw==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T01:50:02Z",
    "updated_at": "2017-11-17T01:50:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "I will be!  This PR https://github.com/matplotlib/matplotlib/pull/9779 also just went in which deals with datetime64."
  }
]
