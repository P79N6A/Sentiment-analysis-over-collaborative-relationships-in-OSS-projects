[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412275266",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-412275266",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 412275266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjI3NTI2Ng==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-11T13:31:35Z",
    "updated_at": "2018-08-11T13:31:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Only partially related, but I've also thought it would be nice to have frequencies for other DateOffset cases, e.g. a calendar year like the below.\r\n```\r\nIn [7]: pd.date_range('2014-01-15', periods=10, freq=pd.DateOffset(years=1))\r\nOut[7]: \r\nDatetimeIndex(['2014-01-15', '2015-01-15', '2016-01-15', '2017-01-15',\r\n               '2018-01-15', '2019-01-15', '2020-01-15', '2021-01-15',\r\n               '2022-01-15', '2023-01-15'],\r\n              dtype='datetime64[ns]', freq='<DateOffset: kwds={'years': 1}>')\r\n```\r\n\r\nSo, maybe a whole set of `'CD', 'CM', 'CA'`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419441059",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-419441059",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 419441059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTQ0MTA1OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-07T13:35:14Z",
    "updated_at": "2018-09-07T13:35:14Z",
    "author_association": "MEMBER",
    "body": "> e.g. df.resample('D') ... currently respects absolute time\r\n\r\n@mroeschke can you give an example of that?\r\n\r\nFor example the below has a DST transition, but it keeps calendar days:\r\n```\r\nIn [17]: pd.__version__\r\nOut[17]: '0.23.4'\r\n\r\nIn [18]: idx = pd.date_range(\"2016-10-30\", freq='H', periods=4*24, tz='Europe/Helsinki')\r\n\r\nIn [20]: pd.Series(index=idx).resample('D').count()\r\nOut[20]: \r\n2016-10-30 00:00:00+03:00    0\r\n2016-10-31 00:00:00+02:00    0\r\n2016-11-01 00:00:00+02:00    0\r\n2016-11-02 00:00:00+02:00    0\r\nFreq: D, dtype: int64\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419549602",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-419549602",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 419549602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTU0OTYwMg==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-07T19:57:49Z",
    "updated_at": "2018-09-07T19:57:49Z",
    "author_association": "MEMBER",
    "body": "Ah yes, you're correct @jorisvandenbossche. I had misspoke; `df.resample('D')` did respect calendar day.\r\n\r\nBasically the crux of the issue is that `Day` (`'D'`) is a subclass of `Tick`. `Tick`s act like `Timedelta`s and their arithmetic respects absolute time, but it's special cased in some operations like `date_range` and `resample` to respect calendar time:\r\n\r\n```\r\nIn [1]: ts = pd.Timestamp('2016-10-30 00:00:00', tz='Europe/Helsinki')\r\n\r\nIn [2]: pd.date_range(start=ts, freq='D', periods=3)\r\nOut[2]:\r\nDatetimeIndex(['2016-10-30 00:00:00+03:00', '2016-10-31 00:00:00+02:00',\r\n               '2016-11-01 00:00:00+02:00'],\r\n              dtype='datetime64[ns, Europe/Helsinki]', freq='D')\r\n\r\nIn [3]: ts + pd.tseries.frequencies.to_offset('D')\r\nOut[3]: Timestamp('2016-10-30 23:00:00+0200', tz='Europe/Helsinki')\r\n```\r\n\r\nSo I think this is confusing, inconsistent to users, and the codebase has special caseslike `if isinstance(offset, Day): #break Tick arithmetic`.\r\n\r\nIt's pretty difficult to convert `'D'` to just respect calendar day across the board because `'D'`  it's fully ingrained with timedeltas (absolute time) as well. Therefore, operations like `timedelta_range(..., freq='D')` would break if `'D'` was converted to a calendar day i.e adding a calendar day to and absolute day doesn't make much sense.\r\n\r\nOverall  I think it's easier and cleaner to make `'D'` respect absolute time across the board and create a new `CalendarDay`, `'CD'`, offset"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419572086",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-419572086",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 419572086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTU3MjA4Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-07T21:35:25Z",
    "updated_at": "2018-09-07T21:35:25Z",
    "author_association": "MEMBER",
    "body": "> So I think this is confusing, inconsistent to users\r\n\r\nI don't debate the inconsistency, and that it would be nice to clean this up.\r\n\r\nBut there might be other ways to solve that.\r\nIn which cases does 'D' actually behave as 24H tick? Only when explicitly using an offset object like in your example? (or are there other cases? it would be good to better document this in this issue) \r\nI think the cases where it is used as calendar day (resample, date_range) are more common, so we could also think about changing it the other way around? \r\n\r\n> timedelta_range(..., freq='D') would break if 'D' was converted to a calendar day\r\n\r\nYep, but we could say that 'D' is here interpreted as 24H, as timedelta's cannot hold a non-fixed frequency anyway\r\n\r\n---\r\n\r\nThe current PR breaks (all in case of tz-aware data of course):\r\n\r\n- the result of `date_range`\r\n- the result of `resample('D')` (both the index and the values): the result are no longer daily values\r\n- plotting of a result of any of the above (since the frequency is not regular any more, it uses a different code path)\r\n\r\nIMO that impact is too big to be justifiable, but that's of course open for discussion. But I think we can certainly not do such a change without proper deprecations."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419606407",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-419606407",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 419606407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTYwNjQwNw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-08T02:30:54Z",
    "updated_at": "2018-09-08T02:33:41Z",
    "author_association": "MEMBER",
    "body": "Cases where `'D'` behave as 24H tick:\r\n* Timestamp/DatetimeIndex Arithmetic\r\n```\r\nIn [2]: ts = pd.Timestamp('2016-10-30 00:00:00', tz='Europe/Helsinki')\r\n\r\nIn [6]: ts + pd.tseries.frequencies.to_offset('D')\r\nOut[6]: Timestamp('2016-10-30 23:00:00+0200', tz='Europe/Helsinki')\r\n\r\nIn [7]: pd.DatetimeIndex([ts]) + pd.tseries.frequencies.to_offset('D')\r\nOut[7]: DatetimeIndex(['2016-10-30 23:00:00+02:00'], dtype='datetime64[ns, Europe/Helsinki]', freq=None)\r\n```\r\n* Shift\r\n```\r\nIn [3]: dti = pd.date_range(start=ts, freq='D', periods=3)\r\n\r\nIn [4]: dti\r\nOut[4]:\r\nDatetimeIndex(['2016-10-30 00:00:00+03:00', '2016-10-31 00:00:00+02:00',\r\n               '2016-11-01 00:00:00+02:00'],\r\n              dtype='datetime64[ns, Europe/Helsinki]', freq='D')\r\n\r\nIn [5]: dti.shift(1, 'D')\r\nOut[5]:\r\nDatetimeIndex(['2016-10-30 23:00:00+02:00', '2016-10-31 23:00:00+02:00',\r\n               '2016-11-01 23:00:00+02:00'],\r\n              dtype='datetime64[ns, Europe/Helsinki]', freq='D')\r\n```\r\n\r\nAnd the only reason `'D'` behaves like 1 calendar day in `date_range` (and therefore `resample` since `date_range` is used to generate bins) is because of this special casing which gives me the impression that `Day` is being forced to operate in a way it wasn't intended:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/0409521665bd436a10aea7e06336066bf07ff057/pandas/core/indexes/datetimes.py#L530\r\n\r\nAlso if `'D'` were to follow a calendar day, I am not a big fan of it meaning 23-25 hours for datetimes with timezones and 24 hours for timedeltas. I would prefer if `D` was consistent across the board.\r\n\r\nTo ease the transition for `date_range`, the default frequency could be `'CD'` instead of `'D'` to still default to calendar day frequency. Sure, there's no easy transition for `resample('D')` for datetimetz data. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420520672",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-420520672",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 420520672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDUyMDY3Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-12T05:51:34Z",
    "updated_at": "2018-09-12T05:51:34Z",
    "author_association": "MEMBER",
    "body": ">  because of this special casing which gives me the impression that Day is being forced to operate in a way it wasn't intended:\r\n\r\nOr you could also say: the behavior as calendar day for date_range/resample was very much intentional because we explicitly special cased for it .. :)\r\n\r\n---\r\n\r\nThe `shift` is a pitty .. but still, we could also opt to make that consistent with date_range/resample, instead of the other way around. \r\n\r\nI personally do never use `pd.tseries.frequencies.to_offset` explicitly, or hardly ever `shift`, but I do use `date_range` and `resample` a lot. I would think many users have a similar pattern, but of course different use cases give different usage patterns, so hard to say. \r\nBut given my usage pattern, for me every time I use the string `'D'`, I would need to change it to `'CD'`, and I actually would almost never want `'D'`. So then it seems a strange choice to opt for changing the common use cases of 'D', instead of the rare ones. But again, I don't know how typical my usage pattern is."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420767859",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-420767859",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 420767859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDc2Nzg1OQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-12T19:24:13Z",
    "updated_at": "2018-09-12T19:24:13Z",
    "author_association": "MEMBER",
    "body": "> the behavior as calendar day for date_range/resample was very much intentional because we explicitly special cased for it .. :)\r\n\r\nSure it was intentional, but it ultimately conflated the original meaning of `'D'`. And I don't think a special case should force `'D'` to change its original meaning.\r\n\r\nMy biggest -1 is the potential for `'D'` to have calendar day semantics with timestamps and absolute day semantics with timedeltas. (`'CD'` cannot be currently added to timedeltas). Even if this would be documented, I am not a fan of the mixed semantics and feels fundamentally wrong.\r\n\r\nFor all intents and purposes, `'CD'` will be equivalent to `'D'` except for a timezone aware timeseries with a DST transition. I am not sure what subset of users this represents (I'd be very curious to know as well). If we release a v0.24rc, we can gauge if the community feels strongly about this API change.\r\n\r\nI am open for `date_range` to default to `'CD'` for continuity from prior behavior. \r\n\r\nAny thoughts @jbrockmendel?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420946244",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-420946244",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 420946244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDk0NjI0NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T09:37:27Z",
    "updated_at": "2018-09-13T09:37:27Z",
    "author_association": "MEMBER",
    "body": "> My biggest -1 is the potential for 'D' to have calendar day semantics with timestamps and absolute day semantics with timedeltas.\r\n\r\nTimedelta's have by definition no timezone, and for tz-naive data 'D' effectively means calendar day. \r\nBut of course when combining tz-aware timestamps with timedelta's, you indeed get 24H behaviour, and not calendar day. I agree that is not ideal.\r\n\r\n>  timezone aware timeseries with a DST transition. I am not sure what subset of users this represents\r\n\r\nI might not be the majority of our users, but certainly a significant subset. But for me the question is rather: of those users (the ones that use timezones), how many use explicit arithmetic with offsets or use shift, or how many use resample and date_range. And I think here the majority will be in the latter group, which is affected by this change.\r\n\r\n> If we release a v0.24rc, we can gauge if the community feels strongly about this API change.\r\n\r\nThat shouldn't wb the goal of an rc IMO. When we release an rc, it should be what we think is best, and to catch situations or breadth of impact we have not anticipated ourselves. Here I think we know quite well that some prominent use cases will break.\r\n\r\n---\r\n\r\nFor me, the main issue I have: when having tz aware data, `resample('D')` will almost never be what users expect or want, I think. And needing to remember to do 'CD' instead of 'D' when having tz aware data, would be a big gotcha that we are adding.\r\n\r\n---\r\n\r\nTo be clear, I think we should further discuss this (I am not necessarily tied to having 'D' be calendar day), but I object strongly to what is now in master. If we choose to go that route, it should at least be with a deprecation cycle."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420951827",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-420951827",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 420951827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDk1MTgyNw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T09:57:12Z",
    "updated_at": "2018-09-13T09:57:12Z",
    "author_association": "MEMBER",
    "body": "cc @pandas-dev/pandas-core I think this is worth a broader discussion than only Matt and me :)\r\n\r\nVery short (probably too short and possibly biased) summary:\r\n\r\n**Problem:**\r\n\r\nThe string 'D' means different things in different places: \r\n\r\n* `to_offset('D') == Day()` is a 24H tick offset, `pd.to_timedelta(1, 'D')` is a 24H timedelta. So both are strict 24H when using them in arithmetic, also when dealing with tz-aware data with a DST transition.\r\n* `date_range(.., freq='D')` and `resample('D')` special case 'D' to mean calendar day and not fixed 24H (to not get a shift in the hour when passing a DST transition)\r\n* `DatetimeIndex(..).freq` actually gives a `Day()` offset, even when the diff between all values is not all exactly 1 day.\r\n\r\n**PR merged in master**\r\n\r\nhttps://github.com/pandas-dev/pandas/pull/22288 solved this inconsistency by changing 'D' to always mean 24H, and add `CalendarDay()` ('CD') to cover the calendar day use case. \r\n\r\nThe benefit is that this removed the inconsistency in interpretation of 'D' and the differences in arithmetic operations vs date_range/resample.\r\n\r\nBut this has the following consequences (all assuming you have tz-aware data, and that you have data covering at least one DST transition):\r\n\r\n* This breaks the output of `date_range(..., freq='D')`\r\n* This breaks the output of `resample('D')`\r\n* Both will not return a 'regular' frequency anymore, which also affects eg the plotting behaviour.\r\n\r\nSo the questions are: is solving this inconsistency worth such a break (and I think my opinion is clear here :)), or is there a possible deprecation path, or are there alternatives to solve the inconsistency?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421083437",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421083437",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421083437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTA4MzQzNw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T17:15:27Z",
    "updated_at": "2018-09-13T17:15:27Z",
    "author_association": "MEMBER",
    "body": "Not that bias at all @jorisvandenbossche :) thanks for the summary!\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421207863",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421207863",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421207863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTIwNzg2Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T02:07:56Z",
    "updated_at": "2018-09-14T02:07:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I am open for date_range to default to 'CD' for continuity from prior behavior.\r\n\r\nDoes that go for `.resample` as well? Or do you think people would typically prefer the absolute version for that?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421213707",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421213707",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421213707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTIxMzcwNw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T02:45:18Z",
    "updated_at": "2018-09-14T02:45:18Z",
    "author_association": "MEMBER",
    "body": "`resample` does not have a default rule code; a user would need to specify `'D'` or `'CD'`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421363274",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421363274",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421363274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM2MzI3NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T13:45:40Z",
    "updated_at": "2018-09-14T13:45:40Z",
    "author_association": "MEMBER",
    "body": ">  do you think people would typically prefer the absolute version for that?\r\n\r\nApart from that there is no default we can change for resample, I personally can't think of a use case where you would ever want the absolute version (and even if you want that, I think '24H' would be much more explicit)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421370474",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421370474",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421370474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM3MDQ3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T14:09:54Z",
    "updated_at": "2018-09-14T14:09:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, of course.\r\n\r\nOne (probably bad option) is to special case the string \"D\" just for resample, and warn that it's treated as `\"CD\"`. If people really want an absolute 24H, then they can use either `\"24H\"` or `pd.tseries.offsets.Day()`. Does that make any sense?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421408359",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421408359",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421408359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQwODM1OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T16:13:34Z",
    "updated_at": "2018-09-14T16:13:34Z",
    "author_association": "MEMBER",
    "body": "> One (probably bad option) is to special case the string \"D\" just for resample, and warn that it's treated as \"CD\". If people really want an absolute 24H, then they can use either \"24H\" or pd.tseries.offsets.Day(). \r\n\r\nThat is basically the current situation, no? \r\n(not to say that it is not an option, it could turn out to be the least worst of the possible solutions)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421436687",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421436687",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421436687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQzNjY4Nw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T17:55:52Z",
    "updated_at": "2018-09-14T17:55:52Z",
    "author_association": "MEMBER",
    "body": "Hmm that would be interesting depreciation cycle of `df.resample('D')`. Just so I understand, `df.resample('D')` would still act like `df.resample('CD')` but give a depreciation warning that `'D'` will change behavior for `resample` in a later release? (if we detect tz-aware data of course)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421439282",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421439282",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421439282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQzOTI4Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T18:05:18Z",
    "updated_at": "2018-09-14T18:05:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right, so it would still be a breaking change for people doing `df.resample(pd.tseries.offsets.Day())`, but I don't know how common that is. I suspect it's less common than `.resample(\"D\")` though.\r\n\r\nThe benefit of treating \"D\" as \"CD\", but immediately changing `.offsets.Day()` is that we don't have to introduce a keyword just for the deprecation."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421439716",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421439716",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421439716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQzOTcxNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T18:06:56Z",
    "updated_at": "2018-09-14T18:11:25Z",
    "author_association": "MEMBER",
    "body": "I am not sure Tom's latest suggestion was to deprecate (\"warn\" can of course point to that), or actually keep it as an alias.\r\n\r\nIf we keep the idea of the merged PR, that's the minimum we should do: deprecate first before actually changing behaviour. I don't think that would be hard: simply keep `date_range` and `resample` as they are, but raise a deprecation warning for 'D' in case there will be a difference in the future.\r\n\r\nBut for me, the question is still if we want that. For example, IMO it would be quite annoying that you need to remember to do `resample('CD')` instead of `resample('D')` just because you have tz-aware data."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421443623",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421443623",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421443623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQ0MzYyMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T18:21:39Z",
    "updated_at": "2018-09-14T18:21:39Z",
    "author_association": "MEMBER",
    "body": "> Right, so it would still be a breaking change for people doing df.resample(pd.tseries.offsets.Day()), but I don't know how common that is\r\n\r\nIndeed less common, but we could still raise a similar deprecation warning for that case as well, no? \r\nOr the reason you would not raise a deprecation warning in this case is because that would be hard to avoid for users who actually want to use Day() ? They can still use '24H' in the meantime, so I would personally be thorough with deprecating.\r\n\r\n---\r\n\r\nIn my subjective assessment*, for the majority of our users, 'D' has always meant \"calendar day\", and only for a minor part it actually meant absolute time (the users that used offsets.Day() directly). \r\nSo my proposal would be to actually formalize what most people used: make 'D' calendar day, and deprecate the absolute behaviour of offset.Day(). \r\nThis will probably be a more complicated deprecation, but one that will impact less users IMO (details need to be worked out of course, didn't think it fully through).\r\n\r\n\\* any way we could check this? Do we know big downstream projects that use heavily tz-aware time series data?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421453169",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421453169",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421453169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQ1MzE2OQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T18:57:01Z",
    "updated_at": "2018-09-14T18:59:50Z",
    "author_association": "MEMBER",
    "body": "FWIW @jorisvandenbossche I was in favor of `'D'` meaning \"calendar day\" for all operations https://github.com/pandas-dev/pandas/issues/20633. As I started refactoring, my biggest hurdle was `'D'` is also heavily used within our Timedelta ops, and having `Day` act like a `DateOffset`(relativetimedelta) instead of a `Tick` (timedelta) broke a lot of tests and would take a lot of monkeypatching for `'D'` to mean \"calendar day\" for timestamps and \"absolute time\" for timedeltas.\r\n\r\nI didn't think it was worth the headache or the mincing of conventions since `'D'` was built to act like a timedelta. So after that investigation it made me realize \"we've been incorrectly using and documenting `'D'` this entire time\"."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421471081",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421471081",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421471081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQ3MTA4MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T20:09:32Z",
    "updated_at": "2018-09-14T20:09:32Z",
    "author_association": "MEMBER",
    "body": "Can you clarify what exactly broke for Timedelta usage? You have the creation where you can use such a string like `pd.to_timedelta(.., unit='D')` or `pd.timedelta_range(..., freq='D')`. Those we could still special case to keep them working (what of course would introduce a new inconsistency), or deprecate if we want. \r\nBut what were the other things that broke? I don't directly see how for a timedelta there would be a lot of change (but I don't use this often in combination with tz aware data), exactly because a 'day' in timedelta sense is always the same as 24H, since timedelta has no notion of timezones (just like 'D' and 'CD' are the same for tz-naive datetimes). Combining tz-aware datetimes with timedeltas would keep their absolute behaviour, as it was before.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421475366",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421475366",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421475366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQ3NTM2Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T20:27:56Z",
    "updated_at": "2018-09-14T20:27:56Z",
    "author_association": "MEMBER",
    "body": "Sorry for being AWOL.\r\n\r\n> If people really want an absolute 24H, then they can use either \"24H\"\r\n\r\nIf we were to start from scratch, this is definitely the path I would want to go with.\r\n\r\nThere is a set of users/use cases that have tz-aware data, want CD-like behavior, and currently don't have it.  For that subset, adding the \"CD\" option is a strict improvement, and nobody else has to be affected.  This strikes me as a reasonable second-best."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421479834",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421479834",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421479834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQ3OTgzNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T20:46:51Z",
    "updated_at": "2018-09-14T20:47:02Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel Can you clarify what you mean with adding the CD option? \r\nBecause you say \"nobody else has to be affected\" on adding 'CD' offset. Do you mean with that the merged PR (I don't see how that would not affect a lot of users, see my summary above), or adding 'CD' without changing meaning of 'D' (but then I don't see the need for 'CD') ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421481207",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421481207",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421481207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQ4MTIwNw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T20:52:49Z",
    "updated_at": "2018-09-14T20:52:49Z",
    "author_association": "MEMBER",
    "body": "> Can you clarify what you mean with adding the CD option?\r\n\r\nIt's possible I failed to follow the conversation closely enough.  With that in mind:\r\n\r\nFor users with tz-naive data, D and CD are equivalent, so these users should be unaffected.\r\n\r\nFor users with tz-aware data who _want_ the <=0.23.0 behavior, keeping \"D\" equivalent to \"24H\" should leave them unaffected (or has the meaning of \"D\" changed?)\r\n\r\nIt is the remaining subset of users/cases for whom \"CD\" is relevant."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421482666",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421482666",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421482666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQ4MjY2Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T20:58:47Z",
    "updated_at": "2018-09-14T20:58:47Z",
    "author_association": "MEMBER",
    "body": "> For users with tz-aware data who want the <=0.23.0 behavior, keeping \"D\" equivalent to \"24H\" should leave them unaffected (or has the meaning of \"D\" changed?)\r\n\r\nSo that is the whole point of the discussion: *changing* \"D\" to be equivalent to \"24H\" (in date_range, resample) *breaks* code, so this will not leave users unaffected. See my summary comment here: https://github.com/pandas-dev/pandas/issues/22274#issuecomment-420951827"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421498446",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421498446",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421498446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQ5ODQ0Ng==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T22:16:30Z",
    "updated_at": "2018-09-14T22:16:30Z",
    "author_association": "MEMBER",
    "body": ">Can you clarify what exactly broke for Timedelta usage?\r\n\r\nUnfortunately I don't have the branch anymore, but the gist of the change involved `Day` subclassing `DateOffset` instead of `Tick` (because `DateOffset` have relative arithmetic ops paths and `Tick`s have absolute arithmetic ops paths with Series, Indexes, Scalars, etc.), so I'd get errors similar to the following:\r\n\r\n```\r\n# Day as \"calendar day\" was implemented so that 'D'\r\n# essentially equivalent as pd.DateOffset(days=1) \r\n\r\nIn [4]: pd.Timedelta('1day') + pd.DateOffset(days=1)\r\nTypeError: Cannot convert input [relativedelta(days=+2)] of type <class 'dateutil.relativedelta.relativedelta'> to Timestamp\r\n\r\nIn [6]: pd.timedelta_range('1day', freq=pd.DateOffset(days=1), periods=3)\r\nValueError: <Day> is a non-fixed frequency\r\n\r\nIn [7]: s = pd.Series(range(3), index=pd.timedelta_range('1day', periods=3))\r\n\r\nIn [8]: s.resample('D').mean()\r\nValueError: <Day> is a non-fixed frequency\r\n```\r\nSo two popular timedelta operations with `'D'`, `timedelta_range` and resampling, broke. This would require a calendar day `'D'` to take a special path for timedeltas, but as mentioned before I am -1 on  `'D'` behaving like absolute time for timedeltas and relative time for datetimes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421512752",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-421512752",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 421512752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTUxMjc1Mg==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T23:54:22Z",
    "updated_at": "2018-09-14T23:54:22Z",
    "author_association": "MEMBER",
    "body": "I don't have any issues with the functionality being discussed, but just have a slight quibble with the usage of `'CD'` as the string alias.\r\n\r\nPrior to the introduction of `'CD'`, my understanding was that a prefix of `'C'` was reserved for custom frequencies, much like how a prefix of `'B'` basically means the \"business\" equivalent frequency.  Perhaps that's just an unintended pattern that I happened to pick up on though.\r\n\r\nTo add to this, we have the string alias `'CD'` meaning \"calendar day\" but the `CDay` offset meaning \"custom business day\", which just seems unnecessarily confusing:\r\n```python\r\nIn [2]: pd.offsets.CDay()\r\nOut[2]: <CustomBusinessDay>\r\n```\r\n\r\nI don't think that custom frequencies are used all that often (could be wrong), so I'm not objecting to breaking the 'C' prefix pattern, but just wanted to make sure we're cognizant that we're doing so.  It's also possible that there are some additional implications that I could be overlooking.\r\n\r\nI did a quick check and found one instance within the code that exploits a prefix of 'C' meaning custom, but it doesn't look like it really breaks anything of substance.  I didn't do an extensive search, so it might be worthwhile to go through the code to see if I missed something elsewhere, but I imagine anything important would have been flagged by the tests."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423105955",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-423105955",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 423105955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzEwNTk1NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-20T09:13:19Z",
    "updated_at": "2018-09-20T09:13:19Z",
    "author_association": "MEMBER",
    "body": "> the gist of the change involved Day subclassing DateOffset instead of Tick (because DateOffset have relative arithmetic ops paths and Ticks have absolute arithmetic ops paths with Series, Indexes, Scalars, etc.), so I'd get errors similar to the following\r\n\r\n@mroeschke that there were some breakages was to be expected I think? In the merged PR, there were also breakages, as you needed to change existing tests to get them passing. \r\n\r\n> So two popular timedelta operations with 'D', timedelta_range and resampling, broke\r\n\r\nYes, and in master two popular tz-aware operations with 'D' (the same ones) broke. I don't know which one of the two is more popular :-) \r\nAnyhow, what I try to say is: both approaches have similar breaking consequences. So IMO neither of the possible breakages is necessarily a reason to prefer the other approach, and more importantly, with both approaches we need to think about how to properly deprecate / keep workarounds or aliases alive to minimize breakages.\r\n\r\n> I am -1 on 'D' behaving like absolute time for timedeltas and relative time for datetimes.\r\n\r\nI currently don't see an 'ideal' solution, so in that light, personally I find special casing 'D' as absolute for timedelta reasonable. 'D' basically is absolute time in practice for most cases, only for tz-aware data it might deviate. And since timedelta's are always tz-naive, allowing 'D' for timedeltas for convenience, is not that \"strange\" to me.\r\n\r\nPeople are used to use 'D', and people will continue to use 'D' for tz-naive datetime data. Having to remember to switch to 'CD' for tz-aware data is for me the biggest problem I have with the behaviour merged PR. Plus the fact that 'D', the one people are used to use, basically becomes useless for tz-aware data.\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423274406",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-423274406",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 423274406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzI3NDQwNg==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-20T17:50:24Z",
    "updated_at": "2018-09-20T17:50:52Z",
    "author_association": "MEMBER",
    "body": "I agree that either change will incur breaking changes and that we'll need to adapt some depreciation behavior.\r\n\r\nBesides the potential mixed relative/absolute semantics that 'D'  could represent (that I am not a fan of), I am also concerned about the potential bugs and gotchas that it might introduce as there might be other places where datatime and timedelta transformations are tightly coupled.\r\n\r\nJust curious, if 'CD' was kept, would you be okay with a depreciation cycle of `resample('D')` where 'D' was just mapped to 'CD'?\r\n\r\nAlso I think we should also continue this discussion at the dev chat next week so we can have a more contiguous discussion with everyone else."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425211774",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22274#issuecomment-425211774",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22274",
    "id": 425211774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTIxMTc3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T19:18:30Z",
    "updated_at": "2018-09-27T19:18:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Quick summary from the meeting:\r\n\r\n1. We want consistency in the meaning of the string `'D'` between contexts (resample / date_range & timedelta / offsets)\r\n2. We suspect that `resample('D')` / `date_range(freq='D')` are more commonly used, and so don't want to change that behavior\r\n3. @mroeschke has heroically volunteered to see if `Timedelta(\"<n>D\")`  (anywhere else in offsets?) can be deprecated in favor of some other string (e.g. `'24H'`, `'2TD'`)"
  }
]
