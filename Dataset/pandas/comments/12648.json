[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197600553",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197600553",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197600553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzYwMDU1Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T23:20:42Z",
    "updated_at": "2016-03-16T23:20:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "an Index already does the\n\npls show a usecase\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197615940",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197615940",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197615940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzYxNTk0MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T00:06:20Z",
    "updated_at": "2016-03-17T00:06:36Z",
    "author_association": "MEMBER",
    "body": "@johne13 you aren't confusing it with `cumsum`? Besides obtaining it from an index, you can also just do `range(len(df))`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197619108",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197619108",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197619108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzYxOTEwOA==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T00:12:44Z",
    "updated_at": "2016-03-17T00:13:57Z",
    "author_association": "NONE",
    "body": "It is not a super-common event, to be sure, but there are cases like this: that I bump into somewhat regularly:\nhttp://stackoverflow.com/questions/36044890/how-to-speed-up-a-very-slow-pandas-apply-function/36047836#36047836\n\nSimpler example:\n\n```\ndf = pd.DataFrame({ 'x':[1,2,1,2] })\n#df[ df.x == 2 ].cumcount()    # doesn't work of course\n\ndf.loc[ df.x == 2, 'y'] = 1    # so I do a two step with cumsum as 2nd step\ndf.y.cumsum()\n\nOut[428]: \n0    NaN\n1    1.0\n2    NaN\n3    2.0\n```\n\nSo yeah, lots of easy ways to do this on ENTIRE dataset but as soon as you want to do a selection, it gets a little messier.  Or again, maybe I am missing something obvious.\n\nAlso, I would think whatever justification there is for having this as a groupby method applies just as much to having it work for a dataframe or series, no?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197620193",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197620193",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197620193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzYyMDE5Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T00:20:08Z",
    "updated_at": "2016-03-17T00:20:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "the common idiom is\n\n.reset_index()\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197620360",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197620360",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197620360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzYyMDM2MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T00:21:08Z",
    "updated_at": "2016-03-17T00:21:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "no for a groupby this is expensive if u don't have an array impl (which is why it exists)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197621936",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197621936",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197621936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzYyMTkzNg==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T00:31:53Z",
    "updated_at": "2016-03-17T00:31:53Z",
    "author_association": "NONE",
    "body": "I guess I am missing something.  I couldn't do this, for example,\n`df['new'] = df[ df.x == 2 ].reset_index()`\nbecause obviously I have reset the index so can't correctly align it with the original dataset.  \n\nI should have been more clear about that aspect.  I am generally trying to create a new column when I mistakenly attempt to use the nonexistent cumcount method.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197623957",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197623957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197623957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzYyMzk1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T00:42:40Z",
    "updated_at": "2016-03-17T00:42:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok not averse to adding this method for consistency (among other cum. methods) but should return a Series\n\npretty trivial impl if u would like to submit a PR\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197624489",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197624489",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197624489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzYyNDQ4OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T00:46:40Z",
    "updated_at": "2016-03-17T00:46:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "signature would be identical to `.cum*` (at end of `core/generic.py`)\n\n```\nIn [1]: pd.DataFrame.cumsum?\nSignature: pd.DataFrame.cumsum(self, axis=None, dtype=None, out=None, skipna=True, **kwargs)\nDocstring:\nReturn cumulative sum over requested axis.\n\nParameters\n----------\naxis : {index (0), columns (1)}\nskipna : boolean, default True\n    Exclude NA/null values. If an entire row/column is NA, the result\n    will be NA\n\nReturns\n-------\nsum : Series\nFile:      ~/pandas/pandas/core/generic.py\nType:      instancemethod\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197637008",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197637008",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197637008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzYzNzAwOA==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T01:25:36Z",
    "updated_at": "2016-03-17T01:25:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Potentially not as fast (?), and handles NAs differently from the case above, but very idiomatic:\n\n```\nIn [12]: df.where(df==2).expanding().count()\nOut[12]: \n     x\n0  0.0\n1  1.0\n2  1.0\n3  2.0\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197638307",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197638307",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197638307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzYzODMwNw==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T01:32:03Z",
    "updated_at": "2016-03-17T01:32:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Taken a step further: we could offer a argument for changing the [NaN behavior](https://github.com/pydata/pandas/blame/master/doc/source/computation.rst#L617) and offer all the `cum-x` behavior with `.expanding()`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197643264",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197643264",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197643264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY0MzI2NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T01:43:16Z",
    "updated_at": "2016-03-17T01:44:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MaximilianR actually that's a good point. would you make a PR to:\n- cross-link doc-strings for `.cum*` to the `.expanding().*` (for `sum,prod,max,min`, which are only supported).\n- if you find a nice place in computation.rst where you might want to mention these similarities. (I see you linked there), just review this then.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197644471",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197644471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197644471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY0NDQ3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T01:46:12Z",
    "updated_at": "2016-03-17T01:46:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "maybe give a tiny example\n\n```\nIn [7]: s = Series([1,2,np.nan,3,np.nan,4])\n\nIn [8]: s.cumsum()\nOut[8]: \n0     1.0\n1     3.0\n2     NaN\n3     6.0\n4     NaN\n5    10.0\ndtype: float64\n\nIn [9]: s.expanding().sum()\nOut[9]: \n0     1.0\n1     3.0\n2     3.0\n3     6.0\n4     6.0\n5    10.0\ndtype: float64\n\nIn [10]: s.cumsum().ffill()\nOut[10]: \n0     1.0\n1     3.0\n2     3.0\n3     6.0\n4     6.0\n5    10.0\ndtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197650536",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197650536",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197650536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY1MDUzNg==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T02:00:27Z",
    "updated_at": "2016-03-17T02:00:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @MaximilianR actually that's a good point. would you make a PR to:\n\nI am jammed at the moment (although free enough to cruise the feed, it seems), but I can add that if no one else picks it up over the next few weeks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197664035",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197664035",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197664035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY2NDAzNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T02:40:02Z",
    "updated_at": "2016-03-17T02:40:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, let me make an issue so we don't forget.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197675532",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197675532",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197675532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3NTUzMg==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:28:07Z",
    "updated_at": "2016-03-17T03:28:07Z",
    "author_association": "NONE",
    "body": "@MaximilianR   I think you can get the same behavior as in my earlier example by using a boolean mask instead of `where`:\n\n```\nIn [504]: df['new'] = df.x[ df.x == 2 ].expanding().count()\n\nIn [505]: df\nOut[505]: \n   x  new\n0  1  NaN\n1  2  1.0\n2  1  NaN\n3  2  2.0\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197677097",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197677097",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197677097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3NzA5Nw==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:33:59Z",
    "updated_at": "2016-03-17T03:33:59Z",
    "author_association": "NONE",
    "body": "Here's a quick speed test, `cumsum` about 4x faster than `expanding().count()`\n\n```\nIn [515]: df = pd.DataFrame({ 'x':np.random.randn(10000) })\n\nIn [516]: %timeit df['new1'] = df.x[ df.x > 0 ].expanding().count()\n100 loops, best of 3: 4.57 ms per loop\n\nIn [517]: %%timeit\n     ...: df.loc[ df.x > 0, 'new2' ] = 1\n     ...: df['new2'] = df['new2'].cumsum()\n1000 loops, best of 3: 1.12 ms per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197677514",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197677514",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197677514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3NzUxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:36:29Z",
    "updated_at": "2016-03-17T03:36:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "try assigning to a range ITS much faster still. this is the impl\n\nwe were not suggesting using expanding.count here it's doing a lot more work and very careful about min periods and such\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197678231",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197678231",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197678231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3ODIzMQ==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:40:02Z",
    "updated_at": "2016-03-17T03:41:04Z",
    "author_association": "NONE",
    "body": "@jreback  So do you still think `cumcount` is worthwhile or is `expanding().count()` the way to go?\n\nSorry, don't understand what you mean by \"assigning to a range\"?\n\nIf you still like the cumcount idea I'll give it a shot though I have not done a PR before.  Of course if someone else wants to do it I'd gladly defer to them.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197678992",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197678992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 197678992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3ODk5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:42:03Z",
    "updated_at": "2016-03-17T03:42:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it rounds out the cum functions a bit and would be ok\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198721215",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-198721215",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 198721215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODcyMTIxNQ==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-19T15:23:31Z",
    "updated_at": "2016-03-19T15:43:24Z",
    "author_association": "NONE",
    "body": "OK, I think I have an initial attempt and will post the code and example in a moment, but first want to list other similar functions as a point of comparison:\n- `cumsum()` -- outputs series or dataframe, dtype=float\n- `(groupby)cumcount()` -- outputs a series, numbered 0,1,2, ... n-1, dtype=int\n- `expanding().count()` -- outputs series or dataframe, numbered 1,2,3, ... n, dtype=float\n\nStarting from there, it made the most sense to me to aim for something roughly consistent with cumsum() and expanding().count and not (groupby)cumcount().  Example to follow, see what you think.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198724773",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-198724773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 198724773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODcyNDc3Mw==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-19T15:33:28Z",
    "updated_at": "2016-03-19T15:50:42Z",
    "author_association": "NONE",
    "body": "Here's the code, added to generic, just after cummax (and also cumsum for comparison).\n\n```\n        cls.cumcount = _make_cum_function(\n            'count', name, name2, axis_descr, \"cumulative count\",\n            lambda y, axis: np.cumsum(~np.isnan(y), axis).astype(float), np.nan, np.nan)\n\n        cls.cumsum = _make_cum_function(\n            'sum', name, name2, axis_descr, \"cumulative sum\",\n            lambda y, axis: y.cumsum(axis), 0., np.nan)\n```\n\nIt's a little less natural than the other cum functions, but that was the best way I could come up with that fit the existing `_make_cum_function()` infrastructure.  It's basically cumsum but needs extra code to essentially convert non-nan to ones while maintaining the same treatment of nans as cumsum.\n\nIn some quickie timings (1000 rows and 2 columns) it is just a little slower than cumsum() and much faster than expanding().count().  Exactly as expected, I think.\n\n```\ndf = pd.DataFrame({ 'x':[1,1,np.nan,1], 'y':range(4)  })\n\ndf.cumsum()\nOut[18]: \n     x    y\n0  1.0  0.0\n1  2.0  1.0\n2  NaN  3.0\n3  3.0  6.0\n\ndf.cumcount()\nOut[19]: \n     x    y\n0  1.0  1.0\n1  2.0  2.0\n2  NaN  3.0\n3  3.0  4.0\n\ndf.expanding().count()\nOut[20]: \n     x    y\n0  1.0  1.0\n1  2.0  2.0\n2  2.0  3.0\n3  3.0  4.0\n```\n\nAnd here's  groupby/cumcount for comparison:\n\n```\ndf = pd.DataFrame({ 'x':[1,1,np.nan,1], 'y':range(4), 'grp':[1,1,1,1] })\n\ndf.groupby('grp').cumcount()\nOut[40]: \n0    0\n1    1\n2    2\n3    3\ndtype: int64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198754369",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-198754369",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 198754369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODc1NDM2OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-19T17:34:10Z",
    "updated_at": "2016-03-19T17:34:10Z",
    "author_association": "MEMBER",
    "body": "The problem with making it consistent with `groupby().cumcount()` is that that function does not take the values into accound (whether they are NaN or not), it just numbers the entries in the group regardless of its values. That is also the reason that it returns a Series.\n\nSo if we want to make `Series/DataFrame.cumcount` consistent with the existing method, then it should also not disregard NaN values (as you do in your example implementation). \nBut, I suppose this defeats part of the reason you want a `Series/DataFrame.cumcount`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198757523",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-198757523",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 198757523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODc1NzUyMw==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-19T17:54:06Z",
    "updated_at": "2016-03-19T17:54:06Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche I really hadn't thought about how exactly a Series/DataFrame.cumcount would work until I started comparing it to all the existing functions (count/cumsum/groupby.cumcount).  Then I realized it couldn't be consistent with all of them, only some.\n\nOut of all the comparison functions, it seems to me that it ought to work approximately the same as expanding().count(), right?  And conversely, the way groupby.cumcount works makes the least sense to me, but of course I'll gladly defer to you and others on how to best make this consistent with the rest of pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198759969",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-198759969",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 198759969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODc1OTk2OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-19T18:04:56Z",
    "updated_at": "2016-03-19T18:04:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is almost a trivial function, should be something like:\n\n```\ndef cumcount(self, axis=0, skipna=True):\n   ax = self._get_axis(axis)\n   if skipna and ax.hasnans:\n         result = ax.isnull().cumsum()\n   else:\n         result = range(len(ax))\n    return Series(result, index=ax)\n```\n\nthis is really just a range; if the index has nans then its slightly different.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198760073",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-198760073",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 198760073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODc2MDA3Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-19T18:06:34Z",
    "updated_at": "2016-03-19T18:06:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess it technically should have an `ascending` arg to be consistent. Further `.groupby.cumcount()` should have `skipna`.\n\nThis should mirror the `.cum*` signatures.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198773998",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-198773998",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 198773998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODc3Mzk5OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-19T19:23:29Z",
    "updated_at": "2016-03-19T19:23:29Z",
    "author_association": "MEMBER",
    "body": "@jreback But I would also find it very unfortunate that `groupby().cumcount()` and `groupby().apply(lambda x: x.cumcount())` would not be the same .. \nAnd it is, as far as I can see, not possible to have both that and have it consistent with `Series.cumsum` and others\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198774279",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-198774279",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 198774279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODc3NDI3OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-19T19:26:28Z",
    "updated_at": "2016-03-19T19:26:28Z",
    "author_association": "MEMBER",
    "body": "Actually, to phrase the question in another way: **should `cumcount` work on the index or on the values?**\n\nThe example implementation of @johne13 works on the values (ignoring NaNs there), while the example implementation of @jreback works on the index.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198774655",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-198774655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 198774655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODc3NDY1NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-19T19:31:03Z",
    "updated_at": "2016-03-19T19:31:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche actually that's a good point. it _should_ work on the values, similarl to `cum*`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198775987",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-198775987",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 198775987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODc3NTk4Nw==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-19T19:43:14Z",
    "updated_at": "2016-03-19T19:43:14Z",
    "author_association": "NONE",
    "body": "Sorry, some of these details are over my head -- have never really delved into pandas internals before.  I tried to make it work as similarly to cum\\* as possible, that's why it is done via `_make_cum_function` like the other cum functions rather than a standalone.  Signature is comparable to cumsum.\n\n```\nIn [28]: pd.DataFrame.cumcount?\nSignature: pd.DataFrame.cumcount(self, axis=None, dtype=None, out=None, skipna=True, **kwargs)\nDocstring:\nReturn cumulative count over requested axis.\n\nParameters\n----------\naxis : {index (0), columns (1)}\nskipna : boolean, default True\n    Exclude NA/null values. If an entire row/column is NA, the result\n    will be NA\n\nReturns\n-------\ncount : Series\nFile:      ~/pandas-johne13/pandas/core/generic.py\nType:      function\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198776873",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12648#issuecomment-198776873",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12648",
    "id": 198776873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODc3Njg3Mw==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-19T19:52:38Z",
    "updated_at": "2016-03-19T19:53:49Z",
    "author_association": "NONE",
    "body": "And also regarding `groupby.cumcount()`, it actually doesn't agree with `groupby.count()` in that its ending value is n-1 whereas count returns n.\n"
  }
]
