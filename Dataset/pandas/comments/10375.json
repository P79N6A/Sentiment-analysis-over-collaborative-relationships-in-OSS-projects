[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112807113",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112807113",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112807113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjgwNzExMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T13:48:15Z",
    "updated_at": "2015-06-17T13:48:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "You should be clear that you are NOT apples-to-apples\n\n```\nIn [10]: np.random.seed(1234)\n\nIn [11]: df = DataFrame({'A' : np.random.randint(0,1000,size=500000),'B' : np.random.randn(500000) })\n\nIn [12]: g = df.groupby('A').B\n\nIn [14]: %timeit g.sum()\n100 loops, best of 3: 2 ms per loop\n\nIn [15]: %timeit g.mean()\n100 loops, best of 3: 2.06 ms per loop\n\nIn [16]: %timeit g.max()\n100 loops, best of 3: 2.12 ms per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112811448",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112811448",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112811448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjgxMTQ0OA==",
    "user": {
      "login": "d1manson",
      "id": 4244876,
      "node_id": "MDQ6VXNlcjQyNDQ4NzY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4244876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d1manson",
      "html_url": "https://github.com/d1manson",
      "followers_url": "https://api.github.com/users/d1manson/followers",
      "following_url": "https://api.github.com/users/d1manson/following{/other_user}",
      "gists_url": "https://api.github.com/users/d1manson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d1manson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d1manson/subscriptions",
      "organizations_url": "https://api.github.com/users/d1manson/orgs",
      "repos_url": "https://api.github.com/users/d1manson/repos",
      "events_url": "https://api.github.com/users/d1manson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d1manson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T14:00:08Z",
    "updated_at": "2015-06-17T14:00:08Z",
    "author_association": "NONE",
    "body": "I already alluded to the apples-to-apples problem.  Despite that, there are two clear perf issues.\n\nFirstly, `all` and `any` give very poor performance:\n\n```\nIn: %timeit g.max()\n1000 loops, best of 3: 1.97 ms per loop # for comparison on my computer\nIn: %timeit g.any()\n10 loops, best of 3: 104 ms per loop\nIn: %timeit g.all()\n10 loops, best of 3: 104 ms per loop\n```\n\nSecondly, the first time you execute anything on a `groupby` instance you get a large overhead:\n\n```\nIn: g = df.groupby('A').B\nIn: %timeit g.sum()\nThe slowest run took 10.67 times longer than the fastest.\n    This could mean that an intermediate result is being cached \n1000 loops, best of 3: 1.9 ms per loop\n```\n\npresumably that large overhead is due to a sort, which would be helpful in some cases, but often is unnecessary.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112827586",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112827586",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112827586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjgyNzU4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T14:42:40Z",
    "updated_at": "2015-06-17T14:43:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "`.all` & `.any` are not currently implemented in cython, so they all back to a slower path. I guess could be implemented, but not very useful IMHO on anything but `bool` cols.\n\nOf course the initial creation of a groupby object is important (and cached).\n\nFurther, numpy has a hard time dealing with lots of edge cases and dtypes. That's why pandas exists in the first place.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112851417",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112851417",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112851417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg1MTQxNw==",
    "user": {
      "login": "ml31415",
      "id": 2386612,
      "node_id": "MDQ6VXNlcjIzODY2MTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2386612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ml31415",
      "html_url": "https://github.com/ml31415",
      "followers_url": "https://api.github.com/users/ml31415/followers",
      "following_url": "https://api.github.com/users/ml31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/ml31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ml31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ml31415/subscriptions",
      "organizations_url": "https://api.github.com/users/ml31415/orgs",
      "repos_url": "https://api.github.com/users/ml31415/repos",
      "events_url": "https://api.github.com/users/ml31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ml31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T15:36:57Z",
    "updated_at": "2015-06-17T15:36:57Z",
    "author_association": "NONE",
    "body": "`all` and `any` are common grouping operations, e.g. just to support some grouped allnan or anynan functionality. Surely they interpret their inputs as bool, but it may also make sense to run it on any int or float column. The decision, if this usecase is frequent enough to do some tweaking there is of course up to you.\n\nFor the apples/apples story. I haven't looked into the pandas code details, but I suppose what happens there is that some sort index is created and cached. For benchmarking it seems fair to me, to include this index building into the benchmark. Whenever the data is changed, NA thrown out, data added or removed, the index needs to be recreated. And of course for any first run it has to be created, or when the aggregation shall take place over different columns. So it's a not that uncommon case.\n\nGiven the caching, this performance issue may hit only some of the pandas users, depending on their usecase. It may be fair enough to say, the current implementation is fast enough. But even if the creation of the sort index is not taken into account, pandas is not faster than the aggregate C implementation, which does not use any precached index.\n\nThe sorting is the main time waster for the grouping operations, and it can be avoided for many functions using indirections when accessing the data. The sorting is pure overhead, if the grouping operations are built accordingly. I learned this the hard way, when I tried to match matlabs accumarray speeds with a similar sort-based approach. Whatever I tried, the sort alone was already slower than the whole grouping operation in matlab. To stress this point, pandas is not even faster in the benchmarking, if the pre-sorting is not taken into account, just about comparable.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112857708",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112857708",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112857708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg1NzcwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T15:50:51Z",
    "updated_at": "2015-06-17T15:50:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "you are missing the point, `.all` and `.any` are reducing operations, NOT aggregating operations in this case. Of course you GROUP by them, rarely would you actually AGGREGATE by them.\n\nare you numpy routines also calculating the indexer? \n\nwe don't pre-cache anything. The point however, is that measure a SINGLE aggregate operation is generally not that useful. You oftn use these group indexers many times, e.g.\n\n```\ng = df.groupby(....)\ng.max()-g.min()\n```\n\netc cetera.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112866299",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112866299",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112866299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg2NjI5OQ==",
    "user": {
      "login": "ml31415",
      "id": 2386612,
      "node_id": "MDQ6VXNlcjIzODY2MTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2386612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ml31415",
      "html_url": "https://github.com/ml31415",
      "followers_url": "https://api.github.com/users/ml31415/followers",
      "following_url": "https://api.github.com/users/ml31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/ml31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ml31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ml31415/subscriptions",
      "organizations_url": "https://api.github.com/users/ml31415/orgs",
      "repos_url": "https://api.github.com/users/ml31415/repos",
      "events_url": "https://api.github.com/users/ml31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ml31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T16:19:40Z",
    "updated_at": "2015-06-17T16:30:00Z",
    "author_association": "NONE",
    "body": "The numpy implementations use `np.bincount` or fancy indexing wherever possible. This is also not building any kind of sorted index.\n\nPrecaching was maybe ambiguous, but I guess we both know what I was talking about: The caching of a sort index on the first groupby instruction.\n\nI agree, that often group by operations come in sequences. Nevertheless, the sorting remains overhead, and the less consequent grouped operations, the bigger this overhead. For the worst case, only a single grouped instruction as in the benchmark, looks like the overhead sums up to about a 10-fold execution time compared to an unsorted algorithm. And even worse, despite this heavy initial work, it's never getting faster than the unsorted algorithm.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112870325",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112870325",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112870325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg3MDMyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T16:32:35Z",
    "updated_at": "2015-06-17T16:32:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI, you can simply pass `sort=False` to not sort.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112871411",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112871411",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112871411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg3MTQxMQ==",
    "user": {
      "login": "d1manson",
      "id": 4244876,
      "node_id": "MDQ6VXNlcjQyNDQ4NzY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4244876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d1manson",
      "html_url": "https://github.com/d1manson",
      "followers_url": "https://api.github.com/users/d1manson/followers",
      "following_url": "https://api.github.com/users/d1manson/following{/other_user}",
      "gists_url": "https://api.github.com/users/d1manson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d1manson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d1manson/subscriptions",
      "organizations_url": "https://api.github.com/users/d1manson/orgs",
      "repos_url": "https://api.github.com/users/d1manson/repos",
      "events_url": "https://api.github.com/users/d1manson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d1manson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T16:37:47Z",
    "updated_at": "2015-06-17T16:37:47Z",
    "author_association": "NONE",
    "body": "Hmm, I hadn't spotted that, although simply doing:\n\n```\ng = df.groupby('A',sort=False).B\n%timeit g.sum()\n```\n\ndoesn't seem to help, you still get the same message: `The slowest run took 9.59 times longer than the fastest. This could mean that an intermediate result is being cached`.  Have I done it wrong?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112872237",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112872237",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112872237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg3MjIzNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T16:41:27Z",
    "updated_at": "2015-06-17T16:41:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am unclear here what is your goal? pandas creates a groupby object which has nice properties for returning objects with correct indices, handling multiple dtypes, many different types of input objects and so on. \n\nIf you would like to dig into the actual groupby implementation would be ok. On an apples to apples basis I am not sure what is your point though. (about sorting or otherwise).\n\nYou are trying to demonstrate a very very narrow point which IMHO doesn't have much utility.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112875496",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112875496",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112875496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg3NTQ5Ng==",
    "user": {
      "login": "d1manson",
      "id": 4244876,
      "node_id": "MDQ6VXNlcjQyNDQ4NzY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4244876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d1manson",
      "html_url": "https://github.com/d1manson",
      "followers_url": "https://api.github.com/users/d1manson/followers",
      "following_url": "https://api.github.com/users/d1manson/following{/other_user}",
      "gists_url": "https://api.github.com/users/d1manson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d1manson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d1manson/subscriptions",
      "organizations_url": "https://api.github.com/users/d1manson/orgs",
      "repos_url": "https://api.github.com/users/d1manson/repos",
      "events_url": "https://api.github.com/users/d1manson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d1manson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T16:54:26Z",
    "updated_at": "2015-06-17T16:54:26Z",
    "author_association": "NONE",
    "body": "Yes, pandas is good at all those things, and that's its main job, but I kind of hoped that it would also be getting close to optimal performance, which appears not to be the case here.\n\nMaybe perf is not really that important to most people for the groupby machinery, but I thought it was worth pointing out that there is room for improvement - even if only for some subset of cases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112875847",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112875847",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112875847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg3NTg0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T16:56:07Z",
    "updated_at": "2015-06-17T16:56:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@d1manson you are still missing the point. You are not comparing apples to apples, so how does it matter if something is faster than something that IS NOT COMPARABLE???\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112876884",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112876884",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112876884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg3Njg4NA==",
    "user": {
      "login": "ml31415",
      "id": 2386612,
      "node_id": "MDQ6VXNlcjIzODY2MTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2386612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ml31415",
      "html_url": "https://github.com/ml31415",
      "followers_url": "https://api.github.com/users/ml31415/followers",
      "following_url": "https://api.github.com/users/ml31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/ml31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ml31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ml31415/subscriptions",
      "organizations_url": "https://api.github.com/users/ml31415/orgs",
      "repos_url": "https://api.github.com/users/ml31415/repos",
      "events_url": "https://api.github.com/users/ml31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ml31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T16:58:50Z",
    "updated_at": "2015-06-17T16:58:50Z",
    "author_association": "NONE",
    "body": "The point is not about sorting, it's about the time it consumes, even if it's not necessary in many cases. The sort flag seems to be of no help here, as it probably has to be done anyways, when the algorithms expect sorted input. If you're totally happy with the current `groupby` solution, we're totally fine with that. \n\nTo me it just looks like there is some major room for speed improvements. Even if you run 3 grouped operations in a sequence, they're still several times (roughly (10+3) / 3 times) slower compared to three group operations with an algorithm not requireing sorting. How many operations do you want to chain for an apples to apples comparison? Overhead is overhead.\n\nAgain, if you're happy with the current solution, just let it be then. It's surely not an urgent issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112877278",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112877278",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112877278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg3NzI3OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T17:00:01Z",
    "updated_at": "2015-06-17T17:00:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "You are passing an indexer to the numpy code???  how is that apples-to-apples?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112877439",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112877439",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112877439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg3NzQzOQ==",
    "user": {
      "login": "ml31415",
      "id": 2386612,
      "node_id": "MDQ6VXNlcjIzODY2MTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2386612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ml31415",
      "html_url": "https://github.com/ml31415",
      "followers_url": "https://api.github.com/users/ml31415/followers",
      "following_url": "https://api.github.com/users/ml31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/ml31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ml31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ml31415/subscriptions",
      "organizations_url": "https://api.github.com/users/ml31415/orgs",
      "repos_url": "https://api.github.com/users/ml31415/repos",
      "events_url": "https://api.github.com/users/ml31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ml31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T17:00:42Z",
    "updated_at": "2015-06-17T17:00:42Z",
    "author_association": "NONE",
    "body": "Where do we pass an indexer to the numpy code?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112877493",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112877493",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112877493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg3NzQ5Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T17:00:56Z",
    "updated_at": "2015-06-17T17:00:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "why don't you post actual code here\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112877573",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112877573",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112877573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg3NzU3Mw==",
    "user": {
      "login": "ml31415",
      "id": 2386612,
      "node_id": "MDQ6VXNlcjIzODY2MTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2386612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ml31415",
      "html_url": "https://github.com/ml31415",
      "followers_url": "https://api.github.com/users/ml31415/followers",
      "following_url": "https://api.github.com/users/ml31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/ml31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ml31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ml31415/subscriptions",
      "organizations_url": "https://api.github.com/users/ml31415/orgs",
      "repos_url": "https://api.github.com/users/ml31415/repos",
      "events_url": "https://api.github.com/users/ml31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ml31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T17:01:19Z",
    "updated_at": "2015-06-17T17:01:19Z",
    "author_association": "NONE",
    "body": "Cause the link to all the code is already given in the first post.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112877936",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112877936",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112877936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg3NzkzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T17:03:02Z",
    "updated_at": "2015-06-17T17:03:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "So this is your code?\n\n```\nimport numpy as np\nfrom aggregate import aggregate \ngroup_idx = np.array([3,0,0,1,0,3,5,5,0,4])\na = np.array([13.2,3.5,3.5,-8.2,3.0,13.4,99.2,-7.1,0.0,53.7])\naggregate(group_idx, a, func='sum', fill_value=0) # see below for further examples\n```\n\nso you are pre-computing the `group_idx`, which takes ALL the time. hence this IS not comparable.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112878094",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112878094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112878094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg3ODA5NA==",
    "user": {
      "login": "ml31415",
      "id": 2386612,
      "node_id": "MDQ6VXNlcjIzODY2MTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2386612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ml31415",
      "html_url": "https://github.com/ml31415",
      "followers_url": "https://api.github.com/users/ml31415/followers",
      "following_url": "https://api.github.com/users/ml31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/ml31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ml31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ml31415/subscriptions",
      "organizations_url": "https://api.github.com/users/ml31415/orgs",
      "repos_url": "https://api.github.com/users/ml31415/repos",
      "events_url": "https://api.github.com/users/ml31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ml31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T17:03:49Z",
    "updated_at": "2015-06-17T17:03:49Z",
    "author_association": "NONE",
    "body": "`group_idx` is not computing anything, it's given. Just like the column you're grouping by.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112878550",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112878550",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112878550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg3ODU1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T17:05:39Z",
    "updated_at": "2015-06-17T17:05:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am all for performance comparisions and improvements and such. But it IS extermely important to profile and make sure you are actually comparing things properly, under different scenarios. E.g. if you have 2000 or 2 groups makes a lot of difference.\n\nSince pandas does extra work to compute an indexer, this is a very important point. This is what takes almost ALL of the time.\n\n> To me it just looks like there is some major room for speed improvements. Even if you run 3 grouped operations in a sequence, they're still several times (roughly (10+3) / 3 times) slower compared to three \n\nThis statement is not backed up by ANY evidence.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112879124",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112879124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112879124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg3OTEyNA==",
    "user": {
      "login": "ml31415",
      "id": 2386612,
      "node_id": "MDQ6VXNlcjIzODY2MTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2386612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ml31415",
      "html_url": "https://github.com/ml31415",
      "followers_url": "https://api.github.com/users/ml31415/followers",
      "following_url": "https://api.github.com/users/ml31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/ml31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ml31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ml31415/subscriptions",
      "organizations_url": "https://api.github.com/users/ml31415/orgs",
      "repos_url": "https://api.github.com/users/ml31415/repos",
      "events_url": "https://api.github.com/users/ml31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ml31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T17:08:22Z",
    "updated_at": "2015-06-17T17:08:22Z",
    "author_association": "NONE",
    "body": "See our benchmarking or run the benchmarks yourself. I had modified the benchmarks, to reuse the search index. When the index is present, C implentation and pandas are about comparable. Doing the math, you get the above estimation of the overhead.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112885610",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112885610",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112885610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg4NTYxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T17:31:44Z",
    "updated_at": "2015-06-17T17:31:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "In case I have not been clear\n\n```\nIn [165]: N = 500000\n\nIn [166]: df = DataFrame({'key' : np.random.randint(0,1000,size=N), 'value' : np.random.randn(N) })\n\nIn [169]: %timeit pd.factorize(df['key'])[0]\n100 loops, best of 3: 7.57 ms per loop\n\nIn [170]: %timeit df.groupby('key').value.sum()\n100 loops, best of 3: 10.9 ms per loop\n```\n\nIn my example. This takes 3.5 ms to actually compute the sum, NOT 10.9. 7.6 is spent computing what you are calling the `group_idx`.\n\nYou _rarely_ actually already have a group indexer done for you. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112898091",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112898091",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112898091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg5ODA5MQ==",
    "user": {
      "login": "d1manson",
      "id": 4244876,
      "node_id": "MDQ6VXNlcjQyNDQ4NzY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4244876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d1manson",
      "html_url": "https://github.com/d1manson",
      "followers_url": "https://api.github.com/users/d1manson/followers",
      "following_url": "https://api.github.com/users/d1manson/following{/other_user}",
      "gists_url": "https://api.github.com/users/d1manson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d1manson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d1manson/subscriptions",
      "organizations_url": "https://api.github.com/users/d1manson/orgs",
      "repos_url": "https://api.github.com/users/d1manson/repos",
      "events_url": "https://api.github.com/users/d1manson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d1manson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T18:07:53Z",
    "updated_at": "2015-06-17T18:11:39Z",
    "author_association": "NONE",
    "body": "Yes. That's true.  I didn't get what you meant initially-I knew there was overhead somewhere but it took a while to realize exactly why it has to be there. \n\nAlthough, why is it still true if you use the index for grouping [**edit:** using int64index copy=False]:\n\n```\nIn: df = pd.DataFrame({'B' : np.random.randn(500000) },\n                 index=pd.Int64Index(np.random.randint(0,1000,size=500000),copy=False)) \nIn: df.index\nOut: Int64Index([755, 940, ...], dtype='int64')\n# index already exists at this point, so there should be no need to sort\nIn: g = df.groupby(level=0) \nIn: %timeit g.sum()\nparaphrasing: \"~9x slower on first run, 2ms best\"\nIn: g = df.groupby(level=0, sort=False) \nIn: %timeit g.sum()\nparaphrasing: \"~7x slower on first run, 2ms best\"\n```\n\nOk, so interestingly the `sort` arg is doing something here, but it's still not optimal\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112901440",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112901440",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112901440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjkwMTQ0MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T18:15:18Z",
    "updated_at": "2015-06-17T18:15:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "It is not set up to take an indexer directly ATM. because you can simply use a groupby object, never a need for this. It would be a trivial change to allow an already factorized grouper if that was really wanted.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112902941",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112902941",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112902941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjkwMjk0MQ==",
    "user": {
      "login": "d1manson",
      "id": 4244876,
      "node_id": "MDQ6VXNlcjQyNDQ4NzY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4244876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d1manson",
      "html_url": "https://github.com/d1manson",
      "followers_url": "https://api.github.com/users/d1manson/followers",
      "following_url": "https://api.github.com/users/d1manson/following{/other_user}",
      "gists_url": "https://api.github.com/users/d1manson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d1manson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d1manson/subscriptions",
      "organizations_url": "https://api.github.com/users/d1manson/orgs",
      "repos_url": "https://api.github.com/users/d1manson/repos",
      "events_url": "https://api.github.com/users/d1manson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d1manson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T18:21:33Z",
    "updated_at": "2015-06-17T18:21:33Z",
    "author_association": "NONE",
    "body": "I don't get what you mean by \"you can simply use a groupby object\".\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112907886",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112907886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112907886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjkwNzg4Ng==",
    "user": {
      "login": "d1manson",
      "id": 4244876,
      "node_id": "MDQ6VXNlcjQyNDQ4NzY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4244876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d1manson",
      "html_url": "https://github.com/d1manson",
      "followers_url": "https://api.github.com/users/d1manson/followers",
      "following_url": "https://api.github.com/users/d1manson/following{/other_user}",
      "gists_url": "https://api.github.com/users/d1manson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d1manson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d1manson/subscriptions",
      "organizations_url": "https://api.github.com/users/d1manson/orgs",
      "repos_url": "https://api.github.com/users/d1manson/repos",
      "events_url": "https://api.github.com/users/d1manson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d1manson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T18:34:09Z",
    "updated_at": "2015-06-17T18:34:27Z",
    "author_association": "NONE",
    "body": "So are you saying that whenever you use `groupby` with a `level` rather than a column, you get an unnecessary factorize operation which results in a ~7-9x perf penalty?  If so, then I feel like this issue is a reasonable one to raise.\n\nNote that the `aggregate` function we have implemented supports multi-dimensional indexing, which is equivalent here to grouping by multiple levels, and it's dealt with using `numpy.ravel_multi_index`...although this may not be quite so simple for pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112910410",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112910410",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112910410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjkxMDQxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T18:42:24Z",
    "updated_at": "2015-06-17T18:42:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "no, what I mean is that I have never seen an actual indexer passed, you are passing a column or a level or whatever\n\n```\nIn [177]: df = DataFrame({'key' : np.random.randint(0,3,size=10), 'value' : np.random.randn(10) })\n\nIn [178]: df\nOut[178]: \n   key     value\n0    2  1.541759\n1    1 -1.312925\n2    1 -1.108687\n3    2  0.208367\n4    0  0.436229\n5    2 -0.404643\n6    2 -0.125485\n7    1 -0.422631\n8    1  0.593898\n9    2  1.650386\n\nIn [179]: g = df.groupby('key')\n\nIn [180]: g.groups\nOut[180]: {0: [4], 1: [1, 2, 7, 8], 2: [0, 3, 5, 6, 9]}\n```\n\nI will reiterate you rarely have an actual indexer even in a column. E.g. say you are grouping on a date or an object or whatever. (and don't even get started when you have multiple-indexers). For an actual conforming `int64` index you can prob take some shortcuts I suppose. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112911236",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112911236",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112911236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjkxMTIzNg==",
    "user": {
      "login": "d1manson",
      "id": 4244876,
      "node_id": "MDQ6VXNlcjQyNDQ4NzY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4244876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d1manson",
      "html_url": "https://github.com/d1manson",
      "followers_url": "https://api.github.com/users/d1manson/followers",
      "following_url": "https://api.github.com/users/d1manson/following{/other_user}",
      "gists_url": "https://api.github.com/users/d1manson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d1manson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d1manson/subscriptions",
      "organizations_url": "https://api.github.com/users/d1manson/orgs",
      "repos_url": "https://api.github.com/users/d1manson/repos",
      "events_url": "https://api.github.com/users/d1manson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d1manson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T18:46:06Z",
    "updated_at": "2015-06-17T18:46:14Z",
    "author_association": "NONE",
    "body": "but  `groupby` accepts `level` as an argument, so surely there is an expectation that people do want to group by things that already have an index?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112911800",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112911800",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112911800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjkxMTgwMA==",
    "user": {
      "login": "d1manson",
      "id": 4244876,
      "node_id": "MDQ6VXNlcjQyNDQ4NzY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4244876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d1manson",
      "html_url": "https://github.com/d1manson",
      "followers_url": "https://api.github.com/users/d1manson/followers",
      "following_url": "https://api.github.com/users/d1manson/following{/other_user}",
      "gists_url": "https://api.github.com/users/d1manson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d1manson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d1manson/subscriptions",
      "organizations_url": "https://api.github.com/users/d1manson/orgs",
      "repos_url": "https://api.github.com/users/d1manson/repos",
      "events_url": "https://api.github.com/users/d1manson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d1manson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T18:48:47Z",
    "updated_at": "2015-06-17T18:48:47Z",
    "author_association": "NONE",
    "body": "perhaps I am missing something: at what point is the indexer actually built/cached?  In my example I had the comment `# index already exists at this point, so there should be no need to sort`, but perhaps the indexer wasn't cached so had to be recreated for the grouping operation?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112915954",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112915954",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112915954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjkxNTk1NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T19:06:53Z",
    "updated_at": "2015-06-17T19:06:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, I want to have actual group labels for what I am doing which are not necessarily equal (in fact rarely) equal to the actual values that I am grouping by. In numpy I suppose this doesn't matter at all. But I care about the labels of the resultant index. Doing simple numpy operations is pretty trivial. Doing the same operations and propogating labels is not. That's why the groupby objects exist.\n\nSo yes you are missing the difference between all of the work a user has to do to have proper label mapping in numpy vs. a nice API and very close performance-wise pandas code (which handle dtypes and nan etc etc).\n\nI certainly welcome performance comparisons and criticism, however, again I will reiterate that you are not providing the same API so you are not comparing the same things.\n\nHave a look at this issue, where a similar topic was discussed https://github.com/pydata/pandas/issues/8881\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112925662",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10375#issuecomment-112925662",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10375",
    "id": 112925662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjkyNTY2Mg==",
    "user": {
      "login": "d1manson",
      "id": 4244876,
      "node_id": "MDQ6VXNlcjQyNDQ4NzY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4244876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d1manson",
      "html_url": "https://github.com/d1manson",
      "followers_url": "https://api.github.com/users/d1manson/followers",
      "following_url": "https://api.github.com/users/d1manson/following{/other_user}",
      "gists_url": "https://api.github.com/users/d1manson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d1manson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d1manson/subscriptions",
      "organizations_url": "https://api.github.com/users/d1manson/orgs",
      "repos_url": "https://api.github.com/users/d1manson/repos",
      "events_url": "https://api.github.com/users/d1manson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d1manson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T19:45:04Z",
    "updated_at": "2015-06-17T19:49:46Z",
    "author_association": "NONE",
    "body": "I'm still confused. I get the benefit of pandas as I use it often in\nroughly the way it is intended. But the particular point we are discussing\nhere is groupby using levels, where all the index values and labels already\nexist. So all I'm saying is that there's no need to recompute them, if you\ncare about perf.\n"
  }
]
