[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/148868061",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11349#issuecomment-148868061",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11349",
    "id": 148868061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODg2ODA2MQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-17T00:01:39Z",
    "updated_at": "2015-10-17T00:02:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "As outlined in the [docs](http://pandas.pydata.org/pandas-docs/version/0.16.2/timedeltas.html#frequency-conversion)  the way to do conversions is via `astype` (which truncates units) or by dividing by the appropriate delta (which doesn't)\n\n``` python\nIn [8]: s.astype('m8[h]')\nOut[8]: \n0     1824\n1     -360\n2      552\n3     1824\n4     1824\n5     1824\n6     1824\n7     1392\n8     8400\n9      360\n10    1824\n11    -384\nName: 1, dtype: float64\n\nIn [9]: s / np.timedelta64(1, 'h')\nOut[9]: \n0     1824\n1     -360\n2      552\n3     1824\n4     1824\n5     1824\n6     1824\n7     1392\n8     8400\n9      360\n10    1824\n11    -384\nName: 1, dtype: float64\n```\n\nYou're seeing that result with `apply` because a single element is boxed in a `Timedelta` when accessed (which has extra properties), but the underlying storage is a `np.timedelta64` array, which doesn't.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/148923849",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11349#issuecomment-148923849",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11349",
    "id": 148923849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODkyMzg0OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-17T15:21:14Z",
    "updated_at": "2015-10-17T15:21:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [5]: s = Series(pd.timedelta_range('1 day 1 s',periods=5,freq='h'))\n\nIn [6]: s\nOut[6]: \n0   1 days 00:00:01\n1   1 days 01:00:01\n2   1 days 02:00:01\n3   1 days 03:00:01\n4   1 days 04:00:01\ndtype: timedelta64[ns]\n\nIn [7]: s.dt.components\nOut[7]: \n   days  hours  minutes  seconds  milliseconds  microseconds  nanoseconds\n0     1      0        0        1             0             0            0\n1     1      1        0        1             0             0            0\n2     1      2        0        1             0             0            0\n3     1      3        0        1             0             0            0\n4     1      4        0        1             0             0            0\n\nIn [8]: s.dt.\ns.dt.components      s.dt.days            s.dt.freq            s.dt.microseconds    s.dt.nanoseconds     s.dt.seconds         s.dt.to_pytimedelta  s.dt.total_seconds   \n```\n\n@amelio-vazquez-reina the reason we don't support `hour/minutes` is for compatibility to `datetime.timedelta` and to make it slightly less confusing.\n\n`datetime.timedelta` give you `days,seconds,microseconds` which are the TOTAL amount (which IMHO is actually confusing, but that is what the API is).\n\n`.components` will give you the 'displayed' values (e.g. the components of the timedeltas), which you can then access.\n\nso \n\n`s.apply(....)` should actually box these into `Timedelta` objects (and not just leave them as `np.timedelta64`), as we do similarly for `.apply` with a `datetime64[ns]`\n\n```\nIn [9]: s.apply(lambda x: type(x))\nOut[9]: \n0    <type 'numpy.timedelta64'>\n1    <type 'numpy.timedelta64'>\n2    <type 'numpy.timedelta64'>\n3    <type 'numpy.timedelta64'>\n4    <type 'numpy.timedelta64'>\ndtype: object\n\nIn [10]: Series(pd.date_range('20130101',periods=3)).apply(lambda x: type(x))\nOut[10]: \n0    <class 'pandas.tslib.Timestamp'>\n1    <class 'pandas.tslib.Timestamp'>\n2    <class 'pandas.tslib.Timestamp'>\ndtype: object\n```\n\nSo this is a bug [here](https://github.com/pydata/pandas/blob/master/pandas/core/series.py#L2157)\nshould be something like what is happening in `__iter__` where the `needs_i8_conversion` and `i8_boxer` is called. I am going to repurpose this issue.\n\npull-requests welcome!\n"
  }
]
