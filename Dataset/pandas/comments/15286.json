[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276770956",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15286#issuecomment-276770956",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15286",
    "id": 276770956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njc3MDk1Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T20:22:54Z",
    "updated_at": "2017-02-01T20:22:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah this is actually raising here.\r\n\r\n```\r\nIn [4]: a = np.array(range(3))\r\n   ...: a.setflags(write=False)\r\n   ...: \r\n\r\nIn [5]: pd.factorize(a)\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-5-11e8991352c5> in <module>()\r\n----> 1 pd.factorize(a)\r\n\r\n/Users/jreback/pandas/pandas/core/algorithms.py in factorize(values, sort, order, na_sentinel, size_hint)\r\n    351     uniques = vec_klass()\r\n    352     check_nulls = not is_integer_dtype(values)\r\n--> 353     labels = table.get_labels(vals, uniques, 0, na_sentinel, check_nulls)\r\n    354 \r\n    355     labels = _ensure_platform_int(labels)\r\n\r\n/Users/jreback/pandas/pandas/src/hashtable_class_helper.pxi in pandas.hashtable.Int64HashTable.get_labels (pandas/hashtable.c:15207)()\r\n    848 \r\n    849     @cython.boundscheck(False)\r\n--> 850     def get_labels(self, int64_t[:] values, Int64Vector uniques,\r\n    851                    Py_ssize_t count_prior, Py_ssize_t na_sentinel,\r\n    852                    bint check_null=True):\r\n\r\n/Users/jreback/pandas/pandas/hashtable.cpython-35m-darwin.so in View.MemoryView.memoryview_cwrapper (pandas/hashtable.c:40659)()\r\n\r\n/Users/jreback/pandas/pandas/hashtable.cpython-35m-darwin.so in View.MemoryView.memoryview.__cinit__ (pandas/hashtable.c:36894)()\r\n\r\nValueError: buffer source array is read-only\r\n> /Users/jreback/pandas/stringsource(345)View.MemoryView.memoryview.__cinit__ (pandas/hashtable.c:36894)()\r\n\r\n```\r\n\r\nyou can fix the same way as here, where we call a signature w/o memoryviews (which \r\nhttps://github.com/pandas-dev/pandas/blob/master/pandas/src/algos_take_helper.pxi.in#L172\r\n\r\nis a patch that we have done in the past: https://github.com/pandas-dev/pandas/pull/10070\r\n\r\nand here's the ultimate cause: https://mail.python.org/pipermail/cython-devel/2013-February/003384.html\r\n\r\nI would actually like to have a better method of fixing this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276771352",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15286#issuecomment-276771352",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15286",
    "id": 276771352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njc3MTM1Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T20:24:33Z",
    "updated_at": "2017-02-01T20:24:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @wesm "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276793236",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15286#issuecomment-276793236",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15286",
    "id": 276793236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njc5MzIzNg==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T21:47:24Z",
    "updated_at": "2017-02-01T21:47:24Z",
    "author_association": "MEMBER",
    "body": "Does this still raise if you use `ndarray` instead of memoryview?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276796098",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15286#issuecomment-276796098",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15286",
    "id": 276796098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njc5NjA5OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T21:58:05Z",
    "updated_at": "2017-02-01T21:58:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "no it works if we use ``ndarray`` (in the signature). That's what we did in take, made the signature ndarray, the then dispatch inside ( to 2 different routines). IIRC it *does* make a perf difference."
  }
]
