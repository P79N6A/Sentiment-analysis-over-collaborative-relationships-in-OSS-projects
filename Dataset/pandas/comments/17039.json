[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316740441",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17039#issuecomment-316740441",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17039",
    "id": 316740441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc0MDQ0MQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T15:30:17Z",
    "updated_at": "2017-07-20T15:30:17Z",
    "author_association": "MEMBER",
    "body": "Admittedly, this is an unusual use case.  That being said, your point about selecting duplicate labels despite the non-transitivity makes sense.  A PR is welcome to patch this!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316781039",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17039#issuecomment-316781039",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17039",
    "id": 316781039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc4MTAzOQ==",
    "user": {
      "login": "adshieh",
      "id": 1037260,
      "node_id": "MDQ6VXNlcjEwMzcyNjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1037260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adshieh",
      "html_url": "https://github.com/adshieh",
      "followers_url": "https://api.github.com/users/adshieh/followers",
      "following_url": "https://api.github.com/users/adshieh/following{/other_user}",
      "gists_url": "https://api.github.com/users/adshieh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adshieh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adshieh/subscriptions",
      "organizations_url": "https://api.github.com/users/adshieh/orgs",
      "repos_url": "https://api.github.com/users/adshieh/repos",
      "events_url": "https://api.github.com/users/adshieh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adshieh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T17:52:54Z",
    "updated_at": "2017-07-20T20:12:16Z",
    "author_association": "NONE",
    "body": "I narrowed down the issue to the ObjectEngine in the Index not checking for duplicate labels because the values are unique by `a1 != a2`.\r\n\r\nIf I create an Index with non-unique values, then the selection of duplicate labels works as expected.\r\n```python\r\nassert pd.Index([a1, a2, a2]).get_loc('a') == slice(0, 3) # string selects all KVs\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316781883",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17039#issuecomment-316781883",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17039",
    "id": 316781883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc4MTg4Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T17:56:00Z",
    "updated_at": "2017-07-20T17:56:00Z",
    "author_association": "MEMBER",
    "body": "Interesting...can you share here the location of the code you're talking about (i.e. the specific logic that you found was causing the issue) ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316783960",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17039#issuecomment-316783960",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17039",
    "id": 316783960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc4Mzk2MA==",
    "user": {
      "login": "adshieh",
      "id": 1037260,
      "node_id": "MDQ6VXNlcjEwMzcyNjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1037260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adshieh",
      "html_url": "https://github.com/adshieh",
      "followers_url": "https://api.github.com/users/adshieh/followers",
      "following_url": "https://api.github.com/users/adshieh/following{/other_user}",
      "gists_url": "https://api.github.com/users/adshieh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adshieh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adshieh/subscriptions",
      "organizations_url": "https://api.github.com/users/adshieh/orgs",
      "repos_url": "https://api.github.com/users/adshieh/repos",
      "events_url": "https://api.github.com/users/adshieh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adshieh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T18:03:23Z",
    "updated_at": "2017-07-20T18:03:23Z",
    "author_association": "NONE",
    "body": "This [line](https://github.com/pandas-dev/pandas/blob/master/pandas/_libs/index.pyx#L148) checks for uniqueness to select duplicate labels, or proceeds to the hash table."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316785693",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17039#issuecomment-316785693",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17039",
    "id": 316785693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc4NTY5Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T18:10:00Z",
    "updated_at": "2017-07-20T18:10:17Z",
    "author_association": "MEMBER",
    "body": "Awesome.  I understand why the code does what it does, and although I agree that for \"correctness,\" it should check for all possible matches to the key, I'm wary of the performance impact if we were to simply just call `_get_loc_duplicates` every time just to account for a special case as yours.\r\n\r\n@chris-b1 @jreback : your thoughts?\r\n\r\nOut of curiosity, what was the use-case behind this example?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316799874",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17039#issuecomment-316799874",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17039",
    "id": 316799874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc5OTg3NA==",
    "user": {
      "login": "adshieh",
      "id": 1037260,
      "node_id": "MDQ6VXNlcjEwMzcyNjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1037260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adshieh",
      "html_url": "https://github.com/adshieh",
      "followers_url": "https://api.github.com/users/adshieh/followers",
      "following_url": "https://api.github.com/users/adshieh/following{/other_user}",
      "gists_url": "https://api.github.com/users/adshieh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adshieh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adshieh/subscriptions",
      "organizations_url": "https://api.github.com/users/adshieh/orgs",
      "repos_url": "https://api.github.com/users/adshieh/repos",
      "events_url": "https://api.github.com/users/adshieh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adshieh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T19:04:29Z",
    "updated_at": "2017-07-20T19:34:41Z",
    "author_association": "NONE",
    "body": "I don't see an easy fix either, since there's no way for the Index to know that its values will be compared in a way that makes them non-unique short of attaching a flag to override the uniqueness check. My use case is storing the nodes of a computation graph in the columns of a DataFrame to associate them with the arrays of values they compute. I want the nodes to compare to each other based on metadata about the computations they perform, but I also want to be able to tag the nodes with strings for easier access in the DataFrame."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316811101",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17039#issuecomment-316811101",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17039",
    "id": 316811101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjgxMTEwMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T19:50:22Z",
    "updated_at": "2017-07-20T19:50:34Z",
    "author_association": "MEMBER",
    "body": "I see.  So you're really trying to index based on an attribute of these nodes rather than the nodes themselves.  That's a little different from what current indexing does and would therefore be an enhancement (potentially) on what we currently do.\r\n\r\nActually, it occurs to me that maybe this wouldn't be so complicated.  Perhaps we could just pass in a `lambda` function to `get_loc` i.e.:\r\n\r\n~~~python\r\nidx.get_loc(lambda x: x == 'a')\r\n~~~"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316816784",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17039#issuecomment-316816784",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17039",
    "id": 316816784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjgxNjc4NA==",
    "user": {
      "login": "adshieh",
      "id": 1037260,
      "node_id": "MDQ6VXNlcjEwMzcyNjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1037260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adshieh",
      "html_url": "https://github.com/adshieh",
      "followers_url": "https://api.github.com/users/adshieh/followers",
      "following_url": "https://api.github.com/users/adshieh/following{/other_user}",
      "gists_url": "https://api.github.com/users/adshieh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adshieh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adshieh/subscriptions",
      "organizations_url": "https://api.github.com/users/adshieh/orgs",
      "repos_url": "https://api.github.com/users/adshieh/repos",
      "events_url": "https://api.github.com/users/adshieh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adshieh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T20:13:09Z",
    "updated_at": "2017-07-20T20:52:18Z",
    "author_association": "NONE",
    "body": "Support for callables would eliminate the need to make the nodes compare to strings at all.\r\n```python\r\nidx.get_loc(lambda x: x.key == 'a')\r\n```\r\nHowever, callables would be overloaded on DataFrames, where the argument refers to the DataFrame rather than the index elements."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316837790",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17039#issuecomment-316837790",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17039",
    "id": 316837790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjgzNzc5MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T21:39:30Z",
    "updated_at": "2017-07-20T21:39:30Z",
    "author_association": "MEMBER",
    "body": "> However, callables would be overloaded on DataFrames, where the argument refers to the DataFrame rather than the index elements.\r\n\r\nI'm not sure I follow you here.\r\n\r\nIn any case, the implementation of the callable would be the responsibility of the user."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316841345",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17039#issuecomment-316841345",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17039",
    "id": 316841345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjg0MTM0NQ==",
    "user": {
      "login": "adshieh",
      "id": 1037260,
      "node_id": "MDQ6VXNlcjEwMzcyNjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1037260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adshieh",
      "html_url": "https://github.com/adshieh",
      "followers_url": "https://api.github.com/users/adshieh/followers",
      "following_url": "https://api.github.com/users/adshieh/following{/other_user}",
      "gists_url": "https://api.github.com/users/adshieh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adshieh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adshieh/subscriptions",
      "organizations_url": "https://api.github.com/users/adshieh/orgs",
      "repos_url": "https://api.github.com/users/adshieh/repos",
      "events_url": "https://api.github.com/users/adshieh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adshieh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T21:55:59Z",
    "updated_at": "2017-07-20T21:55:59Z",
    "author_association": "NONE",
    "body": "It wouldn't be possible to select columns of a DataFrame with a callable through `df.__getitem__` or `df.loc` in the same way as an Index through `idx.get_loc`, since `x` in `df[lambda x: x.key == 'a']` would refer to `df` rather than an element of `df.columns`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316842870",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17039#issuecomment-316842870",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17039",
    "id": 316842870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjg0Mjg3MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T22:02:53Z",
    "updated_at": "2017-07-20T22:02:53Z",
    "author_association": "MEMBER",
    "body": "True, but you can pre-select with `df.columns`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316966281",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17039#issuecomment-316966281",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17039",
    "id": 316966281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjk2NjI4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-21T10:25:59Z",
    "updated_at": "2017-07-21T10:25:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is not supported, you are violating hashing-equality constraints. Using custom things which are not strings in an Index is non-performant, opaque and non-idiomatic.\r\n\r\nWe already support callables in the cond generation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#selection-by-callable"
  }
]
