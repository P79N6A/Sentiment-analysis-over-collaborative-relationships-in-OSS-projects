[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428432689",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23067#issuecomment-428432689",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23067",
    "id": 428432689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQzMjY4OQ==",
    "user": {
      "login": "JustinZhengBC",
      "id": 29615021,
      "node_id": "MDQ6VXNlcjI5NjE1MDIx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/29615021?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinZhengBC",
      "html_url": "https://github.com/JustinZhengBC",
      "followers_url": "https://api.github.com/users/JustinZhengBC/followers",
      "following_url": "https://api.github.com/users/JustinZhengBC/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinZhengBC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinZhengBC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinZhengBC/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinZhengBC/orgs",
      "repos_url": "https://api.github.com/users/JustinZhengBC/repos",
      "events_url": "https://api.github.com/users/JustinZhengBC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinZhengBC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T04:19:51Z",
    "updated_at": "2018-10-10T04:19:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "This appears to be intended behaviour, as the description for skiprows at the [read_csv](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html) documentation says assigning a number to skiprows causes it to skip that many lines \"at the start of the file.\" There is also at least one test that demonstrates this:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/7829ad3290dc6894d24c1c853ffc4dabef50294a/pandas/tests/io/parser/comment.py#L57-L69"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428434240",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23067#issuecomment-428434240",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23067",
    "id": 428434240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQzNDI0MA==",
    "user": {
      "login": "roniemartinez",
      "id": 2573537,
      "node_id": "MDQ6VXNlcjI1NzM1Mzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2573537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roniemartinez",
      "html_url": "https://github.com/roniemartinez",
      "followers_url": "https://api.github.com/users/roniemartinez/followers",
      "following_url": "https://api.github.com/users/roniemartinez/following{/other_user}",
      "gists_url": "https://api.github.com/users/roniemartinez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roniemartinez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roniemartinez/subscriptions",
      "organizations_url": "https://api.github.com/users/roniemartinez/orgs",
      "repos_url": "https://api.github.com/users/roniemartinez/repos",
      "events_url": "https://api.github.com/users/roniemartinez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roniemartinez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T04:30:35Z",
    "updated_at": "2018-10-10T04:30:35Z",
    "author_association": "NONE",
    "body": "@JustinZhengBC Thanks for referencing the test.\r\n\r\nWill there be an option to ignore the **comment** lines from the **skiprows**? The use case is to work with files with arbitrary count of comments and to ignore the first **X** non-comment lines.\r\n\r\nThanks!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428442473",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23067#issuecomment-428442473",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23067",
    "id": 428442473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQ0MjQ3Mw==",
    "user": {
      "login": "JustinZhengBC",
      "id": 29615021,
      "node_id": "MDQ6VXNlcjI5NjE1MDIx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/29615021?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinZhengBC",
      "html_url": "https://github.com/JustinZhengBC",
      "followers_url": "https://api.github.com/users/JustinZhengBC/followers",
      "following_url": "https://api.github.com/users/JustinZhengBC/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinZhengBC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinZhengBC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinZhengBC/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinZhengBC/orgs",
      "repos_url": "https://api.github.com/users/JustinZhengBC/repos",
      "events_url": "https://api.github.com/users/JustinZhengBC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinZhengBC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T05:27:44Z",
    "updated_at": "2018-10-10T05:27:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "If the data is clean, then you could always do ```df = pd.read_csv(URL, comment='#')[n:]``` to skip the first n rows. That doesn't necessarily work in this case due to the rows having an uneven number of elements, but that's a whole other issue."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428470124",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23067#issuecomment-428470124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23067",
    "id": 428470124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQ3MDEyNA==",
    "user": {
      "login": "roniemartinez",
      "id": 2573537,
      "node_id": "MDQ6VXNlcjI1NzM1Mzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2573537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roniemartinez",
      "html_url": "https://github.com/roniemartinez",
      "followers_url": "https://api.github.com/users/roniemartinez/followers",
      "following_url": "https://api.github.com/users/roniemartinez/following{/other_user}",
      "gists_url": "https://api.github.com/users/roniemartinez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roniemartinez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roniemartinez/subscriptions",
      "organizations_url": "https://api.github.com/users/roniemartinez/orgs",
      "repos_url": "https://api.github.com/users/roniemartinez/repos",
      "events_url": "https://api.github.com/users/roniemartinez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roniemartinez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T07:39:46Z",
    "updated_at": "2018-10-10T07:39:46Z",
    "author_association": "NONE",
    "body": "@JustinZhengBC is it possible to move this to feature requests?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428816290",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23067#issuecomment-428816290",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23067",
    "id": 428816290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODgxNjI5MA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-11T04:24:51Z",
    "updated_at": "2018-10-11T04:24:51Z",
    "author_association": "MEMBER",
    "body": "Just an FYI this is documented behavior:\r\n\r\n>  fully commented lines are ignored by the parameter header but not by skiprows\r\n\r\nDefinitely a corner case here but I don't have anything against the feature, given we already account for it with the `header` parameter. Investigation and PRs welcome"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/432589357",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23067#issuecomment-432589357",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23067",
    "id": 432589357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjU4OTM1Nw==",
    "user": {
      "login": "vadella",
      "id": 2189996,
      "node_id": "MDQ6VXNlcjIxODk5OTY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2189996?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vadella",
      "html_url": "https://github.com/vadella",
      "followers_url": "https://api.github.com/users/vadella/followers",
      "following_url": "https://api.github.com/users/vadella/following{/other_user}",
      "gists_url": "https://api.github.com/users/vadella/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vadella/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vadella/subscriptions",
      "organizations_url": "https://api.github.com/users/vadella/orgs",
      "repos_url": "https://api.github.com/users/vadella/repos",
      "events_url": "https://api.github.com/users/vadella/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vadella/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-24T09:45:17Z",
    "updated_at": "2018-10-24T09:45:17Z",
    "author_association": "NONE",
    "body": "\r\n> @JustinZhengBC Thanks for referencing the test.\r\n> \r\n> Will there be an option to ignore the **comment** lines from the **skiprows**? The use case is to work with files with arbitrary count of comments and to ignore the first **X** non-comment lines.\r\n\r\nA possible workaround is something like this:\r\n\r\n```\r\nfrom io import StringIO\r\ndef strip_comments(input_file, comment=\"#\"):\r\n    intermediary_file = StringIO()\r\n    intermediary_file.writelines(line for line in input_file if line[0] != comment)\r\n    intermediary_file.seek(0)\r\n    return intermediary_file\r\n\r\n\r\ndata = \"\"\"# empty \r\n random line \r\n # second empty line \r\n1,2,3 \r\nA,B,C \r\n1,2.,4. \r\n5.,NaN,10.0 \r\n\"\"\" \r\nwith StringIO(data) as input_file, strip_comments(input_file) as intermediary_file:\r\n    pd.read_csv(intermediary_file, skiprows=2, sep=\",\")\r\n```\r\n\r\nreturns\r\n\r\n```\r\n\tA\tB\tC \r\n0\t1.0\t2.0\t4.0\r\n1\t5.0\t\t10.0\r\n```\r\n\r\n\r\n"
  }
]
