[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384603995",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20828#issuecomment-384603995",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20828",
    "id": 384603995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDYwMzk5NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T11:19:03Z",
    "updated_at": "2018-04-26T11:19:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "No comment on why the initial `read_excel` read in floats instead of strings; I don't know if that's behaving correctly or not (maybe @chris-b1 knows).\r\n\r\nAs for the rest, it's three problems, any of which would fix things\r\n\r\n1. Lack of integer NA, which forces the float in the first place\r\n2. Lack of a dedicated string type, so `df.fillna('99999')` fills the missing values. But we use object dtype, which can contain a mix of strings and floats\r\n3. (Maybe) some strangeness in the printing.\r\n\r\n```python\r\nIn [15]: df.fillna(\"999999\")\r\nOut[15]:\r\n        A\r\n0   20099\r\n1  999999\r\n\r\nIn [16]: df.values\r\nOut[16]:\r\narray([[ 20099.],\r\n       [    nan]])\r\n```\r\n\r\nWe have issues for the first two. Not sure about the third. I'm not sure if `Out[15]` should print that like an integer or not. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384647075",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20828#issuecomment-384647075",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20828",
    "id": 384647075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY0NzA3NQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T13:47:56Z",
    "updated_at": "2018-04-26T13:47:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Same issue as #11331, but that got closed so we can use this one.  \r\n\r\nIn parsing CSV unless told otherwise we always try to parse as numeric - that behavior carried over to Excel parser.  I agree that by default it would make sense to respect the Excel metadata and interpret, e.g.,  `'020099` as text.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384649641",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20828#issuecomment-384649641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20828",
    "id": 384649641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY0OTY0MQ==",
    "user": {
      "login": "shabie",
      "id": 30535146,
      "node_id": "MDQ6VXNlcjMwNTM1MTQ2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/30535146?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shabie",
      "html_url": "https://github.com/shabie",
      "followers_url": "https://api.github.com/users/shabie/followers",
      "following_url": "https://api.github.com/users/shabie/following{/other_user}",
      "gists_url": "https://api.github.com/users/shabie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shabie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shabie/subscriptions",
      "organizations_url": "https://api.github.com/users/shabie/orgs",
      "repos_url": "https://api.github.com/users/shabie/repos",
      "events_url": "https://api.github.com/users/shabie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shabie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T13:55:27Z",
    "updated_at": "2018-04-26T13:55:27Z",
    "author_association": "NONE",
    "body": "@chris-b1 I think that'd be a very helpful and reliably sensible addition when reading excel files. \r\n\r\nI'd love to contribute (if I can manage to do that)..."
  }
]
