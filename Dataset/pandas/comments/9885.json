[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/93717054",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9885#issuecomment-93717054",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9885",
    "id": 93717054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzNzE3MDU0",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-16T11:59:07Z",
    "updated_at": "2015-04-16T11:59:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "There isn't an obvious answer to me for this one.\n\nAlso keep in mind that we have `reindex_like`. That one isn't clear either, but they should probably have the same behavior? Maybe?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/93883032",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9885#issuecomment-93883032",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9885",
    "id": 93883032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzODgzMDMy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T02:58:03Z",
    "updated_at": "2015-04-17T02:58:03Z",
    "author_association": "MEMBER",
    "body": "I think `reindex` and `reindex_like` should definitely have the same behavior.\n\nWe do technically associate the name of an index with the index itself, but from a practical perspective the name of an index is also strongly associated with the dataframe that contains it (somewhat similarly to the case for `Series.name` and `DataFrame.columns`). In my opinion, it is a little surprising (even if it happens rarely) for reindexing to rename existing indexes -- it makes it harder to understand how the data was transformed. So my vote is for reindexing to _never_ change index names.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/331546411",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9885#issuecomment-331546411",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9885",
    "id": 331546411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTU0NjQxMQ==",
    "user": {
      "login": "attack68",
      "id": 24256554,
      "node_id": "MDQ6VXNlcjI0MjU2NTU0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/24256554?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/attack68",
      "html_url": "https://github.com/attack68",
      "followers_url": "https://api.github.com/users/attack68/followers",
      "following_url": "https://api.github.com/users/attack68/following{/other_user}",
      "gists_url": "https://api.github.com/users/attack68/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/attack68/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/attack68/subscriptions",
      "organizations_url": "https://api.github.com/users/attack68/orgs",
      "repos_url": "https://api.github.com/users/attack68/repos",
      "events_url": "https://api.github.com/users/attack68/events{/privacy}",
      "received_events_url": "https://api.github.com/users/attack68/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-22T19:59:28Z",
    "updated_at": "2017-09-22T19:59:28Z",
    "author_association": "NONE",
    "body": "I'm developing an application which uses this feature. I came across page researching a bug in my application. I have used re_index to readjust on the fly to a function local Index variable which I did not bother to assign a name to. Reindex therefore dropped my index name and it broke down the line.\r\n\r\nI would suggest that the index name is preserved if:\r\n> the reindex argument is a list, ndarray or Index which does not have a name,\r\n\r\nand the index name is renamed if:\r\n> the reindex argument is an Index which has a specific name.\r\n\r\nPerhaps an optional 'name_transform=None' argument could be added with the default behaviour as above and further 'drop' or 'keep' options to explicitly define the behaviour.\r\n"
  }
]
