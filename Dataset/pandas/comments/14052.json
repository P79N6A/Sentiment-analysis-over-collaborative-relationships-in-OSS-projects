[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/242238205",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-242238205",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 242238205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjIzODIwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-24T23:20:52Z",
    "updated_at": "2016-08-24T23:23:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "When you so `.values` on a `DataFrame`, you get an object which can hold all of the data. This _should_ always be a `numpy-array`, which is `object` type when it cannot hold the data-type directly (as it is for _multiple_ tz-aware columns, EVEN IF THEY ARE THE SAME tz). However for a single column, we return the underlying data, which is implemented with a `DatetimeIndex`. I suppose this is a bit inconsistent, but is not likely to change in the current implementation of pandas (in pandas 2.0 things will be more consistent).\n\n```\nIn [88]: df[['A','B']].dtypes\nOut[88]: \nA    datetime64[ns, UTC]\nB    datetime64[ns, UTC]\ndtype: object\n```\n\nHere you are getting the actual type\n\n```\nIn [90]: df[['A']].values\nOut[90]: \nDatetimeIndex(['2010-01-01', '2010-01-02', '2010-01-03', '2010-01-04', '2010-01-05', '2010-01-06', '2010-01-07', '2010-01-08', '2010-01-09', '2010-01-10',\n               ...\n               '2010-12-23', '2010-12-24', '2010-12-25', '2010-12-26', '2010-12-27', '2010-12-28', '2010-12-29', '2010-12-30', '2010-12-31', '2011-01-01'],\n              dtype='datetime64[ns, UTC]', length=366, freq='D')\n\n# this is a combination of the SAME tz-aware series as object dtype\nIn [91]: df[['A', 'B']].values\nOut[91]: \narray([[Timestamp('2010-01-01 00:00:00+0000', tz='UTC'),\n        Timestamp('2010-01-01 00:00:00+0000', tz='UTC')],\n       [Timestamp('2010-01-02 00:00:00+0000', tz='UTC'),\n        Timestamp('2010-01-02 00:00:00+0000', tz='UTC')],\n       [Timestamp('2010-01-03 00:00:00+0000', tz='UTC'),\n        Timestamp('2010-01-03 00:00:00+0000', tz='UTC')],\n       [Timestamp('2010-01-04 00:00:00+0000', tz='UTC'),\n        Timestamp('2010-01-04 00:00:00+0000', tz='UTC')],\n       [Timestamp('2010-01-05 00:00:00+0000', tz='UTC'),\n        Timestamp('2010-01-05 00:00:00+0000', tz='UTC')],\n       [Timestamp('2010-01-06 00:00:00+0000', tz='UTC'),\n        Timestamp('2010-01-06 00:00:00+0000', tz='UTC')],\n       [Timestamp('2010-01-07 00:00:00+0000', tz='UTC'),\n        Timestamp('2010-01-07 00:00:00+0000', tz='UTC')],\n       [Timestamp('2010-01-08 00:00:00+0000', tz='UTC'),\n....\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/242238502",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-242238502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 242238502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjIzODUwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-24T23:22:31Z",
    "updated_at": "2016-08-24T23:22:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@wesm prob need some tests cases to nail things like this down.\n\n@sdementen would you like to submit a PR's with some tests for this? (just to nail down the current behavior; we will mark this as a change though).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/242338070",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-242338070",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 242338070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjMzODA3MA==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T10:03:43Z",
    "updated_at": "2016-08-25T10:03:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "If I understand well (correct me if wrong:\n- numpy does not accept tz in their dtype\n- dates are converted to UTC taking into account the pandas tz (so no lost of information except for the tz)\n- in the example here above, .values could have returned a numpy.array with dtype datetime64[ns] but would then loose the tz (but then we would have : df.values == df.astype('M8[ns]').values) ==> this can be confusing for users\n\nBut then, how would you see then consistency in pandas 2.0 if numpy does not support tz ?\n\n@jreback, I can write tests in a PR. some questions:\n- where ? pandas/tests/frame/test_values.py ?\n- the test should succeed in the current setting ? or should it fail if the .values does not return a numpy.array ? or if df[\"A\"].values returns a DatetimeIndex instead of a numpy.array ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/242340415",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-242340415",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 242340415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjM0MDQxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T10:14:14Z",
    "updated_at": "2016-08-25T10:14:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> dates are converted to UTC taking into account the pandas tz (so no lost of information except for the tz)\n\nnot relevant here, we are not converting to UTC, rather using `object` to hold the data\n\n> in the example here above, .values could have returned a numpy.array with dtype datetime64[ns] but would then loose the tz (but then we would have : df.values == df.astype('M8[ns]').values) ==> this can be confusing for users\n\nno, should instead return an `object` array.\n\nthere are tests for datetime w/tz in tests/frame just add them in the same file.\nthey should just validate the current settings exactly. If you want to try to make this change go for it (though that's a bit more complicated). If we don't make the change, put a TODO there.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287043898",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287043898",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287043898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzA0Mzg5OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T12:36:24Z",
    "updated_at": "2017-03-16T12:36:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sdementen can you follow up here?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287118405",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287118405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287118405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzExODQwNQ==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T16:44:59Z",
    "updated_at": "2017-03-16T16:44:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback is that a good test for the case ? I hope I got the issue right finally ..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287134968",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287134968",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287134968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzEzNDk2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T17:38:13Z",
    "updated_at": "2017-03-16T17:38:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep your example from the top replicates"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287136236",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287136236",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287136236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzEzNjIzNg==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T17:42:16Z",
    "updated_at": "2017-03-16T17:42:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I start a PR?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287146201",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287146201",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287146201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE0NjIwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T18:15:27Z",
    "updated_at": "2017-03-16T18:15:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sdementen \r\n\r\nyes, would be appreciated.\r\n\r\nsee docs [here](http://pandas-docs.github.io/pandas-docs-travis/contributing.html)\r\n\r\ncreate a test, then see if you can track down where to put the fix."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287147404",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287147404",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287147404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE0NzQwNA==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T18:19:39Z",
    "updated_at": "2017-03-16T18:19:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was just thinking about the PR to add the test to pandas (with a todo item) as you wrote it would be difficult before pandas 2.0. OK for you ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287150442",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287150442",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287150442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE1MDQ0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T18:30:20Z",
    "updated_at": "2017-03-16T18:30:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "what I wrote about is that its difficult to change ``df['A'].values`` vs ``df[['A', 'B']].values``, meaning that numpy cannot hold the tz-ware datetimes in a ``datetime64[ns]`` array unless they are UTC, vs. when we return an object array of ``Timestamps`` (which are tz-aware). So this part we can't do anything about ATM.\r\n\r\nBut would take a bug fix for making ``df[['A']].values`` return an object array of Timestamps (rather than a ``DatetimeIndex``)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287154868",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287154868",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287154868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE1NDg2OA==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T18:46:24Z",
    "updated_at": "2017-03-16T18:46:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, now I understand it better. But I guess you mean `df[['B']].values` to be a numpy.ndarray with `dtype == datetime64[ns]` as when I `print(col, type(df.values))` I get\r\n```\r\n(['A'], <type 'numpy.ndarray'>)\r\n(['A', 'A'], <type 'numpy.ndarray'>)\r\n(['A', 'B'], <type 'numpy.ndarray'>)\r\n(['B'], <class 'pandas.tseries.index.DatetimeIndex'>)\r\n(['B', 'B'], <type 'numpy.ndarray'>)\r\n```\r\n\r\nSide question, can a DatetimeTZBlock be multidimensional like DatetimeBlock ? or will it always have only one dimension (and therefore, very difficult to fix the case for df[['B','B']] to return an array of datetime64[ns,US/Eastern]) ? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287154998",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287154998",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287154998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE1NDk5OA==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T18:46:52Z",
    "updated_at": "2017-03-16T18:46:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "for the case `df[['B']].values`, I can try to fix it"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287157116",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287157116",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287157116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE1NzExNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T18:54:35Z",
    "updated_at": "2017-03-16T18:54:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "the problem is basically here: https://github.com/pandas-dev/pandas/blob/master/pandas/core/internals.py#L3427\r\n\r\nthis needs a bit of logic rework. ``_interleave_dtype`` does the correct job of picking out the right dtype. But we skip this logic if we *only* have a single dtype which is wrong. The reason for this (originally) is that if we only have a single dtype we can simply return it as a numpy array (avoiding copy); and this works for *most* dtypes, but not for categorical or datetime w/tz which need to be packaged differently.\r\n\r\n> Side question, can a DatetimeTZBlock be multidimensional like DatetimeBlock ? or will it always have only one dimension (and therefore, very difficult to fix the case for df[['B','B']] to return an array of datetime64[ns,US/Eastern]) ?\r\n\r\nno these are single column only (sparse, categorical, datetime w/tz)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287161627",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287161627",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287161627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE2MTYyNw==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T19:11:21Z",
    "updated_at": "2017-03-16T19:11:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "would the following fit the bill to replace https://github.com/pandas-dev/pandas/blob/master/pandas/core/internals.py#L3427 ? it passes my adapted test\r\n```\r\n        if ((self._is_single_block or not self.is_mixed_type)\r\n            and not isinstance(mgr.blocks[0], (DatetimeTZBlock,CategoricalBlock))):\r\n            return mgr.blocks[0].get_values()\r\n        else:\r\n            return mgr._interleave()\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287162993",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287162993",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287162993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE2Mjk5Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T19:16:51Z",
    "updated_at": "2017-03-16T19:16:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would like to eliminate whole if bizness and instead have this done in interleave (with a single block not copying)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287164497",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287164497",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287164497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE2NDQ5Nw==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T19:22:39Z",
    "updated_at": "2017-03-16T19:22:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, i'll continue tomorrow/later.\r\nKeep me informed if someone else works on it in between to avoid duplicate work "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287164894",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287164894",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287164894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE2NDg5NA==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T19:24:09Z",
    "updated_at": "2017-03-16T19:24:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "But on fact, is it worth to do it in a cleaner way if pandas 2.0 is on the horizon ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287166733",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287166733",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287166733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE2NjczMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T19:31:31Z",
    "updated_at": "2017-03-16T19:31:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> pandas 2.0 is on the horizon \r\n\r\nwe are at least 1 yr away\r\n\r\nso bug fixes will continue to be expected for pandas 1 for the foreseable future (and even after pandas 2 is production ready)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287180850",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287180850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287180850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE4MDg1MA==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T20:26:50Z",
    "updated_at": "2017-03-16T20:26:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have made some adaptations. Are they going in the right direction ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287182081",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287182081",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287182081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE4MjA4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T20:31:26Z",
    "updated_at": "2017-03-16T20:31:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "your best bet is to create a PR.\r\n\r\nof course before you push you should have a test that fails before the change and passes afterwards. then you can iterate on the code."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287525762",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287525762",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287525762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzUyNTc2Mg==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-18T08:32:08Z",
    "updated_at": "2017-03-18T08:32:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am making progress but I am having failures in other tests.\r\n\r\nI have temporarily removed the shortcut for df.values that returns an ndarray without copy when the dtype is unique ==> so df.values always returns a new ndarray (never a 'view')\r\n\r\nBut now I see a failure in https://github.com/pandas-dev/pandas/blob/master/pandas/tests/test_generic.py#L1469 due to pct_change assuming df.values is a view https://github.com/pandas-dev/pandas/blob/master/pandas/core/generic.py#L5786 and using np.putmask to does inplace changes in the df via df.values (https://docs.scipy.org/doc/numpy/reference/generated/numpy.putmask.html).\r\n\r\nIs this an abusive use of df.values ? or is some code assuming rightfully that sometimes df.values returns a view and sometimes a copy ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287526164",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287526164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287526164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzUyNjE2NA==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-18T08:38:58Z",
    "updated_at": "2017-03-18T08:38:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess https://github.com/pandas-dev/pandas/blob/master/pandas/core/generic.py#L5786 should be replaced by\r\n`rs.mask(mask, np.nan,inplace=True)`\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287548858",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287548858",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287548858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzU0ODg1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-18T14:13:39Z",
    "updated_at": "2017-03-18T14:13:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sdementen yes this certainly could show some incorrect usages"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287566698",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287566698",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287566698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzU2NjY5OA==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-18T18:52:51Z",
    "updated_at": "2017-03-18T18:52:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I feel like going down the rabbit hole ... \r\n\r\nCurrently, we have the following\r\n```\r\nfrom pandas import *\r\nd=date_range(\"20120101\",periods=4,tz=\"CET\")\r\ndf=pandas.DataFrame({\"A\":d.values,\"B\":d},index=d)\r\nprint(repr(df[[\"B\"]].values))\r\nprint(repr(df[\"B\"].values))\r\nprint(repr(df.index.values))\r\n```\r\nthat returns\r\n```\r\nDatetimeIndex(['2012-01-01 00:00:00+01:00', '2012-01-02 00:00:00+01:00',\r\n               '2012-01-03 00:00:00+01:00', '2012-01-04 00:00:00+01:00'],\r\n              dtype='datetime64[ns, CET]', freq='D')\r\narray(['2011-12-31T23:00:00.000000000', '2012-01-01T23:00:00.000000000',\r\n       '2012-01-02T23:00:00.000000000', '2012-01-03T23:00:00.000000000'], dtype='datetime64[ns]')\r\narray(['2011-12-31T23:00:00.000000000', '2012-01-01T23:00:00.000000000',\r\n       '2012-01-02T23:00:00.000000000', '2012-01-03T23:00:00.000000000'], dtype='datetime64[ns]')\r\n```\r\nThe DatetimeIndex is the problematic one. But should this return an array of object (as I understood from our thread) or be consistent with the other two (series and dti) and return a datetime64[ns] but with tz scrapped ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287571717",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287571717",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287571717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzU3MTcxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-18T20:14:48Z",
    "updated_at": "2017-03-18T20:14:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "you are confusing a ``Series.values``; that is fine and expected (it *does* get converted to a numpy array and hence UTC).\r\n\r\nWe are *only* changing a DataFrame conversion, e.g. ``df[['B']]`` or ``df[['A', 'B']]``. These will BOTH return a 2-d array (the 1st will have (1,n) and 2nd of course will have (2,n) dims)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287596559",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287596559",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287596559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzU5NjU1OQ==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-19T05:57:35Z",
    "updated_at": "2017-03-19T05:57:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "sorry to be not that clear in my previous post \r\n\r\nI was illustrating indeed what Series, a DatetimeIndex and a DataFrame were giving as a result of using their property `values`. In terms of API design, I would expect these 3 to be \"consistent/coherent\" in some way.\r\nAs both Series and DatetimeIndex returns ndarray of dtype `datetime64[ns]` in UTC but without the tz information (hence, we loose the fact that the `datetime64[ns]` were tz aware vs naive in pandas world, but OK, given the constrains of numpy, it looks a reasonable assumption), I would expect the `df[['B']]` or `df[['A','B']]` to also return ndarray of dtype `datetime64[ns]` in UTC. This would be equivalent to applying values to each columns (as a series) in the dataframe and then concatenating the results. This would also mean that, if the dataframe contains only `datetime64[ns]` and/or  `datetime64[ns, any tz]`, it would be converted to a ndarray of dtype  `datetime64[ns]`.\r\n\r\nHence, I am a bit far from the previous goal of df[['B']] returning an ndarray of dtype object with tz-aware Timestamp inside.\r\n\r\nTo make everything even clearer, the following script shows the 3 cases ([\"A\"], [\"B\"], [\"A\", \"B\"]) for which values return 3 different kind of objects, as well as 2 scenarios to return consistent values.\r\n```\r\nimport numpy\r\nfrom pandas import date_range, DataFrame\r\n\r\ndef to_values(df, as_dt64=False):\r\n    return numpy.array(list(df.itertuples(index=False)),\r\n                       dtype=\"<M8[ns]\" if as_dt64 else object)\r\n\r\ndf = DataFrame({\"A\": date_range(\"20120101\", periods=2),\r\n                \"B\": date_range(\"20120101\", periods=2, tz=\"CET\")})\r\n\r\nfor col in [[\"A\"], [\"B\"], [\"A\", \"B\"]]:\r\n    print(\"Case : \", col)\r\n    print(\"1. Current .values\")\r\n    print(repr(df[col].values))\r\n    print(\"2. Exporting Timestamp 'object'\")\r\n    arr = to_values(df[col])\r\n    print(repr(arr))\r\n    print(\"3. Exporting datetime64[ns]\")\r\n    arr = to_values(df[col], as_dt64=True)\r\n    print(repr(arr))\r\n    print()\r\n```\r\nwith output\r\n```\r\nCase :  ['A']\r\n1. Current .values\r\narray([['2012-01-01T00:00:00.000000000'],\r\n       ['2012-01-02T00:00:00.000000000']], dtype='datetime64[ns]')\r\n2. Exporting Timestamp 'object'\r\narray([[Timestamp('2012-01-01 00:00:00')],\r\n       [Timestamp('2012-01-02 00:00:00')]], dtype=object)\r\n3. Exporting datetime64[ns]\r\narray([['2012-01-01T00:00:00.000000000'],\r\n       ['2012-01-02T00:00:00.000000000']], dtype='datetime64[ns]')\r\n\r\nCase :  ['B']\r\n1. Current .values\r\nDatetimeIndex(['2012-01-01 00:00:00+01:00', '2012-01-02 00:00:00+01:00'], dtype='datetime64[ns, CET]', freq='D')\r\n2. Exporting Timestamp 'object'\r\narray([[Timestamp('2012-01-01 00:00:00+0100', tz='CET')],\r\n       [Timestamp('2012-01-02 00:00:00+0100', tz='CET')]], dtype=object)\r\n3. Exporting datetime64[ns]\r\narray([['2011-12-31T23:00:00.000000000'],\r\n       ['2012-01-01T23:00:00.000000000']], dtype='datetime64[ns]')\r\n\r\nCase :  ['A', 'B']\r\n1. Current .values\r\narray([[Timestamp('2012-01-01 00:00:00'),\r\n        Timestamp('2012-01-01 00:00:00+0100', tz='CET')],\r\n       [Timestamp('2012-01-02 00:00:00'),\r\n        Timestamp('2012-01-02 00:00:00+0100', tz='CET')]], dtype=object)\r\n2. Exporting Timestamp 'object'\r\narray([[Timestamp('2012-01-01 00:00:00'),\r\n        Timestamp('2012-01-01 00:00:00+0100', tz='CET')],\r\n       [Timestamp('2012-01-02 00:00:00'),\r\n        Timestamp('2012-01-02 00:00:00+0100', tz='CET')]], dtype=object)\r\n3. Exporting datetime64[ns]\r\narray([['2012-01-01T00:00:00.000000000', '2011-12-31T23:00:00.000000000'],\r\n       ['2012-01-02T00:00:00.000000000', '2012-01-01T23:00:00.000000000']], dtype='datetime64[ns]')\r\n```\r\n\r\nAs this can lead to backward incompatible changes, I am not sure which option is the best but probably the `to_values(df, as_dt64=True)` interpretation is the more consistent with Series and DatetimeIndex."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287607290",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287607290",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287607290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzYwNzI5MA==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-19T10:32:04Z",
    "updated_at": "2017-03-19T10:32:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "  @jreback FYI, the branch I am using to work on the issue is https://github.com/sdementen/pandas/tree/value-returns-ndarray-for-series-with-datetime64-tz "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287619113",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287619113",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287619113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzYxOTExMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-19T14:08:38Z",
    "updated_at": "2017-03-19T14:08:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "we r leaving the 1d case alone pls focus on this specific issue\r\n\r\nif you want to propose making a Series.values for dt w/tz aware return an object based (so we preserve the tz) that would be fine but is separate\r\n\r\n(i mean u could do it in the pr but that should not be he primary goal)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287643879",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14052#issuecomment-287643879",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14052",
    "id": 287643879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzY0Mzg3OQ==",
    "user": {
      "login": "sdementen",
      "id": 1304950,
      "node_id": "MDQ6VXNlcjEzMDQ5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdementen",
      "html_url": "https://github.com/sdementen",
      "followers_url": "https://api.github.com/users/sdementen/followers",
      "following_url": "https://api.github.com/users/sdementen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions",
      "organizations_url": "https://api.github.com/users/sdementen/orgs",
      "repos_url": "https://api.github.com/users/sdementen/repos",
      "events_url": "https://api.github.com/users/sdementen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdementen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-19T20:11:51Z",
    "updated_at": "2017-03-19T20:35:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just noticed that my branch name was very misleading as I wrote \"for series with datetime64\" (and I understand now some of your comments...) but I have only worked on the dataframe part. \r\nI have renamed the branch to make this clear"
  }
]
