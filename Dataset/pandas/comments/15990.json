[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293846700",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-293846700",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 293846700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mzg0NjcwMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T10:00:27Z",
    "updated_at": "2017-04-13T10:00:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is already indicated in #15341 and documented. this is orthogonal to #15962 which is fine.\r\n\r\n> Thus, the question is whether or not we want to keep using those OR remove them entirely and replace them with basic assert statements.\r\n\r\nabsolutely NOT. not sure where you got this notion.\r\n\r\nsure ``self.assertTrue``, ``self.assertFalse``, ``self.assertRaises``, and ``self.assertEqual`` when its a scalar should be replaced, but these are just old nose idioms.\r\n\r\nGenerally replacing test code should be done in independent PRs/commits. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293850065",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-293850065",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 293850065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mzg1MDA2NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T10:16:02Z",
    "updated_at": "2017-04-13T10:16:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually another section after http://pandas-docs.github.io/pandas-docs-travis/contributing.html#how-to-use-parametrize would make sense to explain how to write / when to use which assertions, focused on asserting pandas objects (``assert_series_equal``) and scalars, regexes etc. almost listing what are the 'common' ones would be enough."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293870720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-293870720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 293870720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mzg3MDcyMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T11:55:46Z",
    "updated_at": "2017-04-13T11:56:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Thus, the question is whether or not we want to keep using those OR remove them entirely and replace them with basic assert statements\r\n\r\nSince all the `aseert_*_equal` methods use `assert condition, message`, pytest's assertion rewriting is disabled (4th paragraph [here](https://docs.pytest.org/en/latest/assert.html#asserting-with-the-assert-statement))\r\n\r\n> which is what I don't like about raw assert statements that are considered more idiomatic with pytest.\r\n\r\nPytest has special comparison reprs for builtin data structues, and you can define your [own](https://docs.pytest.org/en/latest/assert.html#defining-your-own-assertion-comparison) so this could be solved. But we don't want to. We need all the arguments to `assert_*_equal` like `check_dtypes`, that you can't specify with `==`. We shouldn't ever have bare asserts that aren't being rewritten by pytest.\r\n\r\nI can writeup a summary of the comparisons and assertions for the documentation."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293923420",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-293923420",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 293923420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzkyMzQyMA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T15:09:21Z",
    "updated_at": "2017-04-13T15:09:32Z",
    "author_association": "MEMBER",
    "body": "@jreback , @TomAugspurger : So if I'm understanding this properly, we are sticking with raw `assert` statements when possible because the wrappers will not be properly handled by `pytest` ?\r\n\r\nIf that is the case, yes, absolutely, then we should replace using `util/testing` comparison methods with `assert` when appropriate in separate PR's (of course, not something like `assert_frame_equal` but something like `assert_equal` can then be removed)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293934590",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-293934590",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 293934590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzkzNDU5MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T15:47:12Z",
    "updated_at": "2017-04-13T15:47:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @jreback , @TomAugspurger : So if I'm understanding this properly, we are sticking with raw assert statements when possible because the wrappers will not be properly handled by pytest ?\r\n\r\nI think you misunderstood.\r\n\r\nFor builtins, scalars, etc. we'll recommend `assert {'a': 1, 'b': 2} == {'a': 1, 'b': 3}` over `self.assertDictEqual`.\r\n\r\nFor DataFrames, Series, etc., we'll recommend `assert_frame_equal(df1, df2)`.\r\n\r\nI don't think we need to change any of the asserts in `util/testing.py`. They're already doing the right thing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293936128",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-293936128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 293936128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzkzNjEyOA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T15:52:41Z",
    "updated_at": "2017-04-13T15:52:50Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger : No, I do understand in fact.  I am referring to chunks like <a href=\"https://github.com/pandas-dev/pandas/blob/f2ed595d0b77c2e4c68edf1eae9ddca8fba42651/pandas/util/testing.py#L1046-L1095\">this</a> and something like <a href=\"https://github.com/pandas-dev/pandas/blob/f2ed595d0b77c2e4c68edf1eae9ddca8fba42651/pandas/util/testing.py#L831\">this</a>."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293936164",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-293936164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 293936164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzkzNjE2NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T15:52:48Z",
    "updated_at": "2017-04-13T15:52:48Z",
    "author_association": "MEMBER",
    "body": "> I don't think we need to change any of the asserts in util/testing.py. They're already doing the right thing.\r\n\r\nI think @gfyoung meant the `assert_equal`, `assertIsInstance`, .. wrappers we have in `pandas.util.testing`. And for those, yes, I think we should clean that up and remove those."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293936179",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-293936179",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 293936179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzkzNjE3OQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T15:52:51Z",
    "updated_at": "2017-04-13T15:52:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "In `xarray` we built `xarray.test.assert_equal` and then delegated from there based on type - rather than specific `assert_X_equal`s, which seem redundant\r\n\r\nBut probably not worth changing now"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293936349",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-293936349",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 293936349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzkzNjM0OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T15:53:31Z",
    "updated_at": "2017-04-13T15:53:31Z",
    "author_association": "MEMBER",
    "body": "> wrappers we have in pandas.util.testing. And for those, yes, I think we should clean that up and remove those.\r\n\r\n@jorisvandenbossche : Yes, that is correct.  Okay, that's what I was hoping to get clarification on."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293936885",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-293936885",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 293936885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzkzNjg4NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T15:55:26Z",
    "updated_at": "2017-04-13T15:55:26Z",
    "author_association": "MEMBER",
    "body": "Also, do we want to use `pytest` fixtures to capture `stdout` and `stdin` instead of method decorators that were introduced in one of my earlier PR's?  OR are we okay with that (no one is commenting on this, so it seems like we are okay with this)?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293937724",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-293937724",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 293937724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzkzNzcyNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T15:58:17Z",
    "updated_at": "2017-04-13T15:58:17Z",
    "author_association": "MEMBER",
    "body": "Regarding the wrappers in `util.testing`, note that some of them are already hardly / not used (like `assertIs`, `assertIs`) so will be easy to clean up (others like `assert_equal` are used more)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293939319",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-293939319",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 293939319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzkzOTMxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T16:02:30Z",
    "updated_at": "2017-04-13T16:02:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes the only things would change are\r\n\r\n- ``assert_equal`` (this is generally for scalar / lists /dicts)\r\n- ``self.assertEqual``\r\n- ``self.assertTrue/False``\r\n- ``assertDictEqual``\r\n- ``assertIs``\r\n- ``assertIsInstance``\r\n\r\nand use ``pytest.raises``"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293956232",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-293956232",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 293956232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mzk1NjIzMg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T16:43:04Z",
    "updated_at": "2017-04-13T16:43:38Z",
    "author_association": "MEMBER",
    "body": "I would also add the following (static `tm.` methods):\r\n* `assertIs`\r\n* `assertIsNot`\r\n* `assertIn`\r\n* `assertNotIn`\r\n* `assertIsNone`\r\n* `assertIsNotNone`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294241624",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-294241624",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 294241624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI0MTYyNA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T21:37:28Z",
    "updated_at": "2017-04-14T21:37:28Z",
    "author_association": "MEMBER",
    "body": "One thing I might also add is that in the spirit of functional, test classes should probably be avoided unless there is a good organization reason for doing so.  Otherwise, test functions should be used."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294242433",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-294242433",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 294242433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI0MjQzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T21:43:11Z",
    "updated_at": "2017-04-14T21:43:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung ideally yes, but they *are* nice for organization, so I wouldn't necessarily *change* the structure if its meant for organization (and it almost always is)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294242582",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-294242582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 294242582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI0MjU4Mg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T21:44:21Z",
    "updated_at": "2017-04-14T21:44:48Z",
    "author_association": "MEMBER",
    "body": "@jreback : Yes, of course.  That's why I wasn't as definitive about this (also, I added documentation in a PR as you know (#15989) to explicitly to address that caveat)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/297222723",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-297222723",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 297222723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzIyMjcyMw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T02:51:48Z",
    "updated_at": "2017-04-26T02:51:48Z",
    "author_association": "MEMBER",
    "body": "To everyone here, what is your opinion about `pytest.warns` vs. `tm.assert_produces_warning` ?  I know that we have decided to not use `pytest.raises` in place of `tm.assertRaisesRegexp` (soon to be `tm.assert_raises_regex`).  I am more inclined to use this former over the latter because it also does message checking which our implementation does not do currently.  Thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322763177",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-322763177",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 322763177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjc2MzE3Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-16T13:01:11Z",
    "updated_at": "2017-08-16T13:01:11Z",
    "author_association": "MEMBER",
    "body": "@gfyoung BTW, I just saw that the latest pytest actually supports a `pytest.warns(..., match=..)` to potentially have the behaviour of `tm.assert_raises_regex` (one of our custom methods we decided to keep because of this limitation in pytest.warns) (https://github.com/pytest-dev/pytest/pull/2227). \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322808365",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-322808365",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 322808365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjgwODM2NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-16T15:25:54Z",
    "updated_at": "2017-08-16T15:25:54Z",
    "author_association": "MEMBER",
    "body": "The PR you pointed to seems to referring to `pytest.raises`, though this is good to know nevertheless."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322814619",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15990#issuecomment-322814619",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15990",
    "id": 322814619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjgxNDYxOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-16T15:46:55Z",
    "updated_at": "2017-08-16T15:46:55Z",
    "author_association": "MEMBER",
    "body": "Ah, sorry, yes, that is what I meant :-) \r\n(as otherwise it wouldn't help replacing `tm.assert_raises_regex`)\r\n\r\nBut indeed, we also have out own `assert_produces_warning`, but that is still something else (I think our implementation also change the filter and checks that stacklevel, compared to pytest one)"
  }
]
