[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/300107151",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16298#issuecomment-300107151",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16298",
    "id": 300107151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDEwNzE1MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-09T09:13:15Z",
    "updated_at": "2017-05-09T09:13:15Z",
    "author_association": "MEMBER",
    "body": "@agora123 Can you provide a reproducible (runnable) example that shows the error. \r\n\r\nI tried with the following, and don't get such error:\r\n\r\n```\r\nIn [87]: s = '16.0,0.118,15.0,0.5675,0.337,\"LTE,eHRPD\"'\r\n\r\nIn [88]: pd.read_csv(StringIO(s), header=None)\r\nOut[88]: \r\n      0      1     2       3      4          5\r\n0  16.0  0.118  15.0  0.5675  0.337  LTE,eHRPD\r\n\r\nIn [89]: pd.read_csv(StringIO(s), header=None, quoting=3)\r\nOut[89]: \r\n      0      1     2       3      4     5       6\r\n0  16.0  0.118  15.0  0.5675  0.337  \"LTE  eHRPD\"\r\n```\r\n\r\nSo not exactly what you want (but I don't think this is possible), but also not an error."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/300230900",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16298#issuecomment-300230900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16298",
    "id": 300230900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDIzMDkwMA==",
    "user": {
      "login": "agora123",
      "id": 28549645,
      "node_id": "MDQ6VXNlcjI4NTQ5NjQ1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28549645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agora123",
      "html_url": "https://github.com/agora123",
      "followers_url": "https://api.github.com/users/agora123/followers",
      "following_url": "https://api.github.com/users/agora123/following{/other_user}",
      "gists_url": "https://api.github.com/users/agora123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agora123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agora123/subscriptions",
      "organizations_url": "https://api.github.com/users/agora123/orgs",
      "repos_url": "https://api.github.com/users/agora123/repos",
      "events_url": "https://api.github.com/users/agora123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agora123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-09T16:57:40Z",
    "updated_at": "2017-05-09T16:57:40Z",
    "author_association": "NONE",
    "body": "Hello jorisvandenbossche, thank you very much for your reply.\r\n\r\nI have a df DataFrame fetching data from the database, the format of which I can't control.\r\nThe data has some fields with double quotes and a comma in the field: \"LTE,eHRPD\"\r\n I need to output the data to csv exactly in that format, where I have a double quotes and a comma in that field:  \"LTE,eHRPD\"\r\n\r\nHere is a mock up code that I put together: \r\n\r\nimport pandas\r\nimport csv\r\n\r\ndf = pandas.DataFrame({'A': ['1.0627', '0625', '\"LTE,eHRPD\"']})\r\nprint(df)\r\n\r\ndf.to_csv(quoting=csv.QUOTE_NONE)\r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/300304162",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16298#issuecomment-300304162",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16298",
    "id": 300304162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDMwNDE2Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-09T21:16:53Z",
    "updated_at": "2017-05-09T21:16:53Z",
    "author_association": "MEMBER",
    "body": "Ah, sorry, I assumed it was about `read_csv` (didn't read that well).\r\n\r\nSo I think it is not possible to obtain what you want with pandas `to_csv`. \r\nThe problem is that your data contains a `,`, which also is the delimiter. That is normally not a problem, as the string gets quoted. But, you specify that you *don't* want to add quotes (with QUOTE_NONE). You do this because the data itself already has quotes, but pandas does not know this. It sees a delimiter in your data, thus wants either quotes (the default, but you overwrite this), or either an escapechar. You can do this last with:\r\n\r\n```\r\nIn [21]: df = pd.DataFrame({'A': ['1.0627', '0625', '\"LTE,eHRPD\"']})\r\n\r\nIn [22]: print(df.to_csv(quoting=csv.QUOTE_NONE, escapechar='\\\\'))\r\n,A\r\n0,1.0627\r\n1,0625\r\n2,\"LTE\\,eHRPD\"\r\n```\r\n\r\nbut of course, this is also not what you want.\r\n\r\nPossible solutions: don't use pandas `to_csv` but write the data manually (looping over the rows, concatting the values and write line to file), or you could also use an escapechar that is not yet present in the data and remove it afterwards.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/300591229",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16298#issuecomment-300591229",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16298",
    "id": 300591229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDU5MTIyOQ==",
    "user": {
      "login": "agora123",
      "id": 28549645,
      "node_id": "MDQ6VXNlcjI4NTQ5NjQ1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28549645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agora123",
      "html_url": "https://github.com/agora123",
      "followers_url": "https://api.github.com/users/agora123/followers",
      "following_url": "https://api.github.com/users/agora123/following{/other_user}",
      "gists_url": "https://api.github.com/users/agora123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agora123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agora123/subscriptions",
      "organizations_url": "https://api.github.com/users/agora123/orgs",
      "repos_url": "https://api.github.com/users/agora123/repos",
      "events_url": "https://api.github.com/users/agora123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agora123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T19:41:26Z",
    "updated_at": "2017-05-10T19:41:26Z",
    "author_association": "NONE",
    "body": "Hello jorisvandenbossche, thank you for your reply.  \r\n\r\nI know I need to set quoting=csv.QUOTE_NONE, and I wish to set escapechar to an empty string (so that I don't have to remove it later), which it will not allow me.  Is there a chance the code could be changed to allow me to set escapechar to an empty string?\r\n\r\nAlso, could you please provide if you can an efficient method for removing an extra character from .csv file in the case that I do have to provide escapechar.\r\n\r\nThank you in advance!\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/301304403",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16298#issuecomment-301304403",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16298",
    "id": 301304403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTMwNDQwMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-14T10:50:48Z",
    "updated_at": "2017-05-14T10:50:48Z",
    "author_association": "MEMBER",
    "body": "@gfyoung An opinion on whether we could allow an empty escapechar? \r\n\r\n(short summary of the case: you have a field that includes a comma, but also has already quotes *in* the value of that fields. Therefore you set `quoting=QUOTE_NONE` to prevent adding extra quotes, but then pandas wants to escape the comma. Which is logical, as pandas does not know there are already quotes in the data and so the final result would not result in a invalid csv file. Possible solution is to allow an empty escapechar. But, this is rather a very peculiar cornercase, so not sure if it is worth it to add / whether this is technically easy to allow)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/301335067",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16298#issuecomment-301335067",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16298",
    "id": 301335067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTMzNTA2Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-14T19:44:01Z",
    "updated_at": "2017-05-14T19:45:36Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : It wouldn't be too difficult to allow, but IMO the philosophy has generally been that we want to make round-trip possible (we should get the original `DataFrame` if we read it after sending it to a `str` with `to_csv`), and making corner cases like this possible is just asking for trouble in the long-run.\r\n\r\nI'm -1 on allowing this because the specifications are conflicting.  Given that you have just one location where the `escapechar`, I would take the output and do:\r\n~~~python\r\noutput = output.replace(\"\\\\\", \"\")\r\n~~~"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/301411508",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16298#issuecomment-301411508",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16298",
    "id": 301411508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTQxMTUwOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-15T08:35:12Z",
    "updated_at": "2017-05-15T08:35:20Z",
    "author_association": "MEMBER",
    "body": "@gfyoung Thanks! Sounds like a good assessment, agree with that. So will close this.\r\n\r\n@agora123 What you could also do is strip the `\"` from your values, and then writing the csv should then give exactly what you want:\r\n\r\n```\r\nIn [29]: print(df.A.str.strip('\"').to_csv())\r\n0,1.0627\r\n1,0625\r\n2,\"LTE,eHRPD\"\r\n```\r\n"
  }
]
