[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/453877551",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-453877551",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 453877551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mzg3NzU1MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-13T23:55:36Z",
    "updated_at": "2019-01-13T23:55:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "we are still treating datetimes as non-numeric yes? meaning that by default they will be exlcuded from say .mean() and you have to pass ``numeric_only=False``?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/453890029",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-453890029",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 453890029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mzg5MDAyOQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-14T02:37:16Z",
    "updated_at": "2019-01-14T02:37:16Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24757?src=pr&el=h1) Report\n> Merging [#24757](https://codecov.io/gh/pandas-dev/pandas/pull/24757?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/453fa85a8b88ca22c7b878a3fcf97e068f11b6c4?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24757/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24757?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #24757      +/-   ##\n==========================================\n+ Coverage   92.38%   92.38%   +<.01%     \n==========================================\n  Files         166      166              \n  Lines       52363    52378      +15     \n==========================================\n+ Hits        48376    48391      +15     \n  Misses       3987     3987\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.81% <100%> (ø)` | :arrow_up: |\n| #single | `42.91% <20%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24757?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/arrays/datetimelike.py](https://codecov.io/gh/pandas-dev/pandas/pull/24757/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2RhdGV0aW1lbGlrZS5weQ==) | `97.72% <100%> (+0.04%)` | :arrow_up: |\n| [pandas/core/indexes/datetimelike.py](https://codecov.io/gh/pandas-dev/pandas/pull/24757/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZWxpa2UucHk=) | `98.52% <100%> (ø)` | :arrow_up: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/24757/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `93.69% <100%> (+0.01%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24757?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24757?src=pr&el=footer). Last update [453fa85...30eeb64](https://codecov.io/gh/pandas-dev/pandas/pull/24757?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/453890030",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-453890030",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 453890030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mzg5MDAzMA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-14T02:37:16Z",
    "updated_at": "2019-04-05T01:02:49Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24757?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`master@9fbb9e7`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24757/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24757?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##             master   #24757   +/-   ##\n=========================================\n  Coverage          ?   91.26%           \n=========================================\n  Files             ?      173           \n  Lines             ?    52999           \n  Branches          ?        0           \n=========================================\n  Hits              ?    48372           \n  Misses            ?     4627           \n  Partials          ?        0\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.83% <100%> (?)` | |\n| #single | `41.75% <17.64%> (?)` | |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24757?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/indexes/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/24757/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZXMucHk=) | `96.41% <ø> (ø)` | |\n| [pandas/core/indexes/timedeltas.py](https://codecov.io/gh/pandas-dev/pandas/pull/24757/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy90aW1lZGVsdGFzLnB5) | `90.27% <ø> (ø)` | |\n| [pandas/core/arrays/datetimelike.py](https://codecov.io/gh/pandas-dev/pandas/pull/24757/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2RhdGV0aW1lbGlrZS5weQ==) | `97.73% <100%> (ø)` | |\n| [pandas/core/indexes/datetimelike.py](https://codecov.io/gh/pandas-dev/pandas/pull/24757/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZWxpa2UucHk=) | `98.52% <100%> (ø)` | |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/24757/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `93.69% <100%> (ø)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24757?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24757?src=pr&el=footer). Last update [9fbb9e7...7c6201b](https://codecov.io/gh/pandas-dev/pandas/pull/24757?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454014644",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-454014644",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 454014644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDAxNDY0NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T14:02:26Z",
    "updated_at": "2019-01-14T14:02:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "> we are still treating datetimes as non-numeric yes? meaning that by default they will be exlcuded from say .mean() and you have to pass numeric_only=False?\r\n\r\nI think that makes the most sense."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454152059",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-454152059",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 454152059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE1MjA1OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T20:36:05Z",
    "updated_at": "2019-01-14T20:36:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does this close https://github.com/pandas-dev/pandas/issues/24752?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454168397",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-454168397",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 454168397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE2ODM5Nw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T21:29:18Z",
    "updated_at": "2019-01-14T21:29:18Z",
    "author_association": "MEMBER",
    "body": "> Does this close #24752?\r\n\r\nI don't think so, will need to double-check."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454171846",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-454171846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 454171846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE3MTg0Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T21:40:35Z",
    "updated_at": "2019-01-14T21:40:35Z",
    "author_association": "MEMBER",
    "body": "No, no it does not."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454634902",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-454634902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 454634902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDYzNDkwMg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T03:05:53Z",
    "updated_at": "2019-01-16T03:05:53Z",
    "author_association": "MEMBER",
    "body": "> I guess these have to be uniform periods so mean is just another period, though I think this could easily be a non-sensical return values, e.g. what is the mean of `pd.date_range('2012', freq='M', periods=4)`\r\n\r\nEyeballing it at about 2012-03-14.  Why would that be nonsensical?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454644392",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-454644392",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 454644392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDY0NDM5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T04:03:56Z",
    "updated_at": "2019-01-16T04:03:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "it’s no longer a M freq Period. my point is the mean if a span is an odd thing "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454804591",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-454804591",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 454804591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDgwNDU5MQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T14:46:00Z",
    "updated_at": "2019-01-16T14:46:00Z",
    "author_association": "MEMBER",
    "body": "> Can you explain that more? Maybe from an implementation point (viewing it as integers) it is clear what to do, but semantically for periods, I certainly don't find this obvious.\r\n\r\nPeriod/PeriodArray/PeriodIndex is the closest thing we have to \"lower-resolution Timestamp/DTA/DTI\".  In this context, the mean of a bunch of Periods is analogous to a mean of a bunch of Timestamps."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454805041",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-454805041",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 454805041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDgwNTA0MQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T14:47:24Z",
    "updated_at": "2019-01-16T14:47:24Z",
    "author_association": "MEMBER",
    "body": "> it’s no longer a M freq Period. my point is the mean if a span is an odd thing\r\n\r\n@jreback in the example you gave, it isn't a Period at all.  It is a collection of Timestamps that happen to be a month apart."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454938048",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-454938048",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 454938048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDkzODA0OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T20:57:03Z",
    "updated_at": "2019-01-16T20:57:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm guessing @jreback's example was a typo and meant a `period_range`.\r\n\r\nI'm still wrapping my head around the meaning of a mean for period data. The thing tripping me up is the necessary \"rounding\" involved in the mean. I think a good analogy is to integers.\r\n\r\n```python\r\nIn [14]: np.arange(12).mean()\r\nOut[14]: 5.5\r\n\r\nIn [15]: pd.period_range('2000', periods=12, freq='M').mean()\r\nOut[15]: Period('2000-06', 'M')\r\n```\r\n\r\nso the `mean[int] -> float`.\r\n\r\nIt's not obvious to me that preserving the type and rounding is preferable to type casting (to a  Timestamp). But I don't think returning a Timestamp is feasible because then (IIUC) you have to worry about weird things like length of months, etc.\r\n\r\nSo the only real option is returning a Period that's rounded to the nearest period for our freq. But it took me a decent amount of thinking to get to that conclusion, and I'm still not sure it's obviously correct. For now, I'd recommend disabling mean for Period, unless we have a compelling reason to support it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454950634",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-454950634",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 454950634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDk1MDYzNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T21:32:56Z",
    "updated_at": "2019-01-16T21:33:17Z",
    "author_association": "MEMBER",
    "body": "> Period/PeriodArray/PeriodIndex is the closest thing we have to \"lower-resolution Timestamp/DTA/DTI\". In this context, the mean of a bunch of Periods is analogous to a mean of a bunch of Timestamps.\r\n\r\nIt might be the closest thing, but it is not a lower-resolution timestamp. It represents a time span, and I don't think it is that clear what the mean of several time spans should be.\r\n\r\n>  For now, I'd recommend disabling mean for Period, unless we have a compelling reason to support it.\r\n\r\n\\+1\r\n\r\n@jbrockmendel do you have a use case in mind?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454955887",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-454955887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 454955887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDk1NTg4Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T21:47:15Z",
    "updated_at": "2019-01-16T21:47:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "could provide a nice NotImplememtedError saying to convert to time stamps first "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454991030",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-454991030",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 454991030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDk5MTAzMA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T00:03:00Z",
    "updated_at": "2019-01-17T00:03:00Z",
    "author_association": "MEMBER",
    "body": "@jreback can you confirm Tom's hypothesis that you meant period_range instead of date_range?  i.e. are we all OK with `DatetimeArray.mean`?\r\n\r\nFor PeriodArray I agree that for non-Tick frequencies it gets wonky.  Special-casing Tick vs non-Tick would be a hassle I'm OK with avoiding.  So will disable this for PeriodArray."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454993586",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-454993586",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 454993586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDk5MzU4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T00:16:13Z",
    "updated_at": "2019-01-17T00:16:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes was a typo\r\n\r\nok on DTA / TDA but i think consensus is to not try to handle PA array currently "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455820722",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-455820722",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 455820722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTgyMDcyMg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-19T22:31:38Z",
    "updated_at": "2019-01-19T22:31:38Z",
    "author_association": "MEMBER",
    "body": "> I don't see a problem delegating to TDI here if its a timedelta type. there must be something else wrong if you need this check.\r\n\r\nThe problem is that TDI/TDA doesn't have `std`, `sum`, etc yet, while ndarray[m8[ns]] does.\r\n\r\n@TomAugspurger am I not communicating this clearly?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458234667",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-458234667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 458234667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODIzNDY2Nw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T17:56:12Z",
    "updated_at": "2019-01-28T17:56:12Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche when convenient, can I get your help clearing up an apparent communication problem?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458240623",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-458240623",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 458240623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODI0MDYyMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T18:12:17Z",
    "updated_at": "2019-01-28T18:12:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, catching up on emails...\r\n\r\nMaking sure I understand the PR correctly. This ensure that Series/Index .mean works for DatetimeArray/TimedeltaArray, while not breaking `.str` for DTA/DTA-backed Series/Index?.\r\n\r\nIf you didn't include the `and hasattr(TimedeltaIndex, name)`, then we'd end up calling `TimedeltaIndex(...).std()`, which fails, because TimedeltaIndex.std isn't a method?\r\n\r\nIOW, this works on master\r\n\r\n```python\r\nIn [2]: arr = pd.array([1, 2, 3], dtype='timedelta64[ns]')\r\n\r\nIn [3]: pd.Series(arr).std()\r\nOut[3]: Timedelta('0 days 00:00:00.000000')\r\n```\r\n\r\nbut would break without the `and hasattr(TimedeltaIndex, name)`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458244319",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-458244319",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 458244319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODI0NDMxOQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T18:22:24Z",
    "updated_at": "2019-01-28T18:22:24Z",
    "author_association": "MEMBER",
    "body": "> [...] but would break without the and hasattr(TimedeltaIndex, name)?\r\n\r\nRight."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458255172",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-458255172",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 458255172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODI1NTE3Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T18:52:52Z",
    "updated_at": "2019-01-28T18:52:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks,  once all of the ops that we want are implemented, the `and hasattr(TimedeltaIndex, name)` can be removed?\r\n\r\nDoes that make sense @jreback? We can't exclude that check until TDA has all the methods, and we probably prefer smaller PRs?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458329993",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-458329993",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 458329993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMyOTk5Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T22:36:22Z",
    "updated_at": "2019-01-28T22:36:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "why don't we add NotImplementedErr to those ops then? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458332609",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-458332609",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 458332609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMzMjYwOQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T22:45:15Z",
    "updated_at": "2019-01-28T22:45:15Z",
    "author_association": "MEMBER",
    "body": "> why don't we add NotImplementedErr to those ops then?\r\n\r\nFor starters because that would also cause the relevant tests to fail, just slightly differently.\r\n\r\nSecond because after this PR goes through the next one will implement std, followed by median and whatever else is relevant."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458529414",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-458529414",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 458529414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODUyOTQxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T12:55:22Z",
    "updated_at": "2019-01-29T12:55:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok can we do one of 2 things here:\r\n\r\n- remove Timedelta change for now until we don't need to add this accessor check\r\n- leave the change, but add a big TODO (and followup as soon as possible)?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458654267",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-458654267",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 458654267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODY1NDI2Nw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T18:33:21Z",
    "updated_at": "2019-01-29T18:33:21Z",
    "author_association": "MEMBER",
    "body": "added TODO comment"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458733522",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-458733522",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 458733522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODczMzUyMg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T22:29:57Z",
    "updated_at": "2019-01-29T22:29:57Z",
    "author_association": "MEMBER",
    "body": "> Given the discussion we had on the other issue (where we disallowed M8 again for mean on Series), I am actually not sure that we should implement DatetimeArray.mean\r\n\r\nDo you mean disallowed M8 for mean on DataFrame with `numeric_only=None`?  I recall that discussion, and that the decision was made mainly to avoid an API change that no one wanted to document at the last minute.\r\n\r\nIs there a reason why `DatetimeArray.mean` would not be meaningful or have an ambiguous meaning?  If not, why wouldn't you want the method to exist?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/459332086",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-459332086",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 459332086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTMzMjA4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T12:48:35Z",
    "updated_at": "2019-01-31T12:48:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Is there a reason why DatetimeArray.mean would not be meaningful or have an ambiguous meaning? If not, why wouldn't you want the method to exist?\r\n\r\nI am with @jbrockmendel here, DTA is well defined an meaningful, PeriodArray.mean is problematic which is the other discussion"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/459363503",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-459363503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 459363503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTM2MzUwMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T14:27:44Z",
    "updated_at": "2019-01-31T14:27:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Is there a reason why DatetimeArray.mean would not be meaningful or have an ambiguous meaning? \r\n\r\nDon't you need floating-point to represent the mean? What's the expected value of\r\n\r\n```python\r\nnp.mean([pd.Timestmap(1), pd.Timestamp(2)])\r\n```\r\n\r\nIIUC we would need to round that to `Timestamp(1)` or `Timestamp(2)`, which I would find a bit surprising. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/459393287",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-459393287",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 459393287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTM5MzI4Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T15:46:43Z",
    "updated_at": "2019-01-31T15:47:37Z",
    "author_association": "MEMBER",
    "body": "> Is there a reason why DatetimeArray.mean would not be meaningful or have an ambiguous meaning? If not, why wouldn't you want the method to exist?\r\n\r\nDo you know if there is a reason why numpy choose to not support it?\r\n\r\nI find the argument of Tom a convincing one: a mean of integers is a float, which can loose precision / give rounding. Altough, the same is true for timedelta of course .. (edit: but, timedelta supports sum and division with integer already, so supporting mean comes naturally then)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/459401418",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24757#issuecomment-459401418",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24757",
    "id": 459401418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTQwMTQxOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T16:07:30Z",
    "updated_at": "2019-01-31T16:07:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah I didn't realize that timedelta did implement it. Looking at the exception\r\n\r\n```python\r\nIn [5]: np.mean(np.array([1, 2], dtype='M8[ns]'))\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-5-343ebecd9dd6> in <module>\r\n----> 1 np.mean(np.array([1, 2], dtype='M8[ns]'))\r\n\r\n~/Envs/pandas-dev/lib/python3.7/site-packages/numpy/core/fromnumeric.py in mean(a, axis, dtype, out, keepdims)\r\n   3116\r\n   3117     return _methods._mean(a, axis=axis, dtype=dtype,\r\n-> 3118                           out=out, **kwargs)\r\n   3119\r\n   3120\r\n\r\n~/Envs/pandas-dev/lib/python3.7/site-packages/numpy/core/_methods.py in _mean(a, axis, dtype, out, keepdims)\r\n     73             is_float16_result = True\r\n     74\r\n---> 75     ret = umr_sum(arr, axis, dtype, out, keepdims)\r\n     76     if isinstance(ret, mu.ndarray):\r\n     77         ret = um.true_divide(\r\n\r\nTypeError: ufunc add cannot use operands with types dtype('<M8[ns]') and dtype('<M8[ns]')\r\n```\r\n\r\nNot supporting datetimes is likely not a deliberate choice one way or the other, just a consequence of not having sum for datetimes."
  }
]
