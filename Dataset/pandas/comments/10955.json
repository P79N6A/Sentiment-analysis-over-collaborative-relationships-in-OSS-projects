[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/136511191",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10955#issuecomment-136511191",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10955",
    "id": 136511191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjUxMTE5MQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-31T21:50:49Z",
    "updated_at": "2015-08-31T21:50:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe I'm missing something, but is this any different than below?  You'd still have to serialize to JSON, but fundamentally, this doesn't seem any different than the `'records'` orient with some metadata?\n\n```\n {'data': {'values': df.to_dict('records')}}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/136536542",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10955#issuecomment-136536542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10955",
    "id": 136536542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjUzNjU0Mg==",
    "user": {
      "login": "jowens",
      "id": 976970,
      "node_id": "MDQ6VXNlcjk3Njk3MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/976970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jowens",
      "html_url": "https://github.com/jowens",
      "followers_url": "https://api.github.com/users/jowens/followers",
      "following_url": "https://api.github.com/users/jowens/following{/other_user}",
      "gists_url": "https://api.github.com/users/jowens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jowens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jowens/subscriptions",
      "organizations_url": "https://api.github.com/users/jowens/orgs",
      "repos_url": "https://api.github.com/users/jowens/repos",
      "events_url": "https://api.github.com/users/jowens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jowens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T00:28:26Z",
    "updated_at": "2015-09-01T04:45:59Z",
    "author_association": "NONE",
    "body": "I think this is a productive direction. Thanks! Stay tuned, I will report back!\n\nI do note that if df is a Series, to_dict doesn't take an orient argument, which is unfortunate, since orient='records' would seem to be useful there as well.\n\n(Edit: I'm now just doing `DataFrame(series)` to turn that series into a DataFrame, which I then use in the next comment.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/136585076",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10955#issuecomment-136585076",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10955",
    "id": 136585076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjU4NTA3Ng==",
    "user": {
      "login": "jowens",
      "id": 976970,
      "node_id": "MDQ6VXNlcjk3Njk3MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/976970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jowens",
      "html_url": "https://github.com/jowens",
      "followers_url": "https://api.github.com/users/jowens/followers",
      "following_url": "https://api.github.com/users/jowens/following{/other_user}",
      "gists_url": "https://api.github.com/users/jowens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jowens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jowens/subscriptions",
      "organizations_url": "https://api.github.com/users/jowens/orgs",
      "repos_url": "https://api.github.com/users/jowens/repos",
      "events_url": "https://api.github.com/users/jowens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jowens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T04:46:02Z",
    "updated_at": "2015-09-01T04:46:02Z",
    "author_association": "NONE",
    "body": "`to_dict('records')` seems a little different than what I want. I'm assuming a DataFrame with one index (which I'm assuming is x) and one column (which I'm assuming is y); please tell me if I should simply use another DataFrame organization. (If it's not clear already, I'm a pandas n00b.)\n- vega-lite wants a list of elements, where each element is a dict, and 'x' and 'y' are keys in that dict (e.g., `{'x': xval, 'y': yval}`)\n- `to_dict('records')` gives me a list of elements, which each element is a dict, but it doesn't incorporate the index at all; instead each element is {columnname, yval}, so columnname is replicated in every element. I like list-of-elements and each-element-is-a-dict, but it would be nice if a to_dict list-like orient could also incorporate the index.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/136688843",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10955#issuecomment-136688843",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10955",
    "id": 136688843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjY4ODg0Mw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T12:04:41Z",
    "updated_at": "2015-09-01T12:04:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe something like `df.to_dict(orient='records', index=True)` would be reasonable, although it would have to handle cases where the index isn't named.  In your particular case, you could do this:\n\n```\ndf.index.name = 'x'\ndf.reset_index()[['x', 'y']].to_dict('records')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/136811299",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10955#issuecomment-136811299",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10955",
    "id": 136811299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjgxMTI5OQ==",
    "user": {
      "login": "jowens",
      "id": 976970,
      "node_id": "MDQ6VXNlcjk3Njk3MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/976970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jowens",
      "html_url": "https://github.com/jowens",
      "followers_url": "https://api.github.com/users/jowens/followers",
      "following_url": "https://api.github.com/users/jowens/following{/other_user}",
      "gists_url": "https://api.github.com/users/jowens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jowens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jowens/subscriptions",
      "organizations_url": "https://api.github.com/users/jowens/orgs",
      "repos_url": "https://api.github.com/users/jowens/repos",
      "events_url": "https://api.github.com/users/jowens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jowens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T17:52:55Z",
    "updated_at": "2015-09-01T17:53:09Z",
    "author_association": "NONE",
    "body": "Thanks to @chris-b1's suggestion, I am now getting what I need with:\n\n```\ndf.index.name = 'x'\ndf = df.reset_index()\ndf.rename(columns={'old_y_name': 'y'}, inplace=True)\nbar_chart[\"data\"] = {\"values\" : df.to_dict(orient='records')}\n```\n\nPlease feel free to offer any suggestions about how I can make the above code cleaner/simpler. And many thanks! I think you can close this out.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415669850",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10955#issuecomment-415669850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10955",
    "id": 415669850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTY2OTg1MA==",
    "user": {
      "login": "fburanelli",
      "id": 12871582,
      "node_id": "MDQ6VXNlcjEyODcxNTgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12871582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fburanelli",
      "html_url": "https://github.com/fburanelli",
      "followers_url": "https://api.github.com/users/fburanelli/followers",
      "following_url": "https://api.github.com/users/fburanelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/fburanelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fburanelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fburanelli/subscriptions",
      "organizations_url": "https://api.github.com/users/fburanelli/orgs",
      "repos_url": "https://api.github.com/users/fburanelli/repos",
      "events_url": "https://api.github.com/users/fburanelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fburanelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T06:57:30Z",
    "updated_at": "2018-08-24T06:57:30Z",
    "author_association": "NONE",
    "body": "Hi, you should use `df.to_json(orient='records')` instead of `to_dict`, because the former produces a valid JSON using double quotes and the latter not.\r\n\r\nBesides this, I believe this is not really a Pandas issue and would suggest after three years to close it. In fact `to_json(orient='records')` is all you need to create the vega-light values."
  }
]
