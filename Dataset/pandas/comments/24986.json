[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458352073",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24986#issuecomment-458352073",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24986",
    "id": 458352073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODM1MjA3Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T00:01:42Z",
    "updated_at": "2019-01-29T00:01:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Taking a look at this now. The fix is quite simple\r\n\r\n```diff\r\ndiff --git a/pandas/core/arrays/numpy_.py b/pandas/core/arrays/numpy_.py\r\nindex 47517782e..791ff4430 100644\r\n--- a/pandas/core/arrays/numpy_.py\r\n+++ b/pandas/core/arrays/numpy_.py\r\n@@ -222,7 +222,7 @@ class PandasArray(ExtensionArray, ExtensionOpsMixin, NDArrayOperatorsMixin):\r\n             item = item._ndarray\r\n\r\n         result = self._ndarray[item]\r\n-        if not lib.is_scalar(result):\r\n+        if not lib.is_scalar(item):\r\n             result = type(self)(result)\r\n         return result\r\n```\r\n\r\nbut I'm trying to figure out a way to robustly test this."
  }
]
