[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238447843",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-238447843",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 238447843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODQ0Nzg0Mw==",
    "user": {
      "login": "codecov-io",
      "id": 8655789,
      "node_id": "MDQ6VXNlcjg2NTU3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8655789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov-io",
      "html_url": "https://github.com/codecov-io",
      "followers_url": "https://api.github.com/users/codecov-io/followers",
      "following_url": "https://api.github.com/users/codecov-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov-io/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov-io/orgs",
      "repos_url": "https://api.github.com/users/codecov-io/repos",
      "events_url": "https://api.github.com/users/codecov-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-09T04:04:45Z",
    "updated_at": "2016-08-09T04:04:45Z",
    "author_association": "NONE",
    "body": "## [Current coverage](https://codecov.io/gh/pydata/pandas/pull/13944?src=pr) is 85.30% (diff: 100%)\n\n> Merging [#13944](https://codecov.io/gh/pydata/pandas/pull/13944?src=pr) into [master](https://codecov.io/gh/pydata/pandas/branch/master?src=pr) will not change coverage\n\n``` diff\n@@             master     #13944   diff @@\n==========================================\n  Files           139        139          \n  Lines         50157      50157          \n  Methods           0          0          \n  Messages          0          0          \n  Branches          0          0          \n==========================================\n  Hits          42785      42785          \n  Misses         7372       7372          \n  Partials          0          0          \n```\n\n> Powered by [Codecov](https://codecov.io?src=pr). Last update [b7abef4...c7819cf](https://codecov.io/gh/pydata/pandas/compare/b7abef4949fb1ba7fd1004feba4f47ace7004282...c7819cf806914c5fb9d375d01b19ab850ab405d8?src=pr)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238453891",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-238453891",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 238453891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODQ1Mzg5MQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-09T04:59:10Z",
    "updated_at": "2016-08-09T04:59:10Z",
    "author_association": "MEMBER",
    "body": "On the topic of cleaning up API's, IMO there should be a section about the `read_csv` API.  This API is a giant monolith and supporting two implementations doesn't make much sense anymore given that their behaviours and support are inconsistent.  Defining a new, sleeker interface (most likely based in the C engine) would be nice to have.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238454512",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-238454512",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 238454512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODQ1NDUxMg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-09T05:04:45Z",
    "updated_at": "2016-08-09T05:04:45Z",
    "author_association": "MEMBER",
    "body": "One general point of observation so far: this coupling with `numpy` probably will need some more fleshing out, especially when it comes to defining data types in `pandas`.  Finding that good balance between just enough separation from `numpy` to be able to operate largely independently of it while at the same time providing nice inter-op capabilities between `pandas` objects and `numpy` objects is going to be tricky.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238465909",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-238465909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 238465909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODQ2NTkwOQ==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-09T06:34:14Z",
    "updated_at": "2016-08-09T06:34:14Z",
    "author_association": "MEMBER",
    "body": "@gfyoung I would appreciate some help making very specific analysis (with code examples) of potential concerns around insulating users from NumPy-specific implementation details. For example: I do not believe it is pandas's responsibility to maximize its \"substitutability\" with ndarrays. It's a \"nice to have\", but the original \"Series is an ndarray\" design was a mistake in retrospect.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238466177",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-238466177",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 238466177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODQ2NjE3Nw==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-09T06:36:07Z",
    "updated_at": "2016-08-09T06:36:07Z",
    "author_association": "MEMBER",
    "body": "I agree that coming up with a plan to improve `read_csv` is a good idea â€” this is basically orthogonal to the data structure internals. The implementation of `read_csv` will obviously have to change (in a good way, e.g. \"unavoidable consolidation\" can be avoided in the new design).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238466646",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-238466646",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 238466646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODQ2NjY0Ng==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-09T06:39:07Z",
    "updated_at": "2016-08-09T06:55:10Z",
    "author_association": "MEMBER",
    "body": "Also, I would appreciate instead of using the term \"data type\" rather to use either \"physical type\" or \"logical type\".  In NumPy there is no separation of these concepts (except perhaps with `datetime[unit]`) and this is big reason why we are in this mess. See https://wesm.github.io/pandas2-design/internal-architecture.html#some-definitions\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238607588",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-238607588",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 238607588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODYwNzU4OA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-09T16:23:02Z",
    "updated_at": "2016-08-09T17:37:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for putting this together!\n\nA topic that is somewhat orthogonal to the internals, but one thing I've been thinking about in the context of pandas 2.0, is interaction with JIT compilers - mostly for UDFs.  I'm using `numba` as a frame of reference, but thinking generally.\n\nI came to pandas from SAS - there is _plenty_ to dislike about it - but one thing I actually do miss is a feeling of safety, that if you can write it, it will basically be fast.  Of course with pandas/numpy you have to be much more defensive, and sometimes try really hard to vectorize - just as an example I remember, this [SO answer](http://stackoverflow.com/a/32524908/3657742) from @unutbu is really clever, but I would have never come up with it.\n\nI think this need to be vectorized adds to the pandas api  size, and I also think adds significantly to the learning curve.  I'm sure like many others, I've taken a hard look at Julia - it wasn't there yet (and maybe it won't ever be?) but there is a big allure to that model.  As a user, I'd love to be able to just write this, and just have it be fast.\n\n``` python\ndf.groupby('key').transform(lambda x: (x - x.mean()) / x.std())\n```\n\nThis may be more of a stretch, but as a contributor who's not a C++ wizard, it would also be nice if some portion of pandas was implementable at a JIT-able level, ala @shoyer's [numbagg](https://github.com/shoyer/numbagg).  I get this may not possible - you probably couldn't even make `numba` a required dep.\n\nSo I was just curious if you had any thoughts / roadmap ideas for this topic?  A C/C++ API would open the door a lot of the way, but I think there may be value in tighter integration?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238685860",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-238685860",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 238685860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODY4NTg2MA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-09T20:46:56Z",
    "updated_at": "2016-08-09T20:46:56Z",
    "author_association": "MEMBER",
    "body": "@chris-b1 several things on the \"faster groupby\" front:\n- if the inner loops of group-wise operations are happening in compiled code with limited contact wtih the Python interpreter, then the microperformance of each operation will be much better\n- hypothetically (with much effort) one could create a useful enough C API such that the groupby operators could accept a ctypes function pointer -- this is basically (IIUC) how numba is implementing custom ufuncs. obviously the low-level bits of numerical arrays are simpler than pandas objects but the same general approach would be valid. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238700627",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-238700627",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 238700627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODcwMDYyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-09T21:40:40Z",
    "updated_at": "2016-08-09T21:40:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "so we have tons of issues related to this, see [here](https://github.com/pydata/pandas/issues?q=is%3Aopen+is%3Aissue+label%3AInternals).\n\nI will post a mini-list of issue that I am closing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238740434",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-238740434",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 238740434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODc0MDQzNA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-10T01:19:58Z",
    "updated_at": "2016-08-10T01:19:58Z",
    "author_association": "MEMBER",
    "body": "As for C vs C++, one factor that I find convenient about C++ is that you have the STL for standard data structures builtin. NumPy actually uses Python's C API when it needs a dict or set internally, for example, which is kind of insane.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238742396",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-238742396",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 238742396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODc0MjM5Ng==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-10T01:34:02Z",
    "updated_at": "2016-08-10T01:34:02Z",
    "author_association": "MEMBER",
    "body": "Note that the STL containers (like `std::unordered_map` for hash tables) have pretty acceptable performance:\n\nhttp://incise.org/hash-table-benchmarks.html\n\nWe should obviously do our own investigations, but we always have the option to pull in 3rd party libraries (we might decide to continue using klib or decommission depending on benchmarks).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238942435",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-238942435",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 238942435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODk0MjQzNQ==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-10T17:34:04Z",
    "updated_at": "2016-08-10T17:34:23Z",
    "author_association": "MEMBER",
    "body": "I'm going to let discussions collect here for a bit, then incorporate feedback into the documents. \n\nIt would be useful to start a separate document that is changes/improvements/refactorings that we would like to do in pandas 2.0 that do not involve changes to the internals (like, read_csv was brought up), how do you want to manage that? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239638608",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-239638608",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 239638608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTYzODYwOA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T19:56:32Z",
    "updated_at": "2016-08-13T20:11:25Z",
    "author_association": "MEMBER",
    "body": "One thing that surfaced recently in #13395 that I would like consider for pandas 2.0 is to expose the contiguous one dimensional arrays that store the values of DataFrame colums as part of the public API. These would be similar to the existing `Categorical` type, but done in more systematic manner and returned by pandas objects when you call `Series.values` and `Series.unique()`.\n\nThis would be complementary to existing scalar types like `Period`/`Datetime`/`Timestamp`. If the existing scalar type has the name `pandas.Scalar`, I would call the array version `pandas.ScalarArray`, inheriting from `pandas.BaseArray`.\n\nHaving such an API would be useful for third party libraries that integrate with pandas in a deep way (such as seaborn, sklearn, statsmodels and xarray), because it doesn't always make sense to work with labeled values.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239746523",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-239746523",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 239746523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTc0NjUyMw==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-15T07:47:01Z",
    "updated_at": "2016-08-15T07:47:01Z",
    "author_association": "MEMBER",
    "body": "@shoyer I'm totally with you here. This isn't explicitly called out in these docs but that was kind of what I intended here:\n\nhttps://wesm.github.io/pandas2-design/internal-architecture.html#pandas-array-types\n\nSo basically every logical type (whether Int32Array, StringArray, CategoricalArray, etc.) would have a corresponding public Python API. These would also have `__array__` for NumPy interoperability as able. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240099890",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-240099890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 240099890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDA5OTg5MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-16T13:23:57Z",
    "updated_at": "2016-08-16T13:23:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I realigned the milestones with some 'approx' dates.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241157335",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-241157335",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 241157335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE1NzMzNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-19T23:11:24Z",
    "updated_at": "2016-08-19T23:11:42Z",
    "author_association": "MEMBER",
    "body": "@wesm Thanks for the extensive explanations!\n\nTwo small things I wondered (have to read it further in more detail):\n- There has been discussion about the the datetime resolution (and resulting span) which is limited. I suppose with the better logical dtype system, it should be possible to tackle this? But maybe it is worth mentioning it somewhere?\n- Also regarding the dtype system, to what extent would it be possible to make defining custom dtypes externally work? (other libraries that provide a dtype that can be used in pandas dataframes)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241158414",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-241158414",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 241158414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE1ODQxNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-19T23:19:28Z",
    "updated_at": "2016-08-19T23:19:28Z",
    "author_association": "MEMBER",
    "body": "> It would be useful to start a separate document that is changes/improvements/refactorings that we would like to do in pandas 2.0 that do not involve changes to the internals (like, read_csv was brought up), how do you want to manage that? \n\nAgreed. \nWould it be worth to create a separate repo where those documents can live, together with the ones of this PR? (a pandas-design, pandas-discussion, pandas-dev, ...) This way, we can also use the issues/PRs over there to discuss the several topics without adding to the already huge number of open issues in the pandas repo, keeping it a bit separated. \nBut this has the disadvantage that when we start with actual code PRs, it will again be in the pandas repo.\n\nOtherwise, I would just add documents describing those possible changes to this same `pandas-2.0` directory.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241168382",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-241168382",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 241168382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE2ODM4Mg==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-20T01:02:27Z",
    "updated_at": "2016-08-20T01:02:27Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche I'd be happy to create a pandas-design repo â€” this has the added benefit of not bloating the main pandas git history if we check in images or other assets. Otherwise we can keep working in this doc/pandas-2.0 directory and indicate which docs are \"internals-related\" and which are \"stuff that depends on the internals\" (like the CSV reader, indexing, etc.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241619578",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-241619578",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 241619578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTYxOTU3OA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-23T03:51:55Z",
    "updated_at": "2016-08-23T03:51:55Z",
    "author_association": "MEMBER",
    "body": "I'm going to start incorporating the feedback into this document. I'll write a follow up PR for the Copy-On-Write discussion. I'll indicate in the document pages that are Internals related and those that are separate from Internals and maybe we can make more PRs digging into some of the other refactoring / cleanup we want to do. \n\nLet's start discussing on the mailing list how we intend to proceed with two branches of pandas? I would suggest we should keep the pandas 2.0 branch \"rebaseable\" for as long as possible, but at some point there will be some necessary divergence. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241639717",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-241639717",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 241639717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTYzOTcxNw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-23T06:33:02Z",
    "updated_at": "2016-08-23T06:33:02Z",
    "author_association": "MEMBER",
    "body": "What do others think of putting those documents and PRs in a separate repo?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241730058",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-241730058",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 241730058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTczMDA1OA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-23T13:28:34Z",
    "updated_at": "2016-08-23T13:28:34Z",
    "author_association": "MEMBER",
    "body": "I'm +0 on a separate repo (pydata/pandas-design or something), if only to make the discussion issues more accessible to outsiders (vs. having to seek them out in the main pandas issue tracker)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241765556",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-241765556",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 241765556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTc2NTU1Ng==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-23T15:15:37Z",
    "updated_at": "2016-08-23T15:15:37Z",
    "author_association": "MEMBER",
    "body": "I'll go ahead and do that. We can always move the docs back here if the process is not working well. \n\nI also would like more people to actively watch the design discussion. Having a dedicated repo will make the GitHub emails separate from the usual pandas firehose. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241949721",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13944#issuecomment-241949721",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13944",
    "id": 241949721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTk0OTcyMQ==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-24T03:45:31Z",
    "updated_at": "2016-08-24T03:45:31Z",
    "author_association": "MEMBER",
    "body": "I've addressed many of the comments in here in pydata/pandas-design#1 -- let's move the discussion there and see how it goes. I still need to fix up the github permissions so that all who have push rights here can push there\n"
  }
]
