[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/339991435",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18003#issuecomment-339991435",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18003",
    "id": 339991435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTk5MTQzNQ==",
    "user": {
      "login": "ivremos",
      "id": 26901590,
      "node_id": "MDQ6VXNlcjI2OTAxNTkw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/26901590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivremos",
      "html_url": "https://github.com/ivremos",
      "followers_url": "https://api.github.com/users/ivremos/followers",
      "following_url": "https://api.github.com/users/ivremos/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivremos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivremos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivremos/subscriptions",
      "organizations_url": "https://api.github.com/users/ivremos/orgs",
      "repos_url": "https://api.github.com/users/ivremos/repos",
      "events_url": "https://api.github.com/users/ivremos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivremos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T14:42:35Z",
    "updated_at": "2017-10-27T14:42:35Z",
    "author_association": "NONE",
    "body": "I've added a copy-pastable example, and I think I have found a subtlety of when this happens.\r\n\r\nThere is a surprising difference in Index vs MultiIndex behaviour depending on whether pandas NaT values are present.\r\n\r\nIf no pandas NaT values are present, the nanosecond precision seems to be preserved in both Index and MultiIndex, for the DatetimeIndex\r\n\r\n```\r\ndf = pd.DataFrame({'nanosecond_dt_str':['2017-06-01 08:00:00.067735872','2017-06-01 08:00:00.068736128','2017-06-01 08:00:00.069735872','2017-06-01 08:00:00.071736128'],'name':['one','two','three','four']})\r\ndf['nanosecond_dt'] = pd.to_datetime(df['nanosecond_dt_str'])\r\n\r\nnew_df = df.set_index('nanosecond_dt')\r\nns_part_of_index = new_df.index.nanosecond\r\n```\r\n```\r\narray([872, 128, 872, 128], dtype=int32)\r\n```\r\nkeeps nanosecond precision\r\n```\r\nnew_multi_index_df = df.set_index(['nanosecond_dt','name'])\r\nns_part_of_multi_index = new_multi_index_df.index.get_level_values('nanosecond_dt').nanosecond\r\n```\r\n```\r\narray([872, 128, 872, 128], dtype=int32)\r\n```\r\nkeeps nanosecond precision\r\n\r\nHowever if I retry with a pandas NaT time present, then nanosecond precision is preserved for the Index but *not* for the MultiIndex\r\n\r\n```\r\ndf = pd.DataFrame({'nanosecond_dt_str':['2017-06-01 08:00:00.067735872','2017-06-01 08:00:00.068736128','2017-06-01 08:00:00.069735872',pd.NaT],'name':['one','two','three','four']})\r\ndf['nanosecond_dt'] = pd.to_datetime(df['nanosecond_dt_str'])\r\n\r\nnew_df = df.set_index('nanosecond_dt')\r\nns_part_of_index = new_df.index.nanosecond\r\n```\r\n```\r\narray([ 872.,  128.,  872.,   nan])\r\n```\r\nkeeps nanosecond precision\r\n```\r\nnew_multi_index_df = df.set_index(['nanosecond_dt','name'])\r\nns_part_of_multi_index = new_multi_index_df.index.get_level_values('nanosecond_dt').nanosecond\r\n```\r\n```\r\narray([  0.,   0.,   0.,  nan])\r\n```\r\n*loses* nanosecond precision\r\n\r\nWhy does Index vs MultiIndex behave differently in this case?\r\n\r\nCan I restore nanosecond precision to my MultiIndex somehow?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340027586",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18003#issuecomment-340027586",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18003",
    "id": 340027586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDAyNzU4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T17:00:43Z",
    "updated_at": "2017-10-27T17:00:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "you have a quite old version of pandas. nanosecond precision was added around this time.\r\n\r\non master / 0.21.0 (just released)\r\n```\r\nIn [15]: new_multi_index_df.index.get_level_values(0).nanosecond\r\nOut[15]: Float64Index([872.0, 128.0, 872.0, nan], dtype='float64', name='nanosecond_dt')\r\n```\r\n"
  }
]
