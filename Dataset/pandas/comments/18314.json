[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344739370",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18314#issuecomment-344739370",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18314",
    "id": 344739370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDczOTM3MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T21:47:54Z",
    "updated_at": "2017-11-15T21:47:54Z",
    "author_association": "MEMBER",
    "body": "Ah, this was deliberately changed by https://github.com/pandas-dev/pandas/pull/18249 cc @toobaz @jreback \r\n\r\nIt seems it also affected dask cc @TomAugspurger \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344740018",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18314#issuecomment-344740018",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18314",
    "id": 344740018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDc0MDAxOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T21:50:21Z",
    "updated_at": "2017-11-15T21:50:21Z",
    "author_association": "MEMBER",
    "body": "If we decide to stick with what #18249 did (not special case Multi-Index, always see tuple as label), then we could consider deprecating this first?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344762586",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18314#issuecomment-344762586",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18314",
    "id": 344762586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDc2MjU4Ng==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T23:21:54Z",
    "updated_at": "2017-11-15T23:23:56Z",
    "author_association": "MEMBER",
    "body": "> If we decide to stick with what #18249 did (not special case Multi-Index, always see tuple as label)\r\n\r\nIn general, _every time_ a collection of keys is provided as argument to a pandas method, it should be in a list, not in a tuple, because otherwise we have ambiguity (and not just with ``MultiIndex``). And maybe this should be documented more clearly in the docs (I see \"list of labels or tuples\" [here](https://pandas.pydata.org/pandas-docs/stable/advanced.html), but only talking about indexing). But indeed, the ``groubpy`` docstring (before my intervention) mentioned a generic \"iterable\" but then specified \"list of strs\" (which I changed to \"list of labels\").\r\n\r\nBut then, in this specific case, the tuple does not contain keys, but rather full series, and in principle we might want to allow this (although at a cost, because we would need to distinguish valid - e.g. hashable - keys from ndarray-like objects). Indeed my PR had not considered the possibility to pass _more than one_ series, which is not mentioned in the docstring, but which we certainly don't want to drop. The question is whether we want to allow passing them in a tuple."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344784508",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18314#issuecomment-344784508",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18314",
    "id": 344784508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDc4NDUwOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T01:21:22Z",
    "updated_at": "2017-11-16T01:21:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, this did affect dask, though their use case was a bit strange since the user-provided `ddf.groupby(['a', 'b'])` when through a function that takes `*args`, so the list became a tuple.\r\n\r\nHow hard would it be to make `df.groupby(('a', 'b'))` emit a future warning for a release, and then making it always be a key in the next? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344848457",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18314#issuecomment-344848457",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18314",
    "id": 344848457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDg0ODQ1Nw==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T08:20:17Z",
    "updated_at": "2017-11-16T08:20:17Z",
    "author_association": "MEMBER",
    "body": "> How hard would it be to make df.groupby(('a', 'b')) emit a future warning for a release\r\n\r\nNot hard... the warning would affect also grouping by a legitimate tuple label (contained in a flat index), but this was not supported until my change, so it shouldn't annoy too many people. Shall I proceed?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344907950",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18314#issuecomment-344907950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18314",
    "id": 344907950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDkwNzk1MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T12:25:28Z",
    "updated_at": "2017-11-16T12:25:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Not hard... the warning would affect also grouping by a legitimate tuple label\r\n\r\nWhat are your thoughts on these cases?\r\n\r\n```python\r\ndf = pd.DataFrame({('a', 'b'): [1, 1, 2, 2], 'a': [1, 1, 1, 2], 'b': [1, 2, 2, 2], 'c': [1, 1, 1, 1]})\r\n\r\n# Case 1, no ambiguity.  No warning, use the tuple?\r\ndf[[('a', 'b'), 'a', 'c']].groupby(('a', 'b')).c.mean()\r\n\r\n# Case 2, no ambiguity. Warn and listify the tuple?\r\ndf[['a', 'b', 'c']].groupby(('a', 'b')).c.mean()\r\n\r\n# Case 3, ambiguous. Probably use the tuple?\r\ndf.groupby(('a', 'b')).c.mean()\r\n```\r\n\r\nIIUC, 2 is the case that we \"broke\", and would like to warn for. I don't know what happened with case 3 before, but I think the correct thing to do is just use the tuple, probably without a warning?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344949250",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18314#issuecomment-344949250",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18314",
    "id": 344949250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDk0OTI1MA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T15:02:13Z",
    "updated_at": "2017-11-16T15:02:13Z",
    "author_association": "MEMBER",
    "body": "> What are your thoughts on these cases?\r\n\r\nMy plan was actually to _not_ check the content of the columns. So all 3 cases would listify and emit a warning (and case 1 would actually break as before my PR).\r\n\r\nThis said, while I think in general trying to find labels in indexes and then catching ``KeyError``s as fallback (and listifying, in this case) is a strategy we should avoid, for a temporary fix it could make sense. In this case, things would go as you suggested above, and case 3 would use the tuple (which is good, since it is the behavior we finally want to keep). Then after one release cycle, we would stop any \"listification\"."
  }
]
