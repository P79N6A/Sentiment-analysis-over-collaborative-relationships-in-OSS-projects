[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348635346",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18566#issuecomment-348635346",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18566",
    "id": 348635346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODYzNTM0Ng==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-01T22:51:36Z",
    "updated_at": "2017-12-02T19:03:19Z",
    "author_association": "MEMBER",
    "body": "@fortooon : Thanks for reporting this!  <strike>This is not a bug, as we explicitly do not allow separators with such complexity.  The `IndexError` is to be expected, as the regex looks malformed.</strike>\r\n\r\n(EDIT: the explanation was wrong.  See <a href=\"https://github.com/pandas-dev/pandas/issues/18566#issuecomment-348712636\">below</a> for correct explanation.)\r\n\r\nClosing this issue for now can always re-open if necessary."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348700850",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18566#issuecomment-348700850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18566",
    "id": 348700850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcwMDg1MA==",
    "user": {
      "login": "fortooon",
      "id": 9059698,
      "node_id": "MDQ6VXNlcjkwNTk2OTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9059698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fortooon",
      "html_url": "https://github.com/fortooon",
      "followers_url": "https://api.github.com/users/fortooon/followers",
      "following_url": "https://api.github.com/users/fortooon/following{/other_user}",
      "gists_url": "https://api.github.com/users/fortooon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fortooon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fortooon/subscriptions",
      "organizations_url": "https://api.github.com/users/fortooon/orgs",
      "repos_url": "https://api.github.com/users/fortooon/repos",
      "events_url": "https://api.github.com/users/fortooon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fortooon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T15:55:10Z",
    "updated_at": "2017-12-02T15:55:45Z",
    "author_association": "NONE",
    "body": "@gfyoung : Thanks for response. But how can I avoid this error and use regexp separator that determines tab sign or comma? I thought that using 'sep' parameter as regexp is legal according to doc : \r\n\r\n>  In addition, separators longer than 1 character and different from '\\s+' will be interpreted as regular expressions and will also force the use of the Python parsing engine. Note that regex delimiters are prone to ignoring quoted data. Regex example: '\\r\\t'"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348712636",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18566#issuecomment-348712636",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18566",
    "id": 348712636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcxMjYzNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T19:02:35Z",
    "updated_at": "2017-12-02T19:02:35Z",
    "author_association": "MEMBER",
    "body": "@fortooon : Good point.  I misspoke yesterday about that.  Looking at this with a clearer mind, your regex is indeed correct.  However, your converters are not correct.  The indices you choose **must be relative to the `usecols` parameter that you pass in**.  Here is what I mean:\r\n\r\nWhen you specify `usecols=[2, 1]`, the filtered table looks like this:\r\n\r\n~~~\r\nx2,f\r\n5,6\r\n5,6\r\n~~~\r\n\r\nThe converters are then applied to this filtered table.  You can see here that there no longer is a column 2.  Thus, when `pandas` tries to apply your converter to column 2, it gets an `IndexError` because there are only two columns, and we 0-index.\r\n\r\nThe reason why `usecols=[0, 1]` was working for you is because those indices are still correct (and within the bounds) on the filtered table, as you have only two columns.  Thus, the two converters are created are still within the bounds.\r\n\r\nI hope this clarifies what you're seeing.  Let me know if you have any other questions."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348762760",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18566#issuecomment-348762760",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18566",
    "id": 348762760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODc2Mjc2MA==",
    "user": {
      "login": "fortooon",
      "id": 9059698,
      "node_id": "MDQ6VXNlcjkwNTk2OTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9059698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fortooon",
      "html_url": "https://github.com/fortooon",
      "followers_url": "https://api.github.com/users/fortooon/followers",
      "following_url": "https://api.github.com/users/fortooon/following{/other_user}",
      "gists_url": "https://api.github.com/users/fortooon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fortooon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fortooon/subscriptions",
      "organizations_url": "https://api.github.com/users/fortooon/orgs",
      "repos_url": "https://api.github.com/users/fortooon/repos",
      "events_url": "https://api.github.com/users/fortooon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fortooon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-03T12:37:46Z",
    "updated_at": "2017-12-03T12:37:46Z",
    "author_association": "NONE",
    "body": "@gfyoung Thanks for detailed answer.\r\nBut if I change my example a little:\r\n```\r\nimport re\r\nfrom pandas import read_csv\r\n\r\nkw = { 'header': 0, 'usecols': [2], 'iterator': True} # don't use python engine\r\nkw['sep'] = \",\"# use simple sep\r\ndef _convert_cell_value(value):\r\n  print \"_convert_cell_value\", value\r\n  return value \r\nkw[\"converters\"] = {i: lambda(value): _convert_cell_value(value) for i in range(len(kw[\"usecols\"]))} \r\nreader = read_csv(\"path to attached csv2.txt file\", **kw)\r\nprint \"rows\", [row for row in reader.get_chunk().values] \r\n```\r\nI can see, that my_converter didn't call:\r\n`Output : rows [array([6]), array([6])]`\r\nBut if `'usecols': [2, 1]` Output  is :\r\n```\r\n_convert_cell_value 5\r\n_convert_cell_value 5\r\nrows [array(['5', 6], dtype=object), array(['5', 6], dtype=object)]\r\n```\r\nonly one converter was called.\r\nSo I think, that different approach of selection converters indices (depend on engine type) will help me.  \r\n\r\nPlease, comment this point. Also situation, when some indices of converters work good with python engine, but not work with default - look like a bug.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348805480",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18566#issuecomment-348805480",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18566",
    "id": 348805480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODgwNTQ4MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-03T18:57:45Z",
    "updated_at": "2017-12-03T18:57:45Z",
    "author_association": "MEMBER",
    "body": "@fortooon : Ah, yes, now we're onto something.  This is related to #13302, as converter handling is executed at different points in time between the two engines.  Patching this to make handling consistent, however, would require some major refactoring of the code."
  }
]
