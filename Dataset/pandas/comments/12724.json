[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/202556689",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12724#issuecomment-202556689",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12724",
    "id": 202556689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjU1NjY4OQ==",
    "user": {
      "login": "yerikzheng",
      "id": 1213264,
      "node_id": "MDQ6VXNlcjEyMTMyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1213264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yerikzheng",
      "html_url": "https://github.com/yerikzheng",
      "followers_url": "https://api.github.com/users/yerikzheng/followers",
      "following_url": "https://api.github.com/users/yerikzheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/yerikzheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yerikzheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yerikzheng/subscriptions",
      "organizations_url": "https://api.github.com/users/yerikzheng/orgs",
      "repos_url": "https://api.github.com/users/yerikzheng/repos",
      "events_url": "https://api.github.com/users/yerikzheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yerikzheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-28T19:51:58Z",
    "updated_at": "2016-03-28T20:03:30Z",
    "author_association": "NONE",
    "body": "Currently, I'm using the following patch as a temporarily workaround. The workaround is to simply return the index if the length is 0, which should be ok as the index is immutable.\n\n``` python\n\ndef _add_offset(self, offset):\n    import warnings\n    try:\n        from pandas.io.common import PerformanceWarning\n    except:\n        from pandas.core.common import PerformanceWarning\n\n    try:\n        if self.tz is not None:\n            values = self.tz_localize(None)\n        else:\n            values = self\n        result = offset.apply_index(values)\n        if self.tz is not None:\n            result = result.tz_localize(self.tz)\n        return result\n\n    except NotImplementedError:\n        warnings.warn(\"Non-vectorized DateOffset being applied to Series \"\n                      \"or DatetimeIndex\", PerformanceWarning)\n        if len(self) == 0:\n            return self\n        return self.astype('O') + offset\n\n\ndef patch_pandas_index():\n    pd.DatetimeIndex._add_offset = _add_offset\n\n\n# Patch pandas empty datetimeindex and offset operations\npatch_pandas_index()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/202880360",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12724#issuecomment-202880360",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12724",
    "id": 202880360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjg4MDM2MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T12:58:51Z",
    "updated_at": "2016-03-29T12:58:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "not really sure this is supported, meaning this kind of `dateutil.relativedetla` offset. What are you intending this to actually do?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/202902566",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12724#issuecomment-202902566",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12724",
    "id": 202902566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjkwMjU2Ng==",
    "user": {
      "login": "yerikzheng",
      "id": 1213264,
      "node_id": "MDQ6VXNlcjEyMTMyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1213264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yerikzheng",
      "html_url": "https://github.com/yerikzheng",
      "followers_url": "https://api.github.com/users/yerikzheng/followers",
      "following_url": "https://api.github.com/users/yerikzheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/yerikzheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yerikzheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yerikzheng/subscriptions",
      "organizations_url": "https://api.github.com/users/yerikzheng/orgs",
      "repos_url": "https://api.github.com/users/yerikzheng/repos",
      "events_url": "https://api.github.com/users/yerikzheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yerikzheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T13:52:07Z",
    "updated_at": "2016-03-29T13:52:07Z",
    "author_association": "NONE",
    "body": "This definitely used to be a supported feature, as least in 0.16.x\n\nThe custom MLK rule in my testcase is simply a modified example taken from tseries/holiday.py. The holiday.py module is shipped with pandas and it uses dateutil.relativedelta, so it must be a supported feature.\n\n``` python\nUSMartinLutherKingJr = Holiday('Dr. Martin Luther King Jr.', start_date=datetime(1986,1,1), month=1, day=1,\n                               offset=DateOffset(weekday=MO(3)))\n```\n\nThis kind of holiday rule is quite common for exchanges across the world, e.g. as new national holidays introduced they would all have a start date. With this bug generating holidays before the starting date would not be possible. one would simply expect an empty index returned if rule does not yield any holidays.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/202909609",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12724#issuecomment-202909609",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12724",
    "id": 202909609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjkwOTYwOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T14:06:54Z",
    "updated_at": "2016-03-29T14:06:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @chris-b1 \ncc @rockg \n\nhmm, maybe something broke. Though the [19] is expected to be honest, its not really clear what to do with this. you are trying to add a frequency aware object to something with no frequency, so what should you do? coerce or raise? I think this error message is fine, maybe something needs an adjustment in the holiday logic.\n\n```\nIn [18]: DatetimeIndex(['20160101'],freq='D') + DateOffset(weekday=MO(3))\nOut[18]: DatetimeIndex(['2016-01-18'], dtype='datetime64[ns]', freq=None)\n\nIn [19]: DatetimeIndex([],freq='D') + DateOffset(weekday=MO(3))\nValueError: Must provide freq argument if no data is supplied\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/202914982",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12724#issuecomment-202914982",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12724",
    "id": 202914982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjkxNDk4Mg==",
    "user": {
      "login": "yerikzheng",
      "id": 1213264,
      "node_id": "MDQ6VXNlcjEyMTMyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1213264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yerikzheng",
      "html_url": "https://github.com/yerikzheng",
      "followers_url": "https://api.github.com/users/yerikzheng/followers",
      "following_url": "https://api.github.com/users/yerikzheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/yerikzheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yerikzheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yerikzheng/subscriptions",
      "organizations_url": "https://api.github.com/users/yerikzheng/orgs",
      "repos_url": "https://api.github.com/users/yerikzheng/repos",
      "events_url": "https://api.github.com/users/yerikzheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yerikzheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T14:20:10Z",
    "updated_at": "2016-03-29T14:27:32Z",
    "author_association": "NONE",
    "body": "in [19], I think the expected output should be:\n\n```\n DatetimeIndex([], dtype='datetime64[ns]', freq='D')\n```\n\ni.e. the same index as before. I think that was the behaviour in pandas 0.16.x (I haven't had time to check)\n\nI think the behaviour for empty DateTimeIndex should be consistent with other empty indexes, as well as empty numpy arrays.\n\n```\nIn [11]: Index([1,2,3]) + 1\nOut[11]: Int64Index([2, 3, 4], dtype='int64')\n\nIn [12]: Index([]) + 1\nOut[12]: Index([], dtype='object')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/202921992",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12724#issuecomment-202921992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12724",
    "id": 202921992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjkyMTk5Mg==",
    "user": {
      "login": "yerikzheng",
      "id": 1213264,
      "node_id": "MDQ6VXNlcjEyMTMyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1213264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yerikzheng",
      "html_url": "https://github.com/yerikzheng",
      "followers_url": "https://api.github.com/users/yerikzheng/followers",
      "following_url": "https://api.github.com/users/yerikzheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/yerikzheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yerikzheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yerikzheng/subscriptions",
      "organizations_url": "https://api.github.com/users/yerikzheng/orgs",
      "repos_url": "https://api.github.com/users/yerikzheng/repos",
      "events_url": "https://api.github.com/users/yerikzheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yerikzheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T14:30:58Z",
    "updated_at": "2016-03-29T14:30:58Z",
    "author_association": "NONE",
    "body": "It is probably easier to fix this within the holiday.py module, maybe DatetimeIndex _should be_ special.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/202930016",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12724#issuecomment-202930016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12724",
    "id": 202930016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjkzMDAxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T14:41:21Z",
    "updated_at": "2016-03-29T14:41:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@yerikzheng that example is not the same. Those don't have frequencies, so datetimelikes ARE special. Adding a frequency aware object to a non-freq aware is an explicit error.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/202935430",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12724#issuecomment-202935430",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12724",
    "id": 202935430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjkzNTQzMA==",
    "user": {
      "login": "yerikzheng",
      "id": 1213264,
      "node_id": "MDQ6VXNlcjEyMTMyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1213264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yerikzheng",
      "html_url": "https://github.com/yerikzheng",
      "followers_url": "https://api.github.com/users/yerikzheng/followers",
      "following_url": "https://api.github.com/users/yerikzheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/yerikzheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yerikzheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yerikzheng/subscriptions",
      "organizations_url": "https://api.github.com/users/yerikzheng/orgs",
      "repos_url": "https://api.github.com/users/yerikzheng/repos",
      "events_url": "https://api.github.com/users/yerikzheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yerikzheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T14:49:59Z",
    "updated_at": "2016-03-29T14:49:59Z",
    "author_association": "NONE",
    "body": "Yes, thinking about it again I agree with you.  However, I do expect AbstractHolidayCalendar.holidays() method to handle the case for which no holiday is generated by the rule, so this must have broke since 0.17.0 release as it did work correctly before.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/214925717",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12724#issuecomment-214925717",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12724",
    "id": 214925717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDkyNTcxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-27T00:07:50Z",
    "updated_at": "2016-04-27T00:07:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@yerikzheng would love for a PR for this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234285078",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12724#issuecomment-234285078",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12724",
    "id": 234285078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDI4NTA3OA==",
    "user": {
      "login": "nickpollari",
      "id": 12014615,
      "node_id": "MDQ6VXNlcjEyMDE0NjE1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12014615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickpollari",
      "html_url": "https://github.com/nickpollari",
      "followers_url": "https://api.github.com/users/nickpollari/followers",
      "following_url": "https://api.github.com/users/nickpollari/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickpollari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickpollari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickpollari/subscriptions",
      "organizations_url": "https://api.github.com/users/nickpollari/orgs",
      "repos_url": "https://api.github.com/users/nickpollari/repos",
      "events_url": "https://api.github.com/users/nickpollari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickpollari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T15:12:48Z",
    "updated_at": "2016-07-21T15:12:48Z",
    "author_association": "NONE",
    "body": "Funny that I just came across this post. I found this error today with the same exact issue (MLK for start of 1998). I have begun looking into a work around but this definitely used to be supported. It should be fixed in the next release.\n"
  }
]
