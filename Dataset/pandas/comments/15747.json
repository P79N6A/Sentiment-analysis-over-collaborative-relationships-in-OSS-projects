[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287854514",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287854514",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287854514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Nzg1NDUxNA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T18:29:09Z",
    "updated_at": "2017-03-20T18:29:09Z",
    "author_association": "MEMBER",
    "body": "(another advantage of 3. would be that it's easier to implement - but still, I think we would want to change the behaviour on missing labels: namely, to drop them)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287856501",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287856501",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287856501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Nzg1NjUwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T18:35:51Z",
    "updated_at": "2017-03-20T18:39:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref #10549, #10695\r\nxref (slightly) to https://github.com/pandas-dev/pandas/issues/9213, https://github.com/pandas-dev/pandas/issues/9595\r\n@toobaz if you'd pull any nuggets from those would be helpful "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287861711",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287861711",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287861711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Nzg2MTcxMQ==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T18:53:44Z",
    "updated_at": "2017-03-20T18:53:44Z",
    "author_association": "MEMBER",
    "body": "Right: I think #10549 is, as I commented, not really a bug as long as __2.__ is the rule. The reporter is expecting a ``reindex``-like behavior, but then he rightly mentions the fact that it would be undefined for partial indexing, and so he states that he would have expected an error instead. He is in some sense asking for option __1.__ above, but the bug is instead quite orthogonal to the choice between __2.__ and __3.__ (and in both cases, I suggest we solve the problem by stopping inserting ``NaN``s, and we drop missing labels instead).\r\n\r\nOf #10695, I clearly don't like the proposal to add a new indexer, but apart from this they are just asking for option __1.__ above, and I think they are right in preferring it to the current state of things."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287865037",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287865037",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287865037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Nzg2NTAzNw==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T19:05:09Z",
    "updated_at": "2017-03-20T19:05:09Z",
    "author_association": "MEMBER",
    "body": "(I _can_ try to see if it is feasible to have a ``strict`` argument for ``.loc`` which switches from __1.__ to __3.__... but I'm not sure it would be easy to implement)\r\n\r\nBy the way: I guess @shoyer might be interested too\r\n\r\nWorth mentioning that __1.__ is more coherent with ``.loc.__setitem__``, which raises for missing keys (in lists). But then, it does add individual missing keys, so this is again not a very strong argument (I rather think that we should fix ``.loc.__setitem__`` and make it add missing labels if we decide to pick __3.__ - unless with partial indexing of ``MultiIndexes``, where it should probably drop them)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287875508",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287875508",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287875508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Nzg3NTUwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T19:44:04Z",
    "updated_at": "2017-03-20T19:44:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah I would be ok with 1). The reason for the current behavior are twofold:\r\n\r\n1) ``.loc`` and ``.reindex`` should be equivalent (though ``.reindex`` cannot be an lvalue), because it was confusing when to use these. IOW lots of complaints about I want to overwrite this label wether it exists or not (that's why partial setting works).\r\n\r\nnote that I think we are going to get rid of all of the expanding stuff in pandas2 anyhow. You will have to explicitly ``.reindex``  first, then assign.\r\n\r\n2) interactive work with a long list of labels could be confusing when 1 is missing on accident. IOW a typo. Though the counter-argument here is that this error should be raised immediately.\r\n\r\nSo the driving force was actually 1)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287918097",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287918097",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287918097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkxODA5Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T22:29:11Z",
    "updated_at": "2017-03-20T22:29:11Z",
    "author_association": "MEMBER",
    "body": "> 3. you never raise an error for missing labels\r\n\r\nI think this third option needs clarification, as you can still either drop missing labels or introduce NaNs (so in that regard maybe 4 options or a 3a and 3b).\r\n\r\n> [@jreback] note that I think we are going to get rid of all of the expanding stuff in pandas2 anyhow. You will have to explicitly .reindex first, then assign.\r\n\r\nI don't think this is true? (or is there an issue on the pandas2 tracker for this?) For example being to assign one or multiple columns is an expanding indexing operation on assignment, and not an ability we want to loose?\r\n\r\n@jreback When you say \"I would be ok with 1)\", you are OK with `loc` and `reindex` no longer being equivalent? And also with the difference between getting (no enlargement) and setting (enlargement allowed)? As those would be the consequence of choosing for option 1. \r\n\r\n---\r\n\r\nIf we would start fresh, I would, with my current knowledge, be in favor of `loc` being strict for getting (no missing labels allowed), i.e. option 1. \r\n\r\nThe question for me is more: can we justify such a breaking change? (as it will break people's code) Are there ways to ease a transition? (I think in principle we can first have a warning in case it will raise an error in a next release?)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287918155",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287918155",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287918155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkxODE1NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T22:29:26Z",
    "updated_at": "2017-03-20T22:29:26Z",
    "author_association": "MEMBER",
    "body": "cc @pandas-dev/pandas-core "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287918534",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287918534",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287918534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkxODUzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T22:30:55Z",
    "updated_at": "2017-03-20T22:35:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I don't think this is true? (or is there an issue on the pandas2 tracker for this?) For example being to assign one or multiple columns is an expanding indexing operation on assignment, and not an ability we want to loose?\r\n\r\n@jorisvandenbossche I am only talking about row-wise expansion, which is the obvious issue. column assignment of course is unaffected. It *possible* that this will still be ok (the issue is can performant ``.appends`` be done. https://github.com/pandas-dev/pandas2/issues/53), the main issue is the dtype inference / changes. So this would be an error.\r\n\r\n```\r\nIn [1]: s = Series([1,2,3])\r\n\r\nIn [2]: s\r\nOut[2]: \r\n0    1\r\n1    2\r\n2    3\r\ndtype: int64\r\n\r\nIn [3]: s.loc[3] = 'foo'\r\n\r\nIn [4]: s\r\nOut[4]: \r\n0      1\r\n1      2\r\n2      3\r\n3    foo\r\ndtype: object\r\n\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287918936",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287918936",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287918936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkxODkzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T22:32:51Z",
    "updated_at": "2017-03-20T22:32:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The question for me is more: can we justify such a breaking change? (as it will break people's code) Are there ways to ease a transition? (I think in principle we can first have a warning in case it will raise an error in a next release?)\r\n\r\nI think a warning is possible."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287919402",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287919402",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287919402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkxOTQwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T22:34:58Z",
    "updated_at": "2017-03-20T22:34:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @jreback When you say \"I would be ok with 1)\", you are OK with loc and reindex no longer being equivalent? And also with the difference between getting (no enlargement) and setting (enlargement allowed)? As those would be the consequence of choosing for option 1.\r\n\r\nyes I think moving back to a strict separation between ``.reindex`` and ``.loc`` is fine. setting enlargement should be unaffected (and can kick the can down the road about whether to allow it).\r\ngetting enlargement by-definition will now fail (as its essentially a ``.reindex`` with missing labels)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287919855",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287919855",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287919855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkxOTg1NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T22:37:05Z",
    "updated_at": "2017-03-20T22:37:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\n\r\n> I think this third option needs clarification, as you can still either drop missing labels or introduce NaNs (so in that regard maybe 4 options or a 3a and 3b).\r\n\r\nhow is 3b different from 2?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287920114",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287920114",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287920114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkyMDExNA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T22:38:18Z",
    "updated_at": "2017-03-20T22:38:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref https://github.com/pandas-dev/pandas2/issues/32 proposing disallowing setting with (row) enlargement"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287920805",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287920805",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287920805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkyMDgwNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T22:41:36Z",
    "updated_at": "2017-03-20T22:41:36Z",
    "author_association": "MEMBER",
    "body": "And actually https://github.com/pandas-dev/pandas2/issues/21 is related to the proposal here (or at least to option 1)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287924770",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287924770",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287924770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkyNDc3MA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T23:00:24Z",
    "updated_at": "2017-03-20T23:00:24Z",
    "author_association": "MEMBER",
    "body": "I would certainly pick (1) if starting from scratch (I did for xarray), but it's a serious breaking change so it's probably best to save it for pandas 2.0.\r\n\r\nWe discussed this in other issues, but I think we need symmetric behavior for `.loc` with unrecognized keys (for both getitem and setitem). So if we pick (1), we should be sure we have matching behavior prohibiting setting and enlarging, too.\r\n\r\n(3) seems like a strict improvement over what we have now, so I would definitely go for it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287925632",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287925632",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287925632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkyNTYzMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T23:04:55Z",
    "updated_at": "2017-03-20T23:04:55Z",
    "author_association": "MEMBER",
    "body": "> (3) seems like a strict improvement over what we have now, so I would definitely go for it.\r\n\r\n@shoyer What do you mean with 3 ? (see my previous question regarding clarification of this option)\r\n\r\n>  I think we need symmetric behavior for .loc with unrecognized keys (for both getitem and setitem)\r\n\r\nI don't see how this is strictly possible. Assigning a new, non-existant column (`df['A']`) should work, getting a non-existant column with `df['A']` should still raise a KeyError (or would you let `.loc` differ here?)\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287926637",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287926637",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287926637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkyNjYzNw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T23:10:19Z",
    "updated_at": "2017-03-20T23:10:19Z",
    "author_association": "MEMBER",
    "body": "> @shoyer What do you mean with 3 ? (see my previous question regarding clarification of this option)\r\n\r\nI meant (3) with introducing NaNs. Although it does indeed get really messy, e.g., with MultiIndex, so arguably we aren't even doing this consistently already.\r\n\r\n> > I think we need symmetric behavior for .loc with unrecognized keys (for both getitem and setitem)\r\n> I don't see how this is strictly possible. Assigning a new, non-existant column (df['A']) should work, getting a non-existant column with df['A'] should still raise a KeyError (or would you let .loc differ here?)\r\n\r\nSorry, yes, I meant all row indexing, and probably most but not all column indexing. We will need an exception to the rules for setting new columns, at least one at a time."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287928728",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287928728",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287928728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkyODcyOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T23:21:31Z",
    "updated_at": "2017-03-20T23:21:31Z",
    "author_association": "MEMBER",
    "body": "One possibility is to limit this discussion to only *getting*. \r\nFor the setting, there is clearly still a lot more discussion needed (which kind of row / column enlargment would we like to allow? Which not?), and also a lot more code that will be broken by this (things as `s[..]` and `df.loc[..]` are widely used for enlarging series/frames I think). This will not so easily be achieved, and certainly needs to wait until pandas 2.\r\n\r\nIf we only speak about getting, eg\r\n\r\n```\r\nIn [4]: df = pd.DataFrame({'A':[1,2], 'B':[3,4]})\r\n\r\nIn [5]: df.loc[:,['A', 'C']]\r\nOut[5]: \r\n   A   C\r\n0  1 NaN\r\n1  2 NaN\r\n```\r\nI think something like that is a lot less common to be intended, and more likely to be an user error. \r\nFurthermore, for getting you already have the alternative of `reindex` if you want this behaviour. \r\nAnd thus (with a good deprecation strategy, I also think a warning should be possible, although maybe complicated to implement) more realistic to tackle on the shorter term?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287932375",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287932375",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287932375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkzMjM3NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T23:41:28Z",
    "updated_at": "2017-03-20T23:41:28Z",
    "author_association": "MEMBER",
    "body": "@toobaz see the referenced issues (https://github.com/pandas-dev/pandas2/issues/32 and https://github.com/pandas-dev/pandas2/issues/21)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287935918",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287935918",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287935918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkzNTkxOA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T00:02:27Z",
    "updated_at": "2017-03-21T00:02:27Z",
    "author_association": "MEMBER",
    "body": "> for getting you already have the alternative of reindex\r\n\r\n(Replying in general to comparisons of ``loc`` and ``reindex``, also in other comments): I can understand that on the dev side the two are similar, and that past discussions were based on this comparison... but I think for the typical user they are completely different beasts both conceptually (one is an indexer, the other is a modifier that returns a copy) and in the docs.\r\n\r\nThat said, I agree to keep the setting discussion separated. And I agree with @jorisvandenbossche that with columns it is even more true that missing labels are usually symptoms of an error.\r\n\r\n> I meant (3) with introducing NaNs\r\n\r\nIf we go for (3), is there any real downside in just dropping the missing labels?! Because the downside of introducing NaNs is, as you (@shoyer) mention, that we don't know how to extend to partial indexing of MultiIndex, and also the undesired type changes when for instance working with ints or bools. And also that, again, one does not expect a getter indexer to expand the index - that is, to \"get\" something which is not there."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287936873",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287936873",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287936873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkzNjg3Mw==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T00:08:14Z",
    "updated_at": "2017-03-21T00:08:33Z",
    "author_association": "MEMBER",
    "body": "> how is 3b different from 2?\r\n\r\n2 raises if asked a list of all missing labels, 3b would return an all-NaN object."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287937077",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287937077",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287937077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkzNzA3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T00:09:30Z",
    "updated_at": "2017-03-21T00:09:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "> 2 would raise if asked a list of all missing labels, 3b would return an all-NaN object.\r\n\r\nso what is 3a then?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287937153",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287937153",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287937153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkzNzE1Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T00:09:59Z",
    "updated_at": "2017-03-21T00:09:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@toobaz you can feel free to actually edit the top-section (of options)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287937178",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287937178",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287937178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkzNzE3OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T00:10:08Z",
    "updated_at": "2017-03-21T00:11:34Z",
    "author_association": "MEMBER",
    "body": "> so what is 3a then?\r\n\r\nDrop the missing labels silently, without introducing NaNs (which is actually what MultiIndex does when indexing certain levels, as consequence of not being able to introduce NaNs)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287938009",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-287938009",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 287938009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkzODAwOQ==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T00:15:45Z",
    "updated_at": "2017-03-21T00:15:45Z",
    "author_association": "MEMBER",
    "body": "(Updated the description)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/333643984",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-333643984",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 333643984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzY0Mzk4NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-02T19:46:56Z",
    "updated_at": "2017-10-02T19:46:56Z",
    "author_association": "MEMBER",
    "body": "@toobaz the PR https://github.com/pandas-dev/pandas/pull/17295 is going to close this issue, but only deals with single Index, not MultiIndex. Do you know from the top of your head the situation for MultiIndex or whether there is an issues that describes that aspect ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/333684102",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-333684102",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 333684102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzY4NDEwMg==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-02T22:32:58Z",
    "updated_at": "2017-10-02T22:35:39Z",
    "author_association": "MEMBER",
    "body": "> Do you know from the top of your head the situation for MultiIndex or whether there is an issues that describes that aspect ?\r\n\r\nI think currently ``MultiIndex``es don't exhibit any particular issue related to this. Certainly with #17295 flat indexes will emit a warning while ``MultiIndex``es won't, but that can be addressed in a separate PR. I can try to have a look but not immediately."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/333774548",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-333774548",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 333774548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzc3NDU0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T08:26:51Z",
    "updated_at": "2017-10-03T08:26:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "MI need a separate issue (might be one we can hijack)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/333781532",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-333781532",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 333781532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzc4MTUzMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T08:58:15Z",
    "updated_at": "2017-10-03T08:58:15Z",
    "author_association": "MEMBER",
    "body": "> I think currently MultiIndexes don't exhibit any particular issue related to this.\r\n\r\nThey have exactly the same issue no? (in that they allow non existing labels in a list) Copying from your comment on the PR (https://github.com/pandas-dev/pandas/pull/17295#issuecomment-324014362):\r\n\r\n```\r\nIn [132]: df = pd.DataFrame([[i] for i in range(3)], index=pd.MultiIndex.from_product([[1], [5,6,7]]))\r\n\r\nIn [133]: df\r\nOut[133]: \r\n     0\r\n1 5  0\r\n  6  1\r\n  7  2\r\n\r\nIn [134]: df.loc[[(1,5), (3,7)]]\r\nOut[134]: \r\n       0\r\n1 5  0.0\r\n3 7  NaN\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/333790082",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15747#issuecomment-333790082",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15747",
    "id": 333790082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzc5MDA4Mg==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T09:33:38Z",
    "updated_at": "2017-10-03T09:33:38Z",
    "author_association": "MEMBER",
    "body": "> They have exactly the same issue no?\r\n\r\nYes, sorry, I wasn't clear. They currently behave like flat indexes, and in this sense they don't exhibit any \"particular\" issue, and they will need a PR analogous to #17295 for homogeneity with flat indexes.\r\n\r\n> MI need a separate issue (might be one we can hijack)\r\n\r\nOpened #17758 ... #15452 is related but does need a different fix.\r\n"
  }
]
