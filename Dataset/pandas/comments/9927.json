[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/94119911",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9927#issuecomment-94119911",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9927",
    "id": 94119911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MTE5OTEx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-18T02:45:28Z",
    "updated_at": "2015-04-18T02:45:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @JanSchulz\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/94158080",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9927#issuecomment-94158080",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9927",
    "id": 94158080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MTU4MDgw",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-18T11:33:30Z",
    "updated_at": "2015-05-11T21:00:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm against `s.add_categories(s2, take_new=True)`: how should the whole things be ordered? If it is an ordered cat, the order has meaning and a user will run into surprises, no matter how good we document that :-(\n\nA bad example for \"append the difference\": take two series, one [\"a\",\"b\"] and one [\"a\",\"c\"] and then use the above with [\"a\",\"b\",\"c\"] -> you get two different categories, one [\"a\",\"b\",\"c\"] and one [\"a\",\"c\",\"b\"].\n\nWe do have `set_categories(new)`, which is more well defined (i.e. take the order from new, even if they are currently unused).\n\nI think accepting ndarray/ndex would be good, but with the same restraints as the current list.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/94187542",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9927#issuecomment-94187542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9927",
    "id": 94187542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MTg3NTQy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-18T17:56:03Z",
    "updated_at": "2015-04-18T17:56:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @JanSchulz I am not actually suggesting anything new, here, just appending, where the order is not defined, except that it occurs AFTER the existing categories (as `.add_categories` does now), see #9929 \n\nI think this is a very natural thing to do, and pretty awkward to force the user to make sure that they are not adding duplicate categories. Of course they _can_ use `.set_categories`, but then what is the point of `.add_categories` then?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/94191151",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9927#issuecomment-94191151",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9927",
    "id": 94191151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MTkxMTUx",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-18T18:55:44Z",
    "updated_at": "2016-06-06T13:59:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "regarding \"what's the point of add_cats\": for the usecases, which categorical should IMO optimized for (\"lickert scales\" or \"american states\"), this method is mostly useless: I can't really think about a usecase where `set_categories` isn't better or at least \"good enough\" (but then, I only only used questionairs). As far as I remember, it was added in the discussion to round the API off (in addition to `add_categories`). \n\nIMO this issue/SO question is another \"workaround\"/indicator for the \"categoricals as memory efficient strings\": if you have a need for setting arbitrary length categories (e.g. `s.unique()`) without bothering about the order or what you actually add as categoricals then a memory efficient string type would be better. This is also nicely visible in the SO question: \"I'm trying to reduce the size of ~300 csv files (about a billion rows) by replacing lengthy fields with shorter, categorical, values[...]\"\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/94425660",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9927#issuecomment-94425660",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9927",
    "id": 94425660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0NDI1NjYw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-20T11:14:04Z",
    "updated_at": "2015-04-20T11:14:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "see #9929\n\nseems reasonable to me. @shoyer @jorisvandenbossche \n\n@JanSchulz I not sure where you think this _doesn't_ apply to Categoricals. I want to add a bunch of categories. Not saying they are in any particular order, just that we don't rewrite the existing category mappings. I think that is a reasonable API guarantee.\n\nThis is actually what we do in reality now, this just codifies it and makes it a convient to do. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/94552631",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9927#issuecomment-94552631",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9927",
    "id": 94552631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTUyNjMx",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-20T19:53:17Z",
    "updated_at": "2015-04-20T19:59:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just think that a report starting with \"I'm trying to reduce the size...\" is not something which should be used to influence the API design of `Categorical` but should be used to model a new `MemoryEfficientString` (which maybe has a common superclass with `Categorical`...).\n\nRegarding the the usecases: I think that `add_categories` and `remove_categories` are not really needed if you only work with survey data (which is what I did and I've no experience with any other categorical data apart from the \"I want more memory efficient strings\" cases -> if there are more and they need the above methods, then my point is moot here), where you have something like 7 item lickert scales or 200 names of states: for them it makes as much (or more) sense to simple use `set_categories` as you start with the complete list of states or even want to have a defined order (lickert). \n\nIf you have a cat with `ordered==True`, then `s.add_categories(s2, take_new=True)` is IMO plain madness, as you can't be sure what the final order of the categories is (the a-b-c example above). \n\nEven if you want \"append in the end\", a simple `s.cat.add_categories(set(all_cats)-set(s.cat.categories))` is IMO not so terrible problematic to warrant a new kwarg (and I still think that `s.cat.set_categories(all_cats)` is better/easier/less error prone and IMO the more common case if you need a special order, where you anyway need to have the re-code/factorize).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/94975228",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9927#issuecomment-94975228",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9927",
    "id": 94975228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0OTc1MjI4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-21T23:39:19Z",
    "updated_at": "2015-04-21T23:39:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz ok, closing for now (I did merge the bug fix though, but separate issue)\n"
  }
]
