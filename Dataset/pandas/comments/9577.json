[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77617122",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9577#issuecomment-77617122",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9577",
    "id": 77617122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjE3MTIy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-06T19:11:16Z",
    "updated_at": "2015-03-06T19:11:16Z",
    "author_association": "MEMBER",
    "body": "This needs tests. Does it work on non-numeric dtypes? (e.g., strings?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77700200",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9577#issuecomment-77700200",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9577",
    "id": 77700200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzAwMjAw",
    "user": {
      "login": "mgdadv",
      "id": 11195807,
      "node_id": "MDQ6VXNlcjExMTk1ODA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11195807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgdadv",
      "html_url": "https://github.com/mgdadv",
      "followers_url": "https://api.github.com/users/mgdadv/followers",
      "following_url": "https://api.github.com/users/mgdadv/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgdadv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgdadv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgdadv/subscriptions",
      "organizations_url": "https://api.github.com/users/mgdadv/orgs",
      "repos_url": "https://api.github.com/users/mgdadv/repos",
      "events_url": "https://api.github.com/users/mgdadv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgdadv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-07T17:40:07Z",
    "updated_at": "2015-03-07T17:40:07Z",
    "author_association": "NONE",
    "body": "The latest commit should support all the methods from `interpolate()` and adds a test which checks for the same result as `interpolate()`. I'm not sure if this is a reasonable way to test this. The test is only for the DataFrame.\n\nUnfortunately, it does not seem to work on non-numeric types, since scipy interpolation does not seem to support that case. I'm also unsure what distance metric should be used for strings.\n\nRegarding your code comment, I changed the `axis=1` override to only happen if the incoming axis is None and one of the interpolate methods is used.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77742246",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9577#issuecomment-77742246",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9577",
    "id": 77742246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzQyMjQ2",
    "user": {
      "login": "mgdadv",
      "id": 11195807,
      "node_id": "MDQ6VXNlcjExMTk1ODA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11195807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgdadv",
      "html_url": "https://github.com/mgdadv",
      "followers_url": "https://api.github.com/users/mgdadv/followers",
      "following_url": "https://api.github.com/users/mgdadv/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgdadv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgdadv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgdadv/subscriptions",
      "organizations_url": "https://api.github.com/users/mgdadv/orgs",
      "repos_url": "https://api.github.com/users/mgdadv/repos",
      "events_url": "https://api.github.com/users/mgdadv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgdadv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-08T10:21:36Z",
    "updated_at": "2015-03-08T10:21:36Z",
    "author_association": "NONE",
    "body": "Regarding 'nearest', I can see these different scenarios:\n1. index and values are both numeric.\n   This should be mostly taken care of with calling out to `interpolate`.\n2. index is numeric and values are non-numeric (in particular strings).\n   This does not work with the above patch and should certainly be supported.\n3. index is non-numeric and values are either numeric or non-numeric.\n   The index still needs a distance metric (probably user defineable).\n   This case seems more experimental and I'm not sure if it is even worthwhile doing.\n\nRegarding case (2), this is what I am currently playing with:\n\n``` python\nimport numpy as np\nimport pandas as pd\nfrom pandas.util.testing import assert_frame_equal\n\ndf = pd.DataFrame({'A': [\"a\",np.NaN,\"c\",np.NaN,\"e\"]}, index=[1,2,5,9,10])\nexpected = pd.DataFrame({'A': [\"a\",\"a\",\"c\",\"e\",\"e\"]}, index=[1,2,5,9,10])\n\nnan_inds = df[df.isnull().any(axis=1)].index.values\ndf_no_nan = df.dropna()\n\nresult = df.copy()\nresult.loc[result.isnull().any(axis=1), 'A'] = [result.loc[df_no_nan.index[df_no_nan.index.get_loc(i, method='nearest')]].values[0] for i in nan_inds]\n\nassert_frame_equal(result, expected)\n```\n\nThis seems very convoluted. I would be grateful for hints.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/100510905",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9577#issuecomment-100510905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9577",
    "id": 100510905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDUxMDkwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-09T16:10:18Z",
    "updated_at": "2015-05-09T16:10:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing pls reopen if/when updated\n"
  }
]
