[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317954853",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-317954853",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 317954853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzk1NDg1Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-26T05:52:22Z",
    "updated_at": "2017-07-26T05:56:32Z",
    "author_association": "MEMBER",
    "body": "Let me address 1 and 3 first: IIUC, this caching should only speed up performance.  The results you get with or without caching should not be different.  The fact that you are getting different results indicates something is going weird with the caching.\r\n\r\nIn light of that reasoning, I would expect that caching should default to `True`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317955015",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-317955015",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 317955015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzk1NTAxNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-26T05:53:29Z",
    "updated_at": "2017-07-26T05:53:53Z",
    "author_association": "MEMBER",
    "body": "For 2, I think that's worthy enough as its own PR.  I'm not sure I fully agree with the patch (i.e. why do we need another special-case `to_object_array` method), but even so, you should separate that out as another PR and submit that for review (along with tests).\r\n\r\nAfter that gets merged, you can rebase this PR onto that one."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318134651",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-318134651",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 318134651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODEzNDY1MQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-26T18:02:27Z",
    "updated_at": "2017-07-26T18:03:30Z",
    "author_association": "MEMBER",
    "body": "@gfyoung In regards to my 3rd point, I agree that the results should be the same whether `cache_datetime=True/False`. I am just curious whether `pd.to_datetime(Series(...), utc=True)` should return a `dtype: datetime64[ns, UTC]` in the first place.\r\n\r\n```\r\nIn [9]: pd.__version__\r\nOut[9]: u'0.20.3'\r\n\r\nIn [10]: test_dates = ['20130101 00:00:00'] * 10\r\n\r\nIn [11]: s = pd.Series(test_dates)\r\n\r\n# Should this result have a datetime64[ns, UTC] dtype like Out [13]?\r\nIn [12]: pd.to_datetime(s, utc=True)\r\nOut[12]:\r\n0   2013-01-01\r\n1   2013-01-01\r\n2   2013-01-01\r\n3   2013-01-01\r\n4   2013-01-01\r\n5   2013-01-01\r\n6   2013-01-01\r\n7   2013-01-01\r\n8   2013-01-01\r\n9   2013-01-01\r\ndtype: datetime64[ns]\r\n\r\nIn [13]: pd.to_datetime(test_dates, utc=True)\r\nOut[13]:\r\nDatetimeIndex(['2013-01-01', '2013-01-01', '2013-01-01', '2013-01-01',\r\n               '2013-01-01', '2013-01-01', '2013-01-01', '2013-01-01',\r\n               '2013-01-01', '2013-01-01'],\r\n              dtype='datetime64[ns, UTC]', freq=None)\r\n\r\n# I think this is essentially the result of my caching implementation. \r\nIn [14]: pd.Series([pd.Timestamp('20130101 00:00:00', tz='utc')]*10)\r\nOut[14]:\r\n0   2013-01-01 00:00:00+00:00\r\n1   2013-01-01 00:00:00+00:00\r\n2   2013-01-01 00:00:00+00:00\r\n3   2013-01-01 00:00:00+00:00\r\n4   2013-01-01 00:00:00+00:00\r\n5   2013-01-01 00:00:00+00:00\r\n6   2013-01-01 00:00:00+00:00\r\n7   2013-01-01 00:00:00+00:00\r\n8   2013-01-01 00:00:00+00:00\r\n9   2013-01-01 00:00:00+00:00\r\ndtype: datetime64[ns, UTC]\r\n```\r\n\r\nThis discussion may be more appropriate in a separate issue if it is one. I may not hit this though once I refactor this implementation. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318163025",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-318163025",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 318163025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODE2MzAyNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-26T19:51:36Z",
    "updated_at": "2017-07-26T19:51:36Z",
    "author_association": "MEMBER",
    "body": "> I am just curious whether pd.to_datetime(Series(...), utc=True) should return a dtype: datetime64[ns, UTC] in the first place.\r\n\r\nI think it should.  `datetime64` is standard, and you specified `utc=True`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318164374",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-318164374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 318164374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODE2NDM3NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-26T19:56:20Z",
    "updated_at": "2017-07-26T19:56:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "there is another issue about utc=True\r\n\r\nso it's out of scope for this PR"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318170873",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-318170873",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 318170873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODE3MDg3Mw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-26T20:21:36Z",
    "updated_at": "2017-07-26T20:21:36Z",
    "author_association": "MEMBER",
    "body": "Thanks for confirming @jreback and @gfyoung. I will work on implementing your suggestions."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/331650723",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-331650723",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 331650723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTY1MDcyMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-23T16:57:03Z",
    "updated_at": "2017-09-23T16:57:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you rebase / update"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332057358",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-332057358",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 332057358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjA1NzM1OA==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T01:15:30Z",
    "updated_at": "2017-11-11T18:39:21Z",
    "author_association": "NONE",
    "body": "Hello @mroeschke! Thanks for updating the PR.\n\n\n\n\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on November 11, 2017 at 18:39 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332058699",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-332058699",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 332058699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjA1ODY5OQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T01:23:59Z",
    "updated_at": "2017-09-26T01:29:36Z",
    "author_association": "MEMBER",
    "body": "Here are the results from `timeseries.ToDatetime` ASVs.\r\n\r\n```\r\n>>>asv continuous -f 1.1 upstream/master fix_11665 -b timeseries.ToDatetime\r\n      before           after         ratio\r\n     [e0fe5cc6]       [72e99da0]\r\n+     7.91±0.04ms           16.5ms     2.08  timeseries.ToDatetime.time_iso8601_format_no_sep\r\n+     8.07±0.03ms      16.5±0.04ms     2.04  timeseries.ToDatetime.time_iso8601_nosep\r\n+     8.18±0.01ms      16.4±0.03ms     2.00  timeseries.ToDatetime.time_iso8601\r\n+     8.34±0.02ms      16.5±0.01ms     1.98  timeseries.ToDatetime.time_iso8601_format\r\n+     12.5±0.07ms      14.8±0.05ms     1.18  timeseries.ToDatetime.time_format_YYYYMMDD\r\n-        3.49±0ms         2.98±0ms     0.86  timeseries.ToDatetime.time_cache_with_dup_string_dates_and_format\r\n-     3.54±0.01ms      2.98±0.01ms     0.84  timeseries.ToDatetime.time_cache_with_dup_string_dates\r\n-     8.96±0.03ms      7.12±0.01ms     0.79  timeseries.ToDatetime.time_cache_with_dup_seconds_and_unit\r\n-           2.11s       44.1±0.2ms     0.02  timeseries.ToDatetime.time_format_exact\r\n-           2.02s      30.5±0.04ms     0.02  timeseries.ToDatetime.time_format_no_exact\r\n-       407±0.3ms      3.35±0.01ms     0.01  timeseries.ToDatetime.time_cache_with_dup_string_tzoffset_dates\r\n\r\nSOME BENCHMARKS HAVE CHANGED SIGNIFICANTLY.\r\n```\r\n\r\nAddtionally, I edited most all the tests in `pandas/tests/indexes/datetimes/test_tools.py` to include `@pytest.mark.parametrize` on the `cache` keyword (`True` and `False`)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332079320",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-332079320",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 332079320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjA3OTMyMA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-09-26T03:54:45Z",
    "updated_at": "2017-09-26T03:54:45Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=h1) Report\n> Merging [#17077](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/5279a172a86ac22250c5a382708e23917df79744?src=pr&el=desc) will **decrease** coverage by `0.03%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/17077/graphs/tree.svg?token=eZ4WkYLtcO&src=pr&height=150&width=650)](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #17077      +/-   ##\n==========================================\n- Coverage   91.25%   91.22%   -0.04%     \n==========================================\n  Files         163      163              \n  Lines       49810    49829      +19     \n==========================================\n- Hits        45456    45455       -1     \n- Misses       4354     4374      +20\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.02% <100%> (-0.02%)` | :arrow_down: |\n| #single | `40.32% <50%> (-0.06%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/indexes/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZXMucHk=) | `95.53% <ø> (ø)` | :arrow_up: |\n| [pandas/core/tools/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvdG9vbHMvZGF0ZXRpbWVzLnB5) | `86.23% <100%> (+0.98%)` | :arrow_up: |\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `25% <0%> (-58.34%)` | :arrow_down: |\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `63.38% <0%> (-1.82%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.73% <0%> (-0.1%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=footer). Last update [5279a17...75eccc5](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332079322",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-332079322",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 332079322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjA3OTMyMg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-09-26T03:54:46Z",
    "updated_at": "2017-11-11T20:35:37Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=h1) Report\n> Merging [#17077](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/3493abaa9c47e39b410752833c901fd27f5b3a76?src=pr&el=desc) will **decrease** coverage by `0.03%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/17077/graphs/tree.svg?token=eZ4WkYLtcO&width=650&src=pr&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #17077      +/-   ##\n==========================================\n- Coverage   91.42%   91.39%   -0.04%     \n==========================================\n  Files         163      163              \n  Lines       50064    50091      +27     \n==========================================\n+ Hits        45773    45779       +6     \n- Misses       4291     4312      +21\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.2% <100%> (-0.02%)` | :arrow_down: |\n| #single | `40.36% <53.12%> (-0.06%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/tools/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvdG9vbHMvZGF0ZXRpbWVzLnB5) | `84.48% <100%> (+1.51%)` | :arrow_up: |\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `25% <0%> (-58.34%)` | :arrow_down: |\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `63.38% <0%> (-1.82%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.8% <0%> (-0.1%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=footer). Last update [3493aba...07fa22d](https://codecov.io/gh/pandas-dev/pandas/pull/17077?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334353541",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-334353541",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 334353541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDM1MzU0MQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-05T04:10:03Z",
    "updated_at": "2017-10-05T04:10:03Z",
    "author_association": "MEMBER",
    "body": "Tests are passing now and here are the latest asv results:\r\n\r\n```\r\n>>> asv continuous -f 1.1 upstream/master fix_11665 -b timeseries.ToDatetime\r\n before           after         ratio\r\n     [37860a5f]       [bdff633d]\r\n+     8.05±0.05ms      16.3±0.09ms     2.02  timeseries.ToDatetime.time_iso8601\r\n+     7.99±0.06ms      15.8±0.09ms     1.98  timeseries.ToDatetime.time_iso8601_nosep\r\n+     8.53±0.06ms       16.5±0.3ms     1.94  timeseries.ToDatetime.time_iso8601_format_no_sep\r\n+     8.72±0.02ms      16.0±0.04ms     1.84  timeseries.ToDatetime.time_iso8601_format\r\n+      12.5±0.1ms      14.6±0.08ms     1.17  timeseries.ToDatetime.time_format_YYYYMMDD\r\n-        3.53±0ms         3.14±0ms     0.89  timeseries.ToDatetime.time_cache_with_dup_string_dates_and_format\r\n-     8.18±0.03ms         7.25±0ms     0.89  timeseries.ToDatetime.time_cache_with_dup_seconds_and_unit\r\n-           2.07s      47.7±0.02ms     0.02  timeseries.ToDatetime.time_format_exact\r\n-           1.96s      31.7±0.02ms     0.02  timeseries.ToDatetime.time_format_no_exact\r\n-       399±0.5ms      3.51±0.01ms     0.01  timeseries.ToDatetime.time_cache_with_dup_string_tzoffset_dates\r\n\r\nSOME BENCHMARKS HAVE CHANGED SIGNIFICANTLY.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334423446",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-334423446",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 334423446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDQyMzQ0Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-05T10:19:58Z",
    "updated_at": "2017-10-05T10:19:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "what is the 2x slowdown on some of the existing tests? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334467809",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-334467809",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 334467809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDQ2NzgwOQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-05T13:39:58Z",
    "updated_at": "2017-10-05T13:39:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "It looks like the iso8601 path is so fast the caching always hurts - I think that makes sense, that conversion shouldn't be much more expensive than hashing, but not sure how to handle it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/335324856",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-335324856",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 335324856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTMyNDg1Ng==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-10T00:28:05Z",
    "updated_at": "2017-10-10T00:28:05Z",
    "author_association": "MEMBER",
    "body": "The 2x slowdown occurred with iso8601 strings dates without any duplicates. I've attached the profile below of the benchmark with the largest slowdown. It looks like it's expensive put the strings (objects) through  `algorithms.unique` and then continue down the regular conversion path since there are no duplicates. \r\n```\r\nIn [3]: rng = date_range(start='1/1/2000', periods=20000, freq='H')\r\n\r\nIn [4]: strings = rng.strftime('%Y-%m-%d %H:%M:%S').tolist()\r\n\r\nIn [5]: cProfile.run('to_datetime(strings)', sort='cumtime')\r\n         273 function calls (270 primitive calls) in 0.017 seconds\r\n\r\n   Ordered by: cumulative time\r\n\r\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\r\n        1    0.000    0.000    0.017    0.017 <string>:1(<module>)\r\n        1    0.001    0.001    0.017    0.017 datetimes.py:39(to_datetime)\r\n        1    0.000    0.000    0.009    0.009 datetimes.py:207(_convert_listlike)\r\n        1    0.008    0.008    0.008    0.008 {pandas._libs.tslib.array_to_datetime}\r\n        1    0.000    0.000    0.007    0.007 datetimes.py:313(_maybe_convert_cache)\r\n        1    0.000    0.000    0.007    0.007 algorithms.py:276(unique)\r\n        1    0.005    0.005    0.005    0.005 {method 'unique' of 'pandas._libs.hashtable.PyObjectHashTable' objects}\r\n        1    0.000    0.000    0.001    0.001 algorithms.py:164(_ensure_arraylike)\r\n        2    0.001    0.001    0.001    0.001 {pandas._libs.lib.infer_dtype}\r\n        1    0.000    0.000    0.001    0.001 algorithms.py:132(_reconstruct_data)\r\n        2    0.001    0.000    0.001    0.000 {numpy.core.multiarray.array}\r\n        1    0.000    0.000    0.001    0.001 algorithms.py:189(_get_hashtable_algo)\r\n        1    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}\r\n      114    0.000    0.000    0.000    0.000 {isinstance}\r\n    11/10    0.000    0.000    0.000    0.000 common.py:1773(_get_dtype_type)\r\n        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.list_to_object_array}\r\n      2/1    0.000    0.000    0.000    0.000 _decorators.py:86(wrapper)\r\n        1    0.000    0.000    0.000    0.000 datetimes.py:269(__new__)\r\n        3    0.000    0.000    0.000    0.000 common.py:1545(is_bool_dtype)\r\n        1    0.000    0.000    0.000    0.000 algorithms.py:39(_ensure_data)\r\n        6    0.000    0.000    0.000    0.000 dtypes.py:85(is_dtype)\r\n        3    0.000    0.000    0.000    0.000 common.py:334(is_datetime64tz_dtype)\r\n        3    0.000    0.000    0.000    0.000 common.py:297(is_datetime64_dtype)\r\n        1    0.000    0.000    0.000    0.000 datetimes.py:579(_simple_new)\r\n       12    0.000    0.000    0.000    0.000 generic.py:7(_check)\r\n        3    0.000    0.000    0.000    0.000 common.py:478(is_categorical_dtype)\r\n        1    0.000    0.000    0.000    0.000 common.py:1049(is_datetime64_ns_dtype)\r\n        2    0.000    0.000    0.000    0.000 dtypes.py:428(construct_from_string)\r\n        1    0.000    0.000    0.000    0.000 common.py:1722(_get_dtype)\r\n        3    0.000    0.000    0.000    0.000 common.py:85(is_object_dtype)\r\n       18    0.000    0.000    0.000    0.000 {getattr}\r\n        2    0.000    0.000    0.000    0.000 common.py:409(is_period_dtype)\r\n        3    0.000    0.000    0.000    0.000 abc.py:128(__instancecheck__)\r\n        2    0.000    0.000    0.000    0.000 inference.py:234(is_list_like)\r\n        2    0.000    0.000    0.000    0.000 dtypes.py:370(__new__)\r\n        2    0.000    0.000    0.000    0.000 common.py:873(is_unsigned_integer_dtype)\r\n        2    0.000    0.000    0.000    0.000 dtypes.py:554(is_dtype)\r\n        2    0.000    0.000    0.000    0.000 common.py:824(is_signed_integer_dtype)\r\n        2    0.000    0.000    0.000    0.000 common.py:1493(is_float_dtype)\r\n        8    0.000    0.000    0.000    0.000 {hasattr}\r\n       11    0.000    0.000    0.000    0.000 {issubclass}\r\n      6/5    0.000    0.000    0.000    0.000 {len}\r\n        1    0.000    0.000    0.000    0.000 common.py:442(is_interval_dtype)\r\n        1    0.000    0.000    0.000    0.000 dtypes.py:676(is_dtype)\r\n        4    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)\r\n        5    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}\r\n        1    0.000    0.000    0.000    0.000 numeric.py:463(asarray)\r\n        2    0.000    0.000    0.000    0.000 dtypes.py:270(construct_from_string)\r\n        2    0.000    0.000    0.000    0.000 {method 'search' of '_sre.SRE_Pattern' objects}\r\n        4    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}\r\n        2    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_object}\r\n        1    0.000    0.000    0.000    0.000 base.py:558(__len__)\r\n        1    0.000    0.000    0.000    0.000 base.py:552(_reset_identity)\r\n        1    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x7f88fb67a4c0}\r\n        1    0.000    0.000    0.000    0.000 {pandas._libs.tslibs.timezones.maybe_get_tz}\r\n        1    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}\r\n        1    0.000    0.000    0.000    0.000 base.py:467(_deepcopy_if_needed)\r\n        1    0.000    0.000    0.000    0.000 frequencies.py:391(to_offset)\r\n        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336396262",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-336396262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 336396262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjM5NjI2Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T09:10:15Z",
    "updated_at": "2017-10-13T09:10:15Z",
    "author_association": "MEMBER",
    "body": "Given the potential slowdown, can't we add it as optional keyword? (so False by default)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336646473",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-336646473",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 336646473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjY0NjQ3Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-14T16:27:27Z",
    "updated_at": "2017-10-14T16:28:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "you need to benchmark on different sizes with and w/o duplicates to figure out the cutoff.\r\n\r\nIOW n=[1000, 10000, 100000] or something\r\n\r\nI suspect just making the cutoff higher will make ``cache=True`` a good defaultl.\r\n\r\nalso its is quite fast do call ``pd.Index(...).is_unique`` after the size cutoff, but before actual parsing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/338116879",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-338116879",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 338116879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODExNjg3OQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-20T06:22:44Z",
    "updated_at": "2017-10-20T06:22:44Z",
    "author_association": "MEMBER",
    "body": "Apologies for the delay on my end with this PR.\r\n\r\nIt doesn't appear that there's a cutoff where a `cache=True` default avoids a slowdown, unless we know that all the dates are duplicates. Might be worth defaulting to `cache=False` with guidelines on when to set it to True. \r\n\r\nI've benchmarked the largest slowdown (parsing a date string) altering the number of dates to parse and different proportion of duplicate values (0 = all unique, 1 = all duplicate). The table below shows the timing ratios of `cache=True` time / `cache=False` times:\r\n```\r\nProportion of Duplicate Values       0.0       0.2       0.4       0.6  \\\r\nNumber of Values                                                         \r\n1000.0                          1.717877  5.202867  4.594803  1.009279   \r\n10000.0                         1.413974  3.235636  2.709920  2.395477   \r\n100000.0                        1.878788  4.001020  3.401219  2.504916   \r\n1000000.0                       2.320983  5.392797  3.579101  3.050970   \r\n\r\nProportion of Duplicate Values       0.8       1.0  \r\nNumber of Values                                    \r\n1000.0                          1.009684  3.867605  \r\n10000.0                         2.008572  1.289517  \r\n100000.0                        1.798609  0.946278  \r\n1000000.0                       2.138899  0.969332 \r\n```\r\n\r\nCode to generate table:\r\n```\r\nfrom timeit import Timer\r\nfrom datetime import datetime, timedelta\r\n\r\nimport pandas as pd\r\nimport numpy as np\r\nsizes = np.logspace(3, 6, 4)\r\nproportions = np.linspace(0, 1, 6)\r\nbase = '1901-01-01 00:00:00'\r\nfmt = '%Y-%m-%d %H:%M:%S'\r\nunique_base = datetime.strptime(base, fmt) + timedelta(seconds=1)\r\nresults = []\r\nfor size in sizes:\r\n    for prop_dupes in proportions:\r\n        num_dupes = int(size * prop_dupes)\r\n        num_uniques = int(size * (1 - prop_dupes))\r\n        uniques = pd.date_range(unique_base, freq='s', periods=num_uniques).strftime(fmt).tolist()\r\n        dupes = [base] * num_dupes\r\n        data = dupes + uniques\r\n        exec_time_true = Timer(lambda : pd.to_datetime(data, cache=True)).repeat(number=10)\r\n        exec_time_false = Timer(lambda : pd.to_datetime(data, cache=False)).repeat(number=10)\r\n        true_false_time_ratio = min(exec_time_true) / min(exec_time_false)\r\n        result = [size, prop_dupes, true_false_time_ratio]\r\n        results.append(result)\r\nnum_results = pd.DataFrame(results, columns=['Number of Values',\r\n                                             'Proportion of Duplicate Values',\r\n                                             'Cache True/False Time Ratio'])\r\nnum_results.pivot('Number of Values', 'Proportion of Duplicate Values', 'Cache True/False Time Ratio')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/338125564",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-338125564",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 338125564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODEyNTU2NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-20T07:15:02Z",
    "updated_at": "2017-10-20T07:15:02Z",
    "author_association": "MEMBER",
    "body": "@mroeschke do I understand that table correctly to interpret that also for the \"all duplicate\" case there is almost no speed-up ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/338304458",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-338304458",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 338304458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODMwNDQ1OA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-20T19:43:32Z",
    "updated_at": "2017-10-20T19:43:32Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche Correct (with maybe a slight speedup at ~100k duplicates), but keep in mind this is only for the case where the user is parsing ISO date strings. \r\n\r\nHowever, if a user is parsing a ISO date strings with tz offset (e.g `'1901-01-01 00:00:00-08:00'`) for example, the cache really helps (potentially ~2x speedup with just half duplicates):\r\n\r\n```\r\nProportion of Duplicate Values       0.0       0.5       1.0\r\nNumber of Values                                            \r\n1000.0                          1.013743  0.568563  0.054249\r\n10000.0                         1.005625  0.518776  0.014114\r\n100000.0                        1.008731  0.526137  0.010253\r\n```\r\n\r\nBottom line, it appears that caching may improve performance depending on what the user is trying to parse, and the fact that it may introduce a slowdown is good reason to set `cache=False`. I can enhance the documentation to inform when `cache=True` should be used. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/338406762",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-338406762",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 338406762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQwNjc2Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-21T14:34:28Z",
    "updated_at": "2017-10-21T14:35:11Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  can enhance the documentation to inform when cache=True should be used.\r\n\r\nIt possible we want a ``cache='infer'`` option (maybe as the default), where we do a small bit of introspection (e.g. parse first 1000 values or something) and 'guess' whether we should be using the cache things. But can do that in the future PR. IOW the cases like above (https://github.com/pandas-dev/pandas/pull/17077#issuecomment-338304458) would be really helped by-default then, but not sacrifice other cases."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/342054118",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-342054118",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 342054118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjA1NDExOA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-06T06:00:15Z",
    "updated_at": "2017-11-06T06:00:15Z",
    "author_association": "MEMBER",
    "body": "I changed/updated the following:\r\n\r\n1) Changed `cache=False` as the default after our prior discussion. Can change to 'infer' in a future PR after doing some inspection of what is being parsed.\r\n\r\n2)  Created 2 functions outside of `to_datetime`, `_maybe_cache` which returns a cache array and `_convert_and_box_cache` which applies the cache to the data and boxes the result. \r\n\r\n`_maybe_cache` utilizes `_convert_listlike` for datetime conversion which is defined in `to_datetime` so I had to pass the function into `_maybe_cache`. Alternatively I could also move `_convert_listlike` out of `to_datetime`. Not sure which design is preferred. \r\n\r\n3) Skipped a test in `TestTimeConversionFormats.test_datetime_bool` when `cache=True` due to #18111"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/342710113",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-342710113",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 342710113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjcxMDExMw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-08T04:49:30Z",
    "updated_at": "2017-11-08T04:49:30Z",
    "author_association": "MEMBER",
    "body": "Adjusted the imports, fixed the doc comment, and moved the whatsnew note to v0.22.0. \r\n\r\nIn a new issue we can highlight that `cache='infer'` should be added and maybe the cache conversion logic can be simplified. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343064881",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-343064881",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 343064881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzA2NDg4MQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-09T07:00:34Z",
    "updated_at": "2017-11-09T07:00:34Z",
    "author_association": "MEMBER",
    "body": "Added asvs with cache True/False matrix, expanded docs of helper functions, and adjusted decorator."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343693887",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17077#issuecomment-343693887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17077",
    "id": 343693887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY5Mzg4Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T21:01:02Z",
    "updated_at": "2017-11-11T21:01:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @mroeschke nice PR!\r\n\r\nlook forward to ``cache='infer'`` !\r\n\r\npls open an issue for this."
  }
]
