[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224524309",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-224524309",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 224524309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUyNDMwOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T08:33:57Z",
    "updated_at": "2016-06-08T08:33:57Z",
    "author_association": "MEMBER",
    "body": "At the moment, I think DatetimeIndex is rather the exception, as most seem to return a numpy array (and CategoricalIndex a Categorical):\n\n```\nIn [18]: pd.Index(['a', 'a', 'b']).unique()\nOut[18]: array(['a', 'b'], dtype=object)\n\nIn [19]: pd.Int64Index([1,1,2]).unique()\nOut[19]: array([1, 2], dtype=int64)\n\nIn [20]: pd.Float64Index([1,1,2]).unique()\nOut[20]: array([ 1.,  2.])\n\nIn [21]: pd.CategoricalIndex(['a','a','b']).unique()\nOut[21]:\n[a, b]\nCategories (2, object): [a, b]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224557596",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-224557596",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 224557596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDU1NzU5Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T11:04:23Z",
    "updated_at": "2016-06-08T11:04:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is a dupe of #4126 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224557681",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-224557681",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 224557681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDU1NzY4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T11:04:46Z",
    "updated_at": "2016-06-08T11:04:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing the other one actually.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224615750",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-224615750",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 224615750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDYxNTc1MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T14:56:04Z",
    "updated_at": "2016-06-08T14:56:39Z",
    "author_association": "MEMBER",
    "body": "- Are there possible back compat issues? I think most/all methods of array should work similar for Index (as it was previously a subclass), but I am not sure to what extent users would rely on the fact that it returns an array now.\n- What with ``Series.unique`? This also returns arrays now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224619134",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-224619134",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 224619134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDYxOTEzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T15:06:14Z",
    "updated_at": "2016-06-08T15:06:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah I dont' think we ever changed `Series.unique()` which was for numpy compat, should change that too. These all need to go in 0.19.0 I think though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224620354",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-224620354",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 224620354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDYyMDM1NA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T15:10:14Z",
    "updated_at": "2016-06-08T15:10:14Z",
    "author_association": "MEMBER",
    "body": "One reason not to change `Series.unique()` is that there is no meaningful index to associate with the unique values. That said, that is probably more useful overall (especially once you consider non-numpy dtypes).\n\nThis definitely needs to go in a major release because it will break some user code.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239620919",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-239620919",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 239620919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTYyMDkxOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T13:28:32Z",
    "updated_at": "2016-08-13T13:28:32Z",
    "author_association": "MEMBER",
    "body": "In the PR of @sinhrks, it is now proposed to return an Index of the same type for _both_ Index and Series. \n\nWhile for Index it seems logical to always return an Index of the same type, I am not very enthusiastic about `Series.unique` returning Index objects (I think that would be surprising). I would personally rather return Series objects with a default range index.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239621033",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-239621033",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 239621033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTYyMTAzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T13:31:43Z",
    "updated_at": "2016-08-13T13:32:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't agree\n\nthen you are then giving meaning to the index of the series that you are returning when it doesn't have any meaning (the ordering actually does have meaning but that is true in either case)\n\nso returning an Index is the correct action here\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239621743",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-239621743",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 239621743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTYyMTc0Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T13:49:12Z",
    "updated_at": "2016-08-13T13:49:12Z",
    "author_association": "MEMBER",
    "body": "Of course this boils down to not having a good array-like container that can hold all pandas supported types .. (Index is such a container, and can be used for that, but IMO to users it is not, to users it are the labels of the index/columns of a DataFrame/Series).\n\nOptions:\n- leave as is (np.array for most, Categorical for category series, possibly DatetimeIndex for timezone aware (this is currently not yet the case)), and try solve this in pandas 2.0\n- consistently np.array (with the consequence of loosing type information, or object array of pandas objects to keep type info)\n- consistently Index (can hold all dtypes, but IMO confusing object)\n- consistently Series (can hold all dtypes, but has meaningless default index that is not needed)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239621878",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-239621878",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 239621878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTYyMTg3OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T13:52:00Z",
    "updated_at": "2016-08-13T13:52:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I disagree, Index IS the container object and is most appropriate\n\nSeries is plain confusing\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239631282",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-239631282",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 239631282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTYzMTI4Mg==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T17:08:07Z",
    "updated_at": "2016-08-13T17:08:07Z",
    "author_association": "MEMBER",
    "body": "i think it's natural that `Index.unique` returns `Index`.\n\n`Series`  may need discussion, but returnig `Series` with meaningless label does not sound good.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239636931",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-239636931",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 239636931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTYzNjkzMQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T19:15:56Z",
    "updated_at": "2016-08-13T19:15:56Z",
    "author_association": "MEMBER",
    "body": "> While for Index it seems logical to always return an Index of the same type, I am not very enthusiastic about Series.unique returning Index objects (I think that would be surprising).\n\nI agree. Returning an index for `Series.unique` would be quite surprising.\n\nFor Series.unique, I don't think we have any good options prior to pandas 2.0. I would stick with returning numpy arrays for now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239638068",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-239638068",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 239638068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTYzODA2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T19:43:27Z",
    "updated_at": "2016-08-13T19:43:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer \n\n> I agree. Returning an index for Series.unique would be quite surprising.\n\nyou seem to be against natural things and seem to want pandas to be like numpy\ncan you explain this reasoning\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239639242",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-239639242",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 239639242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTYzOTI0Mg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T20:11:31Z",
    "updated_at": "2016-08-13T20:11:31Z",
    "author_association": "MEMBER",
    "body": "> seem to want pandas to be like numpy\n\nYou misunderstand me. This is about what feels consistent with the current version of pandas:\n- For 1D labeled arrays, we use `Series`\n- For labels, we use `Index`\n- For unlabeled values, we use `np.ndarray` or `Categorical`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240568439",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-240568439",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 240568439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDU2ODQzOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-17T22:26:39Z",
    "updated_at": "2016-08-17T22:26:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, I'll change my opinion here. \n\nI can see `Series.unique()` returning a `Series` with a default (range) Index. The reason is that this is a mutable object, rather than an immutable `Index`. Furthermore the resultant index of the returned object, actually does have meaning. Its the order of appearance in the unique, so this does firm up the API.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240569678",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-240569678",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 240569678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDU2OTY3OA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-17T22:32:38Z",
    "updated_at": "2016-08-17T22:32:38Z",
    "author_association": "MEMBER",
    "body": "As I mentioned in #13944, in pandas 2.0, I think the logical type for the return value of `Series.unique()` is the appropriate `ScalarArray` type. If that it where we want to end up, I don't think it makes sense to have additional churn now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240679963",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-240679963",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 240679963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDY3OTk2Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-18T10:03:35Z",
    "updated_at": "2016-08-18T10:03:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer yes and if pandas 2.0 was around the corner and we DIDN't have a 1.0 I would agree. However, we very-very rarely expose raw ndarrays to the user ATM. Aside from `.values` which is an impl detail, this is the remaining case (IIRC). SO this is wildly inconsistent, and should not survive a freeze of API.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240775720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-240775720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 240775720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDc3NTcyMA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-18T16:17:19Z",
    "updated_at": "2016-08-18T16:17:19Z",
    "author_association": "MEMBER",
    "body": "My opinion is that we should not introduce any breaking changes in 1.0 that\nwe know we will break again in 2.0. I'm happy to hear what others think,\nthough.\n\nOn Thu, Aug 18, 2016 at 3:03 AM, Jeff Reback notifications@github.com\nwrote:\n\n> @shoyer https://github.com/shoyer yes and if pandas 2.0 was around the\n> corner and we DIDN't have a 1.0 I would agree. However, we very-very rarely\n> expose raw ndarrays to the user ATM. Aside from .values which is an impl\n> detail, this is the remaining case (IIRC). SO this is wildly inconsistent,\n> and should not survive a freeze of API.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/pydata/pandas/issues/13395#issuecomment-240679963,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABKS1pcj5tZFMXTs2l2enTCgDEvm91oQks5qhC37gaJpZM4IwglC\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240845700",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-240845700",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 240845700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDg0NTcwMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-18T20:25:50Z",
    "updated_at": "2016-08-18T20:25:50Z",
    "author_association": "MEMBER",
    "body": "In the current pandas, I would vote for returning a Series, although also not ideal. But I agree with @shoyer that if we change it again for 2.0, it is maybe not very beneficial to change this for 1.0 as well.\n\nTo be clear, we should care that the \"but we will change that for 2.0\" does not become a reason to not do any needed changes anymore now. But, in this case, I personally don't think the return value of `unique` is that much of a pain point currently (with the exception of tz-aware datetime*), in most cases it just gives you what you want.\n\n\\* we could also return an object array of timestamps for that specific case\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240877101",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-240877101",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 240877101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDg3NzEwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-18T22:32:24Z",
    "updated_at": "2016-08-18T22:32:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, for 0.19.0 we need to change `Index.unique` for sure. That's a given as its the only inconsistent method and will ultimately return an `Index` in any future version.\n\nOk, so the only question then is to make `Series.unique` return a `Series`, `Index`, or leave as an ndarray.\n\nIf it should eventually return a `Series`, then we should change it now. I suppose if it ultimately will return a 1-d Array type (TBD), which is mutable (and not an Index), then I guess it could leave as a `ndarray` now.\n\nBut these are just way to many iffs. This needs to be resolved asap. @wesm why don't you weigh in here. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240889832",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-240889832",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 240889832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDg4OTgzMg==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-18T23:43:53Z",
    "updated_at": "2016-08-18T23:43:53Z",
    "author_association": "MEMBER",
    "body": "Just read through this. \n\nIn pandas 2.0 `Series.unique` is almost certainly going to return a `pandas.Array` (which is just a container type around some other data, possibly just a NumPy array in many cases) as @shoyer said.\n\nSeveral problems with `Series.unique` returning a Series right now\n- The association of a new index with the result feels unclean to me. Let's look at this code:\n\n``` python\nIn [10]: s = pd.Series([1,2,3,4] * 4)\n\nIn [11]: unique_vals = s.unique()\n\nIn [12]: from pandas.util.testing import rands\n\nIn [13]: df = pd.DataFrame({'uniques': unique_vals}, index=[rands(10) for i in range(len(unique\n    ...: _vals))])\n\nIn [14]: df\nOut[14]: \n            uniques\nmB2LJrlOw5        1\nqPF14xkGNl        2\n0nE5HHGM0d        3\nAbQEAYpYmW        4\n```\n\nIf `unique` returned a Series, then you know what would happen:\n\n``` python\nIn [18]: unique_vals = pd.Series(unique_vals)\n\nIn [19]: df = pd.DataFrame({'uniques': unique_vals}, index=[rands(10) for i in range(len(unique\n    ...: _vals))])\n\nIn [20]: df\nOut[20]: \n            uniques\nLiQZXm6K5V      NaN\nB8HABWAK2o      NaN\n4hIrDH3Ue0      NaN\nJpaO9iMWTP      NaN\n```\n\nContrived as this may be is an enough of a concern to make me -0 on this and very nearly -1\n1. by making `Series.unique` return a Series now, we introduce an API contract that we probably will want to break in pandas 2.x (since we'll have a consistent array container type that can be returned)\n\nI agree it sort of stinks that we have both ndarray and non-ndarray (e.g. categorical) return values for `Series.unique`, but this is the bed we've made for ourselves. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240890631",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-240890631",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 240890631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDg5MDYzMQ==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-18T23:49:03Z",
    "updated_at": "2016-08-18T23:49:08Z",
    "author_association": "MEMBER",
    "body": "(I agree that Index.unique should always return an Index)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240892248",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-240892248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 240892248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDg5MjI0OA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-18T23:58:50Z",
    "updated_at": "2016-08-18T23:58:50Z",
    "author_association": "MEMBER",
    "body": "I'm +1 to leave `Series` as it is to avoid repeated API changes.\n\nOne issue related to returning `ndarray`  is #13565. We can use `drop_duplicates` if we actually need `Series`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240957018",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-240957018",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 240957018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDk1NzAxOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-19T08:17:04Z",
    "updated_at": "2016-08-19T08:17:04Z",
    "author_association": "MEMBER",
    "body": "Nice example of @wesm how series vs array could break code, so let's not do that (although the reindexing behaviour of the constructors is maybe also a point for discussion ...)\n\nFor the issue in #13565 (return value for unique of a tz aware series), options are:\n- document the current situation (looses the tz information, as a datetime64 array is returned)\n- change to object array of tz aware Timestamp objects\n- (return tz aware index for this specific case, to be fully inconsistent :-))\n\nI would go for the first or the second, but not really a preference.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240978766",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-240978766",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 240978766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDk3ODc2Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-19T10:00:40Z",
    "updated_at": "2016-08-19T10:02:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "This was discussed [here](https://github.com/pydata/pandas/pull/10477#issuecomment-137723909) in the original issue.\n\n```\nIn [19]: s\nOut[19]: \n0   2013-01-01 00:00:00-05:00\n1   2013-01-02 00:00:00-05:00\n2   2013-01-03 00:00:00-05:00\ndtype: datetime64[ns, US/Eastern]\n\n# this is converted to UTC because numpy cannot hold anything else.\nIn [20]: s.values\nOut[20]: \narray(['2013-01-01T05:00:00.000000000', '2013-01-02T05:00:00.000000000',\n       '2013-01-03T05:00:00.000000000'], dtype='datetime64[ns]')\n\n# this does not lose tz data (though is non-performant).\nIn [24]: np.array(list(iter(s._values)))\nOut[24]: \narray([Timestamp('2013-01-01 00:00:00-0500', tz='US/Eastern', freq='D'),\n       Timestamp('2013-01-02 00:00:00-0500', tz='US/Eastern', freq='D'),\n       Timestamp('2013-01-03 00:00:00-0500', tz='US/Eastern', freq='D')], dtype=object)\n```\n\nOriginally I had this returning a DTI, however It was suggested that numpy compat was more important here. But it is quite simple to just return an `object` dtyped array (e.g. [21])``. Whenever we have a tz-aware Series (whether doing unique or not).\n\nSo changing to 2) IMHO is the best; we should also change `.values` to be the same to preserve meta-data.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241111418",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-241111418",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 241111418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTExMTQxOA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-19T19:21:57Z",
    "updated_at": "2016-08-19T19:21:57Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche the conforming / reindexing behavior of the DataFrame ctor is a super valuable feature (and one of the very earliest ones from pandas 0.1) in my experience (it also saves a ctor-then-reindex step which results in an extra sweep of the data and copy). You can pass in a bunch of irregularly indexed data and \"pluck\" out the data that matches a particular \"master\" index that you have set. The alternative is to pass in label-naive arrays, which seems like an acceptable compromise\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241132909",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-241132909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 241132909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTEzMjkwOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-19T20:56:01Z",
    "updated_at": "2016-08-19T20:56:01Z",
    "author_association": "MEMBER",
    "body": "@wesm getting a bit off topic ... but: reindexing is undoubtly a very valuable operation, I am personally just not sure if it should be the behaviour of the default constructor (could also be a dedicated method). It also leads to suprises and bugs/ambiguous behaviour. I recall some discussion in #9237, where it was not clear which should happen first (reindex based on given columns, or determine index values based on passed objects), and with Series objects with names resulting in an empty frame when specifying `columns=`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241155519",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13395#issuecomment-241155519",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13395",
    "id": 241155519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE1NTUxOQ==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-19T22:58:19Z",
    "updated_at": "2016-08-19T22:58:19Z",
    "author_association": "MEMBER",
    "body": "I see. We should discuss this separately, it seems like there was a consistency issue in the treatment of a single Series versus a dict of Series (i.e. determining a row index from the input series prior to selecting  only the columns in `columns=`) -- semantically you would think the single Series should be promoted to a dict and then handled identically. I agree it's an area that can cause people issues\n"
  }
]
