[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51337074",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7947#issuecomment-51337074",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7947",
    "id": 51337074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzM3MDc0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T13:53:40Z",
    "updated_at": "2014-08-06T13:53:40Z",
    "author_association": "MEMBER",
    "body": "You'll need to provide a bit more information including examples of what this means and why it would be useful. I personally don't use twisted so this would be helpful. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51337253",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7947#issuecomment-51337253",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7947",
    "id": 51337253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzM3MjUz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T13:54:57Z",
    "updated_at": "2014-08-06T13:54:57Z",
    "author_association": "MEMBER",
    "body": "More specially what is inconvenient to do with the current db interface that would be more convenient with the twisted protocols?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51338444",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7947#issuecomment-51338444",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7947",
    "id": 51338444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzM4NDQ0",
    "user": {
      "login": "GomesNayagam",
      "id": 1098134,
      "node_id": "MDQ6VXNlcjEwOTgxMzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1098134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GomesNayagam",
      "html_url": "https://github.com/GomesNayagam",
      "followers_url": "https://api.github.com/users/GomesNayagam/followers",
      "following_url": "https://api.github.com/users/GomesNayagam/following{/other_user}",
      "gists_url": "https://api.github.com/users/GomesNayagam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GomesNayagam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GomesNayagam/subscriptions",
      "organizations_url": "https://api.github.com/users/GomesNayagam/orgs",
      "repos_url": "https://api.github.com/users/GomesNayagam/repos",
      "events_url": "https://api.github.com/users/GomesNayagam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GomesNayagam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T14:03:35Z",
    "updated_at": "2014-08-06T14:03:35Z",
    "author_association": "NONE",
    "body": "basically i am looking for asynchronous way accessing db via pandas sql library. Since twisted is widely used asynchronous protocol if you use any module along with twisted also need to have similar support.\n\nwe currently use cyclone.io(tornado) along with various module to access rabbitmq,redis and postgres sql. Every vendor has twisted wrapper to work with web framework. e.g psycopg2 has twisted support.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51341012",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7947#issuecomment-51341012",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7947",
    "id": 51341012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzQxMDEy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T14:21:42Z",
    "updated_at": "2014-08-06T14:21:42Z",
    "author_association": "MEMBER",
    "body": "Currently the sql module in pandas is implemented based on SQLAlchemy. A quick googling lead me to https://pypi.python.org/pypi/alchimia/0.4 which brings twisted support to SQLAlchemy. Would that possibly be helpful?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51345267",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7947#issuecomment-51345267",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7947",
    "id": 51345267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzQ1MjY3",
    "user": {
      "login": "GomesNayagam",
      "id": 1098134,
      "node_id": "MDQ6VXNlcjEwOTgxMzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1098134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GomesNayagam",
      "html_url": "https://github.com/GomesNayagam",
      "followers_url": "https://api.github.com/users/GomesNayagam/followers",
      "following_url": "https://api.github.com/users/GomesNayagam/following{/other_user}",
      "gists_url": "https://api.github.com/users/GomesNayagam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GomesNayagam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GomesNayagam/subscriptions",
      "organizations_url": "https://api.github.com/users/GomesNayagam/orgs",
      "repos_url": "https://api.github.com/users/GomesNayagam/repos",
      "events_url": "https://api.github.com/users/GomesNayagam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GomesNayagam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T14:50:59Z",
    "updated_at": "2014-08-06T14:50:59Z",
    "author_association": "NONE",
    "body": "great that sqlalchemy has the twisted support but pandas.read_sql_table() api currently is not using twisted way of  creating engine(i checked the code at pandas/io/sql.py). probably might be significant effort.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51346214",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7947#issuecomment-51346214",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7947",
    "id": 51346214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzQ2MjE0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T14:57:22Z",
    "updated_at": "2014-08-06T14:57:34Z",
    "author_association": "MEMBER",
    "body": "What do you exactly mean with \"twisted way of creaing engine\"? (creation of the engine is up to the user) \n\nI am also not a user of twisted, so you will have to provide more concrete information and examples what this twisted support exactly implies (eg with psycopg2, how does the usage of psycopg2 changes? I didn't find something in the psycopg2 docs on this), or try to figure it out yourself. If it turns out to be possible (or some functions should be changed slightly to support it), I think we can certainly consider adding it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51356699",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7947#issuecomment-51356699",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7947",
    "id": 51356699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzU2Njk5",
    "user": {
      "login": "GomesNayagam",
      "id": 1098134,
      "node_id": "MDQ6VXNlcjEwOTgxMzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1098134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GomesNayagam",
      "html_url": "https://github.com/GomesNayagam",
      "followers_url": "https://api.github.com/users/GomesNayagam/followers",
      "following_url": "https://api.github.com/users/GomesNayagam/following{/other_user}",
      "gists_url": "https://api.github.com/users/GomesNayagam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GomesNayagam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GomesNayagam/subscriptions",
      "organizations_url": "https://api.github.com/users/GomesNayagam/orgs",
      "repos_url": "https://api.github.com/users/GomesNayagam/repos",
      "events_url": "https://api.github.com/users/GomesNayagam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GomesNayagam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T16:03:31Z",
    "updated_at": "2014-08-06T16:03:31Z",
    "author_association": "NONE",
    "body": "sorry for the confusion, we are not using psycopg2 for twisted way of calling db query rather we use twisted adbapi.\n\nas per the latest sqlalchemy twisted support, as you said i can very well pass the twisted engie to pandas read_sql_table but it will expect the @inlinecallback and yeild keyword in each method return inside pandas sql api.\n\n1) twisted way of calling sql alchemy query : yield engine.execute(CreateTable(users))\n2) normal pandas way of calling alchmey query : engine.execute(..)\n\nso, obviously when calling method is twisted way(which means @inlinecallback decorator and yield keyword) the called method signature too need to be the same otherwise compilation/runtime error.\n\nIn this https://pypi.python.org/pypi/alchimia/0.4 example if you/i could incorporate pandas to insert User object then we dont need this discussion. I will try sometime later and let you know. BTW if you in between please update me.\n\nAll i am looking is, will the following code will work with this example https://pypi.python.org/pypi/alchimia/0.4\n\nSELECT \n    date(created_at) as date, \n    count(*) as count\nFROM events\nGROUP BY 1\"\"\"\ndf = read_sql(query, db_connection)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51439720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7947#issuecomment-51439720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7947",
    "id": 51439720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDM5NzIw",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T07:28:12Z",
    "updated_at": "2014-08-07T07:28:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "It may be as simple as subclassing PandasSQLAlchemy and overriding [the execute method](https://github.com/pydata/pandas/blob/83ed4832dc5ac0428624599c276dd8bf3039adc7/pandas/io/sql.py#L809)... maybe.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51463293",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7947#issuecomment-51463293",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7947",
    "id": 51463293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDYzMjkz",
    "user": {
      "login": "GomesNayagam",
      "id": 1098134,
      "node_id": "MDQ6VXNlcjEwOTgxMzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1098134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GomesNayagam",
      "html_url": "https://github.com/GomesNayagam",
      "followers_url": "https://api.github.com/users/GomesNayagam/followers",
      "following_url": "https://api.github.com/users/GomesNayagam/following{/other_user}",
      "gists_url": "https://api.github.com/users/GomesNayagam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GomesNayagam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GomesNayagam/subscriptions",
      "organizations_url": "https://api.github.com/users/GomesNayagam/orgs",
      "repos_url": "https://api.github.com/users/GomesNayagam/repos",
      "events_url": "https://api.github.com/users/GomesNayagam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GomesNayagam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T12:12:38Z",
    "updated_at": "2014-08-07T12:12:38Z",
    "author_association": "NONE",
    "body": "wow thanks hayd. Here is the code.\n--Code starts here---\n\n``` python\n\nfrom alchimia import TWISTED_STRATEGY\n\nfrom sqlalchemy import (\n    create_engine, MetaData, Table, Column, Integer, String\n)\nfrom sqlalchemy.schema import CreateTable\n\nfrom twisted.internet import defer\nfrom twisted.internet.task import react\n\nfrom pandas.io.sql import *\nimport pandas as pd\n\nfrom sqlalchemy.pool import QueuePool\n\n\nclass MyPandasSQLAlchemy(PandasSQLAlchemy):\n\n   @defer.inlineCallbacks\n   def execute(self, *args, **kwargs):\n        \"\"\"Simple passthrough to SQLAlchemy engine\"\"\"\n        result = yield self.engine.execute(*args, **kwargs)\n    defer.returnValue(result)\n\n@defer.inlineCallbacks\ndef main(reactor):\n    engine = create_engine(\n        \"sqlite:///file.db\", poolclass=QueuePool, reactor=reactor, strategy=TWISTED_STRATEGY\n    )\n\n    metadata = MetaData()\n    users = Table(\"users\", metadata,\n        Column(\"id\", Integer(), primary_key=True),\n        Column(\"name\", String()),\n    )\n\n    '''\n    # Create the table\n    yield engine.execute(CreateTable(users))\n\n\n    # Insert some users\n    yield engine.execute(users.insert().values(name=\"Jeremy Goodwin\"))\n    yield engine.execute(users.insert().values(name=\"Natalie Hurley\"))\n    yield engine.execute(users.insert().values(name=\"Dan Rydell\"))\n    yield engine.execute(users.insert().values(name=\"Casey McCall\"))\n    yield engine.execute(users.insert().values(name=\"Dana Whitaker\"))\n\n\n    '''\n\n    query = \"SELECT  * FROM users\"\n\n    pandas_sql = MyPandasSQLAlchemy(engine, meta=metadata)\n    df = yield pandas_sql.execute(query)\n    df_users = yield df.fetchall()\n\n    df = pd.DataFrame(df_users)\n    print df.head()\n\n\n\n    '''\n    # raw alchemy way\n    result = yield engine.execute(query)\n    d_users = yield result.fetchall()\n    # Print out the users\n    for user in d_users:\n        print \"Username: %s\" % user[users.c.name]\n\n    '''\n\nif __name__ == \"__main__\":\n   react(main, [])\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51582500",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7947#issuecomment-51582500",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7947",
    "id": 51582500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTgyNTAw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T09:47:31Z",
    "updated_at": "2014-08-08T09:47:31Z",
    "author_association": "MEMBER",
    "body": "Nice to see it works! \nNow you only used the `execute` method and did the conversion to a dataframe manually, but did you also try to use `read_sql_query` (which uses the execute method and does the wrapping into a dataframe? Or even the other functions (`read_table`, `to_sql`)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51582879",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7947#issuecomment-51582879",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7947",
    "id": 51582879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTgyODc5",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T09:52:07Z",
    "updated_at": "2014-08-08T09:52:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "> It may be as simple as subclassing PandasSQLAlchemy and overriding the execute method... maybe.\n\nTwisted is not that easy to support: it uses explicit Future (`Deferred`) objects as return values for asynchronous operations and you cannot support both sync and async modes of functioning with same code, unless you account for that explicitly by either exposing public API via callbacks, using coroutines/generators to read values or running synchronous code in separate thread.  I didn't see any of that in pandas sql code (I must admit I didn't dig deeply), so it may not be so easy.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51588680",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7947#issuecomment-51588680",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7947",
    "id": 51588680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTg4Njgw",
    "user": {
      "login": "GomesNayagam",
      "id": 1098134,
      "node_id": "MDQ6VXNlcjEwOTgxMzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1098134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GomesNayagam",
      "html_url": "https://github.com/GomesNayagam",
      "followers_url": "https://api.github.com/users/GomesNayagam/followers",
      "following_url": "https://api.github.com/users/GomesNayagam/following{/other_user}",
      "gists_url": "https://api.github.com/users/GomesNayagam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GomesNayagam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GomesNayagam/subscriptions",
      "organizations_url": "https://api.github.com/users/GomesNayagam/orgs",
      "repos_url": "https://api.github.com/users/GomesNayagam/repos",
      "events_url": "https://api.github.com/users/GomesNayagam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GomesNayagam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T11:07:12Z",
    "updated_at": "2014-08-08T11:07:12Z",
    "author_association": "NONE",
    "body": "yes, i agree with @immerrr,  need to expose separate set of api(module) for twisted support. Here i have provided code sample to explain the request. thanks @jorisvandenbossche @hayd for your response to my query. you guys can decide about this ticket as you wish.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77761187",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7947#issuecomment-77761187",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7947",
    "id": 77761187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzYxMTg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-08T16:59:46Z",
    "updated_at": "2015-03-08T16:59:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "out-of-scope ATM. If user wants to propose adding a sub-class then pls reopen.\n"
  }
]
