[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400743801",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21651#issuecomment-400743801",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21651",
    "id": 400743801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDc0MzgwMQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T16:32:20Z",
    "updated_at": "2018-06-27T16:32:20Z",
    "author_association": "MEMBER",
    "body": "Simpler example:\r\n\r\n```\r\nIn [15]: df = pd.DataFrame({'date': pd.date_range('2010-01-01', freq='12H', periods=5), 'vals': range(5), 'let': list('abcde')})\r\n\r\nIn [16]: df\r\nOut[16]:\r\n                 date  vals let\r\n0 2010-01-01 00:00:00     0   a\r\n1 2010-01-01 12:00:00     1   b\r\n2 2010-01-02 00:00:00     2   c\r\n3 2010-01-02 12:00:00     3   d\r\n4 2010-01-03 00:00:00     4   e\r\n\r\nIn [17]: df.groupby([df.let, df.date.dt.date]).apply(lambda x: x.iloc[0:])\r\n\r\nIn [18]: pd.__version__\r\nOut[18]: '0.24.0.dev0+177.g45e55af'\r\n```\r\n\r\nFrom the traceback, looks like it's an issue in indexing a (Multi?)Index with dates with a `Timestamp`\r\n\r\nInvestigation and PRs welcome!\r\n\r\nTraceback\r\n<details>\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance)\r\n   2968             try:\r\n-> 2969                 return self._engine.get_loc(key)\r\n   2970             except KeyError:\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n    139\r\n--> 140     cpdef get_loc(self, object val):\r\n    141         if is_definitely_invalid_key(val):\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n    161         try:\r\n--> 162             return self.mapping.get_item(val)\r\n    163         except (TypeError, ValueError):\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n   1489\r\n-> 1490     cpdef get_item(self, object val):\r\n   1491         cdef khiter_t k\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n   1497         else:\r\n-> 1498             raise KeyError(val)\r\n   1499\r\n\r\nKeyError: Timestamp('2010-01-01 00:00:00')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nKeyError                                  Traceback (most recent call last)\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/reshape/concat.py in _make_concat_multiindex(indexes, keys, levels, names)\r\n    563                 try:\r\n--> 564                     i = level.get_loc(key)\r\n    565                 except KeyError:\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance)\r\n   2970             except KeyError:\r\n-> 2971                 return self._engine.get_loc(self._maybe_cast_indexer(key))\r\n   2972\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n    139\r\n--> 140     cpdef get_loc(self, object val):\r\n    141         if is_definitely_invalid_key(val):\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n    161         try:\r\n--> 162             return self.mapping.get_item(val)\r\n    163         except (TypeError, ValueError):\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n   1489\r\n-> 1490     cpdef get_item(self, object val):\r\n   1491         cdef khiter_t k\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n   1497         else:\r\n-> 1498             raise KeyError(val)\r\n   1499\r\n\r\nKeyError: Timestamp('2010-01-01 00:00:00')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/groupby/groupby.py in apply(self, func, *args, **kwargs)\r\n    917             try:\r\n--> 918                 result = self._python_apply_general(f)\r\n    919             except Exception:\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/groupby/groupby.py in _python_apply_general(self, f)\r\n    940             values,\r\n--> 941             not_indexed_same=mutated or self.mutated)\r\n    942\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/groupby/groupby.py in _wrap_applied_output(self, keys, values, not_indexed_same)\r\n   4220             return self._concat_objects(keys, values,\r\n-> 4221                                         not_indexed_same=not_indexed_same)\r\n   4222         elif self.grouper.groupings is not None:\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/groupby/groupby.py in _concat_objects(self, keys, values, not_indexed_same)\r\n   1135                                 levels=group_levels, names=group_names,\r\n-> 1136                                 sort=False)\r\n   1137             else:\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/reshape/concat.py in concat(objs, axis, join, join_axes, ignore_index, keys, levels, names, verify_integrity, sort, copy)\r\n    224                        verify_integrity=verify_integrity,\r\n--> 225                        copy=copy, sort=sort)\r\n    226     return op.get_result()\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/reshape/concat.py in __init__(self, objs, axis, join, join_axes, keys, levels, names, ignore_index, verify_integrity, copy, sort)\r\n    377\r\n--> 378         self.new_axes = self._get_new_axes()\r\n    379\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/reshape/concat.py in _get_new_axes(self)\r\n    457\r\n--> 458         new_axes[self.axis] = self._get_concat_axis()\r\n    459         return new_axes\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/reshape/concat.py in _get_concat_axis(self)\r\n    513             concat_axis = _make_concat_multiindex(indexes, self.keys,\r\n--> 514                                                   self.levels, self.names)\r\n    515\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/reshape/concat.py in _make_concat_multiindex(indexes, keys, levels, names)\r\n    566                     raise ValueError('Key {key!s} not in level {level!s}'\r\n--> 567                                      .format(key=key, level=level))\r\n    568\r\n\r\nValueError: Key 2010-01-01 00:00:00 not in level Index([2010-01-01, 2010-01-02, 2010-01-03], dtype='object', name='date')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nKeyError                                  Traceback (most recent call last)\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance)\r\n   2968             try:\r\n-> 2969                 return self._engine.get_loc(key)\r\n   2970             except KeyError:\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n    139\r\n--> 140     cpdef get_loc(self, object val):\r\n    141         if is_definitely_invalid_key(val):\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n    161         try:\r\n--> 162             return self.mapping.get_item(val)\r\n    163         except (TypeError, ValueError):\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n   1489\r\n-> 1490     cpdef get_item(self, object val):\r\n   1491         cdef khiter_t k\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n   1497         else:\r\n-> 1498             raise KeyError(val)\r\n   1499\r\n\r\nKeyError: Timestamp('2010-01-01 00:00:00')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nKeyError                                  Traceback (most recent call last)\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/reshape/concat.py in _make_concat_multiindex(indexes, keys, levels, names)\r\n    563                 try:\r\n--> 564                     i = level.get_loc(key)\r\n    565                 except KeyError:\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance)\r\n   2970             except KeyError:\r\n-> 2971                 return self._engine.get_loc(self._maybe_cast_indexer(key))\r\n   2972\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n    139\r\n--> 140     cpdef get_loc(self, object val):\r\n    141         if is_definitely_invalid_key(val):\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n    161         try:\r\n--> 162             return self.mapping.get_item(val)\r\n    163         except (TypeError, ValueError):\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n   1489\r\n-> 1490     cpdef get_item(self, object val):\r\n   1491         cdef khiter_t k\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n   1497         else:\r\n-> 1498             raise KeyError(val)\r\n   1499\r\n\r\nKeyError: Timestamp('2010-01-01 00:00:00')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-17-e66fb9399357> in <module>()\r\n----> 1 df.groupby([df.let, df.date.dt.date]).apply(lambda x: x.iloc[0:])\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/groupby/groupby.py in apply(self, func, *args, **kwargs)\r\n    928\r\n    929                 with _group_selection_context(self):\r\n--> 930                     return self._python_apply_general(f)\r\n    931\r\n    932         return result\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/groupby/groupby.py in _python_apply_general(self, f)\r\n    939             keys,\r\n    940             values,\r\n--> 941             not_indexed_same=mutated or self.mutated)\r\n    942\r\n    943     def _iterate_slices(self):\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/groupby/groupby.py in _wrap_applied_output(self, keys, values, not_indexed_same)\r\n   4219         elif isinstance(v, DataFrame):\r\n   4220             return self._concat_objects(keys, values,\r\n-> 4221                                         not_indexed_same=not_indexed_same)\r\n   4222         elif self.grouper.groupings is not None:\r\n   4223             if len(self.grouper.groupings) > 1:\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/groupby/groupby.py in _concat_objects(self, keys, values, not_indexed_same)\r\n   1134                 result = concat(values, axis=self.axis, keys=group_keys,\r\n   1135                                 levels=group_levels, names=group_names,\r\n-> 1136                                 sort=False)\r\n   1137             else:\r\n   1138\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/reshape/concat.py in concat(objs, axis, join, join_axes, ignore_index, keys, levels, names, verify_integrity, sort, copy)\r\n    223                        keys=keys, levels=levels, names=names,\r\n    224                        verify_integrity=verify_integrity,\r\n--> 225                        copy=copy, sort=sort)\r\n    226     return op.get_result()\r\n    227\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/reshape/concat.py in __init__(self, objs, axis, join, join_axes, keys, levels, names, ignore_index, verify_integrity, copy, sort)\r\n    376         self.copy = copy\r\n    377\r\n--> 378         self.new_axes = self._get_new_axes()\r\n    379\r\n    380     def get_result(self):\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/reshape/concat.py in _get_new_axes(self)\r\n    456                 new_axes[i] = ax\r\n    457\r\n--> 458         new_axes[self.axis] = self._get_concat_axis()\r\n    459         return new_axes\r\n    460\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/reshape/concat.py in _get_concat_axis(self)\r\n    512         else:\r\n    513             concat_axis = _make_concat_multiindex(indexes, self.keys,\r\n--> 514                                                   self.levels, self.names)\r\n    515\r\n    516         self._maybe_check_integrity(concat_axis)\r\n\r\n/mnt/c/Users/Matt Roeschke/Projects/pandas-mroeschke/pandas/core/reshape/concat.py in _make_concat_multiindex(indexes, keys, levels, names)\r\n    565                 except KeyError:\r\n    566                     raise ValueError('Key {key!s} not in level {level!s}'\r\n--> 567                                      .format(key=key, level=level))\r\n    568\r\n    569                 to_concat.append(np.repeat(i, len(index)))\r\n\r\nValueError: Key 2010-01-01 00:00:00 not in level Index([2010-01-01, 2010-01-02, 2010-01-03], dtype='object', name='date')\r\n```\r\n</details>"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401418750",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21651#issuecomment-401418750",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21651",
    "id": 401418750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTQxODc1MA==",
    "user": {
      "login": "uds5501",
      "id": 21087061,
      "node_id": "MDQ6VXNlcjIxMDg3MDYx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21087061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/uds5501",
      "html_url": "https://github.com/uds5501",
      "followers_url": "https://api.github.com/users/uds5501/followers",
      "following_url": "https://api.github.com/users/uds5501/following{/other_user}",
      "gists_url": "https://api.github.com/users/uds5501/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/uds5501/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/uds5501/subscriptions",
      "organizations_url": "https://api.github.com/users/uds5501/orgs",
      "repos_url": "https://api.github.com/users/uds5501/repos",
      "events_url": "https://api.github.com/users/uds5501/events{/privacy}",
      "received_events_url": "https://api.github.com/users/uds5501/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-29T17:18:06Z",
    "updated_at": "2018-06-29T17:18:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mroeschke did you mean\r\n```python\r\n\r\nIn [17]: df.groupby([df.let, df.date, df.date]).apply(lambda x: x.iloc[0:])\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401420936",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21651#issuecomment-401420936",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21651",
    "id": 401420936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTQyMDkzNg==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-29T17:27:06Z",
    "updated_at": "2018-06-29T17:27:06Z",
    "author_association": "MEMBER",
    "body": "No, the code above runs property to reproduce the error (albeit I used a confusing column name `date` for my example dataframe)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401422412",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21651#issuecomment-401422412",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21651",
    "id": 401422412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTQyMjQxMg==",
    "user": {
      "login": "uds5501",
      "id": 21087061,
      "node_id": "MDQ6VXNlcjIxMDg3MDYx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21087061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/uds5501",
      "html_url": "https://github.com/uds5501",
      "followers_url": "https://api.github.com/users/uds5501/followers",
      "following_url": "https://api.github.com/users/uds5501/following{/other_user}",
      "gists_url": "https://api.github.com/users/uds5501/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/uds5501/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/uds5501/subscriptions",
      "organizations_url": "https://api.github.com/users/uds5501/orgs",
      "repos_url": "https://api.github.com/users/uds5501/repos",
      "events_url": "https://api.github.com/users/uds5501/events{/privacy}",
      "received_events_url": "https://api.github.com/users/uds5501/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-29T17:32:42Z",
    "updated_at": "2018-06-29T17:32:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mroeschke I see that now, sorry, it was syntax error from my side only!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435515778",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21651#issuecomment-435515778",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21651",
    "id": 435515778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTUxNTc3OA==",
    "user": {
      "login": "sagarchaturvedi1",
      "id": 5407452,
      "node_id": "MDQ6VXNlcjU0MDc0NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5407452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sagarchaturvedi1",
      "html_url": "https://github.com/sagarchaturvedi1",
      "followers_url": "https://api.github.com/users/sagarchaturvedi1/followers",
      "following_url": "https://api.github.com/users/sagarchaturvedi1/following{/other_user}",
      "gists_url": "https://api.github.com/users/sagarchaturvedi1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sagarchaturvedi1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sagarchaturvedi1/subscriptions",
      "organizations_url": "https://api.github.com/users/sagarchaturvedi1/orgs",
      "repos_url": "https://api.github.com/users/sagarchaturvedi1/repos",
      "events_url": "https://api.github.com/users/sagarchaturvedi1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sagarchaturvedi1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-02T21:33:24Z",
    "updated_at": "2018-11-02T21:33:24Z",
    "author_association": "NONE",
    "body": "I am also facing this issue. My column contained date string, i parsed it using dateutil parser. I created 2 new columns for date and time. Then I grouped by an id column and date and trying to sort by time. Here is the code:\r\n\r\n`agg_data = data.groupby([\"_id\",\"updateDate\"]).apply(lambda x: x.sort_values([\"updateTime\"]))`\r\n\r\nI get following error -\r\nValueError: Key 2018-06-09 00:00:00 not in level Index([2018-05-11, 2018-05-12, 2018-05-13, 2018-05-14, 2018-05-15, 2018-05-16,\r\n       2018-05-17, 2018-05-18, 2018-05-19, 2018-05-20, 2018-05-21, 2018-05-22,\r\n       2018-05-23, 2018-05-24, 2018-05-25, 2018-05-26, 2018-05-27, 2018-05-28,\r\n       2018-05-29, 2018-05-30, 2018-05-31, 2018-06-01, 2018-06-02, 2018-06-03,\r\n       2018-06-04, 2018-06-05, 2018-06-06, 2018-06-07, 2018-06-08, 2018-06-09,\r\n       2018-06-10, 2018-06-11, 2018-06-12, 2018-06-13, 2018-06-14, 2018-06-15,\r\n       2018-06-16, 2018-06-17, 2018-06-18, 2018-06-19, 2018-06-20, 2018-06-21,\r\n       2018-06-22, 2018-06-23, 2018-06-24, 2018-06-25, 2018-06-26, 2018-06-27,\r\n       2018-06-28, 2018-06-29, 2018-06-30, 2018-07-01, 2018-07-02, 2018-07-03,\r\n       2018-07-04, 2018-07-05, 2018-07-06, 2018-07-07, 2018-07-08, 2018-07-09,\r\n       2018-07-10, 2018-07-11, 2018-07-12, 2018-07-13, 2018-07-14, 2018-07-15,\r\n       2018-07-16, 2018-07-17, 2018-07-18, 2018-07-19, 2018-07-20, 2018-07-21],\r\n      dtype='object', name='updateDate')\r\n\r\n\r\n\r\n**Output of pd.show_versions() -**\r\n\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: None\r\npython: 3.6.6.final.0\r\npython-bits: 64\r\nOS: Linux\r\nOS-release: 4.4.0-1065-aws\r\nmachine: x86_64\r\nprocessor: x86_64\r\nbyteorder: little\r\nLC_ALL: C.UTF-8\r\nLANG: C.UTF-8\r\nLOCALE: en_US.UTF-8\r\n\r\npandas: 0.23.4\r\npytest: 3.8.0\r\npip: 18.0\r\nsetuptools: 40.2.0\r\nCython: 0.28.5\r\nnumpy: 1.14.3\r\nscipy: 1.1.0\r\npyarrow: None\r\nxarray: None\r\nIPython: 6.5.0\r\nsphinx: None\r\npatsy: None\r\ndateutil: 2.7.3\r\npytz: 2018.5\r\nblosc: None\r\nbottleneck: None\r\ntables: None\r\nnumexpr: None\r\nfeather: None\r\nmatplotlib: 2.2.3\r\nopenpyxl: None\r\nxlrd: None\r\nxlwt: None\r\nxlsxwriter: None\r\nlxml: None\r\nbs4: 4.6.3\r\nhtml5lib: 1.0.1\r\nsqlalchemy: None\r\npymysql: None\r\npsycopg2: 2.7.5 (dt dec pq3 ext lo64)\r\njinja2: 2.10\r\ns3fs: 0.1.6\r\nfastparquet: None\r\npandas_gbq: None\r\npandas_datareader: None"
  }
]
