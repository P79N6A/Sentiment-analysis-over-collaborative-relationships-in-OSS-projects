[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/267778417",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-267778417",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 267778417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Nzc3ODQxNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-17T18:23:37Z",
    "updated_at": "2016-12-17T18:23:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pwalsh one data type question for you, what would a good JSON table schema type be for `timedelta`? I had thought [duration](http://specs.frictionlessdata.io/json-table-schema/#duration), but IIUC that's not quite the same. A timedelta can always be converted to a total number of seconds, whereas a duration can't.\r\n\r\nAt the moment I don't attempt to distinguish between JSON Table Schema `object` or `array` types and `any`. Since pandas doesn't handle nested data all that well, this may not be a big deal. We can revisit in the future though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/267778939",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-267778939",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 267778939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Nzc3ODkzOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-17T18:34:09Z",
    "updated_at": "2016-12-17T18:34:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "One more thing: this could also be the start for https://github.com/pandas-dev/pandas/issues/9146, a roundtrip orient for JSON. The spec allows for additional properties at the \"table\" and \"field\" level. So we could have a `pandas_dtype` property on each field, and more information about the table,\r\n\r\n```python\r\n{\r\n        'type': 'DataFrame',\r\n        'version': pd.__version__,\r\n        'orient': 'records',\r\n        'date_unit': 'ms'\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/267779319",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-267779319",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 267779319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Nzc3OTMxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-17T18:40:53Z",
    "updated_at": "2016-12-17T18:41:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "isn't this just another json format orient?\r\n\r\nor maybe need an argument schema=True in to_json()"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/267782406",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-267782406",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 267782406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Nzc4MjQwNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-17T19:35:43Z",
    "updated_at": "2016-12-17T19:35:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "> isn't this just another json format orient?\r\n\r\nyes and no. This is just the schema, not the values. And this returns a dict instead of a serialized string.\r\n\r\nI've put the doc section in `io.rst`, since it's related to IO, while not actually writing the data."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/267783182",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-267783182",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 267783182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Nzc4MzE4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-17T19:52:16Z",
    "updated_at": "2016-12-17T19:52:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is very odd for a top level method"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/267794935",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-267794935",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 267794935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Nzc5NDkzNQ==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-18T00:01:37Z",
    "updated_at": "2016-12-18T19:47:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is great to see so we at least have standardized types for us to work with on the front-end.\r\n\r\nIt didn't occur to me that we would need to carve out the top level format for publishing both the schema and the data. I like the `{ schema: schema, data: data }` approach so far, set with a mimetype for the table schema. I'd then want to push on the R kernel to publish the same format for R data frames.\r\n\r\nThe matching data format is `orient='rows'` with `to_json` right?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/267828483",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-267828483",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 267828483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzgyODQ4Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-18T15:46:39Z",
    "updated_at": "2016-12-18T15:46:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "> this is very odd for a top level method\r\n\r\nAgreed. It probably belongs on `DataFrames/Series`, but I don't think it should have a `to_*` name, since that implies it's writing out the whole dataset, not just the schema.\r\n\r\n> The matching data format is orient='rows' with to_json right?\r\n\r\n`orient='records'`, with a `.reset_index` first if you want to include the index."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/267828572",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-267828572",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 267828572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzgyODU3Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-18T15:48:08Z",
    "updated_at": "2016-12-18T15:48:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think this should be a method at all\r\njust an option in to_json"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/267906846",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-267906846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 267906846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzkwNjg0Ng==",
    "user": {
      "login": "pwalsh",
      "id": 791678,
      "node_id": "MDQ6VXNlcjc5MTY3OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/791678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwalsh",
      "html_url": "https://github.com/pwalsh",
      "followers_url": "https://api.github.com/users/pwalsh/followers",
      "following_url": "https://api.github.com/users/pwalsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwalsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwalsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwalsh/subscriptions",
      "organizations_url": "https://api.github.com/users/pwalsh/orgs",
      "repos_url": "https://api.github.com/users/pwalsh/repos",
      "events_url": "https://api.github.com/users/pwalsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwalsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-19T08:22:09Z",
    "updated_at": "2016-12-19T08:22:09Z",
    "author_association": "NONE",
    "body": "@TomAugspurger I'd use duration for timedelta. I'm going to have to research it a bit more if you think there is some inconsistency here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271984902",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-271984902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 271984902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTk4NDkwMg==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T20:29:44Z",
    "updated_at": "2017-01-11T20:29:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @holdenk - could we support the same schema + data output for Spark DataFrames?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272256281",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272256281",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272256281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjI1NjI4MQ==",
    "user": {
      "login": "holdenk",
      "id": 59893,
      "node_id": "MDQ6VXNlcjU5ODkz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/59893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holdenk",
      "html_url": "https://github.com/holdenk",
      "followers_url": "https://api.github.com/users/holdenk/followers",
      "following_url": "https://api.github.com/users/holdenk/following{/other_user}",
      "gists_url": "https://api.github.com/users/holdenk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holdenk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holdenk/subscriptions",
      "organizations_url": "https://api.github.com/users/holdenk/orgs",
      "repos_url": "https://api.github.com/users/holdenk/repos",
      "events_url": "https://api.github.com/users/holdenk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holdenk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-12T19:22:06Z",
    "updated_at": "2017-01-12T19:22:06Z",
    "author_association": "NONE",
    "body": "We probably could, in fact the schema is already transfered between the JVM and PySpark using JSON so we might be able to just normalize on that format for interchange inside of PySpark its self."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272324831",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272324831",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272324831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjMyNDgzMQ==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-13T00:15:26Z",
    "updated_at": "2017-01-13T00:15:26Z",
    "author_association": "NONE",
    "body": "I like @jreback's suggestion to add a `schema`argument to `to_json` method. I also like @rgbkrk's suggestion to return both the schema and data as `{ schema: schema, data: data }`. Lastly (I'm not sure if this should be implemented in pandas) we want to consume this as a mime bundle on the front-end, so the result should look something like:\r\n\r\n```json\r\n{\r\n    \"application/tableschema+json\": {\r\n        \"schema\": schema,\r\n        \"data\": data\r\n    }\r\n}"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272325221",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272325221",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272325221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjMyNTIyMQ==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-13T00:17:55Z",
    "updated_at": "2017-01-13T00:17:55Z",
    "author_association": "NONE",
    "body": "BTW, I have published a jupyterlab/notebook extension that will render JSON Table Schema: https://github.com/gnestor/jupyterlab_table\r\n\r\nThis is more of a WIP until some standards are in place (e.g. a mimetype for JSON Table Schema, pandas compatibility, etc.)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272433433",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272433433",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272433433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjQzMzQzMw==",
    "user": {
      "login": "pwalsh",
      "id": 791678,
      "node_id": "MDQ6VXNlcjc5MTY3OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/791678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwalsh",
      "html_url": "https://github.com/pwalsh",
      "followers_url": "https://api.github.com/users/pwalsh/followers",
      "following_url": "https://api.github.com/users/pwalsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwalsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwalsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwalsh/subscriptions",
      "organizations_url": "https://api.github.com/users/pwalsh/orgs",
      "repos_url": "https://api.github.com/users/pwalsh/repos",
      "events_url": "https://api.github.com/users/pwalsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwalsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-13T12:34:47Z",
    "updated_at": "2017-01-13T12:34:47Z",
    "author_association": "NONE",
    "body": "Related media types have been registered over the new year:\r\n\r\n- http://www.iana.org/assignments/media-types/application/vnd.tableschema+json\r\n- http://www.iana.org/assignments/media-types/application/vnd.dataresource+json"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272446380",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272446380",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272446380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjQ0NjM4MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-13T13:47:17Z",
    "updated_at": "2017-01-13T13:47:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I don't think this should be a method at all just an option in to_json\r\n\r\nOK, coming around on this. One problem: right now `to_json` returns the serialized data as a `str`. Does anyone (@rgbkrk maybe?) know if there's a way to tell `IPython.display.*` that data has already been serialized?\r\n\r\n```python\r\nimport json\r\nimport IPython\r\n\r\n# passing a python dict, which IPython serializes\r\nIPython.display.display({\"application/json\": {\"A\": [1, 2, 3]}}, raw=True)\r\n\r\n# Any way to do this?\r\nIPython.display.display({\"application/json\": json.dumps({\"A\": [1, 2, 3]})}, raw=True)\r\n```\r\n\r\nor we could potentially include the mime-type in the already serialized data."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272472008",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272472008",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272472008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjQ3MjAwOA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-13T15:36:12Z",
    "updated_at": "2017-01-13T15:36:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk ^^ \r\n\r\nusually I pass a direct dict to IPython.display.display with raw=True. I'm not sure how I'd pass something already encoded since this data would be part of an overall JSON object."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272472262",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272472262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272472262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjQ3MjI2Mg==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-13T15:37:10Z",
    "updated_at": "2017-01-13T15:37:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pardon me typing on mobile, I see now I'm repeating things already said."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272656739",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272656739",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272656739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjY1NjczOQ==",
    "user": {
      "login": "codecov-io",
      "id": 8655789,
      "node_id": "MDQ6VXNlcjg2NTU3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8655789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov-io",
      "html_url": "https://github.com/codecov-io",
      "followers_url": "https://api.github.com/users/codecov-io/followers",
      "following_url": "https://api.github.com/users/codecov-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov-io/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov-io/orgs",
      "repos_url": "https://api.github.com/users/codecov-io/repos",
      "events_url": "https://api.github.com/users/codecov-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-14T22:07:18Z",
    "updated_at": "2017-03-04T11:46:38Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/14904?src=pr&el=h1) Report\n> Merging [#14904](https://codecov.io/gh/pandas-dev/pandas/pull/14904?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/7ae4fd10b1581d77b4cfbf594e3b444af7456876?src=pr&el=desc) will **decrease** coverage by `-0.06%`.\n> The diff coverage is `87.58%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##           master   #14904      +/-   ##\n==========================================\n- Coverage   91.07%   91.01%   -0.06%     \n==========================================\n  Files         136      137       +1     \n  Lines       49167    49228      +61     \n==========================================\n+ Hits        44777    44806      +29     \n- Misses       4390     4422      +32\n```\n\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/14904?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/io/json/json.py](https://codecov.io/gh/pandas-dev/pandas/compare/7ae4fd10b1581d77b4cfbf594e3b444af7456876...07d90cbd910be091bd2c2c087f5fb3f85dcb1fbc?src=pr&el=tree#diff-cGFuZGFzL2lvL2pzb24vanNvbi5weQ==) | `90.27% <100%> (+1.04%)` | :white_check_mark: |\n| [pandas/io/json/__init__.py](https://codecov.io/gh/pandas-dev/pandas/compare/7ae4fd10b1581d77b4cfbf594e3b444af7456876...07d90cbd910be091bd2c2c087f5fb3f85dcb1fbc?src=pr&el=tree#diff-cGFuZGFzL2lvL2pzb24vX19pbml0X18ucHk=) | `100% <100%> (ø)` | :white_check_mark: |\n| [pandas/core/config_init.py](https://codecov.io/gh/pandas-dev/pandas/compare/7ae4fd10b1581d77b4cfbf594e3b444af7456876...07d90cbd910be091bd2c2c087f5fb3f85dcb1fbc?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvY29uZmlnX2luaXQucHk=) | `95.12% <100%> (-0.16%)` | :x: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/compare/7ae4fd10b1581d77b4cfbf594e3b444af7456876...07d90cbd910be091bd2c2c087f5fb3f85dcb1fbc?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `81.11% <13.33%> (-0.96%)` | :x: |\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/compare/7ae4fd10b1581d77b4cfbf594e3b444af7456876...07d90cbd910be091bd2c2c087f5fb3f85dcb1fbc?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `96.25% <91.3%> (-0.07%)` | :x: |\n| [pandas/io/json/table_schema.py](https://codecov.io/gh/pandas-dev/pandas/compare/7ae4fd10b1581d77b4cfbf594e3b444af7456876...07d90cbd910be091bd2c2c087f5fb3f85dcb1fbc?src=pr&el=tree#diff-cGFuZGFzL2lvL2pzb24vdGFibGVfc2NoZW1hLnB5) | `95.58% <95.58%> (ø)` | |\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/compare/7ae4fd10b1581d77b4cfbf594e3b444af7456876...07d90cbd910be091bd2c2c087f5fb3f85dcb1fbc?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `25% <0%> (-58.34%)` | :x: |\n| [pandas/computation/pytables.py](https://codecov.io/gh/pandas-dev/pandas/compare/7ae4fd10b1581d77b4cfbf594e3b444af7456876...07d90cbd910be091bd2c2c087f5fb3f85dcb1fbc?src=pr&el=tree#diff-cGFuZGFzL2NvbXB1dGF0aW9uL3B5dGFibGVzLnB5) | `90.6% <0%> (-0.99%)` | :x: |\n| [pandas/tools/merge.py](https://codecov.io/gh/pandas-dev/pandas/compare/7ae4fd10b1581d77b4cfbf594e3b444af7456876...07d90cbd910be091bd2c2c087f5fb3f85dcb1fbc?src=pr&el=tree#diff-cGFuZGFzL3Rvb2xzL21lcmdlLnB5) | `91.78% <0%> (-0.35%)` | :x: |\n| ... and [11 more](https://codecov.io/gh/pandas-dev/pandas/pull/14904?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/14904?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/14904?src=pr&el=footer). Last update [7ae4fd1...9fac34c](https://codecov.io/gh/pandas-dev/pandas/compare/7ae4fd10b1581d77b4cfbf594e3b444af7456876...9fac34ce6c646407111c09a942cbd195b6cbf590?src=pr&el=footer&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272664746",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272664746",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272664746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjY2NDc0Ng==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T00:41:10Z",
    "updated_at": "2017-01-15T07:06:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pwalsh what would the media type and structure be for the combined schema plus data:\r\n\r\n```js\r\n{\r\n  schema: {...jsonTableSchemaHere},\r\n  data: [...rows],\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272677886",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272677886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272677886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjY3Nzg4Ng==",
    "user": {
      "login": "pwalsh",
      "id": 791678,
      "node_id": "MDQ6VXNlcjc5MTY3OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/791678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwalsh",
      "html_url": "https://github.com/pwalsh",
      "followers_url": "https://api.github.com/users/pwalsh/followers",
      "following_url": "https://api.github.com/users/pwalsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwalsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwalsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwalsh/subscriptions",
      "organizations_url": "https://api.github.com/users/pwalsh/orgs",
      "repos_url": "https://api.github.com/users/pwalsh/repos",
      "events_url": "https://api.github.com/users/pwalsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwalsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T06:55:46Z",
    "updated_at": "2017-01-15T06:55:46Z",
    "author_association": "NONE",
    "body": "@rgbkrk that would be http://www.iana.org/assignments/media-types/application/vnd.dataresource+json"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272678287",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272678287",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272678287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjY3ODI4Nw==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T07:05:36Z",
    "updated_at": "2017-01-15T07:07:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would it end up like this then, based on that spec?\r\n\r\n```js\r\n{\r\n  \"resources\": [{\r\n    \"format\": \"json\",\r\n    \"data\": [...],\r\n    \"schema\": \"table-schema\"\r\n  }],\r\n  \"schemas\": {\r\n    \"table-schema\": // inline here?\r\n  }\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272678738",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272678738",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272678738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjY3ODczOA==",
    "user": {
      "login": "pwalsh",
      "id": 791678,
      "node_id": "MDQ6VXNlcjc5MTY3OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/791678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwalsh",
      "html_url": "https://github.com/pwalsh",
      "followers_url": "https://api.github.com/users/pwalsh/followers",
      "following_url": "https://api.github.com/users/pwalsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwalsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwalsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwalsh/subscriptions",
      "organizations_url": "https://api.github.com/users/pwalsh/orgs",
      "repos_url": "https://api.github.com/users/pwalsh/repos",
      "events_url": "https://api.github.com/users/pwalsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwalsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T07:19:53Z",
    "updated_at": "2017-01-15T07:19:53Z",
    "author_association": "NONE",
    "body": "@rgbkrk \r\n\r\nNo - in this case, the top-level object is an object within your resources array, with the data inlined, and the schema inlined, exactly as https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272664746"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272704170",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272704170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272704170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjcwNDE3MA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T16:01:02Z",
    "updated_at": "2017-01-15T16:05:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok cool, thanks for clarifying for me.\r\n\r\n```js\r\n{\r\n  \"resources\": [\r\n    {\r\n      \"schema\": {...jsonTableSchemaHere},\r\n      \"data\": [...rows],\r\n    }\r\n  ]\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272704712",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272704712",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272704712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjcwNDcxMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T16:09:19Z",
    "updated_at": "2017-01-15T16:09:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the feedback all. We've split off the timedelta / duration formatting to https://github.com/pandas-dev/pandas/pull/15136 (comment there if you have any issues with that format; seems like there's some leeway in the spec).\r\n\r\nToday I'll clean up the hacked time delta formatting in `to_json`, fix the mimetype, and write up docs / tests.\r\n\r\nOnly other major outstanding issue is the serialization before sending things off to be published by IPython. For reference, all of our `to_json` conversion goes from Python object to string, so pandas will already do the serialization.\r\n\r\nDigging around, I didn't see any way for IPython to do this already. It's probably not worth the effort to change IPython / jupyter to accept already serialized messages. We'll just have one  extra de-serialize / serialize."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272705044",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272705044",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272705044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjcwNTA0NA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T16:14:43Z",
    "updated_at": "2017-01-15T16:14:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems like the kind of thing where IPython should accept a serializer. I've done hacky serialize -> deserialize -> send before. Alternatively, could we reuse any of this with `to_dict` and use that with IPython?\r\n\r\n@carreau & @takluyver - any ideas about how we could accommodate libraries that use their own serializer for JSON if we end up sending raw JSON?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272707917",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272707917",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272707917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjcwNzkxNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T16:58:07Z",
    "updated_at": "2017-01-15T16:58:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @carreau & @takluyver - any ideas about how we could accommodate libraries that use their own serializer for JSON if we end up sending raw JSON\r\n\r\nNot from the top of my head, I haven't touched that in a while.\r\nOne thing I would be happy with is  experimental API with provisional warnings/private methods.\r\nWhat about a convention for mimetype (trailing or leading prefix) telling IPython to just trip this, and consider the value as already serialized?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272721544",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272721544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272721544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjcyMTU0NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T20:31:45Z",
    "updated_at": "2017-01-15T20:31:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not quite sure what you mean from a quick scan of this conversation, but is it sufficient to define an `_ipython_display_()` method? If that exists, IPython uses that to tell the object to display itself, rather than going through the normal collection of mimetypes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272722690",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272722690",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272722690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjcyMjY5MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T20:49:26Z",
    "updated_at": "2017-01-15T20:49:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the issue now is how to publish something that has already been JSON serialized,\r\n\r\n```python\r\nimport json\r\nimport IPython\r\n\r\n# passing a python dict, which IPython serializes\r\nIPython.display.display({\"application/json\": {\"A\": [1, 2, 3]}}, raw=True)\r\n\r\n# Any way to do this? Where the \"payload\" as already been serialized?\r\nIPython.display.display({\"application/mymimetype\": json.dumps({\"A\": [1, 2, 3]})}, raw=True)\r\n```\r\n\r\nATM, I have to deserialize the serialized JSON, pass it to display, and presumably IPython serializes it somewhere down the line. Ideally we could avoid that unnecessary deserialize and serialize."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272722905",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-272722905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 272722905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjcyMjkwNQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T20:52:28Z",
    "updated_at": "2017-01-15T20:53:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "In the current state of things, I don't think there's a good answer for already serialized JSON, because one of two things is going to happen:\r\n\r\n1. return serialized string which gets double-serialized by IPython\r\n2. deserialize JSON yourself, returning JSONable data, which gets reserialized by IPython\r\n\r\nThe other option, which might work best in the end, is to make the *final* JSON serialization used by IPython extensible (much like pickle registries), and then put `self` in the field, trusting the final JSON serializer to deal with it. Once such APIs exist, it would look something like this:\r\n\r\n```python\r\nIPython.register_json_serializer(MyType, my_to_json)\r\nIPython.display.display({\"application/json\": my_object)}, raw=True)\r\n```\r\n\r\n[Here is a notebook](https://nbviewer.jupyter.org/gist/minrk/10c74974836d8d691869e1b316765177) illustrating how such a thing might work, and what would currently need to be worked around in the absence of public APIs."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/273037853",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14904#issuecomment-273037853",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14904",
    "id": 273037853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzAzNzg1Mw==",
    "user": {
      "login": "pwalsh",
      "id": 791678,
      "node_id": "MDQ6VXNlcjc5MTY3OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/791678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwalsh",
      "html_url": "https://github.com/pwalsh",
      "followers_url": "https://api.github.com/users/pwalsh/followers",
      "following_url": "https://api.github.com/users/pwalsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwalsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwalsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwalsh/subscriptions",
      "organizations_url": "https://api.github.com/users/pwalsh/orgs",
      "repos_url": "https://api.github.com/users/pwalsh/repos",
      "events_url": "https://api.github.com/users/pwalsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwalsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T07:05:17Z",
    "updated_at": "2017-01-17T07:05:17Z",
    "author_association": "NONE",
    "body": "Hi. Just to note that we are renaming `JSON Table Schema` -> `Table Schema` for v1 one (should land this week)."
  }
]
