[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368492308",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-368492308",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 368492308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODQ5MjMwOA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-02-26T12:54:58Z",
    "updated_at": "2018-07-02T22:07:36Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19902?src=pr&el=h1) Report\n> Merging [#19902](https://codecov.io/gh/pandas-dev/pandas/pull/19902?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/ad76ffcca0d92c3885c279c80701c2f4a3f3f177?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `96.85%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/19902/graphs/tree.svg?token=eZ4WkYLtcO&src=pr&width=650&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/19902?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #19902      +/-   ##\n==========================================\n+ Coverage    91.9%    91.9%   +<.01%     \n==========================================\n  Files         154      158       +4     \n  Lines       49659    49701      +42     \n==========================================\n+ Hits        45640    45680      +40     \n- Misses       4019     4021       +2\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.28% <96.85%> (ø)` | :arrow_up: |\n| #single | `41.94% <74.84%> (+0.04%)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/19902?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/arrays/timedelta.py](https://codecov.io/gh/pandas-dev/pandas/pull/19902/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL3RpbWVkZWx0YS5weQ==) | `100% <100%> (ø)` | |\n| [pandas/core/indexes/timedeltas.py](https://codecov.io/gh/pandas-dev/pandas/pull/19902/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy90aW1lZGVsdGFzLnB5) | `91.19% <100%> (-0.06%)` | :arrow_down: |\n| [pandas/core/indexes/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/19902/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZXMucHk=) | `95.48% <100%> (-0.18%)` | :arrow_down: |\n| [pandas/core/indexes/period.py](https://codecov.io/gh/pandas-dev/pandas/pull/19902/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9wZXJpb2QucHk=) | `92.58% <100%> (-0.1%)` | :arrow_down: |\n| [pandas/core/indexes/datetimelike.py](https://codecov.io/gh/pandas-dev/pandas/pull/19902/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZWxpa2UucHk=) | `96.72% <100%> (+0.24%)` | :arrow_up: |\n| [pandas/core/arrays/\\_\\_init\\_\\_.py](https://codecov.io/gh/pandas-dev/pandas/pull/19902/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL19faW5pdF9fLnB5) | `100% <100%> (ø)` | :arrow_up: |\n| [pandas/core/arrays/period.py](https://codecov.io/gh/pandas-dev/pandas/pull/19902/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL3BlcmlvZC5weQ==) | `100% <100%> (ø)` | |\n| [pandas/core/arrays/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/19902/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2RhdGV0aW1lcy5weQ==) | `100% <100%> (ø)` | |\n| [pandas/core/arrays/datetimelike.py](https://codecov.io/gh/pandas-dev/pandas/pull/19902/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2RhdGV0aW1lbGlrZS5weQ==) | `92.75% <92.75%> (ø)` | |\n| [pandas/core/indexes/multi.py](https://codecov.io/gh/pandas-dev/pandas/pull/19902/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9tdWx0aS5weQ==) | `94.96% <0%> (-0.01%)` | :arrow_down: |\n| ... and [5 more](https://codecov.io/gh/pandas-dev/pandas/pull/19902/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19902?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19902?src=pr&el=footer). Last update [ad76ffc...a684c2d](https://codecov.io/gh/pandas-dev/pandas/pull/19902?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368741405",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-368741405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 368741405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODc0MTQwNQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T04:11:42Z",
    "updated_at": "2018-02-27T04:11:42Z",
    "author_association": "MEMBER",
    "body": "Moved the new classes to core.arrays directory.  The set of cut/paste-able methods will be expanded when #19912 and #19903 go through."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369793543",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-369793543",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 369793543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTc5MzU0Mw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T01:50:23Z",
    "updated_at": "2018-03-02T01:50:23Z",
    "author_association": "MEMBER",
    "body": "Now that #19800 is in, the follow-up to this can include all of the comparison method (the Index ops will need a ~2 line wrapper around the array ops)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369994126",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-369994126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 369994126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk5NDEyNg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T17:36:56Z",
    "updated_at": "2018-03-02T17:36:56Z",
    "author_association": "MEMBER",
    "body": "Thoughts on where to go with this?  The steps after this are going to require a lot of work to carefully port the appropriate tests, so I'd like to keep slow-and-steady momentum."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373766413",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-373766413",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 373766413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzc2NjQxMw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-16T16:20:47Z",
    "updated_at": "2018-03-16T16:20:47Z",
    "author_association": "MEMBER",
    "body": "> can you sketch out your next few steps here?\r\n\r\nThis is ~everything that can be cut/paste directly.  The next step I have in mind is a handful of methods that need a 1-line wrapping in the Index classes.  e.g. comparison methods are non-Index-specific right up until the last line when they wrap an ndarray in an Index.  Following that are the arithmetic methods, for which the wrapping is less trivial.  Does that answer the question?\r\n\r\n> Can you edit the OP in #19696?\r\n\r\nSure.\r\n\r\nBTW let me know if time is an issue on this or other PRs.  I've been distracted for the last couple of weeks with a bugfix-fork of statsmodels that's left a bunch of stuff here on hiatus.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373767651",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-373767651",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 373767651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzc2NzY1MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-16T16:24:51Z",
    "updated_at": "2018-03-16T16:24:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "> BTW let me know if time is an issue on this or other PRs.\r\n\r\nIt's starting to be. I think we want to do a release candidate in the next couple weeks. It'd be nice to have as much of the EA stuff done as possible. My plan is for groupby to be the last bit of API that we ensure works, and then pick up moving our other extension types over to the new interface. If you're able to take on any of that it'd be great.\r\n\r\n> bugfix-fork of statsmodels\r\n\r\nThat's unfortunate, but understandable :/ I'm hoping to push on a statsmodels release sometime shortly after pandas 0.23.0."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374017474",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-374017474",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 374017474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDAxNzQ3NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-18T17:11:12Z",
    "updated_at": "2018-03-18T17:11:12Z",
    "author_association": "MEMBER",
    "body": "Making suggested changes now.  Will push shortly.\r\n\r\nre `arrays.__init__`, any thoughts about defining `__all__` and removing the `# noqa`s?  Not a big deal, just a slight preference.\r\n\r\nre statsmodels: see [sm2](github.com/jbrockmendel/sm2).  The vague hope is that it gets enough community traction to convince jpkt to take technical debt seriously, at which point fixes can be upstreamed and it can become unnecessary."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374604199",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-374604199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 374604199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDYwNDE5OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T13:49:35Z",
    "updated_at": "2018-03-20T13:49:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "> re arrays.__init__, any thoughts about defining __all__ and removing the # noqas? Not a big deal, just a slight preference.\r\n\r\nNo preference at all.\r\n\r\n@jorisvandenbossche / @jreback this LGTM. Any concerns?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374604619",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-374604619",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 374604619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDYwNDYxOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T13:50:46Z",
    "updated_at": "2018-03-20T13:50:46Z",
    "author_association": "MEMBER",
    "body": "How do I have to see this PR? \r\nIs this is a first *actual* stab at implementing the array types for datetime/period/timedelta? Or more a reorganisation of code?\r\n\r\nBecause if it is the first, I probably have a bunch of comments on what we exactly want to put in the array classes. And also, if that is the case, I am not sure we want the Index to subclass them? I thought we would rather go for composition?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374606612",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-374606612",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 374606612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDYwNjYxMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T13:56:20Z",
    "updated_at": "2018-03-20T13:56:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Reorganization. `DatetimeLikeArray` isn't an ExtensionArray yet.\r\n\r\n> And also, if that is the case, I am not sure we want the Index to subclass them? I thought we would rather go for composition?\r\n\r\nI've been going back and forth on which approach is best here. I'm slightly coming around to the idea of subclassing, but haven't 100% settled yet. I think that the changes here are going to be helpful either way, correct @jbrockmendel? At some point we'll either make DatetimeLikeArray inherit from ExtensionArray, or the Index classes will change to compose it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374607354",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-374607354",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 374607354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDYwNzM1NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T13:58:22Z",
    "updated_at": "2018-03-20T13:58:22Z",
    "author_association": "MEMBER",
    "body": "> Reorganization. DatetimeLikeArray isn't an ExtensionArray yet.\r\n\r\nYes, but it is a bit confusing this PR already adds the names \"DatetimeArray\" etc (not only the \"like\") as well without them being \"arrays\" in the sense of our array interface. \r\nBut as long as we agree and know this is only temporary, that's fine."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374768547",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-374768547",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 374768547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDc2ODU0Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T21:47:49Z",
    "updated_at": "2018-03-20T21:48:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "One other thing worth discussing: do we want to do first-class support for Period & Interval, etc. for pandas 0.23? Let's discuss in https://github.com/pandas-dev/pandas/issues/19696"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374791629",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-374791629",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 374791629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDc5MTYyOQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T23:26:43Z",
    "updated_at": "2018-03-20T23:26:43Z",
    "author_association": "MEMBER",
    "body": "> How do I have to see this PR?  Is this is a first actual stab at implementing the array types for datetime/period/timedelta? Or more a reorganisation of code?\r\n\r\nIs \"actual PR that reorganizes code\" an option?  This is the first in a sequence of at least three.  This PR moves methods from the index classes verbatim, largely to simplify the diffs in upcoming passes.  At the end of the ~3 PR process, _then_ we'll be ready to address\r\n\r\n- possibly subclassing some type of `PandasBaseArray`\r\n- values/_values/_ndarray_values/data/_data/...\r\n- inheritance vs composition"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/379343447",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-379343447",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 379343447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTM0MzQ0Nw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-06T18:48:13Z",
    "updated_at": "2018-04-06T18:48:13Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger thoughts on where to go with this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/379822605",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-379822605",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 379822605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTgyMjYwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-09T17:01:55Z",
    "updated_at": "2018-04-09T17:01:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am conceptually ok with doing this as its just moving things around now, setting the stage for EA. The issue is that I think we should do this post 0.23.0, or delay it significantly (not great)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/379840751",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-379840751",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 379840751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTg0MDc1MQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-09T18:02:17Z",
    "updated_at": "2018-04-09T18:02:17Z",
    "author_association": "MEMBER",
    "body": "OK, I'll keep rebasing occasionally to keep this merge-ready.  Not in an especially big hurry, though it'd be nice to get started on the next step."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380036360",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380036360",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 380036360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDAzNjM2MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T09:32:36Z",
    "updated_at": "2018-04-10T09:32:36Z",
    "author_association": "MEMBER",
    "body": "Given discussion in https://github.com/pandas-dev/pandas/issues/19696 and https://github.com/pandas-dev/pandas/pull/20611, I think we will rather go with composition than subclassing. In that case, I am not sure I am in favor of the mixins you are adding in this PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380077419",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380077419",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 380077419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDA3NzQxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T12:16:10Z",
    "updated_at": "2018-04-10T12:16:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Given discussion in #19696 and #20611, I think we will rather go with composition than subclassing. In that case, I am not sure I am in favor of the mixins you are adding in this PR.\r\n\r\nI think you ought to re-read my comments.\r\n\r\n``Index`` *must* follow the EA protocol otherwise we have tons of duplicated code. This does NOT preclude have a composed internal implementation of an EA Array itself. In fact this is a very nice way to do things.\r\n\r\nThis is my point of using mixins. One of the primary goals is to simplify the internals of pandas itself by using a standardized protocol. My continued pushback on adding new code is for exactly this reason. The implementors of the current internal EA's (categorical, proposed intervals), need to refactor internal code. Otherwise *even* more technical debt is going to happen (than already exists).\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380083470",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380083470",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 380083470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDA4MzQ3MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T12:39:06Z",
    "updated_at": "2018-04-10T12:39:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that the repr was the only bit that could be shared between\nIntervalArray & the Index base class. Could you point out another instance\nof duplicate code (in that PR)? I think all the others you pointed out\n(e.g. take) are interval-specific.\n\nOn Tue, Apr 10, 2018 at 7:16 AM, Jeff Reback <notifications@github.com>\nwrote:\n\n> Given discussion in #19696\n> <https://github.com/pandas-dev/pandas/issues/19696> and #20611\n> <https://github.com/pandas-dev/pandas/pull/20611>, I think we will rather\n> go with composition than subclassing. In that case, I am not sure I am in\n> favor of the mixins you are adding in this PR.\n>\n> I think you ought to re-read my comments.\n>\n> Index *must* follow the EA protocol otherwise we have tons of duplicated\n> code. This does NOT preclude have a composed internal implementation of an\n> EA Array itself. In fact this is a very nice way to do things.\n>\n> This is my point of using mixins. One of the primary goals is to simplify\n> the internals of pandas itself by using a standardized protocol. My\n> continued pushback on adding new code is for exactly this reason. The\n> implementors of the current internal EA's (categorical, proposed\n> intervals), need to refactor internal code. Otherwise *even* more\n> technical debt is going to happen (than already exists).\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380077419>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHInLEAJW3WDUTzarX-p952uAtrwYYks5tnKKSgaJpZM4SSsiD>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380164939",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380164939",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 380164939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDE2NDkzOQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T16:30:54Z",
    "updated_at": "2018-04-10T16:30:54Z",
    "author_association": "MEMBER",
    "body": "Typing with thumbs today.\r\n\r\n@TomAugspurger I cant speak to the IntervalArray topic, but all of the Index arithmetic methods belong in EA subclasses.  ATM numeric index and series/frame arithmetic code is duplicated (and still not entirely internally consistent)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380171855",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380171855",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 380171855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDE3MTg1NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T16:52:24Z",
    "updated_at": "2018-04-10T16:52:24Z",
    "author_association": "MEMBER",
    "body": "> all of the Index arithmetic methods belong in EA subclasses.\r\n\r\n@jbrockmendel But does that necessarily mean that they should be in a mixin? The Index class can also get access to those operations without calling the exact same code? Eg we could have `TimedeltaIndex.__add__` delegate to `TimedeltaArray.__add__` and wrap the result? Then all arithmetic methods can still be in the array class, without having the need that those methods work for both Index as Array. \r\n\r\n(for interval, we didn't have such a discussion there yet, as the WIP of Tom does not have any aritmethic operations yet, so that it was not needed for Interval is indeed not necessarily a good reason)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380217939",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380217939",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 380217939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDIxNzkzOQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T19:22:39Z",
    "updated_at": "2018-04-10T19:24:32Z",
    "author_association": "MEMBER",
    "body": "> Eg we could have `TimedeltaIndex.__add__` delegate to `TimedeltaArray.__add__` and wrap the result? \r\n\r\nThat's the plan regardless of which route (inheritance vs composition) is taken.  This can either end up looking something like:\r\n\r\n```\r\ndef __add__(self, other):\r\n    result = TimedeltaArray.__add__(self, other)\r\n    res_name = ops.get_result_name(self, other)\r\n    return Index(result, name=res_name)\r\n```\r\n\r\nor\r\n\r\n```\r\ndef __add__(self, other):\r\n    result = self._eavalues + other\r\n    res_name = ops.get_result_name(self, other)\r\n    return Index(result, name=res_name)\r\n```\r\n\r\nWhich way the dispatch works is essentially orthogonal to the Array implementation.\r\n\r\n<b>Update</b> I have a preference for the inheritance version largely because `_?[a-z]*_?values` attributes are overloaded as it is."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380220721",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380220721",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 380220721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDIyMDcyMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T19:33:32Z",
    "updated_at": "2018-04-10T19:33:32Z",
    "author_association": "MEMBER",
    "body": "That looks good, but then my question is: why does the `Index` class (eg `TimedeltaIndex` for the example above) need to have the methods like `_add_datelike`, `_add_offset`, `_add_delta`, `_add_delta_td`, ... which are in this PR in the mixin ? \r\nAs those methods are only needed to implement `TimedeltaArray.__add__`, and `TimedeltaIndex.__add__` will use `TimedeltaArray.__add__` directly and not those specific methods?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380227708",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380227708",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 380227708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDIyNzcwOA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T19:59:01Z",
    "updated_at": "2018-04-10T19:59:01Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche Under inheritance `TimedeltaIndex` would not need to use those methods directly (and with composition would not have those methods at all).  Simplifying the `TimedeltaIndex` namespace is an argument in favor of composition.\r\n\r\nDon't read too much into the fact that in this PR `DatetimelikeIndexMixin` inherits from `DatetimelikeArrayMixin`.  That's just done to keep `DatetimelikeIndexMixin` internally coherent."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380229470",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380229470",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 380229470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDIyOTQ3MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T20:05:27Z",
    "updated_at": "2018-04-10T20:05:27Z",
    "author_association": "MEMBER",
    "body": "But is it then the end-goal that `DatetimeIndexOpsMixin` (or `DatetimeIndex`) does not inherit from `DatetimelikeArrayMixin` ? \r\nWhether this would already be achieved before merging this PR, or done afterwards when the actual dispatching of arithmetic methods to the array is done, is another discussion, but just want to get the understanding correct."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380234048",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380234048",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 380234048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDIzNDA0OA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T20:21:56Z",
    "updated_at": "2018-04-10T20:21:56Z",
    "author_association": "MEMBER",
    "body": "The methods moved to `DatetimelikeArrayMixin` are all _necessary_ for the arithmetic/comparison operations, but are not necessary _exclusively_ for those operations (e.g. `__iter__`).  If we go down the composition path, we would break `DatetimelikeArrayMixin` up into two pieces and only mix one of them into `DatetimelikeIndexMixin`.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380236233",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380236233",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 380236233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDIzNjIzMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T20:29:36Z",
    "updated_at": "2018-04-10T20:30:27Z",
    "author_association": "MEMBER",
    "body": "But even `TimedeltaIndex.__iter__` could also do `return iter(self._values)` instead of sharing the actual implementation with `TimedeltaArray`, in which case it can use the base Index method, instead of needing to override it in TimedeltaIndex. And the same holds for `_isnan` and `hasnans`. From the current mixin, I don't think there will be much left?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380240746",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380240746",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 380240746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDI0MDc0Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T20:45:19Z",
    "updated_at": "2018-04-10T20:45:19Z",
    "author_association": "MEMBER",
    "body": "Based on a quick perusal it looks like `freqstr`, `inferred_freq`, `_maybe_mask_results`, (`_box_func` if we're sticklers) are needed by the Index classes.\r\n\r\nThe `__iter__` example works if we go with composition and `TimedeltaIndex._values` returns a `TimedeltaArray`, yah.\r\n\r\nGiven that a) the decision about inheritance vs composition appears un-settled and b) this PR is agnostic about it anyway, I don't see why this shouldn't go forward."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380252012",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380252012",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 380252012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDI1MjAxMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T21:26:20Z",
    "updated_at": "2018-04-10T21:27:08Z",
    "author_association": "MEMBER",
    "body": ">  a) the decision about inheritance vs composition appears un-settled\r\n\r\nIn https://github.com/pandas-dev/pandas/pull/20611 we are going with composition, and in https://github.com/pandas-dev/pandas/issues/19696 the discussion also seems to go to composition, so best to respond on those issues if you don't agree with that.\r\n\r\n> Update I have a preference for the inheritance version largely because `_?[a-z]*_?values` attributes are overloaded as it is.\r\n\r\nCan you explain this further? \r\nIf we are using composition, `<type>Index._values` (or `_data`, just need to choose a name and stick with it) == `<type>Array`, and `<type>Index._ndarray_values` could be delegated to `<type>Array._ndarray_values` or `<type>Array.__array__`. I think that can be very clear. I don't really see what would be better with inheritance on this specific point.\r\n\r\n> this PR is agnostic about it anyway, I don't see why this shouldn't go forward.\r\n\r\nFor me the reasons to not merge it in the *current* state is because: it adds a mixin we in the end might want to remove, it adds a lot of methods to the array classes we don't want there IMO (see the inline comments above), and it let's the Index classes subclass from the Array classes which we also might not want to do in the end.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380273811",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19902#issuecomment-380273811",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19902",
    "id": 380273811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDI3MzgxMQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T22:58:42Z",
    "updated_at": "2018-04-10T22:58:42Z",
    "author_association": "MEMBER",
    "body": "Supposing this gets killed off, do you have any thoughts for how to go from here to having the relevant Array subclasses implemented?\r\n\r\n> In #20611 we are going with composition, and in #19696 the discussion also seems to go to composition\r\n\r\nGood to know, thanks for passing that on.  My preference for inheritance is pretty minor, so I'm a happy camper.\r\n\r\n> Can you explain this further?\r\n\r\nThe values/_values/data/_data/... issue is probably simpler than I imagine it, but I often find myself having to go double-check what these attributes refer to, since it can be slightly different depending on if I'm looking at an Index or `Series` or `Block` or `Series[datetime64tz]`.  This is largely tangential, and you're right that settling on a naming convention should resolve it.\r\n\r\n> For me the reasons to not merge it in the current state is because: it adds a mixin we in the end might want to remove, it adds a lot of methods to the array classes we don't want there IMO\r\n\r\nFor the mixin concern, that's fair.  I see it as a price-of-doing-business given that the goal of this PR is very specifically to be cut/paste.\r\n\r\nFor the unwanted methods, all the marked methods are needed for the arithmetic ops.  They can be renamed later if needbe (and then restored on `DatetimelikeIndexMixin`).\r\n\r\n> and it let's the Index classes subclass from the Array classes which we also might not want to do in the end.\r\n\r\nI don't understand why that is a negative in and of itself."
  }
]
