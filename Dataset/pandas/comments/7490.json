[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46414613",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7490#issuecomment-46414613",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7490",
    "id": 46414613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDE0NjEz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T09:36:10Z",
    "updated_at": "2014-06-18T09:36:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "you need to use a tuple (0,0)\nin fact NOT using a tuple though it works it a bit wonky to support \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46415537",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7490#issuecomment-46415537",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7490",
    "id": 46415537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDE1NTM3",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T09:46:46Z",
    "updated_at": "2014-06-18T09:47:25Z",
    "author_association": "MEMBER",
    "body": "As I'm sure you know, Python's `__getitem__` syntax makes no distinction between `x[(0, 0)]` and `x[0, 0]`, though I agree that the former makes the intent here clearer.\n\nIn any case, `s.iloc[(0, 0)]` should work.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46415979",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7490#issuecomment-46415979",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7490",
    "id": 46415979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDE1OTc5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T09:51:32Z",
    "updated_at": "2014-06-18T09:51:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "indexing interpretation is amazing complex\n\nthink about what\n\ndf.loc[0,0] could possibly be\n\nso u guess this is technically a bug in that iloc for Series should also try to index into a multi index when passed multiple indexers\n\nwhy don't u give it a shot to fix \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46416751",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7490#issuecomment-46416751",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7490",
    "id": 46416751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDE2NzUx",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T10:00:05Z",
    "updated_at": "2014-06-18T10:00:05Z",
    "author_association": "MEMBER",
    "body": "It doesn't matter if you use a tuple or not (for a series!). With loc this works `s.loc[0,0]` just as expected. (but of course, for a dataframe this is something else, there you would need `df.loc[(0,0),:]`\n\nBut I think more important, what should it mean? You could say, if you are thinking of integer locations based on the whole dataframe, there is only _one_ first row? \nWhat would `s.iloc[(0, 1)]` mean? First location in level 0, but second location in level 1? That does contradicts a bit no? I think you are actually thinking \"the first location of the values where the label in level 0 is equal to the first occurring label in that level\" (something like `s.groupby(level=0).get_group(0).iloc[0]`) But what if the index labels are not sorted? What should it then mean?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46417129",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7490#issuecomment-46417129",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7490",
    "id": 46417129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDE3MTI5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T10:04:13Z",
    "updated_at": "2014-06-18T10:04:13Z",
    "author_association": "MEMBER",
    "body": "By the way, if you do this with a dataframe with `iloc`, it interpretes the tuple as a list of two integer locations:\n\n```\nIn [109]: s.to_frame().iloc[(0,0),:]\nOut[109]: \n     0\n0 0  0\n  0  0\n```\n\nSo for a dataframe `df.iloc[(0,0),:]` and `df.iloc[[0,0],:]` is equivalent, so you could argue that `s.iloc[(0,0)]` (and thus `s.iloc[0,0]`) should also do the same as `s.iloc[[0,0]]` and return two rows.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46417434",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7490#issuecomment-46417434",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7490",
    "id": 46417434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDE3NDM0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T10:07:27Z",
    "updated_at": "2014-06-18T10:07:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "so I wonder then should iloc\nwith a multi index and a tuple be an error\nas u probably mean a list (and if so then it should be specified as a list and not interpreted that way)\n\nas the ordering of a MultiIndex is only guaranteed when sorted\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46422234",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7490#issuecomment-46422234",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7490",
    "id": 46422234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDIyMjM0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T11:09:30Z",
    "updated_at": "2014-06-18T11:09:30Z",
    "author_association": "MEMBER",
    "body": "But with a dataframe, a tuple is interpreted as a list (as in `df.iloc[(0,1),:]`), shouldn't this be the same with a series?\n\nHowever, that is a minor point, the main thing is that I think multi-indexing with `iloc` does not make sense (seeing the location as 'flat' even if you have multiple levels of labels). Or does it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46427808",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7490#issuecomment-46427808",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7490",
    "id": 46427808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDI3ODA4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T12:15:50Z",
    "updated_at": "2014-06-18T12:16:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, this seems like it reports a correct error, @shoyer are you seeing something different?\n\n```\nIn [1]: midx = pd.MultiIndex.from_product([range(3), range(5)])\n\nIn [2]: s = pd.Series(range(15), midx)\n\nIn [3]: s\nOut[3]: \n0  0     0\n   1     1\n   2     2\n   3     3\n   4     4\n1  0     5\n   1     6\n   2     7\n   3     8\n   4     9\n2  0    10\n   1    11\n   2    12\n   3    13\n   4    14\ndtype: int64\n\nIn [6]: s.loc[0,1]\nOut[6]: 1\n\nIn [7]: s.loc[(0,1)]\nOut[7]: 1\n\nIn [8]: s.iloc[(0,0)]\nIndexingError: Too many indexers\n\nIn [9]: s.iloc[0,0]\nIndexingError: Too many indexers\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46466300",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7490#issuecomment-46466300",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7490",
    "id": 46466300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDY2MzAw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T17:24:32Z",
    "updated_at": "2014-06-18T17:24:32Z",
    "author_association": "MEMBER",
    "body": "@jreback I definitely do see the same error, and `IndexingError: Too many indexers` seems like the right error (if this is actually prohibited).\n\n@jorisvandenbossche This is an interesting point about nested tuple indexing on a DataFrame invoking fancy indexing. That is indeed consistent with how numpy does things.\n\nSo it looks like we could not add this without breaking some user code, although I do think it is rather unusual to use tuples (instead of lists or arrays) for indexers along a dimension, given how it doesn't work for 1D. I would be OK breaking the current nested tuple indexing, but that is definitely a design trade-off. (Note that `.loc` is already different from numpy indexing in some cases, for example if you do fancy indexing in multiple dimensions at once.)\n\nLet me try to reproduce your pathological case (in a series, for simplicity):\n\n```\n>>> idx = pd.MultiIndex([['a', 'b'], [2, 1]], [[0, 0, 1, 1], [0, 1, 1, 0]])\n>>> idx\nMultiIndex(levels=[[u'a', u'b'], [2, 1]],\n           labels=[[0, 0, 1, 1], [0, 1, 1, 0]])\n>>> s = pd.Series(np.arange(4), idx)\n>>> s\na  2    0\n   1    1\nb  1    2\n   2    3\ndtype: int64\n```\n\n`.iloc` should use the MultiIndex labels, which would mean `s.iloc[(1, 0)] == 3` (not 2). I do agree this is somewhat counter-intuitive if the levels aren't sorted, but this is an unsupported corner case: `.iloc` already contains a warning about sorted labels:\n`Warning You will need to make sure that the selection axes are fully lexsorted!`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46477207",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7490#issuecomment-46477207",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7490",
    "id": 46477207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDc3MjA3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T18:49:05Z",
    "updated_at": "2014-06-18T18:49:05Z",
    "author_association": "MEMBER",
    "body": "@shoyer I don't follow your example I think. Can you explain why you think `s.iloc[(1,0)]` should be 3 and not 2? \nAnd when do you get that warning when using `iloc`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46504259",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7490#issuecomment-46504259",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7490",
    "id": 46504259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTA0MjU5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T22:46:25Z",
    "updated_at": "2014-06-18T22:46:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "related is #5420 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46530924",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7490#issuecomment-46530924",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7490",
    "id": 46530924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTMwOTI0",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-19T07:24:18Z",
    "updated_at": "2014-06-19T07:24:18Z",
    "author_association": "MEMBER",
    "body": "OK, here's a prototype of my proposed functionality:\n\n``` python\nimport numpy as np\nimport pandas as pd\n\ndef get_iloc(index, indexer):\n    int_levels = [np.arange(len(level)) for level in index.levels]\n    return pd.MultiIndex(int_levels, index.labels).get_loc(indexer)\n\ndef iloc(series, indexer):\n    return series.iloc[get_iloc(series.index, indexer)]\n```\n\nAnd some code to delve into these issues;\n\n``` python\nidx = pd.MultiIndex([[0, 1], [0, 1]], [[0, 0, 1, 1], [0, 1, 1, 0]])\ns = pd.Series(np.arange(4), idx, name='s')\n\nidx2 = pd.MultiIndex([[1, 0], [1, 0]], [[1, 1, 0, 0], [1, 0, 0, 1]])\ns2 = pd.Series(np.arange(4), idx2, name='s2')\n\ndata = [(i, j, s.loc[(i, j)], s2.loc[(i, j)],\n         iloc(s, (i, j)), iloc(s2, (i, j)))\n        for i in range(2) for j in range(2)]\nresults = pd.DataFrame.from_records(\n    data, columns=['i', 'j', 'loc', 'loc2', 'iloc', 'iloc2']\n    ).set_index(['i', 'j'])\n```\n\n```\n>>> print s\n0  0    0\n   1    1\n1  1    2\n   0    3\nName: s, dtype: int64\n>>> print s2\n0  0    0\n   1    1\n1  1    2\n   0    3\nName: s2, dtype: int64\n>>> print results\n     loc  loc2  iloc  iloc2\ni j                        \n0 0    0     0     0      2\n  1    1     1     1      3\n1 0    3     3     3      1\n  1    2     2     2      0\n```\n\nSo yes, as you can see, this proposal for iloc gives inconsistent results if the multi-index is not lexsorted -- but otherwise gives results that are fully consistent with `loc` for integer multi-indexes.\n\nI'm not sure it's possible to define this sort of indexing unambiguously without lexsorting, but again, that is a mostly standard constraint of MultiIndex.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46542284",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7490#issuecomment-46542284",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7490",
    "id": 46542284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQyMjg0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-19T09:51:53Z",
    "updated_at": "2014-06-19T09:51:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer how is this useful? we already have many types of indexing, and it is a struggle to keep everything consistent now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46809389",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7490#issuecomment-46809389",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7490",
    "id": 46809389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODA5Mzg5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-23T06:16:03Z",
    "updated_at": "2014-06-23T06:16:03Z",
    "author_association": "MEMBER",
    "body": "Now we've thought through the full implications of how this could work, I'm no longer convinced this is a good idea. Reasoning for non-lexsorted indexes is pretty convoluted, and I support `.loc` being as ndarray-like as possible.\n"
  }
]
