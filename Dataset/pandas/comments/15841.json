[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290257411",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290257411",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290257411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDI1NzQxMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T23:30:38Z",
    "updated_at": "2017-03-29T23:30:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @llllllllll @ssanderson "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290258051",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290258051",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290258051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDI1ODA1MQ==",
    "user": {
      "login": "llllllllll",
      "id": 3064397,
      "node_id": "MDQ6VXNlcjMwNjQzOTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3064397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/llllllllll",
      "html_url": "https://github.com/llllllllll",
      "followers_url": "https://api.github.com/users/llllllllll/followers",
      "following_url": "https://api.github.com/users/llllllllll/following{/other_user}",
      "gists_url": "https://api.github.com/users/llllllllll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/llllllllll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/llllllllll/subscriptions",
      "organizations_url": "https://api.github.com/users/llllllllll/orgs",
      "repos_url": "https://api.github.com/users/llllllllll/repos",
      "events_url": "https://api.github.com/users/llllllllll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/llllllllll/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T23:34:22Z",
    "updated_at": "2017-03-29T23:34:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the heads up. We mainly use this with blaze so we just need to add that as a dependency to `blaze[server]`. I take it we would just need to import loads/dumps from `pandas_msgpack` instead of `pandas`, right?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290259122",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290259122",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290259122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDI1OTEyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T23:41:19Z",
    "updated_at": "2017-03-29T23:41:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@llllllllll I was just proposing this to see if people think its a good idea :>\r\n\r\nbut yes you could be explicit on the dependency.\r\n\r\nmy reasoning for proposing this are several fold really.\r\n\r\n- its removes some code from main pandas and allows this package to have issues solved independently of the pandas release (not a big deal as this is pretty mature).\r\n- this won't be deprecated in pandas 1.0, but I don't think will be supported in pandas 2 mainly because we are bringing on stream more 'standardized' formats (parquet / arrow / feather). These DO support wire formats (arrow), so that covers this usecase.\r\n- the internal format of the msgpack is pretty pandas specific. not that this is a problem, but it makes interop with other systems a bit more tricky."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290259286",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290259286",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290259286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDI1OTI4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T23:42:20Z",
    "updated_at": "2017-03-29T23:42:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @wesm "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290259489",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290259489",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290259489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDI1OTQ4OQ==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T23:43:33Z",
    "updated_at": "2017-03-29T23:43:33Z",
    "author_association": "MEMBER",
    "body": "+1 on splitting off this code"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290259713",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290259713",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290259713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDI1OTcxMw==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T23:44:57Z",
    "updated_at": "2017-03-29T23:44:57Z",
    "author_association": "MEMBER",
    "body": "I also think splitting off pandas-json would be a good idea (I would like to consider deprecate that for a native RapidJSON-based C++ reader via Arrow sometime in the next year)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290268479",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290268479",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290268479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDI2ODQ3OQ==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-30T00:44:01Z",
    "updated_at": "2017-03-30T00:44:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "> the internal format of the msgpack is pretty pandas specific. not that this is a problem, but it makes interop with other systems a bit more tricky.\r\n\r\nThis to me feels like an argument **against** splitting off this code into a separate package.  If the pandas-msgpack format is tied to implementation details of pandas objects, then you would usually want to upgrade pandas-msgpack and pandas in lockstep, or else you risk breakage because your pandas-msgpack version is incompatible with your pandas version.  Having the msgpack format in the pandas codebase itself ensures that you don't have to worry as much about version compatibility issues."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290268893",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290268893",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290268893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDI2ODg5Mw==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-30T00:46:56Z",
    "updated_at": "2017-03-30T00:46:56Z",
    "author_association": "MEMBER",
    "body": "With continuous integration tools, we can automate the testing, so that doesn't seem like an issue. I think pandas's monolithic nature has made it harder for the community to make progress on components that may evolve at a different pace vs. the rest of the project. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290272474",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290272474",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290272474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDI3MjQ3NA==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-30T01:11:17Z",
    "updated_at": "2017-03-30T01:11:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think pandas's monolithic nature has made it harder for the community to make progress on components that may evolve at a different pace vs. the rest of the project.\r\n\r\nI agree with this, and as someone building an application on top of pandas, I appreciate the value of potentially slimming down the core distribution.  At the same time, I suspect that the monolithic nature of pandas is actually a feature for many of pandas' users, since it means they don't have worry about or manage a constellation of `pandas-*` packages; they can just `pip install pandas` and get everything they might use.\r\n\r\nOne way to alleviate this concern might be to have something like a `pandas-extra` \"meta-package\", which would install the core pandas library along with related packages like pandas-msgpack.  This would allow users to pick and choose which pieces they want if they care to do so, while still allowing users to install the whole world if they can't be bothered to figure out exactly which sub-packages they need."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290275034",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290275034",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290275034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDI3NTAzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-30T01:28:33Z",
    "updated_at": "2017-03-30T12:55:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually metapackagea would be great for this\r\n\r\ne.g. right now we should have a \r\n\r\n``pandas-perf`` which includes numexpr and bottleneck \r\n\r\nyou. could actually go nuts with this\r\n\r\n``pandas-io`` (excel, sql, hdf5, json)\r\n``pandas-io-extras`` (html, hig query, msgpsck)\r\n\r\nso a big question is how to organize this to make it useful and not confusing \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290521638",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290521638",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290521638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDUyMTYzOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-30T19:38:03Z",
    "updated_at": "2017-03-30T19:38:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "morning project!\r\n\r\nhttps://github.com/pydata/pandas-msgpack\r\nhttp://pandas-msgpack.readthedocs.io/en/latest/\r\n\r\nnot released yet.\r\nis there an easy way to build wheels all at once (rather than using my separate envs to do this)? could/should have travis do it I suppose."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290693533",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290693533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290693533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDY5MzUzMw==",
    "user": {
      "login": "wikiped",
      "id": 5990528,
      "node_id": "MDQ6VXNlcjU5OTA1Mjg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5990528?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wikiped",
      "html_url": "https://github.com/wikiped",
      "followers_url": "https://api.github.com/users/wikiped/followers",
      "following_url": "https://api.github.com/users/wikiped/following{/other_user}",
      "gists_url": "https://api.github.com/users/wikiped/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wikiped/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wikiped/subscriptions",
      "organizations_url": "https://api.github.com/users/wikiped/orgs",
      "repos_url": "https://api.github.com/users/wikiped/repos",
      "events_url": "https://api.github.com/users/wikiped/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wikiped/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T11:59:04Z",
    "updated_at": "2017-03-31T11:59:04Z",
    "author_association": "NONE",
    "body": "@jreback \r\n\r\n  > so a big question is how to organize this to make it useful and not confusing\r\n\r\nJust to add a \"lamer's\" perspective on this. Not a long time ago iptyhon notebook / jupyter went through a similar split. So now there is a bunch of 'sub-packages' available for installation. For example in conda:\r\n\r\n    jupyter\r\n    jupyter_client\r\n    jupyter_cms\r\n    jupyter_console\r\n    jupyter_contrib_core\r\n    jupyter_contrib_nbextensions\r\n    jupyter_core\r\n    jupyter_dashboards\r\n    jupyter_highlight_selected_word\r\n    jupyter_kernel_gateway\r\n    jupyter_latex_envs\r\n    jupyter_nbextensions_configurator\r\n    jupyter_sphinx\r\n\r\nWhen the split happened - my initial reaction was indeed _\"what should I install now?\"_. Well it turned out that `conda install jupyter` was sufficient to have all the functionality that was available previously before the split. Any \"extra\" feature (that was not historically part of the core ipython notebook) had to be added by installing that \"extra\" package. \r\n\r\nI might be wrong, but it is my understanding that `jupyter` is not a package per se, but a script to install all required sub-packages to have expected (i.e. what users have gotten used to) functionality. \r\n\r\nWithout doubts clearly documented changes come indispensable. \r\nAnd because pandas is an exemplary well documentation library it also largely 'defines' perception of 'what pandas consists of'. So the closer parts of the split are to what is in the docs the easier it might be for users to understand 'what's going on and where it's going'. \r\n\r\nI.e. why should not `performance_package` be part of core pandas functionality? It's subjective, but I would expect that `conda install pandas` should deliver pandas with all its mighty powers and not some stripped down version. If for some reason user decides it's not required - \"lighter\" version through installation of the right set of sub-packages might be appropriate."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290705633",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290705633",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290705633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDcwNTYzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T13:01:26Z",
    "updated_at": "2017-03-31T13:01:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@wikiped ``jupyter`` is itself a ``metapackage``. This *looks* and *feels* exactly like a regular package (with versioning), and the purpose is to simply install dependencies.\r\n\r\n``pandas`` just tries to install the minimum dependencies ATM. IOW, it *does not* install ``numexpr`` or ``bottleneck`` (or ``scipy``). \r\n\r\nFor example, if you are using SQL, there are myriad of options to install, pandas cannot know what to do here (sure we *could* install ``sqlalchemy`` I suppose). \r\n\r\nA possible future path is to make *pandas* a meta-package, with sub-packages like:\r\n\r\n``pandas-core``\r\n``pandas-io``\r\n``pandas-perf``\r\n``pandas-...``\r\n\r\netc. The questions are:\r\n\r\n- is this worth is from a complexity point of view (surely the *core* pandas code is less, but its not necessarily simpler and now has to deal with the various sub-package APIs that could change)\r\n- from a user point of view is this wanted? most people prob just want 'pandas' and don't care about where code/packages live. Though for example, if they *never* use ``pandas-gbq`` or ``pandas-msgpack`` then its fine to have these as non-core.\r\n- using ``conda`` this is *really* simple. but ``pip`` is harder to make dependencies work like this (though is better in recent times). Our installed base is a big user of both, so this is a consideration.\r\n\r\nMy feeling at this point is that is ok to split off non-core functionaility and direct the user to install it if they want it.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290718633",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290718633",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290718633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDcxODYzMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T13:55:24Z",
    "updated_at": "2017-03-31T13:55:24Z",
    "author_association": "MEMBER",
    "body": "For `pip` there is the possibility to use `extras_require` to have something like `pip install pandas[io-extras]` (dask also makes use of this: http://dask.pydata.org/en/latest/install.html). \r\nBut I am not sure if conda has a similar mechanism"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290733664",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15841#issuecomment-290733664",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15841",
    "id": 290733664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDczMzY2NA==",
    "user": {
      "login": "wikiped",
      "id": 5990528,
      "node_id": "MDQ6VXNlcjU5OTA1Mjg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5990528?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wikiped",
      "html_url": "https://github.com/wikiped",
      "followers_url": "https://api.github.com/users/wikiped/followers",
      "following_url": "https://api.github.com/users/wikiped/following{/other_user}",
      "gists_url": "https://api.github.com/users/wikiped/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wikiped/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wikiped/subscriptions",
      "organizations_url": "https://api.github.com/users/wikiped/orgs",
      "repos_url": "https://api.github.com/users/wikiped/repos",
      "events_url": "https://api.github.com/users/wikiped/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wikiped/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T14:51:03Z",
    "updated_at": "2017-03-31T14:51:03Z",
    "author_association": "NONE",
    "body": "I also think making `pandas` a `metapackage` is right way to go and I would say it would be beneficial for both developers (easier \"develo-gement\" of sub-parts) and users (easier selection of required features and better control of space).\r\n\r\nComplexity might be constrained / driven by:\r\n\r\n  1. Speed of overall library development (new features, etc).\r\n  I.e. does spin off of the sub-part help to speed up development of the library as a whole? (i.e. `msgpack` would probably score high on this) \r\n  2. Already mentioned development / management benefits. I.e. does spin off make development process of the sub-part and library easier? (i.e. `msgpack` might also score higher on this)\r\n  3. How \"essential\" is sub-part to the core functionality? I.e. will pandas lose its core benefits from user's pov if this sub-part has to be installed separately (i.e. 'msgpack` would perhaps score lower on this.\r\n  4. Already mention usability / \"installability\" of sub-parts. I.e. How confusing it is for the end-user to understand weather he/she needs to install this particular sub-part and is it easy to do? (i.e. `msgpack` would also score high on this).\r\n\r\nI can hardly speak for the whole pandas user-community and perhaps it would be best to get a broader feedback on this from users. And I am not sure what would be the right way to handle this. Perhaps some `warning` message inviting users to give feedback in whatever-the-right-channel might be?\r\n\r\nPart of this exercise is to make a good list of sub-parts to facilitate good feedback. And it might be good to go a bit nuts about it and have longer than needed list of parts to select from:\r\n\r\n    pandas_core\r\n    pandas_io_excel\r\n    pandas_io_sql\r\n    pandas_io_hdf5\r\n    pandas_io_hadoop / hdfs\r\n    pandas_statistics\r\n    pandas_machine_learning\r\n    pandas_perf\r\n    pandas_parallel\r\n    pandas_notebook\r\n    ...\r\n\r\nThe final list of sub-parts might be re-grouped depending on feedback and where it makes sense."
  }
]
