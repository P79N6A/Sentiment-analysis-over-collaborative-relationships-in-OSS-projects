[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290128870",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15836#issuecomment-290128870",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15836",
    "id": 290128870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDEyODg3MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T15:34:30Z",
    "updated_at": "2017-03-29T15:34:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I do almost exactly that (but only if ``origin`` is specfied) in https://github.com/pandas-dev/pandas/pull/15828\r\n\r\n``unit=None`` is actually the default (though the docs say ``ns``). would need something like this: https://github.com/pandas-dev/pandas/pull/15828/commits/f5361ec12b7e389ff6884bcad59ba572dc291f3a#L464\r\n\r\nso +1 from me to require a ``unit`` if the arg is numeric\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/291552762",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15836#issuecomment-291552762",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15836",
    "id": 291552762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTU1Mjc2Mg==",
    "user": {
      "login": "atbd",
      "id": 9143722,
      "node_id": "MDQ6VXNlcjkxNDM3MjI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9143722?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atbd",
      "html_url": "https://github.com/atbd",
      "followers_url": "https://api.github.com/users/atbd/followers",
      "following_url": "https://api.github.com/users/atbd/following{/other_user}",
      "gists_url": "https://api.github.com/users/atbd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atbd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atbd/subscriptions",
      "organizations_url": "https://api.github.com/users/atbd/orgs",
      "repos_url": "https://api.github.com/users/atbd/repos",
      "events_url": "https://api.github.com/users/atbd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atbd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-04T16:18:59Z",
    "updated_at": "2017-04-04T16:18:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, i'm working on it and have few questions.\r\nDo I have to take long numbers into account (and so, python2/3 compatibility) ? I think there are too big to be supported.\r\nPlus, with my added tests I found a bug\r\n```python\r\nIn [3]: pd.to_datetime(True, unit='ms')\r\nOut[3]: Timestamp('1970-01-01 00:00:00.001000')\r\n\r\nIn [4]: pd.to_datetime(False, unit='ms')\r\nOut[4]: Timestamp('1970-01-01 00:00:00')\r\n```\r\n\r\nDoes somebody confirms it ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/291557579",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15836#issuecomment-291557579",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15836",
    "id": 291557579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTU1NzU3OQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-04T16:35:06Z",
    "updated_at": "2017-04-04T16:35:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Numbers than don't fit into `int64` space should already raise, I wouldn't expect this change to hit that, though maybe you've found a corner case.\r\n\r\n```python\r\npd.to_datetime([np.iinfo('i8').max + 1])\r\nOverflowError: int too big to convert\r\n```\r\n\r\nAnd I agree that's a bug - the no unit case seem to be caught ok.\r\n```python\r\npd.to_datetime(True)\r\nTypeError: <class 'bool'> is not convertible to datetime\r\n```\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/291633360",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15836#issuecomment-291633360",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15836",
    "id": 291633360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTYzMzM2MA==",
    "user": {
      "login": "atbd",
      "id": 9143722,
      "node_id": "MDQ6VXNlcjkxNDM3MjI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9143722?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atbd",
      "html_url": "https://github.com/atbd",
      "followers_url": "https://api.github.com/users/atbd/followers",
      "following_url": "https://api.github.com/users/atbd/following{/other_user}",
      "gists_url": "https://api.github.com/users/atbd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atbd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atbd/subscriptions",
      "organizations_url": "https://api.github.com/users/atbd/orgs",
      "repos_url": "https://api.github.com/users/atbd/repos",
      "events_url": "https://api.github.com/users/atbd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atbd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-04T21:11:59Z",
    "updated_at": "2017-04-04T21:11:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay, thanks.\r\n\r\nThe bug comes from `array_with_unit_to_datetime` which calls `array_to_datetime` with unit=None | ns but not in the other unit cases.\r\nFor now, I check if the arg type is either bool (must be done because bool inherits from int) or numerical and raise the right error. But this makes conflicts with `errors='coerce'` for example.\r\n\r\nMy actual check:\r\n```python\r\nif arg is None:                                                                       \r\n    return None                                                                       \r\nelif isinstance(arg, (bool,)):                                                        \r\n    raise TypeError(\"{0} is not convertible to datetime\"\r\n                    .format(type(arg)))                                               \r\nelif isinstance(arg, (int, float)) and unit is None:                                  \r\n    raise ValueError(\"a unit is required in case of numerical arg\")\r\n```\r\n\r\nDo I keep this behaviour or skip the bool case and raise the same numerical error ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/291635773",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15836#issuecomment-291635773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15836",
    "id": 291635773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTYzNTc3Mw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-04T21:22:08Z",
    "updated_at": "2017-04-04T21:22:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd suggest opening a PR with your changes, even if work-in-progress, that will be easier to review.\r\n\r\nI'm not sure I completely understand your question, but with `errors='coerce'`, I suppose the right answer is to return an array full of `NaT`s , although it admittedly looks strange.\r\n\r\n```\r\nIn [98]: pd.to_datetime([1, 2], errors='coerce') \r\nOut[98]: DatetimeIndex(['NaT', 'NaT'], dtype='datetime64[ns]', freq=None)\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/291638710",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15836#issuecomment-291638710",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15836",
    "id": 291638710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTYzODcxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-04T21:34:23Z",
    "updated_at": "2017-04-04T21:34:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "``pd.to_datetime([1, 2], errors='coerce') ``\r\n\r\nthis would raise, because you haven't specified a ``unit`` and you have a numeric entry (which requires a unit).\r\n\r\nThe check for unit needs to done *before* any conversions. Its kind of like the ``origin=`` check (which also requires a unit to be specified and a numeric type (int/float)).\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292112515",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15836#issuecomment-292112515",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15836",
    "id": 292112515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjExMjUxNQ==",
    "user": {
      "login": "atbd",
      "id": 9143722,
      "node_id": "MDQ6VXNlcjkxNDM3MjI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9143722?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atbd",
      "html_url": "https://github.com/atbd",
      "followers_url": "https://api.github.com/users/atbd/followers",
      "following_url": "https://api.github.com/users/atbd/following{/other_user}",
      "gists_url": "https://api.github.com/users/atbd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atbd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atbd/subscriptions",
      "organizations_url": "https://api.github.com/users/atbd/orgs",
      "repos_url": "https://api.github.com/users/atbd/repos",
      "events_url": "https://api.github.com/users/atbd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atbd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T09:01:11Z",
    "updated_at": "2017-04-06T09:01:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I made the changes to take into account all cases and updated the tests.\r\nNevertheless, I still have issues with boolean type when mixed with other types (numpy.object dtype) because the errors raising is non-consistent between ns and the other units.\r\nI thought about making something like this:\r\n```python\r\ndef check_bool(arg):\r\n    arg = np.asarray(arg)\r\n    return ((arg == True) | (arg == False)).sum()\r\n```\r\nIn case of > 0 raising a ValueError but it seems a little overkill to me"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/311760954",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15836#issuecomment-311760954",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15836",
    "id": 311760954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTc2MDk1NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-28T19:20:40Z",
    "updated_at": "2017-06-28T19:20:40Z",
    "author_association": "MEMBER",
    "body": "Related issue: https://github.com/pandas-dev/pandas/issues/14350"
  }
]
