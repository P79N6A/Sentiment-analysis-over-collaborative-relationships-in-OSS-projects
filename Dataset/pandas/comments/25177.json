[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461146538",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25177#issuecomment-461146538",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25177",
    "id": 461146538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTE0NjUzOA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T19:04:57Z",
    "updated_at": "2019-02-06T19:04:57Z",
    "author_association": "MEMBER",
    "body": "Yes; already noted in https://github.com/pandas-dev/pandas/issues/16401. No explicit timeline on this feature but PRs always welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461163416",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25177#issuecomment-461163416",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25177",
    "id": 461163416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTE2MzQxNg==",
    "user": {
      "login": "smsaladi",
      "id": 2942215,
      "node_id": "MDQ6VXNlcjI5NDIyMTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2942215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smsaladi",
      "html_url": "https://github.com/smsaladi",
      "followers_url": "https://api.github.com/users/smsaladi/followers",
      "following_url": "https://api.github.com/users/smsaladi/following{/other_user}",
      "gists_url": "https://api.github.com/users/smsaladi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smsaladi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smsaladi/subscriptions",
      "organizations_url": "https://api.github.com/users/smsaladi/orgs",
      "repos_url": "https://api.github.com/users/smsaladi/repos",
      "events_url": "https://api.github.com/users/smsaladi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smsaladi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T19:52:55Z",
    "updated_at": "2019-02-06T19:52:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Didn't mean to open a duplicate issue...thanks!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461187096",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25177#issuecomment-461187096",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25177",
    "id": 461187096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTE4NzA5Ng==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T21:05:38Z",
    "updated_at": "2019-02-06T21:05:38Z",
    "author_association": "MEMBER",
    "body": "To expand on  @mroeschke' comment a bit: A lot of this functionality was just added in 0.24.0 but is not documented well beyond the API reference, which should certainly be improved (xref #16400).\r\n\r\n> constructing the `pd.Series` of interval values\r\n\r\nThis can be done via the [`IntervalArray`](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.arrays.IntervalArray.html) (or [`IntervalIndex`](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.IntervalIndex.html)) constructor:\r\n\r\n```python\r\nIn [1]: import pandas as pd; pd.__version__\r\nOut[1]: '0.24.0'\r\n\r\nIn [2]: df = pd.DataFrame({'start': [0, 1, 4], 'end': [2, 3, 8]}); df\r\nOut[2]:\r\n   start  end\r\n0      0    2\r\n1      1    3\r\n2      4    8\r\n\r\nIn [3]: df['range'] = pd.arrays.IntervalArray.from_arrays(df['start'], df['end'])\r\n\r\nIn [4]: df\r\nOut[4]:\r\n   start  end   range\r\n0      0    2  (0, 2]\r\n1      1    3  (1, 3]\r\n2      4    8  (4, 8]\r\n```\r\n\r\n> I could imagine an interface similar to the `pd.Series.str`\r\n\r\nThere is an open issue to add this (xref #16401).  This can be more or less done currently via the `array` property:\r\n\r\n```python\r\nIn [5]: df['range'].array.length\r\nOut[5]: Int64Index([2, 2, 4], dtype='int64', name='end')\r\n\r\nIn [6]: df['range'].array.mid\r\nOut[6]: Float64Index([1.0, 2.0, 6.0], dtype='float64', name='start')\r\n\r\nIn [7]: df['range'].array.overlaps(pd.Interval(2.5, 5))\r\nOut[7]: array([False,  True,  True])\r\n```\r\nThe main difference between a full interval accessor and the `array` property is the accessor would work with categoricals as well, and have a more consistent return type.  I think the accessor would also be limited to elementwise operations, but not sure.\r\n\r\nThere are still quite a few things that need work, and many open issue.  For example, arithmetic operations don't work for `IntervalArray`, but they do for `IntervalIndex`:\r\n```python\r\nIn [8]: df['range'] + 1\r\n---------------------------------------------------------------------------\r\nTypeError: unsupported operand type(s) for +: 'IntervalArray' and 'int'\r\n\r\nIn [9]: pd.Index(df['range']) + 1\r\nOut[9]:\r\nIntervalIndex([(1, 3], (2, 4], (5, 9]],\r\n              closed='right',\r\n              dtype='interval[int64]')\r\n```\r\n\r\nAnd also some suggested features (xref #19480, #21998) along with new specs for indexing behavior with intervals (xref #16316).\r\n\r\nPRs are welcome to address any of the shortcomings mentioned here!\r\n"
  }
]
