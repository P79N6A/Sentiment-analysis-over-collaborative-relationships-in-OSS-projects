[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/323782920",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17296#issuecomment-323782920",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17296",
    "id": 323782920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzc4MjkyMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-21T15:55:22Z",
    "updated_at": "2017-08-21T15:55:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the report, this is distinct enough from #13432 to warrant a new issue\r\n\r\n> Or does the step sign not matter as long as the values within the index are correct?\r\n\r\nI think this is correct. `RangeIndex` is just a performance thing, I don't think we can make any guarantees beyond that the values will be correct (including whether or not you get back a RangeIndex or regular Index). All of our tests should be of the form\r\n\r\n```\r\nassert_frame_equal(idx1 & idx2, Index(list(idx1)) &Index list(idx2)))\r\n```\r\n\r\nwith additional checks for whether or not the return value should be a RangeIndex.\r\n\r\nImplementation wise, I'd say just do whatever is easiest. I suspect that will be\r\n\r\n- positive step when both are positive\r\n- negative step when both are negative\r\n- not sure about mixed"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/325887871",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17296#issuecomment-325887871",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17296",
    "id": 325887871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTg4Nzg3MQ==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T05:44:33Z",
    "updated_at": "2017-08-30T05:44:33Z",
    "author_association": "MEMBER",
    "body": "> Implementation wise, I'd say just do whatever is easiest. I suspect that will be\r\n> \r\n>     positive step when both are positive\r\n>     negative step when both are negative\r\n>     not sure about mixed\r\n\r\nIn #17374 I followed \"negative step iff both are negative\", which has the advantage of being symmetric, but it would pretty trivial to change to \"negative step iff step of caller is negative\"."
  }
]
