[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/309043202",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16713#issuecomment-309043202",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16713",
    "id": 309043202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTA0MzIwMg==",
    "user": {
      "login": "olizhu",
      "id": 20557798,
      "node_id": "MDQ6VXNlcjIwNTU3Nzk4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20557798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olizhu",
      "html_url": "https://github.com/olizhu",
      "followers_url": "https://api.github.com/users/olizhu/followers",
      "following_url": "https://api.github.com/users/olizhu/following{/other_user}",
      "gists_url": "https://api.github.com/users/olizhu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olizhu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olizhu/subscriptions",
      "organizations_url": "https://api.github.com/users/olizhu/orgs",
      "repos_url": "https://api.github.com/users/olizhu/repos",
      "events_url": "https://api.github.com/users/olizhu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olizhu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-16T14:37:27Z",
    "updated_at": "2017-06-16T14:37:27Z",
    "author_association": "NONE",
    "body": "I've just tested some more and it seems that the error occurs whenever there is a null object in a column containing datetimes. So replacing NaT with NaN still has the same error."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/309056447",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16713#issuecomment-309056447",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16713",
    "id": 309056447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTA1NjQ0Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-16T15:26:37Z",
    "updated_at": "2017-06-16T15:26:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "So when we reindex `df2` like `df1` we end up with different dtypes\r\n\r\n```python\r\nIn [22]: df2.reindex_like(df1).dtypes\r\nOut[22]:\r\nA      int64\r\nB    float64\r\ndtype: object\r\n```\r\n\r\nI wonder if we could add a parameter to `reindex_like` for controlling the dtypes of columns that are created. I could see that being broadly useful."
  }
]
