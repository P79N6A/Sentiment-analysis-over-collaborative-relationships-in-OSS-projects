[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248258226",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14256#issuecomment-248258226",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14256",
    "id": 248258226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI1ODIyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-20T10:03:12Z",
    "updated_at": "2016-09-20T10:03:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "When passing object dtypes which don't actually contain strings (though they could also contain objects which have a good enough response to special methods to work), you must supply a `default_handler`.\n\nSo the first 2 cases above are expected. \n\nThe 3rd is handled this way.\n\n```\nIn [6]: pd.DataFrame({'A': [bson.objectid.ObjectId('574b4454ba8c5eb4f98a8f45')]}).to_json(default_handler=str)\nOut[6]: '{\"A\":{\"0\":\"574b4454ba8c5eb4f98a8f45\"}}'\n```\n\nseg faulting shouldn't happen though; we should get an exception that a `default_handler` is not supplied.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248258298",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14256#issuecomment-248258298",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14256",
    "id": 248258298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI1ODI5OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-20T10:03:34Z",
    "updated_at": "2016-09-20T10:03:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://pandas.pydata.org/pandas-docs/stable/io.html#fallback-behavior\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248258517",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14256#issuecomment-248258517",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14256",
    "id": 248258517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI1ODUxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-20T10:04:42Z",
    "updated_at": "2016-09-20T10:04:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @kawochen \ncc @Komnomnomnom\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248258935",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14256#issuecomment-248258935",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14256",
    "id": 248258935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI1ODkzNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-20T10:06:47Z",
    "updated_at": "2016-09-20T10:06:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suppose the 2nd path is also not reporting that a `default_handler` is missing\n\n```\nIn [10]: pd.DataFrame({'A': [bson.objectid.ObjectId('574b4454ba8c5eb4f98a8f45')]}).to_json(default_handler=str)\nOut[10]: '{\"A\":{\"0\":\"574b4454ba8c5eb4f98a8f45\"}}'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/249578309",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14256#issuecomment-249578309",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14256",
    "id": 249578309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTU3ODMwOQ==",
    "user": {
      "login": "detroitcoder",
      "id": 6266683,
      "node_id": "MDQ6VXNlcjYyNjY2ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6266683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detroitcoder",
      "html_url": "https://github.com/detroitcoder",
      "followers_url": "https://api.github.com/users/detroitcoder/followers",
      "following_url": "https://api.github.com/users/detroitcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/detroitcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detroitcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detroitcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/detroitcoder/orgs",
      "repos_url": "https://api.github.com/users/detroitcoder/repos",
      "events_url": "https://api.github.com/users/detroitcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detroitcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-26T14:03:29Z",
    "updated_at": "2016-09-26T14:03:29Z",
    "author_association": "NONE",
    "body": "This impacted us this weekend as well. Our default_handler was only handling specific objects that we wanted to control the json serialization for, but would other wise return the object. We have since changed the logic of the default_handler to serialize everything, but just raising an error if a default_handler is not present does not prevent the to_json method from causing a segfault for different objects.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/249583941",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14256#issuecomment-249583941",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14256",
    "id": 249583941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTU4Mzk0MQ==",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-26T14:22:19Z",
    "updated_at": "2016-09-26T14:22:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I should have some time this weekend or early next week to dig into these segfaults (if nobody gets to it first)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290752361",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14256#issuecomment-290752361",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14256",
    "id": 290752361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDc1MjM2MQ==",
    "user": {
      "login": "DavidCEllis",
      "id": 15880420,
      "node_id": "MDQ6VXNlcjE1ODgwNDIw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15880420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidCEllis",
      "html_url": "https://github.com/DavidCEllis",
      "followers_url": "https://api.github.com/users/DavidCEllis/followers",
      "following_url": "https://api.github.com/users/DavidCEllis/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidCEllis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidCEllis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidCEllis/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidCEllis/orgs",
      "repos_url": "https://api.github.com/users/DavidCEllis/repos",
      "events_url": "https://api.github.com/users/DavidCEllis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidCEllis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T15:55:36Z",
    "updated_at": "2017-03-31T15:55:54Z",
    "author_association": "NONE",
    "body": "This also comes up if you have shapely geometries in a column (came up by accident when a geopandas GeoDataFrame got converted to a regular DataFrame).\r\n\r\nIf you have a small enough sample the json encoder hits the recursion limit and you get an error.\r\n\r\n```python\r\n>>> import pandas as pd\r\n>>> from shapely.geometry import Polygon\r\n>>> geom = Polygon([(0, 0), (1, 1), (1, 0)])\r\n>>> df = pd.DataFrame([('testval {}'.format(i), geom) for i in range(5)], columns=['value', 'geometry'])\r\n>>> df.to_json()\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/david/miniconda3/envs/geotesting/lib/python3.6/site-packages/pandas/core/generic.py\", line 1089, in to_json\r\n    lines=lines)\r\n  File \"/home/david/miniconda3/envs/geotesting/lib/python3.6/site-packages/pandas/io/json.py\", line 39, in to_json\r\n    date_unit=date_unit, default_handler=default_handler).write()\r\n  File \"/home/david/miniconda3/envs/geotesting/lib/python3.6/site-packages/pandas/io/json.py\", line 85, in write\r\n    default_handler=self.default_handler)\r\nOverflowError: Maximum recursion level reached\r\n```\r\n\r\nAdd more rows to the DataFrame and you can get a segfault (doesn't appear to be guaranteed - sometimes you get the OverflowError).\r\n\r\n```python\r\n>>> df = pd.DataFrame([('testval {}'.format(i), geom) for i in range(5000)], columns=['value', 'geometry'])\r\n>>> df.to_json()\r\nSegmentation fault (core dumped)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290756204",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14256#issuecomment-290756204",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14256",
    "id": 290756204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDc1NjIwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T16:09:12Z",
    "updated_at": "2017-03-31T16:09:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@DavidCEllis you need to supply a ``default_handler``"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290765032",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14256#issuecomment-290765032",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14256",
    "id": 290765032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDc2NTAzMg==",
    "user": {
      "login": "DavidCEllis",
      "id": 15880420,
      "node_id": "MDQ6VXNlcjE1ODgwNDIw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15880420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidCEllis",
      "html_url": "https://github.com/DavidCEllis",
      "followers_url": "https://api.github.com/users/DavidCEllis/followers",
      "following_url": "https://api.github.com/users/DavidCEllis/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidCEllis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidCEllis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidCEllis/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidCEllis/orgs",
      "repos_url": "https://api.github.com/users/DavidCEllis/repos",
      "events_url": "https://api.github.com/users/DavidCEllis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidCEllis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T16:42:49Z",
    "updated_at": "2017-03-31T16:42:49Z",
    "author_association": "NONE",
    "body": "@jreback Sorry, I wasn't quite clear - this was a simple way to reproduce the segfault. It's not how I ran into the issue. I know how to make it work, I just wouldn't expect a segfault.\r\n\r\nThe issue was I expected the object to be a GeoPandas GeoDataFrame and it had converted to a regular DataFrame through some operation. On a GeoDataFrame the method works without needing to specify a default_handler. \r\n\r\nOn a regular DataFrame I would expect an exception like the overflow error but got a segfault.\r\n\r\n```python\r\n>>> import pandas as pd\r\n>>> import geopandas as gpd\r\n>>> from shapely.geometry import Polygon\r\n>>> geom = Polygon([(0, 0), (1, 1), (1, 0)])\r\n>>> gdf = gpd.GeoDataFrame([('testval {}'.format(i), geom) for i in range(5000)], columns=['value', 'geometry'])\r\n>>> gdf.to_json()\r\n'Really long GeoJSON string output'\r\n>>> df = pd.DataFrame(gdf)  # GeoDataFrame is a subclass\r\n>>> df.to_json()\r\nSegmentation fault (core dumped)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290769848",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14256#issuecomment-290769848",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14256",
    "id": 290769848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDc2OTg0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T17:02:00Z",
    "updated_at": "2017-03-31T17:02:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@DavidCEllis as you can see from above this is an open bug, pull-requests are welcome to fix. This should raise as ``default_handler`` not supplied. you cannot serialize something that is not a standard object or a pandas object (w/o special support of course). but it shouldn't segfault either."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290787649",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14256#issuecomment-290787649",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14256",
    "id": 290787649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDc4NzY0OQ==",
    "user": {
      "login": "DavidCEllis",
      "id": 15880420,
      "node_id": "MDQ6VXNlcjE1ODgwNDIw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15880420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidCEllis",
      "html_url": "https://github.com/DavidCEllis",
      "followers_url": "https://api.github.com/users/DavidCEllis/followers",
      "following_url": "https://api.github.com/users/DavidCEllis/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidCEllis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidCEllis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidCEllis/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidCEllis/orgs",
      "repos_url": "https://api.github.com/users/DavidCEllis/repos",
      "events_url": "https://api.github.com/users/DavidCEllis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidCEllis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T18:13:27Z",
    "updated_at": "2017-03-31T18:13:27Z",
    "author_association": "NONE",
    "body": "Fair point. Unfortunately I got to the point where the json export methods send the entire dataframe into a C function and I'm not a C programmer.\r\n\r\n[Based on the docs you linked earlier](http://pandas.pydata.org/pandas-docs/stable/io.html#fallback-behavior) I think the default_handler error not supplied will only come up if you supply an unsupported numpy dtype? It looks like it's falling back on the unsupported object behaviour which finishes with:\r\n\r\n> convert the object to a dict by traversing its contents. However this will often fail with an OverflowError or give unexpected results\r\n\r\nIt seems that sometimes it ends up segfaulting instead of raising the OverflowError. On testing it seemed more likely to segfault the larger the array, sometimes the same sized array would segfault and sometimes it would raise the OverflowError. Not sure if this is useful but it seemed to be additional information on how it was being triggered."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/290893908",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14256#issuecomment-290893908",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14256",
    "id": 290893908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDg5MzkwOA==",
    "user": {
      "login": "detroitcoder",
      "id": 6266683,
      "node_id": "MDQ6VXNlcjYyNjY2ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6266683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detroitcoder",
      "html_url": "https://github.com/detroitcoder",
      "followers_url": "https://api.github.com/users/detroitcoder/followers",
      "following_url": "https://api.github.com/users/detroitcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/detroitcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detroitcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detroitcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/detroitcoder/orgs",
      "repos_url": "https://api.github.com/users/detroitcoder/repos",
      "events_url": "https://api.github.com/users/detroitcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detroitcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-01T04:24:14Z",
    "updated_at": "2017-04-01T04:24:14Z",
    "author_association": "NONE",
    "body": "When dealing with dataframes that contain exotic datatypes you need a\ndefault handler for to_json. This has bit my team a couple times now since\nwe first posted the linked issue above. For now always include a\ndefault_handler.\n\nOn Fri, Mar 31, 2017 at 1:13 PM, David Ellis <notifications@github.com>\nwrote:\n\n> Fair point. Unfortunately I got to the point where the json export methods\n> send the entire dataframe into a C function and I'm not a C programmer.\n>\n> Based on the docs you linked earlier\n> <http://pandas.pydata.org/pandas-docs/stable/io.html#fallback-behavior> I\n> think the default_handler error not supplied will only come up if you\n> supply an unsupported numpy dtype? It looks like it's falling back on the\n> unsupported object behaviour which finishes with:\n>\n> convert the object to a dict by traversing its contents. However this will\n> often fail with an OverflowError or give unexpected results\n>\n> It seems that sometimes it ends up segfaulting instead of raising the\n> OverflowError. On testing it seemed more likely to segfault the larger the\n> array, sometimes the same sized array would segfault and sometimes it would\n> raise the OverflowError. Not sure if this is useful but it seemed to be\n> additional information on how it was being triggered.\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/14256#issuecomment-290787649>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AF-fO4893Bxug5QD99HKSg4dqCmKj69Xks5rrUJUgaJpZM4KBYfC>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/335752677",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14256#issuecomment-335752677",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14256",
    "id": 335752677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTc1MjY3Nw==",
    "user": {
      "login": "matthiashuschle",
      "id": 14076347,
      "node_id": "MDQ6VXNlcjE0MDc2MzQ3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14076347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthiashuschle",
      "html_url": "https://github.com/matthiashuschle",
      "followers_url": "https://api.github.com/users/matthiashuschle/followers",
      "following_url": "https://api.github.com/users/matthiashuschle/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthiashuschle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthiashuschle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthiashuschle/subscriptions",
      "organizations_url": "https://api.github.com/users/matthiashuschle/orgs",
      "repos_url": "https://api.github.com/users/matthiashuschle/repos",
      "events_url": "https://api.github.com/users/matthiashuschle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthiashuschle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-11T09:32:12Z",
    "updated_at": "2017-10-11T09:32:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm currently preparing a fix for the segfaults.\r\nBoth cases above are the result of an overflow of the JSON string buffer, but with different origins.\r\nThe first comes from an infinite loop, as the column index is not incremented when in a previous column an error message was set, e.g. from illegal symbols (non-UTF8), as this keeps the nested encode-call from finishing the iteration. In the example above, the bson objectID without initiated value works just by chance.\r\nThe other case has to handle objects with infinite nesting (due to the properties of the Polygon). The overflow occurs before the recursion limit breaks the process, as the writing of labels does not check the remaining buffer length. This is a problem that may cause overflows also with large tables without nesting. It might also be the reason that the first case didn't result in an OOM situation.\r\nFor the first one I already have a working solution and tests for it, and for the second one I'm currently  in contact with my personal C-guru for a clean solution. I'll create a PR when it's done."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374996886",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14256#issuecomment-374996886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14256",
    "id": 374996886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDk5Njg4Ng==",
    "user": {
      "login": "mike-seekwell",
      "id": 34747639,
      "node_id": "MDQ6VXNlcjM0NzQ3NjM5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/34747639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mike-seekwell",
      "html_url": "https://github.com/mike-seekwell",
      "followers_url": "https://api.github.com/users/mike-seekwell/followers",
      "following_url": "https://api.github.com/users/mike-seekwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/mike-seekwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mike-seekwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mike-seekwell/subscriptions",
      "organizations_url": "https://api.github.com/users/mike-seekwell/orgs",
      "repos_url": "https://api.github.com/users/mike-seekwell/repos",
      "events_url": "https://api.github.com/users/mike-seekwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mike-seekwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T16:09:05Z",
    "updated_at": "2018-03-21T16:10:57Z",
    "author_association": "NONE",
    "body": "@detroitcoder Do you have an example of a `default_handler` you use? I'm not clear how to implement one. I'd be fine with the handler just return an empty or static string.\r\n\r\nEdit - Sorry, I see now you can just use `df.to_json(orient='records', default_handler = str)`"
  }
]
