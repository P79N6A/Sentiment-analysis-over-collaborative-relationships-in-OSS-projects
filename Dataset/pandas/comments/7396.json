[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45485944",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7396#issuecomment-45485944",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7396",
    "id": 45485944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDg1OTQ0",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T12:32:15Z",
    "updated_at": "2014-06-09T12:32:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sounds good. As for the OO API, if we take a cue from `HDFStore` it should _not_ inspect all tables. `HDFStore.keys()` can run slow for > 10 keys, so it is not run on instantiation.\n\nIn the case of HDFStore, the keys can be inspected once and cached, because only one user at a time can open the file for writing. Pandas doesn't cache them, but it's possible. (I'll mention that @nkeim has implemented some code for this; maybe others have too.) But for SQL tables, with multi-user access as a full feature and a common use case, any relevant inspection should be done at query-execution time, not at connection time. Maybe the `only` keyword can make this fast.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45886734",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7396#issuecomment-45886734",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7396",
    "id": 45886734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODg2NzM0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-12T12:48:55Z",
    "updated_at": "2014-06-12T12:48:55Z",
    "author_association": "MEMBER",
    "body": "OK, for the query functions it is clear I think they should not inspect the full table. I have a PR coming to fix that. \n\nFor the OO API, we should discuss that further together with the rest of the interface how this should look like.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46276403",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7396#issuecomment-46276403",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7396",
    "id": 46276403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Mjc2NDAz",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-17T07:39:41Z",
    "updated_at": "2014-06-17T07:39:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sounds good, I think the OO api can be stabilised after the functional one is sorted.\n"
  }
]
