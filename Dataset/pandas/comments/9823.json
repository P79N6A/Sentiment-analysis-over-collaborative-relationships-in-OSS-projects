[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/90288420",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9823#issuecomment-90288420",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9823",
    "id": 90288420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMjg4NDIw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-06T23:49:02Z",
    "updated_at": "2015-04-06T23:49:02Z",
    "author_association": "MEMBER",
    "body": "I don't think this feature is currently planned, but we're always open to new contributions!\n\nThis certainly seems like a useful feature in some form, but I'm not sure it should be squeezed into `corrwith`, which currently pairs columns in different dataframes instead of considering the outer product, e.g.,\n\n```\nIn [20]: df1.corrwith(df1 ** 1.3)\nOut[20]:\nA    0.997052\nB    0.999656\nC    0.994640\nD    0.997947\nE    0.996514\ndtype: float64\n```\n\nThis might make more sense as an optional `other` argument to `DataFrame.corr`, which already returns a matrix of correlations:\n\n```\nIn [21]: df1.corr()\nOut[21]:\n          A         B         C         D         E\nA  1.000000  0.333927  0.174839 -0.202988  0.071950\nB  0.333927  1.000000 -0.012221 -0.407869  0.258222\nC  0.174839 -0.012221  1.000000 -0.332829 -0.028436\nD -0.202988 -0.407869 -0.332829  1.000000  0.434950\nE  0.071950  0.258222 -0.028436  0.434950  1.000000\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/90290635",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9823#issuecomment-90290635",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9823",
    "id": 90290635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMjkwNjM1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-06T23:53:18Z",
    "updated_at": "2015-04-06T23:53:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "This would be trivial if `.set_index()` took an axis argument\n\n```\nIn [51]: df1.T.corrwith(df2.T.set_index(df1.columns))  \nOut[51]: \na    0.072140\nb   -0.025166\nc    0.355389\nd    0.461372\ne    0.051302\nf   -0.031054\ng    0.761556\nh   -0.960473\ni    0.858428\nj    0.159165\ndtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/90290983",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9823#issuecomment-90290983",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9823",
    "id": 90290983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMjkwOTgz",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-06T23:55:03Z",
    "updated_at": "2015-04-06T23:58:52Z",
    "author_association": "MEMBER",
    "body": "@jreback that's not quite what @olgabot is looking for, I think -- she wants a 5x5 matrix of cross correlations, if understand her correctly\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/90293954",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9823#issuecomment-90293954",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9823",
    "id": 90293954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMjkzOTU0",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-07T00:08:45Z",
    "updated_at": "2015-04-07T00:08:45Z",
    "author_association": "NONE",
    "body": "@shoyer that's correct - in this example, I want a 5x5 of the cross correls. Generally speaking, if `df1` is (n, m) and `df2` is (n, p), then I want a (m, p) matrix of correlations\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/90304368",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9823#issuecomment-90304368",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9823",
    "id": 90304368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMzA0MzY4",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-07T01:19:49Z",
    "updated_at": "2015-04-07T01:19:49Z",
    "author_association": "NONE",
    "body": "that's a solution I've used before, but the issue is that it takes a long\ntime if the matrices are large (thousands of columns), and I'm not\ninterested in the df1,df2 correlations, necessarily.\n\nOn Mon, Apr 6, 2015 at 4:58 PM jreback notifications@github.com wrote:\n\n> In [58]: pd.concat([df1,df2],axis=1).corr()\n> Out[58]:\n>           A         B         C         D         E         0         1         2         3         4\n> A  1.000000  0.160876  0.368649  0.252098  0.108760  0.566828 -0.466817 -0.314223 -0.131133  0.590715\n> B  0.160876  1.000000  0.545311  0.056020 -0.460356 -0.091174  0.354608 -0.378924 -0.003633 -0.048977\n> C  0.368649  0.545311  1.000000 -0.451701 -0.165686 -0.036762  0.253964  0.036151  0.125651  0.145658\n> D  0.252098  0.056020 -0.451701  1.000000 -0.257068  0.735342 -0.185773 -0.589945  0.138441  0.006919\n> E  0.108760 -0.460356 -0.165686 -0.257068  1.000000  0.035644 -0.570018 -0.012733 -0.293044  0.464915\n> 0  0.566828 -0.091174 -0.036762  0.735342  0.035644  1.000000 -0.188574 -0.525456  0.359605  0.347547\n> 1 -0.466817  0.354608  0.253964 -0.185773 -0.570018 -0.188574  1.000000 -0.056621  0.627198 -0.289038\n> 2 -0.314223 -0.378924  0.036151 -0.589945 -0.012733 -0.525456 -0.056621  1.000000  0.041765 -0.069550\n> 3 -0.131133 -0.003633  0.125651  0.138441 -0.293044  0.359605  0.627198  0.041765  1.000000  0.287847\n> 4  0.590715 -0.048977  0.145658  0.006919  0.464915  0.347547 -0.289038 -0.069550  0.287847  1.000000\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/issues/9823#issuecomment-90291610.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419991222",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9823#issuecomment-419991222",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9823",
    "id": 419991222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTk5MTIyMg==",
    "user": {
      "login": "pstjohn",
      "id": 2576846,
      "node_id": "MDQ6VXNlcjI1NzY4NDY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2576846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstjohn",
      "html_url": "https://github.com/pstjohn",
      "followers_url": "https://api.github.com/users/pstjohn/followers",
      "following_url": "https://api.github.com/users/pstjohn/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstjohn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstjohn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstjohn/subscriptions",
      "organizations_url": "https://api.github.com/users/pstjohn/orgs",
      "repos_url": "https://api.github.com/users/pstjohn/repos",
      "events_url": "https://api.github.com/users/pstjohn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstjohn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T17:18:37Z",
    "updated_at": "2018-09-11T19:33:16Z",
    "author_association": "NONE",
    "body": "This is an old issue, but it doesn't seem like pandas has this functionality yet. here's a code sample that works for me, when `left` and `right` are two dataframes with the same columns but different indices. \r\n\r\n```python\r\ndef corrwith(left, right):\r\n    # demeaned data\r\n    left_tiled = np.repeat(left.values[:, np.newaxis, :], right.shape[0], 1)\r\n    right_tiled = np.repeat(right.values[np.newaxis, :, :], left.shape[0], 0)\r\n\r\n    ldem = left_tiled - left_tiled.mean(-1)[:, :, np.newaxis]\r\n    rdem = right_tiled - right_tiled.mean(-1)[:, :, np.newaxis]\r\n\r\n    num = (ldem * rdem).sum(-1)\r\n\r\n    dom = np.sqrt((ldem**2).sum(-1)) * np.sqrt((rdem**2).sum(-1))\r\n    correl = num / dom\r\n\r\n    return pd.DataFrame(correl, index=left.index, columns=right.index)\r\n``` "
  }
]
