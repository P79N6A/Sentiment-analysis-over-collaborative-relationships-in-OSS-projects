[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224312244",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-224312244",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 224312244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDMxMjI0NA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T15:12:15Z",
    "updated_at": "2016-06-07T15:13:00Z",
    "author_association": "MEMBER",
    "body": "In light of removing duplicate arguments and stripping down the API a bit, here are a couple of others I would like to propose (perhaps not in this PR but for discussion nonetheless):\n\n1) Deprecate `skipfooter` in `read_excel` (it's allowed as an alternative to `skip_footer`, though it is not surfaced in the signature but rather encompassed in a `**kwargs` argument)?\n\n2) Should we choose between `sep` and `delimiter` in `read_csv`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224321660",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-224321660",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 224321660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDMyMTY2MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T15:41:08Z",
    "updated_at": "2016-06-07T15:41:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "the problem is that we also have `skiprows`. I would actually deprecate `skip_footer` instead.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224329621",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-224329621",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 224329621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDMyOTYyMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T16:06:22Z",
    "updated_at": "2016-06-07T16:08:02Z",
    "author_association": "MEMBER",
    "body": "Hmmm...that's a flip-flop AFAICT from what you said earlier <a href=\"https://github.com/pydata/pandas/issues/13349#issuecomment-223450898\">here</a>.  However, deprecating `skip_footer` seems a little strange since we use `skip_footer` all over the place in the code (internally especially).  That's why I chose to deprecate `skipfooter`, since the code impact is not very significant as you can tell.  In addition, we use the `_` in a lot of the other arguments, so I'd rather side with the majority.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224330988",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-224330988",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 224330988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDMzMDk4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T16:10:43Z",
    "updated_at": "2016-06-07T16:10:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "just change it internally to the correct kw. I think they diverged at some point. It looks (just a quick skim), that `skipfooter` is more consistent (as we have `skiprows`, `usecols`) etc. excel should be fixed to be the same as well.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224333303",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-224333303",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 224333303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDMzMzMwMw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T16:18:28Z",
    "updated_at": "2016-06-08T16:06:44Z",
    "author_association": "MEMBER",
    "body": "@jreback : let's actually do the count of **multi-word argument names** (excluding the `skip(_)footer` ones) using the documentation as of `0.18.1` <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html\">here</a>:\n\nArguments that use `_`:\n`filepath_or_buffer`\n`index_col`\n`mangle_dupe_cols`\n`true_values`\n`false_values`\n`na_values`\n`keep_default_na`\n`na_filter`\n`skip_blank_lines`\n`error_bad_lines`\n`warn_bad_lines`\n`delim_whitespace`\n`as_recarray`\n`compact_ints`\n`use_unsigned`\n`low_memory`\n`buffer_lines`\n`memory_map`\n`float_precision`\n\nArguments that don't use `_`:\n`usecols`\n`skipinitialspace`\n`skiprows`\n`chunksize`\n`lineterminator`\n`doublequote`\n`quotechar`\n`escapechar`\n\nEven excluding ones that have been recently deprecated (`compact_ints`, `buffer_lines`, `use_unsigned`, `as_recarray`), arguments that use `_` vastly outnumber those that don't.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224334662",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-224334662",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 224334662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDMzNDY2Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T16:22:55Z",
    "updated_at": "2016-06-07T16:22:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung I am trying to minimize back-compat pain.\n\n`usecols` and `skiprows` are prob some of the most used options. I agree we should just deprecate and move to `_` separated, but that would be in 0.19.0 if we go whole hog.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224335864",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-224335864",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 224335864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDMzNTg2NA==",
    "user": {
      "login": "codecov-io",
      "id": 8655789,
      "node_id": "MDQ6VXNlcjg2NTU3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8655789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov-io",
      "html_url": "https://github.com/codecov-io",
      "followers_url": "https://api.github.com/users/codecov-io/followers",
      "following_url": "https://api.github.com/users/codecov-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov-io/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov-io/orgs",
      "repos_url": "https://api.github.com/users/codecov-io/repos",
      "events_url": "https://api.github.com/users/codecov-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T16:26:56Z",
    "updated_at": "2016-07-28T03:08:05Z",
    "author_association": "NONE",
    "body": "## [Current coverage](https://codecov.io/gh/pydata/pandas/pull/13386?src=pr) is 85.23% (diff: 100%)\n\n> Merging [#13386](https://codecov.io/gh/pydata/pandas/pull/13386?src=pr) into [master](https://codecov.io/gh/pydata/pandas/branch/master?src=pr) will increase coverage by **<.01%**\n\n``` diff\n@@             master     #13386   diff @@\n==========================================\n  Files           140        140          \n  Lines         50420      50419     -1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches          0          0          \n==========================================\n  Hits          42975      42975          \n+ Misses         7445       7444     -1   \n  Partials          0          0          \n```\n\n> Powered by [Codecov](https://codecov.io?src=pr). Last update [cc216ad...d21345f](https://codecov.io/gh/pydata/pandas/compare/cc216ada82a2b06a52524da7b1559a7f5e31b1c1...d21345f3536437713062da0f55bcc00fc4877476?src=pr)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224433225",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-224433225",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 224433225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDQzMzIyNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T22:24:58Z",
    "updated_at": "2016-06-09T01:34:34Z",
    "author_association": "MEMBER",
    "body": "@jreback : I have no issues waiting until `0.19.0` and going full hog.  This duplicate argument is not breaking, and it will then give us the time to properly deprecate and rename arguments with `_`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/231523683",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-231523683",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 231523683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTUyMzY4Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-09T08:44:05Z",
    "updated_at": "2016-07-09T08:44:20Z",
    "author_association": "MEMBER",
    "body": "Rebased onto `master` and Travis is passing.  I see that @jorisvandenbossche has added the \"Needs Discussion\" tag, so comments on the deprecation and of what to deprecate are welcome!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/231613397",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-231613397",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 231613397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTYxMzM5Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-10T21:59:57Z",
    "updated_at": "2016-07-10T21:59:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "this looks good to me. need to have a nice way of communicating the deprecations in the doc-string. typically we add an additional entry for the new one and make the original kwarg have a DEPRECATED in bold. Here we need to do something different as so many args.\n\nmaybe just list the new ones, but have a sentence that says the orginal arg is deprecated. \n\nAND have a section before the arguments start that says, hey all of these are deprecated.\n\nfinally, need to create an issue (maybe just a single one), to have `read_excel`, `read_html`, `read_hdf` made consistent with this (I don't think any others, but should check). e.g. `chunksize` for sure is one. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/231613451",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-231613451",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 231613451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTYxMzQ1MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-10T22:01:04Z",
    "updated_at": "2016-07-10T22:01:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "also have issue #4988 which is kind of what I am suggesting for above (e.g. its about `read_excel`); so maybe repurpose that one to be the non-csv-parser but same kw-in-need-of-deprecation issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/231613825",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-231613825",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 231613825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTYxMzgyNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-10T22:08:55Z",
    "updated_at": "2016-07-10T22:13:17Z",
    "author_association": "MEMBER",
    "body": "@jreback : Agreed about `read_excel` (and the others that you mentioned) - that has a few arguments that could be changed, though best saved for another PR.  I was planning on looking those afterwards after working out the kinks with this one here.  The ones to check I think are:\n\n`read_excel`\n`read_html`\n`read_sql`\n`read_hdf`\n`read_stata`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/231692419",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-231692419",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 231692419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTY5MjQxOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-11T10:00:45Z",
    "updated_at": "2016-07-11T10:00:45Z",
    "author_association": "MEMBER",
    "body": "The reason I added \"Needs discussion\" is because I am not sure if I find this a good idea. `read_csv` is one of the most used pandas functions, and causing thousands/millions (?) users to have to change their code just for 'aesthetic'\\* reasons, not sure this is worth the trouble.\n\n\\* I know this is not _only_ aesthetic, because having a consistent API (eg always underscores) also makes it easier to learn, to remember, etc .. And that is very important, but sometimes 'historical' reasons are good reasons.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/231693337",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-231693337",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 231693337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTY5MzMzNw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-11T10:04:42Z",
    "updated_at": "2016-07-11T10:04:42Z",
    "author_association": "MEMBER",
    "body": "On the specific keywords:\n- `dayfirst` is also used in `to_datetime`, `Timestamp`, and comes from `dateutil.parser.parse` , so I would leave this is as.\n- `chunksize` is also used a lot in other places (`read_hdf`, `read_sql`, `to_sql`, ..), so I would also be more hesitant to change this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/231695335",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-231695335",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 231695335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTY5NTMzNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-11T10:14:06Z",
    "updated_at": "2016-07-11T10:14:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "an alternative is simply to accept aliases, e.g. `skiprows` & `skip_rows`. This only adds a very tiny amount of code (in getting kwargs). and 'solves' the problem pretty easily. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/231696873",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-231696873",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 231696873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTY5Njg3Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-11T10:21:23Z",
    "updated_at": "2016-07-11T10:21:23Z",
    "author_association": "MEMBER",
    "body": "Yes, you could see it as a \"deprecation by documentation\": documenting the recommended way, but not actually deprecating (and maybe a small note the docstring that certain list of keywords are also accepted for historical reasons). \nThis options of course also has some overhead and disadvantages (possible confusion when users see code using the 'old' args)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232234739",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-232234739",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 232234739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjIzNDczOQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-13T02:06:28Z",
    "updated_at": "2016-07-13T02:06:28Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche :\n\n`chunksize` is one that @jreback and I discussed earlier in the conversation as converting to `chunk_size` (note the list that I made <a href=\"https://github.com/pydata/pandas/pull/13386#issuecomment-231613825\">here</a>).\n\nAs for `dayfirst`, I do realize that there are some inconsistencies in deprecating it, especially since `datetime` uses that parameter.  However, a consistent API is useful (i.e. all underscores), so similar to what @jreback is suggesting, we could just document only the recommended parameters but still accept the old parameters with `DeprecationWarning` and message about the recommended parameters (as I do now).  However, I can add a `TODO` or comment saying that we should NOT remove support for the old parameters for some time.\n\nHow does that sound?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232235426",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-232235426",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 232235426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjIzNTQyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-13T02:12:17Z",
    "updated_at": "2016-07-13T02:12:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung nice table!\n\nbut I agree with @jorisvandenbossche I don't think we should deprecate these keywords. It really not a big deal to simply accept both in the constructors (and document it in the doc-strings).\n\nThere aren't that many. What I mean is change the `pd.read_csv` to accept `line_terminator`, but also allow `lineterminator` (you will have to do a check that _both_ are not defined), but this can be automated. I DO think that we should change all internal code / docs to use the underscore separated ones (as you have done). So most of your docs can stay. \n\nI just don't think we should actually deprecated them (but instead deprecate in the future) after this has been out there for a bit.\n\nkind of like a PendingDeprecationWarning.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232235706",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-232235706",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 232235706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjIzNTcwNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-13T02:14:49Z",
    "updated_at": "2016-07-13T02:15:37Z",
    "author_association": "MEMBER",
    "body": "@jreback : Thanks!  It's amazing what you can do when all you have to do is copy. :smile: \n\nI don't have issues with accepting both.  In fact, my PR will continue to accept both representations (with or without underscores).  I only suggested deprecating the underscore-less ones because I've been through this on the `numpy` side when I deprecated `random_integers` but the plan wasn't to remove it for the foreseeable future.  I guess it depends on how you interpret deprecation.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232235928",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-232235928",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 232235928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjIzNTkyOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-13T02:16:30Z",
    "updated_at": "2016-07-13T02:16:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "well, let's not get started on what `numpy` does or doesn't do :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232236148",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-232236148",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 232236148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjIzNjE0OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-13T02:18:15Z",
    "updated_at": "2016-07-13T02:19:38Z",
    "author_association": "MEMBER",
    "body": "Well technically, it's what I did, not `numpy`. ;)  Well, if you insist, I use `PendingDeprecationWarning` instead of `DeprecationWarning` then.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232236743",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-232236743",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 232236743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjIzNjc0Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-13T02:22:57Z",
    "updated_at": "2016-07-13T02:23:07Z",
    "author_association": "CONTRIBUTOR",
    "body": " I would just have an issue that schedules us to do it. though not really against `PendingDeprecationWarning`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232236895",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-232236895",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 232236895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjIzNjg5NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-13T02:23:44Z",
    "updated_at": "2016-07-13T02:24:15Z",
    "author_association": "MEMBER",
    "body": "Hmmm...given that it's such a massive API change, I wouldn't mind warning users in advance of the deprecation.  Keep in mind that we might be extending this to other I/O methods too.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232237261",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-232237261",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 232237261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjIzNzI2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-13T02:26:59Z",
    "updated_at": "2016-07-13T02:26:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah I guess that is appropriate, even python itself uses them: https://github.com/numpy/numpydoc/issues/35\n\n@jorisvandenbossche ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232239193",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-232239193",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 232239193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjIzOTE5Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-13T02:43:01Z",
    "updated_at": "2016-07-13T02:43:11Z",
    "author_association": "MEMBER",
    "body": "@jreback : <a href=\"https://github.com/pydata/pandas/pull/13386#issuecomment-232235928\">hypocrite</a>! :smile:\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232305209",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-232305209",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 232305209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjMwNTIwOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-13T09:31:59Z",
    "updated_at": "2016-07-13T09:31:59Z",
    "author_association": "MEMBER",
    "body": "> but I agree with @jorisvandenbossche I don't think we should deprecate these keywords. It really not a big deal to simply accept both in the constructors (and document it in the doc-strings).\n\nYes that is how I see it as well.\n\n> kind of like a PendingDeprecationWarning.\n\nSo then just let's use one :-) But the questions is maybe: are we ever going to actually deprecate them? If not, we maybe don't need to use any warning (but also in that case you could see the PendingDeprecationWarning as a kind of NotRecommendedKeywordPleaseUseOtherWarning :-), so maybe no problem with having that). \nIn any case, I would not use a FutureWarning\n\n> As for `dayfirst`, I do realize that there are some inconsistencies in deprecating it, especially since datetime uses that parameter. However, a consistent API is useful.\n\n-1 on changing the `dayfirst` kwarg. An inconsistent naming scheme within a function is not good, but having inconsistent names for the same thing between functions is even worse IMO. So either we should rename it everywhere, or either keep it here as `dayfirst`. \nBut personally my preference is just to keep it as `dayfirst` (given that it corresponds with a dateutil kwarg). Having one keyword that deviates from the naming scheme is not that a big deal I think.\n\n> > `chunksize` is also used a lot in other places (`read_hdf`, `read_sql`, `to_sql`, ..), so I would also be more hesitant to change this\n> \n> chunksize is one that @jreback and I discussed earlier in the conversation as converting to chunk_size.\n\nMaybe it is my Dutch mother tongue that I find `chunksize` good as one word :-) (in Dutch, such a compound word would be one word instead of two separate words)\n\nSince this is a rather big change (regarding user impact), I think it is good to have some more eyes on it. cc @TomAugspurger @sinhrks @shoyer @wesm @chris-b1 If you have any objections/opinions on the general idea, time to raise them.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232322847",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-232322847",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 232322847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjMyMjg0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-13T10:56:26Z",
    "updated_at": "2016-07-13T10:56:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would say leave chunksize and dayfirst alone as joris indicated\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232711182",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-232711182",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 232711182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjcxMTE4Mg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-14T16:04:22Z",
    "updated_at": "2016-07-14T16:04:22Z",
    "author_association": "MEMBER",
    "body": "I would lean against this change -- I don't think deprecating or even adding aliases with underscores for these keywords is worth it. Yes, consistency is nice, but these are keywords that are mostly either (a) copied straight from the API docs or an example or (b) auto-completed. Omitting underscores between lower case words is also common enough in PEP8 compliant code that it doesn't hurt my eyes in the way that camelCase would, for example. I would save changes like this for next time somebody writes a DataFrame library ;). There's just very little upside to the change at this point.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232720581",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-232720581",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 232720581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjcyMDU4MQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-14T16:37:43Z",
    "updated_at": "2016-07-14T16:37:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd also be inclined to not do this.\n\nConsistency is great, but to me, big breaking (or warning triggering) changes for consistency are only worth it to the extent they actually improve the user experience.  E.g. `resample`, the new `sort_...` api, or  a closer example, when the inconsistency between the `rows` and `index` keyword was resolved in `pivot_table` / `pivot` - #5505\n\nThis doesn't seem to meet that hurdle.  Like @shoyer said, these argument would be typically tab-completed or looked up, or even if not, the inconsistency doesn't cause any confusion.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232766127",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13386#issuecomment-232766127",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13386",
    "id": 232766127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjc2NjEyNw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-14T19:23:11Z",
    "updated_at": "2016-07-14T19:23:11Z",
    "author_association": "MEMBER",
    "body": "To put things in perspective, this whole discussion was generated because I wanted to remove the duplicate 'skipfooter/skip_footer' argument in the signature.  It really should only be one of the two IMO.\n\nThe consistency part came up because we weren't sure which way to go i.e do we take the underscore version or the non-underscore?\n\nI perfectly understand if we don't want to make such a change as drastic as it has become, though some input on the initial goal would be good then.\n"
  }
]
