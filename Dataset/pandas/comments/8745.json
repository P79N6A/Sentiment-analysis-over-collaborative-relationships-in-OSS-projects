[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61976408",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-61976408",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 61976408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTc2NDA4",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-06T13:12:23Z",
    "updated_at": "2014-11-06T13:12:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "We'll need to handle the case of a DataFrame with dummy columns and non-dummy columns.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61977306",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-61977306",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 61977306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTc3MzA2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-06T13:20:32Z",
    "updated_at": "2014-11-06T13:23:43Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger Can't we say that it is up to the user to provide the correct selection of columns? (and so error on non-dummy columns?)\n\nI am not really sold on `get_categories` (as this could also mean a lot of other things, you can get categories from other type of data than dummies), so something with 'dummies' in the name feels better (`invert_dummies`, `from_dummies`, .. or something with the meaning of 'condense/melt dummies')\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61980645",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-61980645",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 61980645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTgwNjQ1",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-06T13:48:19Z",
    "updated_at": "2014-11-06T13:48:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche, yeah, by \"handle\" I meant think about, and I think raising is the best solution, sorry.\n\nWhat to do with NaNs?  `pd.get_dummies(['a', 'b', np.nan], dummy_na=True)` We should probably have a symmetrical argument for `from_dummies`. (I'm not sure how Categorical handles a NaN as a category).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61984627",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-61984627",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 61984627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTg0NjI3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-06T14:17:43Z",
    "updated_at": "2014-11-06T14:17:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "I like `from_dummies`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102729695",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-102729695",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 102729695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjcyOTY5NQ==",
    "user": {
      "login": "metasyn",
      "id": 1719730,
      "node_id": "MDQ6VXNlcjE3MTk3MzA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1719730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metasyn",
      "html_url": "https://github.com/metasyn",
      "followers_url": "https://api.github.com/users/metasyn/followers",
      "following_url": "https://api.github.com/users/metasyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/metasyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metasyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metasyn/subscriptions",
      "organizations_url": "https://api.github.com/users/metasyn/orgs",
      "repos_url": "https://api.github.com/users/metasyn/repos",
      "events_url": "https://api.github.com/users/metasyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metasyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-17T03:02:31Z",
    "updated_at": "2015-05-17T03:02:31Z",
    "author_association": "NONE",
    "body": "+1\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160577531",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-160577531",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 160577531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDU3NzUzMQ==",
    "user": {
      "login": "pkch",
      "id": 1593648,
      "node_id": "MDQ6VXNlcjE1OTM2NDg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1593648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pkch",
      "html_url": "https://github.com/pkch",
      "followers_url": "https://api.github.com/users/pkch/followers",
      "following_url": "https://api.github.com/users/pkch/following{/other_user}",
      "gists_url": "https://api.github.com/users/pkch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pkch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pkch/subscriptions",
      "organizations_url": "https://api.github.com/users/pkch/orgs",
      "repos_url": "https://api.github.com/users/pkch/repos",
      "events_url": "https://api.github.com/users/pkch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pkch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-30T09:48:30Z",
    "updated_at": "2015-11-30T09:48:30Z",
    "author_association": "NONE",
    "body": "Should the milestone be modified from 0.16.0 to 0.18.0?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/167943048",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-167943048",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 167943048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzk0MzA0OA==",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-30T06:03:45Z",
    "updated_at": "2015-12-30T06:03:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's a function for DataFrames (again from [SO](http://stackoverflow.com/a/34523806/1240268)):\n\n```\nfrom collections import defaultdict\n\ndef reverse_dummy(df_dummies):\n    pos = defaultdict(list)\n    vals = defaultdict(list)\n\n    for i, c in enumerate(df_dummies.columns):\n        if \"_\" in c:\n            k, v = c.split(\"_\", 1)\n            pos[k].append(i)\n            vals[k].append(v)\n        else:\n            pos[\"_\"].append(i)\n\n    df = pd.DataFrame({k: pd.Categorical.from_codes(\n                              np.argmax(df_dummies.iloc[:, pos[k]].values, axis=1),\n                              vals[k])\n                      for k in vals})\n\n    df[df_dummies.columns[pos[\"_\"]]] = df_dummies.iloc[:, pos[\"_\"]]\n    return df\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170282702",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-170282702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 170282702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDI4MjcwMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-09T21:18:25Z",
    "updated_at": "2016-01-09T21:18:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "What kind of roundtrip-ability can we hope for here. Ideally we have\n\n```\nx == pd.from_dummies(pd.get_dummies(x))\n```\n\nThe problem is we lose the Categorical information when calling `get_dummies`.\nIn order to fully reconstruct a Categorical we would need to include the categories (if any, remember `get_dummies` will work on non-categorical) and the ordering when calling `from_dummies`.\n\n``` python\ndef from_dummies(data, categories, ordered):\n   ...\n```\n\nAdditionally it could be that `data` came from a DataFrame, so they're might be multiple sets of dummy columns and non-dummy columns. In this case we have something like\n\n```\ndef from_dummies(data, categories, ordered, prefixes)\n    pass\n```\n\nWhere all of `prefixes`, `categories` and `ordered` are scalars or lists of the same length (special case for categories and ordered as scalars and `prefixes=None` to handle inverting `pd.get_dummies(Series)`.\n\nThoughts? That's kind of messy, but I don't see any way around it and I think we should shoot for perfect roundtrip-ability.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170283544",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-170283544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 170283544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDI4MzU0NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-09T21:25:43Z",
    "updated_at": "2016-01-09T21:25:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "you can simply infer the categories (as they are the labels of the matrix).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170283980",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-170283980",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 170283980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDI4Mzk4MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-09T21:34:26Z",
    "updated_at": "2016-01-09T21:52:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Categories you can get, but not whether it's ordered and what the ordering is if they are ordered. \n\nEDIT: Oh, you can't necessarily infer categories even since `pd.get_dummies(['a', 'a', 'b'])` is the same as `pd.get_dummies(pd.Series(pd.Categorical(['a', 'a', 'b'])))`\n\n> On Jan 9, 2016, at 15:25, Jeff Reback notifications@github.com wrote:\n> \n> you can simply infer the categories (as they are the labels of the matrix).\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170354642",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-170354642",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 170354642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDM1NDY0Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-10T14:52:38Z",
    "updated_at": "2016-01-10T14:52:38Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger How does the signature look like in the version you are working on? \nIs the purpose to detect the different sets of dummies based on the column names (as the output of get_dummies looks like)? \nWould it return object or category columns?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170362310",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-170362310",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 170362310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDM2MjMxMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-10T16:03:23Z",
    "updated_at": "2016-01-10T16:07:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Current signature\n\n``` python\ndef from_dummies(data, categories=None, ordered=None, prefixes=None):\n    '''\n    The inverse transformation of ``pandas.get_dummies``.\n\n    Parameters\n    ----------\n    data : DataFrame\n    categories : Index or list of Indexes\n    ordered : boolean or list of booleans\n    prefixes : str or list of str\n\n    Returns\n    -------\n    transformed : Series or DataFrame\n\n    Notes\n    -----\n    To recover a Categorical, you must provide the categories and\n    maybe whether it is ordered (default False). To invert a DataFrame that includes either\n    multiple sets of dummy-encoded columns or a mixture of dummy-encoded\n    columns and regular columns, you must specify ``prefixes``.\n\n```\n\nThe default will be to return a regular Series where the values are the column labels (so int or str probably). To return a Categorical you pass in the categories. If I switched to returning a Categorical by default, we would need to provide a flag like `return_categorical` to disable that.\n\n> Is the purpose to detect the different sets of dummies based on the column names\n\nThat's what my `prefixes` argument is for. If you have multiple dummy-encoded sets you use `prefixes=[\"fist_dummy_set\", \"second_set\", ...\"]` and that will find all the ones with that as the prefix. This will maybe fail (or succeed silently!) if you have a column name that happened to share a prefix... This is beginning to look pretty complicated.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/254671121",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-254671121",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 254671121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDY3MTEyMQ==",
    "user": {
      "login": "jpgrossman",
      "id": 17911231,
      "node_id": "MDQ6VXNlcjE3OTExMjMx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17911231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jpgrossman",
      "html_url": "https://github.com/jpgrossman",
      "followers_url": "https://api.github.com/users/jpgrossman/followers",
      "following_url": "https://api.github.com/users/jpgrossman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpgrossman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jpgrossman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpgrossman/subscriptions",
      "organizations_url": "https://api.github.com/users/jpgrossman/orgs",
      "repos_url": "https://api.github.com/users/jpgrossman/repos",
      "events_url": "https://api.github.com/users/jpgrossman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jpgrossman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-18T23:44:26Z",
    "updated_at": "2016-10-18T23:44:26Z",
    "author_association": "NONE",
    "body": "This is exactly what I'm looking for... any progress? Beta?\n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/255727820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-255727820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 255727820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTcyNzgyMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-24T12:34:46Z",
    "updated_at": "2016-10-24T12:34:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jpgrossman I have a branch at https://github.com/TomAugspurger/pandas/tree/from_dummies, though it's been a while since I've looked at that. There are several changes I would make to that, so if you're interested you could use that as a starting point (maybe just the tests).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/256124068",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-256124068",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 256124068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjEyNDA2OA==",
    "user": {
      "login": "jpgrossman",
      "id": 17911231,
      "node_id": "MDQ6VXNlcjE3OTExMjMx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17911231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jpgrossman",
      "html_url": "https://github.com/jpgrossman",
      "followers_url": "https://api.github.com/users/jpgrossman/followers",
      "following_url": "https://api.github.com/users/jpgrossman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpgrossman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jpgrossman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpgrossman/subscriptions",
      "organizations_url": "https://api.github.com/users/jpgrossman/orgs",
      "repos_url": "https://api.github.com/users/jpgrossman/repos",
      "events_url": "https://api.github.com/users/jpgrossman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jpgrossman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T18:23:37Z",
    "updated_at": "2016-10-25T21:16:51Z",
    "author_association": "NONE",
    "body": "Thank you Tom – will have a look at this soon.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271094538",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-271094538",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 271094538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTA5NDUzOA==",
    "user": {
      "login": "kmace",
      "id": 18296227,
      "node_id": "MDQ6VXNlcjE4Mjk2MjI3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/18296227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kmace",
      "html_url": "https://github.com/kmace",
      "followers_url": "https://api.github.com/users/kmace/followers",
      "following_url": "https://api.github.com/users/kmace/following{/other_user}",
      "gists_url": "https://api.github.com/users/kmace/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kmace/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kmace/subscriptions",
      "organizations_url": "https://api.github.com/users/kmace/orgs",
      "repos_url": "https://api.github.com/users/kmace/repos",
      "events_url": "https://api.github.com/users/kmace/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kmace/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-07T16:44:43Z",
    "updated_at": "2017-01-07T16:44:43Z",
    "author_association": "NONE",
    "body": "This is exactly what I am looking. Definitely a feature id use all the time."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275820221",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-275820221",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 275820221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTgyMDIyMQ==",
    "user": {
      "login": "antonbabkin",
      "id": 6345499,
      "node_id": "MDQ6VXNlcjYzNDU0OTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6345499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antonbabkin",
      "html_url": "https://github.com/antonbabkin",
      "followers_url": "https://api.github.com/users/antonbabkin/followers",
      "following_url": "https://api.github.com/users/antonbabkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/antonbabkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antonbabkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antonbabkin/subscriptions",
      "organizations_url": "https://api.github.com/users/antonbabkin/orgs",
      "repos_url": "https://api.github.com/users/antonbabkin/repos",
      "events_url": "https://api.github.com/users/antonbabkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antonbabkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-28T02:16:17Z",
    "updated_at": "2017-01-28T02:16:17Z",
    "author_association": "NONE",
    "body": "A valuable addition that I would be glad to see."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275820736",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-275820736",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 275820736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTgyMDczNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-28T02:24:08Z",
    "updated_at": "2017-01-28T02:24:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "pull requests are welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/309739941",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-309739941",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 309739941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTczOTk0MQ==",
    "user": {
      "login": "liorshk",
      "id": 7127502,
      "node_id": "MDQ6VXNlcjcxMjc1MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7127502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liorshk",
      "html_url": "https://github.com/liorshk",
      "followers_url": "https://api.github.com/users/liorshk/followers",
      "following_url": "https://api.github.com/users/liorshk/following{/other_user}",
      "gists_url": "https://api.github.com/users/liorshk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liorshk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liorshk/subscriptions",
      "organizations_url": "https://api.github.com/users/liorshk/orgs",
      "repos_url": "https://api.github.com/users/liorshk/repos",
      "events_url": "https://api.github.com/users/liorshk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liorshk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-20T12:38:15Z",
    "updated_at": "2017-06-20T12:38:15Z",
    "author_association": "NONE",
    "body": "Any update here?\r\n@TomAugspurger Your link doesn't work anymore"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/309909082",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-309909082",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 309909082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTkwOTA4Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-20T22:24:12Z",
    "updated_at": "2017-06-20T22:24:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@liorshk I haven't had time. Would you have a chance to submit a PR?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/313850073",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-313850073",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 313850073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzg1MDA3Mw==",
    "user": {
      "login": "kevin-winter",
      "id": 9800732,
      "node_id": "MDQ6VXNlcjk4MDA3MzI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9800732?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-winter",
      "html_url": "https://github.com/kevin-winter",
      "followers_url": "https://api.github.com/users/kevin-winter/followers",
      "following_url": "https://api.github.com/users/kevin-winter/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-winter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-winter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-winter/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-winter/orgs",
      "repos_url": "https://api.github.com/users/kevin-winter/repos",
      "events_url": "https://api.github.com/users/kevin-winter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-winter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-08T11:20:31Z",
    "updated_at": "2017-07-08T11:20:31Z",
    "author_association": "NONE",
    "body": "Here is a quick-and-dirty solution for the easiest case, using no prefix.\r\n\r\n```python\r\ndef from_dummies(data, categories, prefix_sep='_'):\r\n    out = data.copy()\r\n    for l in categories:\r\n        cols, labs = [[c.replace(x,\"\") for c in data.columns if l+prefix_sep in c] for x in [\"\", l+prefix_sep]]\r\n        out[l] = pd.Categorical(np.array(labs)[np.argmax(data[cols].as_matrix(), axis=1)])\r\n        out.drop(cols, axis=1, inplace=True)\r\n    return out\r\n```\r\n\r\nUsage:\r\n```python\r\ncategorical_cols = df.columns[df.dtypes.astype(str) == \"category\"]\r\ndummies = pd.get_dummies(df)\r\noriginal_df = from_dummies(dummies, categories=categorical_cols)\r\n```\r\n\r\nPlease note that the the transformed columns are appended at the end, hence the DataFrame will not be in the same order. I hope that helps some of you!\r\nCheers!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390702788",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-390702788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 390702788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDcwMjc4OA==",
    "user": {
      "login": "joshlk",
      "id": 5648645,
      "node_id": "MDQ6VXNlcjU2NDg2NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5648645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshlk",
      "html_url": "https://github.com/joshlk",
      "followers_url": "https://api.github.com/users/joshlk/followers",
      "following_url": "https://api.github.com/users/joshlk/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshlk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshlk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshlk/subscriptions",
      "organizations_url": "https://api.github.com/users/joshlk/orgs",
      "repos_url": "https://api.github.com/users/joshlk/repos",
      "events_url": "https://api.github.com/users/joshlk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshlk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T16:13:39Z",
    "updated_at": "2018-05-21T16:13:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would it make more sense to provide an option in `get_dummies` to also output a map between the original column name, new column name and categories? This could then be used to feed the reverse `from_dummies` function to recreate the old dataframe"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/417861271",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8745#issuecomment-417861271",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8745",
    "id": 417861271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzg2MTI3MQ==",
    "user": {
      "login": "raam93",
      "id": 31220221,
      "node_id": "MDQ6VXNlcjMxMjIwMjIx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/31220221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raam93",
      "html_url": "https://github.com/raam93",
      "followers_url": "https://api.github.com/users/raam93/followers",
      "following_url": "https://api.github.com/users/raam93/following{/other_user}",
      "gists_url": "https://api.github.com/users/raam93/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raam93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raam93/subscriptions",
      "organizations_url": "https://api.github.com/users/raam93/orgs",
      "repos_url": "https://api.github.com/users/raam93/repos",
      "events_url": "https://api.github.com/users/raam93/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raam93/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-01T13:53:04Z",
    "updated_at": "2018-09-01T13:53:04Z",
    "author_association": "NONE",
    "body": "I have edited @kevin-winter 's code in case someone has `drop_first=True` in `pd.get_dummies()`:\r\ni.e., ```dummies = pd.get_dummies(df, drop_first=True)```\r\n\r\n```python\r\ndef from_dummies(data, categorical_cols, categorical_cols_first, prefix_sep='_'):\r\n    out = data.copy()\r\n\r\n    for col_parent in categorical_cols:\r\n        \r\n        filter_col = [col for col in data if col.startswith(col_parent)]\r\n        cols_with_ones = np.argmax(data[filter_col].values, axis=1)\r\n        \r\n        org_col_values = []\r\n        for row, col in enumerate(cols_with_ones):\r\n            if((col==0) & (data[filter_col].iloc[row][col] < 1)):\r\n                org_col_values.append(categorical_cols_first.get(col_parent))\r\n            else:\r\n                org_col_values.append(data[filter_col].columns[col].split(col_parent+prefix_sep,1)[1])\r\n        \r\n        out[col_parent] = pd.Series(org_col_values).values\r\n        out.drop(filter_col, axis=1, inplace=True)    \r\n        \r\n    return out\r\n```\r\n\r\n`categorical_cols_first` is a dictionary of **first level**s (of each categorical variables) that will be dropped by `pd.get_dummies()`\r\n\r\n```python\r\ncategorical_cols_first = []\r\nfor col in categorical_cols:\r\n    categorical_cols_first.append(df[col].value_counts().sort_index().keys()[0])\r\ncategorical_cols_first = dict(zip(categorical_cols, categorical_cols_first))\r\n```\r\n\r\nWrote it quickly, so please comment if there is any bug. It worked for me though.\r\nHope this helps! "
  }
]
