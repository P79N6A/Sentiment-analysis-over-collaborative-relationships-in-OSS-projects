[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359647265",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-359647265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 359647265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTY0NzI2NQ==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-23T02:06:59Z",
    "updated_at": "2018-01-23T02:21:56Z",
    "author_association": "MEMBER",
    "body": "There's a private method that looks like it's supposed to do this:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/9872d6757e5117dce070981141cee562f675694e/pandas/core/indexes/interval.py#L870-L880\r\n\r\nIt doesn't appear to be working at all though:\r\n```python\r\nIn [2]: ii = pd.interval_range(0, 4)\r\n\r\nIn [3]: ii[0]\r\nOut[3]: Interval(0, 1, closed='right')\r\n\r\nIn [4]: ii.get_loc(ii[0])\r\nOut[4]: 0\r\n\r\nIn [5]: ii._get_loc_only_exact_matches(ii[0])\r\n---------------------------------------------------------------------------\r\nKeyError: Interval(0, 1, closed='right')\r\n```\r\nThe issue appears to be that `Index(self._multiindex.values)` creates an index of tuples, not intervals, so passing an `Interval` object will always raise a `KeyError`.  Likewise, due to the first line, passing anything other than an `Interval` object will also raise a `KeyError`.\r\n```python\r\nIn [6]: pd.Index(ii._multiindex.values)\r\nOut[6]: Index([(0, 1), (1, 2), (2, 3), (3, 4)], dtype='object')\r\n```\r\nMight be best to implement this in `_get_loc_only_exact_matches` instead?  It looks like `IntervalIndex.get_slice_bound` (inherited from `Index`) relies on  `_get_loc_only_exact_matches`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359714122",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-359714122",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 359714122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTcxNDEyMg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-01-23T08:28:27Z",
    "updated_at": "2018-02-11T19:33:19Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19353?src=pr&el=h1) Report\n> Merging [#19353](https://codecov.io/gh/pandas-dev/pandas/pull/19353?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/324379ce75269aa6bced90ecf3edb692539a2742?src=pr&el=desc) will **decrease** coverage by `0.02%`.\n> The diff coverage is `83.33%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/19353/graphs/tree.svg?height=150&width=650&token=eZ4WkYLtcO&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/19353?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #19353      +/-   ##\n==========================================\n- Coverage   91.61%   91.59%   -0.03%     \n==========================================\n  Files         150      150              \n  Lines       48807    48817      +10     \n==========================================\n- Hits        44716    44712       -4     \n- Misses       4091     4105      +14\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.96% <83.33%> (-0.03%)` | :arrow_down: |\n| #single | `41.72% <16.66%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/19353?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/19353/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `96.38% <50%> (-0.06%)` | :arrow_down: |\n| [pandas/core/indexes/interval.py](https://codecov.io/gh/pandas-dev/pandas/pull/19353/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9pbnRlcnZhbC5weQ==) | `92.33% <90%> (-0.07%)` | :arrow_down: |\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/19353/diff?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `65.22% <0%> (-1.74%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19353?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19353?src=pr&el=footer). Last update [324379c...9045cc9](https://codecov.io/gh/pandas-dev/pandas/pull/19353?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359758936",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-359758936",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 359758936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTc1ODkzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-23T11:14:56Z",
    "updated_at": "2018-01-23T11:14:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes, rather than adding kwargs to ``.get_loc`` much better to fix the private method here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359781629",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-359781629",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 359781629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTc4MTYyOQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-23T12:54:06Z",
    "updated_at": "2018-01-23T12:54:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can look into the private method.\r\n\r\n@jreback , do you mean you are negative wrt. ``method='exact'`` in the public interface? I think it will be useful to have in many cases, e.g.\r\n\r\n```python\r\n>>> ii = pd.interva_range(0, 3)\r\n>>> ii.get_loc(pd.Interval(1,3))\r\nslice(1, 3, None)\r\n>>> ii.get_loc(pd.Interval(1,3), method='exact')\r\nKeyError: ...\r\n```\r\n\r\nAbove, we've answered two different questions, both reasonable to ask, IMO."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359851391",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-359851391",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 359851391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTg1MTM5MQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-23T16:40:11Z",
    "updated_at": "2018-01-23T17:00:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "In ``_get_loc_only_exact_matches`` I've converted the line ``return Index(self._multiindex.values).get_loc(key)`` to ``return super(IntervalIndex, self)._engine.get_loc(key)``. Another option would be to do ``self.astype(object).get_loc(key)``, which is more readable, but slower, presumedly because of the need to cast.\r\n\r\nThe super method is faster, around 13 ms, while the astype method is around 75 ms, so I've chosen the super method.\r\n\r\nAlso, ``_get_loc_only_exact_matches`` only worked for unique indices, while ``get_loc`` should work with non-unique indices, so some changes to accomodate non-unique values."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359851541",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-359851541",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 359851541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTg1MTU0MQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-23T16:40:38Z",
    "updated_at": "2018-02-11T16:12:36Z",
    "author_association": "NONE",
    "body": "Hello @topper-123! Thanks for updating the PR.\n\n\n\n\n\n\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on February 11, 2018 at 16:12 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359985959",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-359985959",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 359985959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTk4NTk1OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-24T01:06:02Z",
    "updated_at": "2018-01-24T01:06:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@topper-123 we are not going to change the ``.get_loc`` api. it is very simple and needs to stay that way. As I said I am not above exposing the private function to make an exact match."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362721068",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-362721068",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 362721068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjcyMTA2OA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-02T22:04:27Z",
    "updated_at": "2018-02-02T22:07:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback , adding this *keeps* things simple IMO: If you look at the doc string for ``pd.Index`.get_loc``, the ``method`` part is:\r\n```\r\nmethod : {None, 'pad'/'ffill', 'backfill'/'bfill', 'nearest'}, optional\r\n    * default: exact matches only.\r\n    * ...\r\n```\r\n\r\nIt's logical that ``IntervalIndex.get_loc`` should be able to revert back to exact matches only, which is the default for all other index types."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364220928",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-364220928",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 364220928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDIyMDkyOA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-08T19:25:11Z",
    "updated_at": "2018-02-08T19:25:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've added a ``get_loc_exact`` method instead of using ``method='exact'`` in ``get_loc``."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364295029",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-364295029",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 364295029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDI5NTAyOQ==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-09T00:26:11Z",
    "updated_at": "2018-02-09T00:26:11Z",
    "author_association": "MEMBER",
    "body": "I think there are some caching issues when trying to use `super(IntervalIndex, self)._engine`.  Since both `IntervalIndex._engine` and `Index._engine` are decorated with `@cache_readonly`, it looks like you can't actually create both, which can lead to some weird errors depending on which `_engine` gets created first.\r\n\r\nAs an example, when an `IntervalIndex` is not unique, `get_loc` uses `self._engine`.  In such a scenario, you can't successfully use both `get_loc` and `get_loc_exact`, as whichever method you call second will fail.\r\n\r\nUsing  `get_loc` first causes `get_loc_exact` to fail:\r\n```python\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: ii = pd.IntervalIndex.from_tuples([(0, 1), (1, 2), (0, 1)])\r\n\r\nIn [3]: ii.get_loc(pd.Interval(0, 1))\r\nOut[3]: array([0, 2], dtype=int64)\r\n\r\nIn [4]: ii.get_loc_exact(pd.Interval(0, 1))\r\n---------------------------------------------------------------------------\r\nTypeError: No matching signature found\r\n```\r\n\r\nUsing  `get_loc_exact` first causes `get_loc` to fail:\r\n```python\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: ii = pd.IntervalIndex.from_tuples([(0, 1), (1, 2), (0, 1)])\r\n\r\nIn [3]: ii.get_loc_exact(pd.Interval(0, 1))\r\nOut[3]: array([ True, False,  True], dtype=bool)\r\n\r\nIn [4]: ii.get_loc(pd.Interval(0, 1))\r\n---------------------------------------------------------------------------\r\nAttributeError: 'pandas._libs.index.ObjectEngine' object has no attribute 'get_loc_interval'\r\n```\r\n\r\nNot sure if there's a simple workaround here or not."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364567611",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-364567611",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 364567611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDU2NzYxMQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-09T21:08:58Z",
    "updated_at": "2018-02-09T21:08:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice catch.\r\n\r\nI've changed the call to ``return self.astype(object).get_loc(key)`` and added a test for the condition you pointed out.\r\n\r\nA shame, as the super method would have been faster if your issue would not have surfaced."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364703417",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-364703417",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 364703417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDcwMzQxNw==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-10T23:08:14Z",
    "updated_at": "2018-02-10T23:08:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "All concerns have been addessed, AFAICS."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364734874",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-364734874",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 364734874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDczNDg3NA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-11T08:52:48Z",
    "updated_at": "2018-02-11T08:52:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "green."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364773206",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-364773206",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 364773206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDc3MzIwNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-11T18:10:18Z",
    "updated_at": "2018-02-11T18:10:18Z",
    "author_association": "MEMBER",
    "body": "Is it really needed to add a method to all Index objects only for use in `IntervalIndex` ? \r\nOur public API is already huge, not sure this is needed to add even more. We have other examples where Index subclasses have specific type-related methods that are not available for other Index classes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364788091",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-364788091",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 364788091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDc4ODA5MQ==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-11T21:01:44Z",
    "updated_at": "2018-02-11T21:01:44Z",
    "author_association": "MEMBER",
    "body": "I was just going over some of the tests in `test_interval_new.py`, and noticed the following comment in `test_get_loc_interval`, which indicates that the desired future behavior for `get_loc` is to only return exact matches:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/324379ce75269aa6bced90ecf3edb692539a2742/pandas/tests/indexes/interval/test_interval_new.py#L24-L31\r\n\r\nIs this really the desired future behavior?  If so, should we try putting the `get_loc_exact` behavior in this PR directly into the `Interval` cases for `get_loc`?  Couldn't find any comments specifically about this after doing a quick search through the issue/pr that added the new test."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364789164",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-364789164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 364789164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDc4OTE2NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-11T21:12:00Z",
    "updated_at": "2018-02-11T21:12:00Z",
    "author_association": "MEMBER",
    "body": "@jschendel Yes, that was also my first thought when I saw this PR, and wanted to say: let's change `get_loc` to be exact as we discussed that we want it this way. \r\nHowever, the comment you cite above is when it is passed an *interval*, then it is required to be exact (currently you can also pass a 'sub-interval'). But for non-interval scalars it still works as well, so eg `df.loc[1]` will still work to select all rows with intervalindex where the interval contains 1. So for scalars it does not need to be exact (at least, that is what we discussed then)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364789293",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-364789293",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 364789293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDc4OTI5Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-11T21:13:12Z",
    "updated_at": "2018-02-11T21:13:12Z",
    "author_association": "MEMBER",
    "body": "So it is the test below the one you quoted (`test_get_loc_scalar`): https://github.com/pandas-dev/pandas/blob/324379ce75269aa6bced90ecf3edb692539a2742/pandas/tests/indexes/interval/test_interval_new.py#L57-L58"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364792192",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-364792192",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 364792192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDc5MjE5Mg==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-11T21:49:07Z",
    "updated_at": "2018-02-11T21:49:07Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : Yes, maybe it wasn't clear from my comment, but I was suggesting just modifying the `Interval` specific behavior of `get_loc` to force exactness.  Since we're already writing the logic to do this, I thought it might not be that much additional work to just incorporate it in `get_loc` as well, which could lead to some simplifications for `get_loc_exact`.  After looking over the code a bit more though, it might not be as straightforward as I initially thought."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364792327",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19353#issuecomment-364792327",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19353",
    "id": 364792327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDc5MjMyNw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-11T21:50:36Z",
    "updated_at": "2018-02-11T21:50:36Z",
    "author_association": "MEMBER",
    "body": "> modifying the Interval specific behavior of get_loc to force exactness.\r\n\r\nAh, yes, I missed that. But that's a good idea"
  }
]
