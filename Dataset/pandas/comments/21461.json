[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397022408",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21461#issuecomment-397022408",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21461",
    "id": 397022408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAyMjQwOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T17:35:25Z",
    "updated_at": "2018-06-13T17:35:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you post the full traceback?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397024962",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21461#issuecomment-397024962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21461",
    "id": 397024962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAyNDk2Mg==",
    "user": {
      "login": "achapkowski",
      "id": 5131271,
      "node_id": "MDQ6VXNlcjUxMzEyNzE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5131271?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achapkowski",
      "html_url": "https://github.com/achapkowski",
      "followers_url": "https://api.github.com/users/achapkowski/followers",
      "following_url": "https://api.github.com/users/achapkowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/achapkowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achapkowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achapkowski/subscriptions",
      "organizations_url": "https://api.github.com/users/achapkowski/orgs",
      "repos_url": "https://api.github.com/users/achapkowski/repos",
      "events_url": "https://api.github.com/users/achapkowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achapkowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T17:43:51Z",
    "updated_at": "2018-06-13T17:43:51Z",
    "author_association": "NONE",
    "body": "Sure thing\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\IPython\\core\\formatters.py in __call__(self, obj)\r\n    700                 type_pprinters=self.type_printers,\r\n    701                 deferred_pprinters=self.deferred_printers)\r\n--> 702             printer.pretty(obj)\r\n    703             printer.flush()\r\n    704             return stream.getvalue()\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\IPython\\lib\\pretty.py in pretty(self, obj)\r\n    398                         if cls is not object \\\r\n    399                                 and callable(cls.__dict__.get('__repr__')):\r\n--> 400                             return _repr_pprint(obj, self, cycle)\r\n    401 \r\n    402             return _default_pprint(obj, self, cycle)\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\IPython\\lib\\pretty.py in _repr_pprint(obj, p, cycle)\r\n    693     \"\"\"A pprint that just redirects to the normal repr function.\"\"\"\r\n    694     # Find newlines and replace them with p.break_()\r\n--> 695     output = repr(obj)\r\n    696     for idx,output_line in enumerate(output.splitlines()):\r\n    697         if idx:\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\core\\base.py in __repr__(self)\r\n     80         Yields Bytestring in Py2, Unicode String in py3.\r\n     81         \"\"\"\r\n---> 82         return str(self)\r\n     83 \r\n     84 \r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\core\\base.py in __str__(self)\r\n     59 \r\n     60         if compat.PY3:\r\n---> 61             return self.__unicode__()\r\n     62         return self.__bytes__()\r\n     63 \r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\core\\frame.py in __unicode__(self)\r\n    661             width = None\r\n    662         self.to_string(buf=buf, max_rows=max_rows, max_cols=max_cols,\r\n--> 663                        line_width=width, show_dimensions=show_dimensions)\r\n    664 \r\n    665         return buf.getvalue()\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\core\\frame.py in to_string(self, buf, columns, col_space, header, index, na_rep, formatters, float_format, sparsify, index_names, justify, line_width, max_rows, max_cols, show_dimensions)\r\n   1966                                            max_cols=max_cols,\r\n   1967                                            show_dimensions=show_dimensions)\r\n-> 1968         formatter.to_string()\r\n   1969 \r\n   1970         if buf is None:\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\io\\formats\\format.py in to_string(self)\r\n    609         else:\r\n    610 \r\n--> 611             strcols = self._to_str_columns()\r\n    612             if self.line_width is None:  # no need to wrap around just print\r\n    613                 # the whole frame\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\io\\formats\\format.py in _to_str_columns(self)\r\n    544                 header_colwidth = max(self.col_space or 0,\r\n    545                                       *(self.adj.len(x) for x in cheader))\r\n--> 546                 fmt_values = self._format_col(i)\r\n    547                 fmt_values = _make_fixed_width(fmt_values, self.justify,\r\n    548                                                minimum=header_colwidth,\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\io\\formats\\format.py in _format_col(self, i)\r\n    719         frame = self.tr_frame\r\n    720         formatter = self._get_formatter(i)\r\n--> 721         values_to_format = frame.iloc[:, i]._formatting_values()\r\n    722         return format_array(values_to_format, formatter,\r\n    723                             float_format=self.float_format, na_rep=self.na_rep,\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\core\\series.py in _formatting_values(self)\r\n    471         and DataFrameFormatter)\r\n    472         \"\"\"\r\n--> 473         return self._data.formatting_values()\r\n    474 \r\n    475     def get_values(self):\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\core\\internals.py in formatting_values(self)\r\n   4748     def formatting_values(self):\r\n   4749         \"\"\"Return the internal values used by the DataFrame/SeriesFormatter\"\"\"\r\n-> 4750         return self._block.formatting_values()\r\n   4751 \r\n   4752     def get_values(self):\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\core\\internals.py in formatting_values(self)\r\n   1989 \r\n   1990     def formatting_values(self):\r\n-> 1991         return self.values._formatting_values()\r\n   1992 \r\n   1993     def concat_same_type(self, to_concat, placement=None):\r\n\r\nAttributeError: 'numpy.ndarray' object has no attribute '_formatting_values'\r\n\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\IPython\\core\\formatters.py in __call__(self, obj)\r\n    343             method = get_real_method(obj, self.print_method)\r\n    344             if method is not None:\r\n--> 345                 return method()\r\n    346             return None\r\n    347         else:\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\core\\frame.py in _repr_html_(self)\r\n    694 \r\n    695             return self.to_html(max_rows=max_rows, max_cols=max_cols,\r\n--> 696                                 show_dimensions=show_dimensions, notebook=True)\r\n    697         else:\r\n    698             return None\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\core\\frame.py in to_html(self, buf, columns, col_space, header, index, na_rep, formatters, float_format, sparsify, index_names, justify, bold_rows, classes, escape, max_rows, max_cols, show_dimensions, notebook, decimal, border, table_id)\r\n   2032                                            decimal=decimal, table_id=table_id)\r\n   2033         # TODO: a generic formatter wld b in DataFrameFormatter\r\n-> 2034         formatter.to_html(classes=classes, notebook=notebook, border=border)\r\n   2035 \r\n   2036         if buf is None:\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\io\\formats\\format.py in to_html(self, classes, notebook, border)\r\n    749                                       table_id=self.table_id)\r\n    750         if hasattr(self.buf, 'write'):\r\n--> 751             html_renderer.write_result(self.buf)\r\n    752         elif isinstance(self.buf, compat.string_types):\r\n    753             with open(self.buf, 'w') as f:\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\io\\formats\\html.py in write_result(self, buf)\r\n    178         indent += self.indent_delta\r\n    179         indent = self._write_header(indent)\r\n--> 180         indent = self._write_body(indent)\r\n    181 \r\n    182         self.write('</table>', indent)\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\io\\formats\\html.py in _write_body(self, indent)\r\n    334         fmt_values = {}\r\n    335         for i in range(min(len(self.columns), self.max_cols)):\r\n--> 336             fmt_values[i] = self.fmt._format_col(i)\r\n    337 \r\n    338         # write values\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\io\\formats\\format.py in _format_col(self, i)\r\n    719         frame = self.tr_frame\r\n    720         formatter = self._get_formatter(i)\r\n--> 721         values_to_format = frame.iloc[:, i]._formatting_values()\r\n    722         return format_array(values_to_format, formatter,\r\n    723                             float_format=self.float_format, na_rep=self.na_rep,\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\core\\series.py in _formatting_values(self)\r\n    471         and DataFrameFormatter)\r\n    472         \"\"\"\r\n--> 473         return self._data.formatting_values()\r\n    474 \r\n    475     def get_values(self):\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\core\\internals.py in formatting_values(self)\r\n   4748     def formatting_values(self):\r\n   4749         \"\"\"Return the internal values used by the DataFrame/SeriesFormatter\"\"\"\r\n-> 4750         return self._block.formatting_values()\r\n   4751 \r\n   4752     def get_values(self):\r\n\r\nC:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-dev\\lib\\site-packages\\pandas\\core\\internals.py in formatting_values(self)\r\n   1989 \r\n   1990     def formatting_values(self):\r\n-> 1991         return self.values._formatting_values()\r\n   1992 \r\n   1993     def concat_same_type(self, to_concat, placement=None):\r\n\r\nAttributeError: 'numpy.ndarray' object has no attribute '_formatting_values'\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397026496",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21461#issuecomment-397026496",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21461",
    "id": 397026496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAyNjQ5Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T17:48:48Z",
    "updated_at": "2018-06-13T17:48:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems like your `ExtensionBlock.values` is an ndarray, while it should be a GeoArray.\r\n\r\nI would take a look at `df._data`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397034226",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21461#issuecomment-397034226",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21461",
    "id": 397034226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAzNDIyNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T18:12:10Z",
    "updated_at": "2018-06-13T18:12:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "You might also try subclassing the tests in https://github.com/pandas-dev/pandas/blob/master/pandas/tests/extension/base/__init__.py, starting with https://github.com/pandas-dev/pandas/blob/master/pandas/tests/extension/base/constructors.py, to ensure that the data is being handled correctly, before moving on to other methods."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397036923",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21461#issuecomment-397036923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21461",
    "id": 397036923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAzNjkyMw==",
    "user": {
      "login": "achapkowski",
      "id": 5131271,
      "node_id": "MDQ6VXNlcjUxMzEyNzE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5131271?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achapkowski",
      "html_url": "https://github.com/achapkowski",
      "followers_url": "https://api.github.com/users/achapkowski/followers",
      "following_url": "https://api.github.com/users/achapkowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/achapkowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achapkowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achapkowski/subscriptions",
      "organizations_url": "https://api.github.com/users/achapkowski/orgs",
      "repos_url": "https://api.github.com/users/achapkowski/repos",
      "events_url": "https://api.github.com/users/achapkowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achapkowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T18:21:00Z",
    "updated_at": "2018-06-13T18:21:00Z",
    "author_association": "NONE",
    "body": "@TomAugspurger  I'll take a look at `df._data` "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397069462",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21461#issuecomment-397069462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21461",
    "id": 397069462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzA2OTQ2Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T20:10:38Z",
    "updated_at": "2018-06-13T20:10:38Z",
    "author_association": "MEMBER",
    "body": "The original dataframe is correctly constructed (the ExtensionBlock values is still geometry dtype), but not anymore after you subsetted it with `head()`. Which points to a problem in your take or getitem implementation. \r\nLooking at that, the `__getitem__` returns a plain array, instead of wrapping it again in a GeoArray (take does seem to do it correctly).\r\n\r\nUsing the tests as @TomAugspurger indicated should indeed normally have catched this (or at least give an indication which parts of the api are still failing)\r\n\r\n(sidenote: you are aware of geopandas that (will) implements a GeometryArray?)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397069877",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21461#issuecomment-397069877",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21461",
    "id": 397069877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzA2OTg3Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T20:12:19Z",
    "updated_at": "2018-06-13T20:12:19Z",
    "author_association": "MEMBER",
    "body": "Closing since I think fixing `getitem` will solve the problem, but feel free to reopen if that is not yet the case! \r\nAlso welcome to provide feedback on the API and workflow to create an ExtensionArray in general."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397115030",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21461#issuecomment-397115030",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21461",
    "id": 397115030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzExNTAzMA==",
    "user": {
      "login": "achapkowski",
      "id": 5131271,
      "node_id": "MDQ6VXNlcjUxMzEyNzE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5131271?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achapkowski",
      "html_url": "https://github.com/achapkowski",
      "followers_url": "https://api.github.com/users/achapkowski/followers",
      "following_url": "https://api.github.com/users/achapkowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/achapkowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achapkowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achapkowski/subscriptions",
      "organizations_url": "https://api.github.com/users/achapkowski/orgs",
      "repos_url": "https://api.github.com/users/achapkowski/repos",
      "events_url": "https://api.github.com/users/achapkowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achapkowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T23:02:07Z",
    "updated_at": "2018-06-13T23:02:07Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche \r\n\r\nI am not aware of GeoPandas efforts, but this isn't for the project, but another GIS venue.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397233601",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21461#issuecomment-397233601",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21461",
    "id": 397233601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzIzMzYwMQ==",
    "user": {
      "login": "achapkowski",
      "id": 5131271,
      "node_id": "MDQ6VXNlcjUxMzEyNzE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5131271?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achapkowski",
      "html_url": "https://github.com/achapkowski",
      "followers_url": "https://api.github.com/users/achapkowski/followers",
      "following_url": "https://api.github.com/users/achapkowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/achapkowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achapkowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achapkowski/subscriptions",
      "organizations_url": "https://api.github.com/users/achapkowski/orgs",
      "repos_url": "https://api.github.com/users/achapkowski/repos",
      "events_url": "https://api.github.com/users/achapkowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achapkowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T09:34:06Z",
    "updated_at": "2018-06-14T09:34:06Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche @TomAugspurger Thank you for the help fixing the `getitem` resolved my issue.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397553354",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21461#issuecomment-397553354",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21461",
    "id": 397553354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzU1MzM1NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-15T08:36:45Z",
    "updated_at": "2018-06-15T08:36:45Z",
    "author_association": "MEMBER",
    "body": "@achapkowski No problem!\r\n\r\n> I am not aware of GeoPandas efforts, but this isn't for the project, but another GIS venue.\r\n\r\nI only mentioned it to make sure you were aware of it, and not unknowingly duplicating efforts"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/398038863",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21461#issuecomment-398038863",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21461",
    "id": 398038863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODAzODg2Mw==",
    "user": {
      "login": "achapkowski",
      "id": 5131271,
      "node_id": "MDQ6VXNlcjUxMzEyNzE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5131271?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achapkowski",
      "html_url": "https://github.com/achapkowski",
      "followers_url": "https://api.github.com/users/achapkowski/followers",
      "following_url": "https://api.github.com/users/achapkowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/achapkowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achapkowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achapkowski/subscriptions",
      "organizations_url": "https://api.github.com/users/achapkowski/orgs",
      "repos_url": "https://api.github.com/users/achapkowski/repos",
      "events_url": "https://api.github.com/users/achapkowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achapkowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-18T12:33:45Z",
    "updated_at": "2018-06-18T12:33:45Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche @TomAugspurger So I fixed the get items as suggested, but now I can't use `iloc` to get single row data.\r\n\r\n```\r\n    def __getitem__(self, *args):\r\n        result = operator.getitem(self.data, *args)\r\n        if not isinstance(result, GeoArray):\r\n            return GeoArray(result)\r\n        return result\r\n```\r\n\r\nI get the following error:\r\n\r\n```\r\n\r\nTraceback (most recent call last):\r\n  Debug Probe, prompt 236, line 1\r\n  File \"d:\\SVN\\git_hub\\ArcGIS\\geo_public\\geo\\_array.py\", line 118, in __repr__\r\n    formatted = self._format_values()\r\n  File \"d:\\SVN\\git_hub\\ArcGIS\\geo_public\\geo\\_array.py\", line 125, in _format_values\r\n    return [_format(x) for x in self.data]\r\nbuiltins.TypeError: iteration over a 0-d array\r\n\r\n```\r\n\r\nI can make it work if I put an `if` statement in the GeoArray, but then all the results return as a GeoArray instead of my `Geometry` object.\r\n\r\nAny ideas?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/398039721",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21461#issuecomment-398039721",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21461",
    "id": 398039721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODAzOTcyMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-18T12:37:12Z",
    "updated_at": "2018-06-18T12:37:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does your extension array pass the indexing tests in\nhttps://github.com/pandas-dev/pandas/blob/master/pandas/tests/extension/base/getitem.py\n?\n\nI would focus on passing those, before trying the higher-level things like\nformatting, since those use getitem internally.\n\nOn Mon, Jun 18, 2018 at 7:33 AM, Andrew <notifications@github.com> wrote:\n\n> @jorisvandenbossche <https://github.com/jorisvandenbossche> @TomAugspurger\n> <https://github.com/TomAugspurger> So I fixed the get items as suggested,\n> but now I can't use iloc to get single row data.\n>\n>     def __getitem__(self, *args):\n>         result = operator.getitem(self.data, *args)\n>         if not isinstance(result, GeoArray):\n>             return GeoArray(result)\n>         return result\n>\n> I get the following error:\n>\n>\n> Traceback (most recent call last):\n>   Debug Probe, prompt 236, line 1\n>   File \"d:\\SVN\\git_hub\\ArcGIS\\geo_public\\geo\\_array.py\", line 118, in __repr__\n>     formatted = self._format_values()\n>   File \"d:\\SVN\\git_hub\\ArcGIS\\geo_public\\geo\\_array.py\", line 125, in _format_values\n>     return [_format(x) for x in self.data]\n> builtins.TypeError: iteration over a 0-d array\n>\n>\n> I can make it work if I put an if statement in the GeoArray, but then all\n> the results return as a GeoArray instead of my Geometry object.\n>\n> Any ideas?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/21461#issuecomment-398038863>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIopwk5q_UnXVPsG9wEBPZL2ZyeSjks5t9540gaJpZM4UmMUw>\n> .\n>\n"
  }
]
