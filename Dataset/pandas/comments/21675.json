[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401491672",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21675#issuecomment-401491672",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21675",
    "id": 401491672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTQ5MTY3Mg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-29T22:43:27Z",
    "updated_at": "2018-06-29T22:43:27Z",
    "author_association": "MEMBER",
    "body": "As mentioned in the first linked comment there's not any explicit ordering going on with an unstack operation and I think it's preferable NOT to do that (i.e. previous behavior was wrong). You as the end user can easily sort after the fact if you wanted to, but wouldn't as easily be able to maintain the original ordering if this operation implicitly sorted for you.\r\n\r\nI certainly see where the documentation is misleading on that though - any interest in submitting a PR to update the docs and add a test case to ensure this behavior doesn't regress going forward?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401503801",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21675#issuecomment-401503801",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21675",
    "id": 401503801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTUwMzgwMQ==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-30T00:22:56Z",
    "updated_at": "2018-06-30T00:23:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd, #15105 asks for a new `sort` option to be added to unstack.  The documented, specified, and actual behaviors have for many years been that it sorts the index.  Suddenly in Pandas 0.23, the behavior changed, without a FutureWarning, without a documentation change, and without a mention in #15105, which suggests the change was an accident.  Significant functional changes should be made deliberately, with discussion, not slipped in without notice and then documented a few releases later.\r\n\r\nI suggest that the longstanding and clearly documented behavior (sorted unstack) should be restored, and then #15105 can continue to explore new ideas such as adding an option to not sort.  If the default behavior is to be changed, a FutureWarning could be used to help users transition.\r\n\r\nYou have marked this as a Docs issue.  But it is a regression in Pandas 0.23, and a functional bug in the code, not a cosmetic one in the docs."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410083433",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21675#issuecomment-410083433",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21675",
    "id": 410083433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDA4MzQzMw==",
    "user": {
      "login": "deisdenis",
      "id": 4477447,
      "node_id": "MDQ6VXNlcjQ0Nzc0NDc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4477447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deisdenis",
      "html_url": "https://github.com/deisdenis",
      "followers_url": "https://api.github.com/users/deisdenis/followers",
      "following_url": "https://api.github.com/users/deisdenis/following{/other_user}",
      "gists_url": "https://api.github.com/users/deisdenis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deisdenis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deisdenis/subscriptions",
      "organizations_url": "https://api.github.com/users/deisdenis/orgs",
      "repos_url": "https://api.github.com/users/deisdenis/repos",
      "events_url": "https://api.github.com/users/deisdenis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deisdenis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-02T22:08:57Z",
    "updated_at": "2018-08-02T22:08:57Z",
    "author_association": "NONE",
    "body": "Hi, @jzwinck @WillAyd \r\nI tried to dig into this issue and realized the following:\r\n1) actual behaviour of unstack() was not to sort, it was to keep order consistent with declaration of levels, e.g. pandas 0.22.0\r\n```\r\nimport pandas as pd\r\nindex = pd.MultiIndex(levels=[['B','A','C','D','E']] * 2, labels=[[4,4,4,3], [4,2,0,1]])\r\npd.Series(0, index).unstack()\r\n```\r\nwill result in\r\n```\r\n     B    A    C    E\r\nD  NaN  0.0  NaN  NaN\r\nE  0.0  NaN  0.0  0.0\r\n```\r\n2) in the previous version empty columns were removed in the _Unstacker.get_result()\r\n```\r\n        # filter out missing levels\r\n        if values.shape[1] > 0:\r\n            col_inds, obs_ids = compress_group_index(self.sorted_labels[-1])\r\n            # rare case, level values not observed\r\n            if len(obs_ids) < self.full_shape[1]:\r\n                inds = (value_mask.sum(0) > 0).nonzero()[0]\r\n                values = algos.take_nd(values, inds, axis=1)\r\n                columns = columns[inds]\r\n```\r\ncolumns order has been kept consistent, but in pandas 0.23.0 empty columns removing is a part of _Unstacker.__init___()\r\n```\r\nself.index = index.remove_unused_levels()\r\n```\r\nand here is the issue: this method will place rows and columns in the order of provided labels, e.g.\r\n```\r\nimport pandas as pd\r\nindex = pd.MultiIndex(levels=[['A','B','C','D','E']] * 2, labels=[[4,4,3,4], [0,1,2,4]])\r\ns = pd.Series(0, index).unstack()\r\n```\r\nwill result in\r\n```\r\n     A    B    C    E\r\nE  0.0  0.0  NaN  0.0\r\nD  NaN  NaN  0.0  NaN\r\n```\r\nrows are not consistent any more because labels[0] starts from 4, but columns looks sorted because labels[1] is sorted.\r\n\r\nI think that this behaviour is really a regression issue and should be fixed as a bug. Initially this code was introduced in #18460 as a part of bug fix solution. I would like to work on this issue, and I'll appreciate any recommendations. As of now I see the following options:\r\n1) To rollback from using `remove_unused_levels()`, looks less efficient but more safe, will require to find another way to fix solved bugs.\r\n2) To update `remove_unused_levels()`, could lead to behavior changes in other cases, however reshape.py is the only file in pandas lib using this method."
  }
]
