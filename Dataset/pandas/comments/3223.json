[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16032287",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3223#issuecomment-16032287",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3223",
    "id": 16032287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDMyMjg3",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-08T04:43:08Z",
    "updated_at": "2013-04-08T04:43:08Z",
    "author_association": "MEMBER",
    "body": "Anyone have an opinion on this? Here is an example:\n\n```\nIn [8]: s = Series([(1, 2), (1,), (3,4,5)])\n\nIn [9]: s.str[0]\nOut[9]: \n0    1\n1    1\n2    3\ndtype: int64\n\nIn [10]: s.str[1]\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n<ipython-input-10-946f1b211e37> in <module>()\n----> 1 s.str[1]\n\n/Users/wesm/code/pandas/pandas/core/strings.pyc in __getitem__(self, key)\n    660                               step=key.step)\n    661         else:\n--> 662             return self.get(key)\n    663 \n    664     def _wrap_result(self, result):\n\n/Users/wesm/code/pandas/pandas/core/strings.pyc in get(self, i)\n    678     @copy(str_get)\n    679     def get(self, i):\n--> 680         result = str_get(self.series, i)\n    681         return self._wrap_result(result)\n    682 \n\n/Users/wesm/code/pandas/pandas/core/strings.pyc in str_get(arr, i)\n    561     \"\"\"\n    562     f = lambda x: x[i]\n--> 563     return _na_map(f, arr)\n    564 \n    565 \n\n/Users/wesm/code/pandas/pandas/core/strings.pyc in _na_map(f, arr, na_result)\n     87 def _na_map(f, arr, na_result=np.nan):\n     88     # should really _check_ for NA\n---> 89     return _map(f, arr, na_mask=True, na_value=na_result)\n     90 \n     91 \n\n/Users/wesm/code/pandas/pandas/core/strings.pyc in _map(f, arr, na_mask, na_value)\n     96         mask = isnull(arr)\n     97         try:\n---> 98             result = lib.map_infer_mask(arr, f, mask.view(np.uint8))\n     99         except (TypeError, AttributeError):\n    100             def g(x):\n\n/Users/wesm/code/pandas/pandas/lib.so in pandas.lib.map_infer_mask (pandas/lib.c:41222)()\n\n/Users/wesm/code/pandas/pandas/core/strings.pyc in <lambda>(x)\n    560     items : array\n    561     \"\"\"\n--> 562     f = lambda x: x[i]\n    563     return _na_map(f, arr)\n    564 \n\nIndexError: tuple index out of range\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16045073",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3223#issuecomment-16045073",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3223",
    "id": 16045073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQ1MDcz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-08T11:22:58Z",
    "updated_at": "2013-04-08T11:22:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree, should default to return na, as you are viewing the Series effectiviely like a Frame here\n\nalso note that this is another case of the above (just slightly different exception)\n\n```\nIn [6]: s = pd.Series([\"foo\",\"b\",\"bar\"])\n\nIn [7]: s\nOut[7]: \n0    foo\n1      b\n2    bar\n\nIn [8]: s.str[0]\nOut[8]: \n0    f\n1    b\n2    b\n\nIn [9]: s.str[1]\n\nIndexError: string index out of range\n```\n"
  }
]
