[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370391284",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19978#issuecomment-370391284",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19978",
    "id": 370391284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDM5MTI4NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-05T11:29:59Z",
    "updated_at": "2018-03-05T11:30:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "duplicate of #4160 a pull-request is welcome.\r\n\r\nMI rename is entirely broken."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370846974",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19978#issuecomment-370846974",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19978",
    "id": 370846974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDg0Njk3NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T16:47:10Z",
    "updated_at": "2018-03-06T16:47:10Z",
    "author_association": "MEMBER",
    "body": "This is another issue. https://github.com/pandas-dev/pandas/issues/4160 is about renaming *labels* in a MultiIndex (with `rename`), this issue is about renaming MultiIndex level *names* (with `rename_index`)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370850697",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19978#issuecomment-370850697",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19978",
    "id": 370850697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDg1MDY5Nw==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T16:57:41Z",
    "updated_at": "2018-03-06T16:57:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche Yes, this is about changing the level names, but using `rename_axis` (not `rename_index` - that doesn't exist!)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370854116",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19978#issuecomment-370854116",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19978",
    "id": 370854116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDg1NDExNg==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T17:07:35Z",
    "updated_at": "2018-03-06T17:07:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "So in order to allow this functionality (using a mapper to change some names of a `MultiIndex`) now without removing the deprecated behavior, I propose to add a parameter `rename_names=False` that keeps the deprecated behavior, and then we flip it to `rename_names=True` when the deprecated behavior (passing a `dict` or function to change some names, which changes the labels) is removed.\r\n\r\nOtherwise, I can't see how to add this functionality until some future version where we can officially remove the deprecated behavior.  Comments from @jorisvandenbossche and @jreback welcome."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370858049",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19978#issuecomment-370858049",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19978",
    "id": 370858049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDg1ODA0OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T17:19:17Z",
    "updated_at": "2018-03-06T17:19:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\nIn [6]: mi = pd.MultiIndex.from_product([['a','b','c'],[1,2]], names=['ll','nn'])\r\n   ...: df = pd.DataFrame({'x': [i for i in range(len(mi))], 'y' : [i*10 for i in range(len(mi))]}, index=mi)\r\n   ...: \r\n\r\nIn [7]: df.index = df.index.set_names('baz', level=1)\r\n\r\nIn [8]: df\r\nOut[8]: \r\n        x   y\r\nll baz       \r\na  1    0   0\r\n   2    1  10\r\nb  1    2  20\r\n   2    3  30\r\nc  1    4  40\r\n   2    5  50\r\n```\r\n\r\n@Dr-Irv you can just do this. this is quite idiomatic and should be used more anyhow."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370864680",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19978#issuecomment-370864680",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19978",
    "id": 370864680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDg2NDY4MA==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T17:39:31Z",
    "updated_at": "2018-03-06T17:39:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Yes, but then I can't do the renaming inline, which is the capability that I'd like to have.\r\n\r\nWith the current `rename_axis`, I can rename *all* the names inline, but not individual ones. In other words, in your example:\r\n```\r\ndf.rename_axis(['ll','baz'],axis='index')\r\n```\r\nproduces the desired result, but then you have to specify *all* of the names, rather than just the ones you want to change.\r\n\r\nJust like `rename` allows changing only some of the labels, I'd like to have `rename_axis` change some of the names.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370869412",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19978#issuecomment-370869412",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19978",
    "id": 370869412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDg2OTQxMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T17:54:12Z",
    "updated_at": "2018-03-06T17:54:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure you can, use ``inplace=True``. its completely non-idiomatic but you can use it"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370869526",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19978#issuecomment-370869526",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19978",
    "id": 370869526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDg2OTUyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T17:54:29Z",
    "updated_at": "2018-03-06T17:54:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am -1 on changing this and why I closed it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370881797",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19978#issuecomment-370881797",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19978",
    "id": 370881797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDg4MTc5Nw==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T18:33:09Z",
    "updated_at": "2018-03-06T18:34:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I'm looking at this from having some cleanliness and symmetry in the API's.  Let's say that I have a `DataFrame` with lots of columns that has come from doing lots of computation, and it is indexed on a `MultiIndex` with multiple levels.  In a chained computation, I can write `df.rename(columns=dict(...))` to rename _some_ of the columns.  From my point of view, the names of the `MultiIndex` are just like columns. They just happen to be the index, i.e., like primary keys in a database. So I'd like to be able to do `df.rename_axis(dict(...), axis='index')` to change _some_ of the names in the index, and use that in a chained computation."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370962542",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19978#issuecomment-370962542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19978",
    "id": 370962542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk2MjU0Mg==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T23:10:05Z",
    "updated_at": "2018-03-06T23:10:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Here's an example that illustrates the need for rename_axis with an argument dictionary.  In this example, there are 2 DataFrames, (df3 and df2) and the contents of the indexes are exactly the same, except that one of the names of the index in df2 is different.  So if try to add the 2 Series, I get an error because the names of the indexes are different.  But if I change that single name, I can then do the add.\r\n```\r\n\r\nIn [2]: mi3 = pd.MultiIndex.from_product([list('AB'),list('CD'),list('EF')], name\r\n   ...: s=['AB', 'CD', 'EF'])\r\n   ...: df3 = pd.DataFrame([i for i in range(len(mi3))], index=mi3, columns=['N']\r\n   ...: )\r\n   ...: df3\r\n   ...:\r\nOut[2]:\r\n          N\r\nAB CD EF\r\nA  C  E   0\r\n      F   1\r\n   D  E   2\r\n      F   3\r\nB  C  E   4\r\n      F   5\r\n   D  E   6\r\n      F   7\r\n\r\nIn [3]: df2 = df3.reorder_levels(['EF','CD','AB']).sort_index().reorder_levels(['\r\n   ...: AB','CD','EF'])\r\n   ...: df2.index.names = ['AB','CD','EF1']\r\n   ...: df2\r\n   ...:\r\nOut[3]:\r\n           N\r\nAB CD EF1\r\nA  C  E    0\r\nB  C  E    4\r\nA  D  E    2\r\nB  D  E    6\r\nA  C  F    1\r\nB  C  F    5\r\nA  D  F    3\r\nB  D  F    7\r\n\r\nIn [4]: df3 + df2\r\n---------------------------------------------------------------------------\r\nNotImplementedError                       Traceback (most recent call last)\r\n<ipython-input-4-b209b0c95b4e> in <module>()\r\n----> 1 df3 + df2\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\core\\ops.py in f(self, other, axis, level, fill_value)\r\n   1493\r\n   1494         if isinstance(other, ABCDataFrame):  # Another DataFrame\r\n-> 1495             return self._combine_frame(other, na_op, fill_value, level)\r\n   1496         elif isinstance(other, ABCSeries):\r\n   1497             return _combine_series_frame(self, other, na_op,\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\core\\frame.py in _combine_frame(self, other, func, fill_value, level)\r\n   3967\r\n   3968     def _combine_frame(self, other, func, fill_value=None, level=None):\r\n-> 3969         this, other = self.align(other, join='outer', level=level, copy=False)\r\n   3970         new_index, new_columns = this.index, this.columns\r\n   3971\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\core\\frame.py in align(self, other, join, axis, level, copy, fill_value, method, limit, fill_axis, broadcast_axis)\r\n   3010                                             method=method, limit=limit,\r\n   3011                                             fill_axis=fill_axis,\r\n-> 3012                                             broadcast_axis=broadcast_axis)\r\n\r\n   3013\r\n   3014     @Appender(_shared_docs['reindex'] % _shared_doc_kwargs)\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\core\\generic.py in align(self, other, join, axis, level, copy, fill_value, method, limit, fill_axis, broadcast_axis)\r\n   6324                                      copy=copy, fill_value=fill_value,\r\n   6325                                      method=method, limit=limit,\r\n-> 6326                                      fill_axis=fill_axis)\r\n   6327         elif isinstance(other, Series):\r\n   6328             return self._align_series(other, join=join, axis=axis, level=level,\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\core\\generic.py in _align_frame(self, other, join, axis, level, copy, fill_value, method, limit, fill_axis)\r\n   6346             if not self.index.equals(other.index):\r\n   6347                 join_index, ilidx, iridx = self.index.join(\r\n-> 6348                     other.index, how=join, level=level, return_indexers=True)\r\n   6349\r\n   6350         if axis is None or axis == 1:\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\core\\indexes\\base.py in join(self, other, how, level, return_indexers, sort)\r\n   3229             else:\r\n   3230                 return self._join_multi(other, how=how,\r\n-> 3231                                         return_indexers=return_indexers)\r\n   3232\r\n   3233         # join on the level\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\core\\indexes\\base.py in _join_multi(self, other, how, return_indexers)\r\n   3327                              \"overlapping names\")\r\n   3328         if len(overlap) > 1:\r\n-> 3329             raise NotImplementedError(\"merging with more than one level \"\r\n   3330                                       \"overlap on a multi-index is not \"\r\n   3331                                       \"implemented\")\r\n\r\nNotImplementedError: merging with more than one level overlap on a multi-index is not implemented\r\n```\r\nSo now I change the name of the mismatched column:\r\n```\r\nIn [5]: df3.index.names = ['AB','CD','EF1']\r\n   ...: df3 + df2\r\n   ...:\r\nOut[5]:\r\n            N\r\nAB CD EF1\r\nA  C  E     0\r\n      F     2\r\n   D  E     4\r\n      F     6\r\nB  C  E     8\r\n      F    10\r\n   D  E    12\r\n      F    14\r\n```\r\nThe example is convoluted, but what is happening in my application is that I have two Series.  In my application, the first Series `s1` has a 3-level MultiIndex, names are `['a','b','k1']`, and the other Series `s2` has a 3-level MultiIndex, names are `['a','b','k']`.  I now need to add them together.  That fails (as in the example above) because the level names are different.  But if I could do in my example:\r\n```\r\ndf3.rename_axis({'EF' : 'EF1'}) + df2\r\n```\r\nor\r\n```\r\ndf3 + df2.rename_axis({'EF1':'EF'}) \r\n```\r\nI wouldn't have to permanently change the index of `df3`, which is needed elsewhere with the original index names.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370969892",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19978#issuecomment-370969892",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19978",
    "id": 370969892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk2OTg5Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T23:43:12Z",
    "updated_at": "2018-03-06T23:43:12Z",
    "author_association": "MEMBER",
    "body": "Jeff, you closed it as a duplicate (which it wasn't after further thought)\r\n\r\n@Dr-Irv I am personally in general fine with the idea. But, I don't really like the introduction of a temporary keyword like `rename_names=True`. \r\nBut I was thinking of another way we might get around the backwards compatibility / deprecation. For `reindex` and `rename` we harmonized the `labels, axis=1/0` idiom and the `index=labels, columns=labels` idiom (before each function did one of them, now both accept both ways to specify the columns or index to change). `rename_axis` currently uses the `axis` keyword, but we could also introduce here the `index` and `columns` keywords, and for those we can directly use the new behaviour. So something like `df.rename_axis(index={'EF1':'EF'})` could then work.\r\n\r\n@jreback the reason I am fine with this is because it feels consistent with how we do things in other places in pandas. Eg rename with a dict let's you rename specific values of the columns/index without needing to specify them all, here it would be very similar but for the columns/index level names.  "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/371640070",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19978#issuecomment-371640070",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19978",
    "id": 371640070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTY0MDA3MA==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T22:03:34Z",
    "updated_at": "2018-03-08T22:03:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I implemented your suggestion in my pull request #20046"
  }
]
