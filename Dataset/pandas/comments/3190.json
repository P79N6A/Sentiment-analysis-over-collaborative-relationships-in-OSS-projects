[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24867557",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-24867557",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 24867557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY3NTU3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:01:30Z",
    "updated_at": "2013-09-21T18:02:01Z",
    "author_association": "MEMBER",
    "body": "@y-p What kind of API are you thinking about here?\n\nFor 1) existing `to_*` methods something like:\n\n``` python\ndf.to_html(template='/path/to/template')\n```\n\nand 2) New `to_*` methods, maybe something ilke:\n\n``` python\ndf.to_template(template='/path/to/template')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24867618",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-24867618",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 24867618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY3NjE4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:04:38Z",
    "updated_at": "2013-09-21T18:04:38Z",
    "author_association": "MEMBER",
    "body": "Or for 1) just keeping the current API (probably better because of back compat) and \"freezing\" the keyword parameters (and using them in the template).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31070928",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-31070928",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 31070928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDcwOTI4",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-21T19:57:57Z",
    "updated_at": "2013-12-21T19:57:57Z",
    "author_association": "NONE",
    "body": "```\nimport pandas.export_templates as et\net.register_template(\"/tmp/html_with_shocking_pink_headings.tmpl\",\"HoTPInK!\")\ndf.render(\"HoTPInK!\",output_file=\"/tmp/output.html\") ; otherwise stdout.\ndf.render(\"html\",output_file=\"/tmp/output.html\") # bundled template\ndf.render(\"latex\",output_file=\"/tmp/output.html\") # bundled template\n# conditional formatting\net.Stylist(df).cmap(\"midnight_bluez\").zebra([1,1,2],axis=0).topk(rows=[(\"Foo\",\"Bar\"),cols=[\"ColA\"],n=10,axis=0,style=\"heatmap\").render(\"html\")\n# or the more general select/apply\net.Stylist(df).select(lambda r,c: r>c).apply(\"some generalized style DSL here: bg_color=grey20\").\n  select(lambda r,c: r %2 ==0).apply(font_bold=True).render(\"latex\")\n```\n\nand so on...\n\nThe style DSL and all the bells and whistles you could put into this make me fear\nfeature creep if it's placed within pandas. The library I developed and shelved sort \nof balooned into a monstrosity that wasn't very appealing to use.\n\nThe idea was to use pandas objects as fundamental data containers, let the user\nuse some selector language (predicate over position and value/textual mini-dsl/perhaps \neven ripping off css3 constructs) to express selections and then provide style \"tags\" to those cells.\nThe rendering stage compiles that data structure into a context object for the template engine\nin a standardized way, and then the templates themselves use that context to generate \nthe specific output text that realizes that presentation in a given output format.\n\nI was excited about the prospects but my initial attempt to implement did not end in a system\nthat's lovely to use. leaky abstractions and ugly templates full of logic were the fundamental\nresult. The output tables were really pretty though (ignore the failed selector mini-language):\n\n![chairs3](https://f.cloud.github.com/assets/1820866/1796627/dff69174-6a79-11e3-90d3-700938ad28eb.png)\n![chairs2](https://f.cloud.github.com/assets/1820866/1796620/a67ff926-6a79-11e3-87ff-153762def68a.png)\n![chairs1](https://f.cloud.github.com/assets/1820866/1796626/dff4489c-6a79-11e3-9946-a263582c362e.png)\n\nIf you drop conditional formating and just provide boilerplate templates for html and latex, which\nusers can modify in an editor (indent this, double border that) it can be simpler, but may not\nbe appealing to users if learning a new templating language is required.\n\nThat doesn't cover the value formatters problem (\"%3.6f\", translate factors levels into labels, etc').\nThere's lots to solve there, which is why I think it makes sense to do it as a project on top of pandas.\n\nI'm not going to try again for the forseeable future.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31072899",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-31072899",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 31072899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDcyODk5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-21T21:42:19Z",
    "updated_at": "2013-12-21T21:42:19Z",
    "author_association": "NONE",
    "body": "I'm working on this again now. typical.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31073383",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-31073383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 31073383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDczMzgz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-21T22:05:05Z",
    "updated_at": "2013-12-21T22:05:05Z",
    "author_association": "NONE",
    "body": "@olgabot, can you recommend a few alternatives for colormaps to bake into this?\nSpecifically, heatmaps by value (top10 values in column, for example).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31074367",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-31074367",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 31074367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDc0MzY3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-21T22:54:43Z",
    "updated_at": "2013-12-21T22:54:43Z",
    "author_association": "NONE",
    "body": "Nailed it. claiming this for 0.14.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31074457",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-31074457",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 31074457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDc0NDU3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-21T23:00:04Z",
    "updated_at": "2013-12-21T23:00:04Z",
    "author_association": "NONE",
    "body": "If there are any watchers out there who dabble in design and want to sling some css to style\nthe way tables look by default for thousands of pandas users out there, raise your hand.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31074639",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-31074639",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 31074639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDc0NjM5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-21T23:09:59Z",
    "updated_at": "2013-12-21T23:09:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "you might want to consider using df.eval/query parsing machinery (instead of lambdas)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31075391",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-31075391",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 31075391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDc1Mzkx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-21T23:58:05Z",
    "updated_at": "2013-12-21T23:58:05Z",
    "author_association": "NONE",
    "body": "Reduced scope considerably, beautifully simple now and trivial to implement.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31075681",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-31075681",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 31075681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDc1Njgx",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-22T00:16:43Z",
    "updated_at": "2013-12-22T00:16:43Z",
    "author_association": "NONE",
    "body": "@y-p I'm always a fan of the simple sequential colormap for counts, like YlGnBu: http://bl.ocks.org/mbostock/5577023 (top, second from left)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31075718",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-31075718",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 31075718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDc1NzE4",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-22T00:19:10Z",
    "updated_at": "2013-12-22T00:19:18Z",
    "author_association": "NONE",
    "body": "Thanks... just in time :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35017985",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-35017985",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 35017985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE3OTg1",
    "user": {
      "login": "edoson",
      "id": 4670923,
      "node_id": "MDQ6VXNlcjQ2NzA5MjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4670923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edoson",
      "html_url": "https://github.com/edoson",
      "followers_url": "https://api.github.com/users/edoson/followers",
      "following_url": "https://api.github.com/users/edoson/following{/other_user}",
      "gists_url": "https://api.github.com/users/edoson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edoson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edoson/subscriptions",
      "organizations_url": "https://api.github.com/users/edoson/orgs",
      "repos_url": "https://api.github.com/users/edoson/repos",
      "events_url": "https://api.github.com/users/edoson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edoson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T19:49:06Z",
    "updated_at": "2014-02-13T19:49:06Z",
    "author_association": "NONE",
    "body": "I see you are planning a conditional formatting, that is quite nice but the colors here are quit ugly.. :) what about changes to the default way tables are rendered? see here: http://coding.smashingmagazine.com/2008/08/13/top-10-css-table-designs/\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35018683",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-35018683",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 35018683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE4Njgz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T19:55:32Z",
    "updated_at": "2014-02-13T19:55:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@edoson this issue is not active ATM as @y-p doesn't really have the time to do this.....you are welcome to pick it up :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35019059",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-35019059",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 35019059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE5MDU5",
    "user": {
      "login": "edoson",
      "id": 4670923,
      "node_id": "MDQ6VXNlcjQ2NzA5MjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4670923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edoson",
      "html_url": "https://github.com/edoson",
      "followers_url": "https://api.github.com/users/edoson/followers",
      "following_url": "https://api.github.com/users/edoson/following{/other_user}",
      "gists_url": "https://api.github.com/users/edoson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edoson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edoson/subscriptions",
      "organizations_url": "https://api.github.com/users/edoson/orgs",
      "repos_url": "https://api.github.com/users/edoson/repos",
      "events_url": "https://api.github.com/users/edoson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edoson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T19:58:47Z",
    "updated_at": "2014-02-13T19:58:47Z",
    "author_association": "NONE",
    "body": "Actually Im not interested in conditional formatting of a a dataframe, more interested in changing the default rendering to something more stylish. Do you think someone whould like something like that? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35019757",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-35019757",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 35019757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE5NzU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T20:05:38Z",
    "updated_at": "2014-02-13T20:05:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure....see also here: http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_html.html?highlight=to_html#pandas.DataFrame.to_html\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37642365",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-37642365",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 37642365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjQyMzY1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-14T12:35:10Z",
    "updated_at": "2014-03-14T12:35:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud @TomAugspurger @jorisvandenbossche @hayd \n\nanyone able to try this for 0.14? small/experimental is ok\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39206629",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-39206629",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 39206629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjA2NjI5",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-01T13:45:17Z",
    "updated_at": "2014-04-01T13:45:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm looking into this. I'd be using a big chunk of what y-p put together in https://github.com/pydata/pandas/pull/5763.\n\nFor the API, what are people's thoughts on something like how d3 does it? (I don't know much d3, but this is my understanding.  Hopefully someone knows more)\n\nWe'd have a method like `df.format()` that expects a dict of `{css class : function }` where the `function` expects a few arguments\n- `val` (the value of a cell)\n- `loc` (the index or row label (depends on `axis=0` or `axis=1`))\n- `col` (the column or row Series (depends on `axis=0` or `axis=1`))\n\nThis would let you do something like \n\n``` python\ndef color_max(val, loc, col):\n    if val == col.max():\n        return \"#FF0000\"\n\ndf = pd.DataFrame({'A': [1, 2]})\ndf.format(style={'background-color': color_max})\n```\n\nFor those cells where `color_max` evaluates to True, the formatting is applied. Otherwise its the default.\n\nThere are a lot of drawbacks to this approach. It's not the friendliest to functions that want to use locations. Or functions that want to apply an operation to the entire dataframe.\n\nIt's hard to say without be able to use it. I'll try to get something working.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39207146",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-39207146",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 39207146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjA3MTQ2",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-01T13:50:00Z",
    "updated_at": "2014-04-01T13:50:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "An alternative is what y-p had. You define a function that selects part of a table based on CSS attributes:\n\n``` python\ndef tag_col(n,c=\"grey10\", with_headings=False):\n    selector=\"td.col%d\" % n\n    if not with_headings:\n        selector+=\".data\"\n    return [dict(selector=selector,\n                props=[(\"background-color\",c)])]\n```\n\nI'm still learning all this stuff, so at this point I'm not sure which approach is more flexible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39207269",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-39207269",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 39207269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjA3MjY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-01T13:50:57Z",
    "updated_at": "2014-04-01T13:50:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would use a class based approach, e.g. you provide the base class then let users override it\n\ne.g. \n\n```\nclass Formatter(object):\n\n        def __init__(self, **kwargs):\n               self.kwargs = kwargs\n\n        def set_object(self, obj):\n               self.obj = obj\n\n        def render(self):\n               self.format_header()\n               self.format_body()\n\n        def __str__(self):\n               return self.render()\n```\n\nthen\n\n`df.format(........)`\n\nand then can be overriden with a custom class, otherwise or just pass the kwargs in the Formatter.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41168304",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-41168304",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 41168304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTY4MzA0",
    "user": {
      "login": "psychemedia",
      "id": 82988,
      "node_id": "MDQ6VXNlcjgyOTg4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/82988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psychemedia",
      "html_url": "https://github.com/psychemedia",
      "followers_url": "https://api.github.com/users/psychemedia/followers",
      "following_url": "https://api.github.com/users/psychemedia/following{/other_user}",
      "gists_url": "https://api.github.com/users/psychemedia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psychemedia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psychemedia/subscriptions",
      "organizations_url": "https://api.github.com/users/psychemedia/orgs",
      "repos_url": "https://api.github.com/users/psychemedia/repos",
      "events_url": "https://api.github.com/users/psychemedia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psychemedia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-23T14:36:55Z",
    "updated_at": "2014-04-23T14:36:55Z",
    "author_association": "NONE",
    "body": "Has anybody looked at using [ipythonblocks](https://github.com/jiffyclub/ipythonblocks/) for visualising dataframes?\n\nI'm not much of a python coder but I had a stab at getting started using ipython blocks to help visualise merge and reshape operations using pandas dataframes for a data/databases course I'm working on: http://nbviewer.ipython.org/gist/psychemedia/9795643\n\nRelated issue on ipythonblocks tracker: https://github.com/jiffyclub/ipythonblocks/issues/29 discussing possible implementation issues\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41174855",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-41174855",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 41174855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTc0ODU1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-23T15:26:22Z",
    "updated_at": "2014-04-23T15:26:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "nice idea.\n\nhowever, I think this might be better done in `ipythonblocks` itself, simply patching methods onto the frames at import time.\n\ne.g.\n\n```\nimport pandas\nimport ipythonblocks\n```\n\n```\ndef to_iblocks(.....):\n    .....\n\nDataFrame.to_iblocks = to_iblocks\n```\n\nnormally not in favor of doing this (e.g. messing with an imported package namespace),\n\nbut this seems that otherwise you would have to add keywords all over the place which makes the pandas API a bit odd.\n\nalternatively you can create a class\n\n```\nclass DataFrameIBlocks(object):\n\n     def __init__(self df):\n           self.df = df\n\n```\n\nthen provide methods to draw the blocks on that, and forward methods to the contained df\n\nboth a bit non-trivial though\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41193110",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-41193110",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 41193110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTkzMTEw",
    "user": {
      "login": "psychemedia",
      "id": 82988,
      "node_id": "MDQ6VXNlcjgyOTg4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/82988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psychemedia",
      "html_url": "https://github.com/psychemedia",
      "followers_url": "https://api.github.com/users/psychemedia/followers",
      "following_url": "https://api.github.com/users/psychemedia/following{/other_user}",
      "gists_url": "https://api.github.com/users/psychemedia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psychemedia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psychemedia/subscriptions",
      "organizations_url": "https://api.github.com/users/psychemedia/orgs",
      "repos_url": "https://api.github.com/users/psychemedia/repos",
      "events_url": "https://api.github.com/users/psychemedia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psychemedia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-23T17:53:36Z",
    "updated_at": "2014-04-23T17:53:36Z",
    "author_association": "NONE",
    "body": "@jreback Thanks.. I'll try to explore the idea a little more in the context I'm currently working in (putting together IPython notebooks for a distance learning context) to see what seems tractable/useful and what major cases fall out.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/156034798",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-156034798",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 156034798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjAzNDc5OA==",
    "user": {
      "login": "kynan",
      "id": 346079,
      "node_id": "MDQ6VXNlcjM0NjA3OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/346079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kynan",
      "html_url": "https://github.com/kynan",
      "followers_url": "https://api.github.com/users/kynan/followers",
      "following_url": "https://api.github.com/users/kynan/following{/other_user}",
      "gists_url": "https://api.github.com/users/kynan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kynan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kynan/subscriptions",
      "organizations_url": "https://api.github.com/users/kynan/orgs",
      "repos_url": "https://api.github.com/users/kynan/repos",
      "events_url": "https://api.github.com/users/kynan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kynan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-12T08:42:29Z",
    "updated_at": "2015-11-12T08:42:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like this hasn't progressed in more than a year now. Is the unanimous view still to only accept a formatter architecture that fits all use cases? Or would a step change be acceptable?\n\nI think it would already be a huge improvement if the `to_<format>` methods would allow overriding their formatter as an optional argument. I mean _not_ the column formatters (they can stay as is), but e.g. `to_html` accepts a formatter which is then used instead of the default `HTMLFormatter` so users can subclass `HTMLFormatter` and pass it in.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/156088494",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-156088494",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 156088494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjA4ODQ5NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-12T12:17:18Z",
    "updated_at": "2015-11-12T12:17:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kynan this will be closed by #10250 shortly\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/156145991",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-156145991",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 156145991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjE0NTk5MQ==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-12T15:52:04Z",
    "updated_at": "2015-11-12T15:52:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I'm not so sure if this issue has the same things in mind as the new style one. While the styling issue is in #10520, a proper template based rendering infrastructure for more than HTML would be really nice (e.g. to implement a `to_markdown()` method https://github.com/pydata/pandas/issues/11052).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/156254026",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3190#issuecomment-156254026",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3190",
    "id": 156254026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjI1NDAyNg==",
    "user": {
      "login": "kynan",
      "id": 346079,
      "node_id": "MDQ6VXNlcjM0NjA3OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/346079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kynan",
      "html_url": "https://github.com/kynan",
      "followers_url": "https://api.github.com/users/kynan/followers",
      "following_url": "https://api.github.com/users/kynan/following{/other_user}",
      "gists_url": "https://api.github.com/users/kynan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kynan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kynan/subscriptions",
      "organizations_url": "https://api.github.com/users/kynan/orgs",
      "repos_url": "https://api.github.com/users/kynan/repos",
      "events_url": "https://api.github.com/users/kynan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kynan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-12T22:19:07Z",
    "updated_at": "2015-11-12T22:19:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great to hear this is nearing completion! Might be worth adding a reference to #10250 in the opening post for those digging through issues around output formatting (I don't have the required permissions).\n"
  }
]
