[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43640954",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7186#issuecomment-43640954",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7186",
    "id": 43640954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjQwOTU0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-20T15:25:11Z",
    "updated_at": "2014-05-20T15:25:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can specify a dictionary; this requires named columns. I suppose it could work, not 100% sure why it was done this way (it needs unique functions as the results are returned as a dictionary; they could in theory be returned as a list I think that could simply create columns).\n\n```\nIn [27]: grp.a.agg({'one' : np.mean, 'two' : lambda x : np.mean(x) + np.std(x) , 'three' : lambda x :  np.mean(x) - np.std(x) })\nOut[27]: \n         three       two       one\nb                                 \n-253  0.156897  0.156897  0.156897\n-216  0.452120  0.452120  0.452120\n-191  0.893074  0.893074  0.893074\n-178  1.170801  1.170801  1.170801\n-177 -1.324476 -1.324476 -1.324476\n-162  0.835708  1.241353  1.038531\n-156 -1.220583 -1.220583 -1.220583\n-147 -2.301474 -2.301474 -2.301474\n-136 -1.125749 -1.125749 -1.125749\n-133 -0.398064 -0.398064 -0.398064\n-132  0.011879  0.011879  0.011879\n-129 -0.257017 -0.257017 -0.257017\n-114  0.795851  0.795851  0.795851\n-113 -1.697932 -1.697932 -1.697932\n-111 -0.309536 -0.309536 -0.309536\n-110 -0.031828 -0.031828 -0.031828\n-94  -0.391354 -0.391354 -0.391354\n-87  -0.010518  0.551286  0.270384\n-85  -0.711772 -0.711772 -0.711772\n-77  -0.147718 -0.106666 -0.127192\n-73  -0.796055  0.985810  0.094878\n-68  -0.249214 -0.249214 -0.249214\n-65   0.897349  0.897349  0.897349\n-64  -0.151405 -0.014542 -0.082973\n-60  -0.305136 -0.305136 -0.305136\n-52   0.084092  0.084092  0.084092\n-51  -0.821255 -0.619251 -0.720253\n-48  -0.542030  1.237966  0.347968\n-44   0.822566  0.822566  0.822566\n-43   0.165354  0.165354  0.165354\n-38   1.052166  1.052166  1.052166\n-33   0.649841  0.649841  0.649841\n-32  -0.020592 -0.020592 -0.020592\n-31  -1.340543  0.886358 -0.227093\n-30   0.278267  0.278267  0.278267\n-15   0.220145  0.220145  0.220145\n-12  -0.247523 -0.247523 -0.247523\n-9   -1.017454 -1.017454 -1.017454\n-5    2.230568  2.230568  2.230568\n-3   -1.258155 -1.258155 -1.258155\n 1   -0.310485 -0.310485 -0.310485\n 2   -0.265832 -0.265832 -0.265832\n 3   -0.008983 -0.008983 -0.008983\n 5   -0.320702 -0.320702 -0.320702\n 13  -0.634021 -0.634021 -0.634021\n 14   0.588749  0.588749  0.588749\n 16  -0.843814 -0.843814 -0.843814\n 18  -0.534178 -0.534178 -0.534178\n 19  -0.246229 -0.246229 -0.246229\n 20  -0.095204 -0.095204 -0.095204\n 21  -1.586995  0.941961 -0.322517\n 27  -0.054841 -0.054841 -0.054841\n 38   0.108338  0.108338  0.108338\n 39  -0.924176 -0.924176 -0.924176\n 57  -0.562416 -0.144378 -0.353397\n 60   1.074620  1.074620  1.074620\n 64  -1.302721  0.358431 -0.472145\n 71   0.033022  0.033022  0.033022\n 75   1.088710  1.088710  1.088710\n 78  -0.300983 -0.300983 -0.300983\n           ...       ...       ...\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43643826",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7186#issuecomment-43643826",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7186",
    "id": 43643826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjQzODI2",
    "user": {
      "login": "acorbe",
      "id": 2300692,
      "node_id": "MDQ6VXNlcjIzMDA2OTI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2300692?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/acorbe",
      "html_url": "https://github.com/acorbe",
      "followers_url": "https://api.github.com/users/acorbe/followers",
      "following_url": "https://api.github.com/users/acorbe/following{/other_user}",
      "gists_url": "https://api.github.com/users/acorbe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/acorbe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/acorbe/subscriptions",
      "organizations_url": "https://api.github.com/users/acorbe/orgs",
      "repos_url": "https://api.github.com/users/acorbe/repos",
      "events_url": "https://api.github.com/users/acorbe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/acorbe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-20T15:46:03Z",
    "updated_at": "2014-05-20T15:46:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback \n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43644149",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7186#issuecomment-43644149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7186",
    "id": 43644149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjQ0MTQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-20T15:48:41Z",
    "updated_at": "2014-05-20T15:48:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "going to close this; if you fee that this really should be implemented, pls reopen (and if you can submit a PR!)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337700487",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7186#issuecomment-337700487",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7186",
    "id": 337700487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzcwMDQ4Nw==",
    "user": {
      "login": "BenDundee",
      "id": 2365222,
      "node_id": "MDQ6VXNlcjIzNjUyMjI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2365222?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BenDundee",
      "html_url": "https://github.com/BenDundee",
      "followers_url": "https://api.github.com/users/BenDundee/followers",
      "following_url": "https://api.github.com/users/BenDundee/following{/other_user}",
      "gists_url": "https://api.github.com/users/BenDundee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BenDundee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BenDundee/subscriptions",
      "organizations_url": "https://api.github.com/users/BenDundee/orgs",
      "repos_url": "https://api.github.com/users/BenDundee/repos",
      "events_url": "https://api.github.com/users/BenDundee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BenDundee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T19:22:32Z",
    "updated_at": "2017-10-18T19:22:32Z",
    "author_association": "NONE",
    "body": "The proposed workaround throws a FutureWarning in the current version of pandas. Should this bug be reopened?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337822533",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7186#issuecomment-337822533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7186",
    "id": 337822533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzgyMjUzMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-19T07:25:46Z",
    "updated_at": "2017-10-19T07:25:46Z",
    "author_association": "MEMBER",
    "body": "That's indeed an unfortunate side effect of the deprecation. \r\nI think the easiest solution is to use actual named functions instead of lambda's:\r\n\r\n```\r\nIn [79]: def mean_plus_std(x): return np.mean(x) + np.std(x)\r\n\r\nIn [80]: def mean_minus_std(x): return np.mean(x) - np.std(x)\r\n\r\nIn [81]: grp.a.agg([np.mean, mean_plus_std, mean_minus_std])\r\nOut[81]: \r\n          mean  mean_plus_std  mean_minus_std\r\nb                                            \r\n0.0   0.468446       0.696463        0.240430\r\n2.0   0.032308       0.032308        0.032308\r\n3.0   0.704209       0.874344        0.534075\r\n...\r\n```\r\n\r\nSomething else we have been discussing is to allow kwargs to be different functions, something like:\r\n\r\n```\r\ngrp.a.agg(one=np.mean, two=lambda x : np.mean(x) + np.std(x) , three=lambda x :  np.mean(x) - np.std(x) ])\r\n```\r\n\r\nbut this has not been implemented (and has some additional difficulties, as how to deal with kwargs that could be passed to the function)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344959462",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7186#issuecomment-344959462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7186",
    "id": 344959462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDk1OTQ2Mg==",
    "user": {
      "login": "thebeancounter",
      "id": 13833578,
      "node_id": "MDQ6VXNlcjEzODMzNTc4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/13833578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thebeancounter",
      "html_url": "https://github.com/thebeancounter",
      "followers_url": "https://api.github.com/users/thebeancounter/followers",
      "following_url": "https://api.github.com/users/thebeancounter/following{/other_user}",
      "gists_url": "https://api.github.com/users/thebeancounter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thebeancounter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thebeancounter/subscriptions",
      "organizations_url": "https://api.github.com/users/thebeancounter/orgs",
      "repos_url": "https://api.github.com/users/thebeancounter/repos",
      "events_url": "https://api.github.com/users/thebeancounter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thebeancounter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T15:33:47Z",
    "updated_at": "2017-11-16T15:33:47Z",
    "author_association": "NONE",
    "body": "```\r\nI found a workaround.\r\ndef p(x):\r\n    return (1,2)\r\n#will return two values in one function\r\n\r\ndf.groupby(col).apply(lambda x:p(x))\r\n#will convert the new column into two columns of different values\r\ndf[[newCol1,newCol2]] = df[df.columns.values[-1]].apply(pd.Series)\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/356776171",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7186#issuecomment-356776171",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7186",
    "id": 356776171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc3NjE3MQ==",
    "user": {
      "login": "neilaronson",
      "id": 10816947,
      "node_id": "MDQ6VXNlcjEwODE2OTQ3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10816947?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/neilaronson",
      "html_url": "https://github.com/neilaronson",
      "followers_url": "https://api.github.com/users/neilaronson/followers",
      "following_url": "https://api.github.com/users/neilaronson/following{/other_user}",
      "gists_url": "https://api.github.com/users/neilaronson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/neilaronson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neilaronson/subscriptions",
      "organizations_url": "https://api.github.com/users/neilaronson/orgs",
      "repos_url": "https://api.github.com/users/neilaronson/repos",
      "events_url": "https://api.github.com/users/neilaronson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/neilaronson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T23:46:09Z",
    "updated_at": "2018-01-10T23:46:09Z",
    "author_association": "NONE",
    "body": "This has caused me huge frustration and I believe this should be updated to allow passing the same function and then providing the desired name of the output column. I'm working with a custom aggregation function that takes an additional argument by using functool's partial or simply using multiple lambda functions. I was hoping to avoid 6 separate named functions, but with the current method I have to do that, even though each function is only slightly different than the other. The \"workarounds\" here don't save any time compared to just having separately defined functions that are all very similar."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/371255826",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7186#issuecomment-371255826",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7186",
    "id": 371255826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTI1NTgyNg==",
    "user": {
      "login": "neilaronson",
      "id": 10816947,
      "node_id": "MDQ6VXNlcjEwODE2OTQ3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10816947?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/neilaronson",
      "html_url": "https://github.com/neilaronson",
      "followers_url": "https://api.github.com/users/neilaronson/followers",
      "following_url": "https://api.github.com/users/neilaronson/following{/other_user}",
      "gists_url": "https://api.github.com/users/neilaronson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/neilaronson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neilaronson/subscriptions",
      "organizations_url": "https://api.github.com/users/neilaronson/orgs",
      "repos_url": "https://api.github.com/users/neilaronson/repos",
      "events_url": "https://api.github.com/users/neilaronson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/neilaronson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T19:29:21Z",
    "updated_at": "2018-03-07T19:29:33Z",
    "author_association": "NONE",
    "body": "I have found a more satisfactory workaround, specifically for the case where you want to apply multiple similar functions to the same column. You can create a function factory like so:\r\n\r\n```\r\ndef ip_is(ip):\r\n    def ipf(x):\r\n        return (x==ip).mean()\r\n    ipf.__name__ = 'ipf {}'.format(str(ip))\r\n    return ipf \r\n\r\nip_by_day = dfp.groupby('day').agg({'ip': [ip_is('123'), ip_is('456), ip_is('789')]})\r\n```\r\n\r\nHere I'm checking how many records per day have a certain IP. Basically you can alter the name of the function returned manually and avoid the Specification Error."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376683250",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7186#issuecomment-376683250",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7186",
    "id": 376683250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjY4MzI1MA==",
    "user": {
      "login": "chandanshikhar1",
      "id": 9029412,
      "node_id": "MDQ6VXNlcjkwMjk0MTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9029412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chandanshikhar1",
      "html_url": "https://github.com/chandanshikhar1",
      "followers_url": "https://api.github.com/users/chandanshikhar1/followers",
      "following_url": "https://api.github.com/users/chandanshikhar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chandanshikhar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chandanshikhar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chandanshikhar1/subscriptions",
      "organizations_url": "https://api.github.com/users/chandanshikhar1/orgs",
      "repos_url": "https://api.github.com/users/chandanshikhar1/repos",
      "events_url": "https://api.github.com/users/chandanshikhar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chandanshikhar1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-27T21:33:59Z",
    "updated_at": "2018-03-27T21:34:32Z",
    "author_association": "NONE",
    "body": "I am doing something like this and I run into similar error\r\n\r\n`fs = [lambda x: np.percentile(x, p) for p in ptiles] + [np.sum]\r\noff_smry = gb_off['delivery_time'].agg(fs)`\r\n\r\nHere is the error I get\r\n`SpecificationError: Function names must be unique, found multiple named <lambda>`\r\n\r\nI think it should be allowed to do something like this. In practical scenarios people could be generating multiple lambda functions to apply."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426033499",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7186#issuecomment-426033499",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7186",
    "id": 426033499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjAzMzQ5OQ==",
    "user": {
      "login": "AndreaBarbon",
      "id": 651960,
      "node_id": "MDQ6VXNlcjY1MTk2MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/651960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AndreaBarbon",
      "html_url": "https://github.com/AndreaBarbon",
      "followers_url": "https://api.github.com/users/AndreaBarbon/followers",
      "following_url": "https://api.github.com/users/AndreaBarbon/following{/other_user}",
      "gists_url": "https://api.github.com/users/AndreaBarbon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AndreaBarbon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AndreaBarbon/subscriptions",
      "organizations_url": "https://api.github.com/users/AndreaBarbon/orgs",
      "repos_url": "https://api.github.com/users/AndreaBarbon/repos",
      "events_url": "https://api.github.com/users/AndreaBarbon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AndreaBarbon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-01T19:30:36Z",
    "updated_at": "2018-10-01T19:30:36Z",
    "author_association": "NONE",
    "body": "> I am doing something like this and I run into similar error\r\n> \r\n> `fs = [lambda x: np.percentile(x, p) for p in ptiles] + [np.sum] off_smry = gb_off['delivery_time'].agg(fs)`\r\n> \r\n> Here is the error I get\r\n> `SpecificationError: Function names must be unique, found multiple named <lambda>`\r\n> \r\n> I think it should be allowed to do something like this. In practical scenarios people could be generating multiple lambda functions to apply.\r\n\r\nI'm experiencing the same problem"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478307648",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7186#issuecomment-478307648",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7186",
    "id": 478307648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODMwNzY0OA==",
    "user": {
      "login": "hp2500",
      "id": 27285925,
      "node_id": "MDQ6VXNlcjI3Mjg1OTI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/27285925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hp2500",
      "html_url": "https://github.com/hp2500",
      "followers_url": "https://api.github.com/users/hp2500/followers",
      "following_url": "https://api.github.com/users/hp2500/following{/other_user}",
      "gists_url": "https://api.github.com/users/hp2500/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hp2500/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hp2500/subscriptions",
      "organizations_url": "https://api.github.com/users/hp2500/orgs",
      "repos_url": "https://api.github.com/users/hp2500/repos",
      "events_url": "https://api.github.com/users/hp2500/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hp2500/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-31T03:03:18Z",
    "updated_at": "2019-03-31T03:03:18Z",
    "author_association": "NONE",
    "body": "Same problem here. Push."
  }
]
