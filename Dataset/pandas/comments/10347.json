[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111713528",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10347#issuecomment-111713528",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10347",
    "id": 111713528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTcxMzUyOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T14:33:18Z",
    "updated_at": "2015-06-13T14:34:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is a dupe of #7895 \nYou want this:\n\n```\nIn [22]: df.groupby(level='name').apply(lambda x: x.reset_index(level=0,drop=True).reindex(new_dates,method='ffill'))\nOut[22]: \n                 best_score\nname date                  \njane 2008-01-01         NaN\n     2008-01-17           3\njohn 2008-01-01         NaN\n     2008-01-17           6\n```\n\nBut you actually want it to work with this syntax\n\n`df.reindex(new_dates,method='ffill',level='date')` \nwhich is not supported ATM (but a good place for it TO work).\n\nI don't think there is an easy way to support a multi-level reindex as you have indicated (and IMHO too complicated). Better to allow a single level fill, which is what you ultimately want).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111735778",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10347#issuecomment-111735778",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10347",
    "id": 111735778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTczNTc3OA==",
    "user": {
      "login": "bwillers",
      "id": 4094953,
      "node_id": "MDQ6VXNlcjQwOTQ5NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4094953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bwillers",
      "html_url": "https://github.com/bwillers",
      "followers_url": "https://api.github.com/users/bwillers/followers",
      "following_url": "https://api.github.com/users/bwillers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bwillers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bwillers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bwillers/subscriptions",
      "organizations_url": "https://api.github.com/users/bwillers/orgs",
      "repos_url": "https://api.github.com/users/bwillers/repos",
      "events_url": "https://api.github.com/users/bwillers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bwillers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T17:35:29Z",
    "updated_at": "2015-06-13T17:35:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the comments. The groupby approach you suggested doesn't do quite the same thing - in the example the index being used intentionally does not have the same date values for every name, whereas the groupby approach assumes the same dates for every group. I guess you could then subset the dates based on the exid, but it gets hairy pretty quickly.\n\nI did have a look at the issue you referenced but I'm not sure these are the same. \n\n#7895 involves taking a multiindex A, and reindexing it with a plain index \n(or a multiindex with fewer levels) B (i.e. `len(A.names) > len(B.names)`), to broadcast across the levels that are absent in B. Coming up with sane and consistent broadcasting semantics for arbitrary multi indexes seems a very complex task.\n\nIn conrast, this issue is about taking a multiindex A and reindexing it with a multiindex C with the **same** number/name/type of levels (i.e. `A.names == C.names`), there's no broadcasting involved. The only thing thats different from a vanilla `df.reindex(C, method='ffill')` is changing how far back/forward the `ffill` and `bfill` methods look to find a value, based on the levels passed. So the end result ends up looking a lot like what you would get if you line up the frames with an ordered left merge by name (related: #1870).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111736008",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10347#issuecomment-111736008",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10347",
    "id": 111736008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTczNjAwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T17:39:43Z",
    "updated_at": "2015-06-13T17:39:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "well, the interface is simply as I have stated above. So this needs to be addressed in the `Index.reindex` method (for `MultiIndex`). Its not implemented ATM, so feel free to have a crack at it. Forcing the user to specify a multi-level reindex with a filler is pretty complicated. This should work with a single level specified. Its possible that the multi-reindex with fill should simply be not allowed (if it gives the 'wrong' answer).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111736393",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10347#issuecomment-111736393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10347",
    "id": 111736393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTczNjM5Mw==",
    "user": {
      "login": "bwillers",
      "id": 4094953,
      "node_id": "MDQ6VXNlcjQwOTQ5NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4094953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bwillers",
      "html_url": "https://github.com/bwillers",
      "followers_url": "https://api.github.com/users/bwillers/followers",
      "following_url": "https://api.github.com/users/bwillers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bwillers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bwillers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bwillers/subscriptions",
      "organizations_url": "https://api.github.com/users/bwillers/orgs",
      "repos_url": "https://api.github.com/users/bwillers/repos",
      "events_url": "https://api.github.com/users/bwillers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bwillers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T17:48:57Z",
    "updated_at": "2015-06-13T17:48:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Will take a crack at it, seems like a good reason to figure out how all this stuff works under the covers.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111736521",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10347#issuecomment-111736521",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10347",
    "id": 111736521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTczNjUyMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T17:50:53Z",
    "updated_at": "2015-06-13T17:50:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "awesome!\n"
  }
]
