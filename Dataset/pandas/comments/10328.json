[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111135301",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10328#issuecomment-111135301",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10328",
    "id": 111135301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTEzNTMwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-11T13:26:40Z",
    "updated_at": "2015-06-11T13:26:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is going to kill performance. I also think an option to do this is really a bad API. I would only be not -1 if this could be done by another non-slow algo (e.g. like we did using Welford method for variance) .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111144073",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10328#issuecomment-111144073",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10328",
    "id": 111144073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTE0NDA3Mw==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-11T13:57:01Z",
    "updated_at": "2015-06-11T13:57:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Point taken. The algo itself doesn't seem that slow to me, though my implementation certainly is. I will do everything C-style and remove the option (no branching) and measure the performance. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111144619",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10328#issuecomment-111144619",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10328",
    "id": 111144619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTE0NDYxOQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-11T13:59:12Z",
    "updated_at": "2015-06-11T13:59:12Z",
    "author_association": "MEMBER",
    "body": "I agree with @jreback, I don't think this is right API. Double doubles are fine (in theory), but the right way to use them should be to cast your column to a double double explicitly, e.g., via astype. But I would also want to see this `float128` type in numpy first rather than trying to implement it in pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111146905",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10328#issuecomment-111146905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10328",
    "id": 111146905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTE0NjkwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-11T14:06:04Z",
    "updated_at": "2015-06-11T14:06:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually float128 DO exist in numpy (though not supported on some systems) - so better is to add them to the code generators (but these would have to be protected by try/excepts as the signature doesn't exist) - maybe a better soon for that is to use ifdef though \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111153233",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10328#issuecomment-111153233",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10328",
    "id": 111153233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTE1MzIzMw==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-11T14:23:42Z",
    "updated_at": "2015-06-11T14:23:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer My concern is that the current rolling_sum/mean algorithm, although fast, introduces a lot more numerical instability than the most naive algorithm without the users being aware. The last sum, even if the window size is 1, takes 2*n computations.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111157056",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10328#issuecomment-111157056",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10328",
    "id": 111157056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTE1NzA1Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-11T14:38:14Z",
    "updated_at": "2015-06-11T14:38:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kawochen separately you could short-circuit rolling functions if the `window==1` (though only for `sum/mean`, `var/std` etc are all `nan` at that point.\n"
  }
]
