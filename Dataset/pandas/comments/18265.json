[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344828201",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18265#issuecomment-344828201",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18265",
    "id": 344828201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDgyODIwMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T06:25:15Z",
    "updated_at": "2017-11-16T06:25:15Z",
    "author_association": "MEMBER",
    "body": "@tudorprodan : Thanks for reporting this!  Yeah, that does look quite odd.  An investigation and PR to patch are welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344890368",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18265#issuecomment-344890368",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18265",
    "id": 344890368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDg5MDM2OA==",
    "user": {
      "login": "tudorprodan",
      "id": 1012368,
      "node_id": "MDQ6VXNlcjEwMTIzNjg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1012368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tudorprodan",
      "html_url": "https://github.com/tudorprodan",
      "followers_url": "https://api.github.com/users/tudorprodan/followers",
      "following_url": "https://api.github.com/users/tudorprodan/following{/other_user}",
      "gists_url": "https://api.github.com/users/tudorprodan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tudorprodan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tudorprodan/subscriptions",
      "organizations_url": "https://api.github.com/users/tudorprodan/orgs",
      "repos_url": "https://api.github.com/users/tudorprodan/repos",
      "events_url": "https://api.github.com/users/tudorprodan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tudorprodan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T11:04:40Z",
    "updated_at": "2017-11-16T11:04:40Z",
    "author_association": "NONE",
    "body": "@gfyoung : I did start looking into why it's happening, but am not sure what the right way to patch is because:\r\n-  `df.stack` assumes that the multi-index it's stacking from is sorted, so never checks before rebuilding the values.\r\n- pd.concat(dict) seems to be the only way I can get a non-value-sorted `MultiIndex`. If I try to recreate the same index using `MultiIndex.from_product` for example, it sorts the index values automatically.\r\n\r\nSo is `stack`'s asumption wrong? Or is `MultiIndex` always meant to be sorted but that extra step is not performed in `concat(dict)`?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344898663",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18265#issuecomment-344898663",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18265",
    "id": 344898663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDg5ODY2Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T11:41:58Z",
    "updated_at": "2017-11-16T11:41:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is a dupe of https://github.com/pandas-dev/pandas/issues/16925"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410475960",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18265#issuecomment-410475960",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18265",
    "id": 410475960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQ3NTk2MA==",
    "user": {
      "login": "grauscher",
      "id": 21066198,
      "node_id": "MDQ6VXNlcjIxMDY2MTk4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21066198?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grauscher",
      "html_url": "https://github.com/grauscher",
      "followers_url": "https://api.github.com/users/grauscher/followers",
      "following_url": "https://api.github.com/users/grauscher/following{/other_user}",
      "gists_url": "https://api.github.com/users/grauscher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grauscher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grauscher/subscriptions",
      "organizations_url": "https://api.github.com/users/grauscher/orgs",
      "repos_url": "https://api.github.com/users/grauscher/repos",
      "events_url": "https://api.github.com/users/grauscher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grauscher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-04T20:34:47Z",
    "updated_at": "2018-08-04T20:48:18Z",
    "author_association": "NONE",
    "body": "This error still exists in version 0.22.0\r\n\r\n@tudorprodan makes a good point.\r\n\r\nFor me, it seems an alternative way is for `df.stack` to check if `df.columns.is_monotonic or df.columns.is_monotonic_decreasing` is `True`.\r\nIn the negative case, it calls `df.sort_index(axis=1)` before doing the proper stack operation.\r\n\r\nObs: I tried using `df.columns.is_lexsorted()`, but even when `df.columns.is_monotonic or df.columns.is_monotonic_decreasing` returned `False`, the first returned `True`."
  }
]
