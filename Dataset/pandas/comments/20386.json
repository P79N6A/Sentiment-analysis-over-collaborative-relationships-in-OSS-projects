[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373838269",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20386#issuecomment-373838269",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20386",
    "id": 373838269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzgzODI2OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-16T20:38:30Z",
    "updated_at": "2018-03-16T20:38:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Why do you think it should, and did this cause an issue for you? It doesn't recognize `NoneType` as null either."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373844928",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20386#issuecomment-373844928",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20386",
    "id": 373844928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzg0NDkyOA==",
    "user": {
      "login": "AnthonyGaruccio",
      "id": 7144301,
      "node_id": "MDQ6VXNlcjcxNDQzMDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7144301?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AnthonyGaruccio",
      "html_url": "https://github.com/AnthonyGaruccio",
      "followers_url": "https://api.github.com/users/AnthonyGaruccio/followers",
      "following_url": "https://api.github.com/users/AnthonyGaruccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/AnthonyGaruccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AnthonyGaruccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AnthonyGaruccio/subscriptions",
      "organizations_url": "https://api.github.com/users/AnthonyGaruccio/orgs",
      "repos_url": "https://api.github.com/users/AnthonyGaruccio/repos",
      "events_url": "https://api.github.com/users/AnthonyGaruccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AnthonyGaruccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-16T21:06:08Z",
    "updated_at": "2018-03-16T21:06:08Z",
    "author_association": "NONE",
    "body": "Sorry I didn't provide more context, I think it is inconsistent because of the following example\r\n\r\ncreating an instance of the _lib.tslib.NaTType class directly does not register as null for pd.isnull()\r\n```python\r\n>>> import pandas as pd\r\n>>> pd.isnull(pd._lib.tslib.NaTType())\r\nFalse\r\n```\r\n\r\nbut if we create a series, with an instance of the _lib.tslib.NaTType class inside of it, then it DOES register as null for pd.isnull()\r\n```python\r\n>>> a = pd.Series(['2018-01-01', pd.NaT], dtype=\"datetime64[ns]\")\r\n>>> a\r\n0   2018-01-01\r\n1          NaT\r\ndtype: datetime64[ns]\r\n>>> pd.isnull(a)\r\n0    False\r\n1     True\r\ndtype: bool\r\n```\r\nand if we access the element inside the series, it still registers as null for pd.isnull()\r\n```python\r\n>>> type(a.iat[1])\r\n<class 'pandas._libs.tslib.NaTType'>\r\n>>> pd.isnull(a.iat[1])\r\nTrue\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373851638",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20386#issuecomment-373851638",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20386",
    "id": 373851638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzg1MTYzOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-16T21:36:30Z",
    "updated_at": "2018-03-16T21:36:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "``NaTType`` is a private class, in a private module, so you are reaching into the implementation. It is a singleton, though it actually doesn't enforce this pattern. We have exactly one ``NaT`` and that is defined (internally), then referenced at the top level of the pandas namespace.\r\n\r\nso ``is`` comparison work.\r\n\r\nI am going to close this, but if you wanted to submit a patch to make ``NaTType`` an actual singleton it would be accepted."
  }
]
