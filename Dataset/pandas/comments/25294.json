[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463023284",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25294#issuecomment-463023284",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25294",
    "id": 463023284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzAyMzI4NA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-13T01:59:12Z",
    "updated_at": "2019-02-13T01:59:12Z",
    "author_association": "MEMBER",
    "body": "Hmm well this way of populating a DataFrame is not idiomatic and inferring the intended result is nearly impossible. Understood this is a toy example, but the construction here should be done in one expression if you want to be explicit about dtypes.\r\n\r\nWhile ambiguous the previous behavior is in any case not correct; there isn't any indication that you want floats with what you are doing, especially since you are inserting int values. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463077174",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25294#issuecomment-463077174",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25294",
    "id": 463077174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzA3NzE3NA==",
    "user": {
      "login": "stragu",
      "id": 1747497,
      "node_id": "MDQ6VXNlcjE3NDc0OTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1747497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stragu",
      "html_url": "https://github.com/stragu",
      "followers_url": "https://api.github.com/users/stragu/followers",
      "following_url": "https://api.github.com/users/stragu/following{/other_user}",
      "gists_url": "https://api.github.com/users/stragu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stragu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stragu/subscriptions",
      "organizations_url": "https://api.github.com/users/stragu/orgs",
      "repos_url": "https://api.github.com/users/stragu/repos",
      "events_url": "https://api.github.com/users/stragu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stragu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-13T06:32:20Z",
    "updated_at": "2019-02-13T06:32:20Z",
    "author_association": "NONE",
    "body": "What do you mean by \"inferring the intended result is nearly impossible\"? From the names of the columns when creating the DataFrame, of course, but from what values are added to them, something like that was done with previous versions apparently. The dtype could be updated as it gets populated (although it would probably be deemed inefficient): add an `int`, dtype is changed to `int`; add a number with a decimal point, it is coerced to `float`; add then a string, the dtype is changed to `str` (or `object` I guess, which is the more general dtype?).\r\n\r\nWhat would then be the recommended way to populate an empty DataFrame in Pandas, for example in a loop? Populating series and constructing the DataFrame at the end, or creating an empty dataframe with `columns` and a specific dtype for each variable?\r\n\r\n`df = pd.DataFrame(columns = (\"Name\", \"Age\"), dtype = (str, int))` does not seem to work.\r\n\r\nThanks for the quick reply! And very sorry for my limited experience with Pandas â€“ and Python in general."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463099291",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25294#issuecomment-463099291",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25294",
    "id": 463099291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzA5OTI5MQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-13T08:07:34Z",
    "updated_at": "2019-02-13T08:07:34Z",
    "author_association": "MEMBER",
    "body": "Well your ideal state is probably what is manifested in #4464 so I'm going to close this as a duplicated.\r\n\r\nYou have a few other things in there but I'll say generally appending to a DataFrame is very expensive. Your best approach is usually to construct the entire DataFrame from a sequence of values rather than creating and empty DataFrame and continually appending. In lieu of `dtype` accepting multiple values in the constructor you can after construction use the `.astype` method\r\n\r\nFor further and future usage questions we ask that you turn to StackOverflow as this tracker is for enhancement requests and bugs. SO will be a much better forum for Q&A on usage and will help other users out with the same question more than this issue tracker could"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463181846",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25294#issuecomment-463181846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25294",
    "id": 463181846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzE4MTg0Ng==",
    "user": {
      "login": "stragu",
      "id": 1747497,
      "node_id": "MDQ6VXNlcjE3NDc0OTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1747497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stragu",
      "html_url": "https://github.com/stragu",
      "followers_url": "https://api.github.com/users/stragu/followers",
      "following_url": "https://api.github.com/users/stragu/following{/other_user}",
      "gists_url": "https://api.github.com/users/stragu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stragu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stragu/subscriptions",
      "organizations_url": "https://api.github.com/users/stragu/orgs",
      "repos_url": "https://api.github.com/users/stragu/repos",
      "events_url": "https://api.github.com/users/stragu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stragu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-13T12:29:54Z",
    "updated_at": "2019-02-13T12:29:54Z",
    "author_association": "NONE",
    "body": "No problem, thank you @WillAyd , I appreciate it."
  }
]
