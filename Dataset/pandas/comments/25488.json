[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/468490349",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25488#issuecomment-468490349",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25488",
    "id": 468490349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODQ5MDM0OQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-03-01T00:08:51Z",
    "updated_at": "2019-03-01T00:08:51Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25488?src=pr&el=h1) Report\n> Merging [#25488](https://codecov.io/gh/pandas-dev/pandas/pull/25488?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/db978c716369064421c5ca71bd26002e0021e0d1?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/25488/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/25488?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #25488      +/-   ##\n==========================================\n+ Coverage   91.75%   91.75%   +<.01%     \n==========================================\n  Files         173      173              \n  Lines       52955    52960       +5     \n==========================================\n+ Hits        48588    48594       +6     \n+ Misses       4367     4366       -1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.32% <100%> (ø)` | :arrow_up: |\n| #single | `41.71% <0%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/25488?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/io/json/json.py](https://codecov.io/gh/pandas-dev/pandas/pull/25488/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2pzb24vanNvbi5weQ==) | `93.28% <100%> (+0.06%)` | :arrow_up: |\n| [pandas/io/json/table\\_schema.py](https://codecov.io/gh/pandas-dev/pandas/pull/25488/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2pzb24vdGFibGVfc2NoZW1hLnB5) | `98.31% <100%> (+0.01%)` | :arrow_up: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/25488/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `87.66% <0%> (+0.09%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25488?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25488?src=pr&el=footer). Last update [db978c7...e7abdb1](https://codecov.io/gh/pandas-dev/pandas/pull/25488?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/468490351",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25488#issuecomment-468490351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25488",
    "id": 468490351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODQ5MDM1MQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-03-01T00:08:51Z",
    "updated_at": "2019-03-03T13:45:49Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25488?src=pr&el=h1) Report\n> Merging [#25488](https://codecov.io/gh/pandas-dev/pandas/pull/25488?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/42b4c975e55c59da7868f99f9949841aca12a08d?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/25488/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/25488?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #25488      +/-   ##\n==========================================\n+ Coverage   91.75%   91.76%   +<.01%     \n==========================================\n  Files         173      173              \n  Lines       52960    52970      +10     \n==========================================\n+ Hits        48595    48606      +11     \n+ Misses       4365     4364       -1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.33% <100%> (ø)` | :arrow_up: |\n| #single | `41.7% <5.88%> (-0.02%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/25488?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/io/json/json.py](https://codecov.io/gh/pandas-dev/pandas/pull/25488/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2pzb24vanNvbi5weQ==) | `93.28% <100%> (+0.06%)` | :arrow_up: |\n| [pandas/io/json/table\\_schema.py](https://codecov.io/gh/pandas-dev/pandas/pull/25488/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2pzb24vdGFibGVfc2NoZW1hLnB5) | `98.38% <100%> (+0.08%)` | :arrow_up: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/25488/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `87.66% <0%> (+0.09%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25488?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25488?src=pr&el=footer). Last update [42b4c97...3345119](https://codecov.io/gh/pandas-dev/pandas/pull/25488?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/468560749",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25488#issuecomment-468560749",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25488",
    "id": 468560749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODU2MDc0OQ==",
    "user": {
      "login": "albertvillanova",
      "id": 8515462,
      "node_id": "MDQ6VXNlcjg1MTU0NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8515462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertvillanova",
      "html_url": "https://github.com/albertvillanova",
      "followers_url": "https://api.github.com/users/albertvillanova/followers",
      "following_url": "https://api.github.com/users/albertvillanova/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertvillanova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertvillanova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertvillanova/subscriptions",
      "organizations_url": "https://api.github.com/users/albertvillanova/orgs",
      "repos_url": "https://api.github.com/users/albertvillanova/repos",
      "events_url": "https://api.github.com/users/albertvillanova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertvillanova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-01T06:39:15Z",
    "updated_at": "2019-03-01T06:39:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello, here my explanation to justify this PR.\r\n\r\nAs I already commented in #19129, IIUC, the only aim of orient='target' is to get round-trip JSON serialization/deserialization of pandas objects. Thus, the 'schema' was added following the \"Table Schema\" spec in https://frictionlessdata.io/specs/table-schema/.\r\n\r\nThis spec is ONLY for the 'schema', not for the table itself. And this spec does not prohibit the column names to be non-strings. Indeed, when serializing pandas DataFrames with non-string column names, their 'schema' is totally valid, and the issues arise just because of the JSON serialization of the table itself (the 'data').\r\n\r\nIn order to serialize the data itself, among all the possible orient values, it was chosen orient='records' and this is the cause of all the issues. Why? Because orient='records' serializes each DataFrame row as a JSON object (roughly equivalent to a Python dict), using the column names as the JSON object names (dict keys). The choice of using column names as dict keys (JSON object names) is not right for several reasons:\r\n- non-string column names: \r\nDataFrame column names are not restricted to be strings. Indeed, non-string column names are the default if no explicit column names are passed to DataFrame instantiation; however, JSON spec imposes that JSON object names must be strings. \r\n- order of the columns:\r\nDataFrame columns have a specific order; however, when representing each record as a Python dict, we lose the order of the columns.\r\n- non-unique column names\r\na DataFrame can have non-unique column names; however a Python dict cannot have non-unique keys.\r\n\r\nIn order to address all theses issues, this PR proposes to use another representation of each DataFrame row: instead of using a Python dict, we should use a Python list. The Python list:\r\n- can have non-unique items\r\n- conserves the order of its items\r\n- and its JSON equivalent is a JSON array, which does not impose any restriction on the types of its values\r\n\r\nAnd in pandas, this can be easily made by choosing the orient='values' (instead of orient='records').\r\n\r\nFinally, I would like to point out that there exists a Tabular Data Resource spec (https://frictionlessdata.io/specs/tabular-data-resource/) and it clearly establishes (in its section JSON Tabular Data):\r\n\r\n> JSON Tabular Data MUST be an `array` where each item in the array MUST be:\r\n> - EITHER: an array where each entry in the array is the value for that cell in the table\r\n> - OR: an object where each key corresponds to the header for that row and the value corresponds to the cell value for that row for that header\r\n\r\nThis PR proposes to use the first option (instead of the second one) for all the previously mentioned reasons."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/468578789",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25488#issuecomment-468578789",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25488",
    "id": 468578789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODU3ODc4OQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-01T08:03:59Z",
    "updated_at": "2019-03-01T08:03:59Z",
    "author_association": "MEMBER",
    "body": "> This PR proposes to use the first option (instead of the second one) for all the previously mentioned reasons.\r\n\r\nOK I see your point here though so thanks for clarifying. Will review in more detail later and give you feedback just wanted to reach out in the interim"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469532403",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25488#issuecomment-469532403",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25488",
    "id": 469532403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTUzMjQwMw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T04:25:41Z",
    "updated_at": "2019-03-05T04:25:41Z",
    "author_association": "MEMBER",
    "body": "> What do people think about leaving `orient` just for the data key, and adding a new keyword `schema=True/False` to control whether we include the `schema` key at the outer level? I haven't really thought through the deprecation cycle.\r\n\r\nWhat do you see as the advantage of doing this? I would actually be against this as we already have quite a few JSON formats, so adding another that doesn't follow the table spec doesn't add a lot of value I think.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469537964",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25488#issuecomment-469537964",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25488",
    "id": 469537964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTUzNzk2NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T04:58:36Z",
    "updated_at": "2019-03-05T04:58:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I’ll need to read the spec again, but it may not make any claims for how the data should be represented. \n\n> On Mar 4, 2019, at 22:25, William Ayd <notifications@github.com> wrote:\n> \n> What do people think about leaving orient just for the data key, and adding a new keyword schema=True/False to control whether we include the schema key at the outer level? I haven't really thought through the deprecation cycle.\n> \n> What do you see as the advantage of doing this? I would actually be against this as we already have quite a few JSON formats, so adding another that doesn't follow the table spec doesn't add a lot of value I think.\n> \n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474654074",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25488#issuecomment-474654074",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25488",
    "id": 474654074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDY1NDA3NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-20T02:00:56Z",
    "updated_at": "2019-03-20T02:00:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you merge master"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/480113815",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25488#issuecomment-480113815",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25488",
    "id": 480113815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDExMzgxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-05T00:57:00Z",
    "updated_at": "2019-04-05T00:57:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you merge master"
  }
]
