[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410922848",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22226#issuecomment-410922848",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22226",
    "id": 410922848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDkyMjg0OA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T03:37:34Z",
    "updated_at": "2018-08-07T03:37:34Z",
    "author_association": "MEMBER",
    "body": "Is the idea to make this a bit-per-entry?  If not, I'm not clear on what the benefit of this is."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410923538",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22226#issuecomment-410923538",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22226",
    "id": 410923538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDkyMzUzOA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T03:42:25Z",
    "updated_at": "2018-08-07T03:42:25Z",
    "author_association": "MEMBER",
    "body": "No this would be using int8 underneath - I don't think a bit-per-entry is possible since that's not an addressable unit. \r\n\r\nBenefit would be to give users an easy way to cast to and store boolean data with the same masking technique that we are using for integers to denote missing data, albeit the actual implementation underneath uses int8. I figure that would be easier than completely reimplementing this with a dedicated bool subtype, though I'm also looking for feedback on that front"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410927087",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22226#issuecomment-410927087",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22226",
    "id": 410927087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDkyNzA4Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T04:09:21Z",
    "updated_at": "2018-08-07T04:09:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "havenâ€™t looked at the impl \r\n\r\nbut the clear win for this is efficient boolean arrays with missing values\r\n\r\nright now you get nice boolean arrays but as soon as you have a NaN you coerce to object (or worse to float)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/411083690",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22226#issuecomment-411083690",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22226",
    "id": 411083690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTA4MzY5MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T14:49:19Z",
    "updated_at": "2018-08-07T14:49:19Z",
    "author_association": "MEMBER",
    "body": "> Benefit would be to give users an easy way to cast to and store boolean data with the same masking technique that we are using for integers to denote missing data\r\n\r\nBoolNA makes sense to me, thanks for clarifying.\r\n\r\n> No this would be using int8 underneath - I don't think a bit-per-entry is possible since that's not an addressable unit.\r\n\r\nYah this would takes some behind-the-scenes trickery.  Something like a length-N bool array being backed by a len-N/8 int8 array."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/411209462",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22226#issuecomment-411209462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22226",
    "id": 411209462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTIwOTQ2Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T21:31:41Z",
    "updated_at": "2018-08-07T21:31:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "i made an issue about using bitarray as an impl detail for integer NA; would obviously be useful here as well (so this would then be really cheap from a memory perspective)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440709445",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22226#issuecomment-440709445",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22226",
    "id": 440709445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDcwOTQ0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T15:38:38Z",
    "updated_at": "2018-11-21T15:38:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "agree this is a nice idea and we should do it but closing as stale"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457898978",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22226#issuecomment-457898978",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22226",
    "id": 457898978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzg5ODk3OA==",
    "user": {
      "login": "fuglede",
      "id": 6169306,
      "node_id": "MDQ6VXNlcjYxNjkzMDY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6169306?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fuglede",
      "html_url": "https://github.com/fuglede",
      "followers_url": "https://api.github.com/users/fuglede/followers",
      "following_url": "https://api.github.com/users/fuglede/following{/other_user}",
      "gists_url": "https://api.github.com/users/fuglede/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fuglede/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fuglede/subscriptions",
      "organizations_url": "https://api.github.com/users/fuglede/orgs",
      "repos_url": "https://api.github.com/users/fuglede/repos",
      "events_url": "https://api.github.com/users/fuglede/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fuglede/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-27T08:26:36Z",
    "updated_at": "2019-01-27T08:26:36Z",
    "author_association": "NONE",
    "body": "If this ends up being possible, you may want to also provide it as an answer to [this StackOverflow question](https://stackoverflow.com/q/34520267/5085211)."
  }
]
