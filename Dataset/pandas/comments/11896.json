[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/177992803",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11896#issuecomment-177992803",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11896",
    "id": 177992803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Nzk5MjgwMw==",
    "user": {
      "login": "Tanguyabel",
      "id": 5371910,
      "node_id": "MDQ6VXNlcjUzNzE5MTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5371910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tanguyabel",
      "html_url": "https://github.com/Tanguyabel",
      "followers_url": "https://api.github.com/users/Tanguyabel/followers",
      "following_url": "https://api.github.com/users/Tanguyabel/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tanguyabel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tanguyabel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tanguyabel/subscriptions",
      "organizations_url": "https://api.github.com/users/Tanguyabel/orgs",
      "repos_url": "https://api.github.com/users/Tanguyabel/repos",
      "events_url": "https://api.github.com/users/Tanguyabel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tanguyabel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-01T14:26:50Z",
    "updated_at": "2016-02-01T14:40:20Z",
    "author_association": "NONE",
    "body": "Hi, I encountered a similar issue using DataFrame.read_sql_query to read data from SQL.\nFollowing the answer from [this post on stackoverflow](http://stackoverflow.com/questions/10935854/how-to-escape-in-a-query-using-pythons-sqlalchemys-execute-and-pymysql), I got it fixed using the sqlalchemy [text()](http://docs.sqlalchemy.org/en/latest/core/sqlelement.html?highlight=text#sqlalchemy.sql.expression.text) function when executing the query. This fix takes place in the execute method of SQLDataBase class. I've never contributed to pandas so I am not sure how I should provide a patch and test it. Please feel free to tell me about.\nHope it helps!\n\n``` bash\nINSTALLED VERSIONS\n------------------\ncommit: None\npython: 2.7.6.final.0\npython-bits: 64\nOS: Linux\nOS-release: 3.14.32-xxxx-grs-ipv6-64\nmachine: x86_64\nprocessor: x86_64\nbyteorder: little\nLC_ALL: None\nLANG: fr_FR.UTF-8\n\npandas: 0.17.1\nnose: 1.3.7\npip: 7.1.2\nsetuptools: 3.3\nCython: None\nnumpy: 1.10.4\nscipy: 0.16.1\nstatsmodels: None\nIPython: 4.0.1\nsphinx: None\npatsy: None\ndateutil: 2.4.2\npytz: 2015.7\nblosc: None\nbottleneck: None\ntables: None\nnumexpr: None\nmatplotlib: 1.5.1\nopenpyxl: None\nxlrd: None\nxlwt: None\nxlsxwriter: None\nlxml: None\nbs4: None\nhtml5lib: 0.999\nhttplib2: None\napiclient: None\nsqlalchemy: 1.0.11\npymysql: 0.6.7.None\npsycopg2: None\nJinja2: None\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332183094",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11896#issuecomment-332183094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11896",
    "id": 332183094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjE4MzA5NA==",
    "user": {
      "login": "jfunction",
      "id": 1636190,
      "node_id": "MDQ6VXNlcjE2MzYxOTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1636190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jfunction",
      "html_url": "https://github.com/jfunction",
      "followers_url": "https://api.github.com/users/jfunction/followers",
      "following_url": "https://api.github.com/users/jfunction/following{/other_user}",
      "gists_url": "https://api.github.com/users/jfunction/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jfunction/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jfunction/subscriptions",
      "organizations_url": "https://api.github.com/users/jfunction/orgs",
      "repos_url": "https://api.github.com/users/jfunction/repos",
      "events_url": "https://api.github.com/users/jfunction/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jfunction/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T12:31:42Z",
    "updated_at": "2017-09-26T12:31:42Z",
    "author_association": "NONE",
    "body": "For me this (rather old) issue was due to an outdated MySQLdb. For me, simply running the following fixed the issue: \r\n\r\n```[bash]\r\nsudo apt-get install python-dev libmysqlclient-dev;\r\npip install mysqlclient --upgrade --user\r\n```\r\n\r\nYour mileage may vary. I hope that saves someone an hour or two."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478975642",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11896#issuecomment-478975642",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11896",
    "id": 478975642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODk3NTY0Mg==",
    "user": {
      "login": "ThibTrip",
      "id": 40694343,
      "node_id": "MDQ6VXNlcjQwNjk0MzQz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/40694343?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ThibTrip",
      "html_url": "https://github.com/ThibTrip",
      "followers_url": "https://api.github.com/users/ThibTrip/followers",
      "following_url": "https://api.github.com/users/ThibTrip/following{/other_user}",
      "gists_url": "https://api.github.com/users/ThibTrip/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ThibTrip/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ThibTrip/subscriptions",
      "organizations_url": "https://api.github.com/users/ThibTrip/orgs",
      "repos_url": "https://api.github.com/users/ThibTrip/repos",
      "events_url": "https://api.github.com/users/ThibTrip/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ThibTrip/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-02T12:36:09Z",
    "updated_at": "2019-04-02T12:36:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "This issue seems to still be there with PostgreSQL. Here is a code sample to test this (you'll need to provide your engine and create a schema \"python_tests\" or set the schema to \"public\" if you don't mind adding a table there).\r\n\r\nAs a workaround I will obviously change \"%\" to \"percent\". It is actually probably a bad idea to have \"%\" in a column name anyways so I'd be fine if an error was thrown immediatly instead of pandas trying to save then failing and then only throwing the error.\r\n\r\nThe reason why I'm writing this is because in my case I was working on a table with tens of thousands of rows and jupyter crashed (the % sign was causing a great amount of spam as I saw by running my script with IPython afterwards).\r\n\r\n```\r\n\r\nimport pandas as pd\r\nimport sqlalchemy\r\n\r\nvalues = [[pd.Timestamp('2019-01-01 00:00:00'), 'New Year', 0, 'Tuesday']]\r\ncolumns = ['Date', 'Holiday Name', '% worked', 'Weekday']\r\ndf_test = pd.DataFrame(data = values, columns = columns)\r\n\r\n# YOUR ENGINE\r\nengine = sqlalchemy.create_engine('...')\r\n\r\ndf_test.to_sql(name = 'pg_table_with_percent',\r\n               con = engine, \r\n               schema = 'python_tests', # you need to create the schema if it does not exist\r\n               if_exists = 'replace', \r\n               index = False, \r\n               method = 'multi')\r\n\r\n\r\n---------------------------------------------------------------------------\r\nProgrammingError                          Traceback (most recent call last)\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\sqlalchemy\\engine\\base.py in _execute_context(self, dialect, constructor, statement, parameters, *args)\r\n   1181                         parameters,\r\n-> 1182                         context)\r\n   1183         except BaseException as e:\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\sqlalchemy\\engine\\default.py in do_execute(self, cursor, statement, parameters, context)\r\n    469     def do_execute(self, cursor, statement, parameters, context=None):\r\n--> 470         cursor.execute(statement, parameters)\r\n    471 \r\n\r\nProgrammingError: incomplete placeholder: '%(' without ')'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nProgrammingError                          Traceback (most recent call last)\r\n<ipython-input-4-88fe30bc8405> in <module>\r\n     16                if_exists = 'replace',\r\n     17                index = False,\r\n---> 18                method = 'multi')\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\pandas\\core\\generic.py in to_sql(self, name, con, schema, if_exists, index, index_label, chunksize, dtype, method)\r\n   2530         sql.to_sql(self, name, con, schema=schema, if_exists=if_exists,\r\n   2531                    index=index, index_label=index_label, chunksize=chunksize,\r\n-> 2532                    dtype=dtype, method=method)\r\n   2533 \r\n   2534     def to_pickle(self, path, compression='infer',\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\pandas\\io\\sql.py in to_sql(frame, name, con, schema, if_exists, index, index_label, chunksize, dtype, method)\r\n    458     pandas_sql.to_sql(frame, name, if_exists=if_exists, index=index,\r\n    459                       index_label=index_label, schema=schema,\r\n--> 460                       chunksize=chunksize, dtype=dtype, method=method)\r\n    461 \r\n    462 \r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\pandas\\io\\sql.py in to_sql(self, frame, name, if_exists, index, index_label, schema, chunksize, dtype, method)\r\n   1172                          schema=schema, dtype=dtype)\r\n   1173         table.create()\r\n-> 1174         table.insert(chunksize, method=method)\r\n   1175         if (not name.isdigit() and not name.islower()):\r\n   1176             # check for potentially case sensitivity issues (GH7815)\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\pandas\\io\\sql.py in insert(self, chunksize, method)\r\n    684 \r\n    685                 chunk_iter = zip(*[arr[start_i:end_i] for arr in data_list])\r\n--> 686                 exec_insert(conn, keys, chunk_iter)\r\n    687 \r\n    688     def _query_iterator(self, result, chunksize, columns, coerce_float=True,\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\pandas\\io\\sql.py in _execute_insert_multi(self, conn, keys, data_iter)\r\n    607         \"\"\"\r\n    608         data = [dict(zip(keys, row)) for row in data_iter]\r\n--> 609         conn.execute(self.table.insert(data))\r\n    610 \r\n    611     def insert_data(self):\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\sqlalchemy\\engine\\base.py in execute(self, object, *multiparams, **params)\r\n    943             raise exc.ObjectNotExecutableError(object)\r\n    944         else:\r\n--> 945             return meth(self, multiparams, params)\r\n    946 \r\n    947     def _execute_function(self, func, multiparams, params):\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\sqlalchemy\\sql\\elements.py in _execute_on_connection(self, connection, multiparams, params)\r\n    261     def _execute_on_connection(self, connection, multiparams, params):\r\n    262         if self.supports_execution:\r\n--> 263             return connection._execute_clauseelement(self, multiparams, params)\r\n    264         else:\r\n    265             raise exc.ObjectNotExecutableError(self)\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\sqlalchemy\\engine\\base.py in _execute_clauseelement(self, elem, multiparams, params)\r\n   1051             compiled_sql,\r\n   1052             distilled_params,\r\n-> 1053             compiled_sql, distilled_params\r\n   1054         )\r\n   1055         if self._has_events or self.engine._has_events:\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\sqlalchemy\\engine\\base.py in _execute_context(self, dialect, constructor, statement, parameters, *args)\r\n   1187                 parameters,\r\n   1188                 cursor,\r\n-> 1189                 context)\r\n   1190 \r\n   1191         if self._has_events or self.engine._has_events:\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\sqlalchemy\\engine\\base.py in _handle_dbapi_exception(self, e, statement, parameters, cursor, context)\r\n   1400                 util.raise_from_cause(\r\n   1401                     sqlalchemy_exception,\r\n-> 1402                     exc_info\r\n   1403                 )\r\n   1404             else:\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\sqlalchemy\\util\\compat.py in raise_from_cause(exception, exc_info)\r\n    201     exc_type, exc_value, exc_tb = exc_info\r\n    202     cause = exc_value if exc_value is not exception else None\r\n--> 203     reraise(type(exception), exception, tb=exc_tb, cause=cause)\r\n    204 \r\n    205 if py3k:\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\sqlalchemy\\util\\compat.py in reraise(tp, value, tb, cause)\r\n    184             value.__cause__ = cause\r\n    185         if value.__traceback__ is not tb:\r\n--> 186             raise value.with_traceback(tb)\r\n    187         raise value\r\n    188 \r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\sqlalchemy\\engine\\base.py in _execute_context(self, dialect, constructor, statement, parameters, *args)\r\n   1180                         statement,\r\n   1181                         parameters,\r\n-> 1182                         context)\r\n   1183         except BaseException as e:\r\n   1184             self._handle_dbapi_exception(\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\sqlalchemy\\engine\\default.py in do_execute(self, cursor, statement, parameters, context)\r\n    468 \r\n    469     def do_execute(self, cursor, statement, parameters, context=None):\r\n--> 470         cursor.execute(statement, parameters)\r\n    471 \r\n    472     def do_execute_no_params(self, cursor, statement, context=None):\r\n\r\nProgrammingError: (psycopg2.ProgrammingError) incomplete placeholder: '%(' without ')' [SQL: 'INSERT INTO python_tests.pg_table_with_percent (\"Date\", \"Holiday Name\", \"%% worked\", \"Weekday\") VALUES (%(Date_m0)s, %(Holiday Name_m0)s, %(% worked_m0)s, %(Weekday_m0)s)'] [parameters: {'Date_m0': datetime.datetime(2019, 1, 1, 0, 0), 'Holiday Name_m0': 'New Year', '% worked_m0': 0, 'Weekday_m0': 'Tuesday'}]\r\n\r\n\r\n```\r\n\r\n\r\n"
  }
]
