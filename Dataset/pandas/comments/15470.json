[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/281488245",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15470#issuecomment-281488245",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15470",
    "id": 281488245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTQ4ODI0NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T21:34:05Z",
    "updated_at": "2017-02-21T21:34:42Z",
    "author_association": "MEMBER",
    "body": "You have encountered a specific gotcha of getitem indexing. When you have a numerical index, it is label-based indexing (the second example you give). But for other types of indexes, it is positional indexing (eg try with strings). \r\nThe questions of course here is then: is a Categorical index with numerical categories a numerical index or a 'other type' of index? \r\n\r\nIf we say it is not a numerical index (which I think we should do, as the way of indexing of a CategoricalIndex should IMO not depend on the type of the categories), the current behaviour is correct. But I admit this is rather confusing .."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/281489758",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15470#issuecomment-281489758",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15470",
    "id": 281489758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTQ4OTc1OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T21:39:49Z",
    "updated_at": "2017-02-21T21:39:49Z",
    "author_association": "MEMBER",
    "body": "For some more discussion on getitem indexing, see https://github.com/pandas-dev/pandas/issues/9595. The issue you raise here is yet another example of where the behaviour of getitem can be confusing/unpredictable due to the mixing of both label-based and positional indexing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/330189623",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15470#issuecomment-330189623",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15470",
    "id": 330189623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDE4OTYyMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T11:12:01Z",
    "updated_at": "2017-09-18T11:12:01Z",
    "author_association": "MEMBER",
    "body": "It seems that this issue only occurs for list-like indexers, as a scalar label works correctly. With the example of above:\r\n\r\n```\r\nIn [53]: s[0]\r\nOut[53]: 0    <---- label based\r\n\r\nIn [54]: s[[0]]\r\nOut[54]: \r\n2    2      <---- position based\r\ndtype: int64\r\n\r\nIn [55]: s.loc[[0]]\r\nOut[55]: \r\n0    0\r\ndtype: int64\r\n```"
  }
]
