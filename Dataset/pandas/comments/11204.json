[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/144192851",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11204#issuecomment-144192851",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11204",
    "id": 144192851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDE5Mjg1MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T21:12:33Z",
    "updated_at": "2015-09-29T21:12:33Z",
    "author_association": "MEMBER",
    "body": "@JohnNapier The result `df1` would be of shape  (100000, 100000), which be approximately be 74 GB, so the memory error is not surprising?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/144193636",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11204#issuecomment-144193636",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11204",
    "id": 144193636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDE5MzYzNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T21:15:51Z",
    "updated_at": "2015-09-29T21:15:51Z",
    "author_association": "MEMBER",
    "body": "But maybe you want `df0.div(df0.sum(axis=1), axis=0)` ?\n\nFurther, why would `df0/df0.sum(axis=1)` be deprecated? (that is only for timeseries that the broadcasting will be changed to the same behaviour (matching on the columns) as for other types)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/144195983",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11204#issuecomment-144195983",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11204",
    "id": 144195983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDE5NTk4Mw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T21:25:25Z",
    "updated_at": "2015-09-29T21:25:25Z",
    "author_association": "MEMBER",
    "body": "Indeed, you are almost certainly getting confused by the way that pandas does \"broadcasting\" between operations. The elements of the series are aligned against the _columns_ of the dataframe, not the rows. This follows the broadcasting rule from numpy, aligns from the last dimension.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/144196966",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11204#issuecomment-144196966",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11204",
    "id": 144196966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDE5Njk2Ng==",
    "user": {
      "login": "JohnNapier",
      "id": 10504477,
      "node_id": "MDQ6VXNlcjEwNTA0NDc3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10504477?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JohnNapier",
      "html_url": "https://github.com/JohnNapier",
      "followers_url": "https://api.github.com/users/JohnNapier/followers",
      "following_url": "https://api.github.com/users/JohnNapier/following{/other_user}",
      "gists_url": "https://api.github.com/users/JohnNapier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JohnNapier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JohnNapier/subscriptions",
      "organizations_url": "https://api.github.com/users/JohnNapier/orgs",
      "repos_url": "https://api.github.com/users/JohnNapier/repos",
      "events_url": "https://api.github.com/users/JohnNapier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JohnNapier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T21:30:10Z",
    "updated_at": "2015-09-29T21:30:10Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche, you are right, I thought the default broadcasting axis was zero. Thanks for making this clear.\n\nOtherwise, are we not supposed to use df0.div(df0.sum(axis=1), axis=0) rather than df0/df0.sum(axis=1)? When I use the latter, I get the warning:\n\n``` python\nFutureWarning: TimeSeries broadcasting along DataFrame index by default is deprecated. Please use DataFrame.<op> to explicitly broadcast arithmetic operations along the index\n  FutureWarning)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/144202929",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11204#issuecomment-144202929",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11204",
    "id": 144202929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDIwMjkyOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T21:57:07Z",
    "updated_at": "2015-09-29T21:57:07Z",
    "author_association": "MEMBER",
    "body": "yes, indeed, when having a DatetimeIndex, there is a deviation from the standard rule (broadcasting on the columns or axis 1). But as this is inconsistent with all other types of indexes, this behaviour is deprecated and you have to use `div(.. , axis=0)`.\n\nOne of the main uses of `df.div(s)` method is actually the `axis=0` case, because with `axis=1 it is equivalent to just`df/s` \n"
  }
]
