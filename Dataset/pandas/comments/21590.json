[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399356408",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-399356408",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 399356408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTM1NjQwOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-22T07:56:59Z",
    "updated_at": "2018-06-22T07:56:59Z",
    "author_association": "MEMBER",
    "body": "cc @deniederhut \r\n\r\nFor the unary positive, if we care I can check for datetime64 and raise a TypeError for that (although we can also follow numpy's example). For the object dtype (eg strings), that's not really possible since it is exactly the idea to allow it for those types in an object column that allow it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399606301",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-399606301",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 399606301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTYwNjMwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-22T23:06:05Z",
    "updated_at": "2018-06-22T23:06:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "code change looks good (though you simply may need to add ``is_object_type`` to the check as we are strict on it)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399628949",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-399628949",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 399628949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTYyODk0OQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-23T04:11:04Z",
    "updated_at": "2018-06-23T04:11:04Z",
    "author_association": "MEMBER",
    "body": "+1.  Thoughts on applying the same pass-through approach to `Index.__sub__`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399864153",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-399864153",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 399864153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTg2NDE1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-25T07:52:52Z",
    "updated_at": "2018-06-25T07:52:52Z",
    "author_association": "MEMBER",
    "body": "> though you simply may need to add is_object_type to the check as we are strict on it\r\n\r\nDo you mean to only specifically call `operator.neg(values)` for object dtype (as we do for numeric), so it still fails for datetime64?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400118383",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-400118383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 400118383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDExODM4Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-25T22:40:21Z",
    "updated_at": "2018-06-25T22:40:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Do you mean to only specifically call operator.neg(values) for object dtype (as we do for numeric), so it still fails for datetime64?\r\n\r\nI meant more just to extend the if from the original code, like\r\n\r\n```\r\n        elif (is_numeric_dtype(values) or is_timedelta64_dtype(values) or is_object_type(values)):\r\n            arr = operator.neg(values)\r\n       else:\r\n            raise TypeError\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400619925",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-400619925",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 400619925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDYxOTkyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T10:18:26Z",
    "updated_at": "2018-06-27T10:18:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I pushed a fix to make this work"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400621011",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-400621011",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 400621011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDYyMTAxMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T10:22:37Z",
    "updated_at": "2018-06-27T10:22:37Z",
    "author_association": "MEMBER",
    "body": "yeah, sorry for the delay, getting to it today\r\n\r\nI am fine with the `is_object_dtype` check (to explicitly not allow the datetime64), but personally I don't think we should infer anything if it is object. The error message is already fine in case of `__neg__`, and I don't really care about `+s_string` working (it is consistent with numpy). So I would rather do what you posted above in https://github.com/pandas-dev/pandas/pull/21590#issuecomment-400118383"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400624188",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-400624188",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 400624188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDYyNDE4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T10:31:39Z",
    "updated_at": "2018-06-27T10:31:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I am fine with the is_object_dtype check (to explicitly not allow the datetime64), but personally I don't think we should infer anything if it is object. The error message is already fine in case of __neg__, and I don't really care about +s_string working (it is consistent with numpy). So I would rather do what you posted above in #21590 (comment)\r\n\r\nI tried that and it failed your tests :> So maybe they are too strict. I didn't dive too deep here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400625013",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-400625013",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 400625013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDYyNTAxMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T10:33:33Z",
    "updated_at": "2018-06-27T10:33:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "in particular this (on master)\r\n\r\n```\r\nIn [9]: df = pd.DataFrame({'A': ['a', 'b']})\r\n\r\nIn [10]: + df\r\nOut[10]: \r\n   A\r\n0  a\r\n1  b\r\n\r\nIn [11]: - df\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-11-42e20adaf419> in <module>()\r\n----> 1 - df\r\n\r\n~/pandas/pandas/core/generic.py in __neg__(self)\r\n   1125               not is_string_like_dtype(np.array(values))):#lib.infer_dtype(values) not in ['string', 'bytes', 'unicode']):\r\n   1126             # explicity allow object dtypes that are not strings, gh-21380\r\n-> 1127             arr = operator.neg(values)\r\n   1128         else:\r\n   1129             raise TypeError(\"Unary negative expects numeric dtype, not {}\"\r\n\r\nTypeError: bad operand type for unary -: 'str'\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400641248",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-400641248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 400641248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDY0MTI0OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T11:36:11Z",
    "updated_at": "2018-06-27T11:36:11Z",
    "author_association": "MEMBER",
    "body": "Yes, not inferring strings means that we need to update the test (but only for `__pos__`), because `+s_strings` would now work while it fails on master. \r\nI didn't do that initially because I first wanted to get an idea if you were OK with allowing something like `+s_strings`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400648329",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-400648329",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 400648329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDY0ODMyOQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-06-27T12:06:12Z",
    "updated_at": "2018-06-29T00:38:31Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21590?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`master@c45bb0b`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/21590/graphs/tree.svg?src=pr&token=eZ4WkYLtcO&width=650&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/21590?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##             master   #21590   +/-   ##\n=========================================\n  Coverage          ?    91.9%           \n=========================================\n  Files             ?      154           \n  Lines             ?    49555           \n  Branches          ?        0           \n=========================================\n  Hits              ?    45542           \n  Misses            ?     4013           \n  Partials          ?        0\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.27% <100%> (?)` | |\n| #single | `42.03% <0%> (?)` | |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/21590?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/21590/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `96.21% <100%> (ø)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21590?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21590?src=pr&el=footer). Last update [c45bb0b...453b9bd](https://codecov.io/gh/pandas-dev/pandas/pull/21590?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400835195",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-400835195",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 400835195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDgzNTE5NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T21:29:49Z",
    "updated_at": "2018-06-27T21:29:49Z",
    "author_association": "MEMBER",
    "body": "> Thoughts on applying the same pass-through approach to Index.__sub__?\r\n\r\nYes, I think that is a good idea, but let's leave that for a separate PR / 0.24.0\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400871424",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-400871424",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 400871424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDg3MTQyNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-28T00:24:11Z",
    "updated_at": "2018-06-28T00:24:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "seems numpy allows this which I find odd. \r\n\r\n```\r\nIn [1]: arr = np.array(['foo'])\r\n\r\nIn [2]: +arr\r\nOut[2]: array(['foo'], dtype='<U3')\r\n\r\nIn [3]: arr = np.array(['foo'], dtype=object)\r\n\r\nIn [4]: +arr                                 \r\nOut[4]: array(['foo'], dtype=object)\r\n```\r\n\r\nok with matching numpy (for pos only)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401022928",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-401022928",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 401022928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTAyMjkyOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-28T12:49:29Z",
    "updated_at": "2018-06-28T12:49:29Z",
    "author_association": "MEMBER",
    "body": "I think the policy of numpy regarding `+` is simply to return the original object regardless whether it would otherwise support the notion of negative/positive or addition.\r\n\r\n> ok with matching numpy (for pos only).\r\n\r\nYes (for object dtype now, for datetime we still raise), and for `neg` our behaviour was already consistent with numpy before."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401213714",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21590#issuecomment-401213714",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21590",
    "id": 401213714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTIxMzcxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-29T00:38:43Z",
    "updated_at": "2018-06-29T00:38:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "thank you sir!"
  }
]
