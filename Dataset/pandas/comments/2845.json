[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13396235",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2845#issuecomment-13396235",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2845",
    "id": 13396235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzk2MjM1",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-11T18:58:28Z",
    "updated_at": "2013-02-11T19:07:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Please provide any feedback on commit 04919717d97bec1c6b96a16fcd4bcfb67aa4fc10 if you can; will create a PR (with appropriate tests for the new behavior) if there are no objections to the changes. All tests pass (at least on linux 32-bit)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13397294",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2845#issuecomment-13397294",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2845",
    "id": 13397294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzk3Mjk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-11T19:18:54Z",
    "updated_at": "2013-02-11T19:22:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "i would agree with all of these, except for the mixed datetimes-bools...admitedly that is weird, but its essentially a mixed case, so should just be object (and not try to guess), in any event the user could always coerce this case via `df.convert_objects(convert_dates='coerce')`\n\nlast one (casting with None) is an issue I think, maybe search and see if you can find it?\n\nessentially, I think the philosophy (someone correct me if this is not right!), is that a homogenous array should be typed correctly (and not object), while mixed should be left (be it as float or object or whatever). The user then can coerce explicity via `astype` or `convert_objects` if needed (which now in 0.11 can coerce dates and numeric like strings). In addition, unlless dtypes are specified, numpy defaults are used (meaning `int64` and `float64`, regardless of architecture)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13397561",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2845#issuecomment-13397561",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2845",
    "id": 13397561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzk3NTYx",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-11T19:24:05Z",
    "updated_at": "2013-02-11T19:43:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Found another one:\n\n##### Booleans and datetimes lost when mixed with `None` and numerics\n\nAlso, uninitialized memory is being read as float\n\n``` python\nIn [18]: arr = np.asarray([2.0, 1, True, None], dtype=np.object_)\n\nIn [19]: p.lib.maybe_convert_objects(arr)\nOut[19]: \narray([  2.00000000e+000,   1.00000000e+000,   1.66954563e-256,\n                     nan])\n\nIn [20]: arr = np.asarray([2.0, 1, dt.datetime(2006,1,1), None], dtype=np.object_)\n\nIn [21]: p.lib.maybe_convert_objects(arr, convert_datetime=1)\nOut[21]: \narray([  2.00000000e+000,   1.00000000e+000,   1.57847506e-260,\n                     nan])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13397905",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2845#issuecomment-13397905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2845",
    "id": 13397905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzk3OTA1",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-11T19:31:07Z",
    "updated_at": "2013-02-11T19:31:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback what do you mean w.r.t to mixed datetimes-bools? right now it's taking bools (and reading uninitialized memory by doing so)--I've fixed it to keep the original objects instead\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13398218",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2845#issuecomment-13398218",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2845",
    "id": 13398218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzk4MjE4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-11T19:36:33Z",
    "updated_at": "2013-02-11T19:36:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "no...i mean your last 2 exaamples are inherently mixed (e.g. floats and bools)....so result should be the same as input, e.g. it should not change from object type\n\nonly if ALL are that type (or special cases of `None` or `nan` which are converted for floats (and datestimes), but that is done in `com._possibily_convert_datetimes`)\n\nahh...just reread your comments...yes if it actually tries to do something on a mixed-type that is wrong\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13398330",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2845#issuecomment-13398330",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2845",
    "id": 13398330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzk4MzMw",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-11T19:38:14Z",
    "updated_at": "2013-02-11T19:38:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, unless i'm confused, i think we agree then? in all the mixed cases presented my new code just preserves the existing objects.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13398434",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2845#issuecomment-13398434",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2845",
    "id": 13398434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzk4NDM0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-11T19:40:28Z",
    "updated_at": "2013-02-11T19:40:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes!\n\nessentially `maybe_convert_objects` should ONLY convert if it can do so cleanly (I have sort of moved `coerce` type options to `com._possibily_convert_objects`, which now that I am thinking about should have a `convert_bool` option as well\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13400020",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2845#issuecomment-13400020",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2845",
    "id": 13400020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDAwMDIw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-11T20:11:41Z",
    "updated_at": "2013-02-11T20:11:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "somewhat related is #2798\n\n`Series([None,None])` is currently object I think, but maybe should be coerced to equiv of `Series([np.nan,np.nan])`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13400688",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2845#issuecomment-13400688",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2845",
    "id": 13400688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDAwNjg4",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-11T20:26:06Z",
    "updated_at": "2013-02-11T20:29:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually I noticed that and made a change to address it locally but it broke a test so I reverted it. It was HTML serialization/deserialization round-trip: basically, it made \"nan\" show up instead of a blank string in the output where it was expected before. I suspect it probably affects a lot of other unserialization/serialization, too, but it's just not tested thoroughly in the test suite.\n\nI don't know what the proper thing to do here is: if you had a bunch of string objects, for example, except that some of them were `None`, it would be odd for the `None`s to become `np.nan`...best would probably be a blank string but that would require `maybe_convert_objects` to do a lot of extra deduction that'll always be incomplete (since objects can be anything). In lieu of that, the current behavior (basically, only converting `None` to `np.nan` when there is at least one numeric and no non-numerics in the input) might be the best that can be done.\n\nEDIT: I guess you could change the behavior so that the output is presumed to be numeric unless given something non-numeric and non-`None`, so `Series([None,None])` would be floating with `np.nan`s but `Series(['', None,None])` would be objects with `None`s. But that's kind of odd too.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13401573",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2845#issuecomment-13401573",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2845",
    "id": 13401573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDAxNTcz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-11T20:42:32Z",
    "updated_at": "2013-02-11T20:42:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep....not really sure on these edge cases....\n\nwhat should definitly do though:\n\nif it is all numeric, None -> np.nan\nNones are converted to NaT (as are np.nans),  (in _possibly_convert_datetimes),not 100% Nones are handled though\n\nbool is a harder case....I don't think None makes sense, but the concept of missing values.....so its tricky now...\n\nessentially these other cases are now left as object....\n\nmaybe_convert_objects should't be too much more complicated I think.....can make more handling on a higher level (in _possibily_convert_objects).....as can have more options on what to do\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13586545",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2845#issuecomment-13586545",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2845",
    "id": 13586545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTg2NTQ1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-15T00:13:13Z",
    "updated_at": "2013-02-15T00:13:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "closed via #2846 \n"
  }
]
