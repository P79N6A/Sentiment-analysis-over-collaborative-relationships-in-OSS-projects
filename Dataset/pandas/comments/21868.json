[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404352325",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404352325",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404352325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDM1MjMyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T00:32:50Z",
    "updated_at": "2018-07-12T00:32:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @toobaz @jorisvandenbossche "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404392427",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404392427",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404392427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDM5MjQyNw==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-07-12T05:19:57Z",
    "updated_at": "2018-07-13T13:20:14Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21868?src=pr&el=h1) Report\n> Merging [#21868](https://codecov.io/gh/pandas-dev/pandas/pull/21868?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/365eac4d27353693a2b758c87fc4bceabb74817f?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/21868/graphs/tree.svg?src=pr&token=eZ4WkYLtcO&width=650&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/21868?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #21868      +/-   ##\n==========================================\n+ Coverage   91.91%   91.91%   +<.01%     \n==========================================\n  Files         164      164              \n  Lines       49992    50008      +16     \n==========================================\n+ Hits        45951    45967      +16     \n  Misses       4041     4041\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.3% <100%> (ø)` | :arrow_up: |\n| #single | `42.15% <39.28%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/21868?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/21868/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.18% <ø> (-0.02%)` | :arrow_down: |\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/21868/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `96.47% <100%> (+0.01%)` | :arrow_up: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/21868/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `94.18% <100%> (+0.07%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21868?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21868?src=pr&el=footer). Last update [365eac4...38aebd0](https://codecov.io/gh/pandas-dev/pandas/pull/21868?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404420937",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404420937",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404420937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDQyMDkzNw==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T07:46:09Z",
    "updated_at": "2018-07-12T07:48:28Z",
    "author_association": "MEMBER",
    "body": "My understanding from #19745 was that the differences were limited (``path``, ordering, ``header`` default value) and that hence we could have raised warnings only for those, and specific errors for them.\r\n\r\nCouldn't we change the first argument to ``path_or_buf``, append the ``path`` argument at the end of the signature, and then emit the warning (and assign its value to ``path_or_buf``) if ``path is not None``?\r\n\r\nSimilarly, couldn't we set the default value of ``header`` to None, and translate it to ``False`` (if it is ``None``) but emitting the ``FutureWarning``?\r\n\r\nI know we would still not catch the ordering change, but\r\n- probably the large majority of users will get a warning from ``header`` - and hence they will be informed about the signature change\r\n- I expect very very few users to pass ``index=`` (which is the first argument after ``buf``) as a positional argument\r\n\r\nApart from the comment above, my main problem with this PR is that it seems to enforce (at least if one wants to suppress the warning) passing ``path`` as a named arg, which I think is unnatural and unneeded.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404425167",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404425167",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404425167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDQyNTE2Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T08:01:44Z",
    "updated_at": "2018-07-12T08:02:05Z",
    "author_association": "MEMBER",
    "body": "@toobaz : The original PR IMO is only a band-aid to the larger issue that `Series.to_csv` is not in sync with `DataFrame.to_csv`.  That's why I'm going all in and issuing a warning as is.  A major release (`0.24.0`) is the best time to do this.\r\n\r\nIf your main issue with this PR is that people need to pass in a keyword arg for `path`, I'm okay with that \"inconvenience\", especially since `DataFrame.to_csv` is a much more commonly used IMO than `Series.to_csv`.  Also, it will certainly make people aware of the fact that we are going to switch signatures in the future.\r\n\r\nA single keyword inconvenience is worth it for all of the keyword arguments and awkwardness that we will resolve with the fact that the functions are not synchronized, both for end users and us as maintainers."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404507268",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404507268",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404507268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDUwNzI2OA==",
    "user": {
      "login": "dahlbaek",
      "id": 30782351,
      "node_id": "MDQ6VXNlcjMwNzgyMzUx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/30782351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dahlbaek",
      "html_url": "https://github.com/dahlbaek",
      "followers_url": "https://api.github.com/users/dahlbaek/followers",
      "following_url": "https://api.github.com/users/dahlbaek/following{/other_user}",
      "gists_url": "https://api.github.com/users/dahlbaek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dahlbaek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dahlbaek/subscriptions",
      "organizations_url": "https://api.github.com/users/dahlbaek/orgs",
      "repos_url": "https://api.github.com/users/dahlbaek/repos",
      "events_url": "https://api.github.com/users/dahlbaek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dahlbaek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T13:12:35Z",
    "updated_at": "2018-07-12T13:31:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Regarding silencing the warning, perhaps one could add to the warning message that it can be silenced by explicitly casting the `Series` instance `ser` to `DataFrame` using `DataFrame(ser)`? As far as i can tell, this would be a future-proof method (i.e. `to_csv` is implemented on `Series` by first casting to `DataFrame` and then calling `to_csv` on the resulting `DataFrame`). In that case, one could even go to the extreme and simply always show the warning message when `Series.to_csv` is called."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404512381",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404512381",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404512381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDUxMjM4MQ==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T13:29:54Z",
    "updated_at": "2018-07-12T13:29:54Z",
    "author_association": "MEMBER",
    "body": "> Regarding silencing the warning, perhaps one could add to the warning message that it can be silenced by explicitly casting the Series instance ser to DataFrame using DataFrame(ser)?\r\n\r\nWe might as well state that we will completely remove ``Series.to_csv``! I don't see any reason for trying to change the way users use a function which works just fine."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404512964",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404512964",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404512964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDUxMjk2NA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T13:31:52Z",
    "updated_at": "2018-07-12T13:31:52Z",
    "author_association": "MEMBER",
    "body": "> especially since DataFrame.to_csv is a much more commonly used IMO than Series.to_csv\r\n\r\nAgain, having a seldomly used function is not a good argument, to me at least, to make it more annoying to use."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404522851",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404522851",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404522851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDUyMjg1MQ==",
    "user": {
      "login": "dahlbaek",
      "id": 30782351,
      "node_id": "MDQ6VXNlcjMwNzgyMzUx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/30782351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dahlbaek",
      "html_url": "https://github.com/dahlbaek",
      "followers_url": "https://api.github.com/users/dahlbaek/followers",
      "following_url": "https://api.github.com/users/dahlbaek/following{/other_user}",
      "gists_url": "https://api.github.com/users/dahlbaek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dahlbaek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dahlbaek/subscriptions",
      "organizations_url": "https://api.github.com/users/dahlbaek/orgs",
      "repos_url": "https://api.github.com/users/dahlbaek/repos",
      "events_url": "https://api.github.com/users/dahlbaek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dahlbaek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T14:02:16Z",
    "updated_at": "2018-07-12T14:21:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "> We might as well state that we will completely remove `Series.to_csv`! I don't see any reason for trying to change the way users use a function which works just fine.\r\n\r\nRemoving `Series.to_csv` is not the same as changing the signature, so stating that `Series.to_csv` will be removed would be false information. No matter what you do, the user will be bothered by a signature change. This way, the user has three options:\r\n\r\n1) Live with the warnings and do not change the arguments. Result: Warnings, not future-proof.\r\n2) Change the arguments, and live with the warnings. Results: Warnings, future-proof.\r\n3) Avoid warnings by not using the \"unstable\" method (i.e. explicitly recast to `DataFrame`). Result: No warnings, future-proof.\r\n\r\nNote that the third option is simply the user implementing the fix by hand, which is why it is future-proof and does not emit warnings. I think those all seem like reasonable options for a short deprecation period."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404564728",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404564728",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404564728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDU2NDcyOA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T16:06:04Z",
    "updated_at": "2018-07-12T16:06:13Z",
    "author_association": "MEMBER",
    "body": "So let me meet you guys half-way:\r\n\r\n* Don't warn on the `path` argument\r\n* Change `header` to default to `None`\r\n* Warn if `header` isn't explicitly set\r\n\r\nHow does that sound?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404657292",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404657292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404657292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDY1NzI5Mg==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T21:31:43Z",
    "updated_at": "2018-07-12T21:31:43Z",
    "author_association": "MEMBER",
    "body": "> So let me meet you guys half-way:\r\n> \r\n>     Don't warn on the path argument\r\n>     Change header to default to None\r\n>     Warn if header isn't explicitly set\r\n> \r\n> How does that sound?\r\n\r\nI think that's reasonable... I just think that moving ``path`` as last argument, and warning if ``path is not None``, is superior (because those people who passed ``path=`` will get the warning): can you point at any downside?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404657989",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404657989",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404657989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDY1Nzk4OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T21:34:30Z",
    "updated_at": "2018-07-12T21:34:30Z",
    "author_association": "MEMBER",
    "body": "> I just think that moving path as last argument, and warning if path is not None, is superior (because those people who passed path= will get the warning): can you point at any downside?\r\n\r\n@toobaz : I'm not sure I fully understand you here.  What do you mean by \"moving path as last argument\" ?  It sounds like you're just repeating what I did currently in this PR?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404658313",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404658313",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404658313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDY1ODMxMw==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T21:35:51Z",
    "updated_at": "2018-07-12T21:35:51Z",
    "author_association": "MEMBER",
    "body": "> I think those all seem like reasonable options for a short deprecation period.\r\n\r\nMy point is: if a given thing works now _and_ will work in the future _in the same way_, no deprecation period should force users to do things otherwise.\r\n\r\nIn this case, the \"thing\" is \"passing a filename as first positional argument\", which (correct me if I'm wrong) works exactly as it should, and will.\r\n\r\nContrast this with the warning for ``header=``, which will rightly force people to change their calls _because the behavior of that argument_ will change."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404666668",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404666668",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404666668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDY2NjY2OA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T22:10:19Z",
    "updated_at": "2018-07-12T22:13:11Z",
    "author_association": "MEMBER",
    "body": "> @toobaz : I'm not sure I fully understand you here. What do you mean by \"moving path as last argument\" ?\r\n\r\nMy idea is that ``Series.to_csv`` could look like:\r\n\r\n```python\r\ndef to_csv(self, path_or_buf=None,\r\n           [rest of signature],\r\n           path=None)\r\nif path is not None:\r\n    # emit warning about change of argument name\r\n    assert(path_or_buf is None), \"You cannot pass both 'path' and 'path_or_buf'.\"\r\n    path_or_buf = path\r\n[...]\r\n```\r\n\r\nwhere ``[rest of signature]`` includes all other arguments, _in the order they appear in ``DataFrame.to_csv()``_.\r\n\r\nThis will be complemented with the warning for ``header=`` if unset and (this just came to my mind now) with\r\n\r\n```python\r\nif isinstance(sep, bool):\r\n    # emit warning about the change of arguments ordering\r\n    raise ValueError\r\n```\r\n\r\nThis way, we inform user of the old ``Series.to_csv`` positional arguments that the signature ordering has changed (previously, ``index`` was the first positional argument after ``path``, now it is ``sep``).\r\nThe only downside (I can see) is that for those users, there will be immediate breakage, rather than a warning... but again, I expect it to be a really rare use case. This downside _could_ be avoided by reordering all arguments (only inside this ``if`` branch)... it's maybe just not worth the effort."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404668190",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404668190",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404668190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDY2ODE5MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T22:17:28Z",
    "updated_at": "2018-07-12T22:17:28Z",
    "author_association": "MEMBER",
    "body": "> My idea is that Series.to_csv could look like:\r\n\r\nHmm...I see...IMO that's bending over backwards a little too much duplicating (and bloating the signature) like that.  I would leave it at warning regarding the `header` argument."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404678594",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404678594",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404678594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDY3ODU5NA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T23:10:41Z",
    "updated_at": "2018-07-12T23:10:41Z",
    "author_association": "MEMBER",
    "body": "> that's bending over backwards a little too much duplicating (and bloating the signature) like that\r\n\r\nJust to be sure we are on the same page: it would obviously be a temporary measure, ``drop=`` would be removed at the end of the deprecation period."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404679011",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404679011",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404679011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDY3OTAxMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T23:13:23Z",
    "updated_at": "2018-07-12T23:13:23Z",
    "author_association": "MEMBER",
    "body": "> Just to be sure we are on the same page: it would obviously be a temporary measure\r\n\r\n@toobaz : Oh, I definitely understand. 🙂 My comment [above](https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404668190) was made with that consideration in mind."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404687302",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404687302",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404687302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDY4NzMwMg==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T00:07:54Z",
    "updated_at": "2018-07-13T00:07:54Z",
    "author_association": "MEMBER",
    "body": "> @toobaz : Oh, I definitely understand. slightly_smiling_face My comment above was made with that consideration in mind.\r\n\r\nOK. Would your comment change if I proposed the following rather than the above?\r\n\r\n```\r\ndef to_csv(self, path_or_buf=None,\r\n           [rest of signature],\r\n           **kwargs)\r\nif kwargs.get('path', None) is not None:\r\n    # emit warning about change of argument name\r\n# continue as in your PR\r\n```\r\n\r\nConcerning the possibility that ``[rest of signature]`` follows the ``DataFrame.to_csv`` order: this is orthogonal with respect to the discussion on whether to warn for ``path=``. And my reasoning is that if we do _not_ change the signature order now, people might have to change their calls twice: now to avoid the warnings, and later to conform the signature. This unless they refrain from using positional arguments at all - which is probably good style, but which we probably don't want to impose."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404687735",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404687735",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404687735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDY4NzczNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T00:10:25Z",
    "updated_at": "2018-07-13T00:10:25Z",
    "author_association": "MEMBER",
    "body": "> OK. Would your comment change if I proposed the following rather than the above?\r\n\r\n@toobaz : Ah...that I think we can do.  Nice!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404752647",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404752647",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404752647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc1MjY0Nw==",
    "user": {
      "login": "dahlbaek",
      "id": 30782351,
      "node_id": "MDQ6VXNlcjMwNzgyMzUx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/30782351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dahlbaek",
      "html_url": "https://github.com/dahlbaek",
      "followers_url": "https://api.github.com/users/dahlbaek/followers",
      "following_url": "https://api.github.com/users/dahlbaek/following{/other_user}",
      "gists_url": "https://api.github.com/users/dahlbaek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dahlbaek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dahlbaek/subscriptions",
      "organizations_url": "https://api.github.com/users/dahlbaek/orgs",
      "repos_url": "https://api.github.com/users/dahlbaek/repos",
      "events_url": "https://api.github.com/users/dahlbaek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dahlbaek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T07:37:41Z",
    "updated_at": "2018-07-13T08:08:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "If we're not emitting a catch-all warning, why not go all the way with a custom-made decorator instead? Something which emits a warning if `header` is not passed, or there are more than 2 positional arguments, or if `path` is passed? I'm not very familiar with how the warning and deprecation systems work in the pandas code base, but here's a rough sketch of how it could be implemented:\r\n\r\n```python\r\nfrom functools import wraps\r\ndef deprecation_decoration(func):\r\n    @wraps(func)\r\n    def _func(*args, **kwargs):\r\n        if len(args) > 2:\r\n            print(\"The signature of `Series.to_csv` will be \"\r\n                  \"aligned to that of `DataFrame.to_csv` in the \"\r\n                  \"future. Note that the ordering of positional \"\r\n                  \"arguments is different, so please refer \"\r\n                  \"to the documentation for `DataFrame.to_csv` when \"\r\n                  \"changing your function calls. To ensure \"\r\n                  \"future-proof calls, do not pass more than 1 \"\r\n                  \"positional argument.\")\r\n        if \"path\" in kwargs:\r\n            assert len(args) <= 1, (\"Cannot specify path both as positional \"\r\n                                    \"argument and keyword argument.\")\r\n            assert \"path_or_buf\" not in kwargs, (\"Can only specify path \"\r\n                                                 \"or path_or_buf, not both.\")\r\n            print(\"FutureWarning: path is deprecated, use path_or_buf instead\")\r\n            kwargs[\"path_or_buf\"] = kwargs.pop(\"path\")\r\n        if \"header\" not in kwargs:\r\n            print(\"The signature of `Series.to_csv` will be \"\r\n                  \"aligned to that of `DataFrame.to_csv` in the \"\r\n                  \"future. The default value of header will change. \"\r\n                  \"To keep the current behaviour, use header=False.\")\r\n        return func(*args, **kwargs)\r\n    return _func\r\nclass my_class:\r\n    def __init__(self):\r\n        pass\r\n    @deprecation_decoration\r\n    def my_func(self, path_or_buf=None, index=True, sep=\";\", header=False):\r\n        pass\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404765786",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404765786",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404765786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc2NTc4Ng==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T08:33:05Z",
    "updated_at": "2018-07-13T08:33:05Z",
    "author_association": "MEMBER",
    "body": "@dahlbaek : IMO that's a little too much code for this deprecation.  When deprecating, we want to keep it as simple as possible.  Decorators add a level of indirection that is not necessary."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404772523",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404772523",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404772523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc3MjUyMw==",
    "user": {
      "login": "dahlbaek",
      "id": 30782351,
      "node_id": "MDQ6VXNlcjMwNzgyMzUx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/30782351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dahlbaek",
      "html_url": "https://github.com/dahlbaek",
      "followers_url": "https://api.github.com/users/dahlbaek/followers",
      "following_url": "https://api.github.com/users/dahlbaek/following{/other_user}",
      "gists_url": "https://api.github.com/users/dahlbaek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dahlbaek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dahlbaek/subscriptions",
      "organizations_url": "https://api.github.com/users/dahlbaek/orgs",
      "repos_url": "https://api.github.com/users/dahlbaek/repos",
      "events_url": "https://api.github.com/users/dahlbaek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dahlbaek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T08:59:53Z",
    "updated_at": "2018-07-13T09:05:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "In that case, how about testing for positional arguments beyond `path_or_buf` by changing the signature like this\r\n\r\n```python\r\ndef to_csv(self, path_or_buf=None, *args, index=True, sep=\",\", na_rep='',\r\n    float_format=None, header=None, index_label=None,\r\n    mode='w', encoding=None, compression=None, date_format=None,\r\n    decimal='.', **kwargs):\r\n```\r\n\r\nand testing for positional arguments beyond `path_or_buf`\r\n\r\n```python\r\nif args:\r\n    warnings.warn(\"The signature of `Series.to_csv` will be \"\r\n                  \"aligned to that of `DataFrame.to_csv` in the \"\r\n                  \"future. Note that some of the default arguments \"\r\n                  \"and argument names are different, so please refer \"\r\n                  \"to the documentation for `DataFrame.to_csv` when \"\r\n                  \"changing your function calls.\",\r\n                  FutureWarning, stacklevel=2)\r\n    raise Exception(\"Pass at most 1 positional argument. Further arguments should be passed as keyword arguments.\")\r\n```\r\n\r\nI would rather have my code crash now, with an error message, than have it silently change its behaviour in the future."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404773143",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404773143",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404773143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc3MzE0Mw==",
    "user": {
      "login": "dahlbaek",
      "id": 30782351,
      "node_id": "MDQ6VXNlcjMwNzgyMzUx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/30782351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dahlbaek",
      "html_url": "https://github.com/dahlbaek",
      "followers_url": "https://api.github.com/users/dahlbaek/followers",
      "following_url": "https://api.github.com/users/dahlbaek/following{/other_user}",
      "gists_url": "https://api.github.com/users/dahlbaek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dahlbaek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dahlbaek/subscriptions",
      "organizations_url": "https://api.github.com/users/dahlbaek/orgs",
      "repos_url": "https://api.github.com/users/dahlbaek/repos",
      "events_url": "https://api.github.com/users/dahlbaek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dahlbaek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T09:02:02Z",
    "updated_at": "2018-07-13T09:44:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "> IMO that's a little too much code for this deprecation.\r\n\r\nTo be fair, I think it is less code, because the signature is not repeated, and most of it is just messages for the user. Note also that it includes an extra test: It tests if there are enough positional arguments that the behaviour will change due to reordering of the arguments when the signatures are aligned.\r\n\r\nFair point concerning the extra level of indirection though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404775060",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404775060",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404775060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc3NTA2MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T09:09:40Z",
    "updated_at": "2018-07-13T09:10:20Z",
    "author_association": "MEMBER",
    "body": "> In that case, how about testing for positional arguments beyond path_or_buf by changing the signature like this\r\n\r\nDefinitely don't want to raise an `Exception` for a deprecation.  Also, throwing `*args` in the middle of a signature is generally more confusing to the end user IMO.\r\n\r\n> I would rather have my code crash now, with an error message, than have it silently change its behaviour in the future.\r\n\r\nIt isn't silently changing though.  In fact ATM, we're warning on the things (`path_or_buf` instead of `path` and the default argument for `header`) that would break backwards compatibility.  If you aren't triggering the warning, then your code will be forwards-compatible."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404778627",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404778627",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404778627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc3ODYyNw==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T09:24:25Z",
    "updated_at": "2018-07-13T09:24:25Z",
    "author_association": "MEMBER",
    "body": "> raise Exception(\"Pass at most 1 positional argument. Further arguments should be passed as keyword arguments.\")\r\n\r\nAgain: we don't want to forbid behaviors which are legitimate now _and_ in the future."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404779290",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404779290",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404779290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc3OTI5MA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T09:26:51Z",
    "updated_at": "2018-07-13T09:26:51Z",
    "author_association": "MEMBER",
    "body": "> Decorators add a level of indirection that is not necessary.\r\n\r\nI do think that decorator proposal is overly complicated (and again: if we want to warn for the changing order for positional arguments, we can just check the type of the second positional argument), but a self-contained deprecation decorator has the huge bonus of being very simple to remove (when the deprecation period is over)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404779517",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404779517",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404779517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc3OTUxNw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T09:27:49Z",
    "updated_at": "2018-07-13T09:27:49Z",
    "author_association": "MEMBER",
    "body": "> but a self-contained deprecation decorator has the huge bonus of being very simple to remove (when the deprecation period is over).\r\n\r\n@toobaz : That's moot here though.  When the deprecation is over, we're deleting the entire function regardless and allowing `Series` to inherit from `NDFrame`. 🙂"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404781164",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404781164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404781164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc4MTE2NA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T09:34:51Z",
    "updated_at": "2018-07-13T09:34:51Z",
    "author_association": "MEMBER",
    "body": "OK, trying to recap:\r\n- [x]  decorator: no\r\n- [x]  warning for ``header=``: yes (defaults to ``None``)\r\n- [x]  warning for ``path=``: yes, only [if passed as keyword argument, by checking](https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404687302) ``**kwargs``\r\n- [ ] ordering of arguments: I suggest to move to the ``DataFrame.to_csv`` one, other preferences?\r\n- [ ] warning on old arguments order: I suggest (weak preference) to check the dtype of the second positional argument, other preferences?\r\n- [ ] raising on old arguments order: I would prefer not, but it's acceptable as long as we do check the dtype of the second positional argument (and do not just raise on positional arguments)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404783779",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404783779",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404783779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc4Mzc3OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T09:45:28Z",
    "updated_at": "2018-07-13T09:47:04Z",
    "author_association": "MEMBER",
    "body": "@toobaz : Argument ordering checking is going to be very messy because there are going to be a good number of parameters to check.\r\n\r\nAlso, some of them are not particularly easy to distinguish.  Notice how the position of `sep` in `Series.to_csv` corresponds to the position of `na_rep` in `DataFrame.to_csv`.  Both are strings.\r\n\r\nThus, for the reasons above (and partially because of the work itself involved not going to lie 🙂 ), my preference is to leave the signature alone and avoid the mess of argument order / type validation."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404785237",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404785237",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404785237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc4NTIzNw==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T09:51:11Z",
    "updated_at": "2018-07-13T09:51:11Z",
    "author_association": "MEMBER",
    "body": "> Argument ordering checking is going to be very messy because there are going to be a good number of parameters to check.\r\n\r\nAs I said above: I would only check the second. You can't pass the third without passing the second ;-)\r\n\r\n_Reordering_ them is more messy."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404787895",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21868#issuecomment-404787895",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21868",
    "id": 404787895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc4Nzg5NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T10:01:52Z",
    "updated_at": "2018-07-13T10:01:52Z",
    "author_association": "MEMBER",
    "body": "> As I said above: I would only check the second.\r\n\r\n@toobaz : Ah, oops, I overlooked that detail when reading.  Hmm...I'm not a big of that one just because a simple command like `Series.to_csv(path)` will issue a warning (unnecessarily)."
  }
]
