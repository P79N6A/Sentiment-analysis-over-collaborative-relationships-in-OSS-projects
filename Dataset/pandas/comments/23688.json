[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438564475",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23688#issuecomment-438564475",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23688",
    "id": 438564475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODU2NDQ3NQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T07:27:37Z",
    "updated_at": "2018-11-14T07:27:37Z",
    "author_association": "NONE",
    "body": "Hello @jschendel! Thanks for submitting the PR.\n\n - There are no PEP8 issues in the file [`pandas/tests/frame/test_rank.py`](https://github.com/jschendel/pandas/blob/a6abe28e5afd2bb7f9658447b939701a6bd5af7a/pandas/tests/frame/test_rank.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/series/test_rank.py`](https://github.com/jschendel/pandas/blob/a6abe28e5afd2bb7f9658447b939701a6bd5af7a/pandas/tests/series/test_rank.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/test_algos.py`](https://github.com/jschendel/pandas/blob/a6abe28e5afd2bb7f9658447b939701a6bd5af7a/pandas/tests/test_algos.py) !\n\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438566943",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23688#issuecomment-438566943",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23688",
    "id": 438566943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODU2Njk0Mw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T07:39:33Z",
    "updated_at": "2018-11-14T07:39:33Z",
    "author_association": "MEMBER",
    "body": "FWIW good to have this typing consistent, though I'm surprised it's required given the Cython docs say that a float gets mapped to a double:\r\n\r\nhttp://docs.cython.org/en/latest/src/tutorial/caveats.html\r\n\r\n@jbrockmendel any insights? Does that seem like a bug in Cython?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438572479",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23688#issuecomment-438572479",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23688",
    "id": 438572479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODU3MjQ3OQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-11-14T08:03:53Z",
    "updated_at": "2018-11-14T08:22:51Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/23688?src=pr&el=h1) Report\n> Merging [#23688](https://codecov.io/gh/pandas-dev/pandas/pull/23688?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/a197837c4067469478b13e491a21b58cb78ed165?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/23688/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/23688?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master   #23688   +/-   ##\n=======================================\n  Coverage   92.24%   92.24%           \n=======================================\n  Files         161      161           \n  Lines       51318    51318           \n=======================================\n  Hits        47339    47339           \n  Misses       3979     3979\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.63% <ø> (ø)` | :arrow_up: |\n| #single | `42.31% <ø> (ø)` | :arrow_up: |\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/23688?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/23688?src=pr&el=footer). Last update [a197837...a6abe28](https://codecov.io/gh/pandas-dev/pandas/pull/23688?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438679696",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23688#issuecomment-438679696",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23688",
    "id": 438679696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODY3OTY5Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T14:26:27Z",
    "updated_at": "2018-11-14T14:26:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438686549",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23688#issuecomment-438686549",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23688",
    "id": 438686549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODY4NjU0OQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T14:46:42Z",
    "updated_at": "2018-11-14T14:46:42Z",
    "author_association": "MEMBER",
    "body": "> though I'm surprised it's required given the Cython docs say that a float gets mapped to a double\r\n\r\n@WillAyd no idea; we recently changed all usages of \"double\" and \"double_t\" to \"float64_t\" largely so I didn't have to keep double-checking that they mean the same thing.  Maybe @scoder can offer some insight?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439359326",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23688#issuecomment-439359326",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23688",
    "id": 439359326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTM1OTMyNg==",
    "user": {
      "login": "scoder",
      "id": 491659,
      "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scoder",
      "html_url": "https://github.com/scoder",
      "followers_url": "https://api.github.com/users/scoder/followers",
      "following_url": "https://api.github.com/users/scoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
      "organizations_url": "https://api.github.com/users/scoder/orgs",
      "repos_url": "https://api.github.com/users/scoder/repos",
      "events_url": "https://api.github.com/users/scoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T11:01:28Z",
    "updated_at": "2018-11-16T11:01:28Z",
    "author_association": "NONE",
    "body": "> though I'm surprised it's required given the Cython docs say that a float gets mapped to a double\r\n\r\nNote how that page says \"Python's float type\", not \"C's float type\". Whenever you say \"cdef\" in Cython, what follows is a C declaration. We specifically document that Python types like \"int\" and \"float\" are not (directly) usable in type declarations because they are shadowed by the more useful C types with the same name. There is no advantage at all in declaring a variable with those Python types, but there is good value in doing that with the C types.\r\n\r\nIn short, if you want a specific C type, name it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439369546",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23688#issuecomment-439369546",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23688",
    "id": 439369546,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTM2OTU0Ng==",
    "user": {
      "login": "scoder",
      "id": 491659,
      "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scoder",
      "html_url": "https://github.com/scoder",
      "followers_url": "https://api.github.com/users/scoder/followers",
      "following_url": "https://api.github.com/users/scoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
      "organizations_url": "https://api.github.com/users/scoder/orgs",
      "repos_url": "https://api.github.com/users/scoder/repos",
      "events_url": "https://api.github.com/users/scoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T11:45:45Z",
    "updated_at": "2018-11-16T11:46:36Z",
    "author_association": "NONE",
    "body": "> we recently changed all usages of \"double\" and \"double_t\" to \"float64_t\" largely so I didn't have to keep double-checking that they mean the same thing\r\n\r\nIn theory, they do not. The C standard does not guarantee specific behaviour for the double type, only that the precision is at least twice as high as for the single precision \"float\" type, i.e. it gives you minimum precision guarantees.\r\n\r\nHowever, as long as your code is compiled in an IEEE-754 floating point environment, which applies to pretty much all relevant system types these days, the behaviour will be exactly that of a 64-bit IEEE-754 double precision binary floating point number.\r\n\r\nNow, in practice the `float64_t` type is an alias for `double` for exactly these reasons, which means that while it might look more exact in code, it can also suggest a false safety. For example, enabling `-ffast-math` in gcc will allow it to diverge from the IEEE-754 standard for optimisation purposes, and `float64_t` will probably not save you from that. But at least it could, in the sense that `float64_t`, not being a standard C type, might simply be undefined (and your code would then fail to compile) if strict 64-bit IEEE-754 semantics are not available. (Although, again strictly speaking, `float64_t` does not enforce IEEE-754 compliance, so a hypothetical non-IEEE-754 64-bit floating point type could still qualify. ¯\\_(ツ)_/¯ )\r\n\r\nAnyway, explicit is better than implicit. If you want exact 64-bit float semantics, saying so in your code is probably a good idea. If you can live with C double semantics, and that is what CPython does internally, for example, saying so is probably also a good idea."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439440496",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23688#issuecomment-439440496",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23688",
    "id": 439440496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQ0MDQ5Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T16:04:14Z",
    "updated_at": "2018-11-16T16:04:14Z",
    "author_association": "MEMBER",
    "body": "@scoder thanks for clarifying.  Have I mentioned recently how nice it is to not have to worry about these things in python and 90+% of the time in cython?\r\n\r\n@chris-b1 @jreback this is above my pay grade.  Is there any chance that we need to revert parts of #23583 to use `double`/`double_t` instead of `float64_t`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439446180",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23688#issuecomment-439446180",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23688",
    "id": 439446180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQ0NjE4MA==",
    "user": {
      "login": "scoder",
      "id": 491659,
      "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scoder",
      "html_url": "https://github.com/scoder",
      "followers_url": "https://api.github.com/users/scoder/followers",
      "following_url": "https://api.github.com/users/scoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
      "organizations_url": "https://api.github.com/users/scoder/orgs",
      "repos_url": "https://api.github.com/users/scoder/repos",
      "events_url": "https://api.github.com/users/scoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T16:21:58Z",
    "updated_at": "2018-11-16T16:21:58Z",
    "author_association": "NONE",
    "body": "I might not have enough insight into the details here, but I don't think reverting is necessary. It's a bit more verbose that way, but it probably also reflects what your code does. Specifically, if you are programming against NumPy, then NumPy's data type API is more relevant than CPython's internals or C's double type here, so matching `np.float64` in Python with `float64_t` in C/Cython seems right."
  }
]
