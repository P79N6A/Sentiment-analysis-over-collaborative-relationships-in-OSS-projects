[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404786776",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21890#issuecomment-404786776",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21890",
    "id": 404786776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc4Njc3Ng==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T09:57:26Z",
    "updated_at": "2018-07-13T09:57:26Z",
    "author_association": "MEMBER",
    "body": "In general, the use case for including `NaN` in an aggregation like this isn't particularly substantial IMO.  That's why I find `dropna=True` to be helpful.  Others may disagree: this is just my opinion.\r\n\r\n> I do feel that dropping NaN value is done in a implicit way, that this implicit way is harmful.\r\n\r\nI'm not sure I follow you here.  What do you mean by an \"implicit way\" ?\r\n\r\ncc @jreback"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404791222",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21890#issuecomment-404791222",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21890",
    "id": 404791222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc5MTIyMg==",
    "user": {
      "login": "adrienpacifico",
      "id": 6614121,
      "node_id": "MDQ6VXNlcjY2MTQxMjE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6614121?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adrienpacifico",
      "html_url": "https://github.com/adrienpacifico",
      "followers_url": "https://api.github.com/users/adrienpacifico/followers",
      "following_url": "https://api.github.com/users/adrienpacifico/following{/other_user}",
      "gists_url": "https://api.github.com/users/adrienpacifico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adrienpacifico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adrienpacifico/subscriptions",
      "organizations_url": "https://api.github.com/users/adrienpacifico/orgs",
      "repos_url": "https://api.github.com/users/adrienpacifico/repos",
      "events_url": "https://api.github.com/users/adrienpacifico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adrienpacifico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T10:16:26Z",
    "updated_at": "2018-07-13T10:16:26Z",
    "author_association": "NONE",
    "body": "@gfyoung thank you for your answer.\r\n\r\nBy implicit I mean: \r\n- I consider that a NaN value in an array is a value. \r\n- That value_counts() is asking for counting the number occurrences of each value. \r\n- Thus since NaNs are value they should be included in the value_counts() output. The function is implicitly (without clearly stating it) dropping NaNs.\r\n - Moreover it is opposed to my expectation in terms of behaviour).\r\n\r\n\r\nWhat's your use case of value_counts() ? Doesn't the benefit of having information about NaN values which is very informative about the structure of your data and leads to potential error findings in a data munging use case outweighs the cost of having an additional NaN line in the output ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404863872",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21890#issuecomment-404863872",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21890",
    "id": 404863872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDg2Mzg3Mg==",
    "user": {
      "login": "nmusolino",
      "id": 3150861,
      "node_id": "MDQ6VXNlcjMxNTA4NjE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3150861?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nmusolino",
      "html_url": "https://github.com/nmusolino",
      "followers_url": "https://api.github.com/users/nmusolino/followers",
      "following_url": "https://api.github.com/users/nmusolino/following{/other_user}",
      "gists_url": "https://api.github.com/users/nmusolino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nmusolino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nmusolino/subscriptions",
      "organizations_url": "https://api.github.com/users/nmusolino/orgs",
      "repos_url": "https://api.github.com/users/nmusolino/repos",
      "events_url": "https://api.github.com/users/nmusolino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nmusolino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T15:15:43Z",
    "updated_at": "2018-07-13T15:19:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "The default behavior, with `dropna=True`, loses information.\r\n```\r\nIn [10]: pandas.Series([1., 2.]).value_counts()\r\nOut[10]:\r\n2.0    1\r\n1.0    1\r\ndtype: int64\r\n\r\nIn [11]: pandas.Series([1, 2] + [numpy.nan] * 98).value_counts()\r\nOut[11]:\r\n2.0    1\r\n1.0    1\r\ndtype: int64\r\n```\r\n\r\nAs stated by @jreback in [a comment in the extended discussion around #9422](https://github.com/pandas-dev/pandas/issues/9422#issuecomment-169508202):\r\n\r\n> But in pandas [ignoring NaN values] is completely misleading and lossy, because nans by definition propogate (unless you specifically dont' propogate them). \r\n\r\nI think that is a good principle, and pandas does not follow it in this case, i.e. `value_counts()`.  In fact, I think it doesn't follow it when it comes to aggregation functions (which typically skip/drop null values) in general.\r\n\r\nI would prefer to see the default be `dropna=True`.  Certainly when working interactively, or using the `value_counts()` result directly for reporting (e.g. printing in a report), it's *very* informative to have a null count.\r\n\r\nI suspect that a practical reason for the current behavior is that pandas does not handle null values in indexes very well, in my experience.\r\n\r\nFinally, what should the following return?  (This question seems equivalent to the sum-of-all-NaN-series   debate in #9422.)\r\n```\r\nIn [5]: pandas.Series([numpy.nan] * 100).value_counts()\r\n```\r\n\r\nThe result in my environment (pandas 0.19.1, bottleneck 1.2.0) is:\r\n```\r\nOut[5]: Series([], dtype: int64)\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405123902",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21890#issuecomment-405123902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21890",
    "id": 405123902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTEyMzkwMg==",
    "user": {
      "login": "adrienpacifico",
      "id": 6614121,
      "node_id": "MDQ6VXNlcjY2MTQxMjE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6614121?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adrienpacifico",
      "html_url": "https://github.com/adrienpacifico",
      "followers_url": "https://api.github.com/users/adrienpacifico/followers",
      "following_url": "https://api.github.com/users/adrienpacifico/following{/other_user}",
      "gists_url": "https://api.github.com/users/adrienpacifico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adrienpacifico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adrienpacifico/subscriptions",
      "organizations_url": "https://api.github.com/users/adrienpacifico/orgs",
      "repos_url": "https://api.github.com/users/adrienpacifico/repos",
      "events_url": "https://api.github.com/users/adrienpacifico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adrienpacifico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-15T22:42:32Z",
    "updated_at": "2018-07-15T22:42:32Z",
    "author_association": "NONE",
    "body": "@nmusolino , I'm a bit troubled, what do you really mean ? \r\n\r\nYou advocate for dropping NaNs as default behavior on one hand, but your other comments seems to lean on the `dropna = False` default side. \r\n\r\nI think that `pandas.Series([numpy.nan] * 100).value_counts()` should definitely provide the information about NaNs. \r\n\r\nI'm not sure to fully get the arguments that are in favour of dropping NaNs..."
  }
]
