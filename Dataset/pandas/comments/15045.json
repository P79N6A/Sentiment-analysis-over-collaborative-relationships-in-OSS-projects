[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/270240485",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15045#issuecomment-270240485",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15045",
    "id": 270240485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDI0MDQ4NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-03T22:13:52Z",
    "updated_at": "2017-01-03T22:13:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think your use-case sounds reasonable. API-wise, I guess we would add a `sparse=True/False` keyword to `SparseDataFrame.stack`. Would the default be True or False? I would think True.\r\n\r\nWould you be interested in submitting a PR?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/270244589",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15045#issuecomment-270244589",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15045",
    "id": 270244589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDI0NDU4OQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-03T22:32:19Z",
    "updated_at": "2017-01-03T22:32:19Z",
    "author_association": "MEMBER",
    "body": "I'll try to work on a PR.\r\n\r\nBut do you think it will be a case when a user calling stack in a SparseDataFrame wants it to be stacked as dense? The sparse keyword argument doesn't seem necessary to me. But if you think there is a reason for that, I'm happy to have it in the implementation."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/270245825",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15045#issuecomment-270245825",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15045",
    "id": 270245825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDI0NTgyNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-03T22:38:14Z",
    "updated_at": "2017-01-03T22:38:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "> But do you think it will be a case when a user calling stack in a SparseDataFrame wants it to be stacked as dense? \r\n\r\nI'm having trouble coming up with a case where `.stack` densifying would be desired. @sinhrks thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/270258345",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15045#issuecomment-270258345",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15045",
    "id": 270258345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDI1ODM0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-03T23:48:26Z",
    "updated_at": "2017-01-03T23:49:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is a dupe of #14493. though those are essentially for unstack, so I guess we can leave this one."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/270258631",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15045#issuecomment-270258631",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15045",
    "id": 270258631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDI1ODYzMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-03T23:50:18Z",
    "updated_at": "2017-01-03T23:50:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "note this is actually non-trivial. We are not simply doing ``.to_sparse()`` on the data, rather constructing it directly (which is way more efficient)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/270276532",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15045#issuecomment-270276532",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15045",
    "id": 270276532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDI3NjUzMg==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-04T01:53:39Z",
    "updated_at": "2017-01-04T01:53:39Z",
    "author_association": "MEMBER",
    "body": "One concern is a case when stacking columns have different ``fill_value`` (a value omitted in sparse repr). In this case, the result is not efficient in sparse repr. Should raise?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321814478",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15045#issuecomment-321814478",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15045",
    "id": 321814478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTgxNDQ3OA==",
    "user": {
      "login": "kernc",
      "id": 684364,
      "node_id": "MDQ6VXNlcjY4NDM2NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/684364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kernc",
      "html_url": "https://github.com/kernc",
      "followers_url": "https://api.github.com/users/kernc/followers",
      "following_url": "https://api.github.com/users/kernc/following{/other_user}",
      "gists_url": "https://api.github.com/users/kernc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kernc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kernc/subscriptions",
      "organizations_url": "https://api.github.com/users/kernc/orgs",
      "repos_url": "https://api.github.com/users/kernc/repos",
      "events_url": "https://api.github.com/users/kernc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kernc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T13:39:49Z",
    "updated_at": "2017-08-11T13:39:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "After https://github.com/pandas-dev/pandas/pull/16616, a sparse SparseSeries is returned, but the frame is still densified interim: https://github.com/pandas-dev/pandas/blob/793020293ee1e5fa023f45c12943a4ac51cc23d0/pandas/core/reshape/reshape.py#L548"
  }
]
