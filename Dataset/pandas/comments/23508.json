[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435913329",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23508#issuecomment-435913329",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23508",
    "id": 435913329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTkxMzMyOQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-05T15:20:49Z",
    "updated_at": "2018-11-05T15:20:49Z",
    "author_association": "MEMBER",
    "body": "For the time being, I would prefer that we disable `F821` for docs checking.  Regardless of how we go about it, it seems from your description that we would have to do some substantive retooling / rewriting to get the docs to play nicely with `flake8_rst` on this rule.\r\n\r\nPerhaps another to go about it is to create a list of \"expected errors\" (ones that we know we can safely ignore) and compare it against what `flake8_rst` outputs for that rule on a build.  Any `diff` is cause to alert the end developer of a mistake."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440263370",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23508#issuecomment-440263370",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23508",
    "id": 440263370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDI2MzM3MA==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-20T12:54:27Z",
    "updated_at": "2018-11-20T12:54:27Z",
    "author_association": "MEMBER",
    "body": "My opinion is that we should be explicit in all the examples, and not make the users guess anything (and that includes the `import pandas`).\r\n\r\nAs this is not shared by the rest of the team, my next favorite option is at some point stop ignoring `F821` in `setup.cfg`, and instead ignore the specific cases where someone considers having a variable defined is worse with `# noqa: F821`.\r\n\r\nBut surely ok to have `F821` fully ignored for now, and forget about this until we fix more easy/obvious problems in the docs.\r\n\r\nSimilar discussion in: #22900"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440728470",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23508#issuecomment-440728470",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23508",
    "id": 440728470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDcyODQ3MA==",
    "user": {
      "login": "FHaase",
      "id": 41163037,
      "node_id": "MDQ6VXNlcjQxMTYzMDM3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41163037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FHaase",
      "html_url": "https://github.com/FHaase",
      "followers_url": "https://api.github.com/users/FHaase/followers",
      "following_url": "https://api.github.com/users/FHaase/following{/other_user}",
      "gists_url": "https://api.github.com/users/FHaase/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FHaase/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FHaase/subscriptions",
      "organizations_url": "https://api.github.com/users/FHaase/orgs",
      "repos_url": "https://api.github.com/users/FHaase/repos",
      "events_url": "https://api.github.com/users/FHaase/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FHaase/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T16:29:54Z",
    "updated_at": "2018-11-21T16:29:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm currently waiting for 2 PRs to be merged into flake8-rst.\r\nAfter they are merged we can upgrade the flake8-version. Then it's possible to check for F821 as all code-blocks are merged into one big one and therefore names defined in previous blocks remain known.\r\n\r\nThis however raises another issue as imports may occur in the middle of a block, although they are at the top of an subblock:\r\n\r\n```python\r\n.. code-block:: python\r\n \r\n   filename = 'something'\r\n\r\n.. code-block:: python\r\n  \r\n   import os  # <--- raises E402\r\n   os.path.exists(filename) # <--- no longer raises F821\r\n```\r\n\r\nI think it might be best to require all pandas and numpy related stuff to be referred to from pd (np).\r\nLike `df = pd.DataFrame(...)` instead of `df = DataFrame(...)`\r\n\r\nI'm unsure what to do with imports from pandas unrelated stuff."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440730403",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23508#issuecomment-440730403",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23508",
    "id": 440730403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDczMDQwMw==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T16:35:22Z",
    "updated_at": "2018-11-21T16:35:22Z",
    "author_association": "MEMBER",
    "body": "I'm happy to ignore `E402` in `flake8-rst`. In code it makes sense, but in the docs I don't expect to see many imports in the middle of the block, and I don't think it's a big issue anyway.\r\n\r\nWhat we've been doing with `pd` and `np` is to \"inject\" the imports at the beginning (this is done for example in `validate_docstrings.py` or in `conftest.py` for the doctests). I think in the `.rst` files we usually have the imports in a `supress` block at the beginning, so we may not even need to do it."
  }
]
