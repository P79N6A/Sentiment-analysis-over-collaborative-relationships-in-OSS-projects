[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71117184",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-71117184",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 71117184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTE3MTg0",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-22T23:01:36Z",
    "updated_at": "2015-01-22T23:03:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "See the (long) discussion at https://github.com/pydata/pandas/pull/4915\n\nBasically, we wanted to keep the API of interpolate simple, but it's probably too clever since you have to be familiar with reindexing first.  I'd actually favor changing the API of interploate to have a new parameter `at`, which is an array you evaluate the interpolation function at (`xnew` in your first example).\n\nAlso it could take some kind of parameter for whether to return just the interpolated values, or all the values.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71323894",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-71323894",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 71323894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzIzODk0",
    "user": {
      "login": "rubennj",
      "id": 10522158,
      "node_id": "MDQ6VXNlcjEwNTIyMTU4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10522158?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rubennj",
      "html_url": "https://github.com/rubennj",
      "followers_url": "https://api.github.com/users/rubennj/followers",
      "following_url": "https://api.github.com/users/rubennj/following{/other_user}",
      "gists_url": "https://api.github.com/users/rubennj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rubennj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rubennj/subscriptions",
      "organizations_url": "https://api.github.com/users/rubennj/orgs",
      "repos_url": "https://api.github.com/users/rubennj/repos",
      "events_url": "https://api.github.com/users/rubennj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rubennj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-24T15:59:12Z",
    "updated_at": "2015-01-24T15:59:12Z",
    "author_association": "NONE",
    "body": "Probably I didn't address well. Actually, I see that to reindex is what I really meant, since  `Pandas` works with objects that already have an index and the real intention of this proposal is to change the index (and consequently to interpolate the corresponding values).\n\nI would say that `.interpolate()` is well defined as already is (to act at missing datapoints), since `.reindex()` is present.\n\nAnyhow, to have a simple syntax (on `.reindex()` or `.interpolate()`) to get this action is very helpful.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72880928",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-72880928",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 72880928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODgwOTI4",
    "user": {
      "login": "rubennj",
      "id": 10522158,
      "node_id": "MDQ6VXNlcjEwNTIyMTU4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10522158?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rubennj",
      "html_url": "https://github.com/rubennj",
      "followers_url": "https://api.github.com/users/rubennj/followers",
      "following_url": "https://api.github.com/users/rubennj/following{/other_user}",
      "gists_url": "https://api.github.com/users/rubennj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rubennj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rubennj/subscriptions",
      "organizations_url": "https://api.github.com/users/rubennj/orgs",
      "repos_url": "https://api.github.com/users/rubennj/repos",
      "events_url": "https://api.github.com/users/rubennj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rubennj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-04T16:00:52Z",
    "updated_at": "2015-02-04T16:00:52Z",
    "author_association": "NONE",
    "body": "Any news? @TomAugspurger \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/74804053",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-74804053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 74804053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODA0MDUz",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-18T03:13:56Z",
    "updated_at": "2015-02-18T03:14:03Z",
    "author_association": "MEMBER",
    "body": "@rubennj I agree, we should have some sort of interpolation method that works like `reindex`. See also my recent PR to add a 'nearest' method to reindex: #9258\n\nIt is a bit awkward from an internals perspective to put this on `reindex`, because `reindex` currently does not do any interpolation, but rather only takes existing (possibly repeated) values. This is sometimes advantageous: you can always reindex, even if the data values are non-numeric.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/74806117",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-74806117",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 74806117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODA2MTE3",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-18T03:38:53Z",
    "updated_at": "2015-02-18T03:38:53Z",
    "author_association": "MEMBER",
    "body": "What about creating two interpolate methods: `.interpolate_na()` and `.interpolate_at()`? The former would be an alias for the current `interpolate` (eventually to be deprecated); the later would work for this new functionality.\n\nI worry that hiding this functionality in `reindex` means it's unlikely to be easily found -- \"interpolate\" is a much more obvious name.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/74966617",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-74966617",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 74966617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTY2NjE3",
    "user": {
      "login": "rubennj",
      "id": 10522158,
      "node_id": "MDQ6VXNlcjEwNTIyMTU4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10522158?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rubennj",
      "html_url": "https://github.com/rubennj",
      "followers_url": "https://api.github.com/users/rubennj/followers",
      "following_url": "https://api.github.com/users/rubennj/following{/other_user}",
      "gists_url": "https://api.github.com/users/rubennj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rubennj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rubennj/subscriptions",
      "organizations_url": "https://api.github.com/users/rubennj/orgs",
      "repos_url": "https://api.github.com/users/rubennj/repos",
      "events_url": "https://api.github.com/users/rubennj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rubennj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-18T22:56:47Z",
    "updated_at": "2015-02-18T22:56:47Z",
    "author_association": "NONE",
    "body": "OK, I see that `.reindex()` shouldn't be touched.\n\nI think that one method, `.interpolate()`, modulated by parameters looks more compact, in the way @TomAugspurger suggested, but I wonder how compatible would be with the current behaviour.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/74970240",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-74970240",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 74970240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTcwMjQw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-18T23:20:55Z",
    "updated_at": "2015-02-18T23:20:55Z",
    "author_association": "MEMBER",
    "body": "We _could_ add a new optional parameter `at` to interpolate, which if not `None` will trigger this alternate interpolate API.\n\nMy hesitation with combining the functionality into one method is that there are at least two steps required to transform from one mode to the other, e.g., `s.interpolate_na()`  <=> `s.dropna().interpolate_at(s.index)` (the equivalent to `s.interpolate_at(target)` is even worse, as shown in the first post). The two methods do pretty fundamentally different things, though both involve interpolation.\n\nAnother option would be move the `interpolate_na` functionality to `fillna`, and reserve `interpolate` for the `interpolate_at` functionality (at least pending deprecation cycles, etc.). That might be a slightly more awkward transition, though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/74971489",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-74971489",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 74971489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTcxNDg5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-18T23:30:13Z",
    "updated_at": "2015-02-18T23:30:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think a nice soln here is to create a cookbook recipe for this pattern and a link from the docs\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/74973706",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-74973706",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 74973706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTczNzA2",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-18T23:46:27Z",
    "updated_at": "2015-02-18T23:47:55Z",
    "author_association": "MEMBER",
    "body": "> I think a nice soln here is to create a cookbook recipe for this pattern and a link from the docs\n\nAt least in my experience and anecdotally from my colleagues, the current API of interpolate (filling missing values) is unexpected and not what we were looking for. For example, it's pretty different from what scipy and numpy's interpolate functions do. So I think some sort of API change to make this more intuitive is warranted :).\n\nInterpolation at new values is also a very common pattern in my experience. The cookbook recipe will need to be even more complex than @rubennj's example if it is to handle propagating NA correctly, e.g., to ensure that the result of `pd.Series([1, 2, np.nan, 4]).interpolate_at([2.5])` is `NaN`, not 2.5. It's also non-trivial to wrap SciPy directly, because SciPy uses a different meaning for `NaN` (see https://github.com/scipy/scipy/issues/4086 and the linked issues). So I believe pretty strongly that incorporating some sort of `interpolate_at` functionality in pandas itself would be a good idea (regardless of what it's called).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75159472",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-75159472",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 75159472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTU5NDcy",
    "user": {
      "login": "rubennj",
      "id": 10522158,
      "node_id": "MDQ6VXNlcjEwNTIyMTU4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10522158?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rubennj",
      "html_url": "https://github.com/rubennj",
      "followers_url": "https://api.github.com/users/rubennj/followers",
      "following_url": "https://api.github.com/users/rubennj/following{/other_user}",
      "gists_url": "https://api.github.com/users/rubennj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rubennj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rubennj/subscriptions",
      "organizations_url": "https://api.github.com/users/rubennj/orgs",
      "repos_url": "https://api.github.com/users/rubennj/repos",
      "events_url": "https://api.github.com/users/rubennj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rubennj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-19T23:15:03Z",
    "updated_at": "2015-02-19T23:15:03Z",
    "author_association": "NONE",
    "body": " I also thought that `.interpolate()` was doing that at first.\nInterpolating with a new index looks fundamental when you want to compare datasets with different indexes but close related, e.g. several spectra or time-series measured wih different instruments.\n\nI don't understand why overloading `interpolate()` is a problem, adding the new parameter `at`. It's not the most elegant solution, but the \"two functions\" solution doesn't look so ideally clear and it will be a pity to lose the `interpolate()` method.\n\nTo transfer the current function to `fill_na()` and to use `interpolate()` for interpolation with a new index is ideal and quite clear to understand in my opinion. However I don't know how bad the transition can be in this case.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131166104",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-131166104",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 131166104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTE2NjEwNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T16:15:49Z",
    "updated_at": "2015-08-14T16:15:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm in favor of adding a new method, since the behavior is different enough from the current `interpolate`:\n\n``` python\ndf.interpolate_at(new_values, method='linear')\n```\n\n@denfromufa are you interested in submitting a pull request for this? Otherwise I'll add it to my list.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131280638",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-131280638",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 131280638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTI4MDYzOA==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-15T02:17:09Z",
    "updated_at": "2015-08-15T02:25:42Z",
    "author_association": "NONE",
    "body": "@TomAugspurger, sure I can submit, please confirm the logic:\n\n```\ndef interpolate_at(df, new_idxs):\n    return df.drop_duplicates().dropna(\n    ).reindex(\n        np.concatenate(\n        (df.index, np.unique(new_idxs)))\n        ).sort().interpolate().ix[new_idxs]\n```\n\nAlso should axis be an input or transposing is easy enough?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131282286",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-131282286",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 131282286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTI4MjI4Ng==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-15T02:58:53Z",
    "updated_at": "2015-08-15T02:58:53Z",
    "author_association": "MEMBER",
    "body": "My thoughts:\n1. The function signature should exactly match interpolate except for the values argument.\n2. The implementation should probably be at a lower level to ensure that it is makes a minimal number of copies.\n\nOn Fri, Aug 14, 2015 at 7:17 PM, denfromufa notifications@github.com\nwrote:\n\n> @TomAugspurger, sure I can submit, please confirm the logic:\n> def interpeasy(df, new_idxs):\n>     return df.drop_duplicates().dropna(\n>     ).reindex(\n>         np.concatenate(\n>         (df.index, np.unique(new_idxs)))\n>         ).sort().interpolate().ix[new_idxs]\n> \n> ## Also should axis be an input or transposing is easy enough?\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/pydata/pandas/issues/9340#issuecomment-131280638\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131685593",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-131685593",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 131685593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTY4NTU5Mw==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-17T05:39:57Z",
    "updated_at": "2015-08-17T05:39:57Z",
    "author_association": "NONE",
    "body": "copying the signature from interpolate() looks feasible.\n\nfor lower level to avoid copies do you mean something like:\n\n```\ndef interpolate_at(df, new_idxs):\n    df=df.drop_duplicates()\n    df.dropna(inplace=True)\n    df.reindex(np.concatenate(\n        (df.index, np.unique(new_idxs))), inplace=True)\n    df.sort(inplace=True)\n    df.interpolate(inplace=True)\n    return df.ix[new_idxs]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131686950",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-131686950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 131686950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTY4Njk1MA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-17T05:51:07Z",
    "updated_at": "2015-08-17T05:51:07Z",
    "author_association": "MEMBER",
    "body": "My thought was that it's probably worth looking at the implementation of df.interpolate (which calls scipy.interpolate) and using that logic at a lower level.\n\nOn Sun, Aug 16, 2015 at 10:40 PM, denfromufa notifications@github.com\nwrote:\n\n> copying the signature from interpolate() looks feasible.\n> for lower level to avoid copies do you mean something like:\n> \n> ```\n> def interpolate_at(df, new_idxs):\n>     df=df.drop_duplicates()\n>     df.dropna(inplace=True)\n>     df.reindex(np.concatenate(\n>         (df.index, np.unique(new_idxs))), inplace=True)\n>     df.sort(inplace=True)\n>     df.interpolate(inplace=True)\n>     return df.ix[new_idxs]\n> ```\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/pydata/pandas/issues/9340#issuecomment-131685593\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131871523",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-131871523",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 131871523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTg3MTUyMw==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-17T15:54:12Z",
    "updated_at": "2015-08-17T15:54:12Z",
    "author_association": "NONE",
    "body": "Keeping interpolate_at() at such low level (scipy) would force me to\nduplicate all the other code related to fill_na and filtering the options\nto preserve the signature of interpolate().\n\nPlease correct me if I do not understand something?\n\nThe only reason why I would go that low level if we want to implement\nscattered grid interpolation on multiindex :)\n\nOn Mon, Aug 17, 2015, 12:51 AM Stephan Hoyer notifications@github.com\nwrote:\n\n> My thought was that it's probably worth looking at the implementation of\n> df.interpolate (which calls scipy.interpolate) and using that logic at a\n> lower level.\n> \n> On Sun, Aug 16, 2015 at 10:40 PM, denfromufa notifications@github.com\n> wrote:\n> \n> > copying the signature from interpolate() looks feasible.\n> > for lower level to avoid copies do you mean something like:\n> > \n> > ```\n> > def interpolate_at(df, new_idxs):\n> > df=df.drop_duplicates()\n> > df.dropna(inplace=True)\n> > df.reindex(np.concatenate(\n> > (df.index, np.unique(new_idxs))), inplace=True)\n> > df.sort(inplace=True)\n> > df.interpolate(inplace=True)\n> > return df.ix[new_idxs]\n> > ```\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/pydata/pandas/issues/9340#issuecomment-131685593\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/issues/9340#issuecomment-131686950.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131884285",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-131884285",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 131884285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTg4NDI4NQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-17T16:38:33Z",
    "updated_at": "2015-08-17T16:38:33Z",
    "author_association": "MEMBER",
    "body": "OK, fair enough -- just thought it would be worth taking a look. I agree that we don't want to duplicate that logic, but it may be possible to refactor it pretty straightforwardly to make it work for both cases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132249560",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-132249560",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 132249560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjI0OTU2MA==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T15:26:05Z",
    "updated_at": "2015-08-18T15:26:05Z",
    "author_association": "NONE",
    "body": "two incompatible options:\n\nlimit : int, default None.\nMaximum number of consecutive NaNs to fill.\ninplace : bool, default False\nUpdate the NDFrame in place if possible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132286451",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-132286451",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 132286451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjI4NjQ1MQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T17:22:33Z",
    "updated_at": "2015-08-18T17:22:33Z",
    "author_association": "MEMBER",
    "body": "@denfromufa agreed, you can skip those.\n\nAs far as overall API goes, I would still advocate for renaming the existing `interpolate` to `interpolate_na`, just to make it clear what these interpolation methods do and that they are on equal footing.\n\n`fillna` serves a distinct purpose -- it does reindexing style assignment to the locations with NAs.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132362236",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-132362236",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 132362236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjM2MjIzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T21:38:33Z",
    "updated_at": "2015-08-18T21:38:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "for consistency let's call this `interpolatena` or `interpna` (the existing one). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132416513",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-132416513",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 132416513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjQxNjUxMw==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-19T02:07:41Z",
    "updated_at": "2015-08-19T02:07:41Z",
    "author_association": "NONE",
    "body": "IMO, interpolate_na and interpolate_at are better choices, like suggested\noriginally, although not consistent with dropna & fillna.\n\nOn Tue, Aug 18, 2015, 4:38 PM Jeff Reback notifications@github.com wrote:\n\n> for consistency let's call this interpolatena or interpna (the existing\n> one).\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/issues/9340#issuecomment-132362236.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132444686",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-132444686",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 132444686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjQ0NDY4Ng==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-19T04:51:31Z",
    "updated_at": "2015-08-19T04:51:52Z",
    "author_association": "MEMBER",
    "body": "I don't like `interpolatena` because the words blend together without a separating character (especially with a vowel followed by a consonant). IMO, it's clearer with the extra `_` character (which also makes it PEP8 compliant).\n\n`interpna` matches an R function of the same name (and function) so there is some precedent there. But it's not immediately obvious like spelling the word out fully. I recall discussing this sort of thing on my `tolerance` pull request.\n\n@denfromufa one more thought on implementation. I'm pretty sure that `interpolate_at` is a closer fit to the signature of the scipy functions than `interpolate_na`. This suggests that it might actually be a better idea (more efficient) to refactor `interpolate_na` to call `interpolate_at` rather than the other way around, e.g.,\n\n``` python\ndef interpolate_na(series, inplace=False):\n    na_locs = series.isnull()\n    target = series.index[na_locs].values\n    new_values = series.values[~na_locs].interpolate_at(target)\n    if not inplace:\n        series = series.copy()\n    series.iloc[na_locs] = new_values\n    return series\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/136152958",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-136152958",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 136152958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjE1Mjk1OA==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-30T15:15:37Z",
    "updated_at": "2015-08-30T15:15:37Z",
    "author_association": "NONE",
    "body": "I'm looking at this code now to add interpolate_at() and have a hard time with this code:\n\nhttps://github.com/pydata/pandas/blob/ba0704f336c733f89ac8fa23c8700bd22ae620d4/pandas/core/common.py#L1632\n\n```\n            firstIndex = valid.argmax()\n            valid = valid[firstIndex:]\n            invalid = invalid[firstIndex:]\n            result = yvalues.copy()\n            if valid.all():\n                return yvalues\n```\n\ncan anyone explain it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/136214767",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-136214767",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 136214767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjIxNDc2Nw==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-30T23:10:40Z",
    "updated_at": "2015-08-30T23:10:40Z",
    "author_association": "NONE",
    "body": "@shoyer @TomAugspurger ok, firstIndex probably means first index in Series before reaching non-null value. All values below this (assuming Series is sorted) cannot be interpolated. Then why similarly lastIndex is not defined?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/136217821",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-136217821",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 136217821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjIxNzgyMQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-30T23:49:17Z",
    "updated_at": "2015-08-30T23:49:17Z",
    "author_association": "MEMBER",
    "body": "@denfromufa It looks like the lack of this behavior at the end is a bug: #8000\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/136219472",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-136219472",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 136219472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjIxOTQ3Mg==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-31T00:02:05Z",
    "updated_at": "2015-08-31T00:02:05Z",
    "author_association": "NONE",
    "body": "ok, I started making changes in https://github.com/denfromufa/pandas, I have some TODO items in the code\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/151939901",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-151939901",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 151939901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTkzOTkwMQ==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-28T18:18:32Z",
    "updated_at": "2015-10-28T18:18:32Z",
    "author_association": "NONE",
    "body": "Today I found one corner-case, hopefully this can be fixed at lower-level.\n\n```\ndef interpolate_at(df, new_idxs):\n    df=df.drop_duplicates()\n    df.dropna(inplace=True)\n    df.reindex(np.concatenate(\n        (df.index, np.unique(new_idxs))), inplace=True)\n    df.sort(inplace=True)\n    df.interpolate(inplace=True)\n    return df.ix[new_idxs]\n```\n\nIf after `reindex()` operation some indices are duplicates, then `ix[new_idxs]` generates some weird things with these duplicates [this part needs explanation]. Hence `drop_duplicates()` needs to be called after `reindex()`.\n\n```\ndef interpolate_at(df, new_idxs):\n    df=df.drop_duplicates()\n    df.dropna(inplace=True)\n    df.reindex(np.concatenate(\n        (df.index, np.unique(new_idxs))), inplace=True)\n    df.drop_duplicates(inplace=True)\n    df.sort(inplace=True)\n    df.interpolate(inplace=True)\n    return df.ix[new_idxs]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/152187536",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-152187536",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 152187536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjE4NzUzNg==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-29T13:54:49Z",
    "updated_at": "2016-01-04T23:02:05Z",
    "author_association": "NONE",
    "body": "It is even deeper :(\n\nDuplicates need to be removed even before `.reindex()`! This is because the new_idxs and df.index may have some duplicate items.\n\nHopefully others do not step on the same rake while I'm finishing my interpolation pull request.\n\n```\ndef interpolate_at(df, new_idxs):\n    df=df.drop_duplicates()\n    df.dropna(inplace=True)\n    df.reindex(\n        np.concatenate(\n        np.unique(\n        (df.index, np.unique(new_idxs)))), inplace=True)\n    df.drop_duplicates(inplace=True)\n    df.sort(inplace=True)\n    df.interpolate(inplace=True)\n    return df.ix[new_idxs]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/258998044",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-258998044",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 258998044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk5ODA0NA==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T23:32:50Z",
    "updated_at": "2016-11-07T23:32:50Z",
    "author_association": "NONE",
    "body": "latest version, previous one had bugs and sort() is deprecated:\n\n```\ndef interpolate_at(df, new_idxs):\n    df=df.drop_duplicates()\n    df.dropna(inplace=True)\n    df=df.reindex(\n        np.unique(\n        np.concatenate(\n        (df.index, np.unique(new_idxs)))))\n    df.drop_duplicates(inplace=True)\n    df.sort_index(inplace=True)\n    df.interpolate(inplace=True)\n    return df.ix[new_idxs]\n```\n\nNote that this accepts both Series and DataFrames.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259000181",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9340#issuecomment-259000181",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9340",
    "id": 259000181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTAwMDE4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T23:43:22Z",
    "updated_at": "2016-11-07T23:43:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "generally don't use inplace (it doesn't offer any benefit and makes code much harder to read)\n\nuse Index operations rather than numpy functions \nnumpy ops don't generally handle the full dtype set very well\n"
  }
]
