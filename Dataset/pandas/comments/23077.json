[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430851820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23077#issuecomment-430851820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23077",
    "id": 430851820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDg1MTgyMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-18T02:16:52Z",
    "updated_at": "2018-10-18T02:16:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm working on this now."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/431664443",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23077#issuecomment-431664443",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23077",
    "id": 431664443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTY2NDQ0Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-21T12:23:17Z",
    "updated_at": "2018-10-21T12:23:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have a WIP for `Series[extension_array].unstack` at https://github.com/pandas-dev/pandas/compare/master...TomAugspurger:ea-unstack\r\n\r\nWe can write `unstack` as a composition of\r\n\r\n- `loc` (take)\r\n- `reindex`\r\n- concat\r\n\r\nIt seems to work... but it's quite slow. If you're reshaping to `(n_rows, n_columns)`, you'll end up with `n_columns` locs and reindexes each.\r\n\r\nWe should be able to improve the (maybe common?) case of a \"uniform\" index (like what you get from `from_product`), without too much additional code. That's just a bunch of uniform `take`s with no reindexes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/431806696",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23077#issuecomment-431806696",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23077",
    "id": 431806696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTgwNjY5Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-22T11:20:42Z",
    "updated_at": "2018-10-22T11:20:42Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger is it slower compared to the current implementation for non-consolidatable blocks? Or how does it currently work for them?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/431958453",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23077#issuecomment-431958453",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23077",
    "id": 431958453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTk1ODQ1Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-22T19:52:51Z",
    "updated_at": "2018-10-22T19:52:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "DataFrame.stack() has a regression from 0.23.4\r\n\r\n```\r\nIn [3]: df = pd.DataFrame({\"A\": pd.Categorical(['a', 'b']), \"B\": pd.Categorical(['a', 'b'])})\r\n\r\nIn [4]: df.stack()\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-4-c3a581ae119f> in <module>\r\n----> 1 df.stack()\r\n\r\n~/sandbox/pandas/pandas/core/frame.py in stack(self, level, dropna)\r\n   5753             return stack_multiple(self, level, dropna=dropna)\r\n   5754         else:\r\n-> 5755             return stack(self, level, dropna=dropna)\r\n   5756\r\n   5757     def unstack(self, level=-1, fill_value=None):\r\n\r\n~/sandbox/pandas/pandas/core/reshape/reshape.py in stack(frame, level, dropna)\r\n    471             arr = dtype.construct_array_type()\r\n    472             new_values = arr._concat_same_type([\r\n--> 473                 col for _, col in frame.iteritems()\r\n    474             ])\r\n    475         else:\r\n\r\n~/sandbox/pandas/pandas/core/arrays/categorical.py in _concat_same_type(self, to_concat)\r\n   2286         from pandas.core.dtypes.concat import _concat_categorical\r\n   2287\r\n-> 2288         return _concat_categorical(to_concat)\r\n   2289\r\n   2290     def _formatting_values(self):\r\n\r\n~/sandbox/pandas/pandas/core/dtypes/concat.py in _concat_categorical(to_concat, axis)\r\n    239         # when all categories are identical\r\n    240         first = to_concat[0]\r\n--> 241         if all(first.is_dtype_equal(other) for other in to_concat[1:]):\r\n    242             return union_categoricals(categoricals)\r\n    243\r\n\r\n~/sandbox/pandas/pandas/core/dtypes/concat.py in <genexpr>(.0)\r\n    239         # when all categories are identical\r\n    240         first = to_concat[0]\r\n--> 241         if all(first.is_dtype_equal(other) for other in to_concat[1:]):\r\n    242             return union_categoricals(categoricals)\r\n    243\r\n\r\n~/sandbox/pandas/pandas/core/generic.py in __getattr__(self, name)\r\n   4636             if self._info_axis._can_hold_identifiers_and_holds_name(name):\r\n   4637                 return self[name]\r\n-> 4638             return object.__getattribute__(self, name)\r\n   4639\r\n   4640     def __setattr__(self, name, value):\r\n\r\nAttributeError: 'Series' object has no attribute 'is_dtype_equal'\r\n\r\n```\r\n\r\n\r\npreviously that returned an object-dtype Series. Ideally, it would be a categorical."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/431958923",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23077#issuecomment-431958923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23077",
    "id": 431958923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTk1ODkyMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-22T19:54:03Z",
    "updated_at": "2018-10-22T19:54:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I have a new implementation that lowers the overhead for EAs. Will post the timings in the PR (once I've written them).\r\n\r\nIt'll basically be identical to previously, but\r\n\r\n1. ExtensionArrays are no longer cast to ndarrays (good)\r\n2. An extra `ExtensionArray.take` per column + one extra `concat` (bad)\r\n \r\n"
  }
]
