[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13688259",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2888#issuecomment-13688259",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2888",
    "id": 13688259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjg4MjU5",
    "user": {
      "login": "vervenumen",
      "id": 2986392,
      "node_id": "MDQ6VXNlcjI5ODYzOTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2986392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vervenumen",
      "html_url": "https://github.com/vervenumen",
      "followers_url": "https://api.github.com/users/vervenumen/followers",
      "following_url": "https://api.github.com/users/vervenumen/following{/other_user}",
      "gists_url": "https://api.github.com/users/vervenumen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vervenumen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vervenumen/subscriptions",
      "organizations_url": "https://api.github.com/users/vervenumen/orgs",
      "repos_url": "https://api.github.com/users/vervenumen/repos",
      "events_url": "https://api.github.com/users/vervenumen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vervenumen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-17T16:17:13Z",
    "updated_at": "2013-02-17T16:17:13Z",
    "author_association": "NONE",
    "body": "Hi,\n\nI am new to github as a whole.\nIf there are any issues with the format of my previous post,\nplease inform me so that I would rectify them next time onwards.\n\nThanks,\nYashoteja\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13689888",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2888#issuecomment-13689888",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2888",
    "id": 13689888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjg5ODg4",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-17T17:51:07Z",
    "updated_at": "2013-02-17T17:51:07Z",
    "author_association": "NONE",
    "body": "I believe this is the usual 1/sqrt(N) vs. 1/sqrt(N-1) issue.\nnumpy and pandas apperently use different defaults for the \n`ddof` parameter. pandas default to 1/sqrt(N-1)\n\n``` python\na=pd.Series(np.array(range(10)))\n\nIn [6]: a.std()\nOut[6]: 3.0276503540974917\n\nIn [7]: a.values.std(ddof=1)\nOut[7]: 3.0276503540974917\n\nIn [8]: a.values.std()\nOut[8]: 2.8722813232690143\n\nIn [9]: a.std(ddof=0)\nOut[9]: 2.8722813232690143\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13690443",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2888#issuecomment-13690443",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2888",
    "id": 13690443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjkwNDQz",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-17T18:21:38Z",
    "updated_at": "2013-02-17T18:23:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "hey actually I loaded his dataset, it's apparently an `int64` overflow and/or roundoff issue somewhere, because it doesn't happen when you cast his Series to `float64` (it's a big series with a lot of large `int64` values)...so this is legitimately a bug.\n\n``` python\nIn [5]: S.astype('float64').std()\nOut[5]: 17570.097551905212\n\nIn [6]: S.astype('int64').std()\nOut[6]: 39192.660667875185\n```\n\nstill figuring out exactly where the overflow/roundoff is happening.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13690697",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2888#issuecomment-13690697",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2888",
    "id": 13690697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjkwNjk3",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-17T18:35:55Z",
    "updated_at": "2013-02-17T18:46:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "got it, in \"nanops.py\" with some print statements added:\n\n``` python\n    X = _ensure_numeric(values.sum(axis))\n    XX = _ensure_numeric((values ** 2).sum(axis))\n    print type(X)\n    print X\n    print X ** 2\n```\n\nyields\n\n```\n<type 'numpy.int64'>\n4063418664\n-1935372834766006720\n```\n\nthis would work if `X` were a builtin `int` because they overflow to `long` automatically, but numpy `int64`s don't...\n\ni can do a patch, but I'm not sure if the correct solution is to cast `values` to `float64` first here before doing anything, or to cast `int64` to `int`/`long` after the fact in case it's an `int64`? the two would yield slightly different results, the latter would be faster (since it's casting up a scalar rather than casting up an array), but the latter would be a bit uglier-looking of a hack too (IMHO). also I'm not 100% sure it would cover all cases because I don't know the overflow rules within `ndarray.__pow__` and `ndarray.sum()` for `int64` arrays..\n\nanyone have any thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13690878",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2888#issuecomment-13690878",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2888",
    "id": 13690878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjkwODc4",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-17T18:43:56Z",
    "updated_at": "2013-02-17T18:43:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually...I think the only safe thing to do is to cast everything to `float64` upfront, because you can overflow within `ndarray.__pow__` and `ndarray.sum()` too:\n\n``` python\nIn [6]: np.asarray([4063418664], dtype='int64')\nOut[6]: array([4063418664], dtype=int64)\n\nIn [7]: np.asarray([4063418664], dtype='int64') ** 2\nOut[7]: array([-1935372834766006720], dtype=int64)\n\nIn [8]: np.asarray([2**63-1,1], dtype='int64')\nOut[8]: array([9223372036854775807,                   1], dtype=int64)\n\nIn [9]: np.asarray([2**63-1,1], dtype='int64').sum()\nOut[9]: -9223372036854775808\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13691024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2888#issuecomment-13691024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2888",
    "id": 13691024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjkxMDI0",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-17T18:50:34Z",
    "updated_at": "2013-02-17T18:50:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "(or we can just avoid calling `std()` in nanops.py in case of integers, since they won't have NaNs to being with...)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13691482",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2888#issuecomment-13691482",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2888",
    "id": 13691482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjkxNDgy",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-17T19:15:04Z",
    "updated_at": "2013-02-17T19:15:04Z",
    "author_association": "MEMBER",
    "body": "Upcast to float is fine because stdev should always yield a floating point number. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13694366",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2888#issuecomment-13694366",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2888",
    "id": 13694366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjk0MzY2",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-17T20:27:50Z",
    "updated_at": "2013-02-17T20:28:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "okay, i apparently `kurt` and `skew` were already upcasting so I just added the same code to `var` for consistency\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13697930",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2888#issuecomment-13697930",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2888",
    "id": 13697930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjk3OTMw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-17T22:07:38Z",
    "updated_at": "2013-02-17T22:07:38Z",
    "author_association": "NONE",
    "body": "Thanks, I totally missed his intention with the examples.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13707202",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2888#issuecomment-13707202",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2888",
    "id": 13707202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzA3MjAy",
    "user": {
      "login": "vervenumen",
      "id": 2986392,
      "node_id": "MDQ6VXNlcjI5ODYzOTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2986392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vervenumen",
      "html_url": "https://github.com/vervenumen",
      "followers_url": "https://api.github.com/users/vervenumen/followers",
      "following_url": "https://api.github.com/users/vervenumen/following{/other_user}",
      "gists_url": "https://api.github.com/users/vervenumen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vervenumen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vervenumen/subscriptions",
      "organizations_url": "https://api.github.com/users/vervenumen/orgs",
      "repos_url": "https://api.github.com/users/vervenumen/repos",
      "events_url": "https://api.github.com/users/vervenumen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vervenumen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-18T05:37:32Z",
    "updated_at": "2013-02-18T05:37:32Z",
    "author_association": "NONE",
    "body": "Wow, thanks a lot for such a quick response!\nAnd I am happy to have reported my first bug :)\n\nThank you,\nYashoteja\n"
  }
]
