[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395568437",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21357#issuecomment-395568437",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21357",
    "id": 395568437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU2ODQzNw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T21:18:55Z",
    "updated_at": "2018-06-07T21:18:55Z",
    "author_association": "MEMBER",
    "body": "Can you clarify what you are looking for with a small example?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395588511",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21357#issuecomment-395588511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21357",
    "id": 395588511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU4ODUxMQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T22:42:09Z",
    "updated_at": "2018-06-07T22:42:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd \r\n\r\nHere's a small example - I'm looking for the quantity `reverse`:\r\n```\r\ndf = pd.DataFrame({'A': [0, 1, 1, 2, 0], 'B': ['a', 'b', 'b', 'c', 'a']}, index=[1, 4, 9, 16, 25])\r\ndf\r\n#     A  B\r\n# 1   0  a\r\n# 4   1  b\r\n# 9   1  b\r\n# 16  2  c\r\n# 25  0  a\r\n### deduplicate\r\ndfdd = df.drop_duplicates()\r\ndfdd\r\n#     A  B\r\n# 1   0  a\r\n# 4   1  b\r\n# 16  2  c\r\nreverse = pd.Series([1, 4, 4, 16, 1], index=[1, 4, 9, 16, 25])\r\nreverse\r\n# 1      1\r\n# 4      4\r\n# 9      4\r\n# 16    16\r\n# 25     1\r\n# dtype: int64\r\n### with .loc/reindex, the values match, but not the indices\r\ndfdd.reindex(reverse)\r\n#     A  B\r\n# 1   0  a\r\n# 4   1  b\r\n# 4   1  b\r\n# 16  2  c\r\n# 1   0  a\r\n### full reconstruction -> the goal\r\ndfdd.loc[reverse].set_index(reverse.index).equals(df)\r\n# True\r\n\r\n### turn column B into numbers to avoid numpy issue #641\r\ndf.B = [10, 11, 11, 12, 10]\r\ndfdd_np, rev_np = np.unique(df.values, axis=0, return_inverse=True)\r\ndfdd_np\r\n# array([[ 0, 10],\r\n#        [ 1, 11],\r\n#        [ 2, 12]], dtype=int64)\r\nrev_np\r\n# array([0, 1, 1, 2, 0], dtype=int64)\r\n### these outputs are conceptually correct, but need to be mapped to the original indices...\r\n```\r\n\r\nPS. As an unrelated remark, `dfdd.reindex(labels=reverse, index=reverse.index)` should produce the full reconstruction right away, or *at least* throw an error for having contradictory `labels/index` information (also, surprisingly, although it's the second argument, `index` has precedence)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395589973",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21357#issuecomment-395589973",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21357",
    "id": 395589973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU4OTk3Mw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T22:49:21Z",
    "updated_at": "2018-06-07T22:49:21Z",
    "author_association": "MEMBER",
    "body": "Still a pretty large example so I can't said I've read through every detail of it, but why don't you just reset the index on `dfdd` and merge it back onto `df` if it's `reverse` that you are trying to reconstruct?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395593347",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21357#issuecomment-395593347",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21357",
    "id": 395593347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU5MzM0Nw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T23:06:29Z",
    "updated_at": "2018-06-07T23:06:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, I tried to be thorough with the example (twice)...\r\n\r\nMerging couple million records simultaneously on 6 object columns in the presence of NaNs _might_ be possible to get towards the result, but it's a huge waste of time because the indices are effectively just lying there in the penultimate step of `duplicated` - surely the merge would take order of magnitude more time than the `np.unique(inds, return_inverse=True)`-call I demonstrated in the OP."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395593644",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21357#issuecomment-395593644",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21357",
    "id": 395593644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU5MzY0NA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T23:07:53Z",
    "updated_at": "2018-06-07T23:07:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, it's established functionality in numpy. It's often useful to be able to go back and forth easily between duplicated-deduplicated."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395596316",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21357#issuecomment-395596316",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21357",
    "id": 395596316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU5NjMxNg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T23:22:43Z",
    "updated_at": "2018-06-07T23:22:43Z",
    "author_association": "MEMBER",
    "body": "OK - PRs are always welcome if you have an idea on how to do it. Probably best served in `drop_duplicates` rather than creating a new `unique` method for frames"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395654490",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21357#issuecomment-395654490",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21357",
    "id": 395654490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTY1NDQ5MA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T05:46:55Z",
    "updated_at": "2018-06-08T05:46:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd \r\nThe problem with adding it to `drop_duplicates` is that I'd have to change the output signature depending on whether or not the Boolean is `True/False` -- this is what `numpy` does as well, but I don't know if there's any precedent for that in `pandas`. Also, this would make it difficult w.r.t `inplace=True`.\r\n\r\nPS. Can you replace the \"Needs Info\" tag with something more reflective of the situation? :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/398992721",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21357#issuecomment-398992721",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21357",
    "id": 398992721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODk5MjcyMQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T06:38:28Z",
    "updated_at": "2018-06-21T06:38:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd @jreback @TomAugspurger \r\n\r\nI'm interested in tackling this. **Is there any precedent in pandas for changing the output signature of a function depending on whether a boolean is True/False** (say, from Series to a tuple of Series)?\r\n\r\nThis is how  `numpy.unique` does it, but it feels \"wrong\" to me. Another argument IMO for not putting this into `duplicated` is that an inverse would not make sense for `keep=False`, and it would be surprising from a user-perspective that some kwarg-combinations are mutually incompatible. Finally, since the goal is to return a reverse mapping, the obvious counterpart would be a forward mapping as well (instead of a Series of booleans).\r\n\r\nWith these considerations, I'd suggest a new function along the lines of\r\n```\r\nduplicate_map(self, subset=None, keep={'first'|'last'})\r\n\r\n[...]\r\n\r\nReturns\r\n--------\r\ntuple: (Index [or Series?] mapping from original indices to indices of unique values,\r\n        Series mapping from unique indices to original index)\r\n```\r\n\r\nWith such a function we could then do (abstractly):\r\n```\r\norig2unique, unique2orig = df.duplicate_map(subset=mysubset)\r\nunique = df.reindex(orig2unique)\r\n[processing; e.g. aggregation of values outside mysubset across duplicates]\r\nreduplicated = unique.reindex(unique2orig.values)  # has duplicates in index\r\ndf_processed = reduplicated.set_index(unique2orig.index)  # restored index of original\r\n```\r\n\r\nIn terms of the example above (without the processing step):\r\n```\r\ndf = pd.DataFrame({'A': [0, 1, 1, 2, 0], 'B': ['a', 'b', 'b', 'c', 'a']},\r\n                  index=[1, 4, 9, 16, 25])\r\n#     A  B\r\n# 1   0  a\r\n# 4   1  b\r\n# 9   1  b\r\n# 16  2  c\r\n# 25  0  a\r\n\r\norig2unique, unique2orig = df.duplicate_map()\r\norig2unique\r\n# Int64Index([1, 4, 16], dtype='int64')\r\n\r\nunique2orig\r\n# 1      1\r\n# 4      4\r\n# 9      4\r\n# 16    16\r\n# 25     1\r\n# dtype: int64\r\n\r\nunique = df.reindex(orig2unique)\r\nunique \r\n#     A  B\r\n# 1   0  a\r\n# 4   1  b\r\n# 16  2  c\r\n\r\nreduplicated = unique.reindex(unique2orig.values) # has duplicates in index\r\nreduplicated\r\n#     A  B\r\n# 1   0  a\r\n# 4   1  b\r\n# 4   1  b\r\n# 16  2  c\r\n# 1   0  a\r\n\r\ndf_restored = reduplicated.set_index(unique2orig.index)  # restored index of original\r\ndf_restored\r\n#     A  B\r\n# 1   0  a\r\n# 4   1  b\r\n# 9   1  b\r\n# 16  2  c\r\n# 25  0  a\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399043089",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21357#issuecomment-399043089",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21357",
    "id": 399043089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTA0MzA4OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T09:46:05Z",
    "updated_at": "2018-06-21T09:46:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "-1 on adding any new methods, but would be ok with adding a ``return_inverse`` kwarg (clearly defaulting to False), to ``.duplicated()`` to easily recovering the indexer."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399053011",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21357#issuecomment-399053011",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21357",
    "id": 399053011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTA1MzAxMQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T10:23:13Z",
    "updated_at": "2018-06-21T10:23:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Do I understand you correctly that you would output a tuple if `return_inverse=True`?\r\n\r\nIn other words:\r\n```\r\nisdup = df.duplicated()\r\nisdup, inverse = df.duplicated(return_inverse=True)\r\n```\r\n?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399056775",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21357#issuecomment-399056775",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21357",
    "id": 399056775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTA1Njc3NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T10:38:19Z",
    "updated_at": "2018-06-21T10:38:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes"
  }
]
