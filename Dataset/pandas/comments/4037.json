[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20022959",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20022959",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20022959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDIyOTU5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-26T02:00:39Z",
    "updated_at": "2013-06-26T02:00:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "quick pass I didn't see a doc-string on eval (its prob there...but I didn't delve too deep)\n\nalso a quick writeup for enhancedperf section?\n\njust a couple of examples\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20212882",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20212882",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20212882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjEyODgy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T20:37:40Z",
    "updated_at": "2013-06-28T20:37:40Z",
    "author_association": "MEMBER",
    "body": "@jreback \n\nquestion:\n1. i think using `eval` under the hood for pytables evaluation should replace all of the various incarnations of expressions [here](http://pandas.pydata.org/pandas-docs/stable/io.html#querying-a-table)...is that ok?\n\nresult being that only strings are allowed (which will be converted to `Expr` and passed to an evaluating function).\n\ngoing to take much longer to finish this up to support all of those expression forms, but if it needs to be done that's ok too\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20213523",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20213523",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20213523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjEzNTIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T20:50:26Z",
    "updated_at": "2013-06-28T20:50:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "for a string expression, that is exactly right (its conceptually simpler, because only scalars can be on the rhs in any expression), however also need to allow something like this:\n\n`E('index>',Timestamp('20130101'))`\n\nwhere `E` is replace `Term` and is a top-level that you evaluate\n\nunless you think that you can evaluate:\n\n`index>Timestamp('20130101')` ?\n\nI think that the current `Term` should be a sub-class of `Expr` that just spits out a `numexpr` evaluable string (and does not actually evaluate it)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20214267",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20214267",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20214267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjE0MjY3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T21:03:50Z",
    "updated_at": "2013-06-28T21:03:50Z",
    "author_association": "MEMBER",
    "body": "ok i think i'm starting to see the bigger picture here. `convert_value` and `TermValue` will be superceeded by `eval`,\n\nin this code in `Selection.select`\n\n``` python\nreturn self.table.table.readWhere(self.condition, start=self.start, stop=self.stop)\n```\n\n`self.condition` should be generated by `engine.convert()`\n\nis that right?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20214345",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20214345",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20214345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjE0MzQ1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T21:05:13Z",
    "updated_at": "2013-06-28T21:07:44Z",
    "author_association": "MEMBER",
    "body": "and `queryables` is basically an environment internal to the table that has for example the `index` part of `index > 20130101`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20216276",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20216276",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20216276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjE2Mjc2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T21:45:18Z",
    "updated_at": "2013-06-28T21:45:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "that's about right.\n\nin `Selection` I am just using a list of `Terms` that are anded together\n\n`queryables` is used for validation on the `lhs` of the expressions (its analagous to you looking up a variable in the enclosing/global scope, e.g. `df>1` if `df` is not defined then you raise, same here\n\nand no alignment necessary, just some conversions on `rhs` terms\n\nand `self.condition` is generated by `engine.convert()` correct\n\n`self.condition` is equiv to this:\n\n`pd.eval('index>Timestamp(\"20130101\")',queryables=queryables,engine='pytables')`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20216405",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20216405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20216405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjE2NDA1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T21:47:50Z",
    "updated_at": "2013-06-28T21:47:50Z",
    "author_association": "MEMBER",
    "body": "cool maybe this will be easier than i thought...to the pytables-mobile!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20253777",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20253777",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20253777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjUzNzc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-30T19:29:46Z",
    "updated_at": "2013-06-30T19:29:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "advertising!\n\nhttp://stackoverflow.com/questions/17390886/how-to-speed-up-pandas-multilevel-dataframe-sum/17394064#17394064\n\nmight be a good benchmark.....and maybe add this 'example' to the `EnhancingPerformance` section?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20253859",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20253859",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20253859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjUzODU5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-30T19:34:57Z",
    "updated_at": "2013-06-30T19:35:05Z",
    "author_association": "MEMBER",
    "body": "nice! thanks. i gave u +1\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20487521",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20487521",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20487521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDg3NTIx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-04T17:38:39Z",
    "updated_at": "2013-07-04T17:38:39Z",
    "author_association": "MEMBER",
    "body": "just an update on the `and` `or` `not` deal\n\nessentially:\n\nwhat you want to write if u like python\n\n``` python\npd.eval('not x and y and z or w')\n```\n\nif you want to be terse\n\n``` python\npd.eval('~(x & y & z | w)')\n```\n\nwhat the engine actually sees (you could write this too, if you're practicing typing parens fast w/o looking!)\n\n``` python\npd.eval('~((((x) & (y)) & (z)) | (w))')\n```\n\nand of course u can mix and match if you like partial clarity + terseness\n\nwhat's nice is that the python precedence is preserved, e.g., `not x and y` rewrites to `~((x) & (y))` (`not` binds loosely) whereas `~x and y` rewrites to `'(~(x)) & (y)'` (`~` binds tightly)\n\nfor reference: [operator precedence](http://docs.python.org/2/reference/expressions.html#operator-precedence)\n\nif u want i can give more details, but essentially the `repr` of each op is `'({self.lhs}) {self.op} ({self.rhs})'.format(self=self)` and this happens recursively.\n\nthe ast manip is to \"rewrite\" the `ast.BoolOp` nodes as their respective `Bit*` node (really i'm just saying, interpret this as a bitwise op), but the python `ast` takes care of precedence for u so the precedence semantics remain.\n\nhere was the trickiest part\n\n``` python\ndef visit_BoolOp(self, node):\n    op = self.visit(node.op)\n    def visitor(x, y):\n        try:\n            lhs = self.visit(x)\n        except TypeError:\n            lhs = x\n\n        try:\n            rhs = self.visit(y)\n        except TypeError:\n            rhs = y\n\n        return op(lhs, rhs)\n\n    operands = node.values\n    return reduce(visitor, operands)\n```\n\nkey part is the last two lines which because the python parser treats boolean expressions similar to how lisp does you have to reconstruct the `(and x1 x2 ... xN)` style op into `(and (... (and (and x1 x2) ...) ...) xN)`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20487718",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20487718",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20487718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDg3NzE4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-04T17:44:42Z",
    "updated_at": "2013-07-04T17:44:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would have an engine option, maybe parsing=strict as the default\nif you want to support python booleans then could pass parsing=extended or something like that\nI don't think we want to turn this on by default even though it looks pretty - \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20488116",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20488116",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20488116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDg4MTE2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-04T17:56:36Z",
    "updated_at": "2013-07-04T17:56:36Z",
    "author_association": "MEMBER",
    "body": "ok. there's not really any automatic way to test that though since `and`, `or` and `not` are not part of the `operator` module, i suppose python's `eval` could work though (for testing only)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20488199",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20488199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20488199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDg4MTk5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-04T17:58:51Z",
    "updated_at": "2013-07-04T17:58:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would put it on back burner anyhow (i know u did it)\nbut too much of a chnge right now \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20488297",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20488297",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20488297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDg4Mjk3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-04T18:01:52Z",
    "updated_at": "2013-07-04T18:01:52Z",
    "author_association": "MEMBER",
    "body": "sounds good, not worth too much time.\n\nthe pytables changes are quite daunting. i know those are most important for this to be merged, still sifting through how it works...reading tests and trying to understand what the classes do...which ones are important etc...\n\nplus the issues with dt and period indexes\n\ni think after those two then this might warrant some serious tire kicking\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20490762",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20490762",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20490762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDkwNzYy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-04T19:23:29Z",
    "updated_at": "2013-07-04T19:23:29Z",
    "author_association": "MEMBER",
    "body": "I think i'm going to allow callable parsing in the `'pytables'` engine for now, as it will make the transition to using `eval` and friends under the hood much easier. I'll just subclass the current parser something like `TableExprVisitor` and overload the `visit_Call` method...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20490865",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20490865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20490865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDkwODY1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-04T19:27:02Z",
    "updated_at": "2013-07-04T19:27:45Z",
    "author_association": "MEMBER",
    "body": "i think in 0.14 (not a typo) that `Term` should be removed...deprecate in 0.13 in favor of what I'm calling `TableExpr` which is a subclass of `Expr` designed to work with `HDFStore` et al.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20492347",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20492347",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20492347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDkyMzQ3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-04T20:18:32Z",
    "updated_at": "2013-07-04T20:18:32Z",
    "author_association": "MEMBER",
    "body": "@jreback should arbitrary expressions be allowed with `'pytables'`?\n\nusing `filter` will be easy if only binary ops are allowed, but will be more complicated if arbitrary exprs are allowed\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20492570",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20492570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20492570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDkyNTcw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-04T20:27:18Z",
    "updated_at": "2013-07-04T20:27:18Z",
    "author_association": "MEMBER",
    "body": "nvm. should allow them.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20492654",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20492654",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20492654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDkyNjU0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-04T20:29:55Z",
    "updated_at": "2013-07-04T20:29:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "whatever is parsable by ne should be allowed\nin reality though only simple expressions are prob needed\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20556961",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20556961",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20556961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTU2OTYx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-06T16:36:51Z",
    "updated_at": "2013-07-06T16:36:51Z",
    "author_association": "MEMBER",
    "body": "@jreback let me see if i have the right idea about how selections are computed\n\nassume that we:\n- have an `AppendableFrameTable` instance\n- want the whole table (i.e., not iterating over chunks)\n1. `HDFStore.select` is called\n2. `select` calls `AppendableFrameTable.read`\n3. `read` calls `read_axes` which sets the `selection` attribute\n4. `selection` is then used in `process_axes` to make the selection using `filter`s (if any)\n\ni think my plan of attack will be:\n1. make a subclass of my `Term` class, maybe `TableTerm` which has the `filter` attribute and possibly a few other unexposed helper methods if necessary\n2. the `Term` class in `pytables.py` will become something like `TableExpr` (a subclass of `Expr`) which is a lightweight container for `TableTerm`s (just like `Expr`)\n\nI think I might be able to do this without touching any of the `Storer` code.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20557053",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20557053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20557053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTU3MDUz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-06T16:43:45Z",
    "updated_at": "2013-07-06T16:43:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "too complicated....going to futz around with your branch....give me a few\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20557193",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20557193",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20557193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTU3MTkz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-06T16:52:10Z",
    "updated_at": "2013-07-06T16:52:38Z",
    "author_association": "MEMBER",
    "body": "ok. seems like there's a lot going on in `pytables`. it's not clear to me how to incorporate the filters into my current scheme since there's no state regarding the operator except its name, e.g., `self.op = '!='`. i suppose i could special case two classes for the filterable operators to hold a filter...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20557243",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20557243",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20557243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTU3MjQz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-06T16:54:52Z",
    "updated_at": "2013-07-06T16:54:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "a filter is just an expression that we are going to evaluation after the results come back (e.g. its a dimension that pytables doesn't select on), e.g. when you store a frame, the rows are stored, but the columns are stored as a single block), so selecting on the columns is basically just a reindex\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20557449",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20557449",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20557449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTU3NDQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-06T17:08:00Z",
    "updated_at": "2013-07-06T17:08:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok....if I have an expression like `columns=A`, how can I tell the node visitor (which is now a sub-class of your existing one), to really make this `columns==A` ? (e.g. it interprets it as an Assign, but I want a different op (aside from actually rewriting it, I basically want to map `=` and `==` to the same thing\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20557602",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20557602",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20557602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTU3NjAy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-06T17:17:29Z",
    "updated_at": "2013-07-06T17:18:58Z",
    "author_association": "MEMBER",
    "body": "i think this should work\n\n``` python\ndef visit_Assign(self, node):\n    cmpr = ast.Compare(ops=[ast.Eq()], left=self.visit(node.targets[0]),\n                        comparators=self.visit(node.value))\n    return self.visit(cmpr)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20557648",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20557648",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20557648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTU3NjQ4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-06T17:20:26Z",
    "updated_at": "2013-07-06T17:20:26Z",
    "author_association": "MEMBER",
    "body": "you also need to remove the raise i put in to disallow statements\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20557655",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20557655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20557655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTU3NjU1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-06T17:21:13Z",
    "updated_at": "2013-07-06T17:21:13Z",
    "author_association": "MEMBER",
    "body": "or add `ast.Assign` to the instance check in `visit_Module`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20557665",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20557665",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20557665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTU3NjY1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-06T17:22:09Z",
    "updated_at": "2013-07-06T17:22:09Z",
    "author_association": "MEMBER",
    "body": "ok that won't work exactly yet, give me a sec ill make it work an push and put a link\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20557683",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20557683",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20557683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTU3Njgz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-06T17:24:10Z",
    "updated_at": "2013-07-06T17:24:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "dont' worry....i think i got what i need for a min\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20557742",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4037#issuecomment-20557742",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4037",
    "id": 20557742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTU3NzQy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-06T17:28:36Z",
    "updated_at": "2013-07-06T17:28:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually....need to transform an Assign node to a Compare node...would be helpful..?\n"
  }
]
