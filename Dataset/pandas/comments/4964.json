[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25017417",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4964#issuecomment-25017417",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4964",
    "id": 25017417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDE3NDE3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T15:54:25Z",
    "updated_at": "2013-09-24T15:54:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is a bit of work, because need right now the rollinging functions only accept float dtypes, so need a generator for object types (not that hard) in the code generator. then need to dispatch based on dtype. will put on the board for 0.14.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25018235",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4964#issuecomment-25018235",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4964",
    "id": 25018235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDE4MjM1",
    "user": {
      "login": "aschilling",
      "id": 377855,
      "node_id": "MDQ6VXNlcjM3Nzg1NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/377855?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aschilling",
      "html_url": "https://github.com/aschilling",
      "followers_url": "https://api.github.com/users/aschilling/followers",
      "following_url": "https://api.github.com/users/aschilling/following{/other_user}",
      "gists_url": "https://api.github.com/users/aschilling/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aschilling/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aschilling/subscriptions",
      "organizations_url": "https://api.github.com/users/aschilling/orgs",
      "repos_url": "https://api.github.com/users/aschilling/repos",
      "events_url": "https://api.github.com/users/aschilling/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aschilling/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T16:03:48Z",
    "updated_at": "2013-09-24T16:03:48Z",
    "author_association": "NONE",
    "body": "Thanks, is there maybe an alternative solution how I could implement the functionality with the current pandas version?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25018993",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4964#issuecomment-25018993",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4964",
    "id": 25018993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDE4OTkz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T16:13:17Z",
    "updated_at": "2013-09-24T16:13:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "There's an embeded bug here (that's why i am astyping)...separate issue\n\n```\nIn [28]: df['Quantity'].astype('float').resample('10D',how=np.sum)\nOut[28]: \nDate\n2013-09-01 13:00:00     4\n2013-09-11 13:00:00   NaN\n2013-09-21 13:00:00   NaN\n2013-10-01 13:00:00    13\n2013-10-11 13:00:00   NaN\n2013-10-21 13:00:00   NaN\n2013-10-31 13:00:00   NaN\n2013-11-10 13:00:00   NaN\n2013-11-20 13:00:00   NaN\n2013-11-30 13:00:00    12\n2013-12-10 13:00:00     0\nFreq: 10D, dtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25020308",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4964#issuecomment-25020308",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4964",
    "id": 25020308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDIwMzA4",
    "user": {
      "login": "aschilling",
      "id": 377855,
      "node_id": "MDQ6VXNlcjM3Nzg1NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/377855?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aschilling",
      "html_url": "https://github.com/aschilling",
      "followers_url": "https://api.github.com/users/aschilling/followers",
      "following_url": "https://api.github.com/users/aschilling/following{/other_user}",
      "gists_url": "https://api.github.com/users/aschilling/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aschilling/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aschilling/subscriptions",
      "organizations_url": "https://api.github.com/users/aschilling/orgs",
      "repos_url": "https://api.github.com/users/aschilling/repos",
      "events_url": "https://api.github.com/users/aschilling/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aschilling/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T16:28:45Z",
    "updated_at": "2013-09-24T16:28:45Z",
    "author_association": "NONE",
    "body": "Thanks, but I think you got me wrong, I am looking for a possibility to count at each point the number of new customers in the upcoming 10 days. Hence, I need to compare the names of the customers to see if they are new or already known.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25023800",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4964#issuecomment-25023800",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4964",
    "id": 25023800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDIzODAw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T17:11:57Z",
    "updated_at": "2013-09-24T17:11:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this will work. It is a 'manual' rolling_apply\nyou can do anything you want the function (e.g. if you can return a Series with multiple values or a DataFrame)\nand can efectively 'group' how you want\n\nThe key is return `None` from the function which concat ignores\n\n```\nIn [25]: df\nOut[25]: \n                    Buyer  Quantity\nDate                               \n2013-09-01 13:00:00  Carl         1\n2013-09-01 13:05:00  Mark         3\n2013-10-01 20:00:00  Carl         5\n2013-10-03 10:00:00   Joe         8\n2013-12-02 12:00:00   Joe         9\n2013-12-02 14:00:00  Carl         3\n\nIn [24]: dates = date_range(df.index[0],df.index[-1],freq='D')                                          \n\nIn [22]: def f(x,d):\n   ....:     if len(x):\n   ....:         return Series([x['Quantity'].sum()],index=[d])\n   ....:     return None\n   ....: \n\nIn [23]: concat([ f(df.loc[(df.index>dates[i-10]) & (df.index<=dates[i])], dates[i]) for i in xrange(10,len(dates)) ])\nOut[23]: \n2013-09-11 13:00:00     3\n2013-10-02 13:00:00     5\n2013-10-03 13:00:00    13\n2013-10-04 13:00:00    13\n2013-10-05 13:00:00    13\n2013-10-06 13:00:00    13\n2013-10-07 13:00:00    13\n2013-10-08 13:00:00    13\n2013-10-09 13:00:00    13\n2013-10-10 13:00:00    13\n2013-10-11 13:00:00    13\n2013-10-12 13:00:00     8\n2013-12-02 13:00:00     9\ndtype: int64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25086571",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4964#issuecomment-25086571",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4964",
    "id": 25086571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDg2NTcx",
    "user": {
      "login": "aschilling",
      "id": 377855,
      "node_id": "MDQ6VXNlcjM3Nzg1NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/377855?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aschilling",
      "html_url": "https://github.com/aschilling",
      "followers_url": "https://api.github.com/users/aschilling/followers",
      "following_url": "https://api.github.com/users/aschilling/following{/other_user}",
      "gists_url": "https://api.github.com/users/aschilling/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aschilling/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aschilling/subscriptions",
      "organizations_url": "https://api.github.com/users/aschilling/orgs",
      "repos_url": "https://api.github.com/users/aschilling/repos",
      "events_url": "https://api.github.com/users/aschilling/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aschilling/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T13:42:59Z",
    "updated_at": "2013-09-25T13:42:59Z",
    "author_association": "NONE",
    "body": "Thanks, that is a great solution. Is there any possibility to use in your last statement [23] a TimeOffset (e.g. a week or month) to select the rows for the f function while still having the variable 'dates' on a daily basis?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25094213",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4964#issuecomment-25094213",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4964",
    "id": 25094213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDk0MjEz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T15:08:08Z",
    "updated_at": "2013-09-25T15:08:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [24]: offset = pd.offsets.MonthEnd('1')\n\nIn [25]: concat([ f(df.loc[(df.index>d-offset) & (df.index<=d)], d) for d in dates ])\nOut[25]: \n2013-09-01 13:00:00    1\n2013-09-02 13:00:00    4\n2013-09-03 13:00:00    4\n2013-09-04 13:00:00    4\n2013-09-05 13:00:00    4\n2013-09-06 13:00:00    4\n2013-09-07 13:00:00    4\n2013-09-08 13:00:00    4\n2013-09-09 13:00:00    4\n2013-09-10 13:00:00    4\n2013-09-11 13:00:00    4\n2013-09-12 13:00:00    4\n2013-09-13 13:00:00    4\n2013-09-14 13:00:00    4\n2013-09-15 13:00:00    4\n...\n2013-10-18 13:00:00    13\n2013-10-19 13:00:00    13\n2013-10-20 13:00:00    13\n2013-10-21 13:00:00    13\n2013-10-22 13:00:00    13\n2013-10-23 13:00:00    13\n2013-10-24 13:00:00    13\n2013-10-25 13:00:00    13\n2013-10-26 13:00:00    13\n2013-10-27 13:00:00    13\n2013-10-28 13:00:00    13\n2013-10-29 13:00:00    13\n2013-10-30 13:00:00    13\n2013-10-31 13:00:00    13\n2013-12-02 13:00:00     9\nLength: 61\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110542209",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4964#issuecomment-110542209",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4964",
    "id": 110542209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDU0MjIwOQ==",
    "user": {
      "login": "dashesy",
      "id": 873905,
      "node_id": "MDQ6VXNlcjg3MzkwNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/873905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dashesy",
      "html_url": "https://github.com/dashesy",
      "followers_url": "https://api.github.com/users/dashesy/followers",
      "following_url": "https://api.github.com/users/dashesy/following{/other_user}",
      "gists_url": "https://api.github.com/users/dashesy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dashesy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dashesy/subscriptions",
      "organizations_url": "https://api.github.com/users/dashesy/orgs",
      "repos_url": "https://api.github.com/users/dashesy/repos",
      "events_url": "https://api.github.com/users/dashesy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dashesy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-10T00:22:59Z",
    "updated_at": "2015-06-10T00:22:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "is it possible to ignore string columns and apply the rolling function to the rest?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/192763042",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4964#issuecomment-192763042",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4964",
    "id": 192763042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5Mjc2MzA0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-06T00:02:41Z",
    "updated_at": "2016-03-06T00:02:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "going to repurpose this issue to skip nuiscance columns in a dataframe\n\nIn [4]: df = DataFrame({'A' : pd.date_range('20130101',periods=3),'B' : range(3)})\n\n```\nIn [5]: df\nOut[5]: \n           A  B\n0 2013-01-01  0\n1 2013-01-02  1\n2 2013-01-03  2\n```\n\nThis is a supported op\n\n```\nIn [7]: df.rolling(window=2).count()\nOut[7]: \n     A    B\n0  1.0  1.0\n1  2.0  2.0\n2  2.0  2.0\n```\n\nThis works\n\n```\nIn [9]: df.rolling(window=2).B.sum()\nOut[9]: \n0    NaN\n1    1.0\n2    3.0\nName: B, dtype: float64\n```\n\n```\ndf.rolling(window=2).sum()\n```\n\nshould work (but excluded `A`) from the results.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/192763128",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4964#issuecomment-192763128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4964",
    "id": 192763128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5Mjc2MzEyOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-06T00:04:08Z",
    "updated_at": "2016-03-06T00:04:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing in favor of #12537 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374980028",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4964#issuecomment-374980028",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4964",
    "id": 374980028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDk4MDAyOA==",
    "user": {
      "login": "Darel13712",
      "id": 23708773,
      "node_id": "MDQ6VXNlcjIzNzA4Nzcz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/23708773?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Darel13712",
      "html_url": "https://github.com/Darel13712",
      "followers_url": "https://api.github.com/users/Darel13712/followers",
      "following_url": "https://api.github.com/users/Darel13712/following{/other_user}",
      "gists_url": "https://api.github.com/users/Darel13712/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Darel13712/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Darel13712/subscriptions",
      "organizations_url": "https://api.github.com/users/Darel13712/orgs",
      "repos_url": "https://api.github.com/users/Darel13712/repos",
      "events_url": "https://api.github.com/users/Darel13712/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Darel13712/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T15:30:31Z",
    "updated_at": "2018-03-21T15:33:01Z",
    "author_association": "NONE",
    "body": "@jreback Hello is there any possibility to get rolling.apply for objects in 2018?) It still ignores objects as of 0.22.0.\r\n\r\n\r\n```\r\nidx = pd.date_range(pd.to_datetime('2017-01-01'), pd.to_datetime('2017-01-03'))\r\ndf = pd.DataFrame([[1, 's'],[2, 't'],[3, 'r']], index=idx)\r\n```\r\n|            | 0 | 1 |\r\n|------------|---|---|\r\n| 2017-01-01 | 1 | s |\r\n| 2017-01-02 | 2 | t |\r\n| 2017-01-03 | 3 | r |\r\n\r\nit's ok to ignore objects with built-in functions\r\n```\r\ndf.rolling(2, min_periods=1).sum()\r\n```\r\n|            | 0 | 1 |\r\n|------------|---|---|\r\n| 2017-01-01 | 1 | s |\r\n| 2017-01-02 | 3 | t |\r\n| 2017-01-03 | 5 | r |\r\n\r\nbut why can't i handle objects myself?\r\n\r\n```\r\ndef const(x):\r\n    return 5\r\ndf.rolling(2, min_periods=1).apply(const)\r\n```\r\n|            | 0 | 1 |\r\n|------------|---|---|\r\n| 2017-01-01 | 5 | s |\r\n| 2017-01-02 | 5 | t |\r\n| 2017-01-03 | 5 | r |\r\n\r\nThis example above is not really useful but I want to be able to apply function to a column that contains objects.\r\n\r\nThe only solution I've found is to create your own DataFrame/Series type https://stackoverflow.com/questions/44479384/pandas-rolling-apply-doesnt-do-anything\r\n\r\nBut I really think this should be in pandas by default."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374984577",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4964#issuecomment-374984577",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4964",
    "id": 374984577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDk4NDU3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T15:42:42Z",
    "updated_at": "2018-03-21T15:42:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "would always take a PR for this"
  }
]
