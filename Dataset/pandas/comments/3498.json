[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17259606",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3498#issuecomment-17259606",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3498",
    "id": 17259606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjU5NjA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-30T22:57:19Z",
    "updated_at": "2013-04-30T22:57:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "currently `astype('datetime64')` will not work (though in your example it is innocuous as it doesn't do anything with your datetime being 0). Datetimes are stored as `datetime64[ns]` and the only valid transforms are to `object`, or to extract values (e.g. hours,minutes, etc) from them. The astype to another time unit is really just a display issue.\n\n(this is not an answer to your question exactly, but is conceptually part of the problem)\n\nBut you do make a valid point, how to store datetimes with timezones (which btw are stored as `object` type only) in a csv? I like the idea of storing the fully suffixed string with timezone.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/230171465",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3498#issuecomment-230171465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3498",
    "id": 230171465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDE3MTQ2NQ==",
    "user": {
      "login": "endolith",
      "id": 58611,
      "node_id": "MDQ6VXNlcjU4NjEx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/58611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/endolith",
      "html_url": "https://github.com/endolith",
      "followers_url": "https://api.github.com/users/endolith/followers",
      "following_url": "https://api.github.com/users/endolith/following{/other_user}",
      "gists_url": "https://api.github.com/users/endolith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/endolith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/endolith/subscriptions",
      "organizations_url": "https://api.github.com/users/endolith/orgs",
      "repos_url": "https://api.github.com/users/endolith/repos",
      "events_url": "https://api.github.com/users/endolith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/endolith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-03T19:44:09Z",
    "updated_at": "2016-07-03T19:44:09Z",
    "author_association": "NONE",
    "body": "> But you do make a valid point, how to store datetimes with timezones (which btw are stored as object type only) in a csv?\n\nIsn't that why you add `+00:00` to the end of a datestamp?  Pandas doesn't recognize this, though.  \n\nPutting these formats in CSV file:\n\n```\n2015-05-01T04:13:00+00:00\n2015-05-01 04:13:00+00:00\n2015-05-01 04:13:00Z\n```\n\nare all parsed as `dtype='datetime64[ns]'`, even though [these represent UTC](https://en.wikipedia.org/wiki/ISO_8601) and so I would expect `dtype='datetime64[ns, UTC]'`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/230234173",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3498#issuecomment-230234173",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3498",
    "id": 230234173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDIzNDE3Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-04T08:27:41Z",
    "updated_at": "2016-07-04T08:27:41Z",
    "author_association": "MEMBER",
    "body": "> Isn't that why you add +00:00 to the end of a datestamp? \n\nIndeed, that already happens with latest pandas by adding the offset.\n\n>  Pandas doesn't recognize this, though. \n\nNote that the offset will be taken into account, the result will only be a naive datetime by default with `read_csv`. But you can get timezone-aware datetimes with `to_datetime`: \n\n```\nIn [129]: pd.to_datetime(['2015-05-01T04:13:00+00:00'], utc=True)\nOut[129]: DatetimeIndex(['2015-05-01 04:13:00+00:00'], dtype='datetime64[ns, UTC]', freq=None)\n```\n\nNote that the result will always be UTC, but with the offset taken into account (there is no way to know from the string repr which timezone it should be, so UTC is the only option)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/230234323",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3498#issuecomment-230234323",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3498",
    "id": 230234323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDIzNDMyMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-04T08:28:29Z",
    "updated_at": "2016-07-04T08:28:29Z",
    "author_association": "MEMBER",
    "body": "I am closing this: with latest pandas and numpy, all examples in the initial issue give the same expected result.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/230280460",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3498#issuecomment-230280460",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3498",
    "id": 230280460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDI4MDQ2MA==",
    "user": {
      "login": "endolith",
      "id": 58611,
      "node_id": "MDQ6VXNlcjU4NjEx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/58611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/endolith",
      "html_url": "https://github.com/endolith",
      "followers_url": "https://api.github.com/users/endolith/followers",
      "following_url": "https://api.github.com/users/endolith/following{/other_user}",
      "gists_url": "https://api.github.com/users/endolith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/endolith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/endolith/subscriptions",
      "organizations_url": "https://api.github.com/users/endolith/orgs",
      "repos_url": "https://api.github.com/users/endolith/repos",
      "events_url": "https://api.github.com/users/endolith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/endolith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-04T12:34:35Z",
    "updated_at": "2016-07-04T12:34:35Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche \n\n> (there is no way to know from the string repr which timezone it should be, so UTC is the only option)\n\nWell if it has a Z at the end then it is definitely UTC, right?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/230281655",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3498#issuecomment-230281655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3498",
    "id": 230281655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDI4MTY1NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-04T12:41:34Z",
    "updated_at": "2016-07-04T12:41:34Z",
    "author_association": "MEMBER",
    "body": "And it also gives you UTC:\n\n```\nIn [71]: pd.to_datetime(['2015-05-01T04:13:00Z'], utc=True)\nOut[71]: DatetimeIndex(['2015-05-01 04:13:00+00:00'], dtype='datetime64[ns, UTC]', freq=None)\n```\n\nbut only if you specify to return timezone-aware datetimes.\n"
  }
]
