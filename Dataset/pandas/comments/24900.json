[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457178055",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24900#issuecomment-457178055",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24900",
    "id": 457178055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzE3ODA1NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T12:22:05Z",
    "updated_at": "2019-01-24T12:22:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "> If I get it correctly all\r\nnon-fixed freq DateOffsets cam be represented as Timedelta instances?\r\n\r\nI don't think so. Timedeltas always represent an absolute, fixed duration. A non-fixed offset like BusinessDay doesn't have a fixed number of nanoseconds."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457188161",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24900#issuecomment-457188161",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24900",
    "id": 457188161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzE4ODE2MQ==",
    "user": {
      "login": "trendelkampschroer",
      "id": 5398411,
      "node_id": "MDQ6VXNlcjUzOTg0MTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5398411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trendelkampschroer",
      "html_url": "https://github.com/trendelkampschroer",
      "followers_url": "https://api.github.com/users/trendelkampschroer/followers",
      "following_url": "https://api.github.com/users/trendelkampschroer/following{/other_user}",
      "gists_url": "https://api.github.com/users/trendelkampschroer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trendelkampschroer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trendelkampschroer/subscriptions",
      "organizations_url": "https://api.github.com/users/trendelkampschroer/orgs",
      "repos_url": "https://api.github.com/users/trendelkampschroer/repos",
      "events_url": "https://api.github.com/users/trendelkampschroer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trendelkampschroer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T13:01:04Z",
    "updated_at": "2019-01-24T13:02:03Z",
    "author_association": "NONE",
    "body": "Yes of course, sorry for the confusion. What I meant to ask was the opposite:\r\n*Can all fixed freq `DateOffsets` be represented as `Timedelta` instances?*\r\n\r\nUpdated my comment above."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457194383",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24900#issuecomment-457194383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24900",
    "id": 457194383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzE5NDM4Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T13:22:42Z",
    "updated_at": "2019-01-24T13:22:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure what the issue is then. Timedeltas are accepted in\nDataFrame.rolling.\n\nOn Thu, Jan 24, 2019 at 7:01 AM Benjamin Trendelkamp-Schroer <\nnotifications@github.com> wrote:\n\n> Yes of course, sorry for the confusion. What I meant to ask was the\n> opposite:\n> *Can all fixed freq DateOffsets be represented as Timedelta instances?*\n>\n> â€”\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/24900#issuecomment-457188161>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIuRAVAUvaNa2-2ngwzU0x7s6HHi9ks5vGa6UgaJpZM4aQhMt>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457201537",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24900#issuecomment-457201537",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24900",
    "id": 457201537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzIwMTUzNw==",
    "user": {
      "login": "trendelkampschroer",
      "id": 5398411,
      "node_id": "MDQ6VXNlcjUzOTg0MTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5398411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trendelkampschroer",
      "html_url": "https://github.com/trendelkampschroer",
      "followers_url": "https://api.github.com/users/trendelkampschroer/followers",
      "following_url": "https://api.github.com/users/trendelkampschroer/following{/other_user}",
      "gists_url": "https://api.github.com/users/trendelkampschroer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trendelkampschroer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trendelkampschroer/subscriptions",
      "organizations_url": "https://api.github.com/users/trendelkampschroer/orgs",
      "repos_url": "https://api.github.com/users/trendelkampschroer/repos",
      "events_url": "https://api.github.com/users/trendelkampschroer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trendelkampschroer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T13:45:37Z",
    "updated_at": "2019-01-24T13:45:37Z",
    "author_association": "NONE",
    "body": "Thanks for the quick reply. I should have been more precise: I meant that rolling should not accept DateOffsets, but `int`, and `Timedelta` instances (or `str` which can be cast to `Timedelta`).\r\n\r\nMy intent is twofold: \r\ni) I want to understand the difference between a fixed frequency `DateOffset` and a `Timedelta`\r\nii) If they are equivalent (for purposes of rolling operations) then I want to stimulate the discussion that settles whether one is to prefer over the other for rolling operations. The ideal outcome would be (at least) a comment in the docstring or the examples section of `pandas.DataFrame.rolling` giving a clear indication of the preferred usage.\r\n\r\nThe docstring for `pandas.DataFrame.rolling` says:\r\n\r\n>  window : int, or offset\r\n> \r\n> Size of the moving window. This is the number of observations used for calculating the statistic. Each window will be a fixed size.\r\n> \r\n> If its an offset then this will be the time period of each window. Each window will be a variable sized based on the observations included in the time-period. This is only valid for datetimelike indexes. This is new in 0.19.0\r\n> \r\n\r\nThis suggest that you can use arbitrary `DateOffsets` but in fact only those with a fixed frequency are admissible. But if the only admissible offsets can as well be represented as a `Timedelta` than this should be made clear in the docstring or somewhere in the examples. \r\n\r\nThis also means that 'offset' might not be the best word to use here, as arbitrary offsets are not permitted.\r\n\r\nIf there is a rolling operation that can only be performed via `DateOffsets` and not via `Timedeltas` than I'd be eager to learn about it also.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457347090",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24900#issuecomment-457347090",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24900",
    "id": 457347090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzM0NzA5MA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T20:37:07Z",
    "updated_at": "2019-01-24T20:37:07Z",
    "author_association": "MEMBER",
    "body": "Agreed that the `rolling` docstring could use clarification.\r\n\r\nTo answer your questions:\r\n\r\ni) Essentially, there is very little difference between fixed frequency offsets (called `Tick`s internally but has not been really exposed in the documentation) and Timedeltas, e.g. `pd.offsets.Hour()` behaves the same as `Timedelta(hour=1)` arithmetically. Fixed frequencies exist to behave within the frequency system of pandas.\r\n\r\nii) There is no preference between the two when using the rolling operation.\r\n\r\nOverall, we should specify the `DateOffset` must be fixed-frequency in the docstring."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457515576",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24900#issuecomment-457515576",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24900",
    "id": 457515576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzUxNTU3Ng==",
    "user": {
      "login": "trendelkampschroer",
      "id": 5398411,
      "node_id": "MDQ6VXNlcjUzOTg0MTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5398411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trendelkampschroer",
      "html_url": "https://github.com/trendelkampschroer",
      "followers_url": "https://api.github.com/users/trendelkampschroer/followers",
      "following_url": "https://api.github.com/users/trendelkampschroer/following{/other_user}",
      "gists_url": "https://api.github.com/users/trendelkampschroer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trendelkampschroer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trendelkampschroer/subscriptions",
      "organizations_url": "https://api.github.com/users/trendelkampschroer/orgs",
      "repos_url": "https://api.github.com/users/trendelkampschroer/repos",
      "events_url": "https://api.github.com/users/trendelkampschroer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trendelkampschroer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T09:45:19Z",
    "updated_at": "2019-01-25T09:45:19Z",
    "author_association": "NONE",
    "body": "Thank you for your answer. Furthermore I'd encourage using `Timedelta` instead of `DateOffset` in the docstring. \r\n\r\nAs far as I understand  a valid `Timedelta` will always work with rolling operations (for any DatetimeIndex) while `DateOffset` may raise if it is not fixed frequency.\r\n\r\nI am emphasizing this as it took me\r\nme some time to realise this. With that understanding I found it now easier to design code that internally uses `rolling` operations.\r\n\r\nThis behaviour of `rolling` is also in stark contrast to `resample` for which a non fixed freq `DateOffset` is a valid argument."
  }
]
