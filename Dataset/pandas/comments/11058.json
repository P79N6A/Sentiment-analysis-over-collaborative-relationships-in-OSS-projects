[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/139562038",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11058#issuecomment-139562038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11058",
    "id": 139562038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTU2MjAzOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-11T14:33:01Z",
    "updated_at": "2015-09-11T14:33:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "see https://github.com/pydata/pandas/issues/10060\n\nyou are using `datetime.date`, which is really-really frowned upon and just about non-supported. Its pretty hard to actually construct a multi-index (in fact we were always coercing them to `Timestamps`) which is the correct dtype here.\n\nJust use `Timestamps/datetime.datetime`. Their is **NO** benefit to using `datetime.date` and just more and more issues.\n\nThis is the correct usage\n\n```\nIn [23]: s = Series(['a','b'],index=pd.MultiIndex.from_tuples([(1,Timestamp('20130101')),(2,Timestamp('20140101'))],names=['first','seconds']))\n\nIn [24]: s2 = Series(['a','b'],index=pd.MultiIndex.from_tuples([(1,Timestamp('20130101')),(2,Timestamp('20150101'))],names=['first','seconds']))\n\nIn [25]: pd.concat([s,s2],axis=1)\nOut[25]: \n                    0    1\nfirst seconds             \n1     2013-01-01    a    a\n2     2014-01-01    b  NaN\n      2015-01-01  NaN    b\n```\n\nThis is technically a bug, but really really frowned upon.\n\n```\nIn [10]: s = Series(['a','b'],index=pd.MultiIndex.from_arrays([[1,2],Index([datetime.date(2013,1,1),datetime.date(2014,1,1)])]))\n\nIn [11]: s\nOut[11]: \n1  2013-01-01    a\n2  2014-01-01    b\ndtype: object\n\nIn [12]: s = Series(['a','b'],index=pd.MultiIndex.from_arrays([[1,2],Index([datetime.date(2013,1,1),datetime.date(2014,1,1)])],names=['first','second']))\n\nIn [13]: s\nOut[13]: \nfirst  second    \n1      2013-01-01    a\n2      2014-01-01    b\ndtype: object\n\nIn [14]: s.index.levels[1].values\nOut[14]: array([datetime.date(2013, 1, 1), datetime.date(2014, 1, 1)], dtype=object)\n\nIn [15]: pd.concat([s,s],axis=1)\nOut[15]: \n                  0  1\nfirst second          \n1     2013-01-01  a  a\n2     2014-01-01  b  b\n\nIn [16]: s = Series(['a','b'],index=pd.MultiIndex.from_arrays([[1,2],Index([datetime.date(2013,1,1),datetime.date(2014,1,1)])],names=['first','second']))\n\nIn [17]: s2 = Series(['a','b'],index=pd.MultiIndex.from_arrays([[1,2],Index([datetime.date(2013,1,1),datetime.date(2015,1,1)])],names=['first','second']))\n\nIn [18]: s\nOut[18]: \nfirst  second    \n1      2013-01-01    a\n2      2014-01-01    b\ndtype: object\n\nIn [19]: s.index.levels[1].values\nOut[19]: array([datetime.date(2013, 1, 1), datetime.date(2014, 1, 1)], dtype=object)\n\nIn [20]: pd.concat([s,s2],axis=1)\nOut[20]: \n                    0    1\nfirst second              \n1     2013-01-01  NaN  NaN\n2     2014-01-01  NaN  NaN\n      2015-01-01  NaN  NaN\n```\n\nI prop won't ever get to this. This really requires creation of a new dtype to support these. I don't think its worth it nor is it useful in any way. \n\nI mark it as a bug in any event.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/139562271",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11058#issuecomment-139562271",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11058",
    "id": 139562271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTU2MjI3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-11T14:34:10Z",
    "updated_at": "2015-09-11T14:34:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "the one thing I think _might_ useful is a note in the doc-string for `MultiIndex` and a note in the docs to avoid using `datetime.date`. Would you do a pull-request?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/139722294",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11058#issuecomment-139722294",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11058",
    "id": 139722294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTcyMjI5NA==",
    "user": {
      "login": "timfeirg",
      "id": 4319104,
      "node_id": "MDQ6VXNlcjQzMTkxMDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4319104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timfeirg",
      "html_url": "https://github.com/timfeirg",
      "followers_url": "https://api.github.com/users/timfeirg/followers",
      "following_url": "https://api.github.com/users/timfeirg/following{/other_user}",
      "gists_url": "https://api.github.com/users/timfeirg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timfeirg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timfeirg/subscriptions",
      "organizations_url": "https://api.github.com/users/timfeirg/orgs",
      "repos_url": "https://api.github.com/users/timfeirg/repos",
      "events_url": "https://api.github.com/users/timfeirg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timfeirg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-12T05:11:35Z",
    "updated_at": "2015-09-12T05:11:35Z",
    "author_association": "NONE",
    "body": "I think I will do that.\nBTW I notice that if I `pd.merge` on two dataframes with multiindex, one level of which is `datetime.datetime`, they gets automatically converted pandas TimeStamp, I wonder if `pd.concat` could have the same behavior\n"
  }
]
