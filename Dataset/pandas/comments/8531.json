[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58644415",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58644415",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58644415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjQ0NDE1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T11:40:38Z",
    "updated_at": "2014-10-10T11:40:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "try this using 0.15.0rc1 http://pandas.pydata.org/\n\ntheir is now an `ambiguous` option to do this (which has several options for it)\n\n```\nIn [16]: x.tz_localize(tz,ambiguous=True)\nOut[16]: Timestamp('2014-10-26 02:00:00+0200', tz='Europe/Berlin')\n\nIn [17]: x.tz_localize(tz,ambiguous='NaT')\nOut[17]: NaT\n\nIn [18]: x.tz_localize(tz,ambiguous=False)\nOut[18]: Timestamp('2014-10-26 02:00:00+0100', tz='Europe/Berlin')\n```\n\ncc @rockg\ncc @ischwabacher\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58647181",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58647181",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58647181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjQ3MTgx",
    "user": {
      "login": "gbakalian",
      "id": 1969965,
      "node_id": "MDQ6VXNlcjE5Njk5NjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1969965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gbakalian",
      "html_url": "https://github.com/gbakalian",
      "followers_url": "https://api.github.com/users/gbakalian/followers",
      "following_url": "https://api.github.com/users/gbakalian/following{/other_user}",
      "gists_url": "https://api.github.com/users/gbakalian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gbakalian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gbakalian/subscriptions",
      "organizations_url": "https://api.github.com/users/gbakalian/orgs",
      "repos_url": "https://api.github.com/users/gbakalian/repos",
      "events_url": "https://api.github.com/users/gbakalian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gbakalian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T12:13:08Z",
    "updated_at": "2014-10-10T12:13:08Z",
    "author_association": "NONE",
    "body": "I have updated the version - your example work fine. \nBut i still have an issue when trying to resample:\n\n```\nimport pandas as pd\nfrom datetime import datetime as dt\nimport pytz\n\n\ntz = 'Europe/Berlin'\nd = dt(2014,10,25,03,00)\ntz = pytz.timezone(tz)\ndates = pd.date_range(tz.localize(d), periods=24, freq='H')\npd.Series(5,dates).resample('H')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58647368",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58647368",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58647368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjQ3MzY4",
    "user": {
      "login": "gbakalian",
      "id": 1969965,
      "node_id": "MDQ6VXNlcjE5Njk5NjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1969965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gbakalian",
      "html_url": "https://github.com/gbakalian",
      "followers_url": "https://api.github.com/users/gbakalian/followers",
      "following_url": "https://api.github.com/users/gbakalian/following{/other_user}",
      "gists_url": "https://api.github.com/users/gbakalian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gbakalian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gbakalian/subscriptions",
      "organizations_url": "https://api.github.com/users/gbakalian/orgs",
      "repos_url": "https://api.github.com/users/gbakalian/repos",
      "events_url": "https://api.github.com/users/gbakalian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gbakalian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T12:14:59Z",
    "updated_at": "2014-10-10T12:14:59Z",
    "author_association": "NONE",
    "body": "How can I 'set' ambiguous equal True in my previous example ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58647666",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58647666",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58647666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjQ3NjY2",
    "user": {
      "login": "gbakalian",
      "id": 1969965,
      "node_id": "MDQ6VXNlcjE5Njk5NjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1969965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gbakalian",
      "html_url": "https://github.com/gbakalian",
      "followers_url": "https://api.github.com/users/gbakalian/followers",
      "following_url": "https://api.github.com/users/gbakalian/following{/other_user}",
      "gists_url": "https://api.github.com/users/gbakalian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gbakalian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gbakalian/subscriptions",
      "organizations_url": "https://api.github.com/users/gbakalian/orgs",
      "repos_url": "https://api.github.com/users/gbakalian/repos",
      "events_url": "https://api.github.com/users/gbakalian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gbakalian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T12:18:12Z",
    "updated_at": "2014-10-10T12:18:12Z",
    "author_association": "NONE",
    "body": "Also:\n\n```\ndates = pd.date_range(dt(2014,10,25,03,00), periods=24, freq='H')\nts = pd.Series(5,dates)\nts.tz_localize(tz, ambiguous=True)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58647946",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58647946",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58647946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjQ3OTQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T12:21:25Z",
    "updated_at": "2014-10-10T12:21:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gbakalian out of curiosity why are you resampling over a DST transition with hourly data? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58648586",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58648586",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58648586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjQ4NTg2",
    "user": {
      "login": "gbakalian",
      "id": 1969965,
      "node_id": "MDQ6VXNlcjE5Njk5NjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1969965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gbakalian",
      "html_url": "https://github.com/gbakalian",
      "followers_url": "https://api.github.com/users/gbakalian/followers",
      "following_url": "https://api.github.com/users/gbakalian/following{/other_user}",
      "gists_url": "https://api.github.com/users/gbakalian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gbakalian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gbakalian/subscriptions",
      "organizations_url": "https://api.github.com/users/gbakalian/orgs",
      "repos_url": "https://api.github.com/users/gbakalian/repos",
      "events_url": "https://api.github.com/users/gbakalian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gbakalian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T12:28:24Z",
    "updated_at": "2014-10-10T12:29:36Z",
    "author_association": "NONE",
    "body": "LOL indeed can sounds weird !\n\nIn my database I received several curves with different frequencies and different timezones from different weather providers. I need to get them at the same time zone and resample them hourly. \n\nbut it can happen that among all the curves I retrieve some which are already hourly.\n\nif you prefer the following example also crash : \n\n```\nimport pandas as pd\nfrom datetime import datetime as dt\nimport pytz\n\n\ntz = 'Europe/Berlin'\nd = dt(2014,10,25,04,00)\ntz = pytz.timezone(tz)\ndates = pd.date_range(tz.localize(d), periods=12, freq='2H')\npd.Series(5,dates).resample('H')\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58648755",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58648755",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58648755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjQ4NzU1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T12:29:50Z",
    "updated_at": "2014-10-10T12:29:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks! that sounds like  a good use case.\n\nif you'd like to dig-in would welcome a PR to fix! It prob just not passing the argument thru\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58651680",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58651680",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58651680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjUxNjgw",
    "user": {
      "login": "gbakalian",
      "id": 1969965,
      "node_id": "MDQ6VXNlcjE5Njk5NjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1969965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gbakalian",
      "html_url": "https://github.com/gbakalian",
      "followers_url": "https://api.github.com/users/gbakalian/followers",
      "following_url": "https://api.github.com/users/gbakalian/following{/other_user}",
      "gists_url": "https://api.github.com/users/gbakalian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gbakalian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gbakalian/subscriptions",
      "organizations_url": "https://api.github.com/users/gbakalian/orgs",
      "repos_url": "https://api.github.com/users/gbakalian/repos",
      "events_url": "https://api.github.com/users/gbakalian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gbakalian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T12:59:14Z",
    "updated_at": "2014-10-10T13:00:16Z",
    "author_association": "NONE",
    "body": "May I ask you a question: \n\nThe ambiguous parameters is set in which element ? - and is it kept ? (sorry if I am asking dumb questions)\n\nbecause in the previous example I do not tell him anywhere that I want ambiguous=True, as I made the tz localisation using pytz and not tz_localize on pd.Series. So maybe we should be able to pass ambiguous through resample ? \n\n```\ndates = pd.date_range(d, periods=12, freq='2H')\nts = pd.Series(5, dates)\nts.tz_localize(tz, ambiguous=True)\n```\n\nthis does not work neither so I guess in tz_localize_to_utc in the tslib.pyx file the ambiguous parameters is not passed or read correctly ?\n\nAlso I guess the 4 tz_localize between lines 418-428 in the index.py file should have ambiguous=ambiguous. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58652188",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58652188",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58652188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjUyMTg4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T13:03:52Z",
    "updated_at": "2014-10-10T13:03:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "that sounds about right. here's some help for doing a pull-request: https://github.com/pydata/pandas/wiki\n\nthis prob has several aspects which are not handling this: `date_range` (manifesting in `_generate`) as you have seen, and `resample` so create appropriate tests (you can use the examples above).\n\nhave it fail, then fix.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58654510",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58654510",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58654510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjU0NTEw",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T13:23:38Z",
    "updated_at": "2014-10-10T13:23:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "True/False are not valid arguments to ambiguous when dealing with a DatetimeIndex.  Use `infer` instead.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58655137",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58655137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58655137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjU1MTM3",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T13:28:23Z",
    "updated_at": "2014-10-10T13:28:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "If you want to explicitly tell what times are ambiguous with multiple DST switches you need to pass in an array of True/False values.  \n\nNow, as to passing in ambiguous into the start/end times I think the right way to handle this is to pass in a non-ambiguous time into the constructor of the DatetimeIndex and then when it's localized further below everything should work properly.  Otherwise you will maybe have multiple arguments that need to be passed with ambiguous.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58657389",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58657389",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58657389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjU3Mzg5",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T13:46:56Z",
    "updated_at": "2014-10-10T13:46:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Passing True/False into ambiguous is ambiguous in itself.  I agree that the naming in the Timestamp case is a bit misleading but in the DatetimeIndex case it should not be.  We tried to be as explicit as possible by forcing the user to fully specify DST/non-DST flags or using the infer/raise/NaT arguments to specify how those ambiguous times should be handled.  In the case of the Timestamp, True/False are analogous to the DST/non-DST flags of the DatetimeIndex (and you will see that they are cast to an array when passed into the underlying localize function).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58678813",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58678813",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58678813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Njc4ODEz",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T16:19:04Z",
    "updated_at": "2014-10-10T16:19:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "You should not need an `ambiguous=` argument to resample here, since you're starting with a time zone aware `Timeseries`.  The `ambiguous=` keyword is supposed to be used any time a naive time is being converted to an aware one; the fact that this is happening in `resample` indicates that aware times are being silently converted to naive ones, which is _always_ a bug.  (Grarrr!)\n\n> Passing True/False into ambiguous is ambiguous in itself.\n\nYeah, I've been kicking myself for fighting so hard for that name; I was forgetting that practicality beats purity.  `ambiguous=True` is supposed to mean that ambiguous times are DST, except in circumstances involving political upheaval.  But those exceptions are so rare that we should probably just use `is_dst` as the name, with a warning in the docs about the exceptions.  Is rc1 too late to deprecate one kwarg and replace it with another?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58679103",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58679103",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58679103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Njc5MTAz",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T16:21:18Z",
    "updated_at": "2014-10-10T16:21:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I like `is_dst` for Timestamps but `ambiguous` for everything else makes a lot of sense.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58679476",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58679476",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58679476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Njc5NDc2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T16:24:08Z",
    "updated_at": "2014-10-10T16:24:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am ok with de-ambiguitizing (is that a word?) the arguments, and bringing back `is_dst` and leaving `ambiguous`. (that was the point, we needed both?) If one of you wants to do a pr real quick should be ok.\n\nThe resample issue (this issue) can wait for 0.15.1. its prob just doing something dumb somewhere.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58679957",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58679957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58679957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Njc5OTU3",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T16:27:29Z",
    "updated_at": "2014-10-10T16:27:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well there really are two uses.  When you have one timestamp we should just try and replicate what tz.localize does in pytz.  So that can be done in Timestamp's constructor/tz_localize.  Ambiguous should remain for DatetimeIndex and is_dst should not be used.\n\nI'm out of dodge for awhile so somebody else would have to do it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58680355",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58680355",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58680355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjgwMzU1",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T16:30:36Z",
    "updated_at": "2014-10-10T16:30:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I really like having a consistent interface, though.  Maybe the best answer is to use a categorical?  Then you would have `ambiguous='dst'` or `ambiguous='std'` or `ambiguous=Categorical(..., labels=['dst', 'std'])`.  That would be less ambiguous without having to write `is_dst='raise'`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58681094",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58681094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58681094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjgxMDk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T16:36:01Z",
    "updated_at": "2014-10-10T16:36:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "currently\n\n```\nambiguous : ‘infer’, bool-ndarray, ‘NaT’, default ‘raise’\n- ‘infer’ will attempt to infer fall dst-transition hours based on order\n- bool-ndarray where True signifies a DST time, False signifies a non-DST time (note that this flag is only applicable for ambiguous times)\n- ‘NaT’ will return NaT where there are ambiguous times\n- ‘raise’ will raise an AmbiguousTimeError if there are ambiguous times\n```\n\nyou are refering to the `bool-array` which has a certain 'convention' yes?\nI suppose you could also accept a `Categorical`, but maybe I am not understanding the case here\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58681219",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58681219",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58681219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjgxMjE5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T16:36:55Z",
    "updated_at": "2014-10-10T16:36:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ischwabacher you want to accept `'std'|'dst'` as well which are basically `infer_dst=False|True` (respecitvely)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58681425",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58681425",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58681425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjgxNDI1",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T16:38:34Z",
    "updated_at": "2014-10-10T16:38:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes.  It would just be for clarity; IIUC a `Categorical` with 2 levels is just a bool array with a little extra overhead.  But maybe I'm trying to be Ruby here with my alternate spellings.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58681856",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58681856",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58681856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjgxODU2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T16:41:47Z",
    "updated_at": "2014-10-10T16:41:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "haha, no you can accept a `Categorical` as well! \n\nok, sounds like we can do this for 0.15.1 then (as you don't need to bring back `infer_dst`)?\n\n@ischwabacher why don't you create a new issue for this change (if you want to add in `dst|std` for 0.15.0) ok as well, create an issue in any event\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58683347",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58683347",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58683347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjgzMzQ3",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T16:53:44Z",
    "updated_at": "2014-10-10T16:53:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I still don't understand what the point of `dst` and `std` are.  `infer_dst=False` is the default behavior where nothing is done which will raise when times are ambiguous and `infer_dst=True` is done with `ambiguous='infer'`.  I think that Timestamps are fundamentally different than DatetimeIndexes as they have only one behavior and the `infer|raise|NaT` is invalid.  We did kind of push the is_dst flags through the backend with ambiguous but the argument in the other thread was that this is really refined manipulation and didn't deserve its own keyword.\n\nI completely agree that Categorical is too involved.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58683813",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58683813",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58683813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjgzODEz",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T16:57:08Z",
    "updated_at": "2014-10-10T16:57:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay, I think I understand.  For Timestamps, `ambiguous=dst|std` would determine if the hour is dst or not.  I think that's fine, but for DatetimeIndex I don't think these should be allowed, but maybe I'm missing how these would be use.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58684828",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58684828",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58684828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Njg0ODI4",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T17:05:02Z",
    "updated_at": "2014-10-10T17:05:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think that Timestamps are fundamentally different than DatetimeIndexes as they have only one behavior and the `infer|raise|NaT` is invalid.\n\nAre there no vectorized operations on `Timestamp`s that aren't mediated by a `DatetimeIndex`?  I think `raise` and to a lesser extent `NaT` make sense with a single `Timestamp`, and what's important is that we have exactly one interface for converting naive times into aware ones.  So actually maybe `infer_dst` _does_ belong as a separate kwarg to `DatetimeIndex.tz_localize`.  Doubts!  Why must they show up now and not earlier?\n\n> I completely agree that Categorical is too involved.\n\nI posted that and was immediately confronted with the horrible vision of `Series.map` coexisting with `Series.collect`... :/\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58697361",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58697361",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58697361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Njk3MzYx",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T18:30:55Z",
    "updated_at": "2014-10-10T18:30:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was thinking when constructing a single Timestamp, one should always know whether it's a dst or non-dst Timestamp and so it would never make sense to have those other keywords.  However, when doing vectorized operations then I guess it does make sense.  I still am not sold on having more than argument.  I don't know of a case that we can't handle with the current one.  I like your new naming for  Timestamp but I don't see how that would apply to a DatetimeIndex (unless you have an array of 'dst', 'std' but that seems overkill).  We could do something like `ambiguous={'is_dst': [True, False, ...]}` to make it more explicit.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58698565",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58698565",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58698565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Njk4NTY1",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T18:39:08Z",
    "updated_at": "2014-10-10T18:39:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Solution: named constants `pd.tslib.DST` = `True`, `pd.tslib.STD` = `False`.  Maybe that's a `BoolEnum` when `enum` is available.  Then it becomes `ambiguous=DST` and everybody's happy.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58749781",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58749781",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58749781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzQ5Nzgx",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-11T13:36:55Z",
    "updated_at": "2014-10-11T13:36:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm happy with that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58809808",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58809808",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58809808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODA5ODA4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-12T17:01:17Z",
    "updated_at": "2014-10-12T17:01:17Z",
    "author_association": "MEMBER",
    "body": "@ischwabacher I don't understand your last point on named constants. Can you give an example of how that would look like? \nWhat is the advantage of using `ambiguous=pd.tslib.DST` over just using `ambiguous=True` (and documenting clearly that True means dst) or `ambiguous='dst'`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58944607",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8531#issuecomment-58944607",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8531",
    "id": 58944607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTQ0NjA3",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-13T19:47:03Z",
    "updated_at": "2014-10-13T19:47:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I want to make the parameter grokkable.  If you read `is_dst=True|False|'infer'` in the docstring, you know what that kwarg does without reading any further.  If `'NaT'` and `'raise'` are also possibilities, you might need to read the next sentence, but it's still pretty clear.  The problem is that the corner cases are unintuitive; either `is_dst` means what it says and some ambiguities can't be resolved (à la pytz), or `is_dst` _actually_ means something slightly different and the corner cases are actively counterintuitive.\n\nOn the other hand, `ambiguous=True` isn't grokkable, and it still doesn't say what it means (\"use the _first_ aware time that has this naive representation).  There's no way the user will guess the correct incantation without reading the docs.  The only real advantage of `ambiguous=DST` over `ambiguous='dst'` is that the former can share code with the `ndarray` of `bools` case via broadcasting, but both of these suffer from the same problem as `is_dst=True`.\n\nI'm also reconsidering the use case for an `ndarray` of `bool`s in the case where `is_dst` _does_ actually go the wrong way (i.e. the spring transition is a \"fall back\" for geopolitical reasons), since here it's awkward to expect the user to flip the `ambiguous` flag; you get an `ambiguous` array that looks like this:\n\n```\n                          actually STD            actually DST\n                    +---------------------+  +--------------------+\nambiguous = Series([..., False, False, True, False, True, True, ...])\n                                         ^     ^\n                                  only these two matter\n```\n\nIf we're dealing with vectorized operations in such cases, we probably want either `'infer'` or an `ndarray` that actually specifies which times are DST and which aren't.\n\nOn the other hand, my original argument for `ambiguous` over `is_dst` still applies-- we don't want to be stuck with unresolvable ambiguities when there's a time zone discontinuity that isn't a DST boundary.  But in that case, maybe it's just best to force the user to do this:\n\n```\ntimestr = '2015-03-08 02:00:00'\nnaive = pd.Timestamp(timestr)\nfixed = naive.tz_localize(pytz.FixedOffset(-7*60))\naware = fixed.tz_convert('Left_Coastia/Chicago')\n```\n"
  }
]
