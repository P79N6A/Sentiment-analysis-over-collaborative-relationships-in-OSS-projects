[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13783403",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13783403",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13783403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzgzNDAz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-19T16:53:47Z",
    "updated_at": "2013-02-19T16:53:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "You do realize that ``as_matrix()` and the syntatic sugar `.values`\n just returns a numpy 2d array of the data. Is there a situation where you are trying to use\nthe ndarray directly rather than a DataFrame?\n\n```\nIn [1]: import numpy as np\n\nIn [2]: import pandas as pd\n\nIn [3]: df = pd.DataFrame(np.random.rand(10,2),columns=['A','B'])\n\nIn [4]: df\nOut[4]: \n          A         B\n0  0.898572  0.320656\n1  0.078431  0.340781\n2  0.451752  0.282544\n3  0.545498  0.888366\n4  0.471818  0.007790\n5  0.548473  0.855393\n6  0.718170  0.386948\n7  0.371798  0.635438\n8  0.357832  0.194048\n9  0.345692  0.546124\n\nIn [5]: df.values\nOut[5]: \narray([[ 0.8985716 ,  0.32065559],\n       [ 0.07843058,  0.3407808 ],\n       [ 0.45175201,  0.28254406],\n       [ 0.54549838,  0.88836635],\n       [ 0.47181816,  0.00779049],\n       [ 0.54847328,  0.85539265],\n       [ 0.71816954,  0.3869482 ],\n       [ 0.37179806,  0.63543765],\n       [ 0.35783155,  0.19404793],\n       [ 0.34569207,  0.54612435]])\n\nIn [6]: df.as_matrix()\nOut[6]: \narray([[ 0.8985716 ,  0.32065559],\n       [ 0.07843058,  0.3407808 ],\n       [ 0.45175201,  0.28254406],\n       [ 0.54549838,  0.88836635],\n       [ 0.47181816,  0.00779049],\n       [ 0.54847328,  0.85539265],\n       [ 0.71816954,  0.3869482 ],\n       [ 0.37179806,  0.63543765],\n       [ 0.35783155,  0.19404793],\n       [ 0.34569207,  0.54612435]])\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13788364",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13788364",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13788364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzg4MzY0",
    "user": {
      "login": "kijoshua",
      "id": 324730,
      "node_id": "MDQ6VXNlcjMyNDczMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/324730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kijoshua",
      "html_url": "https://github.com/kijoshua",
      "followers_url": "https://api.github.com/users/kijoshua/followers",
      "following_url": "https://api.github.com/users/kijoshua/following{/other_user}",
      "gists_url": "https://api.github.com/users/kijoshua/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kijoshua/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kijoshua/subscriptions",
      "organizations_url": "https://api.github.com/users/kijoshua/orgs",
      "repos_url": "https://api.github.com/users/kijoshua/repos",
      "events_url": "https://api.github.com/users/kijoshua/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kijoshua/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-19T18:19:43Z",
    "updated_at": "2013-02-19T18:19:43Z",
    "author_association": "NONE",
    "body": "The issue is that the index isn't explicit.  I expect that any changes to address this wouldn't save typing or add convenience, but instead would make it harder to write incorrect code regarding the index.\n\nFor your example and my example below, there is nothing explicit about the importance of the index.  It just doesn't come up in the code for many situations.  Again from the documentation: \"Label-based indexing with integer axis labels is a thorny topic. It has been discussed heavily on mailing lists and among various members of the scientific Python community.\"  Aside from it just being a debate over which approach is better, I think it also reflects a big source of confusion for users.  DataFrames work mostly by label, but then as_matrix and such gives access to things that work location-based.  Making the index aspect of pandas more visible would hopefully make it less confusing.\n\n```\nimport numpy as np\nimport pandas as pd\nfrom matplotlib.mlab import find\n\n# some complicated external method that has more general uses\n# is (and should be) oblivious to Pandas\ndef naive_A_checker(As):\n    return find(As>0.4)\n\n# some complicated external method that has more general uses\n# is (and should be) oblivious to Pandas\ndef naive_AB_checker(ABs):\n    return find(ABs[:,0]>ABs[:,1])\n\n\ndf = pd.DataFrame(np.random.rand(10,3),columns=['A','B','C'])\n\ngood_A = naive_A_checker(df.A)\ndf = df.ix[good_A,:]\n# this first filtering will work correctly, but only because Pandas supplies a index\n# automatically that happens to match location-based indexing.\nassert((df.A>0.4).all())\n\ngood_AB = naive_AB_checker(df.ix[:,['A','B']].as_matrix())\ndf = df.ix[good_AB,:]\n# this one will filter out unintended rows, but it'll happen silently.  Even the assertion\n# might not be triggered,\nassert((df.A>df.B).all()) # assertion error possible\n'''\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAssertionError\n'''\n```\n\nAnother idea is to require an explicit handling of the index in the DataFrame constructor.  Even if users can still call with index=None, at least they've explicitly acknowledged the index exists.  That's the same logic behind my earlier suggestion where as_matrix would return a tuple.  Rather than implicitly requiring that the user go get the index themselves, explicitly provide it and let them discard it if they actually don't need it for whatever reason.\n\n```\n# were the index actually involved, more likely to discover the mistake.\n# a tuple is rather distinct from just an array of data.\nalternative_as_matrix = (df.index,df.ix[:,['A','B']].as_matrix())\ngood_AB = naive_AB_checker(alternative_as_matrix)\n'''\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"<stdin>\", line 2, in naive_AB_checker\nTypeError: tuple indices must be integers, not tuple\n'''\n\n# and a required index parameter would help make the index clearly relevant to users.\n# df = pd.DataFrame(np.random.rand(10,3),columns=['A','B','C'],index=None)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13793264",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13793264",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13793264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzkzMjY0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-19T19:35:54Z",
    "updated_at": "2013-02-19T19:35:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am still puzzled why you are doing `as_matrix()`?\n\nyou can just pass the frame directly to whatever you are doing\n(and if you can't for some reason, that might be a bug)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13835202",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13835202",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13835202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM1MjAy",
    "user": {
      "login": "kijoshua",
      "id": 324730,
      "node_id": "MDQ6VXNlcjMyNDczMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/324730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kijoshua",
      "html_url": "https://github.com/kijoshua",
      "followers_url": "https://api.github.com/users/kijoshua/followers",
      "following_url": "https://api.github.com/users/kijoshua/following{/other_user}",
      "gists_url": "https://api.github.com/users/kijoshua/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kijoshua/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kijoshua/subscriptions",
      "organizations_url": "https://api.github.com/users/kijoshua/orgs",
      "repos_url": "https://api.github.com/users/kijoshua/repos",
      "events_url": "https://api.github.com/users/kijoshua/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kijoshua/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T14:47:49Z",
    "updated_at": "2013-02-20T14:47:49Z",
    "author_association": "NONE",
    "body": "```\nnaive_AB_checker(df[['A','B']])\n```\n\nthat already doesn't work by just passing a frame.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13836120",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13836120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13836120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM2MTIw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T15:05:42Z",
    "updated_at": "2013-02-20T15:05:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "you need to use `ix` here\n\ntry defining this function like this\n\n```\ndef naive_AB_checker(ABs):\n    return find(ABs.ix[:,0]>ABs.ix[:,1])\n\nIn [35]: naive_AB_checker(df[['A','B']])\nOut[35]: array([0, 2, 5, 7, 9])\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13836330",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13836330",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13836330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM2MzMw",
    "user": {
      "login": "kijoshua",
      "id": 324730,
      "node_id": "MDQ6VXNlcjMyNDczMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/324730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kijoshua",
      "html_url": "https://github.com/kijoshua",
      "followers_url": "https://api.github.com/users/kijoshua/followers",
      "following_url": "https://api.github.com/users/kijoshua/following{/other_user}",
      "gists_url": "https://api.github.com/users/kijoshua/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kijoshua/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kijoshua/subscriptions",
      "organizations_url": "https://api.github.com/users/kijoshua/orgs",
      "repos_url": "https://api.github.com/users/kijoshua/repos",
      "events_url": "https://api.github.com/users/kijoshua/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kijoshua/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T15:09:37Z",
    "updated_at": "2013-02-20T15:09:37Z",
    "author_association": "NONE",
    "body": "as indicated in my example originally, those functions don't and shouldn't have any awareness of Pandas.  I have plenty of code that has nothing to do with Pandas, and I'm not going to break everything else that uses it.  \n\nAnyways, this is missing the point.  Explicit vs implicit.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13836703",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13836703",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13836703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM2NzAz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T15:16:26Z",
    "updated_at": "2013-02-20T15:16:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is quite explicit, it is not clear what you mean when you do `ABs[:,0]`\n\nare you referencing a column by location (I think that is what you are doing), but\nthis will raise an error because '0' is not a column (only 'A' and 'B') are\n\nif you want these function to _behave_ like numpy arrays then you basically have 2 choices:\n\n1) `df.values` gives you the numpy array\n2) use integer indicies on both axes\n\nIf you pass around a pandas object, then it acts like a pandas object, not like something else.\n\nHow exactly do you find this not _explicit_?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13837381",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13837381",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13837381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM3Mzgx",
    "user": {
      "login": "kijoshua",
      "id": 324730,
      "node_id": "MDQ6VXNlcjMyNDczMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/324730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kijoshua",
      "html_url": "https://github.com/kijoshua",
      "followers_url": "https://api.github.com/users/kijoshua/followers",
      "following_url": "https://api.github.com/users/kijoshua/following{/other_user}",
      "gists_url": "https://api.github.com/users/kijoshua/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kijoshua/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kijoshua/subscriptions",
      "organizations_url": "https://api.github.com/users/kijoshua/orgs",
      "repos_url": "https://api.github.com/users/kijoshua/repos",
      "events_url": "https://api.github.com/users/kijoshua/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kijoshua/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T15:28:13Z",
    "updated_at": "2013-02-20T15:28:13Z",
    "author_association": "NONE",
    "body": "naive_AB_checker expects a 2 dimensional matrix with 2 columns.  The only reason I ever passed it a frame was because you asked about when just passing a frame wouldn't work...\n\n.values makes more sense than .as_matrix.  So another way to look at this is that as_matrix is a poor name.  And the broader problem being that \"index\" is rarely explicit in any of the code.  If you look at my first example, and try to imagine that you dind't already understand how pandas works... isn't the result unexpected?  And isn't it dangerous, because it often doesn't produce an error (and your data is just messed up silently)?  Note that index doesn't appear once in the code.  And .ix might actually be assumed to be some abbreviation for index, even though that isn't how it actually works.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13837575",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13837575",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13837575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM3NTc1",
    "user": {
      "login": "kijoshua",
      "id": 324730,
      "node_id": "MDQ6VXNlcjMyNDczMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/324730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kijoshua",
      "html_url": "https://github.com/kijoshua",
      "followers_url": "https://api.github.com/users/kijoshua/followers",
      "following_url": "https://api.github.com/users/kijoshua/following{/other_user}",
      "gists_url": "https://api.github.com/users/kijoshua/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kijoshua/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kijoshua/subscriptions",
      "organizations_url": "https://api.github.com/users/kijoshua/orgs",
      "repos_url": "https://api.github.com/users/kijoshua/repos",
      "events_url": "https://api.github.com/users/kijoshua/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kijoshua/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T15:31:09Z",
    "updated_at": "2013-02-20T15:31:09Z",
    "author_association": "NONE",
    "body": "Ah, to address you question more directly, the non-explicit part is how Pandas acts.  Is it location indexed or not?  Without reading the manual, I say the logical assumption is that it is location indexed except in special situations (which is wrong, and causes silent bugs in user code).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13838329",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13838329",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13838329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM4MzI5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T15:43:55Z",
    "updated_at": "2013-02-20T15:43:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is a complicated answer - partial discussion below\n\nhttps://github.com/pydata/pandas/issues/1052\n\npandas tries to be smart about this, it is _mainly_ label based, but does support integer indexing/slicing\nit is **not** a pure matrix\n\nindexing inherently built into all objects; if you don't need it, don't use it, and just deal with numpy\nand pure location based indexing. \n\n`.values` **IS** `as_matrix()`; values just calls it. \nI guess it could be called `as_numpy_array` to be _more_ explicit\n\npandas offers a lot of power, so it behooves the user to read up on how to do things\n\n_with great power comes great responsiblity_\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13839547",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13839547",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13839547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM5NTQ3",
    "user": {
      "login": "kijoshua",
      "id": 324730,
      "node_id": "MDQ6VXNlcjMyNDczMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/324730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kijoshua",
      "html_url": "https://github.com/kijoshua",
      "followers_url": "https://api.github.com/users/kijoshua/followers",
      "following_url": "https://api.github.com/users/kijoshua/following{/other_user}",
      "gists_url": "https://api.github.com/users/kijoshua/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kijoshua/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kijoshua/subscriptions",
      "organizations_url": "https://api.github.com/users/kijoshua/orgs",
      "repos_url": "https://api.github.com/users/kijoshua/repos",
      "events_url": "https://api.github.com/users/kijoshua/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kijoshua/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T16:03:59Z",
    "updated_at": "2013-02-20T16:03:59Z",
    "author_association": "NONE",
    "body": "The documentation is really long and detailed, has good organization and plenty of examples.  The downside is you can't expect any user to read the whole thing and get every nuance.  Most will at best skim through it and pick out the parts that seem relevant to their current efforts.  Important things like indexing behavior need to be made forefront, either by adjusting the documentation or even better making it more explicit in the code itself.\n\nI often have no use for an index, so it was easy to get started and skim through the documentation while entirely missing the fact that the index matters and is being used even if I don't touch it.  \n\nMore zen...\n\nReadability counts\nErrors should never pass silently.\nUnless explicitly silenced.\nThere should be one-- and preferably only one --obvious way to do it.\nIf the implementation is hard to explain, it's a bad idea.\n\nI think my idea for the constructor requiring an explicit index gets at the issue better.  Given that the indexing scheme is a confusion aspect for new users, just make the index a more prominent feature wherever possible.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13839975",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13839975",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13839975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM5OTc1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T16:10:31Z",
    "updated_at": "2013-02-20T16:10:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "and how exactly would you do that? require passing of the index to the DataFrame constructor?\n\nthat seems cumbersome, much better to have the constructor figure it out from the passed (or not passed)\ndata if it can\n\nnot sure how any of the zen points you mentioned actually apply here...except:\n\n_There should be one-- and preferably only one --obvious way to do it._\n\nthis is true, but if you force users to be explicity _ALL_ of the time then its worth discarding\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13840230",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13840230",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13840230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODQwMjMw",
    "user": {
      "login": "kijoshua",
      "id": 324730,
      "node_id": "MDQ6VXNlcjMyNDczMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/324730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kijoshua",
      "html_url": "https://github.com/kijoshua",
      "followers_url": "https://api.github.com/users/kijoshua/followers",
      "following_url": "https://api.github.com/users/kijoshua/following{/other_user}",
      "gists_url": "https://api.github.com/users/kijoshua/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kijoshua/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kijoshua/subscriptions",
      "organizations_url": "https://api.github.com/users/kijoshua/orgs",
      "repos_url": "https://api.github.com/users/kijoshua/repos",
      "events_url": "https://api.github.com/users/kijoshua/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kijoshua/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T16:14:39Z",
    "updated_at": "2013-02-20T16:14:39Z",
    "author_association": "NONE",
    "body": "currently, the default for index is None.  I'm saying that you could just not give it a default value.  Let the user specify None explicitly to get the current behavior of an automatic index.  Or give it a default value of [] which errors in the constructor.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13840484",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13840484",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13840484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODQwNDg0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T16:19:03Z",
    "updated_at": "2013-02-20T16:19:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is not the philosophy of pandas; if you want to do that, you are free to use numpy\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13840740",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13840740",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13840740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODQwNzQw",
    "user": {
      "login": "kijoshua",
      "id": 324730,
      "node_id": "MDQ6VXNlcjMyNDczMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/324730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kijoshua",
      "html_url": "https://github.com/kijoshua",
      "followers_url": "https://api.github.com/users/kijoshua/followers",
      "following_url": "https://api.github.com/users/kijoshua/following{/other_user}",
      "gists_url": "https://api.github.com/users/kijoshua/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kijoshua/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kijoshua/subscriptions",
      "organizations_url": "https://api.github.com/users/kijoshua/orgs",
      "repos_url": "https://api.github.com/users/kijoshua/repos",
      "events_url": "https://api.github.com/users/kijoshua/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kijoshua/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T16:23:00Z",
    "updated_at": "2013-02-20T16:23:00Z",
    "author_association": "NONE",
    "body": "??  the philosophy of pandas is to implicitly deal with the index behavior even when it confuses users?  I think we must have misunderstood eachother at some point.  I'm fine with pandas' behavior.  I like pandas (and that's the only reason I'm spending my own time making feedback that will hopefully improve pandas).  I think that the index behavior should be made more explicit.\n\nWhat's wrong with the small change to the constructor?  And how did it imply that I wanted to change the philosophy of pandas in any way?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13841293",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13841293",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13841293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODQxMjkz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T16:32:23Z",
    "updated_at": "2013-02-20T16:32:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "we are having an academic discussion :)\n\nI think forcing users to explicity pass an index is a burden (even if None)\n\nOften your data has enough info in order to construct an index if you dont pass one. This prevents errors.\n\nIf you then want to _explicity_ change the index, do so.\n\nthe following yield _exactly_ the same, but I think second is clearly undesirable, \nthird is what you are proposing, but is really unecessary and a burden\n\n```\nIn [2]: df = pd.DataFrame(dict( A = [1,2,3], B = 1 ))\n\nIn [3]: df\nOut[3]: \n   A  B\n0  1  1\n1  2  1\n2  3  1\n\nIn [4]: df = pd.DataFrame(dict( A = [1,2,3], B = 1 ), index = [1,2,3])\n\nIn [5]: df\nOut[5]: \n   A  B\n1  1  1\n2  2  1\n3  3  1\n\nIn [6]: df = pd.DataFrame(dict( A = [1,2,3], B = 1 ), index = None)\n\nIn [7]: df\nOut[7]: \n   A  B\n0  1  1\n1  2  1\n2  3  1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13841797",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13841797",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13841797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODQxNzk3",
    "user": {
      "login": "kijoshua",
      "id": 324730,
      "node_id": "MDQ6VXNlcjMyNDczMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/324730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kijoshua",
      "html_url": "https://github.com/kijoshua",
      "followers_url": "https://api.github.com/users/kijoshua/followers",
      "following_url": "https://api.github.com/users/kijoshua/following{/other_user}",
      "gists_url": "https://api.github.com/users/kijoshua/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kijoshua/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kijoshua/subscriptions",
      "organizations_url": "https://api.github.com/users/kijoshua/orgs",
      "repos_url": "https://api.github.com/users/kijoshua/repos",
      "events_url": "https://api.github.com/users/kijoshua/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kijoshua/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T16:40:43Z",
    "updated_at": "2013-02-20T16:40:43Z",
    "author_association": "NONE",
    "body": "Fair enough then.  I think that 3's small burden is well worth the benefit to readability, and how clear things are to new users.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13843006",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13843006",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13843006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODQzMDA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T16:58:50Z",
    "updated_at": "2013-02-20T16:58:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@wesm care to chime in?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13843441",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13843441",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13843441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODQzNDQx",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-20T17:05:45Z",
    "updated_at": "2013-02-20T17:06:21Z",
    "author_association": "MEMBER",
    "body": "My view is that how you interact with raw data inside a DataFrame (such as that obtained from `df.values` or `df.as_matrix()`) is \"not our problem\" as typically that data is being passed off to a library like SciPy or statsmodels or sklearn. pandas made a very early decision to depart from NumPy indexing semantics in the interest of being practical and consistent across the library in its treatment of axis labelling; to change that or add extra burden in the index specification would be extremely disruptive to the user base. I would personally find it very annoying to have to be explicit about the index. It's important to recognize that pandas is a \"relational data tool\" and not an \"array library\". I'd be interested in having a very rigid index-less table object that is more array-like in its semantics, but DataFrame in its current incarnation is too far down that other path. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13888638",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-13888638",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 13888638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODg4NjM4",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-21T13:34:31Z",
    "updated_at": "2013-02-21T13:34:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kijoshua You _can_ be explicit about passing `index=None` in each time you construct a DataFrame, if you think this will make your code more readable then you can force yourself and your team to do it. As @jreback points out, this is the current behaviour.\n\nI certainly don't relish the thought of going back through my code to add `index=None` to every DataFrame construction, and there's many others out there who've already written a lot of production code this would break. To be honest, the current behaviour is clear after creating your first DataFrame, having to pass index=None each time would be just another thing to remember and confuse new users (as well as being semantically dubious).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14688238",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2900#issuecomment-14688238",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2900",
    "id": 14688238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Njg4MjM4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-10T20:10:09Z",
    "updated_at": "2013-03-10T20:10:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kijoshua is this closable?\n"
  }
]
