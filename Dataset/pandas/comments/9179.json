[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68542977",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9179#issuecomment-68542977",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9179",
    "id": 68542977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTQyOTc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-02T17:11:08Z",
    "updated_at": "2015-01-02T17:11:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@wavexx are you proposing including `tabview` as an included library with pandas? or something else?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68556777",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9179#issuecomment-68556777",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9179",
    "id": 68556777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTU2Nzc3",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-02T19:56:49Z",
    "updated_at": "2015-01-02T19:56:49Z",
    "author_association": "NONE",
    "body": "On 01/02/2015 06:11 PM, jreback wrote:\n\n> @wavexx are you proposing including `tabview` as an included\n> library with pandas? or something else?\n\nI'm open for ideas.\n\nIt could start with a \"view()\" method that tries to import tabview, with\ntabview being only a suggested package.\n\nBut we could add a submodule if having it as part of the package is a\ndesirable thing. I would be a bit against a flat copy, since I'd like\nthe development of tabview to continue also as a stand-alone viewer.\n\nI would also love to have some sort of flexible viewer mechanism such as\nthe \"PAGER\" environment variable, but for data. Setting TABVIEW=tabview\ncould allow other tools to emerge. One example would be an X11\nalternative if DISPLAY is set. The only downside is that it would\nrequire saving/parsing the data again, so the built-in tabview is still\ndesiderable when TABVIEW is empty.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68696387",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9179#issuecomment-68696387",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9179",
    "id": 68696387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Njk2Mzg3",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T11:26:43Z",
    "updated_at": "2015-01-05T15:27:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello,\n\na quite ugly solution is available here\n\n```\nimport pandas as pd\nimport tabview.tabview as t\ndef view(data):\n    if isinstance(data, pd.DataFrame) or isinstance(data, pd.Series):\n        result = t.view(data.reset_index().transpose().reset_index().transpose().values)\n        return(result)\n    elif isinstance(data, pd.Panel):\n        result = t.view(panel.to_frame().reset_index().transpose().reset_index().transpose().values)\n        return(result)\n    else:\n        raise(NotImplementedError)\n\nimport pandas.io.data as web\nimport datetime\nstart = datetime.datetime(2010, 1, 1)\nend = datetime.datetime(2013, 1, 27)\npanel = web.DataReader([\"F\", \"YHOO\"], 'yahoo', start, end) # Panel\ndf = panel.loc[:,:,\"F\"] # DataFrame\nts=df['Adj Close'] # Series\n\nview(df)\n\nview(ts)\n\nview(panel)\nview(panel.transpose(0,2,1))\n```\n\nIt \"works\" with Panel, DataFrame and Series. I hope it can helps.\n\nKind regards\n\nSÃ©bastien\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68700368",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9179#issuecomment-68700368",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9179",
    "id": 68700368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzAwMzY4",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T12:13:07Z",
    "updated_at": "2015-01-05T12:13:07Z",
    "author_association": "NONE",
    "body": "Why the double transpose?\n\n```\nwith df.reset_index() as df:\n    t.view([df.columns.tolist()] + df.values.tolist()\n```\n\nseems to work.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68701819",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9179#issuecomment-68701819",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9179",
    "id": 68701819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzAxODE5",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T12:29:33Z",
    "updated_at": "2015-01-05T12:32:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Because of the double `reset_index()` (one for index, one for columns)\n\nsee http://stackoverflow.com/questions/14189695/reset-index-for-dataframe-columns\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68702374",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9179#issuecomment-68702374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9179",
    "id": 68702374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzAyMzc0",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T12:35:35Z",
    "updated_at": "2015-01-05T12:35:35Z",
    "author_association": "NONE",
    "body": "On 01/05/2015 01:29 PM, scls19fr wrote:\n\n> Because of the double `reset_index()` (one for index, one for\n> columns)\n\nI guessed, but why not just concatenating the columns separately as I\ndid in the last example?\n\nIf Series are the reason, I would put a specialized view() method in its\nclass.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68703136",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9179#issuecomment-68703136",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9179",
    "id": 68703136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzAzMTM2",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T12:44:03Z",
    "updated_at": "2015-01-05T12:46:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I thought that converting numpy array to list and concatenating 2 python lists wasn't a great idea. But `timeit` could show us that.\n\n```\nIn [10]: %timeit df.reset_index().transpose().reset_index().transpose().values\n100 loops, best of 3: 6.81 ms per loop\n\nIn [11]: %timeit [df.reset_index().columns.tolist()] + df.reset_index().values.tolist()\n100 loops, best of 3: 5.21 ms per loop\n```\n\nand I was wrong (it should even be better with \"with\")\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68746113",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9179#issuecomment-68746113",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9179",
    "id": 68746113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzQ2MTEz",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T17:49:45Z",
    "updated_at": "2015-01-05T17:57:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wonder if on Pandas side we shouldn't have only\n\n```\nimport tabview.tabview as t\nt.view(self)\n```\n\ninside Pandas DataFrame, Series and Panel `view()` methods\nand some update of `tabview` to support Pandas inputs like https://github.com/firecat53/tabview/pull/59\n\nor\n\n```\npd.view(self)\n```\n\nwith\n\n```\npd.view = tabview.tabview.view\n```\n\nso it will be easier if other Pandas Panel / DataFrame / Series pagers appears\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68756130",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9179#issuecomment-68756130",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9179",
    "id": 68756130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzU2MTMw",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T18:53:57Z",
    "updated_at": "2015-01-05T18:54:19Z",
    "author_association": "NONE",
    "body": "The idea of having a generic view method that could be overridden is good. Specialized methods in DataFrame/Series/Panel could reuse it in an uniform way.\n\nThis would solve the problem of having a _generic_ data visualizer.\n\nStill, pandas should come with a built-in/working method in order for the feature to catch on.\nI'm hoping to fix a couple of issues with tabview in order to be used as a module and then re-visit the proposal in these terms.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/87428721",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9179#issuecomment-87428721",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9179",
    "id": 87428721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDI4NzIx",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T15:40:01Z",
    "updated_at": "2015-03-29T15:40:01Z",
    "author_association": "NONE",
    "body": "We're pulling in native support for Pandas into tabview itself, so I consider this no longer an issue for Pandas.\n"
  }
]
