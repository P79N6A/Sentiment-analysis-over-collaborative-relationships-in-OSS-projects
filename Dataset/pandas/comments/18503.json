[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347008102",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18503#issuecomment-347008102",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18503",
    "id": 347008102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAwODEwMg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-26T13:18:12Z",
    "updated_at": "2017-11-26T13:18:24Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18503?src=pr&el=h1) Report\n> Merging [#18503](https://codecov.io/gh/pandas-dev/pandas/pull/18503?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/38f41e64f4b8a0479f8835022af5e7343ccf8498?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18503/graphs/tree.svg?token=eZ4WkYLtcO&width=650&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/18503?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18503      +/-   ##\n==========================================\n+ Coverage    91.3%   91.32%   +0.02%     \n==========================================\n  Files         163      163              \n  Lines       49781    49781              \n==========================================\n+ Hits        45451    45463      +12     \n+ Misses       4330     4318      -12\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.12% <ø> (+0.02%)` | :arrow_up: |\n| #single | `40.72% <ø> (ø)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18503?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/18503?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `65.25% <0%> (+1.81%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18503?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18503?src=pr&el=footer). Last update [38f41e6...c5125af](https://codecov.io/gh/pandas-dev/pandas/pull/18503?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347014848",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18503#issuecomment-347014848",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18503",
    "id": 347014848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAxNDg0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T15:08:47Z",
    "updated_at": "2017-11-26T15:08:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "also, can you run a full asv and compare to 0.21.0, see how doing so far."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347016936",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18503#issuecomment-347016936",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18503",
    "id": 347016936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAxNjkzNg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T15:38:28Z",
    "updated_at": "2017-11-26T15:38:28Z",
    "author_association": "MEMBER",
    "body": "> also, can you run a full asv and compare to 0.21.0, see how doing so far.\r\n\r\nWill do.  You uh, might want to get a second opinion though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347020581",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18503#issuecomment-347020581",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18503",
    "id": 347020581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAyMDU4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T16:28:05Z",
    "updated_at": "2017-11-26T16:28:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mroeschke can u run vs 0.21 and show significant diffs?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347068481",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18503#issuecomment-347068481",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18503",
    "id": 347068481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzA2ODQ4MQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T03:15:48Z",
    "updated_at": "2017-11-27T08:04:33Z",
    "author_association": "MEMBER",
    "body": "I think 81372093f1fdc0c07e4b45ba0f47b is the right commit hash for 0.21 [ref](https://github.com/pandas-dev/pandas/commit/81372093f1fdc0c07e4b45ba0f47b0360fabd405)\r\n\r\n(Note: After = v0.21, Before = master)\r\n```\r\n$ asv continuous -f 1.1 upstream/master 81372093f1fdc0c07e4b45ba0f47b\r\n\r\nbefore           after         ratio\r\n     [982ad07c]       [81372093]\r\n!           23.1s           failed      n/a  gil.nogil_datetime_fields.time_datetime_to_period\r\n!     8.86±0.02ms           failed      n/a  timeseries.ToDatetime.time_cache_false_with_dup_seconds_and_unit\r\n!     3.80±0.01ms           failed      n/a  timeseries.ToDatetime.time_cache_false_with_dup_string_dates\r\n!     3.99±0.01ms           failed      n/a  timeseries.ToDatetime.time_cache_false_with_dup_string_dates_and_format\r\n!       417±0.1ms           failed      n/a  timeseries.ToDatetime.time_cache_false_with_dup_string_tzoffset_dates\r\n!     7.96±0.02ms           failed      n/a  timeseries.ToDatetime.time_cache_true_with_dup_seconds_and_unit\r\n!     5.38±0.03ms           failed      n/a  timeseries.ToDatetime.time_cache_true_with_dup_string_dates\r\n!     5.42±0.03ms           failed      n/a  timeseries.ToDatetime.time_cache_true_with_dup_string_dates_and_format\r\n!     5.76±0.03ms           failed      n/a  timeseries.ToDatetime.time_cache_true_with_dup_string_tzoffset_dates\r\n+     5.81±0.01ms            2.83s   487.49  timedelta.DatetimeAccessor.time_timedelta_dt_accessor_seconds\r\n+     5.78±0.01ms            2.80s   484.24  timedelta.DatetimeAccessor.time_timedelta_dt_accessor_nanoseconds\r\n+     5.82±0.01ms            2.82s   484.08  timedelta.DatetimeAccessor.time_timedelta_dt_accessor_days\r\n+     5.85±0.02ms            2.78s   475.79  timedelta.DatetimeAccessor.time_timedelta_dt_accessor_microseconds\r\n+         119±4ms            12.7s   106.88  plotting.Plotting.time_series_plot\r\n+       234±0.9ms            12.4s    53.18  plotting.Plotting.time_frame_plot\r\n+          56.8ms            749ms    13.19  timeseries.DatetimeIndex.time_to_date\r\n+       549±0.6μs      2.32±0.01ms     4.23  series_methods.series_map_series.time_series_map_series\r\n+           7.20s            24.8s     3.45  offset.ApplyIndex.time_apply_index(<BusinessYearEnd: month=12>)\r\n+           7.51s            25.3s     3.37  offset.ApplyIndex.time_apply_series(<BusinessYearEnd: month=12>)\r\n+     67.0±0.07μs        183±0.1μs     2.73  offset.SemiMonthOffset.time_end_apply\r\n+      66.2±0.1μs        177±0.2μs     2.67  offset.SemiMonthOffset.time_begin_apply\r\n+         312±1ns          809±6ns     2.59  timedelta.TimedeltaProperties.time_timedelta_seconds\r\n+      80.3±0.2μs        190±0.4μs     2.36  offset.SemiMonthOffset.time_end_incr\r\n+      80.0±0.1μs        189±0.4μs     2.36  offset.SemiMonthOffset.time_begin_incr\r\n+      89.9±0.1μs          205±2μs     2.28  offset.SemiMonthOffset.time_begin_decr\r\n+      88.8±0.1μs        201±0.5μs     2.26  offset.SemiMonthOffset.time_end_incr_n\r\n+      89.0±0.2μs        201±0.3μs     2.25  offset.SemiMonthOffset.time_begin_incr_n\r\n+      54.0±0.1ms       121±0.05ms     2.25  categoricals.Constructor.time_all_nan\r\n+      91.8±0.1μs        205±0.3μs     2.24  offset.SemiMonthOffset.time_end_decr\r\n+      97.9±0.2μs        213±0.8μs     2.18  offset.SemiMonthOffset.time_end_decr_n\r\n+       319±0.3ns          693±1ns     2.18  timedelta.TimedeltaProperties.time_timedelta_days\r\n+      99.5±0.2μs        216±0.3μs     2.17  offset.SemiMonthOffset.time_begin_decr_n\r\n+       313±0.2ns          674±2ns     2.15  timedelta.TimedeltaProperties.time_timedelta_microseconds\r\n+     2.18±0.01ms      4.10±0.02ms     1.88  series_methods.series_map_dict.time_series_map_dict\r\n+           7.21s            13.6s     1.88  offset.ApplyIndex.time_apply_index(<BusinessMonthBegin>)\r\n+           7.26s            13.6s     1.88  offset.ApplyIndex.time_apply_index(<BusinessQuarterBegin: startingMonth=3>)\r\n+           7.23s            13.5s     1.86  offset.ApplyIndex.time_apply_index(<BusinessMonthEnd>)\r\n+           7.49s            13.9s     1.85  offset.ApplyIndex.time_apply_series(<BusinessMonthBegin>)\r\n+           7.24s            13.3s     1.84  offset.ApplyIndex.time_apply_index(<BusinessYearBegin: month=1>)\r\n+           7.51s            13.7s     1.83  offset.ApplyIndex.time_apply_series(<BusinessYearBegin: month=1>)\r\n+           7.60s            13.8s     1.82  offset.ApplyIndex.time_apply_series(<BusinessQuarterBegin: startingMonth=3>)\r\n+       266±0.4μs          481±4μs     1.81  offset.CBMonthEnd.time_custom_bmonthend_incr\r\n+           7.59s            13.7s     1.80  offset.ApplyIndex.time_apply_series(<BusinessMonthEnd>)\r\n+       300±0.8μs        527±0.5μs     1.76  offset.CBMonthEnd.time_custom_bmonthend_incr_n\r\n+       312±0.6μs        539±0.8μs     1.73  offset.CBMonthEnd.time_custom_bmonthend_decr_n\r\n+           7.57s            11.3s     1.50  offset.ApplyIndex.time_apply_series(<BusinessQuarterEnd: startingMonth=3>)\r\n+           7.29s            10.8s     1.48  offset.ApplyIndex.time_apply_index(<BusinessQuarterEnd: startingMonth=3>)\r\n+        609±30ns          864±2ns     1.42  indexing.IndexerLookup.time_lookup_iloc\r\n+        614±20ns          861±6ns     1.40  indexing.IndexerLookup.time_lookup_loc\r\n+      68.1±0.2μs       92.1±0.4μs     1.35  period.PeriodUnaryMethods.time_now('M')\r\n+     3.61±0.01ms      4.85±0.02ms     1.34  indexing.PanelIndexing.time_subset\r\n+       112±0.5ms        143±0.8ms     1.27  io_sql.WriteSQLTypes.time_string_sqlalchemy\r\n+     1.13±0.04ms      1.43±0.04ms     1.26  series_methods.series_nlargest2.time_series_nlargest2\r\n+       123±0.7ms        154±0.5ms     1.25  io_sql.WriteSQLTypes.time_float_sqlalchemy\r\n+       348±0.8μs          435±1μs     1.25  offset.CBMonthBegin.time_custom_bmonthbegin_decr_n\r\n+     1.11±0.04ms      1.38±0.03ms     1.24  series_methods.series_nsmallest2.time_series_nsmallest2\r\n+     11.5±0.08ms      14.2±0.04ms     1.24  groupby.groupby_nth.time_groupby_series_nth_any\r\n+       423±0.6μs        521±0.8μs     1.23  offset.CBMonthBegin.time_custom_bmonthbegin_incr_n\r\n+         191±1ms          234±1ms     1.23  plotting.TimeseriesPlotting.time_plot_regular_compat\r\n+         197±2ms          240±4ms     1.22  plotting.TimeseriesPlotting.time_plot_irregular\r\n+     17.0±0.01μs      20.7±0.03μs     1.22  index_object.Float64.time_slice_indexer_basic\r\n+     3.09±0.03μs      3.73±0.01μs     1.21  period.PeriodProperties.time_month('M')\r\n+     6.33±0.03ms      7.63±0.02ms     1.21  groupby.groupby_nth.time_groupby_series_nth_none\r\n+      13.8±0.1ms      16.6±0.04ms     1.21  timeseries.DatetimeAccessor.time_dt_accessor_normalize\r\n+     3.07±0.02μs      3.66±0.02μs     1.19  period.PeriodProperties.time_dayofweek('M')\r\n+     1.65±0.06ms      1.96±0.04ms     1.18  series_methods.series_nlargest1.time_series_nlargest1\r\n+          16.8μs      19.7±0.04μs     1.17  index_object.Float64.time_slice_indexer_even\r\n+     16.7±0.01μs      19.5±0.02μs     1.17  index_object.StringIndex.time_slice_indexer_even\r\n+       219±0.7ms          256±1ms     1.17  io_sql.WriteSQL.time_sqlalchemy\r\n+       178±0.3μs          206±1μs     1.16  period.PeriodUnaryMethods.time_now('min')\r\n+       119±0.4μs        138±0.4μs     1.16  period.PeriodUnaryMethods.time_asfreq('M')\r\n+       118±0.1μs        137±0.3μs     1.16  period.PeriodUnaryMethods.time_asfreq('min')\r\n+     17.2±0.01μs      19.9±0.02μs     1.15  index_object.StringIndex.time_slice_indexer_basic\r\n+     3.25±0.02μs      3.75±0.03μs     1.15  period.PeriodProperties.time_year('M')\r\n+     3.09±0.01μs      3.55±0.01μs     1.15  period.PeriodProperties.time_hour('M')\r\n+     3.19±0.02μs      3.65±0.01μs     1.14  period.PeriodProperties.time_dayofyear('M')\r\n+         201±2ms        230±0.8ms     1.14  io_sql.WriteSQLTypes.time_datetime_sqlalchemy\r\n+     3.03±0.02μs      3.45±0.01μs     1.14  period.PeriodProperties.time_dayofweek('min')\r\n+          1.05ms           1.19ms     1.14  timeseries.DatetimeIndex.time_reset_index_tz\r\n+     3.17±0.02μs      3.61±0.02μs     1.14  period.PeriodProperties.time_second('M')\r\n+     3.19±0.02μs      3.63±0.01μs     1.14  period.PeriodProperties.time_year('min')\r\n+        297±10μs         338±10μs     1.14  series_methods.series_constructor_no_data_datetime_index.time_series_constructor_no_data_datetime_index\r\n+       316±0.5ms          359±2ms     1.14  groupby.groupby_indices.time_groupby_indices\r\n+       221±0.3μs        251±0.6μs     1.13  period.PeriodProperties.time_end_time('min')\r\n+     3.18±0.03μs      3.60±0.03μs     1.13  period.PeriodProperties.time_hour('min')\r\n+           3.15s            3.56s     1.13  packers.SQL.time_write_sql\r\n+     28.5±0.09μs      32.2±0.05μs     1.13  period.Indexing.time_shallow_copy\r\n+       221±0.5μs          249±1μs     1.13  period.PeriodProperties.time_end_time('M')\r\n+        1.42±0ms      1.60±0.01ms     1.13  categoricals.Repr.time_rendering\r\n+     3.17±0.01μs      3.57±0.02μs     1.13  period.PeriodProperties.time_month('min')\r\n+       207±0.3μs        233±0.7μs     1.13  period.PeriodUnaryMethods.time_to_timestamp('min')\r\n+       207±0.5μs        233±0.4μs     1.12  period.PeriodProperties.time_start_time('min')\r\n+       208±0.3μs        233±0.8μs     1.12  period.PeriodProperties.time_start_time('M')\r\n+     3.37±0.02μs      3.78±0.02μs     1.12  period.PeriodProperties.time_daysinmonth('min')\r\n+     3.19±0.02μs      3.57±0.02μs     1.12  period.PeriodProperties.time_week('min')\r\n+     3.18±0.01μs      3.54±0.01μs     1.11  period.PeriodProperties.time_second('min')\r\n+     3.19±0.02μs      3.56±0.01μs     1.11  period.PeriodProperties.time_day('M')\r\n+     3.41±0.02μs      3.79±0.01μs     1.11  period.PeriodProperties.time_daysinmonth('M')\r\n+     3.20±0.02μs      3.55±0.02μs     1.11  period.PeriodProperties.time_dayofyear('min')\r\n+       129±0.7ms          142±2ms     1.11  gil.NoGilGroupby.time_max_2\r\n+     3.15±0.01μs      3.47±0.01μs     1.10  period.PeriodProperties.time_quarter('min')\r\n+       166±0.7μs        183±0.8μs     1.10  indexing.StringIndexing.time_getitem_pos_slice\r\n+     3.27±0.02μs      3.60±0.01μs     1.10  period.PeriodProperties.time_qyear('M')\r\n-     7.53±0.05ms      6.83±0.04ms     0.91  frame_methods.Interpolate.time_interpolate_some_good_infer\r\n-     6.11±0.03ms      5.53±0.02ms     0.91  strings.StringMethods.time_slice\r\n-        48.6±1ms         43.4±1ms     0.89  groupby.groupby_pivot_table.time_groupby_pivot_table\r\n-     3.34±0.03ms      2.98±0.01ms     0.89  io_bench.read_parse_dates_iso8601.time_read_parse_dates_iso8601\r\n-      12.5±0.1ms       11.0±0.1ms     0.88  strings.StringMethods.time_pad\r\n-     6.87±0.03ms      5.94±0.01ms     0.87  timeseries.ResampleDataFrame.time_max_numpy\r\n-           718ms        620±0.2ms     0.86  groupby.Groups.time_groupby_groups('object_small')\r\n-     6.86±0.03ms      5.86±0.01ms     0.85  timeseries.ResampleDataFrame.time_max_string\r\n-      28.1±0.2ms       23.8±0.2ms     0.85  groupby.groupby_agg_multi.time_groupby_multi_different_numpy_functions\r\n-      51.9±0.3ms         43.9±1ms     0.85  frame_methods.frame_fancy_lookup.time_frame_fancy_lookup_all\r\n-      29.8±0.2ms       25.0±0.1ms     0.84  reindex.Duplicates.time_frame_drop_dups\r\n-     28.2±0.03ms      23.6±0.08ms     0.84  groupby.groupby_agg_multi.time_groupby_multi_different_functions\r\n-      65.5±0.2μs       54.6±0.1μs     0.83  offset.YearBegin.time_timeseries_year_incr\r\n-        1.36±0ms         1.12±0ms     0.82  indexing.DataFrameIndexing.time_boolean_rows_object\r\n-      88.3±0.3ms       72.2±0.3ms     0.82  groupby.groupby_period.time_groupby_sum\r\n-      7.32±0.3ms      5.90±0.02ms     0.81  timeseries.ResampleDataFrame.time_min_string\r\n-      53.1±0.2μs       42.5±0.2μs     0.80  offset.YearBegin.time_timeseries_year_apply\r\n-      7.39±0.1ms      5.88±0.01ms     0.80  timeseries.ResampleDataFrame.time_min_numpy\r\n-     2.88±0.04ms      2.26±0.03ms     0.79  groupby.GroupBySuite.time_sem('int', 100)\r\n-      42.3±0.2ms       33.0±0.4ms     0.78  binary_ops.Timeseries.time_timestamp_ops_diff(None)\r\n-      59.7±0.1ms       44.6±0.2ms     0.75  packers.MsgPack.time_write_msgpack\r\n-      44.5±0.5ms       33.0±0.2ms     0.74  categoricals.Constructor.time_regular\r\n-       206±0.8μs        150±0.2μs     0.73  indexing.Int64Indexing.time_ix_slice\r\n-       166±0.3μs        111±0.4μs     0.67  indexing.Int64Indexing.time_ix_scalar\r\n-     58.4±0.08μs      38.6±0.02μs     0.66  timestamp.TimestampProperties.time_is_month_end(<DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>)\r\n-     58.5±0.03μs       38.4±0.3μs     0.66  timestamp.TimestampProperties.time_is_year_end(<DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>)\r\n-      58.2±0.2μs      38.1±0.03μs     0.65  timestamp.TimestampProperties.time_is_leap_year(<DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>)\r\n-      58.5±0.1μs      38.1±0.08μs     0.65  timestamp.TimestampProperties.time_is_year_start(<DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>)\r\n-     54.8±0.05μs      35.7±0.05μs     0.65  timestamp.TimestampProperties.time_week(<DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>)\r\n-     54.1±0.05μs      35.2±0.07μs     0.65  timestamp.TimestampProperties.time_dayofyear(<DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>)\r\n-     54.1±0.06μs      35.1±0.06μs     0.65  timestamp.TimestampProperties.time_days_in_month(<DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>)\r\n-      58.4±0.1μs       37.9±0.1μs     0.65  timestamp.TimestampProperties.time_is_quarter_end(<DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>)\r\n-      59.1±0.2μs      38.3±0.07μs     0.65  timestamp.TimestampProperties.time_is_quarter_start(<DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>)\r\n-     58.5±0.07μs      37.8±0.05μs     0.65  timestamp.TimestampProperties.time_is_month_start(<DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>)\r\n-      55.0±0.1μs      35.2±0.03μs     0.64  timestamp.TimestampProperties.time_quarter(<DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>)\r\n-     14.8±0.03ms      8.06±0.04ms     0.54  period.Algorithms.time_value_counts('series')\r\n-     12.5±0.04ms      6.47±0.01ms     0.52  period.Algorithms.time_drop_duplicates('series')\r\n-      69.0±0.2μs      19.6±0.06μs     0.28  indexing.DataFrameIndexing.time_get_value_ix\r\n-      46.3±0.5μs          924±5ns     0.02  indexing.IndexerLookup.time_lookup_ix\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347167230",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18503#issuecomment-347167230",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18503",
    "id": 347167230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzE2NzIzMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T12:26:21Z",
    "updated_at": "2017-11-27T12:26:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "can u do the reverse of this; so regressions are > 1 (and current master)\r\n\r\nand open a new issue - i think a couple of regressions here"
  }
]
