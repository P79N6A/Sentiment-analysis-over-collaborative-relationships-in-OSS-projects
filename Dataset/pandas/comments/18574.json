[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348157008",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18574#issuecomment-348157008",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18574",
    "id": 348157008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODE1NzAwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-30T11:06:53Z",
    "updated_at": "2017-11-30T11:06:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\n`Categoricals` can only take on only a limited, and usually fixed, number\r\nof possible values (`categories`). In contrast to statistical categorical\r\nvariables, a `Categorical` might have an order, but numerical operations\r\n(additions, divisions, ...) are not possible.\r\n\r\nAll values of the `Categorical` are either in `categories` or `np.nan`.\r\nAssigning values outside of `categories` will raise a `ValueError`. Order\r\nis defined by the order of the `categories`, not lexical order of the\r\nvalues.\r\n```\r\n\r\nthis is by-definition; nan is not included in ``categories``. ``.codes`` is an implementation detail and ``.unique()`` returns the categorical itself."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348157862",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18574#issuecomment-348157862",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18574",
    "id": 348157862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODE1Nzg2Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-30T11:10:32Z",
    "updated_at": "2017-11-30T11:10:32Z",
    "author_association": "MEMBER",
    "body": "See also https://pandas.pydata.org/pandas-docs/stable/categorical.html#missing-data"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348283472",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18574#issuecomment-348283472",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18574",
    "id": 348283472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODI4MzQ3Mg==",
    "user": {
      "login": "kodonnell",
      "id": 8204904,
      "node_id": "MDQ6VXNlcjgyMDQ5MDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8204904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kodonnell",
      "html_url": "https://github.com/kodonnell",
      "followers_url": "https://api.github.com/users/kodonnell/followers",
      "following_url": "https://api.github.com/users/kodonnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/kodonnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kodonnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kodonnell/subscriptions",
      "organizations_url": "https://api.github.com/users/kodonnell/orgs",
      "repos_url": "https://api.github.com/users/kodonnell/repos",
      "events_url": "https://api.github.com/users/kodonnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kodonnell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-30T18:49:26Z",
    "updated_at": "2017-11-30T18:49:26Z",
    "author_association": "NONE",
    "body": "OK, fair enough, though I'd tend to think including it would be the more 'obvious' behaviour. (Does the user lose anything by doing this?)\r\n\r\nUsing `unique` is fine, but a lot slower - I'll submit a separate issue on this (if there isn't one already)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348313851",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18574#issuecomment-348313851",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18574",
    "id": 348313851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODMxMzg1MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-30T20:38:46Z",
    "updated_at": "2017-11-30T20:38:46Z",
    "author_association": "MEMBER",
    "body": "> I'd tend to think including it would be the more 'obvious' behaviour. (Does the user lose anything by doing this?)\r\n\r\nBut it would make the implementation much harder + the fact that your categories can change when missing values are introduced can also be confusing.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348314981",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18574#issuecomment-348314981",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18574",
    "id": 348314981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODMxNDk4MQ==",
    "user": {
      "login": "kodonnell",
      "id": 8204904,
      "node_id": "MDQ6VXNlcjgyMDQ5MDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8204904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kodonnell",
      "html_url": "https://github.com/kodonnell",
      "followers_url": "https://api.github.com/users/kodonnell/followers",
      "following_url": "https://api.github.com/users/kodonnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/kodonnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kodonnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kodonnell/subscriptions",
      "organizations_url": "https://api.github.com/users/kodonnell/orgs",
      "repos_url": "https://api.github.com/users/kodonnell/repos",
      "events_url": "https://api.github.com/users/kodonnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kodonnell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-30T20:43:25Z",
    "updated_at": "2017-11-30T20:43:25Z",
    "author_association": "NONE",
    "body": "> the fact that your categories can change when missing values are introduced can also be confusing\r\n\r\nThat's new to me - I thought categories couldn't change.\r\n\r\n> But it would make the implementation much harder\r\n\r\nBut 'does the *user* lose anything'? Anyway, since I'm not proposing a PR to do all the hard work, we can probably leave this unless others revive it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348694499",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18574#issuecomment-348694499",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18574",
    "id": 348694499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY5NDQ5OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T14:09:36Z",
    "updated_at": "2017-12-02T14:09:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's often convenient, even in user-land, to know that the codes range from `[0, n_categories)`, and that missing values are always coded as `-1`. Included `NaN` in the categories breaks that assumption."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348748879",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18574#issuecomment-348748879",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18574",
    "id": 348748879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODc0ODg3OQ==",
    "user": {
      "login": "kodonnell",
      "id": 8204904,
      "node_id": "MDQ6VXNlcjgyMDQ5MDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8204904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kodonnell",
      "html_url": "https://github.com/kodonnell",
      "followers_url": "https://api.github.com/users/kodonnell/followers",
      "following_url": "https://api.github.com/users/kodonnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/kodonnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kodonnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kodonnell/subscriptions",
      "organizations_url": "https://api.github.com/users/kodonnell/orgs",
      "repos_url": "https://api.github.com/users/kodonnell/repos",
      "events_url": "https://api.github.com/users/kodonnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kodonnell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-03T08:31:45Z",
    "updated_at": "2017-12-03T08:31:45Z",
    "author_association": "NONE",
    "body": "@TomAugspurger - I'm not sure I follow. Knowing codes range from `[0, n_categories)` (excluding `-1: NaN`), is the same as knowing codes range from `[-1, n_categories)`, including `NaN`. For my use cases, I'd prefer to have `NaN`, since then I don't have to continually check for `NaN`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348805491",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18574#issuecomment-348805491",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18574",
    "id": 348805491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODgwNTQ5MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-03T18:57:57Z",
    "updated_at": "2017-12-03T18:57:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Including nan in the categories would mess up the relationship between position in categories and codes then.\n\nTo be clear, it’s not unreasonable to want to include Nan in the categories. But we’ve chosen not to.\n\nGet Outlook for iOS<https://aka.ms/o0ukef>\n________________________________\nFrom: kodonnell <notifications@github.com>\nSent: Sunday, December 3, 2017 2:31:48 AM\nTo: pandas-dev/pandas\nCc: Tom Augspurger; Mention\nSubject: Re: [pandas-dev/pandas] NaN not included in col.cat.categories (#18574)\n\n\n@TomAugspurger<https://github.com/tomaugspurger> - I'm not sure I follow. Knowing codes range from [0, n_categories) (excluding -1: NaN), is the same as knowing codes range from [-1, n_categories), including NaN. For my use cases, I'd prefer to have NaN, since then I don't have to continually check for NaN.\n\n—\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://github.com/pandas-dev/pandas/issues/18574#issuecomment-348748879>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABQHInj_ywx1-4YGvSd_uO8NqyC2UCJLks5s8lx0gaJpZM4Qv8vv>.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348809334",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18574#issuecomment-348809334",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18574",
    "id": 348809334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODgwOTMzNA==",
    "user": {
      "login": "kodonnell",
      "id": 8204904,
      "node_id": "MDQ6VXNlcjgyMDQ5MDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8204904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kodonnell",
      "html_url": "https://github.com/kodonnell",
      "followers_url": "https://api.github.com/users/kodonnell/followers",
      "following_url": "https://api.github.com/users/kodonnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/kodonnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kodonnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kodonnell/subscriptions",
      "organizations_url": "https://api.github.com/users/kodonnell/orgs",
      "repos_url": "https://api.github.com/users/kodonnell/repos",
      "events_url": "https://api.github.com/users/kodonnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kodonnell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-03T19:55:06Z",
    "updated_at": "2017-12-03T19:55:06Z",
    "author_association": "NONE",
    "body": "> Including nan in the categories would mess up the relationship between position in categories and codes then.\r\n\r\nFor me it's messed up already, as `len(codes) != len(categories)`. One could always add an `include_nan` option so we could get both, if required.\r\n\r\n> To be clear, it’s not unreasonable to want to include Nan in the categories. But we’ve chosen not to.\r\n\r\nFair enough. Will leave this one be, unless revived.\r\n"
  }
]
