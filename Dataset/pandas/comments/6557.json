[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36799907",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6557#issuecomment-36799907",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6557",
    "id": 36799907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzk5OTA3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:03:15Z",
    "updated_at": "2014-03-05T22:03:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is just related to the indexing that was fixed in regards to the non-daily caching (don't remember the issue).\n\nIn master this looks fine.\n\n```\nIn [1]: from pandas import *\n\nIn [2]: rows = 2000\n\nIn [3]: a = Series(np.random.random(rows), index=DatetimeIndex(start='1/1/1900', periods=rows, freq='M'))\n\nIn [4]: b = Series(np.random.random(rows), index=DatetimeIndex(start='1/1/1900', periods=rows, freq='M'))\n\nIn [5]: \n\nIn [5]: a.ix[-500:] = float('nan')\n\nIn [6]: \n\nIn [6]: %timeit a.combine_first(b)\n1000 loops, best of 3: 382 ﾵs per loop\n\nIn [7]: a = Series(np.random.random(rows), index=DatetimeIndex(start='1/1/1900', periods=rows, freq='D'))\n\nIn [8]: b = Series(np.random.random(rows), index=DatetimeIndex(start='1/1/1900', periods=rows, freq='D'))\n\nIn [9]: a.ix[-500:] = float('nan')\n\nIn [10]: %timeit a.combine_first(b)\n1000 loops, best of 3: 339 ﾵs per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36800366",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6557#issuecomment-36800366",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6557",
    "id": 36800366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAwMzY2",
    "user": {
      "login": "qwhelan",
      "id": 440095,
      "node_id": "MDQ6VXNlcjQ0MDA5NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/440095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qwhelan",
      "html_url": "https://github.com/qwhelan",
      "followers_url": "https://api.github.com/users/qwhelan/followers",
      "following_url": "https://api.github.com/users/qwhelan/following{/other_user}",
      "gists_url": "https://api.github.com/users/qwhelan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qwhelan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qwhelan/subscriptions",
      "organizations_url": "https://api.github.com/users/qwhelan/orgs",
      "repos_url": "https://api.github.com/users/qwhelan/repos",
      "events_url": "https://api.github.com/users/qwhelan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qwhelan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:07:42Z",
    "updated_at": "2014-03-05T22:07:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry about that, looks like my kernel didn't pick up the build from HEAD.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36805988",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6557#issuecomment-36805988",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6557",
    "id": 36805988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODA1OTg4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T23:04:34Z",
    "updated_at": "2014-03-05T23:04:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "np keep reporting!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36811199",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6557#issuecomment-36811199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6557",
    "id": 36811199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODExMTk5",
    "user": {
      "login": "qwhelan",
      "id": 440095,
      "node_id": "MDQ6VXNlcjQ0MDA5NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/440095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qwhelan",
      "html_url": "https://github.com/qwhelan",
      "followers_url": "https://api.github.com/users/qwhelan/followers",
      "following_url": "https://api.github.com/users/qwhelan/following{/other_user}",
      "gists_url": "https://api.github.com/users/qwhelan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qwhelan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qwhelan/subscriptions",
      "organizations_url": "https://api.github.com/users/qwhelan/orgs",
      "repos_url": "https://api.github.com/users/qwhelan/repos",
      "events_url": "https://api.github.com/users/qwhelan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qwhelan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-06T00:14:59Z",
    "updated_at": "2014-03-06T00:14:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, so the performance regression does exist _but_ I don't think it's a bug.\n\nThis test case reproduces the regression (yes, it's ugly and un-idiomatic):\n\n``` python\nfrom pandas.tseries.offsets import MonthEnd\nfrom pandas import *\nrows = 2000\n\ns = Series(np.random.random(rows), index=DatetimeIndex(start='1/1/1900', periods=rows, freq='M'))\n\ns = s.reindex(s.index.append(DatetimeIndex([s.index[-1] + MonthEnd()])))\n\na = s.copy()\n\ns.ix[-500:] = float('nan')\n\nprint s.index._can_fast_union(s.index)\nprint s.index.offset\n\n%timeit s.combine_first(a)\n```\n\nUnlike `.union`, `.append` here doesn't preserve `index.offset` in HEAD or v0.12.0, which causes `s.index._can_fast_union(s.index)` to be `False` in both cases.\n\nHowever, if you do `%lprun -f DatetimeIndex.union s.combine_first(a)` with v0.12.0 after running the above, you get this:\n\n```\n   844         1          273    273.0      0.2          if this._can_fast_union(other):\n   845         1           83     83.0      0.1              return this._fast_union(other)\n   846                                                   else:\n   847                                                       result = Index.union(this, other)\n   848                                                       if isinstance(result, DatetimeIndex):\n   849                                                           result.tz = this.tz\n   850                                                           if result.freq is None:\n   851                                                               result.offset = to_offset(result.inferred_freq)\n   852                                                       return result\n```\n\nwhich is just incorrect given `_can_fast_union` was `False` above. So v0.12.0 was incorrectly taking the fast path here... sometimes...\n\nIf you put `print this.offset, other.offset` in `DatetimeIndex.union`, you'd expect to get `None None` as the result. Here's what you get with v0.12.0:\n\n```\n%timeit s.combine_first(a)\nNone None\n<1 MonthEnd> <1 MonthEnd>\n<1 MonthEnd> <1 MonthEnd>\n<1 MonthEnd> <1 MonthEnd>\n<1 MonthEnd> <1 MonthEnd>\n<1 MonthEnd> <1 MonthEnd>\n<1 MonthEnd> <1 MonthEnd>\n<1 MonthEnd> <1 MonthEnd>\n<1 MonthEnd> <1 MonthEnd>\n```\n\nMy guess is that a caching mechanism went and inferred the frequency and set `.offset` on the cached copy.\n\nSo performance regression isn't a bug, though `.append` may want to preserve/infer `.offset` where possible.\n"
  }
]
