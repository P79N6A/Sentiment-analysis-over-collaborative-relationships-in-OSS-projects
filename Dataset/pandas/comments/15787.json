[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288819082",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288819082",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288819082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODgxOTA4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T18:32:31Z",
    "updated_at": "2017-03-23T18:32:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> In python, datatypes generally don't matter. A dataframe is a dataframe, but as shown in the example \r\n\r\nnot sure what you mean"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288820086",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288820086",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288820086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODgyMDA4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T18:36:10Z",
    "updated_at": "2017-03-23T18:36:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you update your example to show exactly what is the problem. you seems to be doing lots of stuff, but its not clear what the issue is (if any).\r\n\r\nand show a constructed frame that matches your expectations. IOW if this *is* a bug, then ultimately we need an example that we can do something like\r\n\r\n```\r\nfrom pandas.util import testing as tm\r\nresult = .....\r\nexpected = DataFrame(....)\r\ntm.assert_frame_equal(result, expected)\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288823437",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288823437",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288823437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODgyMzQzNw==",
    "user": {
      "login": "seth-a",
      "id": 12515766,
      "node_id": "MDQ6VXNlcjEyNTE1NzY2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12515766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-a",
      "html_url": "https://github.com/seth-a",
      "followers_url": "https://api.github.com/users/seth-a/followers",
      "following_url": "https://api.github.com/users/seth-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-a/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-a/orgs",
      "repos_url": "https://api.github.com/users/seth-a/repos",
      "events_url": "https://api.github.com/users/seth-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T18:47:50Z",
    "updated_at": "2017-03-23T18:47:50Z",
    "author_association": "NONE",
    "body": "The label of the second column of the index is being changed to None.  Run the example, uncomment the line that says \"Uncomment for example of correct behavior\" to see what is expected.  Yes, the example is doing lots of \"stuff\", but that's what it takes to reproduce the bug."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288826102",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288826102",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288826102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODgyNjEwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T18:57:22Z",
    "updated_at": "2017-03-23T18:57:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@seth-a can you post an expected result and then run your example and post. the more information you show and the more obvious the quicker this will get looked at."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288832646",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288832646",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288832646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODgzMjY0Ng==",
    "user": {
      "login": "seth-a",
      "id": 12515766,
      "node_id": "MDQ6VXNlcjEyNTE1NzY2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12515766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-a",
      "html_url": "https://github.com/seth-a",
      "followers_url": "https://api.github.com/users/seth-a/followers",
      "following_url": "https://api.github.com/users/seth-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-a/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-a/orgs",
      "repos_url": "https://api.github.com/users/seth-a/repos",
      "events_url": "https://api.github.com/users/seth-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T19:21:42Z",
    "updated_at": "2017-03-23T19:21:42Z",
    "author_association": "NONE",
    "body": "I've updated the formatting in the expected results section, are you looking for something beyond what is there?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288840586",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288840586",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288840586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg0MDU4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T19:53:00Z",
    "updated_at": "2017-03-23T19:53:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "slightly modified.\r\n\r\n```\r\nIn [1]: import numpy as np\r\n   ...: import pandas as pd\r\n   ...: \r\n   ...: res = []\r\n   ...: for _ in range(2):\r\n   ...:     res1 = []\r\n   ...:     # Only occurs when dataframe is used with measure\r\n   ...:     data = np.zeros((30, 21))\r\n   ...:     idx = np.random.randint(0, 5, 30)\r\n   ...:     df = pd.DataFrame(data, index=idx).loc[3]\r\n   ...:     #df = pd.DataFrame(data[::5, :])  # Uncomment for example of correct behavior\r\n   ...: \r\n   ...:     df2 = pd.DataFrame(sum(data.dot(df.T)))\r\n   ...:     df2.index.name = 'level2'\r\n   ...:     res1.append(df2)\r\n   ...:     tmp = pd.concat(res1, keys=[1], names=['level1'])\r\n   ...: \r\n   ...:     res.append(tmp)\r\n   ...: final = pd.concat(res, keys=[i for i in range(2)])\r\n   ...: \r\n\r\nIn [2]: final\r\nOut[2]: \r\n                   0\r\n  level1 level2     \r\n0 1      0       0.0\r\n         1       0.0\r\n         2       0.0\r\n         3       0.0\r\n         4       0.0\r\n1 1      0       0.0\r\n         1       0.0\r\n         2       0.0\r\n```\r\n\r\nThe the issue is that you are concatting 2 MultiIndexes with names of ``['level1', None]``\r\nyour original ``res`` is this:\r\n\r\n```\r\nIn [2]: res\r\nOut[2]: \r\n[            0\r\n level1       \r\n 1      0  0.0\r\n        1  0.0\r\n        2  0.0\r\n        3  0.0,             0\r\n level1       \r\n 1      0  0.0\r\n        1  0.0\r\n        2  0.0\r\n        3  0.0\r\n        4  0.0\r\n        5  0.0\r\n        6  0.0\r\n        7  0.0]\r\n```\r\n\r\nso you are expecting the passed in named to 'automatically' figure out that the *new* names are the existing first level name plus the passed in names?\r\n\r\nhow does that make sense?\r\n\r\nI suppose that its actually an error to pass in *any* names if you have ``MultiIndex`` that you are concatting in the first place. So would take a PR for that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288840929",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288840929",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288840929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg0MDkyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T19:54:13Z",
    "updated_at": "2017-03-23T19:54:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI [here](https://github.com/pandas-dev/pandas/blob/master/pandas/tools/concat.py#L517) is the code for creating the concatted index. It is slightly non-trivial!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288866050",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288866050",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288866050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg2NjA1MA==",
    "user": {
      "login": "seth-a",
      "id": 12515766,
      "node_id": "MDQ6VXNlcjEyNTE1NzY2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12515766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-a",
      "html_url": "https://github.com/seth-a",
      "followers_url": "https://api.github.com/users/seth-a/followers",
      "following_url": "https://api.github.com/users/seth-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-a/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-a/orgs",
      "repos_url": "https://api.github.com/users/seth-a/repos",
      "events_url": "https://api.github.com/users/seth-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T21:29:41Z",
    "updated_at": "2017-03-23T21:29:41Z",
    "author_association": "NONE",
    "body": "Hmm, clearly you've missed the point. In fact pandas does automatically figure out that the new names should be the existing index plus the passed in names, as can be shown by un-commenting the line in my example saying \"Uncomment for example of correct behavior\".    Here's an example that may make it a little easier to see,\r\n\r\n```python\r\n    def concat_multiple(bug=False):\r\n        \"\"\"\r\n        Make a mess with DataFrames, if bug is True change behavior so that bug shows\r\n        \"\"\"\r\n        res = []\r\n        for _ in range(2):\r\n            res1 = []\r\n            # Only occurs when dataframe is used with measure\r\n            data = np.zeros((30, 21))\r\n            idx = np.random.randint(0, 5, 30)\r\n\r\n            df = pd.DataFrame(data, index=idx)\r\n            # Bug is right here.  Same dataframe, just different method of indexing\r\n            # This is the only thing that changes\r\n            if bug:\r\n                df = df.loc[3]\r\n\r\n            res1.append(pd.DataFrame(sum(data.dot(df.T))))\r\n            tmp = pd.concat(res1, keys=[1], names=['level1'])\r\n\r\n            res.append(tmp)\r\n        return pd.concat(res, keys=[i for i in range(2)], names=['level2'])\r\n\r\n    res_bad = concat_multiple(bug=True)   # Results when bug is present\r\n    res_good = concat_multiple(bug=False) # Results when bug is not present\r\n\r\n    print(\"These indexes should be the same\")\r\n    print (res_bad.index.names)\r\n    print (res_good.index.names)\r\n    if (res_bad.index.names != res_good.index.names):\r\n        print(\"But they aren't\")\r\n\r\n    # It gets worse, let's run it several times and see how often the bug is present\r\n    good = [concat_multiple(bug=True).index.names ==res_good.index.names for _ in range(20)]\r\n    print(\"pandas is broken  {}% of the time\".format((1-sum(good)/len(good))*100 ))\r\n```\r\nAnd here's the output:\r\n```\r\nThese indexes should be the same\r\n['level2', None, None]\r\n['level2', 'level1', None]\r\nBut they aren't\r\npandas is broken  95.0% of the time\r\n```\r\nAnd when a bug like this exists you don't need to link to the source code to convince me it's a mess."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288866818",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288866818",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288866818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg2NjgxOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T21:32:39Z",
    "updated_at": "2017-03-23T21:32:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@seth-a \r\n\r\nthis is really really odd thing to do: of course this doesn't work\r\n``idx = np.random.randint(0, 5, 30)``\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288867667",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288867667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288867667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg2NzY2Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T21:35:50Z",
    "updated_at": "2017-03-23T21:36:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "you are creating a non-unique index. sure it might be a bug, but you are by-definition making this non-deterministic. ``df.loc[3]`` depends on the uniqueness of the result\r\n\r\n```\r\nIn [18]: df = DataFrame({'A': [1,2,3]},index=[1,2,3])\r\n\r\nIn [19]: df.loc[3]\r\nOut[19]: \r\nA    3\r\nName: 3, dtype: int64\r\n\r\nIn [20]: df = DataFrame({'A': [1,2,3]},index=[1,3,3])\r\n\r\nIn [21]: df.loc[3]\r\nOut[21]: \r\n   A\r\n3  2\r\n3  3\r\n\r\n```\r\n\r\nthese have different shapes so different things happen."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288868025",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288868025",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288868025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg2ODAyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T21:37:11Z",
    "updated_at": "2017-03-23T21:37:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "It *may* be a bug, likely around concatting non-unique MI's. But please produce an example that is deterministic within these parameters. (or at the very least use a random seed)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288868098",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288868098",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288868098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg2ODA5OA==",
    "user": {
      "login": "seth-a",
      "id": 12515766,
      "node_id": "MDQ6VXNlcjEyNTE1NzY2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12515766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-a",
      "html_url": "https://github.com/seth-a",
      "followers_url": "https://api.github.com/users/seth-a/followers",
      "following_url": "https://api.github.com/users/seth-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-a/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-a/orgs",
      "repos_url": "https://api.github.com/users/seth-a/repos",
      "events_url": "https://api.github.com/users/seth-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T21:37:29Z",
    "updated_at": "2017-03-23T21:37:29Z",
    "author_association": "NONE",
    "body": "What do you mean it doesn't work?  Is it throwing an error?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288868450",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288868450",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288868450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg2ODQ1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T21:38:56Z",
    "updated_at": "2017-03-23T21:38:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "please read my responses."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288869469",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288869469",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288869469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg2OTQ2OQ==",
    "user": {
      "login": "seth-a",
      "id": 12515766,
      "node_id": "MDQ6VXNlcjEyNTE1NzY2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12515766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-a",
      "html_url": "https://github.com/seth-a",
      "followers_url": "https://api.github.com/users/seth-a/followers",
      "following_url": "https://api.github.com/users/seth-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-a/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-a/orgs",
      "repos_url": "https://api.github.com/users/seth-a/repos",
      "events_url": "https://api.github.com/users/seth-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T21:42:45Z",
    "updated_at": "2017-03-23T21:42:45Z",
    "author_association": "NONE",
    "body": "Ah, so you mean the code works fine, it just isn't a typical use case.  Ok, here's the code using a seed so the behavior is 100% deterministic, aside from whatever pandas is doing:\r\n\r\n```\r\n    def concat_multiple(bug=False):\r\n        \"\"\"\r\n        Make a mess with DataFrames, if bug is True change behavior so that bug shows\r\n        \"\"\"\r\n        np.random.seed(5)\r\n        res = []\r\n        for _ in range(2):\r\n            res1 = []\r\n            # Only occurs when dataframe is used with measure\r\n            data = np.zeros((30, 21))\r\n            idx = np.random.randint(0, 5, 30)\r\n\r\n            df = pd.DataFrame(data, index=idx)\r\n            # Bug is right here.  Same dataframe, just different method of indexing\r\n            if bug:\r\n                df = df.loc[3]\r\n\r\n            res1.append(pd.DataFrame(sum(data.dot(df.T))))\r\n            tmp = pd.concat(res1, keys=[1], names=['level1'])\r\n\r\n            res.append(tmp)\r\n        return pd.concat(res, keys=[i for i in range(2)], names=['level2'])\r\n\r\n    res_bad = concat_multiple(bug=True)   # Results when bug is present\r\n    res_good = concat_multiple(bug=False) # Results when bug is not present\r\n\r\n    print(\"These indexes should be the same\")\r\n    print (res_bad.index.names)\r\n    print (res_good.index.names)\r\n    if (res_bad.index.names != res_good.index.names):\r\n        print(\"But they aren't\")\r\n\r\n    # It gets worse, let's run it several times and see how often the bug is present\r\n    good = [concat_multiple(bug=True).index.names ==res_good.index.names for _ in range(20)]\r\n    print(\"pandas is broken  {}% of the time\".format((1-sum(good)/len(good))*100 ))\r\n```\r\nOutput:\r\n```\r\nThese indexes should be the same\r\n['level2', None, None]\r\n['level2', 'level1', None]\r\nBut they aren't\r\npandas is broken  100.0% of the time\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288869968",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288869968",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288869968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg2OTk2OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T21:44:34Z",
    "updated_at": "2017-03-23T21:44:34Z",
    "author_association": "MEMBER",
    "body": "Much easier reproducible example:\r\n\r\n```\r\nIn [32]: df = pd.DataFrame({'col': range(5)}, index=pd.MultiIndex.from_product([[1], range(5)], names=['level1', None]\r\n    ...: ))\r\n\r\nIn [33]: df\r\nOut[33]:\r\n          col\r\nlevel1\r\n1      0    0\r\n       1    1\r\n       2    2\r\n       3    3\r\n       4    4\r\n\r\nIn [34]: pd.concat([df, df], keys=[1, 2], names=['level2'])\r\nOut[34]:\r\n                 col\r\nlevel2 level1\r\n1      1      0    0\r\n              1    1\r\n              2    2\r\n              3    3\r\n              4    4\r\n2      1      0    0\r\n              1    1\r\n              2    2\r\n              3    3\r\n              4    4\r\n\r\nIn [35]: pd.concat([df, df[:3]], keys=[1, 2], names=['level2'])\r\nOut[35]:\r\n            col\r\nlevel2\r\n1      1 0    0\r\n         1    1\r\n         2    2\r\n         3    3\r\n         4    4\r\n2      1 0    0\r\n         1    1\r\n         2    2      \r\n```\r\n\r\n@seth-a your example is really complex, which makes it much harder to see what is exactly going on, or what you think is wrong. \r\nBut the above in any case clearly shows a bug."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288870347",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288870347",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288870347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg3MDM0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T21:46:11Z",
    "updated_at": "2017-03-23T21:46:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @jorisvandenbossche \r\n\r\nyeah the name handling is prob not very robust."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288871142",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288871142",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288871142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg3MTE0Mg==",
    "user": {
      "login": "seth-a",
      "id": 12515766,
      "node_id": "MDQ6VXNlcjEyNTE1NzY2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12515766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-a",
      "html_url": "https://github.com/seth-a",
      "followers_url": "https://api.github.com/users/seth-a/followers",
      "following_url": "https://api.github.com/users/seth-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-a/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-a/orgs",
      "repos_url": "https://api.github.com/users/seth-a/repos",
      "events_url": "https://api.github.com/users/seth-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T21:49:22Z",
    "updated_at": "2017-03-23T21:49:22Z",
    "author_association": "NONE",
    "body": " @jorisvandenbossche, It's a much-simplified version of a script I was working on.  I'm glad you found an easier case where it appears."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288871611",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15787#issuecomment-288871611",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15787",
    "id": 288871611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg3MTYxMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T21:51:12Z",
    "updated_at": "2017-03-23T21:51:12Z",
    "author_association": "MEMBER",
    "body": "Additional observation: it only occurs when the name of the other level is None, otherwise it works fine:\r\n\r\n```\r\nIn [40]: df = pd.DataFrame({'col': range(5)}, index=pd.MultiIndex.from_product([[1], range(5)], names=['level1', 'leve\r\n    ...: l3']))\r\n\r\nIn [41]: pd.concat([df, df[:3]], keys=[1, 2], names=['level2'])\r\nOut[41]:\r\n                      col\r\nlevel2 level1 level3\r\n1      1      0         0\r\n              1         1\r\n              2         2\r\n              3         3\r\n              4         4\r\n2      1      0         0\r\n              1         1\r\n              2         2\r\n```\r\n\r\nand (as already see in the example above) only when the index values are not exactly the same (different length in the example above, or different values of same length also triggers it)"
  }
]
