[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303836235",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16481#issuecomment-303836235",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16481",
    "id": 303836235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgzNjIzNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T20:05:22Z",
    "updated_at": "2017-05-24T20:05:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some are caused by not using raw strings in regexes. Here's a (hopefully complete list)\r\n\r\n```\r\n# run ag '\\bre\\.\\w+\\([\"|\\']' pandas/**.py | uniq\r\npandas/compat/numpy/__init__.py:27:_tz_regex = re.compile('[+-]0000$')\r\npandas/core/config.py:451:        if not bool(re.match('^' + tokenize.Name + '$', k)):\r\npandas/core/dtypes/dtypes.py:180:    _match = re.compile(\"(datetime64|M8)\\[(?P<unit>.+), (?P<tz>.+)\\]\")\r\npandas/core/dtypes/dtypes.py:292:    _match = re.compile(\"(P|p)eriod\\[(?P<freq>.+)\\]\")\r\npandas/core/dtypes/dtypes.py:410:    _match = re.compile(\"(I|i)nterval\\[(?P<subtype>.+)\\]\")\r\npandas/core/dtypes/inference.py:195:    >>> is_re(re.compile(\".*\"))\r\npandas/io/formats/excel.py:265:            'shadow': (bool(re.search('^[^#(]*[1-9]',\r\npandas/io/parsers.py:2011:            self.nonnum = re.compile('[^-^0-9^%s]+' % self.decimal)\r\npandas/io/parsers.py:2013:            self.nonnum = re.compile('[^-^0-9^%s^%s]+' % (self.thousands,\r\npandas/io/parsers.py:3251:        pattern = re.compile('([^%s]+)' % delimiters)\r\npandas/io/parsers.py:386:        encoding = re.sub('_', '-', encoding).lower()\r\npandas/io/pytables.py:1771:                m = re.search(\"values_block_(\\d+)\", name)\r\npandas/io/pytables.py:4268:    _re_levels = re.compile(\"^level_\\d+$\")\r\npandas/io/sql.py:1305:        pat = re.compile('\\s+')\r\npandas/plotting/_core.py:202:                if re.match('^[a-z]+?', s) is not None:\r\npandas/plotting/_core.py:639:        nocolor_style = style is None or re.match('[a-z]+', style) is None\r\npandas/tests/dtypes/test_inference.py:208:    passes = re.compile('ad'),\r\npandas/tests/dtypes/test_inference.py:219:    passes = (r'a', u('x'), r'asdf', re.compile('adsf'), u(r'\\u2233\\s*'),\r\npandas/tests/indexes/test_multi.py:376:        mutable_regex = re.compile('does not support mutable operations')\r\npandas/tests/indexes/test_multi.py:554:        both_re = re.compile('Must pass both levels and labels')\r\npandas/tests/indexes/test_multi.py:566:        length_error = re.compile('>= length of level')\r\npandas/tests/io/formats/test_format.py:1036:        nmatches = len(re.findall('dtype', str_rep))\r\npandas/tests/io/parser/common.py:1256:        expected = self.read_csv(StringIO(re.sub('[ ]+', ',', data)),\r\npandas/tests/io/test_html.py:348:                             match=re.compile(re.compile('Florida')),\r\npandas/tests/sparse/test_array.py:144:        errmsg = re.compile(\"bounds\")\r\npandas/tests/test_base.py:45:    mutable_regex = re.compile('does not support mutable operations')\r\npandas/tests/test_strings.py:528:        pat = re.compile('[a-z][A-Z]{2}')\r\npandas/tests/test_take.py:14:    fill_error = re.compile(\"Incompatible type for fill_value\")\r\npandas/util/testing.py:1893:            numeric_tuple = re.sub(\"[^\\d_]_?\", \"\", x).split(\"_\")\r\npandas/util/testing.py:2441:    >>> assert_raises_regex(ValueError, re.compile('literal'), int, 'XYZ')\r\npandas/util/testing.py:573:    found = re.compile('%s.*' % prefix).findall('\\n'.join(out_locales))\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/338628707",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16481#issuecomment-338628707",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16481",
    "id": 338628707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODYyODcwNw==",
    "user": {
      "login": "tnir",
      "id": 10229505,
      "node_id": "MDQ6VXNlcjEwMjI5NTA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10229505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tnir",
      "html_url": "https://github.com/tnir",
      "followers_url": "https://api.github.com/users/tnir/followers",
      "following_url": "https://api.github.com/users/tnir/following{/other_user}",
      "gists_url": "https://api.github.com/users/tnir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tnir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tnir/subscriptions",
      "organizations_url": "https://api.github.com/users/tnir/orgs",
      "repos_url": "https://api.github.com/users/tnir/repos",
      "events_url": "https://api.github.com/users/tnir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tnir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-23T11:25:26Z",
    "updated_at": "2017-10-23T11:32:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Warnings at HEAD of master (5b99ae2) for Python 3.6 follow (https://travis-ci.org/pandas-dev/pandas/jobs/291434962#L3029)\r\n\r\n```\r\n=============================== warnings summary ===============================\r\n\r\npandas/tests/test_categorical.py::TestCategorical::()::test_tab_complete_warning\r\n\r\n/home/travis/miniconda3/envs/pandas/lib/python3.6/site-packages/IPython/core/interactiveshell.py:728: UserWarning: Attempting to work in a virtualenv. If you encounter problems, please install IPython inside the virtualenv.\r\n\r\nwarn(\"Attempting to work in a virtualenv. If you encounter problems, please \"\r\n\r\npandas/tests/test_resample.py::TestResamplerGrouper::()::test_tab_complete_ipython6_warning\r\n\r\n/home/travis/miniconda3/envs/pandas/lib/python3.6/site-packages/IPython/core/interactiveshell.py:728: UserWarning: Attempting to work in a virtualenv. If you encounter problems, please install IPython inside the virtualenv.\r\n\r\nwarn(\"Attempting to work in a virtualenv. If you encounter problems, please \"\r\n\r\npandas/tests/frame/test_api.py::TestDataFrameMisc::()::test_tab_complete_warning\r\n\r\n/home/travis/miniconda3/envs/pandas/lib/python3.6/site-packages/IPython/core/interactiveshell.py:728: UserWarning: Attempting to work in a virtualenv. If you encounter problems, please install IPython inside the virtualenv.\r\n\r\nwarn(\"Attempting to work in a virtualenv. If you encounter problems, please \"\r\n\r\npandas/tests/io/formats/test_printing.py::TestTableSchemaRepr::()::test_publishes\r\n\r\n/home/travis/miniconda3/envs/pandas/lib/python3.6/site-packages/IPython/core/interactiveshell.py:728: UserWarning: Attempting to work in a virtualenv. If you encounter problems, please install IPython inside the virtualenv.\r\n\r\nwarn(\"Attempting to work in a virtualenv. If you encounter problems, please \"\r\n\r\npandas/tests/io/test_parquet.py::test_cross_engine_pa_fp\r\n\r\nsource:2677: DeprecationWarning: invalid escape sequence \\*\r\n\r\npandas/tests/plotting/test_misc.py::TestDataFramePlots::()::test_parallel_coordinates_with_sorted_labels\r\n\r\n/home/travis/miniconda3/envs/pandas/lib/python3.6/site-packages/matplotlib/axes/_base.py:2918: UserWarning: Attempting to set identical left==right results\r\n\r\nin singular transformations; automatically expanding.\r\n\r\nleft=0, right=0\r\n\r\n'left=%s, right=%s') % (left, right))\r\n\r\npandas/tests/sparse/test_frame.py::TestSparseDataFrame::()::test_nan_columnname\r\n\r\nsource:2677: DeprecationWarning: invalid escape sequence \\*\r\n\r\npandas/tests/series/test_api.py::TestSeriesMisc::()::test_tab_complete_warning\r\n\r\n/home/travis/miniconda3/envs/pandas/lib/python3.6/site-packages/IPython/core/interactiveshell.py:728: UserWarning: Attempting to work in a virtualenv. If you encounter problems, please install IPython inside the virtualenv.\r\n\r\nwarn(\"Attempting to work in a virtualenv. If you encounter problems, please \"\r\n\r\npandas/tests/util/test_testing.py::TestAssertAlmostEqual::()::test_assert_almost_equal_edge_case_ndarrays\r\n\r\n/home/travis/build/pandas-dev/pandas/pandas/core/dtypes/missing.py:316: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.\r\n\r\nreturn ((left == right) | (isna(left) & isna(right))).all()\r\n\r\n/home/travis/build/pandas-dev/pandas/pandas/core/dtypes/missing.py:316: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.\r\n\r\nreturn ((left == right) | (isna(left) & isna(right))).all()\r\n\r\n-- Docs: http://doc.pytest.org/en/latest/warnings.html\r\n```"
  }
]
