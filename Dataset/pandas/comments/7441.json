[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45894046",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-45894046",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 45894046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODk0MDQ2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-12T13:55:45Z",
    "updated_at": "2014-06-12T13:55:45Z",
    "author_association": "MEMBER",
    "body": "@aldanor on the `only` keyword you mentioned, this is already filed as #7396.\n\nFor passing a `MetaData` object to the `read_sql_query/table` functions, this was implemented partially in the past, but removed from the functional API (see discussion here: https://github.com/pydata/pandas/issues/6300#issuecomment-43001653 and commit https://github.com/pydata/pandas/commit/ad97d2740201f6b7687dfccebd85cc348e8bfbe3) to keep that as simple as possible for a first release (easier to add than to remove keywords). In any case, it is available in the OO API with `PandasSQLAlchemy`.\n\nSo basically, we just have to decide if we want to provide this functionality in both (`read_*` functions _and_ object-interface), or only via the object (so that when you need this functionality, you should use the OO API).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45897140",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-45897140",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 45897140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODk3MTQw",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-12T14:19:38Z",
    "updated_at": "2014-06-12T14:19:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche It may be just me, but I think it might make sense to allow the metadata object to be passed to the higher-level functions (or a set of arbitrary kwargs  for reflect since there may be dialect-specific options) for those functions to be useful in setups more involved than the most basic ones.\n\nIn some environments (e.g. a typical corporate Oracle setup), you would absolutely have to pass the `schema` argument for reflect to work. And you may want to pass `only` in case your schema hosts ten thousand tables.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45990876",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-45990876",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 45990876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTkwODc2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-13T09:12:26Z",
    "updated_at": "2014-06-13T09:12:26Z",
    "author_association": "MEMBER",
    "body": "What would be the most common things you would want to adapt in the meta object? Of course the `schema`, but are there also other things? Can you give some examples?\n\nJust asking as if the `schema` argument would be used a lot, I think we should provide it as a real keyword and not only through passing a `MetaData` object (most users should not start adapting a MetaData object themselves, so if a lot of users need the schema argument, we should provide it seperately of `meta=..`).\n\n@mangecoeur @danielballan @hayd \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45992047",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-45992047",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 45992047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTkyMDQ3",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-13T09:28:04Z",
    "updated_at": "2014-06-13T09:28:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche Do we consider the `only` argument being a special case here (as in, don't query the entire schema in `read_sql` functions)? As for the `schema` being a separate keyword, should the users be able to pass `meta` as well, so the function signature would contain `schema=None, meta=None`? If that doesn't clutter the API too much, that'd be nice.\n\nAs for myself, I sometimes have to use `oracle_resolve_synonyms=True` in `MetaData#reflect` or `Table#__init__` when working with dblinks. I guess there exist a bunch of other useful dialect-specific options that I'm not aware of.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45997977",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-45997977",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 45997977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTk3OTc3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-13T10:45:38Z",
    "updated_at": "2014-06-13T10:45:38Z",
    "author_association": "MEMBER",
    "body": "As I said above, the `only` keyword is already discussed in #7396, and it will be used by default (reflect only the database you are reading, and none for read_sql_query) so no seperate keyword needed I think? If you have further comments or remarks on that, you can comment there.\n\nFor the API, that seems a good option. Another one would be to provide a way to pass options directly to `reflect` with something like `reflect_kwds={...}`, but that seems a bit more ugly (and limits it to reflect). \nPassing things to `Table` I think is too advanced for `read_sql`, but maybe we can see how we can do this in the OO API. \n\nWould you be interested to do a PR to add this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46000325",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-46000325",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 46000325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDAwMzI1",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-13T11:20:35Z",
    "updated_at": "2014-06-13T11:20:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm by no means sqlalchemy expert, so if someone more skilled in this would do it, it would be a better idea :) Elsewise I can give it a try on the weekend, will have to figure out how to set up test environment etc for the sql test suite then.\n\nRe: API, `schema` and `meta` keywords look fine, what about the `only` keyword when you pass the meta in? In this case the user is fully responsible for reflecting whatever he needs, right?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46088106",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-46088106",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 46088106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDg4MTA2",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-14T13:36:16Z",
    "updated_at": "2014-06-14T13:37:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche Would someone help me out in setting up a test environment so that I can run all tests in `test_sql.py` without skipping? I mean usernames, passwords, databases, schemas for both mysql and postgresql. It's quite confusing by just looking at the code and it may make sense to put intitialization scripts somewhere in the test suite to make the whole thing more accessible to other developers (kind of like this: https://bitbucket.org/anthony_tuininga/cx_oracle/src/dcc80926aa86d524f36500a27a658d3b4c14cbb1/test/SetupTest.sql?at=default).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46088177",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-46088177",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 46088177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDg4MTc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-14T13:39:12Z",
    "updated_at": "2014-06-14T13:39:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@aldanor that would close #7091\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46090209",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-46090209",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 46090209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDkwMjA5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-14T15:01:33Z",
    "updated_at": "2014-06-14T15:01:33Z",
    "author_association": "MEMBER",
    "body": "An overview:\n- sqlite: built-in and using in memory database -> nothing to set-up\n- mysql: `root@localhost/pandas_nosetest` -> database 'pandas_nosetest' with username 'root' and blank password, on host 'localhost'\n- postgresql: `postgres@localhost/pandas_nosetest` -> database 'pandas_nosetest' with username 'postgres' and blank password, on host 'localhost'\n\nSo no special schema or something, I think for both default values when you would create such a database locally. \nThey are created here https://github.com/pydata/pandas/blob/master/.travis.yml#L99 with `mysql -e 'create database pandas_nosetest;'`\n\nIf you want tro try to set-up something like #7091 or what you linked to, certainly try! If we support specifying schema's, will will also have to test this, so the database set-up will have to be more advanced.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47266907",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-47266907",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 47266907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjY2OTA3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-26T19:11:51Z",
    "updated_at": "2014-06-26T19:11:51Z",
    "author_association": "MEMBER",
    "body": "@aldanor Did it work out to look at this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48119570",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-48119570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 48119570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTE5NTcw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-06T18:40:26Z",
    "updated_at": "2014-07-06T18:40:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche status?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48120162",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-48120162",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 48120162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTIwMTYy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-06T19:02:27Z",
    "updated_at": "2014-07-06T19:02:27Z",
    "author_association": "MEMBER",
    "body": "I have unfortunately no time this week to do it myself, so pushing to 0.15\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51440323",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-51440323",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 51440323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDQwMzIz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T07:36:21Z",
    "updated_at": "2014-08-07T07:36:21Z",
    "author_association": "MEMBER",
    "body": "Example usages:\n- http://stackoverflow.com/questions/24189150/pandas-writing-dataframe-to-other-postgresql-schema\n- http://stackoverflow.com/questions/25173887/pandas-to-sql-cant-write-to-schema-besids-public-on-postgresql -> problem with appending/replacing with my desribed workaround\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51481108",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-51481108",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 51481108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDgxMTA4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T14:42:49Z",
    "updated_at": "2014-08-07T14:42:49Z",
    "author_association": "MEMBER",
    "body": "@aldanor I started implementing this, see #7952. For now only a `schema` support. Could you try this out to see if this solves your basic problems reported here?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57723213",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7441#issuecomment-57723213",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7441",
    "id": 57723213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzIzMjEz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-02T23:03:45Z",
    "updated_at": "2014-10-02T23:03:45Z",
    "author_association": "MEMBER",
    "body": "This is partly implemented (schema kwarg, possibility to pass meta to SQLDatabase), but pushing to 0.15.1 to see if we want to provide more.\n"
  }
]
