[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/301650989",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16358#issuecomment-301650989",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16358",
    "id": 301650989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTY1MDk4OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T01:39:39Z",
    "updated_at": "2017-05-16T01:39:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "originally we were using ``str`` in both py2 & py3. we switched to ``text_type`` which is unicode in py2 and str in py3.\r\n\r\nwhere exactly did this come up? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/301760420",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16358#issuecomment-301760420",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16358",
    "id": 301760420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTc2MDQyMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T12:01:40Z",
    "updated_at": "2017-05-16T12:01:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> where exactly did this come up?\r\n\r\nstatsmodels was essentially doing\r\n\r\n```python\r\n# python 2\r\nIn [10]: np.dtype(pd.DataFrame(columns=['a', 'b']).to_records().dtype.descr)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-10-bf0f86491f9a> in <module>()\r\n----> 1 np.dtype(pd.DataFrame(columns=['a', 'b']).to_records().dtype.descr)\r\n\r\nTypeError: data type not understood\r\n```\r\n\r\n[here](https://github.com/statsmodels/statsmodels/blob/90e2af8be80114179deb6b0ca3ac71975c7f9064/statsmodels/tsa/tsatools.py#L121)\r\n\r\nThat's not 100% correct, since if a user actually *does* have unicode columns, pandas probably should use unicode, and statsmodels will have to work around it\r\n\r\n```python\r\nIn [11]: np.dtype(pd.DataFrame(columns=[u'a', u'b']).to_records().dtype.descr)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-11-e90f8e27ae39> in <module>()\r\n----> 1 np.dtype(pd.DataFrame(columns=[u'a', u'b']).to_records().dtype.descr)\r\n\r\nTypeError: data type not understood\r\n```\r\n\r\nIt seems like this would be best solved by NumPy accepting unicode identifiers on py2 (I still think pandas should export whatever the user has though)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/301786250",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16358#issuecomment-301786250",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16358",
    "id": 301786250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTc4NjI1MA==",
    "user": {
      "login": "AlexisMignon",
      "id": 10117348,
      "node_id": "MDQ6VXNlcjEwMTE3MzQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10117348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlexisMignon",
      "html_url": "https://github.com/AlexisMignon",
      "followers_url": "https://api.github.com/users/AlexisMignon/followers",
      "following_url": "https://api.github.com/users/AlexisMignon/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlexisMignon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlexisMignon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlexisMignon/subscriptions",
      "organizations_url": "https://api.github.com/users/AlexisMignon/orgs",
      "repos_url": "https://api.github.com/users/AlexisMignon/repos",
      "events_url": "https://api.github.com/users/AlexisMignon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlexisMignon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T13:43:19Z",
    "updated_at": "2017-05-16T13:43:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "From memory I proposed changes in pandas becaise using str in py2 was raising an error when column names were unicode strings with unicode caracter. Doing this I fell on a bug in numpy which has 2 ways to build a np.dtype:\r\n\r\n* One is using a list of tuples (name, format), this is the most documented way shown in all examples\r\n* the other uses a dictionnary {\"name\": <list of column names>, \"formats\": <list of formats>}\r\n\r\nThe first one does not accept unicode names whereas the second accept them.\r\n\r\nThis is what is done [here](https://github.com/pandas-dev/pandas/blob/master/pandas/core/frame.py#L1139) \r\n\r\nA way to keep compatibility with all projects using pandas might be to have a _to_string fonctions that always returns a str in py2 and does all the needed conversions between str, unicode and others."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/301789789",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16358#issuecomment-301789789",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16358",
    "id": 301789789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTc4OTc4OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T13:55:05Z",
    "updated_at": "2017-05-16T13:55:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "> A way to keep compatibility with all projects using pandas might be to have a _to_string fonctions that always returns a str in py2 and does all the needed conversions between str, unicode and others.\r\n\r\nYeah, I'm trying to work around this in statsmodels and it's pretty tricky to get right that far down.\r\n\r\nIs it fair to say that for `DataFrame.to_records().dtype`\r\n\r\n- In python2 the names should *always* be python 2 strs (bytes)\r\n- In python3 the names should *always* be python 3 strs (unicode)\r\n\r\nIn that case, I think the solution is to encode every column name as bytes on python2 (we can just choose and document that we're using utf-8)."
  }
]
