[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427139195",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22476#issuecomment-427139195",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22476",
    "id": 427139195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzEzOTE5NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T19:22:00Z",
    "updated_at": "2018-10-04T19:22:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll also use this for #22994.\r\n\r\nIt looks like our default ExtensionDtype.__eq__ is pretty dangerous. It's basically wrong for any kind of parametrized type. I'll do some reading about how to handle this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427143128",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22476#issuecomment-427143128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22476",
    "id": 427143128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzE0MzEyOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T19:35:58Z",
    "updated_at": "2018-10-04T19:35:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, a safe and low-tech option is to have EA authors declare the meaningful attributes of their ExtensionDtype. For PeriodDtype, this is freq. For CategorcialDtype its the categories and order.\r\n\r\n\r\n```python\r\nclass PeriodDtype(ExtensionDtype):\r\n    _attributes = ['freq']\r\n\r\n    def __eq__(self, other):\r\n        if isinstance(other, compat.string_types):\r\n            try:\r\n                other = self._construct_from_string(other)\r\n            except TypeError:\r\n                return False\r\n        if isinstance(other, type(self)):\r\n            return all(\r\n                getattr(self, attr) == getattr(other, attr)\r\n                for attr in self._attributes\r\n            )\r\n        return False\r\n\r\n    def __hash__(self):\r\n        return hash(tuple(getattr(self, attr) for attr in self._attributes))\r\n```\r\n\r\n(in reality, `__hash__` and `__eq__` would go on the base ExtensionDtype class, not PeriodDtype.\r\n\r\nThat requires a couple things from all the `_attributes`.\r\n\r\n1. Their `__eq__` returns a boolean\r\n2. They're hashable\r\n\r\nCategoricalDtype.categories fails on both those counts, so the default implementation would work for it, but that's fine. I think that's a less common case.\r\n\r\nThe downside is a tiny bit of duplication. We could do fancier things with metaclasses probably, but that seems like overkill."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440339997",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22476#issuecomment-440339997",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22476",
    "id": 440339997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDMzOTk5Nw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-20T16:37:57Z",
    "updated_at": "2018-11-20T16:43:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess I missed this somehow - my attempt at a SetArray (#22382) has been dormant for some time while other issues were more pressing. In any case, having hashability as a general requirement makes it impossible to implement an extension array for sets, unless there is a way to circumvent that requirement somehow.\r\n\r\nWhile implementation is not around the corner, I'd like for this to be a possibility further down the line. In the same spirit, @jreback commented on my first attempt at sets (without using an extension array) in https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399400329:\r\n> EA is an extension array & a dtype, both of which are first class. That's how I'd like to see sets (and lists and dicts)\r\n\r\nEDIT: If need be, I guess the backend could use an array of `frozenset` or even `tuple`, but that wouldn't be my first choice, as it makes implementing the methods much more cumbersome."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440342216",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22476#issuecomment-440342216",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22476",
    "id": 440342216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDM0MjIxNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-20T16:43:40Z",
    "updated_at": "2018-11-20T16:43:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I haven't looked at the details, but what about a SetDtype isn't hashable?\nKeep in mind that this is for dtypes, not arrays (which can't be hashable,\nsince they're mutable).\n\nOn Tue, Nov 20, 2018 at 10:38 AM h-vetinari <notifications@github.com>\nwrote:\n\n> I guess I missed this somehow - my attempt at a SetArray (#22382\n> <https://github.com/pandas-dev/pandas/pull/22382>) has been dormant for\n> some time while other issues were more pressing. In any case, having\n> hashability as a general requirement makes it impossible to implement an\n> extension array for sets, unless there is a way to circumvent that\n> requirement somehow.\n>\n> â€”\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/22476#issuecomment-440339997>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIqO22peQdrViEjLvQAgfp8sgw4bPks5uxC_ugaJpZM4WItuD>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440343801",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22476#issuecomment-440343801",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22476",
    "id": 440343801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDM0MzgwMQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-20T16:47:44Z",
    "updated_at": "2018-11-20T16:47:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger \r\nThanks for the quick response. This was my misunderstanding - I read \"Pandas now requires that extension dtypes be hashable\" in https://pandas-docs.github.io/pandas-docs-travis/whatsnew/v0.24.0.html#extensiontype-changes, and got the wrong idea."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440349264",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22476#issuecomment-440349264",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22476",
    "id": 440349264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDM0OTI2NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-20T17:02:49Z",
    "updated_at": "2018-11-20T17:02:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm yes that is ambiguous. I'll rephrase it when I go through the docs\nbefore the release.\n\nOn Tue, Nov 20, 2018 at 10:47 AM h-vetinari <notifications@github.com>\nwrote:\n\n> @TomAugspurger <https://github.com/TomAugspurger>\n> Thanks for the quick response. This was my misunderstanding - I read\n> \"Pandas now requires that extension dtypes be hashable\" in\n> https://pandas-docs.github.io/pandas-docs-travis/whatsnew/v0.24.0.html#extensiontype-changes,\n> and got the wrong idea.\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/22476#issuecomment-440343801>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHInu-_BMJDaXG0N-GzizpjjM-izlPks5uxDI2gaJpZM4WItuD>\n> .\n>\n"
  }
]
