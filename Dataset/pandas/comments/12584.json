[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194857186",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12584#issuecomment-194857186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12584",
    "id": 194857186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDg1NzE4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T14:02:44Z",
    "updated_at": "2016-03-10T14:02:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "what exactly are you trying to do?\n\nIn your example you are creating 100 rows x 2.7M columns. I doubt this is what you are expecting.\n\n```\nIn [14]: s = pd.Series(range(10))\n\nIn [15]: s.apply(lambda x: pd.Series(process(x))).shape\nOut[15]: (10, 100)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194866214",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12584#issuecomment-194866214",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12584",
    "id": 194866214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDg2NjIxNA==",
    "user": {
      "login": "noctune",
      "id": 448023,
      "node_id": "MDQ6VXNlcjQ0ODAyMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/448023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noctune",
      "html_url": "https://github.com/noctune",
      "followers_url": "https://api.github.com/users/noctune/followers",
      "following_url": "https://api.github.com/users/noctune/following{/other_user}",
      "gists_url": "https://api.github.com/users/noctune/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noctune/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noctune/subscriptions",
      "organizations_url": "https://api.github.com/users/noctune/orgs",
      "repos_url": "https://api.github.com/users/noctune/repos",
      "events_url": "https://api.github.com/users/noctune/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noctune/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T14:17:20Z",
    "updated_at": "2016-03-10T14:18:49Z",
    "author_association": "NONE",
    "body": "> what exactly are you trying to do?\n\nThis is mostly just a demonstration of the problem. In my application I have a function that, given a value, computes a numpy array of size 100. I want to apply this function to a series (not just the `range(2700000)` that I demonstrate here) and put the resulting list items in each column of the resulting data frame.\n\n> In your example you are creating 100 rows x 2.7M columns.\n\nUh, no. I just tried replacing 2.7M with 1000, and I got 1000 rows and 100 columns. In your example there are 10 rows and 100 columns as well.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194870407",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12584#issuecomment-194870407",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12584",
    "id": 194870407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDg3MDQwNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T14:24:52Z",
    "updated_at": "2016-03-10T14:24:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "what exactly are you expecting to do?\nare you meaning to apply row-wise?\n\nyou can just pass the series to your function.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194901720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12584#issuecomment-194901720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12584",
    "id": 194901720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDkwMTcyMA==",
    "user": {
      "login": "noctune",
      "id": 448023,
      "node_id": "MDQ6VXNlcjQ0ODAyMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/448023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noctune",
      "html_url": "https://github.com/noctune",
      "followers_url": "https://api.github.com/users/noctune/followers",
      "following_url": "https://api.github.com/users/noctune/following{/other_user}",
      "gists_url": "https://api.github.com/users/noctune/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noctune/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noctune/subscriptions",
      "organizations_url": "https://api.github.com/users/noctune/orgs",
      "repos_url": "https://api.github.com/users/noctune/repos",
      "events_url": "https://api.github.com/users/noctune/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noctune/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T15:20:50Z",
    "updated_at": "2016-03-10T15:23:36Z",
    "author_association": "NONE",
    "body": "> what exactly are you expecting to do?\n\nJust forget the function, it's not important. The core of my problem is this: given a series of _n_ numpy arrays, each of length _m_, I want to return an _n_ x _m_ dataframe where each row is equal to the corresponding numpy array in the series.\n\nThe above does this just fine. It just consumes a massive amount of RAM in the process. So much that it quickly becomes impossible.\n\n> are you meaning to apply row-wise?\n\nRow-wise? But it's a series. I do not quite get what you mean.\n\n> you can just pass the series to your function.\n\nI can't. The function does not work with a pandas series, and is function from another library so I have no control over it. Hence why I want to apply it to each item in a series.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194905286",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12584#issuecomment-194905286",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12584",
    "id": 194905286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDkwNTI4Ng==",
    "user": {
      "login": "noctune",
      "id": 448023,
      "node_id": "MDQ6VXNlcjQ0ODAyMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/448023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noctune",
      "html_url": "https://github.com/noctune",
      "followers_url": "https://api.github.com/users/noctune/followers",
      "following_url": "https://api.github.com/users/noctune/following{/other_user}",
      "gists_url": "https://api.github.com/users/noctune/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noctune/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noctune/subscriptions",
      "organizations_url": "https://api.github.com/users/noctune/orgs",
      "repos_url": "https://api.github.com/users/noctune/repos",
      "events_url": "https://api.github.com/users/noctune/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noctune/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T15:29:16Z",
    "updated_at": "2016-03-10T16:15:58Z",
    "author_association": "NONE",
    "body": "A better example to demonstrate the problem:\n\n```\n# placeholder for actual data\ns = pd.Series(range(2700000)).apply(lambda x: np.random.rand(100))\n\n# consumes way too much memory and dies   :c\ns.apply(lambda x: pd.Series(x))\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194928022",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12584#issuecomment-194928022",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12584",
    "id": 194928022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDkyODAyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T16:09:17Z",
    "updated_at": "2016-03-10T16:09:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "that's the same as your above example\n\nwhat are you expecting as output?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194930462",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12584#issuecomment-194930462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12584",
    "id": 194930462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDkzMDQ2Mg==",
    "user": {
      "login": "noctune",
      "id": 448023,
      "node_id": "MDQ6VXNlcjQ0ODAyMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/448023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noctune",
      "html_url": "https://github.com/noctune",
      "followers_url": "https://api.github.com/users/noctune/followers",
      "following_url": "https://api.github.com/users/noctune/following{/other_user}",
      "gists_url": "https://api.github.com/users/noctune/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noctune/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noctune/subscriptions",
      "organizations_url": "https://api.github.com/users/noctune/orgs",
      "repos_url": "https://api.github.com/users/noctune/repos",
      "events_url": "https://api.github.com/users/noctune/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noctune/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T16:15:16Z",
    "updated_at": "2016-03-10T16:16:32Z",
    "author_association": "NONE",
    "body": "For this particular example, I would expect something similar to `pd.DataFrame(np.random.rand(2700000, 100))`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194939358",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12584#issuecomment-194939358",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12584",
    "id": 194939358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDkzOTM1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T16:32:14Z",
    "updated_at": "2016-03-10T16:36:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "`.apply` is expecting you to return a scalar, it _will_ deal with a 2-dim structure but its not very efficient.\n\nI would simply do this.\n\n`In [10]: np.concatenate([ process(x) for x in s ])`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194966650",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12584#issuecomment-194966650",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12584",
    "id": 194966650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDk2NjY1MA==",
    "user": {
      "login": "noctune",
      "id": 448023,
      "node_id": "MDQ6VXNlcjQ0ODAyMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/448023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noctune",
      "html_url": "https://github.com/noctune",
      "followers_url": "https://api.github.com/users/noctune/followers",
      "following_url": "https://api.github.com/users/noctune/following{/other_user}",
      "gists_url": "https://api.github.com/users/noctune/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noctune/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noctune/subscriptions",
      "organizations_url": "https://api.github.com/users/noctune/orgs",
      "repos_url": "https://api.github.com/users/noctune/repos",
      "events_url": "https://api.github.com/users/noctune/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noctune/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T17:26:44Z",
    "updated_at": "2016-03-10T17:26:44Z",
    "author_association": "NONE",
    "body": "> `.apply` is expecting you to return a scalar, it will deal with a 2-dim structure but its not very efficient.\n\nRight, that is the bug I am reporting. At least, it seems like a bug to me. I have found a similar workaround in the stackoverflow question posted above. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194969675",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12584#issuecomment-194969675",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12584",
    "id": 194969675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDk2OTY3NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T17:35:44Z",
    "updated_at": "2016-03-10T17:35:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "that's not a bug but a convenience feature\nu r expecting optimal perf when u r returning arbitrary things\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/195005465",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12584#issuecomment-195005465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12584",
    "id": 195005465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTAwNTQ2NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T19:13:08Z",
    "updated_at": "2016-03-10T19:13:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "The fundamental issue is that when these Series are put back together they need to align. And in this case you are looping over the alignment code (in python). You _could_ make this faster by doing:\n\n```\n# this should be the same length as your function returns\nIn [17]: index = Index(range(100))\n\nIn [18]: s.apply(lambda x: Series(process(x), index=index))\n```\n\nThen the alignment is cheap as its the same index. So you are doing an operation constructed in such a way to use none of pandas power. You are essentially doing a python loop. I would suggest you re-think how you are going about this, and why you need the alignment.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/195014120",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12584#issuecomment-195014120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12584",
    "id": 195014120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTAxNDEyMA==",
    "user": {
      "login": "noctune",
      "id": 448023,
      "node_id": "MDQ6VXNlcjQ0ODAyMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/448023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noctune",
      "html_url": "https://github.com/noctune",
      "followers_url": "https://api.github.com/users/noctune/followers",
      "following_url": "https://api.github.com/users/noctune/following{/other_user}",
      "gists_url": "https://api.github.com/users/noctune/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noctune/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noctune/subscriptions",
      "organizations_url": "https://api.github.com/users/noctune/orgs",
      "repos_url": "https://api.github.com/users/noctune/repos",
      "events_url": "https://api.github.com/users/noctune/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noctune/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T19:40:34Z",
    "updated_at": "2016-03-10T19:40:34Z",
    "author_association": "NONE",
    "body": "Nice, that does not consume nearly as much memory. It still uses a quite a bit (8G), but it's less than the total RAM I have and simpler than the other workarounds.\n\nAnd yeah, it is essentially a python loop I need. It's a machine learning algorithm in a library built in a way that does not really allow easy vectorization, so I'm afraid it is necessary.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/195014739",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12584#issuecomment-195014739",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12584",
    "id": 195014739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTAxNDczOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T19:42:04Z",
    "updated_at": "2016-03-10T19:42:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Noctune great.\n\nBut if you don't need it in a Series, then just use `np.concatenate` in a loop. pandas excels when it _can_ align things. To just treat it like a matrix calls out to just use numpy.\n"
  }
]
