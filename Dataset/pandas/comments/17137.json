[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319269585",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17137#issuecomment-319269585",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17137",
    "id": 319269585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTI2OTU4NQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-08-01T05:12:19Z",
    "updated_at": "2017-08-01T05:13:04Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/17137?src=pr&el=h1) Report\n> Merging [#17137](https://codecov.io/gh/pandas-dev/pandas/pull/17137?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/f2b0bdc9bc4e57e101e306db7555eb7db28172e9?src=pr&el=desc) will **decrease** coverage by `0.07%`.\n> The diff coverage is `80%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/17137/graphs/tree.svg?width=650&height=150&src=pr&token=eZ4WkYLtcO)](https://codecov.io/gh/pandas-dev/pandas/pull/17137?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #17137      +/-   ##\n==========================================\n- Coverage   91.03%   90.95%   -0.08%     \n==========================================\n  Files         161      161              \n  Lines       49405    49411       +6     \n==========================================\n- Hits        44974    44943      -31     \n- Misses       4431     4468      +37\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `88.74% <80%> (-0.05%)` | :arrow_down: |\n| #single | `40.2% <70%> (-0.13%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/17137?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/tseries/offsets.py](https://codecov.io/gh/pandas-dev/pandas/pull/17137?src=pr&el=tree#diff-cGFuZGFzL3RzZXJpZXMvb2Zmc2V0cy5weQ==) | `97.07% <80%> (-0.06%)` | :arrow_down: |\n| [pandas/io/feather\\_format.py](https://codecov.io/gh/pandas-dev/pandas/pull/17137?src=pr&el=tree#diff-cGFuZGFzL2lvL2ZlYXRoZXJfZm9ybWF0LnB5) | `20% <0%> (-65.72%)` | :arrow_down: |\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/17137?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `25% <0%> (-58.34%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/17137?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.56% <0%> (-0.2%)` | :arrow_down: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/17137?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `94.85% <0%> (-0.1%)` | :arrow_down: |\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/17137?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `91.96% <0%> (-0.06%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/17137?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/17137?src=pr&el=footer). Last update [f2b0bdc...2e3e639](https://codecov.io/gh/pandas-dev/pandas/pull/17137?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319516504",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17137#issuecomment-319516504",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17137",
    "id": 319516504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTUxNjUwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-01T22:36:08Z",
    "updated_at": "2017-08-01T22:36:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "see if any asv's are needed for this (I don't think so actually), and show a representative speedup (not the profile), just a before / after timeit.\r\n\r\nif it looks good, pls add a whatsnew in perf."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319539080",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17137#issuecomment-319539080",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17137",
    "id": 319539080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTUzOTA4MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T01:05:11Z",
    "updated_at": "2017-08-02T01:05:11Z",
    "author_association": "MEMBER",
    "body": "Will do.  There are some cases I want to take a closer look at before calling this ready; parking some timeit results here in the meantime:\r\n\r\n```\r\nimport random\r\nimport timeit\r\n\r\nimport pandas as pd\r\n\r\nnobs = 1000\r\n\r\nmonths = pd.date_range('1901-01-01', freq='M', periods=nobs)\r\ndays = pd.date_range('1923-04-05', freq='D', periods=nobs)\r\n\r\ndser = days.to_series().apply(pd.Period, freq='D')\r\nmser = months.to_series().apply(pd.Period, freq='M')\r\n\r\ndlist = list(dser)\r\nmlist = list(mser)\r\n\r\nrandom.shuffle(dlist)\r\nrandom.shuffle(mlist)\r\n\r\nmser2 = pd.Series(mlist)\r\ndser2 = pd.Series(dlist)\r\n\r\ntimeit.timeit(mser.sort_values, number=100)\r\ntimeit.timeit(dser.sort_values, number=100)\r\ntimeit.timeit(mser2.sort_values, number=100)\r\ntimeit.timeit(dser2.sort_values, number=100)\r\n```\r\n\r\nOld Results\r\n```\r\n>>> timeit.timeit(mser.sort_values, number=100)\r\n29.13339614868164\r\n>>> timeit.timeit(dser.sort_values, number=100)\r\n46.98428416252136\r\n>>> timeit.timeit(mser2.sort_values, number=100)\r\n107.7828049659729\r\n>>> timeit.timeit(dser2.sort_values, number=100)\r\n113.00968098640442\r\n```\r\n\r\nNew Results\r\n```\r\n>>> timeit.timeit(mser.sort_values, number=100)\r\n2.2172720432281494\r\n>>> timeit.timeit(dser.sort_values, number=100)\r\n1.7678871154785156\r\n>>> timeit.timeit(mser2.sort_values, number=100)\r\n3.523206949234009\r\n>>> timeit.timeit(dser2.sort_values, number=100)\r\n2.4215428829193115\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319563836",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17137#issuecomment-319563836",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17137",
    "id": 319563836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTU2MzgzNg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T04:26:29Z",
    "updated_at": "2017-08-02T04:26:29Z",
    "author_association": "MEMBER",
    "body": "There may be a problem.  A lot of cross-design appears to have built up over the years including at least two approaches to caching.\r\n\r\nIt looks like the original author had caching in mind, but it got dropped [here](https://github.com/jbrockmendel/pandas/commit/9c1bae402d4c302a033da7159096d9df288506b0).  There is a `_cacheable` attribute that is `False` everywhere except one unused mixin class, and a `_should_cache` that is referenced over in `core.indexes.datetimes` but is apparently always `False`.\r\n\r\nAFAICT the idea in `tseries.frequencies.get_offset` is that the user calls e.g. `get_offset(B)`, gets a copy of the cached `<BusinessDay>` offset, and then can modify if desired.  My approach of making `DateOffset` immutable would break that.\r\n\r\nThe motivation is that `__eq__` is currently very slow.  It is slow because it re-evaluates `self._params()` on every call.  I'm advocating caching `self._params()`.  Doing this requires ensuring that cache remains valid, so freezing all the relevant attributes.  But those attributes are blacklist-based instead of whitelist-based:\r\n\r\n```\r\ndef _params(self):\r\n        all_paras = dict(list(vars(self).items()) + list(self.kwds.items()))\r\n        if 'holidays' in all_paras and not all_paras['holidays']:\r\n            all_paras.pop('holidays')\r\n        exclude = ['kwds', 'name', 'normalize', 'calendar']\r\n        attrs = [(k, v) for k, v in all_paras.items()\r\n                 if (k not in exclude) and (k[0] != '_')]\r\n        attrs = sorted(set(attrs))\r\n        params = tuple([str(self.__class__)] + attrs)\r\n        return params\r\n```\r\n\r\n(There is a TODO note further down suggesting this should be changed:\r\n```\r\n    # TODO: Combine this with DateOffset by defining a whitelisted set of\r\n    # attributes on each object rather than the existing behavior of iterating\r\n    # over internal ``__dict__``\r\n```\r\n)\r\n\r\nMaking `_params` cacheable for the general case would require basically deprecating the `self.kwds` attribute, which is I'm reticent to do as users may be using it in creative ways.  My inclination is to have `_params` defer to a `_cached_params` iff `len(self.kwds) == 0`.  Then `__setattr__` can refuse to change a handful of attributes, but it doesn't need to be an exhaustive list.\r\n\r\nI'm still not sure if this approach would play nicely with the `frequencies.get_offset` cache."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321113824",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17137#issuecomment-321113824",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17137",
    "id": 321113824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTExMzgyNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T23:55:36Z",
    "updated_at": "2017-08-08T23:55:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing in favor of #17181 "
  }
]
