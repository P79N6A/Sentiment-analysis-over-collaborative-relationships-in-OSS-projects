[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/7458075",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1719#issuecomment-7458075",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1719",
    "id": 7458075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTgwNzU=",
    "user": {
      "login": "lesteve",
      "id": 1680079,
      "node_id": "MDQ6VXNlcjE2ODAwNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1680079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lesteve",
      "html_url": "https://github.com/lesteve",
      "followers_url": "https://api.github.com/users/lesteve/followers",
      "following_url": "https://api.github.com/users/lesteve/following{/other_user}",
      "gists_url": "https://api.github.com/users/lesteve/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lesteve/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lesteve/subscriptions",
      "organizations_url": "https://api.github.com/users/lesteve/orgs",
      "repos_url": "https://api.github.com/users/lesteve/repos",
      "events_url": "https://api.github.com/users/lesteve/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lesteve/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-02T15:13:05Z",
    "updated_at": "2012-08-02T15:13:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to add my 2 cents on this, it looks like this has not much to to do with DataFrame.concat and happens when you use the fast union for DatetimeIndex objects. Taking inspiration from the original example:\n\n``` python\nimport pandas\nimport pandas.util.testing as put\nts = put.makeTimeSeries(4)\ntsWithGaps = ts[::2]\nindex = ts.index\nindexWithGaps = tsWithGaps.index\nindex\nindexWithGaps\nindex.union(indexWithGaps)\nindexWithGaps.union(index)\npandas.Index.union(indexWithGaps, index)\n```\n\nand the output:\n\n```\nIn [7]: index\nOut[7]:\n<class 'pandas.tseries.index.DatetimeIndex'>\n[2000-01-03 00:00:00, ..., 2000-01-06 00:00:00]\nLength: 4, Freq: B, Timezone: None\n\nIn [8]: indexWithGaps\nOut[8]:\n<class 'pandas.tseries.index.DatetimeIndex'>\n[2000-01-03 00:00:00, 2000-01-05 00:00:00]\nLength: 2, Freq: 2B, Timezone: None\n\nIn [9]: index.union(indexWithGaps)\nOut[9]:\n<class 'pandas.tseries.index.DatetimeIndex'>\n[2000-01-03 00:00:00, ..., 2000-01-06 00:00:00]\nLength: 4, Freq: B, Timezone: None\n\nIn [10]: indexWithGaps.union(index)\nOut[10]:\n<class 'pandas.tseries.index.DatetimeIndex'>\n[2000-01-03 00:00:00, ..., 2000-01-06 00:00:00]\nLength: 3, Freq: 2B, Timezone: None\n\nIn [11]: pandas.Index.union(indexWithGaps, index)\nOut[11]:\n<class 'pandas.tseries.index.DatetimeIndex'>\n[2000-01-03 00:00:00, ..., 2000-01-06 00:00:00]\nLength: 4, Freq: None, Timezone: None\n```\n\nJust for sake of clarity the problem is in [10] where the union of the indices has length 3 instead of length 4 (the Jan-4 timestamp is missing if you want to know). [11] shows what happened in the non fast union case and is fine. On top of that it's slightly weird that indexWithGaps.union(index) has a 2B frequency.\n\nLooking at the existing issues this probably has some overlap with #1708. Interestingly enough this indexing problem doesn't seem to affect aligning timeseries, i.e. both ts.align(tsWithGaps) and tsWithGaps.align(ts) work fine. On the other hand, constructing dataframe is affected as the original bug report showed:\n\n```\nIn [84]: pandas.DataFrame(collections.OrderedDict([('ts', ts), ('tsWithGaps', tsWithGaps)]))\nOut[84]:\n                  ts  tsWithGaps\n2000-01-03 -0.045699   -0.045699\n2000-01-04 -1.611032         NaN\n2000-01-05 -1.055301   -1.055301\n2000-01-06  1.024215         NaN\n\nIn [85]: pandas.DataFrame(collections.OrderedDict([('tsWithGaps', tsWithGaps), ('ts', ts)]))\nOut[85]:\n                  ts  tsWithGaps\n2000-01-03 -0.045699   -0.045699\n2000-01-05 -1.055301   -1.055301\n2000-01-06  1.024215         NaN\n```\n\ni.e. the dataframe constructed depends on which order you provide the timeseries.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/7603666",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1719#issuecomment-7603666",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1719",
    "id": 7603666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDM2NjY=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-09T02:26:39Z",
    "updated_at": "2012-08-09T02:26:39Z",
    "author_association": "MEMBER",
    "body": "This was fixed in 5382985\n"
  }
]
