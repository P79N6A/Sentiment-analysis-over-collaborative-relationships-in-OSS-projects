[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239024588",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13959#issuecomment-239024588",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13959",
    "id": 239024588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTAyNDU4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-10T22:29:28Z",
    "updated_at": "2016-08-10T22:29:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "so I think some spelling is in order here, to make these easier to grok (_should_ apply these generally to merging operations), maybe something like this:\n\n```\nmerge_window(df1, df2, left_on='trade_time', right_on='exchange_time', time_range=(0*ms, 500*ms), how={'total_volume':(np.sum, 'volume'), 'mean_volume':(np.mean, 'volume')})\n```\n\nas\n\n```\n(df1.merging(df2, left_on='trade_time', right_on='exchange_time')\n    .window(time=(0*ms, 500*ms))\n    .agg({'total_volume':(np.sum, 'volume'), \n          'mean_volume':(np.mean, 'volume')})\n)\n```\n\nso `.merging` is a like a group/rolling/resample operator, the next `.window()` is the type of merge (e.g. support `.asof()`, `.ordered()`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239063780",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13959#issuecomment-239063780",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13959",
    "id": 239063780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTA2Mzc4MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T03:22:51Z",
    "updated_at": "2016-08-11T03:22:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "👍 on Jeff's spelling. The original function seems to be doing a lot, better to split it up into components that are understandable.\n\nThe `.window` step could be generalized somewhat. e.g. https://github.com/dgrtwo/fuzzyjoin has some examples on numeric and word distance.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239068800",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13959#issuecomment-239068800",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13959",
    "id": 239068800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTA2ODgwMA==",
    "user": {
      "login": "chrisaycock",
      "id": 453745,
      "node_id": "MDQ6VXNlcjQ1Mzc0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/453745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisaycock",
      "html_url": "https://github.com/chrisaycock",
      "followers_url": "https://api.github.com/users/chrisaycock/followers",
      "following_url": "https://api.github.com/users/chrisaycock/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisaycock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisaycock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisaycock/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisaycock/orgs",
      "repos_url": "https://api.github.com/users/chrisaycock/repos",
      "events_url": "https://api.github.com/users/chrisaycock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisaycock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T04:14:03Z",
    "updated_at": "2016-08-11T04:14:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @wesm \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240542391",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13959#issuecomment-240542391",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13959",
    "id": 240542391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDU0MjM5MQ==",
    "user": {
      "login": "chrisaycock",
      "id": 453745,
      "node_id": "MDQ6VXNlcjQ1Mzc0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/453745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisaycock",
      "html_url": "https://github.com/chrisaycock",
      "followers_url": "https://api.github.com/users/chrisaycock/followers",
      "following_url": "https://api.github.com/users/chrisaycock/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisaycock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisaycock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisaycock/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisaycock/orgs",
      "repos_url": "https://api.github.com/users/chrisaycock/repos",
      "events_url": "https://api.github.com/users/chrisaycock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisaycock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-17T20:46:10Z",
    "updated_at": "2016-08-17T20:46:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "A quick example, as much for my benefit:\n\n```\nimport string\n\ndf1 = pd.DataFrame({'date': pd.date_range(start='2016-01-01 09:30:00', periods=20, freq='s'),\n                    'name': list(string.ascii_uppercase[:20])})\n\ndf2 = pd.DataFrame({'date': pd.date_range(start='2016-01-01 09:29:50', periods=15, freq='2s'),\n                    'value': np.arange(15, dtype=np.float64)})\n```\n\nSuppose I want to compute this:\n\n```\ns = pd.Timedelta(1, 's')\nmerge_window(df1, df2, on='date', time_range=(-6*s, 2*s), how=(np.sum, 'value'))\n```\n\nThe result would be\n\n```\ndf1['value'] = [df2[(df2.date >= start) & (df2.date <= stop)]['value'].sum() for start,stop in zip(df1.date + -6*s, df1.date + 2*s)]\n```\n\nI'm going to take a crack at this now. I won't have Jeff's notation to start since I think that's a bigger conversation. But I do want to get this functionality as soon as possible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/242285761",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13959#issuecomment-242285761",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13959",
    "id": 242285761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjI4NTc2MQ==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T05:39:11Z",
    "updated_at": "2016-08-25T05:39:36Z",
    "author_association": "MEMBER",
    "body": "Having a composable API for joins in general would be nice. How do you imagine the asof version would look? \n\nAs an aside, the syntax for describing aggregates leaves a lot to be desired (this is not specific to this proposal). I spent a bunch of time thinking about how to do this (you can see what I came up with in some of the examples in http://docs.ibis-project.org/generated-notebooks/2.html#aggregating-joined-table-with-metrics-involving-more-than-one-base-reference). We may be able to study some other DSL (e.g. Blaze) to think about deferred join syntax. Adding any kind of expression DSL becomes a deep rabbit hole (e.g. deterministically resolving output types). Maybe something that should wait for pandas 2.0\n"
  }
]
