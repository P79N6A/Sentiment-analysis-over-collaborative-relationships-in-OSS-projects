[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464949046",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-464949046",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 464949046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDk0OTA0Ng==",
    "user": {
      "login": "ChoiwahChow",
      "id": 12438007,
      "node_id": "MDQ6VXNlcjEyNDM4MDA3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12438007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChoiwahChow",
      "html_url": "https://github.com/ChoiwahChow",
      "followers_url": "https://api.github.com/users/ChoiwahChow/followers",
      "following_url": "https://api.github.com/users/ChoiwahChow/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChoiwahChow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChoiwahChow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChoiwahChow/subscriptions",
      "organizations_url": "https://api.github.com/users/ChoiwahChow/orgs",
      "repos_url": "https://api.github.com/users/ChoiwahChow/repos",
      "events_url": "https://api.github.com/users/ChoiwahChow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChoiwahChow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T02:02:26Z",
    "updated_at": "2019-02-20T12:19:02Z",
    "author_association": "NONE",
    "body": "Code Sample:\r\n\r\n```python\r\nimport pandas as pd\r\n\r\na = pd.Series([[100.0]]*1000000)\r\nb = pd.Series([a]*100)\r\n```\r\n\r\nProblem description:\r\nThe above code snippet completes in less than 1 ms when run with pandas version 0.22.0, but takes 3.376 seconds when run with pandas version 0.23.4 - a 3000-fold longer.  We do have use cases that are impacted by this change.\r\n\r\nIt is easy to trace through the code that in the new version, the bottleneck is in line 1228 in pd.core.dtypes.cast.construct_1d_object_array_from_listlike:\r\n\r\n```python\r\n    result[:] = values\r\n```\r\n\r\nThe original performance can be restored by replacing the above line with\r\n```python\r\nfor i, value in enumerate(values):\r\n    result[i] = value\r\n```\r\n\r\npd.show_versions() for pandas 0.23.4:\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: None\r\npython: 3.7.1.final.0\r\npython-bits: 64\r\nOS: Windows\r\nOS-release: 7\r\nmachine: AMD64\r\nprocessor: Intel64 Family 6 Model 63 Stepping 2, GenuineIntel\r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: None\r\nLOCALE: None.None\r\n\r\npandas: 0.23.4\r\npytest: 4.0.2\r\npip: 18.1\r\nsetuptools: 40.6.3\r\nCython: 0.29.2\r\nnumpy: 1.15.4\r\nscipy: 1.2.0\r\npyarrow: None\r\nxarray: None\r\nIPython: 7.2.0\r\nsphinx: 1.8.3\r\npatsy: 0.5.0\r\ndateutil: 2.7.5\r\npytz: 2018.7\r\nblosc: None\r\nbottleneck: 1.2.1\r\ntables: None\r\nnumexpr: 2.6.8\r\nfeather: None\r\nmatplotlib: 3.0.2\r\nopenpyxl: 2.5.12\r\nxlrd: 1.2.0\r\nxlwt: 1.3.0\r\nxlsxwriter: 1.1.2\r\nlxml: 4.2.5\r\nbs4: 4.6.3\r\nhtml5lib: 1.0.1\r\nsqlalchemy: 1.2.15\r\npymysql: None\r\npsycopg2: None\r\njinja2: 2.10\r\ns3fs: None\r\nfastparquet: None\r\npandas_gbq: None\r\npandas_datareader: None\r\n\r\npd.show_versions() for pandas 0.22.0\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: None\r\npython: 3.6.4.final.0\r\npython-bits: 64\r\nOS: Windows\r\nOS-release: 7\r\nmachine: AMD64\r\nprocessor: Intel64 Family 6 Model 63 Stepping 2, GenuineIntel\r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: None\r\nLOCALE: None.None\r\n\r\npandas: 0.22.0\r\npytest: 3.4.0\r\npip: 9.0.1\r\nsetuptools: 38.5.1\r\nCython: None\r\nnumpy: 1.14.0\r\nscipy: 1.0.0\r\npyarrow: None\r\nxarray: None\r\nIPython: 6.2.1\r\nsphinx: None\r\npatsy: 0.5.0\r\ndateutil: 2.6.1\r\npytz: 2018.3\r\nblosc: None\r\nbottleneck: 1.2.1\r\ntables: None\r\nnumexpr: 2.6.4\r\nfeather: None\r\nmatplotlib: 3.1.2\r\nopenpyxl: 2.5.0\r\nxlrd: 1.1.0\r\nxlwt: 1.3.0\r\nxlsxwriter: None\r\nlxml: 4.1.1\r\nbs4: 4.6.0\r\nhtml5lib: 1.0.1\r\nsqlalchemy: None\r\npymysql: None\r\npsycopg2: None\r\njinja2: 2.10\r\ns3fs: None\r\nfastparquet: None\r\npandas_gbq: None\r\npandas_datareader: None"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464952530",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-464952530",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 464952530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDk1MjUzMA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T02:19:53Z",
    "updated_at": "2019-02-19T02:19:53Z",
    "author_association": "MEMBER",
    "body": "Could you please check your code sample? I couldn't copy / paste as the variable `a` is undefined"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464966677",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-464966677",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 464966677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDk2NjY3Nw==",
    "user": {
      "login": "ChoiwahChow",
      "id": 12438007,
      "node_id": "MDQ6VXNlcjEyNDM4MDA3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12438007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChoiwahChow",
      "html_url": "https://github.com/ChoiwahChow",
      "followers_url": "https://api.github.com/users/ChoiwahChow/followers",
      "following_url": "https://api.github.com/users/ChoiwahChow/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChoiwahChow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChoiwahChow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChoiwahChow/subscriptions",
      "organizations_url": "https://api.github.com/users/ChoiwahChow/orgs",
      "repos_url": "https://api.github.com/users/ChoiwahChow/repos",
      "events_url": "https://api.github.com/users/ChoiwahChow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChoiwahChow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T03:29:23Z",
    "updated_at": "2019-02-19T03:29:23Z",
    "author_association": "NONE",
    "body": "Sorry, missed copying one line\r\na = pd.Series([[100.0]]*1000000)\r\n\r\nThat is, a is a pandas series of a million rows."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464971345",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-464971345",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 464971345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDk3MTM0NQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T03:54:03Z",
    "updated_at": "2019-02-19T03:54:03Z",
    "author_association": "MEMBER",
    "body": "Do you see same performance regression on master? IIRC we fixed something with this recently @jbrockmendel "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465185144",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-465185144",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 465185144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTE4NTE0NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T15:45:37Z",
    "updated_at": "2019-02-19T15:45:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like a dupe of https://github.com/pandas-dev/pandas/issues/24368\r\n\r\n> The original performance can be restored by replacing the above line with\r\n\r\n```python\r\nfor i, value in enumerate(values):\r\n    result[i] = value\r\n```\r\n\r\ndoes that pass all the constructor tests? Especially for Series with nested data of different lengths?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465360493",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-465360493",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 465360493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM2MDQ5Mw==",
    "user": {
      "login": "ChoiwahChow",
      "id": 12438007,
      "node_id": "MDQ6VXNlcjEyNDM4MDA3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12438007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChoiwahChow",
      "html_url": "https://github.com/ChoiwahChow",
      "followers_url": "https://api.github.com/users/ChoiwahChow/followers",
      "following_url": "https://api.github.com/users/ChoiwahChow/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChoiwahChow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChoiwahChow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChoiwahChow/subscriptions",
      "organizations_url": "https://api.github.com/users/ChoiwahChow/orgs",
      "repos_url": "https://api.github.com/users/ChoiwahChow/repos",
      "events_url": "https://api.github.com/users/ChoiwahChow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChoiwahChow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T23:52:54Z",
    "updated_at": "2019-02-19T23:52:54Z",
    "author_association": "NONE",
    "body": "From the discussion chain of [23368](https://github.com/pandas-dev/pandas/issues/24368),  I don't think the problem was fixed yet. In fact, performance degradation was worse on 0.24.1 and on master - on 0.23.4, it was 3.4 second, but from 0.24.1 onward, the same test takes over 12 seconds."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465365190",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-465365190",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 465365190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM2NTE5MA==",
    "user": {
      "login": "ChoiwahChow",
      "id": 12438007,
      "node_id": "MDQ6VXNlcjEyNDM4MDA3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12438007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChoiwahChow",
      "html_url": "https://github.com/ChoiwahChow",
      "followers_url": "https://api.github.com/users/ChoiwahChow/followers",
      "following_url": "https://api.github.com/users/ChoiwahChow/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChoiwahChow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChoiwahChow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChoiwahChow/subscriptions",
      "organizations_url": "https://api.github.com/users/ChoiwahChow/orgs",
      "repos_url": "https://api.github.com/users/ChoiwahChow/repos",
      "events_url": "https://api.github.com/users/ChoiwahChow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChoiwahChow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T00:13:47Z",
    "updated_at": "2019-02-20T00:13:47Z",
    "author_association": "NONE",
    "body": "As for [#23368](https://github.com/pandas-dev/pandas/issues/24368), it does have a lot in common with this one, although that one seems to be addressing a lot other issues with dataframes.  \r\nAs for the solution for this problem, no, I have not started thorough testing (although it does work for our use cases), as there may be a lot of contending (or even contradicting) ways of fixing the same problem, so it is just a starting point.  \r\nJudging from the code in master, there are more places to fix:\r\n```python    elif isinstance(data, (list, tuple)) and len(data) > 0:\r\n        if dtype is not None:\r\n            try:\r\n                subarr = _try_cast(data, False, dtype, copy,\r\n                                   raise_cast_failure)\r\n            except Exception:\r\n                if raise_cast_failure:  # pragma: no cover\r\n                    raise\r\n                subarr = np.array(data, dtype=object, copy=copy)\r\n                subarr = lib.maybe_convert_objects(subarr)\r\n\r\n        else:\r\n            subarr = maybe_convert_platform(data)\r\n```\r\nA new place to fix is \r\n```python\r\n                subarr = np.array(data, dtype=object, copy=copy)\r\n```\r\nIt is just as slow as the \"else\" branch (this branch eventually calls construct_1d_object_array_from_listlike, which is slow) that follows."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465365463",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-465365463",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 465365463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM2NTQ2Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T00:14:59Z",
    "updated_at": "2019-02-20T00:14:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "are you actually trying to create a Series with list elements?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465366330",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-465366330",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 465366330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM2NjMzMA==",
    "user": {
      "login": "ChoiwahChow",
      "id": 12438007,
      "node_id": "MDQ6VXNlcjEyNDM4MDA3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12438007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChoiwahChow",
      "html_url": "https://github.com/ChoiwahChow",
      "followers_url": "https://api.github.com/users/ChoiwahChow/followers",
      "following_url": "https://api.github.com/users/ChoiwahChow/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChoiwahChow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChoiwahChow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChoiwahChow/subscriptions",
      "organizations_url": "https://api.github.com/users/ChoiwahChow/orgs",
      "repos_url": "https://api.github.com/users/ChoiwahChow/repos",
      "events_url": "https://api.github.com/users/ChoiwahChow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChoiwahChow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T00:18:58Z",
    "updated_at": "2019-02-20T00:18:58Z",
    "author_association": "NONE",
    "body": "As a work around, we can use numpy array of pd.Series.  But this requires the user to actually know the pitfall."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465430843",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-465430843",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 465430843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQzMDg0Mw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T05:31:08Z",
    "updated_at": "2019-02-20T05:31:08Z",
    "author_association": "MEMBER",
    "body": "What is the use case for doing this? Understood it's a performance regression but unless I'm missing something why wouldn't you opt for a DataFrame here? \r\n\r\nJust asking as I'd be hesitant to burden the codebase with a potential fix for this if it doesn't have a practical application"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465545064",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-465545064",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 465545064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTU0NTA2NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T11:57:37Z",
    "updated_at": "2019-02-20T14:49:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> From the discussion chain of [23368](https://github.com/pandas-dev/pandas/issues/24368), I don't think the problem was fixed yet.\r\n\r\nRight, it's still open.\r\n\r\n> why wouldn't you opt for a DataFrame here?\r\n\r\nPotentially for ragged arrays, where each element is of a different length.\r\n\r\n---\r\n\r\n@ChoiwahChow can you edit the original post to include a (nicely formatted) minimal example? We'll keep this issue open specifically for the Series constructor, likely focusing on fixing or avoiding the line in `pd.core.dtypes.cast.construct_1d_object_array_from_listlike`. We'll leave #24368 for the dataframe constructor. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465616018",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-465616018",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 465616018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTYxNjAxOA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T15:06:48Z",
    "updated_at": "2019-02-20T15:06:48Z",
    "author_association": "MEMBER",
    "body": "> Potentially for ragged arrays, where each element is of a different length.\r\n\r\nRight but why is a Series within a Series useful here as opposed to say a DataFrame with SparseSeries or built-in containers? Not trying to be overly difficult here just hesitant to optimize what I would perceive (perhaps mistakenly) as very non-idiomatic code"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465668863",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-465668863",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 465668863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTY2ODg2Mw==",
    "user": {
      "login": "mrocklin",
      "id": 306380,
      "node_id": "MDQ6VXNlcjMwNjM4MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrocklin",
      "html_url": "https://github.com/mrocklin",
      "followers_url": "https://api.github.com/users/mrocklin/followers",
      "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
      "organizations_url": "https://api.github.com/users/mrocklin/orgs",
      "repos_url": "https://api.github.com/users/mrocklin/repos",
      "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrocklin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T17:08:17Z",
    "updated_at": "2019-02-20T17:08:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is another case of possible the same problem\r\n\r\n```python\r\nIn [1]: import numpy as np, pandas as pd, pyarrow as pa\r\n\r\nIn [2]: df = pd.DataFrame({'x': np.arange(1000000)})\r\n\r\nIn [3]: %time t = pa.Table.from_pandas(df)\r\nCPU times: user 5.36 ms, sys: 3.22 ms, total: 8.58 ms\r\nWall time: 7.47 ms\r\n\r\nIn [4]: %time s = pd.Series([t], dtype=object)\r\nCPU times: user 2.7 s, sys: 114 ms, total: 2.82 s\r\nWall time: 2.81 s\r\n```\r\n\r\nOriginally posted in https://github.com/pandas-dev/pandas/issues/25389"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465673907",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-465673907",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 465673907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTY3MzkwNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T17:21:19Z",
    "updated_at": "2019-02-20T17:21:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Right but why is a Series within a Series useful here as opposed to say a DataFrame with SparseSeries or built-in containers?\r\n\r\nI think the \"Series within as Series\" doesn't fully capture the issue. I believe this affects any iterable object that doesn't implement the buffer protocol.\r\n\r\n```python\r\nIn [19]: %timeit pd.Series([ser])\r\n14.8 ms ± 270 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\r\n\r\nIn [20]: %timeit pd.Series([arr])\r\n91.2 µs ± 1.73 µs per loop (mean ± std. dev. of 7 runs, 10000 loops each)\r\n\r\nIn [21]: %timeit pd.Series([mem])\r\n98.1 µs ± 4.34 µs per loop (mean ± std. dev. of 7 runs, 10000 loops each)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/466228126",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-466228126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 466228126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjIyODEyNg==",
    "user": {
      "login": "ChoiwahChow",
      "id": 12438007,
      "node_id": "MDQ6VXNlcjEyNDM4MDA3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12438007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChoiwahChow",
      "html_url": "https://github.com/ChoiwahChow",
      "followers_url": "https://api.github.com/users/ChoiwahChow/followers",
      "following_url": "https://api.github.com/users/ChoiwahChow/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChoiwahChow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChoiwahChow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChoiwahChow/subscriptions",
      "organizations_url": "https://api.github.com/users/ChoiwahChow/orgs",
      "repos_url": "https://api.github.com/users/ChoiwahChow/repos",
      "events_url": "https://api.github.com/users/ChoiwahChow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChoiwahChow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-22T00:46:09Z",
    "updated_at": "2019-02-22T00:51:20Z",
    "author_association": "NONE",
    "body": "> What is the use case for doing this? Understood it's a performance regression but unless I'm missing \r\n> something why wouldn't you opt for a DataFrame here?\r\n\r\nThe use case was not specifically for creating a pandas series of pandas series. But the problem was easy to demonstrate with a pandas series of pandas series.\r\n\r\nA more general use case would be: suppose we have a list of homogeneous data structures, which could be scalars, pandas data frames, dictionaries etc (but we don't know the data type in advance) and we want to put them into a pandas series so that we can add indices to them.  The index could be pandas datatime.  The problem will not show up when the data structures are integers, or floats, but it will when the data structures are pandas series.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469257924",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25364#issuecomment-469257924",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25364",
    "id": 469257924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTI1NzkyNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T13:45:59Z",
    "updated_at": "2019-03-04T13:45:59Z",
    "author_association": "MEMBER",
    "body": "@ChoiwahChow Regarding your comment [above](https://github.com/pandas-dev/pandas/issues/25364#issuecomment-464949046) about replacing ` result[:] = values` with an explicit loop to restore the original performance. I don't see a speed up with a test case, rather a slowdown:\r\n\r\n```\r\nIn [23]: data = [[1, 2], [2, 3], [3, 4]] * 10000\r\n\r\nIn [26]: %%timeit \r\n    ...: result = np.empty(30000, dtype=object) \r\n    ...: result[:] = data \r\n    ...:  \r\n1.03 ms ± 39.3 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)\r\n\r\nIn [28]: %%timeit \r\n    ...: result = np.empty(30000, dtype=object) \r\n    ...: for i, value in enumerate(data): \r\n    ...:     result[i] = value \r\n    ...:       \r\n2.83 ms ± 105 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\r\n```"
  }
]
