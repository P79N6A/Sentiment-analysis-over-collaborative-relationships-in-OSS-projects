[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160476048",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11719#issuecomment-160476048",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11719",
    "id": 160476048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQ3NjA0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-29T22:18:37Z",
    "updated_at": "2015-11-29T22:18:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Regardless of the arguments specified, the return of DataFrame.join always has the left side's index values and name. In the case of how='right', there should be np.nan in the index when the right side does not 'match' a row on the left.\n\nwhere does this come from?\n\nIn this case there are no matches, yet you need an index. What would you have it do?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160571813",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11719#issuecomment-160571813",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11719",
    "id": 160571813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDU3MTgxMw==",
    "user": {
      "login": "timdiels",
      "id": 847329,
      "node_id": "MDQ6VXNlcjg0NzMyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/847329?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timdiels",
      "html_url": "https://github.com/timdiels",
      "followers_url": "https://api.github.com/users/timdiels/followers",
      "following_url": "https://api.github.com/users/timdiels/following{/other_user}",
      "gists_url": "https://api.github.com/users/timdiels/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timdiels/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timdiels/subscriptions",
      "organizations_url": "https://api.github.com/users/timdiels/orgs",
      "repos_url": "https://api.github.com/users/timdiels/repos",
      "events_url": "https://api.github.com/users/timdiels/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timdiels/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-30T09:33:52Z",
    "updated_at": "2015-11-30T09:33:52Z",
    "author_association": "NONE",
    "body": "The docstring leaves it unspecified, or at least it's not very clear; so combined with a python interpreter, I assume it always returns the left side's index. Further, I interpreted `how` as inner, left outer, right outer, outer join. Knowing which index will be returned in each case is very useful for scripts at least.\n\nNow, back to this case. I have an algorithm whose inputs sometimes contains an empty DataFrame. This will cause a lot of `NaN`s in outer joins and that's fine for my case. I don't have to check for it being empty anywhere, it just keeps working; except in the case I mentioned above. It breaks like so:\n\n``` python\ndf = df.join(s, how='right', on='gene')\n# later on\ndf.reset_index().groupby('gene_id')['family']  # <-- no 'family' column if input df was empty, yet worked just fine when input df wasn't empty\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160607181",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11719#issuecomment-160607181",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11719",
    "id": 160607181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDYwNzE4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-30T11:40:23Z",
    "updated_at": "2015-11-30T11:40:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, can you make a short tests which exercises all of these cases (e.g. 4 x how x (left empty, right non-empty + left non-empty, right empty + both empty + both non-empty), and show results? this can confirm what is existing behavior.\n\nessentialy this is a nested loop over the cases (and which can directly be turned into a test)\n"
  }
]
