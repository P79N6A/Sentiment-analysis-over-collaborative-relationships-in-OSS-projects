[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/154404564",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11527#issuecomment-154404564",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11527",
    "id": 154404564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDQwNDU2NA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-06T13:04:21Z",
    "updated_at": "2015-11-06T13:04:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure those keywords actually do anything with the excel parser?\n\n``` python\nIn [12]: dti = pd.date_range('2014-1-1', periods=10)\n\nIn [13]: df = pd.DataFrame({'dates':dti, 'strings':dti.strftime('%m/%d/%Y')})\n\nIn [14]: df.dtypes\nOut[14]: \ndates      datetime64[ns]\nstrings            object\ndtype: object\n\nIn [15]: df.to_excel('test.xlsx')\n\nIn [16]: pd.read_excel('test.xlsx').dtypes\nOut[16]: \ndates      datetime64[ns]\nstrings            object\ndtype: object\n\nIn [17]: pd.read_excel('test.xlsx', parse_dates=True).dtypes\nOut[17]: \ndates      datetime64[ns]\nstrings            object\ndtype: object\n\nIn [18]: pd.read_excel('test.xlsx', parse_dates=False).dtypes\nOut[18]: \ndates      datetime64[ns]\nstrings            object\ndtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/154712011",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11527#issuecomment-154712011",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11527",
    "id": 154712011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDcxMjAxMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-07T14:45:39Z",
    "updated_at": "2015-11-07T14:45:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeh, I don't think these are valid keywords. Actually what we really need here is a check on non-implemented keywords. Closing this and I will create another issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/155220652",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11527#issuecomment-155220652",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11527",
    "id": 155220652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTIyMDY1Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-09T22:35:31Z",
    "updated_at": "2015-11-09T22:35:31Z",
    "author_association": "MEMBER",
    "body": "@chris-b1 It actually even gives an error and is not just ignored. With your example (as `parse_dates=True` if for parsing the index, so if you want to see if it can parse the string column, you have to pass its name):\n\n```\nIn [37]: pd.read_excel('test.xlsx', parse_dates=['strings'])\n\n....\n\nC:\\Anaconda\\lib\\site-packages\\pandas\\io\\parsers.pyc in _should_parse_dates(self,\n i)\n    812             return self.parse_dates\n    813         else:\n--> 814             name = self.index_names[i]\n    815             j = self.index_col[i]\n    816\n\nTypeError: 'NoneType' object has no attribute '__getitem__'\n```\n\nBut if you set the `strings` column as the index, `parse_dates=True` is indeed ignored.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/166587420",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11527#issuecomment-166587420",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11527",
    "id": 166587420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjU4NzQyMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-22T11:21:47Z",
    "updated_at": "2015-12-22T11:21:47Z",
    "author_association": "MEMBER",
    "body": "@chris-b1 This error actually only happens if you have an implicit index due to the structure of the excel file. If you don't have this, `parse_dates` works as expected:\n\n```\nIn [46]: df.to_excel('test.xlsx', index=False)\n\nIn [47]: pd.read_excel('test.xlsx').dtypes\nOut[47]:\ndates      datetime64[ns]\nstrings            object\ndtype: object\n\nIn [48]: pd.read_excel('test.xlsx', parse_dates=['strings']).dtypes\nOut[48]:\ndates      datetime64[ns]\nstrings    datetime64[ns]\ndtype: object\n```\n"
  }
]
