[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366839257",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19778#issuecomment-366839257",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19778",
    "id": 366839257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjgzOTI1Nw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-20T01:09:54Z",
    "updated_at": "2018-02-20T01:09:54Z",
    "author_association": "MEMBER",
    "body": "I was wrong on my original comment about `self._filter_empty_groups` always being `False` - it is set to `True` in the `BaseGrouper` initialization if there is more than one grouping. \r\n\r\nThat said, I think there's still something strange with the implementation here. The `counts` parameter is initialized to an array matching the `ngroups` parameter, which appears to exclude `NaN` values:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/e022d9a0886b245afe4af4cc43904a112cd00882/pandas/core/groupby.py#L2378\r\n\r\nIn essence the, the `counts` variable local to the `_cython_operation` function will only give you the number of times that each non-`NaN` group label appears. Assuming that to be true, then the conditional in my original comment still doesn't serve a purpose because it has no notion of when `NaN` actually does occur\r\n\r\nI noticed that #3729 is open and may impact how we go about this. Perhaps even some of this code was put here with the forward-looking intention of servicing that request? I would still lean towards removing the variable until that implementation actually happens to minimize the code-base. Curious if others have thoughts"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366842721",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19778#issuecomment-366842721",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19778",
    "id": 366842721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njg0MjcyMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-20T01:35:09Z",
    "updated_at": "2018-02-20T01:35:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "there is an old impl that gets u nan groupings (ref from #3729) may want to have a look"
  }
]
