[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/460442620",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25143#issuecomment-460442620",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25143",
    "id": 460442620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDQ0MjYyMA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T22:42:09Z",
    "updated_at": "2019-02-04T22:42:09Z",
    "author_association": "MEMBER",
    "body": "Agreed this looks strange. Investigation and PR's welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/462094692",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25143#issuecomment-462094692",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25143",
    "id": 462094692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjA5NDY5Mg==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-10T01:15:23Z",
    "updated_at": "2019-02-10T05:54:48Z",
    "author_association": "MEMBER",
    "body": "So in `to_datetime`, we have a lot of sub functions that also attempts error handling while the the logic of when to return a result is inconsistent as well. I have a feeling that pulling out the error handling logic at more of a top level would help make this keyword return a more consistent result."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463295150",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25143#issuecomment-463295150",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25143",
    "id": 463295150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzI5NTE1MA==",
    "user": {
      "login": "saurav2608",
      "id": 4477229,
      "node_id": "MDQ6VXNlcjQ0NzcyMjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4477229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saurav2608",
      "html_url": "https://github.com/saurav2608",
      "followers_url": "https://api.github.com/users/saurav2608/followers",
      "following_url": "https://api.github.com/users/saurav2608/following{/other_user}",
      "gists_url": "https://api.github.com/users/saurav2608/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saurav2608/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saurav2608/subscriptions",
      "organizations_url": "https://api.github.com/users/saurav2608/orgs",
      "repos_url": "https://api.github.com/users/saurav2608/repos",
      "events_url": "https://api.github.com/users/saurav2608/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saurav2608/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-13T17:42:03Z",
    "updated_at": "2019-02-13T17:42:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I will have a look at this. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463374313",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25143#issuecomment-463374313",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25143",
    "id": 463374313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzM3NDMxMw==",
    "user": {
      "login": "ngutzmann",
      "id": 5994956,
      "node_id": "MDQ6VXNlcjU5OTQ5NTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5994956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ngutzmann",
      "html_url": "https://github.com/ngutzmann",
      "followers_url": "https://api.github.com/users/ngutzmann/followers",
      "following_url": "https://api.github.com/users/ngutzmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/ngutzmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ngutzmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ngutzmann/subscriptions",
      "organizations_url": "https://api.github.com/users/ngutzmann/orgs",
      "repos_url": "https://api.github.com/users/ngutzmann/repos",
      "events_url": "https://api.github.com/users/ngutzmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ngutzmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-13T21:15:12Z",
    "updated_at": "2019-02-13T21:16:10Z",
    "author_association": "NONE",
    "body": "Perhaps this is a bit of useful information. In pandas 0.23.4 the functionality looks to be correct:\r\n```\r\n>>> import pandas as pd\r\n>>> pd.__version__\r\n'0.23.4'\r\n>>> d = { 'ts': ['2019-02-02 08:07:13+00', '2019-02-02 08:03:22.54+00'] }\r\n>>> df = pd.DataFrame(data=d)\r\n>>> df\r\n                          ts\r\n0     2019-02-02 08:07:13+00\r\n1  2019-02-02 08:03:22.54+00\r\n>>> df['ts'] = pd.to_datetime(df['ts'], infer_datetime_format=True, errors='coerce')\r\n>>> df\r\n                       ts\r\n0 2019-02-02 08:07:13.000\r\n1 2019-02-02 08:03:22.540\r\n>>> df.dtypes\r\nts    datetime64[ns]\r\ndtype: object\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464434989",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25143#issuecomment-464434989",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25143",
    "id": 464434989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDQzNDk4OQ==",
    "user": {
      "login": "saurav2608",
      "id": 4477229,
      "node_id": "MDQ6VXNlcjQ0NzcyMjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4477229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saurav2608",
      "html_url": "https://github.com/saurav2608",
      "followers_url": "https://api.github.com/users/saurav2608/followers",
      "following_url": "https://api.github.com/users/saurav2608/following{/other_user}",
      "gists_url": "https://api.github.com/users/saurav2608/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saurav2608/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saurav2608/subscriptions",
      "organizations_url": "https://api.github.com/users/saurav2608/orgs",
      "repos_url": "https://api.github.com/users/saurav2608/repos",
      "events_url": "https://api.github.com/users/saurav2608/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saurav2608/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-17T09:43:12Z",
    "updated_at": "2019-02-17T09:43:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think we need some discussion on what is the correct behavior in some of the corner cases. For example in the below case (on version 0.24.0). I think as errors is 'raise' the second command should raise an error. Currently, we retry parsing on error if '_infer_datetime_format_' is **True**. And reading the code here(https://github.com/pandas-dev/pandas/blob/4a20d5b9e526435a53b7cb1dc0a819299d31f040/pandas/core/tools/datetimes.py#L296) makes me think that this behavior is by design. \r\n\r\nI think, if errors = 'raise' and anytime we encounter error (even with infer_datetime_format) we should raise and stop. \r\n\r\n```\r\nIn [12]: s = pd.Series(np.array(['01/01/2011 00:00:00', \r\n    ...:                                 '01-02-2011 00:00:00', \r\n    ...:                                 '2011-01-03T00:00:00']))                                                                                                                 \r\n\r\nIn [13]: s                                                                                                                                                                        \r\nOut[13]: \r\n0    01/01/2011 00:00:00\r\n1    01-02-2011 00:00:00\r\n2    2011-01-03T00:00:00\r\ndtype: object\r\nIn [19]: pd.to_datetime(s, infer_datetime_format=True, errors='coerce')                                                                                                           \r\nOut[19]: \r\n0   2011-01-01\r\n1          NaT\r\n2          NaT\r\ndtype: datetime64[ns]\r\n\r\nIn [20]: pd.to_datetime(s, infer_datetime_format=True, errors='raise')                                                                                                            \r\nOut[20]: \r\n0   2011-01-01\r\n1   2011-01-02\r\n2   2011-01-03\r\ndtype: datetime64[ns]\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465437092",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25143#issuecomment-465437092",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25143",
    "id": 465437092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQzNzA5Mg==",
    "user": {
      "login": "saurav2608",
      "id": 4477229,
      "node_id": "MDQ6VXNlcjQ0NzcyMjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4477229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saurav2608",
      "html_url": "https://github.com/saurav2608",
      "followers_url": "https://api.github.com/users/saurav2608/followers",
      "following_url": "https://api.github.com/users/saurav2608/following{/other_user}",
      "gists_url": "https://api.github.com/users/saurav2608/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saurav2608/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saurav2608/subscriptions",
      "organizations_url": "https://api.github.com/users/saurav2608/orgs",
      "repos_url": "https://api.github.com/users/saurav2608/repos",
      "events_url": "https://api.github.com/users/saurav2608/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saurav2608/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T06:01:41Z",
    "updated_at": "2019-02-20T06:01:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think we need some discussion on what is the correct behavior in some of the corner cases. For example in the below case (on version 0.24.0). I think as errors is 'raise' the second command should raise an error. Currently, we retry parsing on error if '_infer_datetime_format_' is **True**. And reading the code here(\r\n> \r\n> [pandas/pandas/core/tools/datetimes.py](https://github.com/pandas-dev/pandas/blob/4a20d5b9e526435a53b7cb1dc0a819299d31f040/pandas/core/tools/datetimes.py#L296)\r\n> \r\n> Line 296 in [4a20d5b](/pandas-dev/pandas/commit/4a20d5b9e526435a53b7cb1dc0a819299d31f040)\r\n> \r\n>  if result is None: \r\n> ) makes me think that this behavior is by design.\r\n> I think, if errors = 'raise' and anytime we encounter error (even with infer_datetime_format) we should raise and stop.\r\n> \r\n> ```\r\n> In [12]: s = pd.Series(np.array(['01/01/2011 00:00:00', \r\n>     ...:                                 '01-02-2011 00:00:00', \r\n>     ...:                                 '2011-01-03T00:00:00']))                                                                                                                 \r\n> \r\n> In [13]: s                                                                                                                                                                        \r\n> Out[13]: \r\n> 0    01/01/2011 00:00:00\r\n> 1    01-02-2011 00:00:00\r\n> 2    2011-01-03T00:00:00\r\n> dtype: object\r\n> In [19]: pd.to_datetime(s, infer_datetime_format=True, errors='coerce')                                                                                                           \r\n> Out[19]: \r\n> 0   2011-01-01\r\n> 1          NaT\r\n> 2          NaT\r\n> dtype: datetime64[ns]\r\n> \r\n> In [20]: pd.to_datetime(s, infer_datetime_format=True, errors='raise')                                                                                                            \r\n> Out[20]: \r\n> 0   2011-01-01\r\n> 1   2011-01-02\r\n> 2   2011-01-03\r\n> dtype: datetime64[ns]\r\n> ```\r\n\r\n@mroeschke : any thoughts on this. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465444209",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25143#issuecomment-465444209",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25143",
    "id": 465444209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQ0NDIwOQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T06:33:32Z",
    "updated_at": "2019-02-20T06:33:32Z",
    "author_association": "MEMBER",
    "body": "So the core issue is that our format guessing function is unable to guess %z, UTC offsets.\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/2909b830fa21c6bc2e9797aae25b13f9a060653a/pandas/_libs/tslibs/parsing.pyx#L635\r\n\r\nI agree with your suggestion though; `errors='raise'` should always raise whenever there's an error. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/467402445",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25143#issuecomment-467402445",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25143",
    "id": 467402445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzQwMjQ0NQ==",
    "user": {
      "login": "nicolasdaviaud",
      "id": 25005659,
      "node_id": "MDQ6VXNlcjI1MDA1NjU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/25005659?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasdaviaud",
      "html_url": "https://github.com/nicolasdaviaud",
      "followers_url": "https://api.github.com/users/nicolasdaviaud/followers",
      "following_url": "https://api.github.com/users/nicolasdaviaud/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasdaviaud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasdaviaud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasdaviaud/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasdaviaud/orgs",
      "repos_url": "https://api.github.com/users/nicolasdaviaud/repos",
      "events_url": "https://api.github.com/users/nicolasdaviaud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasdaviaud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T11:26:46Z",
    "updated_at": "2019-02-26T11:26:46Z",
    "author_association": "NONE",
    "body": "I have a similar issue on 0.24.1, it also seems to be related to different time zones in the same query:\r\n```python\r\ndates = ['2016-05-19T10:27:05', '20/05/2016 11:28:06', '']\r\nprint(pd.to_datetime(dates, errors='raise', infer_datetime_format=True, box=False))\r\nprint(pd.to_datetime(dates, errors='coerce', infer_datetime_format=True, box=False))\r\n```\r\nreturns\r\n```\r\n['2016-05-19T10:27:05.000000000' '2016-05-20T11:28:06.000000000' 'NaT']\r\n['2016-05-19T10:27:05.000000000' '2016-05-20T11:28:06.000000000' 'NaT']\r\n```\r\nbut adding a `Z` to the first date changes the behaviour on the second\r\n```python\r\ndates = ['2016-05-19T10:27:05Z', '20/05/2016 11:28:06', '']\r\nprint(pd.to_datetime(dates, errors='raise', infer_datetime_format=True, box=False))\r\nprint(pd.to_datetime(dates, errors='coerce', infer_datetime_format=True, box=False))\r\n```\r\nreturns \r\n```\r\n[datetime.datetime(2016, 5, 19, 10, 27, 5, tzinfo=tzutc()) datetime.datetime(2016, 5, 20, 11, 28, 6) 'NaT']\r\n['2016-05-19T10:27:05.000000000' 'NaT' 'NaT']\r\n```\r\n\r\n\r\n#### Output of ``pd.show_versions()``\r\n\r\n<details>\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: None\r\npython: 3.7.2.final.0\r\npython-bits: 64\r\nOS: Darwin\r\nOS-release: 18.2.0\r\nmachine: x86_64\r\nprocessor: i386\r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: fr_FR.UTF-8\r\nLOCALE: fr_FR.UTF-8\r\n\r\npandas: 0.24.1\r\npytest: None\r\npip: 18.1\r\nsetuptools: 40.6.3\r\nCython: None\r\nnumpy: 1.16.1\r\nscipy: 1.2.1\r\npyarrow: None\r\nxarray: None\r\nIPython: 7.2.0\r\nsphinx: None\r\npatsy: 0.5.1\r\ndateutil: 2.8.0\r\npytz: 2018.9\r\nblosc: None\r\nbottleneck: None\r\ntables: None\r\nnumexpr: None\r\nfeather: None\r\nmatplotlib: 3.0.2\r\nopenpyxl: None\r\nxlrd: None\r\nxlwt: None\r\nxlsxwriter: None\r\nlxml.etree: None\r\nbs4: None\r\nhtml5lib: None\r\nsqlalchemy: None\r\npymysql: None\r\npsycopg2: None\r\njinja2: 2.10\r\ns3fs: None\r\nfastparquet: None\r\npandas_gbq: None\r\npandas_datareader: None\r\ngcsfs: None\r\n</details>"
  }
]
