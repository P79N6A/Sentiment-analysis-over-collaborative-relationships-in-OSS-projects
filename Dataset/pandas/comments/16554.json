[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305339871",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16554#issuecomment-305339871",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16554",
    "id": 305339871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTMzOTg3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T22:47:27Z",
    "updated_at": "2017-05-31T22:47:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "only implemented is_monotonic_increasing. It needs the same impl. (but its not used anywhere ATM)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305501196",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16554#issuecomment-305501196",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16554",
    "id": 305501196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTUwMTE5Ng==",
    "user": {
      "login": "Tafkas",
      "id": 34058,
      "node_id": "MDQ6VXNlcjM0MDU4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/34058?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tafkas",
      "html_url": "https://github.com/Tafkas",
      "followers_url": "https://api.github.com/users/Tafkas/followers",
      "following_url": "https://api.github.com/users/Tafkas/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tafkas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tafkas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tafkas/subscriptions",
      "organizations_url": "https://api.github.com/users/Tafkas/orgs",
      "repos_url": "https://api.github.com/users/Tafkas/repos",
      "events_url": "https://api.github.com/users/Tafkas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tafkas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T13:58:01Z",
    "updated_at": "2017-06-01T13:58:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "`is_monotonic_increasing` is based on `numpy.lexsort`which seems not to support ordering in descending order."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305502513",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16554#issuecomment-305502513",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16554",
    "id": 305502513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTUwMjUxMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T14:02:24Z",
    "updated_at": "2017-06-01T14:02:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can we define `is_monotonic_decreasing` in terms of increasing? Something like\r\n\r\n```\r\ndef is_monotonic_decreasing(self):\r\n    return not self.is_strictly_monotonic_increasing or idx.nunique() == 1\r\n```\r\n\r\nnot sure if that will work. Looks like `nunique` may not be implemented on MI."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/306311570",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16554#issuecomment-306311570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16554",
    "id": 306311570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjMxMTU3MA==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-05T21:11:52Z",
    "updated_at": "2017-06-05T21:11:52Z",
    "author_association": "MEMBER",
    "body": "I don't think that will work in general.  You can't get monotonic decreasing from monotonic increasing in all scenarios, unless there's an assumption that the data is monotonic/sorted in some regard.  For example, a MultiIndex generated by `[(3, 3), (1, 1), (2, 2)]` is not monotonic decreasing, but will return `True`.\r\n\r\nI think you can implement this similar to `is_monotonic_increasing`.  It's true that `numpy.lexsort`  only seems to support ordering in descending order, but you can get around this.  My initial thought was to just reverse the output of `numpy.lexsort`, but that messes up the order if you have non-unique indices, e.g. `[(3, 3), (2, 2), (2, 2), (1, 1)]`.  The fix would be to add a fake unique decreasing level to the input of `numpy.lexsort` to force uniqueness.  Looking at the source code for `is_monotonic_increasing`, I think you'd just need to make changes along the lines of `values = [np.arange(len(idx) - 1, -1, -1)] + [existing comprehension]` followed by `sort_order = np.lexsort(values)[::-1]`.  And in the `except` clause `pd.Index(idx.values).is_monotonic_decreasing`."
  }
]
