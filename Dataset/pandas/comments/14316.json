[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250309007",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14316#issuecomment-250309007",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14316",
    "id": 250309007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDMwOTAwNw==",
    "user": {
      "login": "boncelet",
      "id": 7838172,
      "node_id": "MDQ6VXNlcjc4MzgxNzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7838172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boncelet",
      "html_url": "https://github.com/boncelet",
      "followers_url": "https://api.github.com/users/boncelet/followers",
      "following_url": "https://api.github.com/users/boncelet/following{/other_user}",
      "gists_url": "https://api.github.com/users/boncelet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boncelet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boncelet/subscriptions",
      "organizations_url": "https://api.github.com/users/boncelet/orgs",
      "repos_url": "https://api.github.com/users/boncelet/repos",
      "events_url": "https://api.github.com/users/boncelet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boncelet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T21:40:19Z",
    "updated_at": "2016-09-28T21:40:19Z",
    "author_association": "NONE",
    "body": "Sorry to comment on my own issue, but here are two more examples. I get that the rows are different orders, but shouldn't both return the same number of rows?\n\n``` python\nprint(rdf['2016-01-01':'2016-01-03':-1])\n            Col\n2016-01-02    2\n2016-01-03    3\n```\n\n``` python\nprint(df['2016-01-03':'2016-01-01':-1])\n            Col\n2016-01-03    3\n2016-01-02    2\n2016-01-01    1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250316560",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14316#issuecomment-250316560",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14316",
    "id": 250316560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDMxNjU2MA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T22:10:23Z",
    "updated_at": "2016-09-28T22:10:23Z",
    "author_association": "MEMBER",
    "body": "> Now the reverse order: I expect to get exactly the same answer (same slice on the same dataset), perhaps with rows reversed, but don't:\n> \n> ```\n> >> print(rdf['2016-01-01':'2016-01-03'])\n> Empty DataFrame\n> Columns: [Col]\n> Index: []\n> ```\n\nThis part at least is working as intended. Slicing a descending order index requires a descending slice. This mirrors how slicing an ascending order index requires an ascending slice.\n\nDatetime indexing with strings involves some implicit rounding to match all appropriate times. It's possible that the logic is not quite right for reversed indexes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250322558",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14316#issuecomment-250322558",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14316",
    "id": 250322558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDMyMjU1OA==",
    "user": {
      "login": "boncelet",
      "id": 7838172,
      "node_id": "MDQ6VXNlcjc4MzgxNzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7838172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boncelet",
      "html_url": "https://github.com/boncelet",
      "followers_url": "https://api.github.com/users/boncelet/followers",
      "following_url": "https://api.github.com/users/boncelet/following{/other_user}",
      "gists_url": "https://api.github.com/users/boncelet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boncelet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boncelet/subscriptions",
      "organizations_url": "https://api.github.com/users/boncelet/orgs",
      "repos_url": "https://api.github.com/users/boncelet/repos",
      "events_url": "https://api.github.com/users/boncelet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boncelet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T22:40:21Z",
    "updated_at": "2016-09-28T22:40:21Z",
    "author_association": "NONE",
    "body": "The reason I said \" I expect to get exactly the same answer (same slice on the same dataset)\" is that I expected a slice to behave like a query on a database: give me all rows whose dates are in the range (inclusive).  Clearly, the implementation will be much faster if the index is ordered (internally), but the query (slice) should still work as \"expected\" even if not.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250323347",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14316#issuecomment-250323347",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14316",
    "id": 250323347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDMyMzM0Nw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T22:44:37Z",
    "updated_at": "2016-09-28T22:44:37Z",
    "author_association": "MEMBER",
    "body": ">  I expected a slice to behave like a query on a database: give me all rows whose dates are in the range (inclusive).\n\nThis is a reasonable intuition, but it's the wrong mental model for slicing in pandas.  A better model is: give me the continuous slice of the data enclosed by these bounds. Slicing in pandas doesn't work on indexes that are not either monotonic increasing or monotonic decreasing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250330395",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14316#issuecomment-250330395",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14316",
    "id": 250330395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDMzMDM5NQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T23:24:52Z",
    "updated_at": "2016-09-28T23:24:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should label slicing with a step maybe just raise?  I might be missing a valid usecase, but I'm not even sure if these are bugs, because I don't really know what to expect.\n\n```\nIn [8]: rdf['2016-01-01':'2016-01-03':-1]\nOut[8]: \n            Col\n2016-01-02    2\n2016-01-03    3\n\nIn [9]: df['2016-01-03':'2016-01-01':-1]\nOut[9]: \n            Col\n2016-01-03    3\n2016-01-02    2\n2016-01-01    1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250331502",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14316#issuecomment-250331502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14316",
    "id": 250331502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDMzMTUwMg==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T23:31:59Z",
    "updated_at": "2016-09-28T23:31:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess there are tests here covering this behavior, so it is well defined, if a little strange.\n\nhttps://github.com/pydata/pandas/blob/master/pandas/tests/indexing/test_indexing.py#L5140\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250332473",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14316#issuecomment-250332473",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14316",
    "id": 250332473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDMzMjQ3Mw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T23:38:02Z",
    "updated_at": "2016-09-28T23:38:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@boncelet - of these cases, the only one that looks buggy to me is this one - it should include the ending label.  The others seem to just be symptoms of slicing semantics like @shoyer mentioned.  Thanks for the report.\n\n```\nIn [22]: rdf.loc['2016-01-03':'2016-01-01', :]\nOut[22]: \n            Col\n2016-01-03    3\n2016-01-02    2\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250334467",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14316#issuecomment-250334467",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14316",
    "id": 250334467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDMzNDQ2Nw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T23:50:54Z",
    "updated_at": "2016-09-28T23:50:54Z",
    "author_association": "MEMBER",
    "body": "I think the issue is in [`_maybe_cast_slice_bound`](https://github.com/pydata/pandas/blob/5033a4a799c77fdc7e868a9f332384eabcc332b8/pandas/tseries/index.py#L1421). It needs to flip `side` for monotonic decreasing, like [`_searchsorted_monotonic`](https://github.com/pydata/pandas/blob/5033a4a799c77fdc7e868a9f332384eabcc332b8/pandas/indexes/base.py#L3042)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250335857",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14316#issuecomment-250335857",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14316",
    "id": 250335857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDMzNTg1Nw==",
    "user": {
      "login": "boncelet",
      "id": 7838172,
      "node_id": "MDQ6VXNlcjc4MzgxNzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7838172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boncelet",
      "html_url": "https://github.com/boncelet",
      "followers_url": "https://api.github.com/users/boncelet/followers",
      "following_url": "https://api.github.com/users/boncelet/following{/other_user}",
      "gists_url": "https://api.github.com/users/boncelet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boncelet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boncelet/subscriptions",
      "organizations_url": "https://api.github.com/users/boncelet/orgs",
      "repos_url": "https://api.github.com/users/boncelet/repos",
      "events_url": "https://api.github.com/users/boncelet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boncelet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T00:00:41Z",
    "updated_at": "2016-09-29T00:00:41Z",
    "author_association": "NONE",
    "body": "Thanks.  Part of my concern is it wasn't obvious to me I needed to worry about the order of the data in the original CSV file.  Same data, whether it's sorted first to last or last to first.  \n\nIt turns out I was wrong about plots.  At least some plots give the x-axis (time) reversed.  Normally this is not what we want.  \n\nUnfortunately, this slicing (and plotting) behavior means user code has to check the order of the data and sort it if necessary.  For modest datasets (like those I'm looking at) no problem.  But I can imagine huge datasets where sorting will be a burden.  \n\nIt might be nice to have a user settable flag to reverse the index without actually reversing the index, analogously to a numpy stride (which can be negative).  That way we can assume the index is increasing even if internally it is decreasing.  It'd be even nicer if the various dataframe creators set the flag automatically, thereby relieving the user of the necessity to check the order.\n\nSincerely, thanks to all you developers who've worked so hard to create useful tools like pandas.\n"
  }
]
