[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443095189",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24008#issuecomment-443095189",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24008",
    "id": 443095189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzA5NTE4OQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-30T05:24:18Z",
    "updated_at": "2018-11-30T05:24:18Z",
    "author_association": "NONE",
    "body": "Hello @jbrockmendel! Thanks for submitting the PR.\n\n - There are no PEP8 issues in the file [`pandas/core/arrays/datetimes.py`](https://github.com/jbrockmendel/pandas/blob/81e8987c083abbc99628f3faa26468917f72bd2b/pandas/core/arrays/datetimes.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/arrays/period.py`](https://github.com/jbrockmendel/pandas/blob/81e8987c083abbc99628f3faa26468917f72bd2b/pandas/core/arrays/period.py) !\n\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443095352",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24008#issuecomment-443095352",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24008",
    "id": 443095352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzA5NTM1Mg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-30T05:25:24Z",
    "updated_at": "2018-11-30T05:25:24Z",
    "author_association": "MEMBER",
    "body": "Also moved some NaTType properties from the python class to the cython class, as those are supposed to be marginally more efficient"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443391177",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24008#issuecomment-443391177",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24008",
    "id": 443391177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzM5MTE3Nw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-01T02:15:56Z",
    "updated_at": "2018-12-01T02:15:56Z",
    "author_association": "MEMBER",
    "body": "Travis failures are pickle plotting, not clearly related."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443440158",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24008#issuecomment-443440158",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24008",
    "id": 443440158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzQ0MDE1OA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-12-01T16:55:40Z",
    "updated_at": "2018-12-01T16:55:40Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24008?src=pr&el=h1) Report\n> Merging [#24008](https://codecov.io/gh/pandas-dev/pandas/pull/24008?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/5b0610b875476a6f3727d7e9bedb90d370c669b5?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24008/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24008?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #24008      +/-   ##\n==========================================\n- Coverage   42.46%   42.46%   -0.01%     \n==========================================\n  Files         161      161              \n  Lines       51557    51554       -3     \n==========================================\n- Hits        21892    21890       -2     \n+ Misses      29665    29664       -1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #single | `42.46% <100%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24008?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/arrays/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/24008/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2RhdGV0aW1lcy5weQ==) | `63.41% <ø> (-0.08%)` | :arrow_down: |\n| [pandas/core/arrays/period.py](https://codecov.io/gh/pandas-dev/pandas/pull/24008/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL3BlcmlvZC5weQ==) | `36.97% <100%> (-0.15%)` | :arrow_down: |\n| [pandas/core/reshape/tile.py](https://codecov.io/gh/pandas-dev/pandas/pull/24008/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS90aWxlLnB5) | `11.69% <0%> (+0.06%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24008?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24008?src=pr&el=footer). Last update [5b0610b...8dc29f7](https://codecov.io/gh/pandas-dev/pandas/pull/24008?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443440159",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24008#issuecomment-443440159",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24008",
    "id": 443440159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzQ0MDE1OQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-12-01T16:55:40Z",
    "updated_at": "2018-12-02T18:46:44Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24008?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`master@9d85b22`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24008/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24008?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##             master   #24008   +/-   ##\n=========================================\n  Coverage          ?   42.44%           \n=========================================\n  Files             ?      161           \n  Lines             ?    51559           \n  Branches          ?        0           \n=========================================\n  Hits              ?    21886           \n  Misses            ?    29673           \n  Partials          ?        0\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #single | `42.44% <100%> (?)` | |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24008?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/arrays/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/24008/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2RhdGV0aW1lcy5weQ==) | `63.41% <ø> (ø)` | |\n| [pandas/core/arrays/period.py](https://codecov.io/gh/pandas-dev/pandas/pull/24008/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL3BlcmlvZC5weQ==) | `36.97% <100%> (ø)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24008?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24008?src=pr&el=footer). Last update [9d85b22...05c2ce0](https://codecov.io/gh/pandas-dev/pandas/pull/24008?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443520723",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24008#issuecomment-443520723",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24008",
    "id": 443520723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzUyMDcyMw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-02T16:29:44Z",
    "updated_at": "2018-12-02T16:29:44Z",
    "author_association": "MEMBER",
    "body": "> I find the introduction of NAT extra-confusing. What actually does this buy?\r\n\r\nA ton of dict lookups.  Consider `nattype.is_null_datetimelike`, in particular the line `elif val is NaT:`.  The C code for this in that status quo is:\r\n\r\n```\r\n  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_NaT); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 686, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_4);\r\n  __pyx_t_1 = (__pyx_v_val == __pyx_t_4);\r\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\r\n  __pyx_t_3 = (__pyx_t_1 != 0);\r\n  if (__pyx_t_3) {\r\n```\r\n\r\nIn the PR the C code is:\r\n\r\n```\r\n  __pyx_t_1 = (__pyx_v_val == ((PyObject *)__pyx_v_6pandas_5_libs_6tslibs_7nattype_NAT));\r\n  __pyx_t_3 = (__pyx_t_1 != 0);\r\n  if (__pyx_t_3) {\r\n```\r\n\r\nIn the status quo it has to look up \"NaT\" in the module-level namespace dict (and +/- refcount).  In the PR we avoid that dict lookup.  It adds up because it is a dict lookup we do _a lot_.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443522543",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24008#issuecomment-443522543",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24008",
    "id": 443522543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzUyMjU0Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-02T16:56:11Z",
    "updated_at": "2018-12-02T16:56:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "this adds IMHO a huge amount of mental overhead. I would either call this ``c_NaT``, leave it as ``NaT`` but make it a c-importable (not sure if that is possible), or make this a private attribute ``_NaT`` and put a cdef accessor function to return this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443522936",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24008#issuecomment-443522936",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24008",
    "id": 443522936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzUyMjkzNg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-02T17:01:16Z",
    "updated_at": "2018-12-02T17:01:16Z",
    "author_association": "MEMBER",
    "body": "> leave it as NaT but make it a c-importable (not sure if that is possible)\r\n\r\nAgreed that would be ideal, but AFAICT cython won't allow `NaT` to be both cimport-able and import-able.\r\n\r\n> or make this a private attribute _NaT and put a cdef accessor function to return this.\r\n\r\nCan you elaborate on what you have in mind with \"cdef accessor function\"?\r\n\r\nI'm broadly indifferent between NAT vs c_NaT vs _NaT in terms of what we call the cdef'd version within `nattype`.  I much prefer `cimport NAT as NaT` within other cython modules so only the imports are affected and not the rest of the code."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443524075",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24008#issuecomment-443524075",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24008",
    "id": 443524075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzUyNDA3NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-02T17:17:44Z",
    "updated_at": "2018-12-02T17:17:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Can you elaborate on what you have in mind with \"cdef accessor function\"?\r\n\r\nI meant this, but this is not going to help the problem.\r\n```\r\ncdef get_c_nat():\r\n    return _NaT\r\n```\r\n\r\nhow about if you rename what you are calling ``NAT`` -> ``c_NaT``, then I think could be on-board (and import that as such). Then i think the distinction is very clear and explicit, no wondering is this a c-object or not. yes references in the cython modules would change but you are already changing them."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443527746",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24008#issuecomment-443527746",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24008",
    "id": 443527746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzUyNzc0Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-02T18:01:46Z",
    "updated_at": "2018-12-02T18:01:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "lgtm. do we have sufficient asv's for this? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443528166",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24008#issuecomment-443528166",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24008",
    "id": 443528166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzUyODE2Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-02T18:04:53Z",
    "updated_at": "2018-12-02T18:04:53Z",
    "author_association": "MEMBER",
    "body": ">  do we have sufficient asv's for this?\r\n\r\nThe %timeit results in the OP are all that's available ATM.  I'm poking at an idea that would make it easier to identify what asvs to run for any particular commit/PR, will see how that pans out."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443551139",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24008#issuecomment-443551139",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24008",
    "id": 443551139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzU1MTEzOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-02T23:06:58Z",
    "updated_at": "2018-12-02T23:06:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks!"
  }
]
