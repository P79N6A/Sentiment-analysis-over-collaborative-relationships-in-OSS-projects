[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235947092",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13830#issuecomment-235947092",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13830",
    "id": 235947092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTk0NzA5Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-28T16:21:41Z",
    "updated_at": "2016-07-28T16:21:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Two things going on here.\n1. the int vs. int64 is present after _constructing_ the data frame. nothing to do with to_dict.\n\n``` python\n\nIn [21]: type(s.iloc[1])\nOut[21]: int\n\nIn [22]: type(df.iloc[0, 1])\nOut[22]: numpy.int64\n```\n\nxref: https://github.com/pydata/pandas/pull/9108\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235950856",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13830#issuecomment-235950856",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13830",
    "id": 235950856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTk1MDg1Ng==",
    "user": {
      "login": "williamsmj",
      "id": 370930,
      "node_id": "MDQ6VXNlcjM3MDkzMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/370930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/williamsmj",
      "html_url": "https://github.com/williamsmj",
      "followers_url": "https://api.github.com/users/williamsmj/followers",
      "following_url": "https://api.github.com/users/williamsmj/following{/other_user}",
      "gists_url": "https://api.github.com/users/williamsmj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/williamsmj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/williamsmj/subscriptions",
      "organizations_url": "https://api.github.com/users/williamsmj/orgs",
      "repos_url": "https://api.github.com/users/williamsmj/repos",
      "events_url": "https://api.github.com/users/williamsmj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/williamsmj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-28T16:34:47Z",
    "updated_at": "2016-07-28T16:34:47Z",
    "author_association": "NONE",
    "body": "My use case was the same as #9108: I wanted to assemble a somewhat complicated JSON object that contains things that aren't only in the DataFrame. `pd.io.json.dumps` on the dictionary works fine. So my problem is solved. Thanks!\n\nJust out of interest then: is the inconsistency in the types being stored in `s.iloc[1]` and `df.iloc[0, 1]` correct behaviour?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235952338",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13830#issuecomment-235952338",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13830",
    "id": 235952338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTk1MjMzOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-28T16:40:16Z",
    "updated_at": "2016-07-28T16:41:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great to hear.\n\n> Just out of interest then: is the inconsistency in the types being stored in s.iloc[1] and df.iloc[0, 1] correct behaviour?\n\nYeah, I think so. Series has to have a single dtype, which must be `object` in this case since you have mixed types (not a good idea in general). That means we can optimize to a numpy dtype. When you go to a DataFrame each col can have it's own type, which will use NumPy if possible. A good comparison is to `pd.Series([1, 2])`, which does use numpy ints, even though you pass in python ints.\n"
  }
]
