[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/255466705",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-255466705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 255466705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTQ2NjcwNQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-21T21:13:29Z",
    "updated_at": "2016-10-21T21:13:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/pandas-dev/pandas/issues/12412\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/255519311",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-255519311",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 255519311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTUxOTMxMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-22T10:05:08Z",
    "updated_at": "2016-10-22T10:05:08Z",
    "author_association": "MEMBER",
    "body": "See also https://github.com/pandas-dev/pandas2/issues/18 (a advantage for targetting this for 2.0 is we can directly use the python 3 syntax)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285962073",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-285962073",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 285962073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTk2MjA3Mw==",
    "user": {
      "login": "brmc",
      "id": 1318210,
      "node_id": "MDQ6VXNlcjEzMTgyMTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1318210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brmc",
      "html_url": "https://github.com/brmc",
      "followers_url": "https://api.github.com/users/brmc/followers",
      "following_url": "https://api.github.com/users/brmc/following{/other_user}",
      "gists_url": "https://api.github.com/users/brmc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brmc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brmc/subscriptions",
      "organizations_url": "https://api.github.com/users/brmc/orgs",
      "repos_url": "https://api.github.com/users/brmc/repos",
      "events_url": "https://api.github.com/users/brmc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brmc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-12T18:01:03Z",
    "updated_at": "2017-03-12T18:01:03Z",
    "author_association": "NONE",
    "body": "continuing the conversation from pandas-dev/pandas2#18\r\n\r\nI agree with @shoyer. type hints should be implemented as early as possible. I've taken a couple days off work, so I can get started on annotations for py2 tomorrow. Do you have any preference on how large pull requests should be? if it were up to me, given the relative safety of this sort of modification, I would probably do a PR per sub-module. Let me know if you'd like me to do it differently. After that i can move on to stubs"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285962325",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-285962325",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 285962325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTk2MjMyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-12T18:04:51Z",
    "updated_at": "2017-03-12T18:05:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@brmc sounds great!\r\n\r\nI think main things to add are support for ``Series``, ``DataFrame``, ``Index`` methods (``Timestamp, Timedelta, Period`` would be nice to).\r\n\r\nyou are wanting to add ``.pyi`` files where the module live? (.e.g. ``pandas/core/``)\r\n\r\nwill need to add a build with ``mypy`` as well for validation.\r\n\r\nare there other projects that do this (just for seeing examples), if so how are they adding it?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285962488",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-285962488",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 285962488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTk2MjQ4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-12T18:07:28Z",
    "updated_at": "2017-03-12T18:08:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "A concern of mine is this:\r\n\r\nessentially you are taking a file, say ``pandas/core/series.py`` and stripping out the impl, leaving the signatures. Then we validate that this works with mypy. I really really want to be sure this stays in sync with the actual signature / impl files. So we need tests that compares these directly (in py3 this is actually not that hard, you can iterate over the definitions and simply compare the signatures). I think if we *only* compare this in py3 would be ok actually as our definitions should be py2/3 compat anyways. (or do we want / need differing signatures, e.g. a 2 and 3 impl)?\r\n\r\nHave others done this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285969496",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-285969496",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 285969496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTk2OTQ5Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-12T19:36:29Z",
    "updated_at": "2017-03-12T19:36:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "We'll want to push these upstream to https://github.com/python/typeshed/ once we have reasonable coverage."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285969856",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-285969856",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 285969856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTk2OTg1Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-12T19:41:42Z",
    "updated_at": "2017-03-12T19:41:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, and I hadn't heard of this, but https://github.com/python/mypy/blob/master/mypy/stubgen.py may be a good starting place? I guess it operates one module at a time so\r\n\r\n```python\r\nmkdir out\r\nstubgen pandas.core.series\r\nstubgen pandas.core.frame\r\nstubgen pandas.core.index\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/286029321",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-286029321",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 286029321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjAyOTMyMQ==",
    "user": {
      "login": "brmc",
      "id": 1318210,
      "node_id": "MDQ6VXNlcjEzMTgyMTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1318210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brmc",
      "html_url": "https://github.com/brmc",
      "followers_url": "https://api.github.com/users/brmc/followers",
      "following_url": "https://api.github.com/users/brmc/following{/other_user}",
      "gists_url": "https://api.github.com/users/brmc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brmc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brmc/subscriptions",
      "organizations_url": "https://api.github.com/users/brmc/orgs",
      "repos_url": "https://api.github.com/users/brmc/repos",
      "events_url": "https://api.github.com/users/brmc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brmc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T07:02:23Z",
    "updated_at": "2017-03-13T07:02:23Z",
    "author_association": "NONE",
    "body": "@jreback, to be honest, i've never used stubs as a core part of a project I was working on. I've only used them to supplement underlying dependencies or to workaround bugs in my IDE, so i've never thought too deeply about what consequences they might have\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/286038675",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-286038675",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 286038675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjAzODY3NQ==",
    "user": {
      "login": "brmc",
      "id": 1318210,
      "node_id": "MDQ6VXNlcjEzMTgyMTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1318210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brmc",
      "html_url": "https://github.com/brmc",
      "followers_url": "https://api.github.com/users/brmc/followers",
      "following_url": "https://api.github.com/users/brmc/following{/other_user}",
      "gists_url": "https://api.github.com/users/brmc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brmc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brmc/subscriptions",
      "organizations_url": "https://api.github.com/users/brmc/orgs",
      "repos_url": "https://api.github.com/users/brmc/repos",
      "events_url": "https://api.github.com/users/brmc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brmc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T08:04:27Z",
    "updated_at": "2017-03-13T08:04:27Z",
    "author_association": "NONE",
    "body": "ok, I'm about to get started.  To be clear, I'm going to only concentrate on method signatures and return types (for now). I'm not going to annotate local variables unless I have some justifiable reason.\r\n\r\nRegarding the relevant parts of the contributing docs:\r\n* style: for short signatures i'll do the annotations on a single line, for longer ones, i'll annotate each parameter individually\r\n* committing: I should use the \"CLN\" prefix since this issue has the clean label, correct?\r\n* docs: Does this change warrant an entry in `whatsnew/v0.20.0.txt`? if so, where? under `Other Enhancements`? \r\n\r\nI've never contributed to pandas so please let me know if there's anything I'm overlooking"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/286093169",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-286093169",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 286093169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjA5MzE2OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T12:27:36Z",
    "updated_at": "2017-03-13T12:27:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "contributing docs are: http://pandas-docs.github.io/pandas-docs-travis/contributing.html\r\n\r\n> style: for short signatures i'll do the annotations on a single line, for longer ones, i'll annotate each parameter individually\r\n\r\nsounds good\r\n\r\n> committing: I should use the \"CLN\" prefix since this issue has the clean label, correct?\r\n\r\nthat's fine\r\n\r\n\r\n> docs: Does this change warrant an entry in whatsnew/v0.20.0.txt? if so, where? under Other Enhancements?\r\n\r\nyes"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/286139486",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-286139486",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 286139486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjEzOTQ4Ng==",
    "user": {
      "login": "brmc",
      "id": 1318210,
      "node_id": "MDQ6VXNlcjEzMTgyMTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1318210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brmc",
      "html_url": "https://github.com/brmc",
      "followers_url": "https://api.github.com/users/brmc/followers",
      "following_url": "https://api.github.com/users/brmc/following{/other_user}",
      "gists_url": "https://api.github.com/users/brmc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brmc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brmc/subscriptions",
      "organizations_url": "https://api.github.com/users/brmc/orgs",
      "repos_url": "https://api.github.com/users/brmc/repos",
      "events_url": "https://api.github.com/users/brmc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brmc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T15:19:43Z",
    "updated_at": "2017-03-13T15:20:18Z",
    "author_association": "NONE",
    "body": "> contributing docs are: http://pandas-docs.github.io/pandas-docs-travis/contributing.html\r\n\r\nright.  I had already read through it. just double-checking I didn't miss anything major"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289196710",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-289196710",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 289196710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTE5NjcxMA==",
    "user": {
      "login": "brmc",
      "id": 1318210,
      "node_id": "MDQ6VXNlcjEzMTgyMTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1318210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brmc",
      "html_url": "https://github.com/brmc",
      "followers_url": "https://api.github.com/users/brmc/followers",
      "following_url": "https://api.github.com/users/brmc/following{/other_user}",
      "gists_url": "https://api.github.com/users/brmc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brmc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brmc/subscriptions",
      "organizations_url": "https://api.github.com/users/brmc/orgs",
      "repos_url": "https://api.github.com/users/brmc/repos",
      "events_url": "https://api.github.com/users/brmc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brmc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-25T08:01:17Z",
    "updated_at": "2017-03-25T08:12:57Z",
    "author_association": "NONE",
    "body": "Just to update, I'm still working on this, slowly but surely.  I'm pretty much restricted to weekend work, but it'll get there.  it's not nearly as trivial of a task as I expected :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289203940",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-289203940",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 289203940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTIwMzk0MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-25T10:46:27Z",
    "updated_at": "2017-03-25T10:46:27Z",
    "author_association": "MEMBER",
    "body": "@brmc No problem, great to hear you make some progress. \r\nI would just advise to make as quickly as possible a PR (just clearly indicate, eg in the title, that it is work in progress, that is no problem), so you can get early feedback on the direction you are going. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299971472",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-299971472",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 299971472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk3MTQ3Mg==",
    "user": {
      "login": "teh",
      "id": 139251,
      "node_id": "MDQ6VXNlcjEzOTI1MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/139251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teh",
      "html_url": "https://github.com/teh",
      "followers_url": "https://api.github.com/users/teh/followers",
      "following_url": "https://api.github.com/users/teh/following{/other_user}",
      "gists_url": "https://api.github.com/users/teh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teh/subscriptions",
      "organizations_url": "https://api.github.com/users/teh/orgs",
      "repos_url": "https://api.github.com/users/teh/repos",
      "events_url": "https://api.github.com/users/teh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T19:49:02Z",
    "updated_at": "2017-05-08T19:49:02Z",
    "author_association": "NONE",
    "body": "@brmc - I was going to start on mypy types. Would you mind sharing what you have? I can start from scratch but that seems a bit silly if you already spent time on it :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299973210",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-299973210",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 299973210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk3MzIxMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T19:56:26Z",
    "updated_at": "2017-05-08T19:56:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@teh that'd be great. The work is started [here](https://github.com/pandas-dev/pandas/pull/15866)\r\n\r\nI'm going to rebase and push an update to that and then probably merge soon after. We need to get the basic testing infrastructure in place, and then start iterating a handful of files at a time."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299982292",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-299982292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 299982292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk4MjI5Mg==",
    "user": {
      "login": "teh",
      "id": 139251,
      "node_id": "MDQ6VXNlcjEzOTI1MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/139251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teh",
      "html_url": "https://github.com/teh",
      "followers_url": "https://api.github.com/users/teh/followers",
      "following_url": "https://api.github.com/users/teh/following{/other_user}",
      "gists_url": "https://api.github.com/users/teh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teh/subscriptions",
      "organizations_url": "https://api.github.com/users/teh/orgs",
      "repos_url": "https://api.github.com/users/teh/repos",
      "events_url": "https://api.github.com/users/teh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T20:32:31Z",
    "updated_at": "2017-05-08T20:32:31Z",
    "author_association": "NONE",
    "body": "Thanks! Type checking not exactly fast, even with `--incremental` (30 seconds per run on my machine) :sweat: \r\n\r\nDo you have a preference for inline types over pyi stub files?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299983371",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-299983371",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 299983371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk4MzM3MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T20:36:32Z",
    "updated_at": "2017-05-08T20:36:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Thanks! Type checking not exactly fast, even with --incremental (30 seconds per run on my machine) 😓\r\n\r\nI think part of the slowness is from mypy following imports? The commit I just pushed disabled that in `setup.cfg`. Doing the whole codebase will still take a while though.\r\n\r\n> Do you have a preference for inline types over pyi stub files?\r\n\r\nInline."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299991830",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-299991830",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 299991830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk5MTgzMA==",
    "user": {
      "login": "teh",
      "id": 139251,
      "node_id": "MDQ6VXNlcjEzOTI1MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/139251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teh",
      "html_url": "https://github.com/teh",
      "followers_url": "https://api.github.com/users/teh/followers",
      "following_url": "https://api.github.com/users/teh/following{/other_user}",
      "gists_url": "https://api.github.com/users/teh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teh/subscriptions",
      "organizations_url": "https://api.github.com/users/teh/orgs",
      "repos_url": "https://api.github.com/users/teh/repos",
      "events_url": "https://api.github.com/users/teh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T21:10:06Z",
    "updated_at": "2017-05-08T21:10:06Z",
    "author_association": "NONE",
    "body": "I'm already running into some interesting problems. E.g.\r\n\r\nhttps://github.com/python/mypy/issues/1996\r\n\r\nmeans that we'd have to add a `values = None`  to the class body of `IndexOpsMixin` which is a semantic change. The mixin style also doesn't play nicely with `is_unique` in the same class. There we have:\r\n\r\n```python\r\nself.nunique() == len(self)\r\n```\r\n\r\nbut we don't know yet at this point that `self` is a `typing.Sized`. We could make `IndexOpsMixin` subclass some ABC thingy but that'd also be a semantic change.\r\n\r\nAn alternative could be that we ignore the pandas bowels for now and only focus on the user interface (e.g. `DataFrame`) which is useful for end-users but less so for pandas devs.\r\n\r\nOverall already far less trivial than I expected :/"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299992970",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-299992970",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 299992970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk5Mjk3MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T21:14:42Z",
    "updated_at": "2017-05-08T21:14:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I'm already running into some interesting problems. E.g.\r\n\r\nFor those types of problems, I'm defining an ABCMixins, like `ABCIndexOpsMixin`\r\n\r\n> An alternative could be that we ignore the pandas bowels for now and only focus on the user interface (e.g. DataFrame) which is useful for end-users but less so for pandas devs.\r\n\r\nI think you might be right. Do you want to spend a little time exploring this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/300006849",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-300006849",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 300006849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDAwNjg0OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T22:18:09Z",
    "updated_at": "2017-05-08T22:18:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "so would focus solely on the user focused API"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/335116641",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-335116641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 335116641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTExNjY0MQ==",
    "user": {
      "login": "nimish",
      "id": 993805,
      "node_id": "MDQ6VXNlcjk5MzgwNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/993805?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nimish",
      "html_url": "https://github.com/nimish",
      "followers_url": "https://api.github.com/users/nimish/followers",
      "following_url": "https://api.github.com/users/nimish/following{/other_user}",
      "gists_url": "https://api.github.com/users/nimish/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nimish/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nimish/subscriptions",
      "organizations_url": "https://api.github.com/users/nimish/orgs",
      "repos_url": "https://api.github.com/users/nimish/repos",
      "events_url": "https://api.github.com/users/nimish/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nimish/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-09T10:14:40Z",
    "updated_at": "2017-10-09T10:14:40Z",
    "author_association": "NONE",
    "body": "Is anyone working on this? I have been hacking it by using my own bespoke types but I'd rather use official ones"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/335125070",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-335125070",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 335125070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTEyNTA3MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-09T10:57:50Z",
    "updated_at": "2017-10-09T10:57:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "There's a (stalled) PR at https://github.com/pandas-dev/pandas/pull/15866. You might want to look at https://github.com/pandas-dev/pandas/pull/15866#issuecomment-309910338\r\n\r\nPlease feel free to take it up!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345811085",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-345811085",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 345811085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTgxMTA4NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-20T19:54:49Z",
    "updated_at": "2017-11-20T19:54:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe useful for auto-generating some annotations:\r\n\r\n- http://mypy-lang.blogspot.com/2017/11/dropbox-releases-pyannotate-auto.html\r\n- https://blog.kensho.com/pytest-annotate-is-now-open-source-5dd6f6d51d0f\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346942340",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-346942340",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 346942340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njk0MjM0MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-25T14:01:38Z",
    "updated_at": "2017-11-25T14:01:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "nice write up by  @shoyer for numpy\r\nhttps://docs.google.com/document/d/1vpMse4c6DrWH5rq2tQSx3qwP_m_0lyn-Ij4WHqQqRHY/mobilebasic\r\n\r\nwe have similar but in some sense more complicated issues as we would\r\ncare about a dtype per column specification "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346954051",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-346954051",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 346954051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njk1NDA1MQ==",
    "user": {
      "login": "teh",
      "id": 139251,
      "node_id": "MDQ6VXNlcjEzOTI1MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/139251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teh",
      "html_url": "https://github.com/teh",
      "followers_url": "https://api.github.com/users/teh/followers",
      "following_url": "https://api.github.com/users/teh/following{/other_user}",
      "gists_url": "https://api.github.com/users/teh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teh/subscriptions",
      "organizations_url": "https://api.github.com/users/teh/orgs",
      "repos_url": "https://api.github.com/users/teh/repos",
      "events_url": "https://api.github.com/users/teh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-25T17:24:36Z",
    "updated_at": "2017-11-25T17:24:36Z",
    "author_association": "NONE",
    "body": "I'm currently using company time to develop separate mypy stubs (`.pyi` files as opposed to inline annotations). I have covered the easy 30% (e.g. `.copy()`) but indexing is an ongoing, unresolved struggle. We're going to open source if we ever get to a usable state.\r\n\r\nI'm not convinced that it'll be possible to capture the full pandas behaviour in mypy-annotations in a meaningful way - meaningful as in don't use `Any` everywhere.\r\n\r\nWith that out of the way:\r\n\r\n* The numpy typing document is really interesting! They seem to be suggesting a dependent typing solution (without calling it that), at least for dimensions.\r\n* [This mypy ticket](https://github.com/python/mypy/issues/3062) could be useful because we have  lot of string-typed arguments that are really ADTs (or enums). E.g. `kind : {‘quicksort’, ‘mergesort’, ‘heapsort’}` in `sort`. I'm quite unhappy that those are `str` in my stubs.\r\n* Inferring the type of a column in pandas in general seems complex to impossible. E.g. `unstack`-ing an `int64` dtype that introduces `NaN`s (missing data) will convert the `int64` to `float64`. We can't really prove anything other than the return value being `DataFrame`. Even with [mypy plugins](https://github.com/python/mypy/issues/1240) this kind of behaviour will be hard to prove.\r\n* [Protocols](http://mypy.readthedocs.io/en/latest/class_basics.html#protocols-and-structural-subtyping) seem like a potential solution for supporting `IndexOpsMixin` - even if I still don't know yet how to implement indexing itself.\r\n\r\nApologies for the rather long comment!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346964972",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-346964972",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 346964972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njk2NDk3Mg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-25T20:43:16Z",
    "updated_at": "2017-11-25T20:43:16Z",
    "author_association": "MEMBER",
    "body": "See also https://github.com/python/typing/issues/478#issuecomment-339869456 for more on use cases for literal values in types for pandas. I agree that this would be very helpful.\r\n\r\nFor pandas and DataFrame libraries more generally, we could really use a generic version of mypy's TypedDict to indicate dtypes per column. Something like:\r\n```python\r\nclass UserDataFrame(pandas.TypedDataFrame):\r\n    name = str\r\n    id = int\r\n    address = str\r\n```\r\n\r\nFor indexing, it might be easier to start with `.loc` and `.iloc`. The full behavior for getitem/setitem is so complex that even pandas developers don't really understand it (https://github.com/pandas-dev/pandas/issues/9595), and I doubt it could ever be fully type checked.\r\n\r\n> The numpy typing document is really interesting! They seem to be suggesting a dependent typing solution (without calling it that), at least for dimensions.\r\n\r\nThanks! This is probably because my knowledge of formal type systems is pretty limited. If you have any other useful pointers, they would be appreciated!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385517541",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-385517541",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 385517541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTUxNzU0MQ==",
    "user": {
      "login": "gwerbin",
      "id": 5758789,
      "node_id": "MDQ6VXNlcjU3NTg3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5758789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwerbin",
      "html_url": "https://github.com/gwerbin",
      "followers_url": "https://api.github.com/users/gwerbin/followers",
      "following_url": "https://api.github.com/users/gwerbin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwerbin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwerbin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwerbin/subscriptions",
      "organizations_url": "https://api.github.com/users/gwerbin/orgs",
      "repos_url": "https://api.github.com/users/gwerbin/repos",
      "events_url": "https://api.github.com/users/gwerbin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwerbin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-30T20:24:01Z",
    "updated_at": "2018-04-30T20:24:01Z",
    "author_association": "NONE",
    "body": "@shoyer that's exactly what I'd want out of a Pandas type system. Don't forget that Pandas is a data science tool, and that kind of typing would be a huge benefit to data science work. The rest is \"extra\" IMO."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385521897",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-385521897",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 385521897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTUyMTg5Nw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-30T20:40:21Z",
    "updated_at": "2018-04-30T20:40:21Z",
    "author_association": "MEMBER",
    "body": "@gwerbin sorry, can you clarify exact what I wrote that you'd want out of a pandas type system? :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385524875",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-385524875",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 385524875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTUyNDg3NQ==",
    "user": {
      "login": "gwerbin",
      "id": 5758789,
      "node_id": "MDQ6VXNlcjU3NTg3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5758789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwerbin",
      "html_url": "https://github.com/gwerbin",
      "followers_url": "https://api.github.com/users/gwerbin/followers",
      "following_url": "https://api.github.com/users/gwerbin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwerbin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwerbin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwerbin/subscriptions",
      "organizations_url": "https://api.github.com/users/gwerbin/orgs",
      "repos_url": "https://api.github.com/users/gwerbin/repos",
      "events_url": "https://api.github.com/users/gwerbin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwerbin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-30T20:51:25Z",
    "updated_at": "2018-04-30T20:52:48Z",
    "author_association": "NONE",
    "body": "@shoyer the ability to do this:\r\n\r\n```python\r\nimport pandas\r\nfrom pandas.api.types import CategoricalDtype\r\nfrom pathlib import Path\r\nfrom py._path.local import LocalPath\r\nfrom typing import Union, Text\r\nfrom typing_extensions import Protocol\r\n\r\nclass SupportsRead(Protocol):\r\n    def read(self) -> Union[Text, bytes]:\r\n       ...\r\n\r\nRegionDtype = CategoricalDtype('RegionDtype', ['north', 'south', 'east', 'west'])\r\n\r\nclass MyDataFrameType(pandas.TypedDataFrame):\r\n    name = str\r\n    id = int\r\n    address = str\r\n    region = RegionDtype\r\n\r\nPandasReadable = Union[Text, Path, LocalPath, SupportsRead]\r\n# or better yet, having a PandasReadable class accessible in the Pandas hierarchy somewhere\r\n\r\ndef load_my_data(filepath_or_buffer: PandasReadable=None) -> MyDataFrameType:\r\n    dtypes = OrderedDict([\r\n        ('name', str),\r\n        ('id', int),\r\n        ('address', str),\r\n        ('region', RegionDtype)\r\n    ])\r\n    # or ideally something more elgant like dtypes = MyDataFrameType.dtypes\r\n\r\n    return pandas.read_csv(filepath_or_buffer, usecols=list(dtypes.keys()), dtypes=dtypes)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410912640",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14468#issuecomment-410912640",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14468",
    "id": 410912640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDkxMjY0MA==",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T02:28:49Z",
    "updated_at": "2018-08-07T02:30:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "PEP-484 Type Annotations tools:\r\n\r\n- stubgen.py\r\n- Dropbox/pyannotate\r\n  https://github.com/dropbox/pyannotate\r\n- Instagram/MonkeyType\r\n  https://github.com/Instagram/MonkeyType\r\n\r\nEDIT: https://mypy.readthedocs.io/en/latest/existing_code.html"
  }
]
