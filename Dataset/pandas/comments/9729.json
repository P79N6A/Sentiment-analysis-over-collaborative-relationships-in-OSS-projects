[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/86243855",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9729#issuecomment-86243855",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9729",
    "id": 86243855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjQzODU1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-25T22:51:37Z",
    "updated_at": "2015-03-25T22:51:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "If you need data validation like this, I think it is much easier / better to simply count the NaN's. \n\n```\nIn [18]: df = pd.read_csv(StringIO(\"\"\"a,b,c\\n1,2\\n3,4,5\\n\"\"\"))\n\nIn [19]: df\nOut[19]: \n   a  b   c\n0  1  2 NaN\n1  3  4   5\n\nIn [20]: df.count(1)\nOut[20]: \n0    2\n1    3\ndtype: int64\n\nIn [21]: df[df.count(1)!=len(df.columns)]\nOut[21]: \n   a  b   c\n0  1  2 NaN\n```\n\nall that said, this _maybe_ could be in incoporated in the api discussions here: https://github.com/pydata/pandas/issues/9549\ncc @selasley \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/86248418",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9729#issuecomment-86248418",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9729",
    "id": 86248418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjQ4NDE4",
    "user": {
      "login": "Noxville",
      "id": 204781,
      "node_id": "MDQ6VXNlcjIwNDc4MQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Noxville",
      "html_url": "https://github.com/Noxville",
      "followers_url": "https://api.github.com/users/Noxville/followers",
      "following_url": "https://api.github.com/users/Noxville/following{/other_user}",
      "gists_url": "https://api.github.com/users/Noxville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Noxville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Noxville/subscriptions",
      "organizations_url": "https://api.github.com/users/Noxville/orgs",
      "repos_url": "https://api.github.com/users/Noxville/repos",
      "events_url": "https://api.github.com/users/Noxville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Noxville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-25T23:06:57Z",
    "updated_at": "2015-03-25T23:07:17Z",
    "author_association": "NONE",
    "body": "So - I could count the NaN's but the behaviour is the same with (what I consider) valid input compared to invalid input. Here's an example:\n\nI'd say this is a well formed CSV for tabular data - the same number of fields in each record:\n\n> a,b,c\n> 1,2,3\n> 4,5,6\n\nThis has a null value in the 1st (non-header) record, but given the 2nd comma it's implicit that the null is intentional:\n\n> a,b,c\n> 1,,3\n> 4,5,6\n\nThis has a null record in the 1st (non-header) record, but it's not implicit that there should be a NaN in the 3rd record, or if the input is just mangled:\n\n> a,b,c\n> 1,2\n> 4,5,6\n\nI'm using pandas in an environment where data integrity is _very_ important - so I'd preferably like to make the processing be a tiny bit more verbose about potentially missing data.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/124498968",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9729#issuecomment-124498968",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9729",
    "id": 124498968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDQ5ODk2OA==",
    "user": {
      "login": "glepore70",
      "id": 1309562,
      "node_id": "MDQ6VXNlcjEzMDk1NjI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1309562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glepore70",
      "html_url": "https://github.com/glepore70",
      "followers_url": "https://api.github.com/users/glepore70/followers",
      "following_url": "https://api.github.com/users/glepore70/following{/other_user}",
      "gists_url": "https://api.github.com/users/glepore70/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glepore70/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glepore70/subscriptions",
      "organizations_url": "https://api.github.com/users/glepore70/orgs",
      "repos_url": "https://api.github.com/users/glepore70/repos",
      "events_url": "https://api.github.com/users/glepore70/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glepore70/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-24T11:56:14Z",
    "updated_at": "2015-07-24T11:56:33Z",
    "author_association": "NONE",
    "body": "I would also like to see error_bad_lines trigger for too few fields. Embedded line breaks are a common cause of splitting a valid row into two rows. I have many files with 80 columns for each record, but embedded line breaks give me 37 on one line and 43 on the next line.\n\nIs there any other approach to finding these bad lines?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146509712",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9729#issuecomment-146509712",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9729",
    "id": 146509712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjUwOTcxMg==",
    "user": {
      "login": "kelvin22",
      "id": 1570054,
      "node_id": "MDQ6VXNlcjE1NzAwNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1570054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kelvin22",
      "html_url": "https://github.com/kelvin22",
      "followers_url": "https://api.github.com/users/kelvin22/followers",
      "following_url": "https://api.github.com/users/kelvin22/following{/other_user}",
      "gists_url": "https://api.github.com/users/kelvin22/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kelvin22/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kelvin22/subscriptions",
      "organizations_url": "https://api.github.com/users/kelvin22/orgs",
      "repos_url": "https://api.github.com/users/kelvin22/repos",
      "events_url": "https://api.github.com/users/kelvin22/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kelvin22/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T11:30:23Z",
    "updated_at": "2015-10-08T11:34:03Z",
    "author_association": "NONE",
    "body": "I would also like to have this error for too few fields.\nI come across @glepore70 case of line break splitting a row into two (due to malformed quote or otherwise) a fair bit...not sure if there is a good way to detect this.\n\nIn any case, when there are missing fields, the current read_csv behaviour of adding NAs assumes that it is the last fields that are missing, which is often not the case.\n\nEg. if something breaks in the first field of the last line\n\n> a,b,c,d\n> 1, '12/12/2015', 'hi', False\n> 1, '12/12/2015', 'hi', False\n> '12/12/2015', 'hi', False\n\ndataframe becomes\n\n> a,b,c,d\n> 1, '12/12/2015', 'hi', False\n> 1, '12/12/2015', 'hi', False\n> '12/12/2015', 'hi', False, NA\n\nWhich breaks everything eg. dateparse, converters, etc.\nI don't believe there is any real way to handle these rows either, as the data is not yet in the dataframe.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146523637",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9729#issuecomment-146523637",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9729",
    "id": 146523637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjUyMzYzNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T12:32:16Z",
    "updated_at": "2015-10-08T12:32:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kelvin22 your example is not easy to interpret as its not very obvious where the error is (in an automatic way). However, these types of things will almost always be impossible to dtype coerce, so they will end up as object. If you are expecting float/datetime/int columns then you can at least be clued in that something is wrong.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146552090",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9729#issuecomment-146552090",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9729",
    "id": 146552090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjU1MjA5MA==",
    "user": {
      "login": "kelvin22",
      "id": 1570054,
      "node_id": "MDQ6VXNlcjE1NzAwNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1570054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kelvin22",
      "html_url": "https://github.com/kelvin22",
      "followers_url": "https://api.github.com/users/kelvin22/followers",
      "following_url": "https://api.github.com/users/kelvin22/following{/other_user}",
      "gists_url": "https://api.github.com/users/kelvin22/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kelvin22/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kelvin22/subscriptions",
      "organizations_url": "https://api.github.com/users/kelvin22/orgs",
      "repos_url": "https://api.github.com/users/kelvin22/repos",
      "events_url": "https://api.github.com/users/kelvin22/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kelvin22/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T13:51:12Z",
    "updated_at": "2015-10-08T13:51:12Z",
    "author_association": "NONE",
    "body": "Sorry @jreback, I'll have another crack at explaining.\n\nCurrently the behaviour works great if a cell at the end of the row is mangled/missing\n\n> 1, '12/12/2015', 'hi', False\n> 1, '12/12/2015', 'hi', False\n> 1, '12/12/2015', 'hi',  (NA)\n> 1, '12/12/2015', 'hi', False\n> 1, '12/12/2015', 'hi', False\n\nHowever it is just as likely to happen anywhere else in the line:\n\n> 'col1', 'col2', 'col3', 'col4'\n> 1, '12/12/2015', 'hi', False\n> 1, '12/12/2015', 'hi', False\n> '12/12/2015', 'hi', False, (NA)\n> 1, '12/12/2015', 'hi', False\n> 1, '12/12/2015', 'hi', False\n\nIn this case there's no easy way to recover, and these two parameters would both raise an error.\n\n`read_csv( dtype = { 'col3': str} , parse_dates = 'col2' )`\n\nThe counting NAs workaround can't be used as the dataframe doesn't get formed.\n\nIf `error_bad_lines = False` also worked with too few lines, the dud line would be skipped and everything would continue working.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276137566",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9729#issuecomment-276137566",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9729",
    "id": 276137566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjEzNzU2Ng==",
    "user": {
      "login": "kodonnell",
      "id": 8204904,
      "node_id": "MDQ6VXNlcjgyMDQ5MDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8204904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kodonnell",
      "html_url": "https://github.com/kodonnell",
      "followers_url": "https://api.github.com/users/kodonnell/followers",
      "following_url": "https://api.github.com/users/kodonnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/kodonnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kodonnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kodonnell/subscriptions",
      "organizations_url": "https://api.github.com/users/kodonnell/orgs",
      "repos_url": "https://api.github.com/users/kodonnell/repos",
      "events_url": "https://api.github.com/users/kodonnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kodonnell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T17:56:23Z",
    "updated_at": "2017-01-30T17:56:37Z",
    "author_association": "NONE",
    "body": "Just came across this, though it took a while to figure it out - as mentioned by @kelvin22, I was seeing errors about e.g. an integer field not being allowed to be NA.\r\n\r\nAs @Noxville mentions, Pandas is actually changing the information content of the data, and hence can't (easily) be used in a pipeline where data integrity is important. From that perspective, I'd call this a critical bug."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276229606",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9729#issuecomment-276229606",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9729",
    "id": 276229606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjIyOTYwNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T23:49:43Z",
    "updated_at": "2017-01-30T23:49:43Z",
    "author_association": "MEMBER",
    "body": "@kodonnell Note that this issue is an enhancement request, and not a bug. Pandas is only 'changing' content because of a malformed csv file (and the fact that NA's are not allowed in integer fields is a whole other issue, and with current pandas an inherent limitation, but that is being worked on).\r\n\r\nSee also issue #15122. Comments, suggestions, pull requests very welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276239568",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9729#issuecomment-276239568",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9729",
    "id": 276239568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjIzOTU2OA==",
    "user": {
      "login": "kodonnell",
      "id": 8204904,
      "node_id": "MDQ6VXNlcjgyMDQ5MDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8204904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kodonnell",
      "html_url": "https://github.com/kodonnell",
      "followers_url": "https://api.github.com/users/kodonnell/followers",
      "following_url": "https://api.github.com/users/kodonnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/kodonnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kodonnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kodonnell/subscriptions",
      "organizations_url": "https://api.github.com/users/kodonnell/orgs",
      "repos_url": "https://api.github.com/users/kodonnell/repos",
      "events_url": "https://api.github.com/users/kodonnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kodonnell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T00:46:43Z",
    "updated_at": "2017-01-31T00:46:43Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche - I consider not failing when it should to be a bug. It can certainly be a bug for downstream users (who e.g. adhere to a tighter CSV specification).\r\n\r\n#15122 - looks good. "
  }
]
