[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438774708",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23689#issuecomment-438774708",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23689",
    "id": 438774708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODc3NDcwOA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T18:49:05Z",
    "updated_at": "2018-11-14T18:49:05Z",
    "author_association": "MEMBER",
    "body": "cc @jreback "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438779261",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23689#issuecomment-438779261",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23689",
    "id": 438779261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODc3OTI2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T19:02:08Z",
    "updated_at": "2018-11-14T19:02:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "might be a bug\r\n\r\nthough inplace usage is generally a code smell"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438807031",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23689#issuecomment-438807031",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23689",
    "id": 438807031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODgwNzAzMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T20:29:07Z",
    "updated_at": "2018-11-14T20:29:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "By definition, this really can't be inplace with float64 since the float array can't hold None.\r\n\r\n@corytu if you really want inplace\r\n\r\n\r\n```python\r\ns = s.astype(object)\r\ns.fillna(s.notnull(), None, inplace=True)\r\n```\r\n\r\nbut just don't use inplace in the first place."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438903392",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23689#issuecomment-438903392",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23689",
    "id": 438903392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODkwMzM5Mg==",
    "user": {
      "login": "corytu",
      "id": 19487370,
      "node_id": "MDQ6VXNlcjE5NDg3Mzcw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/19487370?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/corytu",
      "html_url": "https://github.com/corytu",
      "followers_url": "https://api.github.com/users/corytu/followers",
      "following_url": "https://api.github.com/users/corytu/following{/other_user}",
      "gists_url": "https://api.github.com/users/corytu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/corytu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/corytu/subscriptions",
      "organizations_url": "https://api.github.com/users/corytu/orgs",
      "repos_url": "https://api.github.com/users/corytu/repos",
      "events_url": "https://api.github.com/users/corytu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/corytu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T03:23:21Z",
    "updated_at": "2018-11-15T07:01:26Z",
    "author_association": "NONE",
    "body": "@jreback @TomAugspurger\r\n\r\n> though inplace usage is generally a code smell\r\n> but just don't use inplace in the first place\r\n\r\nI don't like inplace either but Python has lots of \"inplace\" operations already, such as `list.append`, `list.sort`, `dict.update`... I kind of want to make my coding style alike in Python.\r\n\r\nIf inplace is generally not suggested, how about deprecating that parameter for good anyway?\r\n\r\n@TomAugspurger\r\n\r\n> By definition, this really can't be inplace with float64 since the float array can't hold None.\r\n> ... if you really want inplace\r\n> ```python\r\n> s = s.astype(object)\r\n> s.fillna(s.notnull(), None, inplace=True)\r\n> ```\r\n\r\n1. The code you demonstrated also fails. [`fillna`](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.fillna.html) cannot be used like that. I assume you were referring to [`where`](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.where.html). If so, that does the trick.\r\n2. I had suspected the data type issue you talked about. Still it cannot explain the inconsistent behaviors showed below:\r\n    ```python\r\n    s = pd.Series(list(range(5)) + [np.nan])\r\n    s.where(s.notnull(), \"foo\", inplace=True)\r\n    s\r\n    # Worked\r\n    # 0      0\r\n    # 1      1\r\n    # 2      2\r\n    # 3      3\r\n    # 4      4\r\n    # 5    foo\r\n\r\n    s = pd.Series(list(range(5)) + [np.nan])\r\n    s.fillna(\"foo\", inplace=True)\r\n    s\r\n    # Worked\r\n    # 0      0\r\n    # 1      1\r\n    # 2      2\r\n    # 3      3\r\n    # 4      4\r\n    # 5    foo\r\n    ```\r\n\r\n    Both `s.where` and `s.fillna` above turn float64 Series into an object one while replacing the missing values. So that inplace fails only when using None to replace np.nan. That seems more like a bug to me then."
  }
]
