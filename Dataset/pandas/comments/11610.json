[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157024778",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-157024778",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 157024778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzAyNDc3OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-16T13:15:47Z",
    "updated_at": "2015-11-16T13:15:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger I had to slightly change `style.rst` to get this to appear in the index. You may want to further modify.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157118460",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-157118460",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 157118460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzExODQ2MA==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-16T17:52:33Z",
    "updated_at": "2015-11-16T17:52:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "A comment on the API of the highlighter:\n\n```\ndef color_negative_red(val):\n    \"\"\"\n    Takes a scalar and returns a string with\n    the css property `'color: red'` for negative\n    strings, black otherwise.\n    \"\"\"\n    color = 'red' if val < 0 else 'black'\n    return 'color: %s' % color\n```\n\nThis basically only works for html representation (\"color: red\" is css speak) and assumes that the return value should got to the css.\n\nIn latex (see e.g. [this](http://tex.stackexchange.com/questions/50349/color-only-a-cell-of-a-table) example), you prefix/suround the value with a command:\n\n```\n[...]\n\\usepackage[table]{xcolor}% http://ctan.org/pkg/xcolor\n  Some & \\cellcolor{blue!25}coloured & contents \\\\\n```\n\nwould render the second cell blue (by using a command from a special package).\n\nSo for latex you probably need templates ala `\\cellcolor{blue!25}%s` or `\\textbf{%s}` (which make the value bold).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157181011",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-157181011",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 157181011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzE4MTAxMQ==",
    "user": {
      "login": "kynan",
      "id": 346079,
      "node_id": "MDQ6VXNlcjM0NjA3OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/346079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kynan",
      "html_url": "https://github.com/kynan",
      "followers_url": "https://api.github.com/users/kynan/followers",
      "following_url": "https://api.github.com/users/kynan/following{/other_user}",
      "gists_url": "https://api.github.com/users/kynan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kynan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kynan/subscriptions",
      "organizations_url": "https://api.github.com/users/kynan/orgs",
      "repos_url": "https://api.github.com/users/kynan/repos",
      "events_url": "https://api.github.com/users/kynan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kynan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-16T21:48:19Z",
    "updated_at": "2015-11-16T21:48:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger I think you made a great start on this! A few ideas for making this approach potentially more flexible:\n1. Allow extra attributes on the `<table>`.\n   \n   Common use case: You want to export an html table with sortable column, e.g. using [sortable](http://github.hubspot.com/sortable/). For that you would need the following opening tag:\n   \n   ```\n   <table class=\"sortable-theme-bootstrap\" data-sortable>\n   ```\n2. Support \"external\" styling via existing custom CSS style sheets.\n   \n   For this to work, the current approach with unique ids per cell which are then targeted with a auto generated CSS doesn't really work. Instead it would be useful to be able to assign additional classes (or data attributes) to cells based on the `Styler` rules.\n   \n   Example use case: assign class `positive` to all values > 0 and `negative` to all values < 0\n   \n   A potential advantage of this would be much smaller size of generated code (since we don't need a custom CSS block for each cell) and better performance when rendering in the browser (fewer rules to apply).\n3.  Allow setting arbitrary attributes on table cells based on rules.\n   \n   This extends the previous suggestion and would allow using exported html tables with any kind of JavaScript library using specific attributes.\n\nSorry for being so late in making these suggestions - I didn't manage to read through all of #10250 before it was merged.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157193307",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-157193307",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 157193307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzE5MzMwNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-16T22:36:09Z",
    "updated_at": "2015-11-16T22:36:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kynan fantastic, thanks for the feedback. I'll go through it in more detail later.\n\nYour item 1. sounds pretty simple. Is `attribute` the correct term for the items in the opening tag? `<table class=\"sortable-theme-bootstrap\" data-sortable>` We could include a method like `.set_table_attributes` for that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157197629",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-157197629",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 157197629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzE5NzYyOQ==",
    "user": {
      "login": "kynan",
      "id": 346079,
      "node_id": "MDQ6VXNlcjM0NjA3OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/346079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kynan",
      "html_url": "https://github.com/kynan",
      "followers_url": "https://api.github.com/users/kynan/followers",
      "following_url": "https://api.github.com/users/kynan/following{/other_user}",
      "gists_url": "https://api.github.com/users/kynan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kynan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kynan/subscriptions",
      "organizations_url": "https://api.github.com/users/kynan/orgs",
      "repos_url": "https://api.github.com/users/kynan/repos",
      "events_url": "https://api.github.com/users/kynan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kynan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-16T22:46:23Z",
    "updated_at": "2015-11-16T22:46:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger I believe attribute is the common term and [also the one the W3C uses](http://www.w3.org/TR/html5/). `set_table_attributes` sounds sensible to me.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157688797",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-157688797",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 157688797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzY4ODc5Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T11:52:48Z",
    "updated_at": "2015-11-18T11:52:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger merged your PR; I'll leave you to close when you are ready.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157722012",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-157722012",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 157722012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzcyMjAxMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T14:02:58Z",
    "updated_at": "2015-11-18T14:02:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, I want to get a better solution in place for including notebooks in the sphinx build, but that works for now.\n\n@kynan, for your second item, assigning classes to cells. My current thinking is to have a method on `Styler` (would it be terrible to call it `.classify`?) that takes a function to be evaluated and a class to assign to the cells where that function evaluates to `True`. The limitation here is that _the class that's assigned doesn't get to refer to the data_. So you couldn't (easily) do something like our `.background_gradient`, which is why I discarded this approach originally. But it might make sense to have in addition to the one-class-per cell approach we have. This will probably need to wait for the next release though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157777066",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-157777066",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 157777066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Nzc3NzA2Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T16:54:55Z",
    "updated_at": "2015-11-18T16:54:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "[docs are up](http://pandas-docs.github.io/pandas-docs-travis/style.html#style) if anyone sees anything. It does still have the [In] and [Out] tags and ¶ markers I might be able to hide.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157782733",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-157782733",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 157782733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Nzc4MjczMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T17:13:21Z",
    "updated_at": "2015-11-18T17:13:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger yep look great!\n\non the css side, I _think_ its possible if we tag with the SAME names, e.g.\n\n`df.style.highlight_null(css='null_class').background_gradient(css='gradients_class')`\n\nthen as long as you tag THOSE cells with that class it would work. we could have default class names (based on the function name), and have this kw to override.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157797282",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-157797282",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 157797282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Nzc5NzI4Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T17:47:19Z",
    "updated_at": "2015-11-18T17:47:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "The `df.style.highlight_null(css='null_class')` I could see working like that, since that fits the binary \"if this condition is true, apply this style\".\n\nThis could be my limited understanding of CSS, but I don't see how you could accomplish `df.style.background_gradient(css='gradients_class')` in CSS, just knowing that these columns have this class. (I think) you'd need a class per color you want to assign.\n\nI suppose we could add a [data attribute](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes) to each cell with the value of that cell... You might be able to pull off some CSS wizardry to accomplish it in that case, but I don't see the average python use being able to write or customize that. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157803526",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-157803526",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 157803526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzgwMzUyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T18:02:35Z",
    "updated_at": "2015-11-18T18:02:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger I think you would actually construct the classes WITH the in this case the level embedded, (for some you wouldn't need to do this), maybe something like 'gradient_level_0_class` (e.g. say you ten levels of gradient. but this is a refinement.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158326899",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-158326899",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 158326899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODMyNjg5OQ==",
    "user": {
      "login": "mattilyra",
      "id": 1055719,
      "node_id": "MDQ6VXNlcjEwNTU3MTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1055719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattilyra",
      "html_url": "https://github.com/mattilyra",
      "followers_url": "https://api.github.com/users/mattilyra/followers",
      "following_url": "https://api.github.com/users/mattilyra/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattilyra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattilyra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattilyra/subscriptions",
      "organizations_url": "https://api.github.com/users/mattilyra/orgs",
      "repos_url": "https://api.github.com/users/mattilyra/repos",
      "events_url": "https://api.github.com/users/mattilyra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattilyra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T08:45:02Z",
    "updated_at": "2015-11-20T08:45:02Z",
    "author_association": "NONE",
    "body": "I've been playing around with the new styling features and have a few comments, overall this is a great new addition.\n\nThe `highlight_min`, `highlight_max` and `highlight_null` would be a lot better if instead of taking a `color` argument they would actually take the `css` format string or `**kwargs` that correspond to css style names - this would allow:\n1. using inverted colors (`background-color: black; color: white`)\n2. other formatting options than background shading (`font-weight: bold`)\n\nThe documentation is also a little confusing in terms of debugging the styling functions.\n\n> _Debugging Tip_: If you're having trouble writing your style function, try just passing it into `df.apply`. `Styler.apply` uses that internally, so the result should be the same.```\n\nThe full stop and space between `apply` and `Styler` is somewhat difficult to spot (I only noticed it when pasting the quote here) - I was looking for `df.apply.Styler.apply` which obviously doesn't exist, a little rewording would fix this. (You need to look at the text at https://pandas-docs.github.io/pandas-docs-travis/style.html to spot it)\n\n> _Debugging Tip_: If you're having trouble writing your style function, try passing it into `df.apply`. Internally `Styler.apply` uses that, so the result should be the same.```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158406432",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-158406432",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 158406432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQwNjQzMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T13:44:33Z",
    "updated_at": "2015-11-20T13:44:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "On your first point, I agree that would be useful. If we end up going with a `.classify` that takes a function returning booleans (`pd.isnull`) and assigns classes where that's True, we should be able to handle that pretty easily. I think we should hold off adding more keywords to `.highlight_null`  until we decide what to do there.\n\nI just pushed a PR to clarify the documentation. That was confusing, thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158411503",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-158411503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 158411503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQxMTUwMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T14:10:30Z",
    "updated_at": "2015-11-20T14:10:30Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger to repeat, awesome work!\n\nA question on the 'provisional status'. First, as I said on gitter, I think it is a good idea to put the same provisional note from the notebook in the whatsnew note (experimental = can still change + feedback wanted). \nSecondly, we could also emit a warning about this on first usage to be even more explicit? (but maybe that's a bit too intrusive). But if it is only on the first import of the style module, and not each time you use it, maybe it is OK?\n\nQuestion for the docs: the built notebook in html form is still in the source code. Is this on purpose? (as eg in the latest PR you only updated the notebook and not the html file)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158413158",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-158413158",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 158413158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQxMzE1OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T14:18:42Z",
    "updated_at": "2015-11-20T14:18:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Having the generated HTML is not intended, I thought I deleted that. I'll remove it in my PR adding the provisional note.\n\nFor the warning. I never was a fan of always getting the warnings when using IPy widgets. I can go either way though. At the very least I'm going to add a note to the docstring for Styler.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158437991",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-158437991",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 158437991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQzNzk5MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T15:47:15Z",
    "updated_at": "2015-11-20T15:47:15Z",
    "author_association": "MEMBER",
    "body": "Another small note on the docs: maybe it would be good to include a link the notebook on nbviewer? As this actually still looks better than the one included in the docs (the table styling (the borders) is 'uglier')\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158439248",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-158439248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 158439248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQzOTI0OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T15:51:52Z",
    "updated_at": "2015-11-20T15:51:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was trying to figure out how to include a link that points to the same version of the notebook, but adding the link changes the notebook :)  I suppose we just link to `https://github.com/pydata/pandas/blob/master/doc/source/html-styling.ipynb`, understanding that the contents at that URL can change?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158439935",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-158439935",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 158439935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQzOTkzNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T15:54:17Z",
    "updated_at": "2015-11-20T15:54:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger we can host a rendered version on `pandas.pydata.org` easily in the doc directory and just link to it (from the docs). IIRC this was your original suggestion :)\n\ngithub doesn't render these properly AFAICT\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158440476",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-158440476",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 158440476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQ0MDQ3Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T15:55:58Z",
    "updated_at": "2015-11-20T15:55:58Z",
    "author_association": "MEMBER",
    "body": "I think putting a link 'See this notebook on nbviewer' that points to the one in master is OK (to be fully correct, it should point to the version in the version tag, but that is bit difficult as that does not yet exist :-))\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158441418",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-158441418",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 158441418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQ0MTQxOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T15:59:03Z",
    "updated_at": "2015-11-20T15:59:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just iterate on the links until they converge :)\n\nJust pushed https://github.com/pydata/pandas/pull/11664 with an NBviewer link pointing to master until we get the version uploaded to `pandas.pydata.org` as part of the doc build.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158444957",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-158444957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 158444957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQ0NDk1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T16:07:36Z",
    "updated_at": "2015-11-20T16:07:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm, so this is the argument then for including the nbconvert outputted `.html`, which we can then directly link as a file\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158447273",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-158447273",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 158447273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQ0NzI3Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T16:15:18Z",
    "updated_at": "2015-11-20T16:15:18Z",
    "author_association": "MEMBER",
    "body": "A possible advantage of using the link to nbviewer, is that it is then easier to download the notebook to run things yourself\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158453493",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-158453493",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 158453493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQ1MzQ5Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T16:38:03Z",
    "updated_at": "2015-11-20T16:38:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah I think we should definitely link to nbviewer since they already have the stuff in place to download as a link. I'm not sure how including the rendered HTML in the doc build helps (or hurts) with this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158453595",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-158453595",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 158453595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQ1MzU5NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T16:38:30Z",
    "updated_at": "2015-11-20T16:38:30Z",
    "author_association": "MEMBER",
    "body": "OK, merging the PR then!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159197705",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-159197705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 159197705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTE5NzcwNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-24T08:47:10Z",
    "updated_at": "2015-11-24T08:47:10Z",
    "author_association": "MEMBER",
    "body": "The first SO questions appear! :-) \nhttp://stackoverflow.com/questions/33875937/apply-number-formatting-to-pandas-html-css-styling\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159610111",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-159610111",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 159610111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTYxMDExMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-25T13:36:29Z",
    "updated_at": "2015-11-25T13:36:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger let's try to link all relevant HTML issues at the top of the tracker (as most/maybe all can be accomplished via `.style`).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159610504",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-159610504",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 159610504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTYxMDUwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-25T13:38:33Z",
    "updated_at": "2015-11-25T13:38:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref #11700 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159709585",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-159709585",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 159709585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTcwOTU4NQ==",
    "user": {
      "login": "kynan",
      "id": 346079,
      "node_id": "MDQ6VXNlcjM0NjA3OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/346079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kynan",
      "html_url": "https://github.com/kynan",
      "followers_url": "https://api.github.com/users/kynan/followers",
      "following_url": "https://api.github.com/users/kynan/following{/other_user}",
      "gists_url": "https://api.github.com/users/kynan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kynan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kynan/subscriptions",
      "organizations_url": "https://api.github.com/users/kynan/orgs",
      "repos_url": "https://api.github.com/users/kynan/repos",
      "events_url": "https://api.github.com/users/kynan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kynan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-25T19:35:45Z",
    "updated_at": "2015-11-25T19:35:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger Sorry for the delay. `classifier` sounds good to me. Is there a reason it could only return a boolean and not a string with the class name?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159996079",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-159996079",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 159996079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTk5NjA3OQ==",
    "user": {
      "login": "121onto",
      "id": 13111271,
      "node_id": "MDQ6VXNlcjEzMTExMjcx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13111271?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/121onto",
      "html_url": "https://github.com/121onto",
      "followers_url": "https://api.github.com/users/121onto/followers",
      "following_url": "https://api.github.com/users/121onto/following{/other_user}",
      "gists_url": "https://api.github.com/users/121onto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/121onto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/121onto/subscriptions",
      "organizations_url": "https://api.github.com/users/121onto/orgs",
      "repos_url": "https://api.github.com/users/121onto/repos",
      "events_url": "https://api.github.com/users/121onto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/121onto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-26T21:30:35Z",
    "updated_at": "2015-12-02T01:25:20Z",
    "author_association": "NONE",
    "body": "This feature looks really promising.  Thanks all who worked on it!  \n\nWouldn't it be great if I could render DataFrames in html outside of ipython notebooks!?  I'm not a fan of developing inside ipython notebook, and working with matplotlib entails a lot of overhead.  \n\nTwo workflows that come to mind are as follows.  First, if you are working on a mac, keep a quicklook window open on a PDF file that you use to store current output.  Then, define a `my_print` function that `render()`s an html string and prints it to your PDF file:\n\n``` python\nfrom weasyprint import HTML\n\ndef my_style(frame):\n    return frame.style.highlight_null(null_color='red') # or whatever\n\ndef my_print_pdf(frame, styler, filename='/Users/username/temp/frame_viewer.pdf'):\n    style = styler(frame)\n    html = HTML(style.render())\n    html.write_pdf(filename)\n    return None\n```\n\nThe Quicklook should update each time you `my_print` a DataFrame.\n\nSecond, use something like [Browsersync](http://www.browsersync.io/) to watch an HTML file.  To watch a file with Browsersync, you'd type the following in your terminal:\n\n``` bash\ncd ~/temp\nbrowser-sync start --server --index \"frame_viewer.html\" --files \"*.html\"\n```\n\nWith this approach, you'd write a `my_print` that dumps the output from `render()` to an html file.  Because Browsersync expects body tags, you'll need to append those to the output from `render`:\n\n``` python\ndef my_print_html(frame, styler, filename='/Users/username/temp/frame_viewer.html'):\n    style = styler(frame)\n    html = \"<html><head></head><body>\" + style.render() + \"</body></html>\"\n    with open(filename, 'w') as f:\n        print(html, file=f)\n\n    return None\n```\n\nEach time you call `my_print_html` Browsersync will refresh your browser automatically.\n\n**Notes**: code not tested.\n\n**Edits 1**: tested Browsersync example and updated code so it works on my machine.\n**Edits 2**: updated browsersync command.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159996812",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11610#issuecomment-159996812",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11610",
    "id": 159996812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTk5NjgxMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-26T21:42:21Z",
    "updated_at": "2015-11-26T21:42:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Those are both possible now right? You'd just need to write the code / startup the server? Something like your code would fit well in the cookbook documentation.\n\nAdding \"builtin\" support for rendering in the notebook had a very favorable cost-benefit ratio. Two lines of code for something used by so many. I don't anticipate adding other backends.\n\n> On Nov 26, 2015, at 15:30, 121onto notifications@github.com wrote:\n> \n> This feature looks really promising. Thanks all who worked on it!\n> \n> Wouldn't it be great if I could render DataFrames in html outside of ipython notebooks!? I'm not a fan of developing inside ipython notebook, and working with matplotlib entails a lot of overhead.\n> \n> Two workflows that come to mind are as follows. First, if you are working on a mac, keep a quicklook window open on a PDF file that you use to store current output. Then, define a my_print function that render()s an html string and prints it to your PDF file:\n> \n> from weasyprint import HTML\n> \n> def my_style(frame):\n>     return frame.highlight_null() # or whatever\n> \n> def my_print_pdf(frame, styler, filename='~/temp/frame_viewer.pdf'):\n>     style = styler(frame)\n>     html = HTML(style.render())\n>     html.write_pdf(filename)\n>     return None\n> The Quicklook should update each time you my_print a DataFrame.\n> \n> Second, use something like Browsersync to watch an HTML file. To watch a file with Browsersync, you'd type something like browser-sync start --server --files \"~/temp/frame_viewer.html\" in the terminal. With this approach, you'd write a my_print that dumps the output from render() to an html file. Because Browsersync expects body tags, you may need to append those:\n> \n> def my_print_html(frame, styler, filename='~/temp/frame_viewer.html'):\n>     style = styler(frame)\n>     html = \"<html><head></head><body>\" + style.render()) + \"</body></html>\"\n>     with open(filename, 'w') as f:\n>         print(html, file=f)\n> \n> ```\n> return None\n> ```\n> \n> Notes: code not tested.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  }
]
