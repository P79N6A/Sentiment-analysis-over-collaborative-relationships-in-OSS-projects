[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403300013",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-403300013",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 403300013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzMwMDAxMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-08T16:40:06Z",
    "updated_at": "2018-07-08T16:40:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "The `c3i_test` channel may have some missing packages."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403310510",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-403310510",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 403310510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzMxMDUxMA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-07-08T19:25:45Z",
    "updated_at": "2018-07-26T12:53:23Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21813?src=pr&el=h1) Report\n> Merging [#21813](https://codecov.io/gh/pandas-dev/pandas/pull/21813?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/0828c25913b5862d70322471a6ee4fa11d8f890d?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/21813/graphs/tree.svg?width=650&height=150&token=eZ4WkYLtcO&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/21813?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #21813      +/-   ##\n==========================================\n+ Coverage   91.99%      92%   +<.01%     \n==========================================\n  Files         167      170       +3     \n  Lines       50578    50553      -25     \n==========================================\n- Hits        46530    46510      -20     \n+ Misses       4048     4043       -5\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.4% <ø> (ø)` | :arrow_up: |\n| #single | `42.21% <ø> (+0.04%)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/21813?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/io/formats/console.py](https://codecov.io/gh/pandas-dev/pandas/pull/21813/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvY29uc29sZS5weQ==) | `65.15% <0%> (-4.55%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/21813/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.19% <0%> (ø)` | :arrow_up: |\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/21813/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `96.47% <0%> (ø)` | :arrow_up: |\n| [pandas/core/internals/blocks.py](https://codecov.io/gh/pandas-dev/pandas/pull/21813/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL2Jsb2Nrcy5weQ==) | `94.46% <0%> (ø)` | |\n| [pandas/core/internals/concat.py](https://codecov.io/gh/pandas-dev/pandas/pull/21813/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL2NvbmNhdC5weQ==) | `98.37% <0%> (ø)` | |\n| [pandas/core/internals/managers.py](https://codecov.io/gh/pandas-dev/pandas/pull/21813/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL21hbmFnZXJzLnB5) | `96.52% <0%> (ø)` | |\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/21813/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `96.37% <0%> (ø)` | :arrow_up: |\n| [pandas/core/arrays/categorical.py](https://codecov.io/gh/pandas-dev/pandas/pull/21813/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2NhdGVnb3JpY2FsLnB5) | `95.95% <0%> (ø)` | :arrow_up: |\n| [pandas/io/formats/excel.py](https://codecov.io/gh/pandas-dev/pandas/pull/21813/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvZXhjZWwucHk=) | `97.39% <0%> (+0.01%)` | :arrow_up: |\n| [pandas/core/reshape/merge.py](https://codecov.io/gh/pandas-dev/pandas/pull/21813/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS9tZXJnZS5weQ==) | `94.16% <0%> (+0.05%)` | :arrow_up: |\n| ... and [3 more](https://codecov.io/gh/pandas-dev/pandas/pull/21813/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21813?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21813?src=pr&el=footer). Last update [0828c25...5d40eae](https://codecov.io/gh/pandas-dev/pandas/pull/21813?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403502825",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-403502825",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 403502825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzUwMjgyNQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-09T14:41:31Z",
    "updated_at": "2018-07-09T14:41:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, good news is we got a repro of this on our CI - it's not a python 3.7 issue, but instead a Visual Studio 2017 one.\r\nhttps://ci.appveyor.com/project/pandas-dev/pandas/build/1.0.15961/job/r9axp415no6jubnr#L2059\r\n\r\nStill not convinced this isn't a compiler bug, but having trouble to get a simple case to reproduce - one option would be to build our wheels VS 2015 - but annoying, b/c python forces the newest version, so can't have 2017 installed.  I'll keep trying some things."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404002993",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-404002993",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 404002993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDAwMjk5Mw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-11T00:02:55Z",
    "updated_at": "2018-07-11T00:02:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is kind of horrible, but it does fix the problem (just a lint issue I pushed for) and I'm out of ideas - any thoughts or suggestions @jreback, @TomAugspurger ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404501626",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-404501626",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 404501626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDUwMTYyNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T12:52:48Z",
    "updated_at": "2018-07-12T12:52:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chris-b1 could you summarize the issue? You think MSVC is just optimizing away `if val == val`, which isn't true when `val` is NaN?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404571051",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-404571051",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 404571051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDU3MTA1MQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T16:27:12Z",
    "updated_at": "2018-07-12T16:27:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's right, optimizing maybe not the right word, but somehow the `add_var` function is being turned into a no-op, the `mean_x`, `ssqdm_x`, and `nobs` variables don't get updated.  Adding any kind of unconditional action to the function fixes it - originally discovered by noticing it works with a print statement thrown in.\r\n\r\nAnd yes, `val==val` is a not-a-NaN check.  We use it all over the place in this module, so it's not as if that check is universally being treated wrong, but something about this particular context makes MSVC think it's unreachable or something."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404571900",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-404571900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 404571900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDU3MTkwMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T16:30:25Z",
    "updated_at": "2018-07-12T16:30:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, thanks...\r\n\r\n@jjhelmus do we know anyone at Microsoft who works on their compilers that might be able to provide insight on https://github.com/pandas-dev/pandas/pull/21813#issuecomment-404501626 and https://github.com/pandas-dev/pandas/pull/21813#issuecomment-404571051?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404855940",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-404855940",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 404855940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDg1NTk0MA==",
    "user": {
      "login": "jjhelmus",
      "id": 1050278,
      "node_id": "MDQ6VXNlcjEwNTAyNzg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1050278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jjhelmus",
      "html_url": "https://github.com/jjhelmus",
      "followers_url": "https://api.github.com/users/jjhelmus/followers",
      "following_url": "https://api.github.com/users/jjhelmus/following{/other_user}",
      "gists_url": "https://api.github.com/users/jjhelmus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jjhelmus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jjhelmus/subscriptions",
      "organizations_url": "https://api.github.com/users/jjhelmus/orgs",
      "repos_url": "https://api.github.com/users/jjhelmus/repos",
      "events_url": "https://api.github.com/users/jjhelmus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jjhelmus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T14:49:21Z",
    "updated_at": "2018-07-13T14:49:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zooba might be able to connect you to the right team at Microsoft"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404905675",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-404905675",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 404905675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDkwNTY3NQ==",
    "user": {
      "login": "zooba",
      "id": 1693688,
      "node_id": "MDQ6VXNlcjE2OTM2ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1693688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zooba",
      "html_url": "https://github.com/zooba",
      "followers_url": "https://api.github.com/users/zooba/followers",
      "following_url": "https://api.github.com/users/zooba/following{/other_user}",
      "gists_url": "https://api.github.com/users/zooba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zooba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zooba/subscriptions",
      "organizations_url": "https://api.github.com/users/zooba/orgs",
      "repos_url": "https://api.github.com/users/zooba/repos",
      "events_url": "https://api.github.com/users/zooba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zooba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T17:49:49Z",
    "updated_at": "2018-07-13T17:49:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can try, but I haven't been having as much luck recently.\r\n\r\nSince this is Cython, can someone post the generated code for the comparison? There's a much better chance of getting something useful if they're looking at the code they actually compile, and not the code someone else is compiling."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404918137",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-404918137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 404918137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDkxODEzNw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T18:38:08Z",
    "updated_at": "2018-07-13T18:38:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's Cython, so of course the bigger file is a tangled mess, but the particular function is easy to read - lines of gist here.  \r\nhttps://gist.github.com/chris-b1/cd974fb6b4165285a48b6d6c12129b40#file-window-cpp-L11028-L11096\r\n\r\nCalled in a few places, but for instance, here is a problem one.\r\nhttps://gist.github.com/chris-b1/cd974fb6b4165285a48b6d6c12129b40#file-window-cpp-L11948\r\n\r\nCython isn't doing anything particular interesting - it's a `cdef` function so basically translates line for line into c++.\r\n\r\nI can post it later, not on this machine, but I've also tried to write a simpler, plain c++ example that triggers the problem, but it always worked - really not sure why."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404967873",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-404967873",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 404967873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDk2Nzg3Mw==",
    "user": {
      "login": "zooba",
      "id": 1693688,
      "node_id": "MDQ6VXNlcjE2OTM2ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1693688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zooba",
      "html_url": "https://github.com/zooba",
      "followers_url": "https://api.github.com/users/zooba/followers",
      "following_url": "https://api.github.com/users/zooba/following{/other_user}",
      "gists_url": "https://api.github.com/users/zooba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zooba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zooba/subscriptions",
      "organizations_url": "https://api.github.com/users/zooba/orgs",
      "repos_url": "https://api.github.com/users/zooba/repos",
      "events_url": "https://api.github.com/users/zooba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zooba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T22:18:45Z",
    "updated_at": "2018-07-13T22:18:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can reproduce it with this snippet (has a few tricks to try and defeat optimisations, but they are likely unnecessary):\r\n\r\n```c\r\n#include <math.h>\r\n#include <stdio.h>\r\n\r\ndouble get_value(int i) {\r\n    return i > 1 ? NAN : 7;\r\n}\r\n\r\nint check_default(double v1, double v2) {\r\n    return ((v1 == v2) != 0);\r\n}\r\n\r\n#pragma float_control(precise, off, push)\r\nint check_fast(double v1, double v2) {\r\n    return ((v1 == v2) != 0);\r\n}\r\n#pragma float_control(pop)\r\n\r\n\r\nint main(int argc, char **argv) {\r\n    double x1 = get_value(argc);\r\n    double x2 = get_value(argc);\r\n    fprintf(stdout, \"default: %d\\nfast:    %d\\n\",\r\n        check_default(x1, x2), check_fast(x1, x2)\r\n    );\r\n}\r\n```\r\n\r\nThe comparison doesn't behave properly when you disable precise floating point operations. You may be doing this in the build with `/fp:fast` (if you build this snippet with that option, both checks return '1'; if you build with the default `/fp:precise`, it works). In fact, the [docs for this flag](https://docs.microsoft.com/en-us/cpp/build/reference/fp-specify-floating-point-behavior) specifically call out NaN comparisons as something that only work in `precise` mode.\r\n\r\nSo I'd guess you need to update the compiler flags for this one, or possibly add an explicit `isnan()` call."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404996780",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-404996780",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 404996780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDk5Njc4MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-14T04:03:18Z",
    "updated_at": "2018-07-14T04:03:18Z",
    "author_association": "MEMBER",
    "body": "Is the MSVC info something that can be inferred from platform.uname (at compile-time)?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405109934",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-405109934",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 405109934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTEwOTkzNA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-15T18:44:08Z",
    "updated_at": "2018-07-15T18:44:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for taking a look at this @zooba - unfortunately that's not exactly the same problem I'm seeing here, the compiled code is acting as if `(v1 == v2)` always evaluates to False/0.  We are building with `/fp:precise` (via defaults, but I've also tried manually overriding)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405110164",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-405110164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 405110164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTExMDE2NA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-15T18:48:16Z",
    "updated_at": "2018-07-15T18:48:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interestingly using `isnan` from <math.h> does solve the problem here - still feels like MSVC is doing something wrong in the former case, but that's a reasonable enough workaround."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405286728",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-405286728",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 405286728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTI4NjcyOA==",
    "user": {
      "login": "zooba",
      "id": 1693688,
      "node_id": "MDQ6VXNlcjE2OTM2ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1693688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zooba",
      "html_url": "https://github.com/zooba",
      "followers_url": "https://api.github.com/users/zooba/followers",
      "following_url": "https://api.github.com/users/zooba/following{/other_user}",
      "gists_url": "https://api.github.com/users/zooba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zooba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zooba/subscriptions",
      "organizations_url": "https://api.github.com/users/zooba/orgs",
      "repos_url": "https://api.github.com/users/zooba/repos",
      "events_url": "https://api.github.com/users/zooba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zooba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T15:29:28Z",
    "updated_at": "2018-07-16T15:29:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "> the compiled code is acting as if `(v1 == v2)` always evaluates to False/0\r\n\r\nDo you have a disassembly showing this? This would be very strange to see as a compiler optimization (unless you mean `(v == v)` always evaluates to True/1?)\r\n\r\n> b/c python forces the newest version, so can't have 2017 installed\r\n\r\nJust saw this while rereading the thread. If you start with all the tools on PATH and set `DISTUTILS_USE_SDK=1` then it'll skip the autodetection and use whatever you provide. (And if you help encourage the ecosystem to get off distutils completely, then more of these problems go away :) )"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405288303",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-405288303",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 405288303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTI4ODMwMw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T15:33:59Z",
    "updated_at": "2018-07-16T15:33:59Z",
    "author_association": "MEMBER",
    "body": "Could this SO answer be relevant?\r\n\r\nhttps://stackoverflow.com/questions/8200311/checking-for-nan-in-cython/20031818#20031818"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405291971",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-405291971",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 405291971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTI5MTk3MQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T15:44:47Z",
    "updated_at": "2018-07-16T15:44:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zooba - do you know how to pull symbols into the dissambly from a `.pyd`?  I was playing around with dumpbin / compile flags, but never got anything better than, e.g. below, where everything is still in offsets.\r\n\r\n```\r\n dumpbin.exe /DISASM pandas\\_libs\\window.cp36-win_amd64.pyd /OUT:tmp.txt\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/1924092/42768413-10da394c-88e5-11e8-85a7-6a416046762e.png)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405295656",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-405295656",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 405295656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTI5NTY1Ng==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T15:56:00Z",
    "updated_at": "2018-07-16T15:56:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "> do you know how to pull symbols into the dissambly from a .pyd\r\n\r\nAnswering my own question - I was missing `'/DEBUG'` on `extra_link_args`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405309962",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-405309962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 405309962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTMwOTk2Mg==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T16:42:35Z",
    "updated_at": "2018-07-16T16:42:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alright @zooba - I  think I have this to a reasonable bit of a dis-assembly - pushing the bounds of my knowledge but looks like a code-generation bug.\r\n\r\nHere's MSVC 2015 (printfs surround a call to `add_var`)  which works correctly.  In particular the highlighted lines are the NaN check.\r\nhttps://gist.github.com/chris-b1/1049fdabafc56b2a25de7ad377016baa#file-msvc2015-asm-L6-L8\r\n\r\nAnd here is MSVC 2017. The function call doesn't get inlined - half of the NaN check gets done (`jn`) - then the stack is being set up, then the other half the check (`jne`).  I believe in setting up the stack, the ZF flag originally set by `ucomisd` gets set back to 0 (from the `sub`) so the `jne` check will always be true, and the function unconditionally exits early.\r\nhttps://gist.github.com/chris-b1/199f818c1fbb8f8c4108aa9e430df4f7#file-msvc2017-asm-L15-L19\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405311428",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-405311428",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 405311428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTMxMTQyOA==",
    "user": {
      "login": "zooba",
      "id": 1693688,
      "node_id": "MDQ6VXNlcjE2OTM2ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1693688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zooba",
      "html_url": "https://github.com/zooba",
      "followers_url": "https://api.github.com/users/zooba/followers",
      "following_url": "https://api.github.com/users/zooba/following{/other_user}",
      "gists_url": "https://api.github.com/users/zooba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zooba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zooba/subscriptions",
      "organizations_url": "https://api.github.com/users/zooba/orgs",
      "repos_url": "https://api.github.com/users/zooba/repos",
      "events_url": "https://api.github.com/users/zooba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zooba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T16:47:18Z",
    "updated_at": "2018-07-16T16:47:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chris-b1 Yep, you're absolutely right. Thanks for tracking that down, I'll pass it on!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405313675",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-405313675",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 405313675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTMxMzY3NQ==",
    "user": {
      "login": "zooba",
      "id": 1693688,
      "node_id": "MDQ6VXNlcjE2OTM2ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1693688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zooba",
      "html_url": "https://github.com/zooba",
      "followers_url": "https://api.github.com/users/zooba/followers",
      "following_url": "https://api.github.com/users/zooba/following{/other_user}",
      "gists_url": "https://api.github.com/users/zooba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zooba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zooba/subscriptions",
      "organizations_url": "https://api.github.com/users/zooba/orgs",
      "repos_url": "https://api.github.com/users/zooba/repos",
      "events_url": "https://api.github.com/users/zooba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zooba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T16:54:47Z",
    "updated_at": "2018-07-16T16:54:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is the public side of the report: https://developercommunity.visualstudio.com/content/problem/294290/incorrect-codegen-for-double-equality.html Feel free to add pings there whenever you like"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405410945",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-405410945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 405410945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTQxMDk0NQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T23:23:31Z",
    "updated_at": "2018-07-16T23:23:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @zooba!\r\n\r\nand thanks @jbrockmendel - that's what I'll have to do to fix the 2.7 build, more modern MSVCs are basically standards compliant and have `isnan` where it should be."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405565063",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-405565063",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 405565063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTU2NTA2Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-17T12:30:05Z",
    "updated_at": "2018-07-17T12:30:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "does using the fix proposed in #21940 help here? e.g. ``npy_isnan``?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405601955",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-405601955",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 405601955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTYwMTk1NQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-17T14:28:22Z",
    "updated_at": "2018-07-17T14:28:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "> does using the fix proposed in #21940 help here? e.g. npy_isnan?\r\n\r\nIt does (latest commit has that and is passing on appveyor) - but less sure we want to apply that universally, I'll try perf on @jbrockmendel PR later, suspect it may be worse on Windows.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406308467",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-406308467",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 406308467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjMwODQ2Nw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T15:03:22Z",
    "updated_at": "2018-07-19T15:03:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback  - any idea on the circle CI failure? seems unrelated, but consistently failing on this branch\r\n\r\n<details>\r\n\r\n```bash\r\n__________________ TestPythonParser.test_dtype_with_converter __________________\r\n\r\nself = <pandas.tests.io.parser.test_parsers.TestPythonParser object at 0x7f2235d65b70>\r\n\r\n    def test_dtype_with_converter(self):\r\n        data = \"\"\"a,b\r\n    1.1,2.2\r\n    1.2,2.3\"\"\"\r\n        # dtype spec ignored if converted specified\r\n        with tm.assert_produces_warning(ParserWarning):\r\n            result = self.read_csv(StringIO(data), dtype={'a': 'i8'},\r\n>                                  converters={'a': lambda x: str(x)})\r\n\r\npandas/tests/io/parser/dtypes.py:340: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n../miniconda3/envs/pandas/lib/python3.5/contextlib.py:66: in __exit__\r\n    next(self.gen)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nexpected_warning = <class 'pandas.errors.ParserWarning'>\r\nfilter_level = 'always', clear = None, check_stacklevel = True\r\n\r\n    @contextmanager\r\n    def assert_produces_warning(expected_warning=Warning, filter_level=\"always\",\r\n                                clear=None, check_stacklevel=True):\r\n        \"\"\"\r\n        Context manager for running code expected to either raise a specific\r\n        warning, or not raise any warnings. Verifies that the code raises the\r\n        expected warning, and that it does not raise any other unexpected\r\n        warnings. It is basically a wrapper around ``warnings.catch_warnings``.\r\n    \r\n        Parameters\r\n        ----------\r\n        expected_warning : {Warning, False, None}, default Warning\r\n            The type of Exception raised. ``exception.Warning`` is the base\r\n            class for all warnings. To check that no warning is returned,\r\n            specify ``False`` or ``None``.\r\n        filter_level : str, default \"always\"\r\n            Specifies whether warnings are ignored, displayed, or turned\r\n            into errors.\r\n            Valid values are:\r\n    \r\n            * \"error\" - turns matching warnings into exceptions\r\n            * \"ignore\" - discard the warning\r\n            * \"always\" - always emit a warning\r\n            * \"default\" - print the warning the first time it is generated\r\n              from each location\r\n            * \"module\" - print the warning the first time it is generated\r\n              from each module\r\n            * \"once\" - print the warning the first time it is generated\r\n    \r\n        clear : str, default None\r\n            If not ``None`` then remove any previously raised warnings from\r\n            the ``__warningsregistry__`` to ensure that no warning messages are\r\n            suppressed by this context manager. If ``None`` is specified,\r\n            the ``__warningsregistry__`` keeps track of which warnings have been\r\n             shown, and does not show them again.\r\n        check_stacklevel : bool, default True\r\n            If True, displays the line that called the function containing\r\n            the warning to show were the function is called. Otherwise, the\r\n            line that implements the function is displayed.\r\n    \r\n        Examples\r\n        --------\r\n        >>> import warnings\r\n        >>> with assert_produces_warning():\r\n        ...     warnings.warn(UserWarning())\r\n        ...\r\n        >>> with assert_produces_warning(False):\r\n        ...     warnings.warn(RuntimeWarning())\r\n        ...\r\n        Traceback (most recent call last):\r\n            ...\r\n        AssertionError: Caused unexpected warning(s): ['RuntimeWarning'].\r\n        >>> with assert_produces_warning(UserWarning):\r\n        ...     warnings.warn(RuntimeWarning())\r\n        Traceback (most recent call last):\r\n            ...\r\n        AssertionError: Did not see expected warning of class 'UserWarning'.\r\n    \r\n        ..warn:: This is *not* thread-safe.\r\n        \"\"\"\r\n        with warnings.catch_warnings(record=True) as w:\r\n    \r\n            if clear is not None:\r\n                # make sure that we are clearning these warnings\r\n                # if they have happened before\r\n                # to guarantee that we will catch them\r\n                if not is_list_like(clear):\r\n                    clear = [clear]\r\n                for m in clear:\r\n                    try:\r\n                        m.__warningregistry__.clear()\r\n                    except Exception:\r\n                        pass\r\n    \r\n            saw_warning = False\r\n            warnings.simplefilter(filter_level)\r\n            yield w\r\n            extra_warnings = []\r\n    \r\n            for actual_warning in w:\r\n                if (expected_warning and issubclass(actual_warning.category,\r\n                                                    expected_warning)):\r\n                    saw_warning = True\r\n    \r\n                    if check_stacklevel and issubclass(actual_warning.category,\r\n                                                       (FutureWarning,\r\n                                                        DeprecationWarning)):\r\n                        from inspect import getframeinfo, stack\r\n                        caller = getframeinfo(stack()[2][0])\r\n                        msg = (\"Warning not set with correct stacklevel. \"\r\n                               \"File where warning is raised: {actual} != \"\r\n                               \"{caller}. Warning message: {message}\"\r\n                               ).format(actual=actual_warning.filename,\r\n                                        caller=caller.filename,\r\n                                        message=actual_warning.message)\r\n                        assert actual_warning.filename == caller.filename, msg\r\n                else:\r\n                    extra_warnings.append((actual_warning.category.__name__,\r\n                                           actual_warning.message,\r\n                                           actual_warning.filename,\r\n                                           actual_warning.lineno))\r\n            if expected_warning:\r\n                msg = \"Did not see expected warning of class {name!r}.\".format(\r\n                    name=expected_warning.__name__)\r\n                assert saw_warning, msg\r\n            assert not extra_warnings, (\"Caused unexpected warning(s): {extra!r}.\"\r\n>                                       ).format(extra=extra_warnings)\r\nE           AssertionError: Caused unexpected warning(s): [('ResourceWarning', ResourceWarning(\"unclosed file <_io.BufferedReader name='/tmp/tmpuehs2h5ztest_file.zip'>\",), '/home/ubuntu/miniconda3/envs/pandas/lib/python3.5/importlib/_bootstrap.py', 967)].\r\n\r\npandas/util/testing.py:2535: AssertionError\r\n```\r\n</details>"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406309750",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-406309750",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 406309750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjMwOTc1MA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T15:06:48Z",
    "updated_at": "2018-07-19T15:06:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've had similar experiences recently (although it always happened to me on Travis) - I found the following issue and commented there #13962."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406315478",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-406315478",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 406315478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjMxNTQ3OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T15:22:53Z",
    "updated_at": "2018-07-19T15:22:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI @chris-b1 circle CI has a CLI for running stuff locally. I think it's safe to ignore here though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406704115",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-406704115",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 406704115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjcwNDExNQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T19:28:26Z",
    "updated_at": "2018-07-20T19:28:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback - I think this one should be good, if you have any other thoughts"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406719027",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-406719027",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 406719027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjcxOTAyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T20:32:33Z",
    "updated_at": "2018-07-20T20:32:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "needs a rebase. also Circle still seems to be failing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407706318",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21813#issuecomment-407706318",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21813",
    "id": 407706318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzcwNjMxOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-25T10:16:27Z",
    "updated_at": "2018-07-25T10:16:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chris-b1 this looks good. can you rebase once more. \r\n\r\nperf looks ok? (even if its slightly worse this is a bug :>)\r\n\r\nGo ahead and merge on green."
  }
]
