[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/42544631",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7071#issuecomment-42544631",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7071",
    "id": 42544631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTQ0NjMx",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-08T12:38:25Z",
    "updated_at": "2014-05-08T12:38:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "It may be easier (and faster) to spread your list over several columns. So the `'Attack Method'` column would become `is_poison0`, `is_poision1`, `is_poison2`  `is_squeeze0`, ... The value of each element would be True or 1 for the Genus that uses that particular poison or squeeze method.\n\nWith this setup you use the existing `isin` method pretty easily I think.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/42640189",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7071#issuecomment-42640189",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7071",
    "id": 42640189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQwMTg5",
    "user": {
      "login": "ccsv",
      "id": 6316732,
      "node_id": "MDQ6VXNlcjYzMTY3MzI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6316732?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccsv",
      "html_url": "https://github.com/ccsv",
      "followers_url": "https://api.github.com/users/ccsv/followers",
      "following_url": "https://api.github.com/users/ccsv/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccsv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccsv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccsv/subscriptions",
      "organizations_url": "https://api.github.com/users/ccsv/orgs",
      "repos_url": "https://api.github.com/users/ccsv/repos",
      "events_url": "https://api.github.com/users/ccsv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccsv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-09T07:28:37Z",
    "updated_at": "2014-05-09T07:28:37Z",
    "author_association": "NONE",
    "body": "@TomAugspurger  While what you say is true. I made an example and time it here:http://www.reddit.com/r/learnpython/comments/250e0m/list_of_strings_vs_using_regex_patterns_which_is/\n\nIt looks like regex is 2x as fast if I use the for loops. So by adding it to the `isin` method I think it would speed up code by the same amount.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/42661851",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7071#issuecomment-42661851",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7071",
    "id": 42661851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjYxODUx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-09T12:46:58Z",
    "updated_at": "2014-05-09T12:46:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ccsv your example is way too short to be a good benchmark. `str.contains` is vectorized and IS much faster, more readable and along with boolean indexing the way to go.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/42663372",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7071#issuecomment-42663372",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7071",
    "id": 42663372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjYzMzcy",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-09T13:05:49Z",
    "updated_at": "2014-05-09T13:06:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to expand on your example, if you replicate the values till you have a frame thats (1000 x 3)\n- Vectorized boolean indexing:\n\n``` python\nIn [78]: %timeit df.loc[df.Users.isin(ban_list), 'Banned'] = 'Yes'\n1000 loops, best of 3: 429 Âµs per loop\n```\n- regex with for loop\n\n``` python\nIn [87]: %%timeit\n   ....: for i in range(len(ban_list)):\n   ....:     df.loc[df.Users.str.contains(ban_list[i]) & (df.Banned == ''),'Banned'] = 'Yes'\n   ....: for i in range(len(Adminlist)):\n   ....:     df.loc[df.Users.str.contains(Adminlist[i]) & (df.Banned == ''),'Banned'] = 'Admin'\n   ....: \n\n100 loops, best of 3: 6.85 ms per loop\n```\n\nIt's not likely that allowing regexes will speed the first version up at all. `isin` uses Cython code that works on numpy arrays. I suspect that it will be slower, but you're welcome to try to implement it and post some benchmarks!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/42665259",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7071#issuecomment-42665259",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7071",
    "id": 42665259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjY1MjU5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-09T13:27:29Z",
    "updated_at": "2014-05-09T13:27:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ccsv closing for now, if you have a different implementation, pls reopen\n\nthanks for the suggestions!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402833335",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7071#issuecomment-402833335",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7071",
    "id": 402833335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjgzMzMzNQ==",
    "user": {
      "login": "alphaCTzo7G",
      "id": 29691914,
      "node_id": "MDQ6VXNlcjI5NjkxOTE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/29691914?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alphaCTzo7G",
      "html_url": "https://github.com/alphaCTzo7G",
      "followers_url": "https://api.github.com/users/alphaCTzo7G/followers",
      "following_url": "https://api.github.com/users/alphaCTzo7G/following{/other_user}",
      "gists_url": "https://api.github.com/users/alphaCTzo7G/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alphaCTzo7G/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alphaCTzo7G/subscriptions",
      "organizations_url": "https://api.github.com/users/alphaCTzo7G/orgs",
      "repos_url": "https://api.github.com/users/alphaCTzo7G/repos",
      "events_url": "https://api.github.com/users/alphaCTzo7G/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alphaCTzo7G/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T19:49:21Z",
    "updated_at": "2018-07-05T19:49:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "It would be great to have `regex` capabilities in `isin`, instead of just perfect matches. Because `str.contains` only accepts `strings`, its not possible to do something like `df1.isin(df2)`, where `df2` could be a dataframe or some other type, which can contain `regex` patterns instead of exact matches. \r\n\r\nThis would make `isin` much more powerful and very short and succinct to find patterns with.."
  }
]
