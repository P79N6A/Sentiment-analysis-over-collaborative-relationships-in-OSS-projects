[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/442946445",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23995#issuecomment-442946445",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23995",
    "id": 442946445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mjk0NjQ0NQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-29T18:43:01Z",
    "updated_at": "2018-11-29T18:43:01Z",
    "author_association": "MEMBER",
    "body": "> Perhaps `to_numpy(copy=True, dtype=None)` will suffice?\r\n\r\nThis covers the use-cases that come to mind for me.\r\n\r\nFor the `copy` argument: presumably `copy=True` means always copy, `copy=False` means raise an error instead of copying (so you can modify the NumPy array in place and also modify the pandas object) and `copy=None` (the default) means copy only if necessary?\r\n\r\nFor the `dtype` argument: we would need to have extension array specific casting rules, e.g., so `dtype='datetime64'` properly casts a time-zone aware type."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/442949886",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23995#issuecomment-442949886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23995",
    "id": 442949886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mjk0OTg4Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-29T18:52:40Z",
    "updated_at": "2018-11-29T18:52:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> copy=False means raise an error instead of copying\r\n\r\nI was thinking `copy=False` means copy only if needed, similar to NumPy. But raising when no-copy isn't possible is also presumably useful, and supporting that via `copy=False` and leaving `copy=None` for \"infer\" seems fine."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/444376219",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23995#issuecomment-444376219",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23995",
    "id": 444376219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDM3NjIxOQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-05T06:39:01Z",
    "updated_at": "2018-12-05T06:39:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Reading through https://pandas-docs.github.io/pandas-docs-travis/whatsnew/v0.24.0.html#accessing-the-values-in-a-series-or-index, I really think the `.values` -> `.array` shift should be done for `DataFrame` as well, even if there is no semantic collision like for the EAs.\r\n\r\nBasically, `Series` and `DataFrame` should have the same fundamental API about interacting with index/data, so one might also consider a `.to_numpy` that (currently) only returns `.array`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/444457209",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23995#issuecomment-444457209",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23995",
    "id": 444457209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDQ1NzIwOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-05T11:44:11Z",
    "updated_at": "2018-12-05T11:44:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's not in the release notes, but we did implement `DataFrame.to_numpy()`\nthat's an alias for `.values`. (I'll update, when I fix a few broken links).\n\nI don't know what would be returned for `DataFrame.array`. There (often)\nisn't a single array that could be returned, and the point of `.array` is to\n*always* be a view back on the original data.\n\nOn Wed, Dec 5, 2018 at 12:39 AM h-vetinari <notifications@github.com> wrote:\n\n> Reading through\n> https://pandas-docs.github.io/pandas-docs-travis/whatsnew/v0.24.0.html#accessing-the-values-in-a-series-or-index,\n> I really think the .values -> .array shift should be done for DataFrame\n> as well, even if there is no semantic collision like for the EAs.\n>\n> Basically, Series and DataFrame should have the same fundamental API\n> about interacting with index/data, so one might also consider a .to_numpy\n> that (currently) only returns .array.\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/23995#issuecomment-444376219>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIhUAmhz4C1aSZ5HVkSKRZGyN_GtZks5u12oNgaJpZM4Y5_u0>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/445956871",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23995#issuecomment-445956871",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23995",
    "id": 445956871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTk1Njg3MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-10T20:15:38Z",
    "updated_at": "2018-12-10T20:15:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think we should make it so that `{Series,Index}.array` is always an ExtensionArray. It's not much work (I almost have a PR ready) and gives us a lot more flexibility going forward, since we aren't tightly coupled to ndarrays.\r\n\r\nIf a user wants a NumPy array, then they can use `to_numpy()`, or rely on `np.asarray(Series[numpy].array)` being no-copy, or we can provide access to the ndarray backing the `NumPyBackedExtensionArray`.\r\n\r\nOne potential downside: people start sticking this inside a Series / DataFrame instead of passing the actual ndarray. That would put them into the EA interface, which we may not want, especially for wide dataframes since they wouldn't be consolidated. We'll need to carefully document around this.\r\n\r\nDoes anyone have any objections to that?  cc @pandas-dev/pandas-core since this is a kind of fundamental (non-breaking) change to our 1.0 data model."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/445959892",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23995#issuecomment-445959892",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23995",
    "id": 445959892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTk1OTg5Mg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-10T20:25:32Z",
    "updated_at": "2018-12-10T20:25:32Z",
    "author_association": "MEMBER",
    "body": "> One potential downside: people start sticking this inside a Series / DataFrame instead of passing the actual ndarray. That would put them into the EA interface, which we may not want, especially for wide dataframes since they wouldn't be consolidated. We'll need to carefully document around this.\r\n\r\nWe could also say that as a special case `NumpyExtensionArray` gets unwrapped in Series/DataFrame.\r\n\r\nBeing able to actually use a `NumpyExtensionArray` offers different advantages/disadvantages:\r\n- Some people would like the \"non-consolidation\" guarantee offered by a true NumpyExtensionArray\r\n- But performance would suffer for many common operations because they need to go through the extension array interface."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/445960945",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23995#issuecomment-445960945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23995",
    "id": 445960945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTk2MDk0NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-10T20:28:54Z",
    "updated_at": "2018-12-10T20:28:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "> But performance would suffer for many common operations because they need to go through the extension array interface.\r\n\r\nThis will make for a good test of just how much overhead we have :) Aside from non-consolidation, I suspect it won't be much, but best to verify."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/445961716",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23995#issuecomment-445961716",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23995",
    "id": 445961716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTk2MTcxNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-10T20:31:25Z",
    "updated_at": "2018-12-10T20:31:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "My WIP branch is at https://github.com/pandas-dev/pandas/compare/master...TomAugspurger:numpy-ea, FYI, in case anyone wants to work on it.  I'm moving back to fighting with serialization issues in #24024 right now."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447647404",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23995#issuecomment-447647404",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23995",
    "id": 447647404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzY0NzQwNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-16T14:26:37Z",
    "updated_at": "2018-12-16T14:26:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "The final piece that hasn't been addressed is the signature of `Series.to_numpy()`.\r\n\r\nI propose the following\r\n\r\n```python\r\ndef to_numpy(self, dtype=None, copy=False):\r\n    \"\"\"\r\n    Convert the Series to a :class:`numpy.ndarray`.\r\n\r\n    By default, this requires no coercion or copying of data\r\n    for Series backed by a NumPy array. For Series backed by\r\n    an ExtensionArray coercion or copying may be required if\r\n    NumPy cannot natively hold the values of the array.\r\n\r\n    Parameters\r\n    ----------\r\n    dtype : numpy.dtype\r\n        The NumPy dtype to pass to :func:`numpy.array`.\r\n    copy : bool, default False\r\n        Whether to copy the underlying data.\r\n\r\n    Returns\r\n    -------\r\n    ndarray\r\n    \"\"\"\r\n    result = np.array(self.array, dtype=dtype, copy=copy)\r\n    return result\r\n```\r\n\r\nI think that'll cover most of the use cases. In particular, it'll handle\r\n\r\n1. delegate conversion from array -> ndarray to the ExtensionArray, which should be handling this via the `__array__` method if they want a say in how things occur.\r\n2. Allows for control of the fidelity, e.g. converting `Series[datetime64[ns, tz]` to an ndarray of Timestamp objects with `dtype=object` or an ndarray of datetimes with `dtype='M8[ns]'`.\r\n3. Avoids `**kwargs`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451275359",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23995#issuecomment-451275359",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23995",
    "id": 451275359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTI3NTM1OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-03T20:59:40Z",
    "updated_at": "2019-01-03T20:59:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that everything here has been addressed."
  }
]
