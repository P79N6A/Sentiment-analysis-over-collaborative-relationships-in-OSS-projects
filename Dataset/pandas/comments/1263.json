[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5821856",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1263#issuecomment-5821856",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1263",
    "id": 5821856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjE4NTY=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-21T13:05:32Z",
    "updated_at": "2012-05-21T13:05:32Z",
    "author_association": "MEMBER",
    "body": "Cool. Do you have an opinion on whether timestamps should be converted to JavaScript timestamps (milliseconds since the epoch)? Everything is nanoseconds now in pandas. I'm guessing \"probably not\" but I guess it could be an option in to_json\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5822845",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1263#issuecomment-5822845",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1263",
    "id": 5822845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjI4NDU=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-21T13:48:31Z",
    "updated_at": "2012-05-21T13:48:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm when decoding to DataFrames it obviously shouldn't be an issue but it would be nice to have the option of milliseconds and/or seconds for sharing data with JavaScript, assuming it's easy to deduce the unit from the datetime object. Esp as JSON will probably (?!) primarily be used for sending data client side (i.e. to browsers).\n\nNote the original ujson encodes datetimes to seconds and I don't think there is a standard JSON timestamp unit.\n\nSort of a tangent but it would also be nice to have an efficient way of converting those timestamps back to datetimes when rebuilding the DataFrame (I'm not suggesting it should be part of the JSON decoding). Maybe that exists already though and I'm just not aware of it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5862369",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1263#issuecomment-5862369",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1263",
    "id": 5862369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjIzNjk=",
    "user": {
      "login": "drbunsen",
      "id": 752173,
      "node_id": "MDQ6VXNlcjc1MjE3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/752173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drbunsen",
      "html_url": "https://github.com/drbunsen",
      "followers_url": "https://api.github.com/users/drbunsen/followers",
      "following_url": "https://api.github.com/users/drbunsen/following{/other_user}",
      "gists_url": "https://api.github.com/users/drbunsen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drbunsen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drbunsen/subscriptions",
      "organizations_url": "https://api.github.com/users/drbunsen/orgs",
      "repos_url": "https://api.github.com/users/drbunsen/repos",
      "events_url": "https://api.github.com/users/drbunsen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drbunsen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-23T00:20:07Z",
    "updated_at": "2012-05-23T00:20:07Z",
    "author_association": "NONE",
    "body": "Just throwing in my 2 cents; I'd really like a simple way to export a DataFrame as JSON in Pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5862386",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1263#issuecomment-5862386",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1263",
    "id": 5862386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjIzODY=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-23T00:21:00Z",
    "updated_at": "2012-05-23T00:21:00Z",
    "author_association": "MEMBER",
    "body": "@drbunsen after this PR is merged, it will be dirt simple: `df.to_json()` (or possibly specifying a different JSON format depending on your application)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5887354",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1263#issuecomment-5887354",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1263",
    "id": 5887354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODczNTQ=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-23T23:34:26Z",
    "updated_at": "2012-05-23T23:34:26Z",
    "author_association": "MEMBER",
    "body": "@Komnomnomnom working on the timestamp handling issues. Doing everything (in particular, working with the pandas data structures) in C is probably not be the best long-term solution since `Index` subclasses may not be completely represented as NumPy arrays. I don't have time to refactor this, but I'm going to insert some kludges (+ tests) to deal with the `datetime64[ns]` arrays so that things work as they should for now. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5887788",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1263#issuecomment-5887788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1263",
    "id": 5887788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODc3ODg=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T00:07:42Z",
    "updated_at": "2012-05-24T00:07:42Z",
    "author_association": "MEMBER",
    "body": "OK I think I have the kludge mostly sorted. @Komnomnomnom  you have CRLF line endings in these files:\n\nhttp://help.github.com/line-endings/\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5887956",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1263#issuecomment-5887956",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1263",
    "id": 5887956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODc5NTY=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T00:20:31Z",
    "updated_at": "2012-05-24T00:20:31Z",
    "author_association": "MEMBER",
    "body": "Cool, I merged this. There will be a bunch of followup issues no doubt as things settle. One question is how to encode datetime.datetime objects:\n\n```\nIn [2]: ujson.encode(datetime.now())\nOut[2]: '1337804262'\n\nIn [3]: np.array(datetime.now(), dtype='M8[ns]').view('i8')\nOut[3]: array(1337804288505948000)\n```\n\nI have the appropriate code in `datetime.pyx` and `np_datetime.c` to do the PyDateTime -> nanosecond timestamp conversion. Need to think a bit more, cannot leave it as is I don't think. Should also have some flexibility about the unit for timestamps. Like exporting as millisecond timestamps is probably what you want for JavaScript Date objects for, e.g., d3 usage.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5894055",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1263#issuecomment-5894055",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1263",
    "id": 5894055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTQwNTU=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T06:59:28Z",
    "updated_at": "2012-05-24T06:59:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks Wes. Re the CRLF, I initially preserved the line endings and tabs just to be consistent with the original ujson. Should have switched them for pandas though :).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5897800",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1263#issuecomment-5897800",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1263",
    "id": 5897800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTc4MDA=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T11:23:01Z",
    "updated_at": "2012-05-24T11:23:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "It will probably be necessary to add special handling functions (in either C or Python) for complex objects like e.g. `MultiIndex` but here's some thoughts about different options for the ujson code to deal with the pandas wrapping of numpy values, i.e. things like the timestamp issue.\n1. write a custom PyArray getitem C function in ujson code which would do any necessary interpretation of the values. This would mean duplicating any pandas special handling into this function. (yuck)\n2. when encoding numpy arrays use the Python `__getitem__` method for a 'container' object if it exists, where e.g. the container is a pandas objects. This adds some overhead but it keeps things general and shouldn't change the current code too much. It does assume that all the special handling would be taken care of by `__getitem__` though. \n3. add special handling functions for series, index and dataframe (i.e. don't consider them to be numpy arrays) and call their iteration and accessor methods directly. (Note special handling functions already exist but they are merely thin wrappers around the numpy array handling, and only used to support the `split` format).\n4. pass ujson a python function or object which will be called to deal with iteration and/or accessing items.\n\nThere are probably more possibilities but if it works 2 is the better option IMO, it doesn't impact the current code too much and keeps things general. Although if the timestamp issue is the only one then perhaps the kludge should remain until numpy 1.7 comes along? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5904073",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1263#issuecomment-5904073",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1263",
    "id": 5904073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDQwNzM=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T14:46:17Z",
    "updated_at": "2012-05-24T14:46:17Z",
    "author_association": "MEMBER",
    "body": "Will have to return to this at some point. I am fairly certain a lot of performance is being left on the table due to all of the \"boxing\" of array values. The right approach as always is to add performance tests to the vbench suite (vb_suite/) so we can monitor and track the performance of to_json. \n\nI'm testing on both NumPy 1.6 and 1.7, so as long as the kludge works and the tests pass, good enough for me right now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20022920",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1263#issuecomment-20022920",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1263",
    "id": 20022920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDIyOTIw",
    "user": {
      "login": "trottier",
      "id": 3505485,
      "node_id": "MDQ6VXNlcjM1MDU0ODU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3505485?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trottier",
      "html_url": "https://github.com/trottier",
      "followers_url": "https://api.github.com/users/trottier/followers",
      "following_url": "https://api.github.com/users/trottier/following{/other_user}",
      "gists_url": "https://api.github.com/users/trottier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trottier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trottier/subscriptions",
      "organizations_url": "https://api.github.com/users/trottier/orgs",
      "repos_url": "https://api.github.com/users/trottier/repos",
      "events_url": "https://api.github.com/users/trottier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trottier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-26T01:59:08Z",
    "updated_at": "2013-06-26T01:59:08Z",
    "author_association": "NONE",
    "body": "fyi: https://github.com/esnme/ultrajson/issues/83\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20024006",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1263#issuecomment-20024006",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1263",
    "id": 20024006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDI0MDA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-26T02:38:01Z",
    "updated_at": "2013-06-26T02:38:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@trottier this is in master now #3876 and docs: http://pandas.pydata.org/pandas-docs/dev/io.html#json\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20024463",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1263#issuecomment-20024463",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1263",
    "id": 20024463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDI0NDYz",
    "user": {
      "login": "trottier",
      "id": 3505485,
      "node_id": "MDQ6VXNlcjM1MDU0ODU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3505485?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trottier",
      "html_url": "https://github.com/trottier",
      "followers_url": "https://api.github.com/users/trottier/followers",
      "following_url": "https://api.github.com/users/trottier/following{/other_user}",
      "gists_url": "https://api.github.com/users/trottier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trottier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trottier/subscriptions",
      "organizations_url": "https://api.github.com/users/trottier/orgs",
      "repos_url": "https://api.github.com/users/trottier/repos",
      "events_url": "https://api.github.com/users/trottier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trottier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-26T02:56:28Z",
    "updated_at": "2013-06-26T03:38:20Z",
    "author_association": "NONE",
    "body": "Sorry, I should have been more explicit. I would recommend against using ujson in pandas because (and unfortunately this isn't documented) ujson handles floating point numbers unconventionally. \n\nhttps://github.com/esnme/ultrajson/issues/69#issuecomment-17410062\nhttps://github.com/esnme/ultrajson/issues/83\nhttps://github.com/esnme/ultrajson/issues/90\n\n```\n>>> import ujson\n>>> ujson.dumps(1e-40)\n'0.0'\n>>> ujson.dumps(1e-40, double_precision=17)\n'0.0'\n```\n\nsimplejson is almost as fast, and doesn't have these issues.\n"
  }
]
