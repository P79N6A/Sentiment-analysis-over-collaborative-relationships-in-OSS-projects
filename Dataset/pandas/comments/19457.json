[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361735207",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19457#issuecomment-361735207",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19457",
    "id": 361735207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTczNTIwNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T21:10:30Z",
    "updated_at": "2018-01-30T21:10:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you create a small reproducible example? And can you paste the current traceback?\r\n\r\n> but the multiprocessing module requests the chunks in a different Thread\r\n\r\nYou mean different process, right?\r\n\r\nDo you have any interest in working on a fix?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361860142",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19457#issuecomment-361860142",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19457",
    "id": 361860142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTg2MDE0Mg==",
    "user": {
      "login": "leezu",
      "id": 946903,
      "node_id": "MDQ6VXNlcjk0NjkwMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leezu",
      "html_url": "https://github.com/leezu",
      "followers_url": "https://api.github.com/users/leezu/followers",
      "following_url": "https://api.github.com/users/leezu/following{/other_user}",
      "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leezu/subscriptions",
      "organizations_url": "https://api.github.com/users/leezu/orgs",
      "repos_url": "https://api.github.com/users/leezu/repos",
      "events_url": "https://api.github.com/users/leezu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leezu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T08:33:20Z",
    "updated_at": "2018-01-31T08:35:18Z",
    "author_association": "NONE",
    "body": "Reproducible example:\r\n\r\n```python\r\nimport tempfile\r\n\r\nimport numpy as np\r\nimport multiprocessing as mp\r\nimport pandas as pd\r\n\r\n# Find a temporary file to store the database\r\n_, f = tempfile.mkstemp()\r\n\r\n# Put some data in the database\r\nurl = f\"sqlite://{f}\"\r\ndf = pd.DataFrame.from_records(np.random.normal(size=(100, 100)))\r\ndf.to_sql(name=\"test\", con=url)\r\n\r\n\r\n# Retrieve via python mutliprocessing module\r\ndef process_chunk(chunk):\r\n    pass\r\n\r\npool = mp.Pool()\r\nquery = \"SELECT * FROM test\"\r\nfor vals in pool.imap_unordered(process_chunk,\r\n                                pd.read_sql_query(query, url, chunksize=2)):\r\n    pass\r\n\r\n```\r\n\r\n> You mean different process, right?\r\n\r\nNo, I mean that the multiprocessing module retrieves data from the iterator returned by pd.read_sql_query in a different Thread. Subsequently that data is of course passed to a different process, but this bug is concerned about not even getting so far ;)\r\n\r\n> Do you have any interest in working on a fix?\r\n\r\nI'm interested but won't have time before end of February. So if someone else finds time to work on this I wouldn't mind. In the meantime the workaround detailed in the first post works."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361860449",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19457#issuecomment-361860449",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19457",
    "id": 361860449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTg2MDQ0OQ==",
    "user": {
      "login": "leezu",
      "id": 946903,
      "node_id": "MDQ6VXNlcjk0NjkwMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leezu",
      "html_url": "https://github.com/leezu",
      "followers_url": "https://api.github.com/users/leezu/followers",
      "following_url": "https://api.github.com/users/leezu/following{/other_user}",
      "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leezu/subscriptions",
      "organizations_url": "https://api.github.com/users/leezu/orgs",
      "repos_url": "https://api.github.com/users/leezu/repos",
      "events_url": "https://api.github.com/users/leezu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leezu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T08:34:44Z",
    "updated_at": "2018-01-31T08:34:44Z",
    "author_association": "NONE",
    "body": "And this is the traceback\r\n```\r\n\r\n/home/leonard/.local/lib64/python3.6/site-packages/matplotlib/colors.py:298: MatplotlibDeprecationWarning: The is_string_like function was deprecated in version 2.1.\r\n  if cbook.is_string_like(arg):\r\nError closing cursor\r\nTraceback (most recent call last):\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/result.py\", line 1159, in fetchmany\r\n    l = self.process_rows(self._fetchmany_impl(size))\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/result.py\", line 1076, in _fetchmany_impl\r\n    return self.cursor.fetchmany(size)\r\nsqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread.The object was created in thread id 140114398058240 and this is thread id 140114281891584\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1288, in _safe_close_cursor\r\n    cursor.close()\r\nsqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread.The object was created in thread id 140114398058240 and this is thread id 140114281891584\r\nException during reset or similar\r\nTraceback (most recent call last):\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/result.py\", line 1159, in fetchmany\r\n    l = self.process_rows(self._fetchmany_impl(size))\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/result.py\", line 1076, in _fetchmany_impl\r\n    return self.cursor.fetchmany(size)\r\nsqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread.The object was created in thread id 140114398058240 and this is thread id 140114281891584\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 704, in _rollback_impl\r\n    self.engine.dialect.do_rollback(self.connection)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/default.py\", line 457, in do_rollback\r\n    dbapi_connection.rollback()\r\nsqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread.The object was created in thread id 140114398058240 and this is thread id 140114281891584\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1406, in _handle_dbapi_exception\r\n    self._autorollback()\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/util/langhelpers.py\", line 76, in __exit__\r\n    compat.reraise(type_, value, traceback)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/util/compat.py\", line 187, in reraise\r\n    raise value\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1406, in _handle_dbapi_exception\r\n    self._autorollback()\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 827, in _autorollback\r\n    self._root._rollback_impl()\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 706, in _rollback_impl\r\n    self._handle_dbapi_exception(e, None, None, None, None)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1334, in _handle_dbapi_exception\r\n    exc_info\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/util/compat.py\", line 203, in raise_from_cause\r\n    reraise(type(exception), exception, tb=exc_tb, cause=cause)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/util/compat.py\", line 186, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 704, in _rollback_impl\r\n    self.engine.dialect.do_rollback(self.connection)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/default.py\", line 457, in do_rollback\r\n    dbapi_connection.rollback()\r\nsqlalchemy.exc.ProgrammingError: (sqlite3.ProgrammingError) SQLite objects created in a thread can only be used in that same thread.The object was created in thread id 140114398058240 and this is thread id 140114281891584 (Background on this error at: http://sqlalche.me/e/f405)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/pool.py\", line 703, in _finalize_fairy\r\n    fairy._reset(pool)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/pool.py\", line 873, in _reset\r\n    pool._dialect.do_rollback(self)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/default.py\", line 457, in do_rollback\r\n    dbapi_connection.rollback()\r\nsqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread.The object was created in thread id 140114398058240 and this is thread id 140114281891584\r\nException closing connection <sqlite3.Connection object at 0x7f6ed4b368f0>\r\nTraceback (most recent call last):\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/result.py\", line 1159, in fetchmany\r\n    l = self.process_rows(self._fetchmany_impl(size))\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/result.py\", line 1076, in _fetchmany_impl\r\n    return self.cursor.fetchmany(size)\r\nsqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread.The object was created in thread id 140114398058240 and this is thread id 140114281891584\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 704, in _rollback_impl\r\n    self.engine.dialect.do_rollback(self.connection)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/default.py\", line 457, in do_rollback\r\n    dbapi_connection.rollback()\r\nsqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread.The object was created in thread id 140114398058240 and this is thread id 140114281891584\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1406, in _handle_dbapi_exception\r\n    self._autorollback()\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/util/langhelpers.py\", line 76, in __exit__\r\n    compat.reraise(type_, value, traceback)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/util/compat.py\", line 187, in reraise\r\n    raise value\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1406, in _handle_dbapi_exception\r\n    self._autorollback()\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 827, in _autorollback\r\n    self._root._rollback_impl()\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 706, in _rollback_impl\r\n    self._handle_dbapi_exception(e, None, None, None, None)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1334, in _handle_dbapi_exception\r\n    exc_info\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/util/compat.py\", line 203, in raise_from_cause\r\n    reraise(type(exception), exception, tb=exc_tb, cause=cause)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/util/compat.py\", line 186, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/base.py\", line 704, in _rollback_impl\r\n    self.engine.dialect.do_rollback(self.connection)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/default.py\", line 457, in do_rollback\r\n    dbapi_connection.rollback()\r\nsqlalchemy.exc.ProgrammingError: (sqlite3.ProgrammingError) SQLite objects created in a thread can only be used in that same thread.The object was created in thread id 140114398058240 and this is thread id 140114281891584 (Background on this error at: http://sqlalche.me/e/f405)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/pool.py\", line 703, in _finalize_fairy\r\n    fairy._reset(pool)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/pool.py\", line 873, in _reset\r\n    pool._dialect.do_rollback(self)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/default.py\", line 457, in do_rollback\r\n    dbapi_connection.rollback()\r\nsqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread.The object was created in thread id 140114398058240 and this is thread id 140114281891584\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/pool.py\", line 317, in _close_connection\r\n    self._dialect.do_close(connection)\r\n  File \"/home/leonard/.local/lib64/python3.6/site-packages/sqlalchemy/engine/default.py\", line 463, in do_close\r\n    dbapi_connection.close()\r\nsqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread.The object was created in thread id 140114398058240 and this is thread id 140114281891584\r\nTraceback (most recent call last):\r\n  File \"pandas-mp-sql.py\", line 23, in <module>\r\n    pd.read_sql_query(query, url, chunksize=2)):\r\n  File \"/usr/lib64/python3.6/multiprocessing/pool.py\", line 735, in next\r\n    raise value\r\nsqlalchemy.exc.ProgrammingError: (sqlite3.ProgrammingError) SQLite objects created in a thread can only be used in that same thread.The object was created in thread id 140114398058240 and this is thread id 140114281891584 (Background on this error at: http://sqlalche.me/e/f405)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400703303",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19457#issuecomment-400703303",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19457",
    "id": 400703303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDcwMzMwMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T14:56:57Z",
    "updated_at": "2018-06-27T14:56:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@leezu I get a different error with your example:\r\n\r\n<details>\r\n\r\n```\r\nimport tempfile\r\n\r\nimport numpy as np\r\nimport multiprocessing as mp\r\nimport pandas as pd\r\n\r\n# Find a temporary file to store the database\r\n_, f = tempfile.mkstemp()\r\n\r\n# Put some data in the database\r\nurl = f\"sqlite://{f}\"\r\ndf = pd.DataFrame.from_records(np.random.normal(size=(100, 100)))\r\ndf.to_sql(name=\"test\", con=url)\r\n\r\n\r\n# Retrieve via python mutliprocessing module\r\ndef process_chunk(chunk):\r\n    pass\r\n\r\npool = mp.Pool()\r\nquery = \"SELECT * FROM test\"\r\nfor vals in pool.imap_unordered(process_chunk,\r\n                                pd.read_sql_query(query, url, chunksize=2)):\r\n    pass\r\n\r\n## -- End pasted text --\r\n---------------------------------------------------------------------------\r\nOperationalError                          Traceback (most recent call last)\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/engine/base.py in _wrap_pool_connect(self, fn, connection)\r\n   2146         try:\r\n-> 2147             return fn()\r\n   2148         except dialect.dbapi.Error as e:\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/pool.py in connect(self)\r\n    386         if not self._use_threadlocal:\r\n--> 387             return _ConnectionFairy._checkout(self)\r\n    388\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/pool.py in _checkout(cls, pool, threadconns, fairy)\r\n    765         if not fairy:\r\n--> 766             fairy = _ConnectionRecord.checkout(pool)\r\n    767\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/pool.py in checkout(cls, pool)\r\n    515     def checkout(cls, pool):\r\n--> 516         rec = pool._do_get()\r\n    517         try:\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/pool.py in _do_get(self)\r\n   1228     def _do_get(self):\r\n-> 1229         return self._create_connection()\r\n   1230\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/pool.py in _create_connection(self)\r\n    332\r\n--> 333         return _ConnectionRecord(self)\r\n    334\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/pool.py in __init__(self, pool, connect)\r\n    460         if connect:\r\n--> 461             self.__connect(first_connect_check=True)\r\n    462         self.finalize_callback = deque()\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/pool.py in __connect(self, first_connect_check)\r\n    650             self.starttime = time.time()\r\n--> 651             connection = pool._invoke_creator(self)\r\n    652             pool.logger.debug(\"Created new connection %r\", connection)\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/engine/strategies.py in connect(connection_record)\r\n    104                             return connection\r\n--> 105                 return dialect.connect(*cargs, **cparams)\r\n    106\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/engine/default.py in connect(self, *cargs, **cparams)\r\n    392     def connect(self, *cargs, **cparams):\r\n--> 393         return self.dbapi.connect(*cargs, **cparams)\r\n    394\r\n\r\nOperationalError: unable to open database file\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nOperationalError                          Traceback (most recent call last)\r\n<ipython-input-1-468cdf0d750a> in <module>()\r\n     11 url = f\"sqlite://{f}\"\r\n     12 df = pd.DataFrame.from_records(np.random.normal(size=(100, 100)))\r\n---> 13 df.to_sql(name=\"test\", con=url)\r\n     14\r\n     15\r\n\r\n~/sandbox/pandas/pandas/core/generic.py in to_sql(self, name, con, schema, if_exists, index, index_label, chunksize, dtype)\r\n   2125         sql.to_sql(self, name, con, schema=schema, if_exists=if_exists,\r\n   2126                    index=index, index_label=index_label, chunksize=chunksize,\r\n-> 2127                    dtype=dtype)\r\n   2128\r\n   2129     def to_pickle(self, path, compression='infer',\r\n\r\n~/sandbox/pandas/pandas/io/sql.py in to_sql(frame, name, con, schema, if_exists, index, index_label, chunksize, dtype)\r\n    448     pandas_sql.to_sql(frame, name, if_exists=if_exists, index=index,\r\n    449                       index_label=index_label, schema=schema,\r\n--> 450                       chunksize=chunksize, dtype=dtype)\r\n    451\r\n    452\r\n\r\n~/sandbox/pandas/pandas/io/sql.py in to_sql(self, frame, name, if_exists, index, index_label, schema, chunksize, dtype)\r\n   1124                          if_exists=if_exists, index_label=index_label,\r\n   1125                          schema=schema, dtype=dtype)\r\n-> 1126         table.create()\r\n   1127         table.insert(chunksize)\r\n   1128         if (not name.isdigit() and not name.islower()):\r\n\r\n~/sandbox/pandas/pandas/io/sql.py in create(self)\r\n    559\r\n    560     def create(self):\r\n--> 561         if self.exists():\r\n    562             if self.if_exists == 'fail':\r\n    563                 raise ValueError(\"Table '%s' already exists.\" % self.name)\r\n\r\n~/sandbox/pandas/pandas/io/sql.py in exists(self)\r\n    547\r\n    548     def exists(self):\r\n--> 549         return self.pd_sql.has_table(self.name, self.schema)\r\n    550\r\n    551     def sql_schema(self):\r\n\r\n~/sandbox/pandas/pandas/io/sql.py in has_table(self, name, schema)\r\n   1152             self.connectable.dialect.has_table,\r\n   1153             name,\r\n-> 1154             schema or self.meta.schema,\r\n   1155         )\r\n   1156\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/engine/base.py in run_callable(self, callable_, *args, **kwargs)\r\n   2042\r\n   2043         \"\"\"\r\n-> 2044         with self.contextual_connect() as conn:\r\n   2045             return conn.run_callable(callable_, *args, **kwargs)\r\n   2046\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/engine/base.py in contextual_connect(self, close_with_result, **kwargs)\r\n   2110         return self._connection_cls(\r\n   2111             self,\r\n-> 2112             self._wrap_pool_connect(self.pool.connect, None),\r\n   2113             close_with_result=close_with_result,\r\n   2114             **kwargs)\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/engine/base.py in _wrap_pool_connect(self, fn, connection)\r\n   2149             if connection is None:\r\n   2150                 Connection._handle_dbapi_exception_noconnection(\r\n-> 2151                     e, dialect, self)\r\n   2152             else:\r\n   2153                 util.reraise(*sys.exc_info())\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/engine/base.py in _handle_dbapi_exception_noconnection(cls, e, dialect, engine)\r\n   1463             util.raise_from_cause(\r\n   1464                 sqlalchemy_exception,\r\n-> 1465                 exc_info\r\n   1466             )\r\n   1467         else:\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/util/compat.py in raise_from_cause(exception, exc_info)\r\n    201     exc_type, exc_value, exc_tb = exc_info\r\n    202     cause = exc_value if exc_value is not exception else None\r\n--> 203     reraise(type(exception), exception, tb=exc_tb, cause=cause)\r\n    204\r\n    205 if py3k:\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/util/compat.py in reraise(tp, value, tb, cause)\r\n    184             value.__cause__ = cause\r\n    185         if value.__traceback__ is not tb:\r\n--> 186             raise value.with_traceback(tb)\r\n    187         raise value\r\n    188\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/engine/base.py in _wrap_pool_connect(self, fn, connection)\r\n   2145         dialect = self.dialect\r\n   2146         try:\r\n-> 2147             return fn()\r\n   2148         except dialect.dbapi.Error as e:\r\n   2149             if connection is None:\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/pool.py in connect(self)\r\n    385         \"\"\"\r\n    386         if not self._use_threadlocal:\r\n--> 387             return _ConnectionFairy._checkout(self)\r\n    388\r\n    389         try:\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/pool.py in _checkout(cls, pool, threadconns, fairy)\r\n    764     def _checkout(cls, pool, threadconns=None, fairy=None):\r\n    765         if not fairy:\r\n--> 766             fairy = _ConnectionRecord.checkout(pool)\r\n    767\r\n    768             fairy._pool = pool\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/pool.py in checkout(cls, pool)\r\n    514     @classmethod\r\n    515     def checkout(cls, pool):\r\n--> 516         rec = pool._do_get()\r\n    517         try:\r\n    518             dbapi_connection = rec.get_connection()\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/pool.py in _do_get(self)\r\n   1227\r\n   1228     def _do_get(self):\r\n-> 1229         return self._create_connection()\r\n   1230\r\n   1231     def recreate(self):\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/pool.py in _create_connection(self)\r\n    331         \"\"\"Called by subclasses to create a new ConnectionRecord.\"\"\"\r\n    332\r\n--> 333         return _ConnectionRecord(self)\r\n    334\r\n    335     def _invalidate(self, connection, exception=None):\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/pool.py in __init__(self, pool, connect)\r\n    459         self.__pool = pool\r\n    460         if connect:\r\n--> 461             self.__connect(first_connect_check=True)\r\n    462         self.finalize_callback = deque()\r\n    463\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/pool.py in __connect(self, first_connect_check)\r\n    649         try:\r\n    650             self.starttime = time.time()\r\n--> 651             connection = pool._invoke_creator(self)\r\n    652             pool.logger.debug(\"Created new connection %r\", connection)\r\n    653             self.connection = connection\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/engine/strategies.py in connect(connection_record)\r\n    103                         if connection is not None:\r\n    104                             return connection\r\n--> 105                 return dialect.connect(*cargs, **cparams)\r\n    106\r\n    107             creator = pop_kwarg('creator', connect)\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/sqlalchemy/engine/default.py in connect(self, *cargs, **cparams)\r\n    391\r\n    392     def connect(self, *cargs, **cparams):\r\n--> 393         return self.dbapi.connect(*cargs, **cparams)\r\n    394\r\n    395     def create_connect_args(self, url):\r\n\r\nOperationalError: (sqlite3.OperationalError) unable to open database file\r\n```\r\n\r\n</details>\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400733434",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19457#issuecomment-400733434",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19457",
    "id": 400733434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDczMzQzNA==",
    "user": {
      "login": "leezu",
      "id": 946903,
      "node_id": "MDQ6VXNlcjk0NjkwMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leezu",
      "html_url": "https://github.com/leezu",
      "followers_url": "https://api.github.com/users/leezu/followers",
      "following_url": "https://api.github.com/users/leezu/following{/other_user}",
      "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leezu/subscriptions",
      "organizations_url": "https://api.github.com/users/leezu/orgs",
      "repos_url": "https://api.github.com/users/leezu/repos",
      "events_url": "https://api.github.com/users/leezu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leezu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T16:08:11Z",
    "updated_at": "2018-06-27T16:08:11Z",
    "author_association": "NONE",
    "body": "@TomAugspurger I just reran the example with Python 3.6.5 on Linux and could still reproduce the `SQLite objects created in a thread can only be used in that same thread.The object was created in thread id 140612946281792 and this is thread id 140612829673216 ` error. Are you running on a different system?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400773609",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19457#issuecomment-400773609",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19457",
    "id": 400773609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDc3MzYwOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T17:53:49Z",
    "updated_at": "2018-06-27T17:53:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yep, MacOS. Must be platform dependent.\n\nOn Wed, Jun 27, 2018 at 11:08 AM, Leonard Lausen <notifications@github.com>\nwrote:\n\n> @TomAugspurger <https://github.com/TomAugspurger> I just reran the\n> example with Python 3.6.5 on Linux and could still reproduce the SQLite\n> objects created in a thread can only be used in that same thread.The object\n> was created in thread id 140612946281792 and this is thread id\n> 140612829673216 error. Are you running on a different system?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/19457#issuecomment-400733434>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHImDSdYSU0HQ9lFHDh9f7MqYgpzdmks5uA63ygaJpZM4Rx9bQ>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400797405",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19457#issuecomment-400797405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19457",
    "id": 400797405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDc5NzQwNQ==",
    "user": {
      "login": "leezu",
      "id": 946903,
      "node_id": "MDQ6VXNlcjk0NjkwMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leezu",
      "html_url": "https://github.com/leezu",
      "followers_url": "https://api.github.com/users/leezu/followers",
      "following_url": "https://api.github.com/users/leezu/following{/other_user}",
      "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leezu/subscriptions",
      "organizations_url": "https://api.github.com/users/leezu/orgs",
      "repos_url": "https://api.github.com/users/leezu/repos",
      "events_url": "https://api.github.com/users/leezu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leezu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T19:13:29Z",
    "updated_at": "2018-06-27T19:13:53Z",
    "author_association": "NONE",
    "body": "Adding an extra `/` to the `url` in line 11 allows me to reproduce the issue on OS X. Ie. `url = f\"sqlite:///{f}\"` instead of `url = f\"sqlite://{f}\"`\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400798417",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19457#issuecomment-400798417",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19457",
    "id": 400798417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDc5ODQxNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T19:17:32Z",
    "updated_at": "2018-06-27T19:17:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice catch, confirmed that it raises for me with the same error you get.\n\nOn Wed, Jun 27, 2018 at 2:13 PM, Leonard Lausen <notifications@github.com>\nwrote:\n\n> Adding an extra / to the url in line 11 should allow to reproduce the\n> issue on OS X. Ie. url = f\"sqlite:///{f}\" instead of url = f\"sqlite://{f}\"\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/19457#issuecomment-400797405>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIrbMy9JDIkByUwPdDIT_BCdXd7UBks5uA9legaJpZM4Rx9bQ>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405332195",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19457#issuecomment-405332195",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19457",
    "id": 405332195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTMzMjE5NQ==",
    "user": {
      "login": "nimasasa",
      "id": 12972439,
      "node_id": "MDQ6VXNlcjEyOTcyNDM5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12972439?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nimasasa",
      "html_url": "https://github.com/nimasasa",
      "followers_url": "https://api.github.com/users/nimasasa/followers",
      "following_url": "https://api.github.com/users/nimasasa/following{/other_user}",
      "gists_url": "https://api.github.com/users/nimasasa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nimasasa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nimasasa/subscriptions",
      "organizations_url": "https://api.github.com/users/nimasasa/orgs",
      "repos_url": "https://api.github.com/users/nimasasa/repos",
      "events_url": "https://api.github.com/users/nimasasa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nimasasa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T18:11:53Z",
    "updated_at": "2018-07-16T18:12:15Z",
    "author_association": "NONE",
    "body": "I am trying to pass the connection and use the wrapper, but with imap_unordered my kernel dies immediately. With pool.map it does not read in parallel. Here is how i am doing it:\r\n\r\nimport multiprocessing as mp\r\nimport attr\r\n@attr.s(auto_attribs=True)\r\nclass PDSQLQueryWrapper(object):\r\n    \"\"\"Wrap the iterator.\r\n\r\n    To create the db engine in the thread that calls the iterator first.\r\n\r\n    \"\"\"\r\n\r\n    _read_sql_query_iterator = None\r\n\r\n    query = $my_query$\r\n    connection = $my_conn$\r\n    chunksize= CHUNKSIZE\r\n   \r\n    def next(self):\r\n        if self._read_sql_query_iterator is None:\r\n            self._read_sql_query_iterator = pd.read_sql_query(\r\n                self.query, self.connection, chunksize=self.chunksize)\r\n\r\n        return next(self._read_sql_query_iterator)\r\n\r\n##########################\r\nread_sql = PDSQLQueryWrapper()\r\ndfs=[]\r\ndef process_chunk(chunk):\r\n    return chunk\r\n\r\npool = mp.Pool()\r\nfor vals in pool.map(process_chunk,read_sql):\r\n    dfs.append(vals)\r\n\r\nIs there anyway I can fix this?"
  }
]
