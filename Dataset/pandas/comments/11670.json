[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158538882",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11670#issuecomment-158538882",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11670",
    "id": 158538882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODUzODg4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T22:05:28Z",
    "updated_at": "2015-11-20T22:05:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "we would have to jump thru lots of hoops for this to work I think. In general `object` dtype mean is really for strings. putting `Decimal` which is 'float-like' is just asking for trouble. So what is happening is that when the mean is tried on `B-C` block it errors, so that is excluded.\n\nI'll mark it, but if you really want it fixed, then pls submit a pull-request.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158542859",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11670#issuecomment-158542859",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11670",
    "id": 158542859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODU0Mjg1OQ==",
    "user": {
      "login": "YAmikep",
      "id": 1226080,
      "node_id": "MDQ6VXNlcjEyMjYwODA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1226080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YAmikep",
      "html_url": "https://github.com/YAmikep",
      "followers_url": "https://api.github.com/users/YAmikep/followers",
      "following_url": "https://api.github.com/users/YAmikep/following{/other_user}",
      "gists_url": "https://api.github.com/users/YAmikep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YAmikep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YAmikep/subscriptions",
      "organizations_url": "https://api.github.com/users/YAmikep/orgs",
      "repos_url": "https://api.github.com/users/YAmikep/repos",
      "events_url": "https://api.github.com/users/YAmikep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YAmikep/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T22:23:21Z",
    "updated_at": "2015-11-20T22:23:21Z",
    "author_association": "NONE",
    "body": "I receive the data with Decimal objects. That's not my choice.\nSo should Decimal not be used with pandas and I should manually do a conversion for each column that has Decimal objects first?\n`df['C'] = df['C'].astype(float)`\n\nI think it gets confusing when `df[['A','C']].mean()` works and `df[['A','B','C']].mean()` does not.\nIf Decimal objects are not supported, I'd expect them not to work no matter what I do and the behavior would especially not change based on the values of another column.\n\nWhy isn't the `mean` function applied per column? Why is it applied on the `B-C` block and not on each column separately?\n\nThanks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158544336",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11670#issuecomment-158544336",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11670",
    "id": 158544336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODU0NDMzNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T22:31:34Z",
    "updated_at": "2015-11-20T22:37:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Columns are internally consolidated into blocks, one per dtype (usually). The object dtypes are all lumped together into one block here. When the `.mean()` for that block fails all the columns in it ('B' & 'C') are treated as nuisance columns and excluded from the result.\n\nYou are better of sticking to numpy dtypes + the ones pandas has added on (datetimes, categoricals) _if your application allows it_. You might not want to cast to floats without checking whether that will mess up the people your giving the data back to :)\n\nedit: as for why it's done at the block level vs once per column, I think the biggest reason is performance. We do have an issue about not consolidating blocks automatically, but that's not really meant to be exposed to a user and used in this kind of scenario (I think).\n\nedit2: and if you really need to support this, you could try\n\n``` python\ndef func(x):\n    try:\n        return np.nanmean(x)\n    except:  # catch the actual error\n         pass\n\ndf.apply(func)\n```\n\nbut this will be slower\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158546624",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11670#issuecomment-158546624",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11670",
    "id": 158546624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODU0NjYyNA==",
    "user": {
      "login": "YAmikep",
      "id": 1226080,
      "node_id": "MDQ6VXNlcjEyMjYwODA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1226080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YAmikep",
      "html_url": "https://github.com/YAmikep",
      "followers_url": "https://api.github.com/users/YAmikep/followers",
      "following_url": "https://api.github.com/users/YAmikep/following{/other_user}",
      "gists_url": "https://api.github.com/users/YAmikep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YAmikep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YAmikep/subscriptions",
      "organizations_url": "https://api.github.com/users/YAmikep/orgs",
      "repos_url": "https://api.github.com/users/YAmikep/repos",
      "events_url": "https://api.github.com/users/YAmikep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YAmikep/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T22:43:27Z",
    "updated_at": "2015-11-21T03:18:37Z",
    "author_association": "NONE",
    "body": "Thanks for the explanation for what happens under the hood.\nI guess it will require some development to make `mean` work per column instead of per dtype block.\n\nSo are you suggesting to cast to a numpy float type for now?\n`df['C'] = df['C'].astype(numpy.float64)`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158550225",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11670#issuecomment-158550225",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11670",
    "id": 158550225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODU1MDIyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T22:53:53Z",
    "updated_at": "2015-11-20T22:53:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes, I would _never_ use `Decimal`, it is completely non-performant. I understand there are people who need a fixed decimal type, but to be honest, that is just for display purposes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447651557",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11670#issuecomment-447651557",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11670",
    "id": 447651557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzY1MTU1Nw==",
    "user": {
      "login": "kokes",
      "id": 8451755,
      "node_id": "MDQ6VXNlcjg0NTE3NTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8451755?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kokes",
      "html_url": "https://github.com/kokes",
      "followers_url": "https://api.github.com/users/kokes/followers",
      "following_url": "https://api.github.com/users/kokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/kokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kokes/subscriptions",
      "organizations_url": "https://api.github.com/users/kokes/orgs",
      "repos_url": "https://api.github.com/users/kokes/repos",
      "events_url": "https://api.github.com/users/kokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-16T15:26:08Z",
    "updated_at": "2018-12-16T15:26:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Trying to reproduce OP's behaviour in 0.23.4 and failing to do so\r\n\r\n```\r\nIn [12]: df.dtypes                                                                                                               \r\nOut[12]: \r\nA     int64\r\nB    object\r\nC    object\r\ndtype: object\r\n\r\nIn [13]: df.mean()                                                                                                               \r\nOut[13]: \r\nA      2.7\r\nC    681.6\r\ndtype: float64\r\n```\r\n\r\nHas this block treatment of object columns changed? Because it now works as expected (well, almost, the mean itself is a float, but I guess that's fine).\r\n\r\n(cc @jreback @TomAugspurger)"
  }
]
