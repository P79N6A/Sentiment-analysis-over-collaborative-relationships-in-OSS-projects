[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/470497693",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25413#issuecomment-470497693",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25413",
    "id": 470497693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDQ5NzY5Mw==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T11:54:03Z",
    "updated_at": "2019-03-07T11:54:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "> But, we should not be raising AssertionErrors to users.\r\n\r\nI agree. This is not an isolated case. `raise AssertionError(...` appears 238 times in the codebase (although many appear in .pyx and .c files). We should probably have an issue to cover this and then split into several good first issues and ensure that each instance has test coverage including checking the error message."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/470498445",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25413#issuecomment-470498445",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25413",
    "id": 470498445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDQ5ODQ0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T11:56:36Z",
    "updated_at": "2019-03-07T11:56:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "assertions are ok if they are purely internal - these are a good thing\r\n\r\nthe issue is raising an AssertionError directly  to users "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/470537860",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25413#issuecomment-470537860",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25413",
    "id": 470537860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDUzNzg2MA==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T14:05:45Z",
    "updated_at": "2019-03-07T14:05:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "sorry that i'm hijacking this issue..\r\n\r\nwe also have cases where the assert statement is used. I assume this is to indicate that it is intended to be internal. xref #24539\r\n\r\n```python\r\nassert isinstance(result, np.ndarray), type(result)\r\n```\r\nso should we have consistency, where for instance, if this was considered internal (probably shouldn't)..\r\n```python\r\n            if not isinstance(self.classes, (list, tuple)):\r\n                raise AssertionError('classes must be list or tuple, not {typ}'\r\n                                     .format(typ=type(self.classes)))\r\n```\r\nshould be written as\r\n```python\r\nassert isinstance(self.classes, (list, tuple)), 'classes must be list or tuple, not {typ}'\r\n                                     .format(typ=type(self.classes)))\r\n```\r\nto make it clear that it is purely internal.\r\n\r\nmy only concern, not from experience but from the docs.. https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement is that this may not be robust because of the `__debug__` built-in constant."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/470604423",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25413#issuecomment-470604423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25413",
    "id": 470604423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDYwNDQyMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T16:51:55Z",
    "updated_at": "2019-03-07T16:51:55Z",
    "author_association": "MEMBER",
    "body": "What do you mean with \"not robust\"? \r\nSince those are internal, it is fine that they are skipped in case somebody runs an optimized python that skips asserts I think?"
  }
]
