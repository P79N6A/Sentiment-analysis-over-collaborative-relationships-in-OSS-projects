[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316614296",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17032#issuecomment-316614296",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17032",
    "id": 316614296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjYxNDI5Ng==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T06:56:43Z",
    "updated_at": "2017-07-20T06:57:02Z",
    "author_association": "MEMBER",
    "body": "@aplavin : We've had this issue before with `crosstab` (xref #16367), and in that discussion, we seemed to be going with keeping all categories in the count.  Thus, I would consider the output from your example expected in light of that discussion.\r\n\r\nI'm a little wary about adding a parameter to `.size()` because it doesn't make much sense outside of the context of categorical.  We want the interface to be as uniform as possible.\r\n\r\nThat being said, this method is a little different from `crosstab`, so perhaps workarounds (I can think of some but none feel appealing) might be feasible.\r\n\r\n@jreback @jorisvandenbossche @TomAugspurger "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316614767",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17032#issuecomment-316614767",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17032",
    "id": 316614767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjYxNDc2Nw==",
    "user": {
      "login": "aplavin",
      "id": 687995,
      "node_id": "MDQ6VXNlcjY4Nzk5NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/687995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aplavin",
      "html_url": "https://github.com/aplavin",
      "followers_url": "https://api.github.com/users/aplavin/followers",
      "following_url": "https://api.github.com/users/aplavin/following{/other_user}",
      "gists_url": "https://api.github.com/users/aplavin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aplavin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aplavin/subscriptions",
      "organizations_url": "https://api.github.com/users/aplavin/orgs",
      "repos_url": "https://api.github.com/users/aplavin/repos",
      "events_url": "https://api.github.com/users/aplavin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aplavin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T06:59:27Z",
    "updated_at": "2017-07-20T07:03:40Z",
    "author_association": "NONE",
    "body": "@gfyoung I'm not talking about adding a parameter to `.size()`, but to `.groupby()` so that it apply to all further operations. `size` was just an example.\r\n\r\nAs of now the only way I see to have nonempty groups only (as in non-categorical groupby) is something like `df.groupby(...).apply(f).pipe(lambda d: d[~d.isnull().any(1)])`, and this still would call `f` for all the empty groups."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316616160",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17032#issuecomment-316616160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17032",
    "id": 316616160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjYxNjE2MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T07:06:25Z",
    "updated_at": "2017-07-20T07:06:25Z",
    "author_association": "MEMBER",
    "body": "> I'm not talking about adding a parameter to .size(), but to .groupby()\r\n\r\nI see, though outside of categorical, what would this parameter mean?  I would still be wary of adding another parameter and functionality just because of how special-cased it is in the context of `groupby`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316621517",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17032#issuecomment-316621517",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17032",
    "id": 316621517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjYyMTUxNw==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T07:32:24Z",
    "updated_at": "2017-07-20T07:32:24Z",
    "author_association": "MEMBER",
    "body": "xref https://github.com/pandas-dev/pandas/issues/8559#issuecomment-59442278\r\n\r\nRather than changing some general purpose method(s) such as ``size()`` and ``groupby()``, maybe we could decide to solve this with a handy ``drop_empty()`` method for categoricals?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316623892",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17032#issuecomment-316623892",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17032",
    "id": 316623892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjYyMzg5Mg==",
    "user": {
      "login": "aplavin",
      "id": 687995,
      "node_id": "MDQ6VXNlcjY4Nzk5NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/687995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aplavin",
      "html_url": "https://github.com/aplavin",
      "followers_url": "https://api.github.com/users/aplavin/followers",
      "following_url": "https://api.github.com/users/aplavin/following{/other_user}",
      "gists_url": "https://api.github.com/users/aplavin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aplavin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aplavin/subscriptions",
      "organizations_url": "https://api.github.com/users/aplavin/orgs",
      "repos_url": "https://api.github.com/users/aplavin/repos",
      "events_url": "https://api.github.com/users/aplavin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aplavin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T07:43:08Z",
    "updated_at": "2017-07-20T07:44:45Z",
    "author_association": "NONE",
    "body": "@toobaz if I understand you correctly, then it probably won't work in general. Suppose there is column `a` with values `1` and `2`, and column `b` with values `3` and `4`, but the only occuring combinations are `1,3` and `2,4`. Then if we group by both of them (as categorical) I would expect to have two groups (`1,3` and `2,4`), and not all four. Actually it was very surprising to see that simply changing data type for performance reasons (in my case) significantly changed the behavior."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316630171",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17032#issuecomment-316630171",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17032",
    "id": 316630171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjYzMDE3MQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T08:11:16Z",
    "updated_at": "2017-07-20T08:11:16Z",
    "author_association": "MEMBER",
    "body": "I think in light of @toobaz 's reference, I think it brings up a larger question of how we want to handle counting of `Categorical` groups that have no presence?\r\n\r\nIt might be worthwhile to create one umbrella issue that addresses this API standpoint and close the duplicates, as this issue seems to have crept up on several occasions.\r\n\r\n@jreback : what do you think?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316631851",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17032#issuecomment-316631851",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17032",
    "id": 316631851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjYzMTg1MQ==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T08:18:32Z",
    "updated_at": "2017-07-20T08:18:32Z",
    "author_association": "MEMBER",
    "body": "> @toobaz if I understand you correctly, then it probably won't work in general\r\n\r\nYes, you understood me correctly... and yes, you're right..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316688637",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17032#issuecomment-316688637",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17032",
    "id": 316688637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjY4ODYzNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T12:32:17Z",
    "updated_at": "2017-07-20T12:32:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "see much discussion https://github.com/pandas-dev/pandas/issues/8559\r\n\r\nclosing as a duplicate."
  }
]
