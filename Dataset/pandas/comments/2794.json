[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13060645",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13060645",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13060645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYwNjQ1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T02:51:51Z",
    "updated_at": "2013-02-04T02:51:51Z",
    "author_association": "MEMBER",
    "body": "I get dtype conversion on DataFrame construction with dicts; what version of pandas are you using?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13060841",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13060841",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13060841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYwODQx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T03:05:22Z",
    "updated_at": "2013-02-04T03:05:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is a development version (either 0.10.2 or 0.11-dev). The above code won't work on 0.10.1 (well it 'works', but it converts dtypes). Dtypes are preserved in some limited cases in 0.10.1. This is what #2708 is all about.\n\nI am asking this: \n\nif you input an integer dtype and you perform an operation that that results in an integerlike number, but\nwe since we have to round trip it thru floats (mainly because it can have `nan` in the array), BUT that the result on a particular column in a DataFrame CAN be converted to integer - SHOULD we convert it back to the original dtype?\n\nThis is not currently the case in 0.10.1 or lower\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13060999",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13060999",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13060999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYwOTk5",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T03:16:30Z",
    "updated_at": "2013-02-04T03:16:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback -- i'm a bit confused, because i've checked out your dtypes branch and see that you have implemented a parameter try_cast to DataFrame.where that seems to do what you're talking about. Are you just asking whether it should be turned on by default from getitem/setitem?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13061048",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13061048",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13061048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYxMDQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T03:19:49Z",
    "updated_at": "2013-02-04T03:19:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "thats exactly what I am asking. Its actually not fully implemented, because it can happen that an IntBlock needs to split to multiple dtypes (not hard, just didn't do it yet).\n\nI turned it off because I had a few failing tests - basically the 'user' is expected always to convert to float64. It is important to try to make the dtype back to int, where possible?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13061429",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13061429",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13061429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYxNDI5",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T03:48:38Z",
    "updated_at": "2013-02-04T03:53:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "i'm too new to this to be able to be an authority of how things should be, so don't take my opinion too seriously...but i'm personally inclined to think that try_cast should be off by default, because having it on means that the dtypes of the result depends on what values happen to match a boolean condition, which is a bit odd: it makes more sense to me that the type of the result of an operation should only depend on the types of its inputs, not the types and their particular values within those types.\n\ni know this rule doesn't hold true for a lot of pandas behavior right now though, so maybe my concern isn't really apropos. (it probably also betrays my biases coming from statically typed languages)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13061627",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13061627",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13061627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYxNjI3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T04:02:11Z",
    "updated_at": "2013-02-04T04:02:11Z",
    "author_association": "MEMBER",
    "body": "Personally, I've found that this doesn't matter for me, but it seems like it makes sense to keep the dtype from boolean indexing if possible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13062201",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13062201",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13062201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYyMjAx",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T04:44:46Z",
    "updated_at": "2013-02-04T04:58:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback: By the way, you mentioned the case of an `IntBlock` needing to be split into separate blocks based on casting post-pass. How are you thinking about doing this? If you implement it such that each block separately decides how to split itself into multiple blocks in the casting post-pass and does so independently, the I could imagine you might end up doing three copying passes on the data: once for the `where` op, another to split the resulting multi-column blocks into separate smaller blocks, and a final one to consolidate (in case you end up splitting an int into an int and a float, where there was already another float column)\n\nInstead of that, you could implement `where` at the `BlockManager` level and having it do column-by-column upcasting (as necessary), masking, and consolidation together with the minimal amount of copying. To precompute the new blocks you need, you can implement a function on each block which returns the dtype necessary (or maybe the necessary `Block` subclass, not entirely sure the best semantics) to hold its existing type and the other value. Then, you can allocate one uninitialized array for each new type necessary (consolidating ahead of time) and `putmask` into each one from self/other appropriately (optimizing for the case where it's an inplace operation and the result block is the same size and location as the original block, in which case you can reuse the existing array).\n\nThat might seem like overkill, but reducing the amount of copying would make a difference in the case of a large amount of data, so I'm willing to work on that if you think it's a good idea, unless you were planning on doing something similar yourself already.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13062599",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13062599",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13062599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYyNTk5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T05:09:44Z",
    "updated_at": "2013-02-04T05:13:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't believe there are any copies in putmask, except with a int to float conversion which does an astype (which copies). you can determine before u do this whether it will create multiple int and /or float blocks (this is in the block level putmask btw), so I think will still just be 1 copy. where has at least 1, and an int to float conversion could add a copy. consolidation could add a copy as well (it's a vstack which I think copies)\n\nin the latest commit what I did was let these routines possibly return more than 1 block, so code is easy.\nsince the amount of copying is somewhat dependent on the other blocks and/or conversions I am not sure how much extra effort we should do here.\n\nbut u r right about doing things at the block manager level; u do have more information and so can create blocks that are already consilidated - I set it up with all of the key methods doing an 'apply' on their blocks and producing new ones. definitely could be optimized\n\ncertainly open to having u take a crack at it\n\nthis pr is pretty much done \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13062752",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13062752",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13062752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYyNzUy",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T05:21:36Z",
    "updated_at": "2013-02-04T05:21:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "yup, no copies in `putmask`, right. but definitely one in `where`, definitely one in `astype` when casting between different types, and most likely in `vstack` (it might be optimized to avoid it in the case that two arrays happen to already be aligned in memory appropriately, but i doubt it would be the case here)\n\nanyway, ok, i'll work on it and based off your branch, unless you're planning on doing a big commit still.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13062863",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13062863",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13062863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYyODYz",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T05:27:57Z",
    "updated_at": "2013-02-04T05:27:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "(actually, just tested it, apparently `vstack` copies even if given inputs that were split from the same original array using `vsplit`, so definitely a copy here)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13062883",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13062883",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13062883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYyODgz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T05:28:39Z",
    "updated_at": "2013-02-04T05:28:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "great!\n\nbtw in theory u can pass copy = False to astype and its creates a view with the new dtype (of course if u then putmask it will copy the underlying data)\n\nand the approach of trying to create an already consolidated block should prob work well\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13062929",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13062929",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13062929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYyOTI5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T05:31:48Z",
    "updated_at": "2013-02-04T05:31:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "u could start by creating a vbench (there might be some already for blocking, not sure)\nand then see if u can improve it\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13062964",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13062964",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13062964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYyOTY0",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T05:34:51Z",
    "updated_at": "2013-02-04T05:34:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep, will do\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13095811",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13095811",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13095811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDk1ODEx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T19:56:34Z",
    "updated_at": "2013-02-04T19:56:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@stephenwlin\n\nwhile you are at it, I am pretty sure this is related (and might now be fixed because of the putmask changes....)\n\nhttps://github.com/pydata/pandas/issues/2746\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13099772",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13099772",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13099772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDk5Nzcy",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T21:13:42Z",
    "updated_at": "2013-02-04T21:13:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "will do\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13277923",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13277923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13277923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjc3OTIz",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-08T05:46:45Z",
    "updated_at": "2013-02-08T05:46:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback, I saw what you did with `where`, `putmask`, etc. (with the `apply`). Very nice and clean!\n\nI think it might be overkill to try to make it tricky and do everything in one step, unless it can be done generically somehow: i'll think about it....in the meantime I optimized consolidation to remove an intermediate copy step (#2819) so that'll help with all these operations\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13278440",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13278440",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13278440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjc4NDQw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-08T06:15:36Z",
    "updated_at": "2013-02-08T06:15:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep\n\nI saw your PR - looks pretty awesome\n\nI put a note on the PR - I think I did an update or 2 today - looks like u might be using a slightly older dtypes branch;\nI added int16/int8 support, but should be pretty trivial for u to merge and update\n\nand this should fix the up casting issue!\n\nas a side note - I am pretty sure that say u need to upcast an int, so u convert to float (well np.float_)\nI think that if its a smaller type float then u can upcast to a smaller float\neg int16 -> float32 \n\nany idea?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13278781",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13278781",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13278781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjc4Nzgx",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-08T06:33:46Z",
    "updated_at": "2013-02-08T06:45:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah, there's a whole chain of logic in `common._maybe_promote` which takes the existing `dtype`, a `fill_value`, and returns the required output `dtype`; i can make it even more granular if necessary...\n\nright now there's no special handling of different sizes, except for integers: if an integer is given as `fill_value`, then it will check to see if that `fill_value` overflows the existing dtype; if it does, then it goes with the `fill_value`'s dtype--however, it's possible that it might upcast from, say, `int8` to `int64`, even if the actual `fill_value` can fit in, say, `int16` (since it checks only the dtype, not the actual value at this point)\n\ni could probably do similar logic for the other types instead of defaulting to `float64`/`complex128` always, but it might be overkill.\n\nanyway, i will rebase/resolve to your latest dtypes\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13278993",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13278993",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13278993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjc4OTkz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-08T06:47:57Z",
    "updated_at": "2013-02-08T06:47:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "_maybe_promote is awesome - was dreading if in needs to actually write it!\nthanks!\n\nFYI - u have a print statement if up casting int to bigger int\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13279373",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13279373",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13279373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjc5Mzcz",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-08T07:07:51Z",
    "updated_at": "2013-02-08T07:07:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "oops, thanks, took out the print statement. also improved the test coverage a bit:\n\n``` python\n        _test_dtype(np.int8, np.int16(127), np.int8)\n        _test_dtype(np.int8, np.int16(128), np.int16)\n```\n\narguments are (input dtype, fill_value, output dtype)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13331906",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13331906",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13331906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzMxOTA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-09T14:45:13Z",
    "updated_at": "2013-02-09T14:45:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I finally realized the criteria for when things get upcasted.\nsince `df[df > 0] == df.where(df>0,np.nan)`, there is a a `float` fill value\nsee below - thus the upcast CAN be avoided by specifying a fill value\n\nThe question is, say NO values are changed in the boolean selection, then the fill value dtype\ndoesn't matter, and the output dtype should be the same as the input; but a-priori we don't know this.\n\nis it worth trying to fix this case?\nits a little bit non-trivial, because it could be that an item in say an integer block can be preserverd, but not the whole block, so I have to have an item-by-item in where.....not a big deal....but is it worth it?\n\n```\nIn [14]: df.where(df>=0).dtypes\nOut[14]: \nfloat32    float32\nfloat64    float64\nint32      float64\nint64      float64\nDtype: object\n```\n\nThe _normal_ cases\n\n```\nIn [4]: df = pd.DataFrame(dict([ (c,pd.Series([1]*3,dtype=c)) for c in ['int64','int32','float32','float64'] ]))\n\nIn [5]: df\nOut[5]: \n   float32  float64  int32  int64\n0        1        1      1      1\n1        1        1      1      1\n2        1        1      1      1\n\nIn [6]: df.dtypes\nOut[6]: \nfloat32    float32\nfloat64    float64\nint32        int32\nint64        int64\nDtype: object\n\nIn [7]: df.ix[1,:] = 0\n\nIn [8]: df\nOut[8]: \n   float32  float64  int32  int64\n0        1        1      1      1\n1        0        0      0      0\n2        1        1      1      1\n\nIn [9]: df.where(df>0,0)\nOut[9]: \n   float32  float64  int32  int64\n0        1        1      1      1\n1        0        0      0      0\n2        1        1      1      1\n\n# this preserves dtypes as we specified a 'fill' value that is the correct type\nIn [10]: df.where(df>0,0).dtypes\nOut[10]: \nfloat32    float32\nfloat64    float64\nint32        int32\nint64        int64\nDtype: object\n\n# we implicity specified a fill value here that is float, so automatically upcast\nIn [11]: df.where(df>0)\nOut[11]: \n   float32  float64  int32  int64\n0        1        1      1      1\n1      NaN      NaN    NaN    NaN\n2        1        1      1      1\n\nIn [12]: df.where(df>0).dtypes\nOut[12]: \nfloat32    float32\nfloat64    float64\nint32      float64\nint64      float64\nDtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13586662",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2794#issuecomment-13586662",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2794",
    "id": 13586662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTg2NjYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-15T00:14:47Z",
    "updated_at": "2013-02-15T00:14:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "closed via #2871 \n"
  }
]
