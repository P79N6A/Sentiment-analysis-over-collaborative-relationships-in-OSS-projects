[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/28229244",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5493#issuecomment-28229244",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5493",
    "id": 28229244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjI5MjQ0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-11T19:13:50Z",
    "updated_at": "2013-11-11T19:13:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "In the bottom example you have a single group, you can pass `squeeze=True` to have this returned as a Series (rather than a frame) if you want. This is not the default (for some long and complex reasons due to how the inference of the return objects is done). The normal case would be to return a frame in both cases, but your function that you are passing, 'tricks' the return type a bit.\n\n```\nIn [66]: df = pd.DataFrame({'key1': ['a','a','n','a', 'a'],\n   ....: 'data1': np.random.randn(5),\n   ....: 'data2': np.random.randn(5)})\n\nIn [67]: df.groupby(df['key1'],squeeze=True).apply(lambda x: x['data2'])\nOut[67]: \n0   -1.235547\n1   -1.652604\n2   -0.335940\n3   -1.006121\n4    0.937439\nName: data2, dtype: float64\n\nIn [68]: df = pd.DataFrame({'key1': ['a','a','a','a', 'a'],\n   ....: 'data1': np.random.randn(5),\n   ....: 'data2': np.random.randn(5)})\n\nIn [69]: df.groupby(df['key1'],squeeze=True).apply(lambda x: x['data2'])\nOut[69]: \n0    1.140529\n1    0.599648\n2    1.039083\n3    0.510403\n4    0.427510\nName: a, dtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29950265",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5493#issuecomment-29950265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5493",
    "id": 29950265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTUwMjY1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T23:37:15Z",
    "updated_at": "2013-12-05T23:37:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as not a bug\n"
  }
]
