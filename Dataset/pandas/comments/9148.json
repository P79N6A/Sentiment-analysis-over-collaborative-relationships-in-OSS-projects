[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68072521",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-68072521",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 68072521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDcyNTIx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-24T20:15:51Z",
    "updated_at": "2014-12-24T20:15:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "these are directly supported via `Categorical.ordered`\n\nsee a tutorial here: \n\nhttp://nbviewer.ipython.org/github/jreback/pydata2014-pandas/blob/master/notebooks/Categorical.ipynb\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68104435",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-68104435",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 68104435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTA0NDM1",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-25T14:14:12Z",
    "updated_at": "2014-12-25T14:14:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, nice. Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68144302",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-68144302",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 68144302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTQ0MzAy",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-26T15:07:58Z",
    "updated_at": "2014-12-26T15:07:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "What's the preferred idiom for checking for these new first-class citizen Categoricals? Checking for the `cat` attribute raises an error (i.e., `hasattr(series, 'cat'`), if it's not a Categorical. AFAICT, the old Categorical and the new Categorical type aren't compatible. So I guess that leaves a version check?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68146180",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-68146180",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 68146180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTQ2MTgw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-26T15:59:00Z",
    "updated_at": "2014-12-26T15:59:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "see also more full discussinon in #8814 as this needs a section in the docs\n\n```\nIn [10]: df = DataFrame({'A' : list('abc'),'B':Series(list('def'),dtype='category')})\n\nIn [11]: df\nOut[11]: \n   A  B\n0  a  d\n1  b  e\n2  c  f\n\nIn [12]: df.dtypes\nOut[12]: \nA      object\nB    category\ndtype: object\n\nIn [13]: df.select_dtypes(include=['category'])\nOut[13]: \n   B\n0  d\n1  e\n2  f\n\nIn [18]: pandas.core.common.is_categorical_dtype(df['B'])\nOut[18]: True\n\nIn [19]: pandas.core.common.is_categorical_dtype(df['A'])\nOut[19]: False\n\nIn [20]: df['A'].dtype.name\nOut[20]: 'object'\n\nIn [21]: df['B'].dtype.name\nOut[21]: 'category'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70883071",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70883071",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70883071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODgzMDcx",
    "user": {
      "login": "mwaskom",
      "id": 315810,
      "node_id": "MDQ6VXNlcjMxNTgxMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/315810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwaskom",
      "html_url": "https://github.com/mwaskom",
      "followers_url": "https://api.github.com/users/mwaskom/followers",
      "following_url": "https://api.github.com/users/mwaskom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwaskom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwaskom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwaskom/subscriptions",
      "organizations_url": "https://api.github.com/users/mwaskom/orgs",
      "repos_url": "https://api.github.com/users/mwaskom/repos",
      "events_url": "https://api.github.com/users/mwaskom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwaskom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T17:35:01Z",
    "updated_at": "2015-01-21T17:35:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not sure if this is the right place for this, but the behavior of unordered categorical surprised me a bit:\n\n``` python\nimport string\nimport numpy as np\nimport pandas as pd\n\ncat = pd.Categorical(list(string.uppercase), ordered=False)\nnum = np.random.randn(26)\ndf = pd.DataFrame(dict(cat=cat, num=num))\n\ndf.sort(\"num\").cat.unique()\n```\n\nThis returns\n\n```\narray(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n       'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'], dtype=object)\n```\n\nI was expecting to get the order of letters that now appears in the DataFrame (which would happen if `cat` just had a regular `object` dtype), rather than the original alphabetical order.\n\nThis is relevant because I want to leverage Categorical objects in seaborn to get plot elements ordered in good ways. I was hoping that `Categorical.unique()` would give me the category order, if it exists, and the item order in the DataFrame if not.\n\nIs this the correct behavior? (Probably). Is there a way to get what I want out of the object?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70892052",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70892052",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70892052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODkyMDUy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:23:22Z",
    "updated_at": "2015-01-21T18:23:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [24]: np.array(df.sort('num')['cat'].values)\nOut[24]:\narray(['K', 'J', 'X', 'P', 'Q', 'U', 'O', 'L', 'H', 'N', 'T', 'R', 'A',\n       'S', 'E', 'W', 'M', 'G', 'B', 'V', 'Z', 'Y', 'I', 'C', 'F', 'D'], dtype=object)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70892405",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70892405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70892405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODkyNDA1",
    "user": {
      "login": "mwaskom",
      "id": 315810,
      "node_id": "MDQ6VXNlcjMxNTgxMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/315810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwaskom",
      "html_url": "https://github.com/mwaskom",
      "followers_url": "https://api.github.com/users/mwaskom/followers",
      "following_url": "https://api.github.com/users/mwaskom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwaskom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwaskom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwaskom/subscriptions",
      "organizations_url": "https://api.github.com/users/mwaskom/orgs",
      "repos_url": "https://api.github.com/users/mwaskom/repos",
      "events_url": "https://api.github.com/users/mwaskom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwaskom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:25:17Z",
    "updated_at": "2015-01-21T18:25:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "That gives me the array of values, but I want the array of _unique_ values, and if I use `np.unique()` it will sort\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70892641",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70892641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70892641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODkyNjQx",
    "user": {
      "login": "mwaskom",
      "id": 315810,
      "node_id": "MDQ6VXNlcjMxNTgxMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/315810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwaskom",
      "html_url": "https://github.com/mwaskom",
      "followers_url": "https://api.github.com/users/mwaskom/followers",
      "following_url": "https://api.github.com/users/mwaskom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwaskom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwaskom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwaskom/subscriptions",
      "organizations_url": "https://api.github.com/users/mwaskom/orgs",
      "repos_url": "https://api.github.com/users/mwaskom/repos",
      "events_url": "https://api.github.com/users/mwaskom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwaskom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:26:27Z",
    "updated_at": "2015-01-21T18:26:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also I'd have to handle the \"is this column a categorical dtype series, and if so, is it already ordered?\" logic on my end, where it would be preferable to get a consistent answer from the series itself.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70892954",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70892954",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70892954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODkyOTU0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:28:09Z",
    "updated_at": "2015-01-21T18:28:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "`unique` by definition is not ordered (and arbitrary)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70893413",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70893413",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70893413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODkzNDEz",
    "user": {
      "login": "mwaskom",
      "id": 315810,
      "node_id": "MDQ6VXNlcjMxNTgxMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/315810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwaskom",
      "html_url": "https://github.com/mwaskom",
      "followers_url": "https://api.github.com/users/mwaskom/followers",
      "following_url": "https://api.github.com/users/mwaskom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwaskom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwaskom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwaskom/subscriptions",
      "organizations_url": "https://api.github.com/users/mwaskom/orgs",
      "repos_url": "https://api.github.com/users/mwaskom/repos",
      "events_url": "https://api.github.com/users/mwaskom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwaskom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:30:19Z",
    "updated_at": "2015-01-21T18:30:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "When I use an ordered category object, it is:\n\n``` python\ncat = pd.Categorical([\"b\", \"c\", \"c\", \"a\", \"b\", \"c\"], categories=[\"c\", \"b\", \"a\"])\ncat.unique()\n```\n\ngives\n\n```\narray(['c', 'b', 'a'], dtype=object)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70893767",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70893767",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70893767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODkzNzY3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:32:13Z",
    "updated_at": "2015-01-21T18:32:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [34]: c = df['cat'].values\n\nIn [35]: c.reorder_categories(c.take(df.sort('num').index.unique())).categories\nOut[35]: Index([u'C', u'U', u'H', u'A', u'O', u'E', u'X', u'F', u'D', u'S', u'L', u'Y', u'M', u'V', u'G', u'B', u'N', u'R', u'W', u'Q', u'I', u'J', u'K', u'T', u'P', u'Z'], dtype='object')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70893832",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70893832",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70893832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODkzODMy",
    "user": {
      "login": "mwaskom",
      "id": 315810,
      "node_id": "MDQ6VXNlcjMxNTgxMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/315810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwaskom",
      "html_url": "https://github.com/mwaskom",
      "followers_url": "https://api.github.com/users/mwaskom/followers",
      "following_url": "https://api.github.com/users/mwaskom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwaskom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwaskom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwaskom/subscriptions",
      "organizations_url": "https://api.github.com/users/mwaskom/orgs",
      "repos_url": "https://api.github.com/users/mwaskom/repos",
      "events_url": "https://api.github.com/users/mwaskom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwaskom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:32:34Z",
    "updated_at": "2015-01-21T18:32:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "From the docstring:\n\n```\nordered : boolean, optional\n    Whether or not this categorical is treated as a ordered categorical. If not given,\n    the resulting categorical will be ordered if values can be sorted.\n```\n\nThis caused me to think that setting `ordered` to False would _not_ lexicographically sort the levels, but would instead fall back to the normal `unique()` behavior of giving me the values in the order they appear in the dataframe \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70893855",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70893855",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70893855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODkzODU1",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:32:43Z",
    "updated_at": "2015-01-21T18:32:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe\n\n``` python\ndf.groupby('cat').num.first().order().index\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70894024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70894024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70894024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODk0MDI0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:33:46Z",
    "updated_at": "2015-01-21T18:33:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually @TomAugspurger soln prob the best. \n\nYou are uniquify on one column, but ordering by another.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70894215",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70894215",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70894215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODk0MjE1",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:34:56Z",
    "updated_at": "2015-01-21T18:35:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do we specify the order of values from `Series.unique` anywhere? I thought it was arbitrary, but I could be wrong.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70894349",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70894349",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70894349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODk0MzQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:35:41Z",
    "updated_at": "2015-01-21T18:35:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "no, unique is by definition un-ordered. The ordering is undefined.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70894499",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70894499",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70894499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODk0NDk5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:36:28Z",
    "updated_at": "2015-01-21T18:36:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "An ordered Categorical is just that the sort order is defined differently, namely, the order given when the categorical is constructed. This is the purpose of `reorder_categoricals`, e.g. to construct a new ordering (which you give it).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70895042",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70895042",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70895042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODk1MDQy",
    "user": {
      "login": "mwaskom",
      "id": 315810,
      "node_id": "MDQ6VXNlcjMxNTgxMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/315810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwaskom",
      "html_url": "https://github.com/mwaskom",
      "followers_url": "https://api.github.com/users/mwaskom/followers",
      "following_url": "https://api.github.com/users/mwaskom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwaskom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwaskom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwaskom/subscriptions",
      "organizations_url": "https://api.github.com/users/mwaskom/orgs",
      "repos_url": "https://api.github.com/users/mwaskom/repos",
      "events_url": "https://api.github.com/users/mwaskom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwaskom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:39:17Z",
    "updated_at": "2015-01-21T18:39:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK so `unique` is not defined but is there any reason why unordered categoricals do something completely different (return the lexicographically sorted unique values) from all other dtypes (return the unique values in the order they appear in the dataframe)?\n\nNone of the proposed approaches are at all helpful for my usecase, which I don't think is that crazy.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70897585",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70897585",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70897585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODk3NTg1",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:52:28Z",
    "updated_at": "2015-01-21T18:53:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed that your usecase is not crazy. My solution is a bit hacky.\n\nLooking at the code, we sort by category codes with `np.unique`, which _is_ sorted. I wonder why we did that instead of our unique.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70898266",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70898266",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70898266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODk4MjY2",
    "user": {
      "login": "mwaskom",
      "id": 315810,
      "node_id": "MDQ6VXNlcjMxNTgxMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/315810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwaskom",
      "html_url": "https://github.com/mwaskom",
      "followers_url": "https://api.github.com/users/mwaskom/followers",
      "following_url": "https://api.github.com/users/mwaskom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwaskom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwaskom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwaskom/subscriptions",
      "organizations_url": "https://api.github.com/users/mwaskom/orgs",
      "repos_url": "https://api.github.com/users/mwaskom/repos",
      "events_url": "https://api.github.com/users/mwaskom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwaskom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T18:56:04Z",
    "updated_at": "2015-01-21T18:56:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's a more concrete example of what I'm talking about: http://nbviewer.ipython.org/gist/mwaskom/7b464a7217858cbdcedd\n\nThe basic idea is that the sorting of the DataFrame is external to seaborn, but the determination of the order in which we should plot the grouping variable is internal. I want to be able to say \"use Categorical wherever possible\" because it gets you 1) automatic detection of what orientation the plot should be drawn in and 2) the order you expect when the categorical is ordered. But that won't work here, when we want the order of categories to change as the dataframe gets sorted by different numeric variables. This leads to confusing information about when to use `category` vs `object`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70899125",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70899125",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70899125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODk5MTI1",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T19:00:42Z",
    "updated_at": "2015-01-21T19:00:42Z",
    "author_association": "MEMBER",
    "body": "Almost certainly, we should be using `pd.unique` instead of `np.unique` internally here.\n\n@mwaskom `pd.unique` will respect insertion order, but unfortunately does handle ordered categoricals right. But as a work around you could use it for unordered categoricals (for now).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70960589",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-70960589",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 70960589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTYwNTg5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-22T02:14:27Z",
    "updated_at": "2015-01-22T02:14:27Z",
    "author_association": "MEMBER",
    "body": "I'm going to reopen this issue until we clarify what the solution here should look like.\n\nMy earlier comment was somewhat confused. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77765067",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9148#issuecomment-77765067",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9148",
    "id": 77765067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzY1MDY3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-08T18:10:14Z",
    "updated_at": "2015-03-08T18:10:14Z",
    "author_association": "MEMBER",
    "body": "See also #9611 \n"
  }
]
