[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/214663400",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12989#issuecomment-214663400",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12989",
    "id": 214663400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDY2MzQwMA==",
    "user": {
      "login": "codecov-io",
      "id": 8655789,
      "node_id": "MDQ6VXNlcjg2NTU3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8655789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov-io",
      "html_url": "https://github.com/codecov-io",
      "followers_url": "https://api.github.com/users/codecov-io/followers",
      "following_url": "https://api.github.com/users/codecov-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov-io/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov-io/orgs",
      "repos_url": "https://api.github.com/users/codecov-io/repos",
      "events_url": "https://api.github.com/users/codecov-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T08:13:09Z",
    "updated_at": "2016-04-26T08:13:09Z",
    "author_association": "NONE",
    "body": "## [Current coverage](https://codecov.io/gh/pydata/pandas/pull/12989?src=pr) is **83.84%**\n\n> Merging [#12989](https://codecov.io/gh/pydata/pandas/pull/12989?src=pr) into [master](https://codecov.io/gh/pydata/pandas/branch/master?src=pr) will increase coverage by **+<.01%**\n\n``` diff\n@@             master     #12989   diff @@\n==========================================\n  Files           136        136          \n  Lines         49711      49714     +3   \n  Methods           0          0          \n  Messages          0          0          \n  Branches          0          0          \n==========================================\n+ Hits          41679      41682     +3   \n  Misses         8032       8032          \n  Partials          0          0          \n```\n\n[![Sunburst](https://codecov.io/gh/pydata/pandas/pull/12989/graphs/sunburst.svg?src=pr&size=660)](https://codecov.io/gh/pydata/pandas/pull/12989?src=pr)\n\n> Powered by [Codecov](https://codecov.io?src=pr). Last updated by e9a9c14\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/214727317",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12989#issuecomment-214727317",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12989",
    "id": 214727317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDcyNzMxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T12:42:14Z",
    "updated_at": "2016-04-26T12:42:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls add an asv benchmark for this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/214728440",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12989#issuecomment-214728440",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12989",
    "id": 214728440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDcyODQ0MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T12:47:07Z",
    "updated_at": "2016-04-26T12:47:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "so even better is to do this:\n\n```\nIn [11]: %timeit s1.astype('category').str.decode('utf-8')\n100 loops, best of 3: 4.39 ms per loop\n```\n\nThis is of course is dependent on the number of uniques, so there is some overhead here if k (nuniques) is about n (len). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/214757759",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12989#issuecomment-214757759",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12989",
    "id": 214757759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDc1Nzc1OQ==",
    "user": {
      "login": "Winand",
      "id": 53390,
      "node_id": "MDQ6VXNlcjUzMzkw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/53390?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Winand",
      "html_url": "https://github.com/Winand",
      "followers_url": "https://api.github.com/users/Winand/followers",
      "following_url": "https://api.github.com/users/Winand/following{/other_user}",
      "gists_url": "https://api.github.com/users/Winand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Winand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Winand/subscriptions",
      "organizations_url": "https://api.github.com/users/Winand/orgs",
      "repos_url": "https://api.github.com/users/Winand/repos",
      "events_url": "https://api.github.com/users/Winand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Winand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T14:10:09Z",
    "updated_at": "2016-04-27T06:46:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tested on 3 different encodings with python3.4, this solution is better only in certain cases. I think that's because of some optimizations in CPython:\n\n[7.2.3. Standard Encodings](https://docs.python.org/3/library/codecs.html#standard-encodings)\n\n> CPython implementation detail: Some common encodings can bypass the codecs lookup machinery to improve performance. These optimization opportunities are only recognized by CPython for a limited set of aliases: utf-8, utf8, latin-1, latin1, iso-8859-1, mbcs (Windows only), ascii, utf-16, and utf-32.\n\nDespite of this _encoding_ of `utf-16/32` is faster with `codecs.getencoder`.\n\n```\nimport pandas as pd\ns1 = pd.Series([\"йцукенгшщз\", \"фывапролдж\", \"ячсмитьбю.\", \"ъхзщшгнеку\", \"эждлорпавы\",\n              \"окнсдветур\", \"ЙЦУКЕнгшщз\", \"ЭЖДЛОрпавы\", \"ЯЧСМИтьбю.\", \"ХЖЩЛГреауы\"])\ns1 = pd.concat([s1]*100000)\nenc = 'utf-16'\ns2 = s1.str.encode(enc)\n%timeit s1.str.encode(enc)\n%timeit s2.str.decode(enc)\nenc = 'utf-8'\ns2 = s1.str.encode(enc)\n%timeit s1.str.encode(enc)\n%timeit s2.str.decode(enc)\nenc = 'cp1251'\ns2 = s1.str.encode(enc)\n%timeit s1.str.encode(enc)\n%timeit s2.str.decode(enc)\n\n1 loop, best of 3: 1.05 s per loop -> 437 ms (++) utf-16\n1 loop, best of 3: 531 ms per loop -> 804 ms (--)\n1 loop, best of 3: 454 ms per loop -> 483 ms (-) utf-8\n1 loop, best of 3: 565 ms per loop -> 869 ms (--)\n1 loop, best of 3: 1.51 s per loop -> 766 ms (++) cp1251\n1 loop, best of 3: 1.76 s per loop -> 827 ms (++)\n```\n"
  }
]
