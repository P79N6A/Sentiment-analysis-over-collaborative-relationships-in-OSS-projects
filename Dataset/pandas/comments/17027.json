[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354528081",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17027#issuecomment-354528081",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17027",
    "id": 354528081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDUyODA4MQ==",
    "user": {
      "login": "pdpark",
      "id": 16848166,
      "node_id": "MDQ6VXNlcjE2ODQ4MTY2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16848166?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pdpark",
      "html_url": "https://github.com/pdpark",
      "followers_url": "https://api.github.com/users/pdpark/followers",
      "following_url": "https://api.github.com/users/pdpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/pdpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pdpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pdpark/subscriptions",
      "organizations_url": "https://api.github.com/users/pdpark/orgs",
      "repos_url": "https://api.github.com/users/pdpark/repos",
      "events_url": "https://api.github.com/users/pdpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pdpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-30T05:09:37Z",
    "updated_at": "2017-12-30T05:09:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd be happy to take this, just not sure what \"a worked out example of an alternative\" would look like? I've found a few discussions around storing lists in Dataframe cells and none of them discouraged it. This discussion on Stack Overflow is the only one I've found with alternatives: https://stackoverflow.com/questions/39661198/optimal-way-to-add-small-lists-to-pandas-dataframe. Which is the best option? Or is there another, better option? Thanks."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354546265",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17027#issuecomment-354546265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17027",
    "id": 354546265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU0NjI2NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-30T13:27:10Z",
    "updated_at": "2017-12-30T13:27:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://stackoverflow.com/questions/45587778/python-explode-rows-from-panda-dataframe\r\nhttps://stackoverflow.com/questions/44361160/explode-a-csv-in-python\r\nhttps://stackoverflow.com/questions/38428796/how-to-do-lateral-view-explode-in-pandas\r\n\r\nFYI, the timings are suspect of course, these examples don't use a large enough frame to actually matter.\r\n\r\nhttps://github.com/pandas-dev/pandas/issues/16538\r\n\r\nWe should make a small section on this. Also should prob just write ``.explode`` :< (note for strings we *already* have this, its the ``expand=True`` option in ``.str.split()``"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354546399",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17027#issuecomment-354546399",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17027",
    "id": 354546399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU0NjM5OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-30T13:30:11Z",
    "updated_at": "2017-12-30T13:30:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "more refs\r\n\r\nhttps://github.com/pandas-dev/pandas/issues/8517\r\n\r\n- http://www.markhneedham.com/blog/2015/03/23/python-equivalent-to-flatmap-for-flattening-an-array-of-arrays/\r\n- https://stackoverflow.com/questions/31080258/pysparks-flatmap-in-pandas\r\n- https://stackoverflow.com/questions/32468402/how-to-explode-a-list-inside-a-dataframe-cell-into-separate-rows\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354546508",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17027#issuecomment-354546508",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17027",
    "id": 354546508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU0NjUwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-30T13:32:36Z",
    "updated_at": "2017-12-30T13:32:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is pretty idiomatic / efficient.\r\n```\r\n(pd.melt(df.nearest_neighbors.apply(pd.Series).reset_index(), \r\n             id_vars=['name', 'opponent'],\r\n             value_name='nearest_neighbors')\r\n     .set_index(['name', 'opponent'])\r\n     .drop('variable', axis=1)\r\n     .dropna()\r\n     .sort_index()\r\n     )\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354562156",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17027#issuecomment-354562156",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17027",
    "id": 354562156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU2MjE1Ng==",
    "user": {
      "login": "pdpark",
      "id": 16848166,
      "node_id": "MDQ6VXNlcjE2ODQ4MTY2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16848166?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pdpark",
      "html_url": "https://github.com/pdpark",
      "followers_url": "https://api.github.com/users/pdpark/followers",
      "following_url": "https://api.github.com/users/pdpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/pdpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pdpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pdpark/subscriptions",
      "organizations_url": "https://api.github.com/users/pdpark/orgs",
      "repos_url": "https://api.github.com/users/pdpark/repos",
      "events_url": "https://api.github.com/users/pdpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pdpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-30T18:50:48Z",
    "updated_at": "2017-12-30T18:50:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I read through the examples in the links, very informative, thanks. I'll put something together and submit a PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354634606",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17027#issuecomment-354634606",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17027",
    "id": 354634606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDYzNDYwNg==",
    "user": {
      "login": "pdpark",
      "id": 16848166,
      "node_id": "MDQ6VXNlcjE2ODQ4MTY2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16848166?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pdpark",
      "html_url": "https://github.com/pdpark",
      "followers_url": "https://api.github.com/users/pdpark/followers",
      "following_url": "https://api.github.com/users/pdpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/pdpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pdpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pdpark/subscriptions",
      "organizations_url": "https://api.github.com/users/pdpark/orgs",
      "repos_url": "https://api.github.com/users/pdpark/repos",
      "events_url": "https://api.github.com/users/pdpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pdpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-01T03:12:39Z",
    "updated_at": "2018-01-01T03:12:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just want to clarify something: this issue was opened with the intent, as I understand it, to document the fact that storing lists in dataframes is not ideal. However, the examples above are all about how to explode lists stored in data frames. Is the recommended approach to create a temporary data frame with lists in order to create the preferred dataframe without lists? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354635763",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17027#issuecomment-354635763",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17027",
    "id": 354635763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDYzNTc2Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-01T04:09:28Z",
    "updated_at": "2018-01-01T04:09:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "no a long form dataframe is ideal from a performance and idiomatic perspective. those examples are illustrative of what to do if they already have lists\r\n\r\npoint is that you shouldn’t have them in the first place; if you do then you invariable need to convert them anyways"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354691239",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17027#issuecomment-354691239",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17027",
    "id": 354691239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDY5MTIzOQ==",
    "user": {
      "login": "pdpark",
      "id": 16848166,
      "node_id": "MDQ6VXNlcjE2ODQ4MTY2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16848166?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pdpark",
      "html_url": "https://github.com/pdpark",
      "followers_url": "https://api.github.com/users/pdpark/followers",
      "following_url": "https://api.github.com/users/pdpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/pdpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pdpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pdpark/subscriptions",
      "organizations_url": "https://api.github.com/users/pdpark/orgs",
      "repos_url": "https://api.github.com/users/pdpark/repos",
      "events_url": "https://api.github.com/users/pdpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pdpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-02T01:30:28Z",
    "updated_at": "2018-01-02T01:30:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "This example, also from here: https://stackoverflow.com/a/46161733, seems simpler/easier to understand? \r\n\r\n(df.nearest_neighbors.apply(pd.Series)\r\n              .stack()\r\n              .reset_index(level=2, drop=True)\r\n              .to_frame('nearest_neighbors'))\r\n\r\nAny reason not to prefer it as the canonical example?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354691337",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17027#issuecomment-354691337",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17027",
    "id": 354691337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDY5MTMzNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-02T01:32:43Z",
    "updated_at": "2018-01-02T01:32:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep that prob would be a nice example"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354697767",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17027#issuecomment-354697767",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17027",
    "id": 354697767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDY5Nzc2Nw==",
    "user": {
      "login": "pdpark",
      "id": 16848166,
      "node_id": "MDQ6VXNlcjE2ODQ4MTY2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16848166?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pdpark",
      "html_url": "https://github.com/pdpark",
      "followers_url": "https://api.github.com/users/pdpark/followers",
      "following_url": "https://api.github.com/users/pdpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/pdpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pdpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pdpark/subscriptions",
      "organizations_url": "https://api.github.com/users/pdpark/orgs",
      "repos_url": "https://api.github.com/users/pdpark/repos",
      "events_url": "https://api.github.com/users/pdpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pdpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-02T03:17:41Z",
    "updated_at": "2018-01-02T03:17:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Cool, thanks."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354923957",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17027#issuecomment-354923957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17027",
    "id": 354923957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDkyMzk1Nw==",
    "user": {
      "login": "pdpark",
      "id": 16848166,
      "node_id": "MDQ6VXNlcjE2ODQ4MTY2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16848166?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pdpark",
      "html_url": "https://github.com/pdpark",
      "followers_url": "https://api.github.com/users/pdpark/followers",
      "following_url": "https://api.github.com/users/pdpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/pdpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pdpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pdpark/subscriptions",
      "organizations_url": "https://api.github.com/users/pdpark/orgs",
      "repos_url": "https://api.github.com/users/pdpark/repos",
      "events_url": "https://api.github.com/users/pdpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pdpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-03T02:09:40Z",
    "updated_at": "2018-01-03T02:09:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I want to include an example of doing an \"explosion\" without creating an intermediary df with lists in cells. Here's my example - what do you think?\r\n\r\ndf = (pd.DataFrame(OrderedDict([('name', ['A.J. Price']*3), \r\n                                ('opponent', ['76ers', 'blazers', 'bobcats']), \r\n                                ('attribute x', ['A','B','C'])\r\n                               ])\r\n                  ))\r\n\r\nnn = [['Zach LaVine', 'Jeremy Lin', 'Nate Robinson', 'Isaia']]*3\r\n\r\ndf2 = pd.concat([df[['name','opponent']], pd.DataFrame(nn)], axis=1)\r\n\r\ndf3 = (df2.set_index(['name', 'opponent'])\r\n        .stack()\r\n        .reset_index(level=2, drop=True)\r\n        .to_frame('nearest_neighbors'))\r\ndf3"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355495550",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17027#issuecomment-355495550",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17027",
    "id": 355495550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTQ5NTU1MA==",
    "user": {
      "login": "pdpark",
      "id": 16848166,
      "node_id": "MDQ6VXNlcjE2ODQ4MTY2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16848166?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pdpark",
      "html_url": "https://github.com/pdpark",
      "followers_url": "https://api.github.com/users/pdpark/followers",
      "following_url": "https://api.github.com/users/pdpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/pdpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pdpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pdpark/subscriptions",
      "organizations_url": "https://api.github.com/users/pdpark/orgs",
      "repos_url": "https://api.github.com/users/pdpark/repos",
      "events_url": "https://api.github.com/users/pdpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pdpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T08:06:52Z",
    "updated_at": "2018-01-05T08:06:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added this change to existing pull request."
  }
]
