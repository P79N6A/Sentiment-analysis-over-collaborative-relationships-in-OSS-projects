[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318568016",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17103#issuecomment-318568016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17103",
    "id": 318568016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODU2ODAxNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-28T06:02:35Z",
    "updated_at": "2017-07-28T06:02:46Z",
    "author_association": "MEMBER",
    "body": "@andybrnr : Interesting!  Indeed, I've run this on other data types and can only replicate this issue with just `np.nan` as you have.  Not sure if this is a `pandas` issue exactly, but I can't see why we can't look into this a little more (given that `.unique()` is very performant)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318855656",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17103#issuecomment-318855656",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17103",
    "id": 318855656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODg1NTY1Ng==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-29T20:03:10Z",
    "updated_at": "2017-07-29T20:03:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "This happens due to interaction of `NaN` semantics and how python's hash tables work.  Basic rule of thumb is never put `NaN` inside a `set` or `dict`.  We get around this by special casing it.\r\n\r\nWhat's specifically happening is:\r\n\r\n1.  `iter(ser)` is yielding the value `np.float64('nan')` over and over again \r\n2.  All these `NaN` are the same value, so their hash is equal\r\n3.  But, `NaN` != `NaN`, so the python hash table treats them as different keys\r\n4.  So you are not only creating a massive python set, but creating that set out of items that have the same hash, essentially doing a hash collision attack on yourself      \r\n\r\n```python\r\ndef yield_nan(num):\r\n    for _ in range(num):\r\n        yield float('nan')\r\n\r\nIn [89]: %timeit set(yield_nan(100))\r\n154 µs ± 4.6 µs per loop (mean ± std. dev. of 7 runs, 10000 loops each)\r\n\r\nIn [90]: %timeit set(yield_nan(200))\r\n469 µs ± 5.49 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)\r\n\r\nIn [91]: %timeit set(yield_nan(500))\r\n2.85 ms ± 187 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)\r\n# 5x elements, 18x slower\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318858892",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17103#issuecomment-318858892",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17103",
    "id": 318858892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODg1ODg5Mg==",
    "user": {
      "login": "andybrnr",
      "id": 9090148,
      "node_id": "MDQ6VXNlcjkwOTAxNDg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9090148?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andybrnr",
      "html_url": "https://github.com/andybrnr",
      "followers_url": "https://api.github.com/users/andybrnr/followers",
      "following_url": "https://api.github.com/users/andybrnr/following{/other_user}",
      "gists_url": "https://api.github.com/users/andybrnr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andybrnr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andybrnr/subscriptions",
      "organizations_url": "https://api.github.com/users/andybrnr/orgs",
      "repos_url": "https://api.github.com/users/andybrnr/repos",
      "events_url": "https://api.github.com/users/andybrnr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andybrnr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-29T20:57:30Z",
    "updated_at": "2017-07-29T20:57:41Z",
    "author_association": "NONE",
    "body": "Thanks for the explanation, Chris, most useful."
  }
]
