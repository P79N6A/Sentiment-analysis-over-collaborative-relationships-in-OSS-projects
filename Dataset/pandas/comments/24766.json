[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454075330",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24766#issuecomment-454075330",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24766",
    "id": 454075330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDA3NTMzMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T16:48:17Z",
    "updated_at": "2019-01-14T16:48:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you write the exact expected output?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455219969",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24766#issuecomment-455219969",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24766",
    "id": 455219969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTIxOTk2OQ==",
    "user": {
      "login": "sasan00",
      "id": 8344190,
      "node_id": "MDQ6VXNlcjgzNDQxOTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8344190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sasan00",
      "html_url": "https://github.com/sasan00",
      "followers_url": "https://api.github.com/users/sasan00/followers",
      "following_url": "https://api.github.com/users/sasan00/following{/other_user}",
      "gists_url": "https://api.github.com/users/sasan00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sasan00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sasan00/subscriptions",
      "organizations_url": "https://api.github.com/users/sasan00/orgs",
      "repos_url": "https://api.github.com/users/sasan00/repos",
      "events_url": "https://api.github.com/users/sasan00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sasan00/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T15:46:57Z",
    "updated_at": "2019-01-17T15:46:57Z",
    "author_association": "NONE",
    "body": "I have updated the issue with the requested information. Couldn't find a way to remove the \"Needs Info\" label."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455228536",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24766#issuecomment-455228536",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24766",
    "id": 455228536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTIyODUzNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T16:07:45Z",
    "updated_at": "2019-01-17T16:07:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks. Can you check if the HTML parsing libraries (lxml, bs4) typically convert p tags to newlines? Do they provide options to do that?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455240169",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24766#issuecomment-455240169",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24766",
    "id": 455240169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI0MDE2OQ==",
    "user": {
      "login": "sasan00",
      "id": 8344190,
      "node_id": "MDQ6VXNlcjgzNDQxOTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8344190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sasan00",
      "html_url": "https://github.com/sasan00",
      "followers_url": "https://api.github.com/users/sasan00/followers",
      "following_url": "https://api.github.com/users/sasan00/following{/other_user}",
      "gists_url": "https://api.github.com/users/sasan00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sasan00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sasan00/subscriptions",
      "organizations_url": "https://api.github.com/users/sasan00/orgs",
      "repos_url": "https://api.github.com/users/sasan00/repos",
      "events_url": "https://api.github.com/users/sasan00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sasan00/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T16:38:02Z",
    "updated_at": "2019-01-17T16:38:02Z",
    "author_association": "NONE",
    "body": "That wouldn't help as the below example shows:\r\n```python\r\nimport pandas as pd\r\n\r\nhtml = \"\"\"\r\n<html>\r\n<body>\r\n<table>\r\n    <tr>\r\n        <td>\r\n            Field 1\r\n            \r\n            Field 2\r\n        </td>\r\n        <td>\r\n            Value 1\r\n            \r\n            Value 2\r\n        </td>\r\n    </tr>\r\n</table>\r\n</body>\r\n</html>\r\n\"\"\"\r\n\r\ntables = pd.read_html(html)\r\nprint(tables[0].iat[0, 0])\r\n```\r\nStill returns \"Field 1  Field 2\"\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455241386",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24766#issuecomment-455241386",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24766",
    "id": 455241386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI0MTM4Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T16:41:05Z",
    "updated_at": "2019-01-17T16:41:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm just wondering if our behavior matches the expected behavior of the\nunderlying parsing libraries, and whether they have ways of dealing with\nit. Presumably they've had requests for similar features around whitespace\nnormalization.\n\nOn Thu, Jan 17, 2019 at 10:38 AM sasan00 <notifications@github.com> wrote:\n\n> That wouldn't help as the below example shows:\n>\n> import pandas as pd\n>\n> html = \"\"\"<html><body><table>    <tr>        <td>            Field 1                        Field 2        </td>        <td>            Value 1                        Value 2        </td>    </tr></table></body></html>\"\"\"\n>\n> tables = pd.read_html(html)print(tables[0].iat[0, 0])\n>\n> Still returns \"Field 1 Field 2\"\n>\n> â€”\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/24766#issuecomment-455240169>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHInwNpzOb1pvbnIjUgP387yVDxBzwks5vEKbvgaJpZM4Z-i-t>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455244452",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24766#issuecomment-455244452",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24766",
    "id": 455244452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI0NDQ1Mg==",
    "user": {
      "login": "sasan00",
      "id": 8344190,
      "node_id": "MDQ6VXNlcjgzNDQxOTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8344190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sasan00",
      "html_url": "https://github.com/sasan00",
      "followers_url": "https://api.github.com/users/sasan00/followers",
      "following_url": "https://api.github.com/users/sasan00/following{/other_user}",
      "gists_url": "https://api.github.com/users/sasan00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sasan00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sasan00/subscriptions",
      "organizations_url": "https://api.github.com/users/sasan00/orgs",
      "repos_url": "https://api.github.com/users/sasan00/repos",
      "events_url": "https://api.github.com/users/sasan00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sasan00/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T16:49:33Z",
    "updated_at": "2019-01-17T16:49:33Z",
    "author_association": "NONE",
    "body": "lxml respects whitespaces.\r\n\r\n```python\r\nimport pandas as pd\r\nfrom lxml.etree import fromstring\r\nfrom lxml.html import HTMLParser\r\n\r\nhtml = \"\"\"\r\n<html>\r\n<body>\r\n<table>\r\n    <tr>\r\n        <td>\r\n            Field 1\r\n            \r\n            Field 2\r\n        </td>\r\n        <td>\r\n            Value 1\r\n            \r\n            Value 2\r\n        </td>\r\n    </tr>\r\n</table>\r\n</body>\r\n</html>\r\n\"\"\"\r\n\r\ntables = pd.read_html(html)\r\nprint(tables[0].iat[0, 0])\r\nparser = HTMLParser()\r\nroot = fromstring(html, parser)\r\nfor elem in root.iter('td'):\r\n    print(repr(elem.text))\r\n```\r\nResult:\r\n\r\nField 1  Field 2\r\n'\\n            Field 1\\n            \\n            Field 2\\n        '\r\n'\\n            Value 1\\n            \\n            Value 2\\n        '\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455250629",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24766#issuecomment-455250629",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24766",
    "id": 455250629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI1MDYyOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T17:06:47Z",
    "updated_at": "2019-01-17T17:06:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks. Can you check if pandas explicitly strips / normalizes whitespace\nin read_html then? If so, this would be a good parameter to add to\nread_html.\n\nOn Thu, Jan 17, 2019 at 10:49 AM sasan00 <notifications@github.com> wrote:\n\n> lxml respects whitespaces.\n>\n> import pandas as pdfrom lxml.etree import fromstringfrom lxml.html import HTMLParser\n>\n> html = \"\"\"<html><body><table>    <tr>        <td>            Field 1                        Field 2        </td>        <td>            Value 1                        Value 2        </td>    </tr></table></body></html>\"\"\"\n>\n> tables = pd.read_html(html)print(tables[0].iat[0, 0])\n> parser = HTMLParser()\n> root = fromstring(html, parser)for elem in root.iter('td'):\n>     print(repr(elem.text))\n>\n> Result:\n>\n> Field 1 Field 2\n> '\\n Field 1\\n \\n Field 2\\n '\n> '\\n Value 1\\n \\n Value 2\\n '\n>\n> â€”\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/24766#issuecomment-455244452>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIt86UF1iJOARwLdx1oJBZzcjMMWWks5vEKmjgaJpZM4Z-i-t>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455269711",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24766#issuecomment-455269711",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24766",
    "id": 455269711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI2OTcxMQ==",
    "user": {
      "login": "sasan00",
      "id": 8344190,
      "node_id": "MDQ6VXNlcjgzNDQxOTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8344190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sasan00",
      "html_url": "https://github.com/sasan00",
      "followers_url": "https://api.github.com/users/sasan00/followers",
      "following_url": "https://api.github.com/users/sasan00/following{/other_user}",
      "gists_url": "https://api.github.com/users/sasan00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sasan00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sasan00/subscriptions",
      "organizations_url": "https://api.github.com/users/sasan00/orgs",
      "repos_url": "https://api.github.com/users/sasan00/repos",
      "events_url": "https://api.github.com/users/sasan00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sasan00/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T18:03:15Z",
    "updated_at": "2019-01-17T18:49:56Z",
    "author_association": "NONE",
    "body": "Yes. In `_parse_raw_data`, calls are made to `_remove_whitespace `for each column in each row using the default value of the `regex` argument which is `_RE_WHITESPACE` whose value is `re.compile(r'[\\r\\n]+|\\s{2,}')`.\r\n\r\nI think whether whitespaces are \"cleaned up\" (i.e., replaced with a single space character) should be an optional functionality."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455325167",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24766#issuecomment-455325167",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24766",
    "id": 455325167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTMyNTE2Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T20:43:51Z",
    "updated_at": "2019-01-17T20:43:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for investigating. I think an option to disable that behavior makes sense.\r\n\r\nYou've given two examples now, one with newlines in the text, and one with `<p>` tags. Do you expect to normalize the `<p>` tags to newlines, so that the two would give the same output? Do we have any prior art to copy here?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455556962",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24766#issuecomment-455556962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24766",
    "id": 455556962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTU1Njk2Mg==",
    "user": {
      "login": "sasan00",
      "id": 8344190,
      "node_id": "MDQ6VXNlcjgzNDQxOTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8344190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sasan00",
      "html_url": "https://github.com/sasan00",
      "followers_url": "https://api.github.com/users/sasan00/followers",
      "following_url": "https://api.github.com/users/sasan00/following{/other_user}",
      "gists_url": "https://api.github.com/users/sasan00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sasan00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sasan00/subscriptions",
      "organizations_url": "https://api.github.com/users/sasan00/orgs",
      "repos_url": "https://api.github.com/users/sasan00/repos",
      "events_url": "https://api.github.com/users/sasan00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sasan00/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T14:06:13Z",
    "updated_at": "2019-01-18T14:10:01Z",
    "author_association": "NONE",
    "body": "I think adding an extra argument as a function that takes the raw text of a cell, and returns the \"cleaned up\" version would work best. Its default value would be `_remove_whitespace` to ensure backwards compatibility."
  }
]
