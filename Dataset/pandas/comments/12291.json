[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182819200",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182819200",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182819200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjgxOTIwMA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T11:39:32Z",
    "updated_at": "2016-02-11T11:40:35Z",
    "author_association": "MEMBER",
    "body": "Besides the `flake8` issues, I am somewhat confused by all of these Travis failures, as I thought my additions were isolated from the rest of the codebase.  Why are they occurring?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182827572",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182827572",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182827572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjgyNzU3Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T12:02:49Z",
    "updated_at": "2016-02-11T12:02:49Z",
    "author_association": "CONTRIBUTOR",
    "body": ".empty is a property of NDFrames already\nand this method is not necessary\n\nSeries(index=range(4)) does this already for example \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182857802",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182857802",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182857802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg1NzgwMg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T13:11:28Z",
    "updated_at": "2016-02-11T13:11:46Z",
    "author_association": "MEMBER",
    "body": "On second look, your suggestion doesn't quite entirely match what I was proposing:\n\n``` .Python\n>>> from pandas import Series\n>>> Series(index=range(4), dtype=int)\n0    NaN\n1    NaN\ndtype: float64\n```\n\nI would think that `Series` initialization should respect the dtype, which is what my PR does.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182858506",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182858506",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182858506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg1ODUwNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T13:15:12Z",
    "updated_at": "2016-02-11T13:15:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "and so now numpy support missing values with `int`?\n\nthat is the exception to the rule atm.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182859064",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182859064",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182859064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg1OTA2NA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T13:17:39Z",
    "updated_at": "2016-02-11T13:17:39Z",
    "author_association": "MEMBER",
    "body": "I'm not sure I understand your question.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182870550",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182870550",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182870550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg3MDU1MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T13:41:41Z",
    "updated_at": "2016-02-11T13:42:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can't store the value `np.nan` in an `int` typed container\n\n``` python\nIn [1]: np.array([np.nan], dtype='int64')\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-1-12005059c4f1> in <module>()\n----> 1 np.array([np.nan], dtype='int64')\n\nValueError: cannot convert float NaN to integer\n```\n\nSee [here](http://pandas.pydata.org/pandas-docs/version/0.17.1/missing_data.html#missing-data-casting-rules-and-indexing) for more. This could change at some point, but it's currently how things are.\n\nYour change of filling with random bits of memory via `np.empty` is not the same as filling with the specific value of `np.nan`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182875431",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182875431",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182875431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg3NTQzMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T13:56:47Z",
    "updated_at": "2016-02-11T13:56:47Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger : Agreed.  Nevertheless, being able to create dummy `Series` or `DataFrame` in a similar manner to `numpy` with the specified `dtype` would be useful.  My other PR #12284 is one example of this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182876842",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182876842",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182876842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg3Njg0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T14:02:10Z",
    "updated_at": "2016-02-11T14:02:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung how is `Series(index=range(3),dtype=int)` not exactly what you are after? (not related to the other issue), but a general empty creation method?\n\npandas coerces from a user perspective so you can be giving a specification which is not supported but will just work.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182877189",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182877189",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182877189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg3NzE4OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T14:03:36Z",
    "updated_at": "2016-02-11T14:03:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "And if you _really_ need the empty data, then `Series(np.empty(3, dtype=int))` will work. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182878545",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182878545",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182878545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg3ODU0NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T14:08:59Z",
    "updated_at": "2016-02-11T14:08:59Z",
    "author_association": "MEMBER",
    "body": "@jreback @TomAugspurger : Maybe I have been stuck in the `numpy` library for too long, but when I create an \"empty\" array-object with a specified `dtype`, I wouldn't think to have to make sure that the `dtype` is respected during initialization.  And as you can observe in #12284, creating a \"dummy\" `Series` object with the specified `dtype` is in fact useful.  The fact that current `Series` initialization with a numerical `dtype` and empty data that all cast to `np.int64` is the reason why I cannot remove the `numpy` dependency in that PR ATM, for `lib.reduce` expects the `values` and `arr` dtypes to be matching.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182892225",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182892225",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182892225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg5MjIyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T14:41:00Z",
    "updated_at": "2016-02-11T14:42:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung empty is not uninstalized as its in numpy. its full of a dtype compat missing values.\n\nThe other issue is related to the internals and how to handle these types of numpy bugs/issues. We have to work around them.\n\nA series constructor should just work, coercing dtypes if needed. As a user you _don't_ have to be concerned about it. As a code contributor, however, you have to be aware (and compensate for) these issues.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182895960",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182895960",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182895960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg5NTk2MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T14:52:38Z",
    "updated_at": "2016-02-11T14:52:38Z",
    "author_association": "MEMBER",
    "body": "@jreback : I presume you are referring to my `empty` methods?  I chose to put `None` in because that goes along similarly to what `numpy` does in some cases IINM <a href=\"https://github.com/numpy/numpy/blob/e2805398f9a63b825f4a2aab22e9f169ff65aae9/numpy/core/src/multiarray/ctors.c#L2903\">here</a>.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182897257",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182897257",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182897257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg5NzI1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T14:57:11Z",
    "updated_at": "2016-02-11T14:57:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung I appreciate what numpy does, but that is wrong IMHO. It only makes sense if its object dtype. pandas has in effect a much more detailed and richer missing value support system, so we really really try hard to have appropriate values. Nothing is ever unitialized, its just missing. The exception is really int, which forces a casting to float because of the storage medium (numpy).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182899626",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182899626",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182899626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg5OTYyNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T15:03:02Z",
    "updated_at": "2016-02-11T15:04:16Z",
    "author_association": "MEMBER",
    "body": "@jreback : Fair enough.  I do think though it would be good to be able to create \"dummy\" `Series` and `DataFrame` objects on the fly with \"dummy\" or \"missing\" values with the specified `dtype` nonetheless.  My initial documentation for these methods is inconsistent (and probably misleading) with what `pandas` is trying to do, but I think the overall behaviour of those methods conforms relatively well with what you are saying.  For \"nice\" datatypes (e.g. numerical datatypes), I would contend that `numpy` does just fine with putting in \"appropriate\" values.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182902129",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182902129",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182902129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjkwMjEyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T15:06:37Z",
    "updated_at": "2016-02-11T15:06:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung absolutley. and let me say I certainly appreciate your numpy background and viewpoints. \n\nFor all dtypes, passing a `dtype=` to a `Series/DataFrame` works exactly as intended, which the exception of `int` which coerces to `float`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182903233",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182903233",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182903233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjkwMzIzMw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T15:08:53Z",
    "updated_at": "2016-02-11T15:09:00Z",
    "author_association": "MEMBER",
    "body": "@jreback : Also `str`.  It gets coerced to `object` by `Series` at least.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182903876",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182903876",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182903876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjkwMzg3Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T15:10:03Z",
    "updated_at": "2016-02-11T15:10:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "that is also a representation in how pandas deals with strings. These are by definition `object` dtype. fixed length is not supported.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182905031",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182905031",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182905031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjkwNTAzMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T15:11:39Z",
    "updated_at": "2016-02-11T15:11:51Z",
    "author_association": "MEMBER",
    "body": "@jreback : So even for Python strings (variable length), that's how it is treated?  Just curious, why is that the case?\n\nAlso, in light of your point about the exception, would it be worth re-opening this PR so that we can then can create \"dummy\" `Series` and `DataFrame` objects with `int` data types?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182909806",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182909806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182909806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjkwOTgwNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T15:17:57Z",
    "updated_at": "2016-02-11T15:19:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung \n\n@wesm of course would have the original motivation, but I suspect here are some reasons why fixed length strings are not a great idea in pandas:\n- generally be more memory with efficient when dealing with variable length strings (since we don't support in-memory compression)\n- already support object types, so avoid having to support yet another type\n- i think the biggest reason though is that setting values when indexing becomes much simpler, you don't have to worry about truncation or buffer reallocation, you simply reassign the value, this could be a humungous cost if you are incrementally assigning to a str series with longer strings.\n- you further don't have to worry about coercion to python strings when you are getting values\n\nnot sure why you would want to expose 'dummy' for any purpose, its purely internal to `.apply` to try to determine whether a udf reduces, its not generally useful. and how would this actually be different that what currently exists?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182925976",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182925976",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182925976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjkyNTk3Ng==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T15:48:59Z",
    "updated_at": "2016-02-11T15:48:59Z",
    "author_association": "MEMBER",
    "body": "@jreback : Well it was working on the PR for `.apply` that I came up with the idea for this PR.  I'm not sure if it's really a matter of exposing `dummy` rather than allowing you to create `dummy` objects if need be as a user.  It would not be extremely different from what currently exists, except that you would be able to now create dummy `Series` and `DataFrame` objects with the specified integer dtypes.\n\nAnother reason (though this might be moot - I am not entirely), but if you know for example what sort of `DataFrame` or `Series` object you will need, including <i>dimensions</i> and <i>dtype</i>, it seems perfectly reasonable IMHO that you should be able to just initialize the object beforehand and then populate as you go.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182932422",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182932422",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182932422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjkzMjQyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T15:58:21Z",
    "updated_at": "2016-02-11T15:58:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "How can you create dummies with integer dtypes?\n\nit is not efficient at all to create 'dummies' then populate them. In the world of a single dtype, sure you can, but when you have multiple dtypes (and esp lots of inference on the indexers), this not a good pattern.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182982722",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182982722",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182982722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjk4MjcyMg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T18:07:49Z",
    "updated_at": "2016-02-11T18:07:49Z",
    "author_association": "MEMBER",
    "body": "I'll concede that in the context of the `DataFrame`, it does not make as much sense, but a `Series`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182983558",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-182983558",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 182983558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjk4MzU1OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T18:09:28Z",
    "updated_at": "2016-02-11T18:09:28Z",
    "author_association": "MEMBER",
    "body": "When I say create a dummy with integer dtypes, it's essentially initializing an `np.empty` array with the integer dtype and then casting it into a `Series` for example.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/183103957",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-183103957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 183103957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzEwMzk1Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:32:44Z",
    "updated_at": "2016-02-11T23:32:44Z",
    "author_association": "MEMBER",
    "body": "Which is what @TomAugspurger said above: `pd.Series(np.empty(3, dtype=int))`, or is that not the desired result?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/183109145",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-183109145",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 183109145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzEwOTE0NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:40:00Z",
    "updated_at": "2016-02-11T23:40:09Z",
    "author_association": "MEMBER",
    "body": "EDIT: @jorisvandenbossche : Sorry, misread your comment the first time.  Yes, that is what I am looking for.  But why not abstract into a method, which is what my PR does?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/183110144",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-183110144",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 183110144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzExMDE0NA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:41:30Z",
    "updated_at": "2016-02-11T23:41:30Z",
    "author_association": "MEMBER",
    "body": "If the user wants to create an empty `Series` with the desired `dtype`, there is no reason why he/she should have to think about whether or not the `dtype` is numerical.  That should be handled behind the scenes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/183112683",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-183112683",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 183112683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzExMjY4Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:45:47Z",
    "updated_at": "2016-02-11T23:45:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung \n\nif you want to do\n\n```\narr = np.empty(3,dtype=int)\ns = Series(arr)\n\n# this is a view\ns.values[0] = 5\n```\n\nwill work, but ONLY for a `Series` or a single dtyped `DataFrame`. However this is not a typical pattern at all in pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/183114020",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-183114020",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 183114020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzExNDAyMA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:49:23Z",
    "updated_at": "2016-02-11T23:49:23Z",
    "author_association": "MEMBER",
    "body": "@jreback : Fair enough.  I thought there might be a use-case for it, but if that isn't something people do too often or at all, then we can lay this PR to rest then. :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/183114759",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-183114759",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 183114759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzExNDc1OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:51:11Z",
    "updated_at": "2016-02-11T23:51:11Z",
    "author_association": "MEMBER",
    "body": "> If the user wants to create an empty Series with the desired dtype, there is no reason why he/she should have to think about whether or not the dtype is numerical. That should be handled behind the scenes.\n\nI don't understand this. Why would you have to think about that? You just specify the dtype you want in the empty function?\n\n>  But why not abstract into a method, which is what my PR does?\n\nI don't have a strong opinion on this, but in any case the approach in this PR is not possible given that `empty` is already taken. A function (like `np.empty`) is a function is also a possibility?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/183119467",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12291#issuecomment-183119467",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12291",
    "id": 183119467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzExOTQ2Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-12T00:08:03Z",
    "updated_at": "2016-02-12T00:08:03Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche :\n\n``` .Python\n>>> from pandas import Series\n>>> Series(index=range(4), dtype=int)\n0    NaN\n1    NaN\ndtype: float64\n```\n\nNotice how the `dtype` is not respected.  The idea behind my PR was that you could call `Series.empty(length, dtype=int)` and get returned `Series(np.empty(length, dtype=int))`.  For non-numerical dtypes, you would just get `Series(index=range(length), dtype=dtype))`.\n\nThe name was not really the issue besides the fact I had forgotten about `empty` already being an attribute of `Series` and `DataFrame`.  `np.empty` only works for `numpy` data types, but cannot handle `pandas` duck-typed dtypes.  I was aiming to create `np.empty`-ish functionality that could also able those additional dtypes.\n\nIn any case, this discussion is moot, since @jreback pointed out that such a use case is not as common compared to `np.empty`.\n"
  }
]
