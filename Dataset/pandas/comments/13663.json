[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232936083",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13663#issuecomment-232936083",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13663",
    "id": 232936083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjkzNjA4Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-15T12:12:20Z",
    "updated_at": "2016-07-15T12:13:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "It looks like the problem comes when we try to construct the index [here](https://github.com/pydata/pandas/blob/d7c028d4965932160fa3b69f56c716b1454c42a5/pandas/core/algorithms.py#L303). Essentially we call `Index([datetime.datetime(9999,1,1)])` instead of `Index([datetime.datetime(9999,1,1)], dtype=object)`. Want to see if making that change fixes it without breaking any tests?\n\nAny reason you're using `datetime.datetime`s with object dtype instead of `Period`s?\n\n``` python\nIn [4]: pd.Series([pd.Period('9999-01-01')]).value_counts()\nOut[4]:\n9999-01-01    1\nFreq: D, dtype: int64\n```\n\nThat might be less painful for you since there will surely be other places in pandas that don't support datetimes with object dtype. It might not be worth fixing this one case, if Periods provide a better alternative.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232944602",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13663#issuecomment-232944602",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13663",
    "id": 232944602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjk0NDYwMg==",
    "user": {
      "login": "13ene",
      "id": 20475860,
      "node_id": "MDQ6VXNlcjIwNDc1ODYw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20475860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/13ene",
      "html_url": "https://github.com/13ene",
      "followers_url": "https://api.github.com/users/13ene/followers",
      "following_url": "https://api.github.com/users/13ene/following{/other_user}",
      "gists_url": "https://api.github.com/users/13ene/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/13ene/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/13ene/subscriptions",
      "organizations_url": "https://api.github.com/users/13ene/orgs",
      "repos_url": "https://api.github.com/users/13ene/repos",
      "events_url": "https://api.github.com/users/13ene/events{/privacy}",
      "received_events_url": "https://api.github.com/users/13ene/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-15T12:59:35Z",
    "updated_at": "2016-07-15T12:59:35Z",
    "author_association": "NONE",
    "body": "I read the data from a sql-database via `pd.read_sql_query` and for values that do not go outside the boundaries the type is `datetime64[ns]`, however infinity is marked as 9999 in some columns and the `dtype` for those is `object`.\nThanks for the advice on periods.\n"
  }
]
