[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3842930",
    "html_url": "https://github.com/pandas-dev/pandas/issues/746#issuecomment-3842930",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/746",
    "id": 3842930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI5MzA=",
    "user": {
      "login": "gdraps",
      "id": 746408,
      "node_id": "MDQ6VXNlcjc0NjQwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/746408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gdraps",
      "html_url": "https://github.com/gdraps",
      "followers_url": "https://api.github.com/users/gdraps/followers",
      "following_url": "https://api.github.com/users/gdraps/following{/other_user}",
      "gists_url": "https://api.github.com/users/gdraps/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gdraps/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gdraps/subscriptions",
      "organizations_url": "https://api.github.com/users/gdraps/orgs",
      "repos_url": "https://api.github.com/users/gdraps/repos",
      "events_url": "https://api.github.com/users/gdraps/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gdraps/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T05:38:01Z",
    "updated_at": "2012-02-07T07:26:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi Wes,\n\nFirst off, thanks for pandas and your recent talk at the NYC Python meetup.  On the topic of filtering, NumPy vector filters are awesome for numeric data, but I have found myself reaching for the following idioms when dealing with alpha-numeric columns:\n\n```\ndf[df.method.contains('abc')]\ndf[df.method.startswith('ghi')]\ndf[df.method.endswith('xyz')]\n```\n\nWould you consider the addition of these methods to the Series class, not only to complement the existing `isin()` method, but to bridge the gap with SQL libraries, such as SQLAlchemy (http://docs.sqlalchemy.org/en/latest/core/expression_api.html#sqlalchemy.sql.operators.ColumnOperators), and improve conciseness of string queries in pandas?\n\n---\n\nUpdate: in the thread referenced, I see you've already thought about similar methods (`match()`) and that handling exceptions due to NA values, among other details, is the tricky bit.  On the surface, throwing a type exception when a NA is encountered seems acceptable because it feels consistent with other Python idioms (for better or worse). e.g., `', '.join(x)` throws an exception when `x` contains a non-string element\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3850888",
    "html_url": "https://github.com/pandas-dev/pandas/issues/746#issuecomment-3850888",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/746",
    "id": 3850888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTA4ODg=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T16:20:33Z",
    "updated_at": "2012-02-07T16:20:33Z",
    "author_association": "MEMBER",
    "body": "hi @gdraps there is actually an open issue about this, #620\n"
  }
]
