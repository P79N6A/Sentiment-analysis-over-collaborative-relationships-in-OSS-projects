[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372131607",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20221#issuecomment-372131607",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20221",
    "id": 372131607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjEzMTYwNw==",
    "user": {
      "login": "joders",
      "id": 12979604,
      "node_id": "MDQ6VXNlcjEyOTc5NjA0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12979604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joders",
      "html_url": "https://github.com/joders",
      "followers_url": "https://api.github.com/users/joders/followers",
      "following_url": "https://api.github.com/users/joders/following{/other_user}",
      "gists_url": "https://api.github.com/users/joders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joders/subscriptions",
      "organizations_url": "https://api.github.com/users/joders/orgs",
      "repos_url": "https://api.github.com/users/joders/repos",
      "events_url": "https://api.github.com/users/joders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-11T17:12:22Z",
    "updated_at": "2018-03-11T17:13:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\n################################################################################\r\n###################### Docstring (pandas.DataFrame.count) ######################\r\n################################################################################\r\n\r\nCount non-NA cells for each column or row.\r\n\r\nReturn Series with number of non-NA observations over requested\r\naxis. Works with non-floating point data as well (detects `None`,\r\n`NaN` and `NaT`).\r\n\r\nParameters\r\n----------\r\naxis : {0 or 'index', 1 or 'columns'}, default 0\r\n    If 0 or 'index' counts are generated for each column.\r\n    If 1 or 'columns' counts are generated for each **row**.\r\nlevel : int or str, optional\r\n    If the axis is a `MultiIndex` (hierarchical), count along a\r\n    particular `level`, collapsing into a `DataFrame`.\r\n    A `str` specifies the level name.\r\nnumeric_only : boolean, default False\r\n    Include only `float`, `int` or `boolean` data.\r\n\r\nReturns\r\n-------\r\nSeries or DataFrame\r\n    For each column/row the number of non-NA/null entries.\r\n    If `level` is specified returns a `DataFrame`.\r\n\r\nSee Also\r\n--------\r\nSeries.count: number of non-NA elements in a Series\r\nDataFrame.shape: number of DataFrame rows and columns (including NA\r\n    elements)\r\nDataFrame.isna: boolean same-sized DataFrame showing places of NA\r\n    elements\r\n\r\nExamples\r\n--------\r\nConstructing DataFrame from a dictionary:\r\n\r\n>>> df = pd.DataFrame({\"Person\":\r\n...                    [\"John\", \"Myla\", None, \"John\", \"Myla\"],\r\n...                    \"Age\": [24., np.nan, 21., 33, 26],\r\n...                    \"Single\": [False, True, True, True, False]})\r\n>>> df\r\n   Person   Age  Single\r\n0    John  24.0   False\r\n1    Myla   NaN    True\r\n2    None  21.0    True\r\n3    John  33.0    True\r\n4    Myla  26.0   False\r\n\r\nNotice the uncounted NA values:\r\n\r\n>>> df.count()\r\nPerson    4\r\nAge       4\r\nSingle    5\r\ndtype: int64\r\n\r\nCounts for each **row**:\r\n\r\n>>> df.count(axis='columns')\r\n0    3\r\n1    2\r\n2    2\r\n3    3\r\n4    3\r\ndtype: int64\r\n\r\nCounts for one level of a `MultiIndex`:\r\n\r\n>>> df.set_index([\"Person\", \"Single\"]).count(level=\"Person\")\r\n        Age\r\nPerson\r\nJohn      2\r\nMyla      1\r\n\r\n################################################################################\r\n################################## Validation ##################################\r\n################################################################################\r\n\r\nDocstring for \"pandas.DataFrame.count\" correct. :)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372305393",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20221#issuecomment-372305393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20221",
    "id": 372305393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjMwNTM5Mw==",
    "user": {
      "login": "joders",
      "id": 12979604,
      "node_id": "MDQ6VXNlcjEyOTc5NjA0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12979604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joders",
      "html_url": "https://github.com/joders",
      "followers_url": "https://api.github.com/users/joders/followers",
      "following_url": "https://api.github.com/users/joders/following{/other_user}",
      "gists_url": "https://api.github.com/users/joders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joders/subscriptions",
      "organizations_url": "https://api.github.com/users/joders/orgs",
      "repos_url": "https://api.github.com/users/joders/repos",
      "events_url": "https://api.github.com/users/joders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T13:15:50Z",
    "updated_at": "2018-03-12T13:15:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\n################################################################################\r\n###################### Docstring (pandas.DataFrame.count) ######################\r\n################################################################################\r\n\r\nCount non-NA cells for each column or row.\r\n\r\nThe values `None`, `NaN`, `NaT`, and optionally `numpy.inf` (depending\r\non `pandas.options.mode.use_inf_as_na`) are considered NA.\r\n\r\nParameters\r\n----------\r\naxis : {0 or 'index', 1 or 'columns'}, default 0\r\n    If 0 or 'index' counts are generated for each column.\r\n    If 1 or 'columns' counts are generated for each **row**.\r\nlevel : int or str, optional\r\n    If the axis is a `MultiIndex` (hierarchical), count along a\r\n    particular `level`, collapsing into a `DataFrame`.\r\n    A `str` specifies the level name.\r\nnumeric_only : boolean, default False\r\n    Include only `float`, `int` or `boolean` data.\r\n\r\nReturns\r\n-------\r\nSeries or DataFrame\r\n    For each column/row the number of non-NA/null entries.\r\n    If `level` is specified returns a `DataFrame`.\r\n\r\nSee Also\r\n--------\r\nSeries.count: number of non-NA elements in a Series\r\nDataFrame.shape: number of DataFrame rows and columns (including NA\r\n    elements)\r\nDataFrame.isna: boolean same-sized DataFrame showing places of NA\r\n    elements\r\n\r\nExamples\r\n--------\r\nConstructing DataFrame from a dictionary:\r\n\r\n>>> df = pd.DataFrame({\"Person\":\r\n...                    [\"John\", \"Myla\", None, \"John\", \"Myla\"],\r\n...                    \"Age\": [24., np.nan, 21., 33, 26],\r\n...                    \"Single\": [False, True, True, True, False]})\r\n>>> df\r\n   Person   Age  Single\r\n0    John  24.0   False\r\n1    Myla   NaN    True\r\n2    None  21.0    True\r\n3    John  33.0    True\r\n4    Myla  26.0   False\r\n\r\nNotice the uncounted NA values:\r\n\r\n>>> df.count()\r\nPerson    4\r\nAge       4\r\nSingle    5\r\ndtype: int64\r\n\r\nCounts for each **row**:\r\n\r\n>>> df.count(axis='columns')\r\n0    3\r\n1    2\r\n2    2\r\n3    3\r\n4    3\r\ndtype: int64\r\n\r\nCounts for one level of a `MultiIndex`:\r\n\r\n>>> df.set_index([\"Person\", \"Single\"]).count(level=\"Person\")\r\n        Age\r\nPerson\r\nJohn      2\r\nMyla      1\r\n\r\n################################################################################\r\n################################## Validation ##################################\r\n################################################################################\r\n\r\nDocstring for \"pandas.DataFrame.count\" correct. :)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372327345",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20221#issuecomment-372327345",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20221",
    "id": 372327345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjMyNzM0NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T14:24:54Z",
    "updated_at": "2018-03-12T14:24:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @joders!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372799038",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20221#issuecomment-372799038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20221",
    "id": 372799038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjc5OTAzOA==",
    "user": {
      "login": "joders",
      "id": 12979604,
      "node_id": "MDQ6VXNlcjEyOTc5NjA0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12979604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joders",
      "html_url": "https://github.com/joders",
      "followers_url": "https://api.github.com/users/joders/followers",
      "following_url": "https://api.github.com/users/joders/following{/other_user}",
      "gists_url": "https://api.github.com/users/joders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joders/subscriptions",
      "organizations_url": "https://api.github.com/users/joders/orgs",
      "repos_url": "https://api.github.com/users/joders/repos",
      "events_url": "https://api.github.com/users/joders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T20:00:49Z",
    "updated_at": "2018-03-13T20:00:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks for providing pandas"
  }
]
