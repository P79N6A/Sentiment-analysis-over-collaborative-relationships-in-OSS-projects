[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/42316140",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7057#issuecomment-42316140",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7057",
    "id": 42316140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzE2MTQw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-06T15:19:08Z",
    "updated_at": "2014-05-06T15:19:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls edit your post to include an example that is fully copy-pastable in order to replicate. you are asking a complicated question where the data is important. the more information you can provide, the better help you are likely to get.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/42317692",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7057#issuecomment-42317692",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7057",
    "id": 42317692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzE3Njky",
    "user": {
      "login": "calben",
      "id": 2454080,
      "node_id": "MDQ6VXNlcjI0NTQwODA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2454080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/calben",
      "html_url": "https://github.com/calben",
      "followers_url": "https://api.github.com/users/calben/followers",
      "following_url": "https://api.github.com/users/calben/following{/other_user}",
      "gists_url": "https://api.github.com/users/calben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/calben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/calben/subscriptions",
      "organizations_url": "https://api.github.com/users/calben/orgs",
      "repos_url": "https://api.github.com/users/calben/repos",
      "events_url": "https://api.github.com/users/calben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/calben/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-06T15:30:16Z",
    "updated_at": "2014-05-06T15:30:16Z",
    "author_association": "NONE",
    "body": "Sure thing!\n\nAnd a good thing you asked, because it turns out Pandas behaves exactly as I want it to with simpler data.\nThe below is the behaviour I was hoping for.\nIs there any reason this wouldn't work when selecting and grouping data via lambda functions?\nPossibly triggered by the copy vs view that arises from Numpy?\n\n```\n>>> df = pd.DataFrame({'a': [1,2,3,4,5], 'b': [2,2,3,2,1], 'c': [6,4,2,1,1]})\n>>> df\n   a  b  c\n0  1  2  6\n1  2  2  4\n2  3  3  2\n3  4  2  1\n4  5  1  1\n\n>>> grouped = df.groupby('a')\n>>> for k, v in grouped:\n...   v.apply(lambda x : x + k)\n...\n   a  b  c\n0  2  3  7\n\n[1 rows x 3 columns]\n   a  b  c\n1  4  4  6\n\n[1 rows x 3 columns]\n   a  b  c\n2  6  6  5\n\n[1 rows x 3 columns]\n   a  b  c\n3  8  6  5\n\n[1 rows x 3 columns]\n    a  b  c\n4  10  6  6\n\n[1 rows x 3 columns]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/42318127",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7057#issuecomment-42318127",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7057",
    "id": 42318127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzE4MTI3",
    "user": {
      "login": "calben",
      "id": 2454080,
      "node_id": "MDQ6VXNlcjI0NTQwODA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2454080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/calben",
      "html_url": "https://github.com/calben",
      "followers_url": "https://api.github.com/users/calben/followers",
      "following_url": "https://api.github.com/users/calben/following{/other_user}",
      "gists_url": "https://api.github.com/users/calben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/calben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/calben/subscriptions",
      "organizations_url": "https://api.github.com/users/calben/orgs",
      "repos_url": "https://api.github.com/users/calben/repos",
      "events_url": "https://api.github.com/users/calben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/calben/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-06T15:33:12Z",
    "updated_at": "2014-05-06T15:39:52Z",
    "author_association": "NONE",
    "body": "I'm working now on a better minimalist example that actually deals with my case.\n\nEDIT:\nbear with me here, I'm not sure this is the best example.\nThe below demonstrates that the application of functions to values in the grouped structure do not actually apply to the grouped structure.\nI would like them to, but I'm not sure how to make that happen.\n\n```\n>>> class Obj:\n...   def __init__(self, data):\n...     self.data = data\n...\n>>> df = pd.DataFrame({'a': [1,2,3,4,5], 'b': [Obj(x) for x in [2,2,3,2,1]], 'c': [6,4,2,1,1]})\n>>> df\n   a                                              b  c\n0  1  <__main__.Obj instance at 0x000000000261CD08>  6\n1  2  <__main__.Obj instance at 0x000000000261CC48>  4\n2  3  <__main__.Obj instance at 0x000000000261CB88>  2\n3  4  <__main__.Obj instance at 0x000000000261CC08>  1\n4  5  <__main__.Obj instance at 0x000000000261C688>  1\n>>> grouped = df.groupby('b')\n>>> for k, v in grouped:\n...   v.drop('b', axis=1)\n...\n   a  c\n4  5  1\n\n[1 rows x 2 columns]\n   a  c\n2  3  2\n\n[1 rows x 2 columns]\n   a  c\n3  4  1\n\n[1 rows x 2 columns]\n   a  c\n1  2  4\n\n[1 rows x 2 columns]\n   a  c\n0  1  6\n\n[1 rows x 2 columns]\n>>> for k, v in grouped:\n...   print v\n...\n   a                                              b  c\n4  5  <__main__.Obj instance at 0x000000000261C688>  1\n\n[1 rows x 3 columns]\n   a                                              b  c\n2  3  <__main__.Obj instance at 0x000000000261CB88>  2\n\n[1 rows x 3 columns]\n   a                                              b  c\n3  4  <__main__.Obj instance at 0x000000000261CC08>  1\n\n[1 rows x 3 columns]\n   a                                              b  c\n1  2  <__main__.Obj instance at 0x000000000261CC48>  4\n\n[1 rows x 3 columns]\n   a                                              b  c\n0  1  <__main__.Obj instance at 0x000000000261CD08>  6\n\n[1 rows x 3 columns]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/42319374",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7057#issuecomment-42319374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7057",
    "id": 42319374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzE5Mzc0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-06T15:42:24Z",
    "updated_at": "2014-05-06T15:42:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "why are you iterating over the grouped object? simply apply it and it will combine it\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/42319961",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7057#issuecomment-42319961",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7057",
    "id": 42319961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzE5OTYx",
    "user": {
      "login": "calben",
      "id": 2454080,
      "node_id": "MDQ6VXNlcjI0NTQwODA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2454080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/calben",
      "html_url": "https://github.com/calben",
      "followers_url": "https://api.github.com/users/calben/followers",
      "following_url": "https://api.github.com/users/calben/following{/other_user}",
      "gists_url": "https://api.github.com/users/calben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/calben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/calben/subscriptions",
      "organizations_url": "https://api.github.com/users/calben/orgs",
      "repos_url": "https://api.github.com/users/calben/repos",
      "events_url": "https://api.github.com/users/calben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/calben/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-06T15:46:56Z",
    "updated_at": "2014-05-06T15:47:46Z",
    "author_association": "NONE",
    "body": "True, but what if I wanted to do something like the following:\n\n```\n>>> for k, v in grouped:\n...   v.drop('b', axis=1)\n...   v.apply(lambda x : x + k.data)\n```\n\nIn this case, the value of the key for the grouped object affects my operation.\n\nAlso I haven't found a way to perform operations like resampling on grouped objects.\nIf there is a way to perform all the operations through transform, apply, and aggregate, that would be an awesome!\nI just haven't figured out how to do that yet (edit: removed the frowny face that was here because it turns out to be a little creepy)\n\nIs there a way to do the above with transform?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/42320330",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7057#issuecomment-42320330",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7057",
    "id": 42320330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzIwMzMw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-06T15:49:23Z",
    "updated_at": "2014-05-06T15:49:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "give an example of the input and output, I am still not sure what you are trying to do. you can do virtually anything in an apply, try using a named function its easier to see debug:\n\n```\ndef f(x):\n      # do what you want here\n      # I often put a: import pdb; pdb.set_trace() to debug\n      print x\n      return ......\n\ndf.groupby(....).apply(f)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43359795",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7057#issuecomment-43359795",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7057",
    "id": 43359795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzU5Nzk1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-16T17:48:39Z",
    "updated_at": "2014-05-16T17:48:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "not sure what you are trying to do here; pls give an example, closing in the mean time\n"
  }
]
