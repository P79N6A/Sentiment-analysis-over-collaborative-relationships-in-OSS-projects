[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24667163",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4873#issuecomment-24667163",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4873",
    "id": 24667163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjY3MTYz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T14:16:33Z",
    "updated_at": "2013-09-18T14:16:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @Komnomnomnom\n\nsince `datetime.time` are just object dtype not sure exactly what you could do (as you don't want to specifiy test all kinds of cases), maybe just fall thru. in this case `datetime.time` does have an `isoformat` method though\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24667575",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4873#issuecomment-24667575",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4873",
    "id": 24667575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjY3NTc1",
    "user": {
      "login": "jamescasbon",
      "id": 97495,
      "node_id": "MDQ6VXNlcjk3NDk1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/97495?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamescasbon",
      "html_url": "https://github.com/jamescasbon",
      "followers_url": "https://api.github.com/users/jamescasbon/followers",
      "following_url": "https://api.github.com/users/jamescasbon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamescasbon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamescasbon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamescasbon/subscriptions",
      "organizations_url": "https://api.github.com/users/jamescasbon/orgs",
      "repos_url": "https://api.github.com/users/jamescasbon/repos",
      "events_url": "https://api.github.com/users/jamescasbon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamescasbon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T14:21:37Z",
    "updated_at": "2013-09-18T14:21:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "What is meant to happen for objects?  I will convert mine to datetime since that makes sense.  However, I think there could be a better exception than OverflowErrror.\n\nTaking str(x) might be a sensible default for objects?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24667862",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4873#issuecomment-24667862",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4873",
    "id": 24667862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjY3ODYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T14:25:05Z",
    "updated_at": "2013-09-18T14:25:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jamescasbon AFAIK its a bit more complicated, because some objects actually can be seriealized, e.g.\n\n```\nIn [8]: pd.DataFrame(dict(A = [ ['foo','bar' ]]))\nOut[8]: \n            A\n0  [foo, bar]\n\nIn [9]: pd.DataFrame(dict(A = [ ['foo','bar' ]])).to_json()\nOut[9]: '{\"A\":{\"0\":[\"foo\",\"bar\"]}}'\n\nIn [10]: pd.DataFrame(dict(A = [ ['foo','bar' ]])).dtypes\nOut[10]: \nA    object\ndtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24712092",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4873#issuecomment-24712092",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4873",
    "id": 24712092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzEyMDky",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-19T01:35:24Z",
    "updated_at": "2013-09-19T01:35:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually times aren't being treated the same as `datetimes` at all, they are hitting the default fallback behaviour (inherited from ujson) which if an object is unsupported is as follows:\n1. if the object has a `toDict` method use it\n2. otherwise try to serialize it to a `dict` using `dir(...)`\n\nIn my experience, unless the object is extremely simple, number 2 is next to useless. This case is a good example, `time` objects have a `timedelta` attribute and you end up with endless recursion of fallback serialisation, hence the `OverflowError` complaining about max recursion depth.\n\nI'm open to improving the situation and adding a better fallback mechanism, most likely a `default` parameter to provide a callable to use if an object can't otherwise be serialised (ala the built-in JSON lib). If provided this would then be used instead of the fallback to using `dir(...)`.  I'm wary of replacing the existing fallback with `str()` as that would break existing code that relies on the current behaviour, and I'd prefer it to be explicit anyway as `str` can do some unexpected things in some cases.\n\nNote on the deserialisation end I probably wouldn't change anything, so your times would be deserialised to strings and you'd have to deal with them manually.\n\nAny opinions on how best to handle this? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24728600",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4873#issuecomment-24728600",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4873",
    "id": 24728600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzI4NjAw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-19T10:05:48Z",
    "updated_at": "2013-09-19T10:05:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it might be worth it to handle `datetime.date` and `datetime.time` natively, with serialization to a string type. and deserialization the same (no round-trip).In addition might be nice to do a comprehensive test of all python types to see what if anything 'breaks'.\n\nYour default scheme sounds fine, but let's see what breaks first.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25355777",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4873#issuecomment-25355777",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4873",
    "id": 25355777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU1Nzc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T12:24:22Z",
    "updated_at": "2013-09-30T12:24:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Komnomnomnom any action on this in 0.13? push? up2u\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25423058",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4873#issuecomment-25423058",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4873",
    "id": 25423058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDIzMDU4",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T03:15:50Z",
    "updated_at": "2013-10-01T03:15:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll definitely get `datetime.time` handling in for 0.13. \n\nIf 0.13 is now in 20 days (I thought it was this week) then I'll hope to get better default handling in too. Unless you want to freeze the code at some point before then?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25442074",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4873#issuecomment-25442074",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4873",
    "id": 25442074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDQyMDc0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T11:35:58Z",
    "updated_at": "2013-10-01T11:35:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "just trying to get final code in......if you could do this week would be gr8\n"
  }
]
