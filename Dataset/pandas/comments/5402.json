[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27531979",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5402#issuecomment-27531979",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5402",
    "id": 27531979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTMxOTc5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-31T21:49:02Z",
    "updated_at": "2013-10-31T21:54:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "verify_integrity vs validate:\n\nverify_integrity means 'everything matches up' and is non-trivial (ie all\nlabels are the same length, no label is >= length of corresponding\nlevelset)\n\nvalidate means 'check that the length  of the names/levels/labels are the\nsame as the length of the other levels/names/labels or vice versa'. You\nneed this because at some point you have to set levels labels and names on the constructor and at that point some of those things don't exist.  \n\nSo validate is internal to MI, whereas verify_integrity is more external (because internal functions that reconstruct MI know that they are valid integrity-wise, so they can set that to False).\n\ndoesn't matter to verify integrity on set_names, because they just get set on levelsets themselves and don't matter for integrity purposes (if the lengths match, you're golden).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27532502",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5402#issuecomment-27532502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5402",
    "id": 27532502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTMyNTAy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-31T21:54:46Z",
    "updated_at": "2013-10-31T21:54:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "edited my comment to be complete explanation.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27532605",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5402#issuecomment-27532605",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5402",
    "id": 27532605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTMyNjA1",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-31T21:56:08Z",
    "updated_at": "2013-10-31T21:56:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "In particular, this means that doing `assert len(mi.names) == len(mi.levels)` is totally meaningless. because `mi.names` iterates over levels to return the names.  It might make sense to cache that eventually though...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27568469",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5402#issuecomment-27568469",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5402",
    "id": 27568469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTY4NDY5",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T14:18:51Z",
    "updated_at": "2013-11-01T14:18:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok thanks for the explanation. The thread where you worked on MultiIndex was also hugely informative.\n\nAre there any fundamental objections to being able to do `Panel.to_frame` when we'd be shoving a new level into a MultiIndex? I may be missing edge cases but I don't see any problems. The example I gave at the bottom of my OP should have probably put the new level (the items `i1` and `i2`) on the innermost level of the MultiIndex to be consistent with `stack()`.  I can look at this over the weekend.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27569357",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5402#issuecomment-27569357",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5402",
    "id": 27569357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTY5MzU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T14:31:38Z",
    "updated_at": "2013-11-01T14:31:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger would welcome this.....`to_frame` prob not tested all that well (and related to your other issue), some construction issues in Panel as well (from dicts)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27590919",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5402#issuecomment-27590919",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5402",
    "id": 27590919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTkwOTE5",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T18:50:45Z",
    "updated_at": "2013-11-01T18:51:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok. I'll write some more tests to go along with this.\n\nThe bug comes from trying to build the result `MultiIndex`. The major and minor indices get passed to the `MultiIndex` constructor (levels argument). This isn't a problem when they're just `Index`es but in this case its trying to pass a `MultiIndex` instance to the `MultiIndex` constructor.  Are there any other cases where `MultiIndex()` accepting another (smaller) `MultiIndex` would be useful?  If not it should be pretty easy to put fix in `Panel.to_frame()`.  Just flatten things out and replicate the labels for each additional level.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27600877",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5402#issuecomment-27600877",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5402",
    "id": 27600877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjAwODc3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T21:04:05Z",
    "updated_at": "2013-11-01T21:04:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "it's a little weird, but not impossible, for MultiIndex(MultiIndex) to just\nreturn the object. Just means that both `__init__` and `__new__` have to be\naware of it. I'm not clear on why you'd need to do that though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27612692",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5402#issuecomment-27612692",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5402",
    "id": 27612692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjEyNjky",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-02T02:00:49Z",
    "updated_at": "2013-11-02T02:00:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ya I couldn't think of any reasons that would be useful either.\n\nOn Nov 1, 2013, at 4:04 PM, \"Jeff Tratner\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nit's a little weird, but not impossible, for MultiIndex(MultiIndex) to just\nreturn the object. Just means that both `__init__` and `__new__` have to be\naware of it. I'm not clear on why you'd need to do that though.\n\n—\nReply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/5402#issuecomment-27600877.\n"
  }
]
