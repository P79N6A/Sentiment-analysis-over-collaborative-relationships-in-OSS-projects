[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12492053",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-12492053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 12492053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDkyMDUz",
    "user": {
      "login": "garaud",
      "id": 98194,
      "node_id": "MDQ6VXNlcjk4MTk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/98194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garaud",
      "html_url": "https://github.com/garaud",
      "followers_url": "https://api.github.com/users/garaud/followers",
      "following_url": "https://api.github.com/users/garaud/following{/other_user}",
      "gists_url": "https://api.github.com/users/garaud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garaud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garaud/subscriptions",
      "organizations_url": "https://api.github.com/users/garaud/orgs",
      "repos_url": "https://api.github.com/users/garaud/repos",
      "events_url": "https://api.github.com/users/garaud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garaud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-21T10:30:27Z",
    "updated_at": "2013-07-08T20:03:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Quite interesting. Maybe get a look at issue #1662 which deals SQL connection improvements. I would like to contribute to these pandas features. I'll try to write something about it this week.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13410510",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-13410510",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 13410510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDEwNTEw",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-11T23:43:57Z",
    "updated_at": "2013-02-11T23:43:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I started work on this idea, very much Work in Progress, branch is here: https://github.com/mangecoeur/pandas/tree/sqlalchemy-integration\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14587014",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-14587014",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 14587014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTg3MDE0",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-07T21:23:37Z",
    "updated_at": "2013-03-07T21:23:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I also ran across #191 -- apparently this idea has been broached before. Any progress?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14848820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-14848820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 14848820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODQ4ODIw",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-13T15:41:52Z",
    "updated_at": "2013-03-13T15:41:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've commited a couple more changes, notably started work on a autoload_frame which will uses sqlalchemy to figure out the contents of a table and turn it into a dataframe. I still need to figure out how to handle type conversions as well as some tests.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29046644",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-29046644",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 29046644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDQ2NjQ0",
    "user": {
      "login": "derrley",
      "id": 1234652,
      "node_id": "MDQ6VXNlcjEyMzQ2NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1234652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/derrley",
      "html_url": "https://github.com/derrley",
      "followers_url": "https://api.github.com/users/derrley/followers",
      "following_url": "https://api.github.com/users/derrley/following{/other_user}",
      "gists_url": "https://api.github.com/users/derrley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/derrley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/derrley/subscriptions",
      "organizations_url": "https://api.github.com/users/derrley/orgs",
      "repos_url": "https://api.github.com/users/derrley/repos",
      "events_url": "https://api.github.com/users/derrley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/derrley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-22T03:35:33Z",
    "updated_at": "2013-11-22T03:35:33Z",
    "author_association": "NONE",
    "body": "We've built parts of an ETL tool on top of SQLAlchemy. When an extract is pointed at a database flavor that doesn't support bulk copy (read: Oracle) we simply use for row in table.select(). We've decided to move away from this, because of the overhead SQLAlchemy introduces. Plan on spending 2-4x the CPU cycles on top of your database driver to load the same number of rows. I landed on this thread as part of my hopes that pandas could do better. :)\n\nIn any case, unless this feature is always intended to load fairly small tables into dataframes, I'd recommend against going the route of SQLAlchemy as part of a library that is, in most other aspects, quite fast. SQLAlchemy's power is really its OO query builder and ORM framework. Too much cruft for something like this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29055417",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-29055417",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 29055417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDU1NDE3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-22T08:08:38Z",
    "updated_at": "2013-11-22T08:08:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@derrley I've experienced this with SQLAlchemy too.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29472510",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-29472510",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 29472510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDcyNTEw",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-28T16:03:23Z",
    "updated_at": "2013-11-28T16:03:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@derrley I have difficulty seeing how you would provide compatibility for all the DBs that SQLAlchemy supports without introducing the same amount of overhead, and adding the burden of maintaining the compatibility layer. Perhaps a better strategy would be to work with the SQLAlchemy guys to see how to optimize the kind of operations that Pandas needs to be fast. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32000559",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-32000559",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 32000559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDAwNTU5",
    "user": {
      "login": "zzzeek",
      "id": 128223,
      "node_id": "MDQ6VXNlcjEyODIyMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzzeek",
      "html_url": "https://github.com/zzzeek",
      "followers_url": "https://api.github.com/users/zzzeek/followers",
      "following_url": "https://api.github.com/users/zzzeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions",
      "organizations_url": "https://api.github.com/users/zzzeek/orgs",
      "repos_url": "https://api.github.com/users/zzzeek/repos",
      "events_url": "https://api.github.com/users/zzzeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzzeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-10T03:45:45Z",
    "updated_at": "2014-01-10T03:45:45Z",
    "author_association": "NONE",
    "body": "@derrley the row fetching overhead of SQLAlchemy's core ResultProxy/RowProxy is nothing like 2x-4x the CPU cycles of plain DBAPI, unless you have integrated type-processing functions like in-Python unicode conversion or somnething like that.   Within row fetching, most of what's more than negligible is ported to C functions.   There may be specific aspects of your experience that were slowing it down, do you have any benchmarks illustrating your results?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32001616",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-32001616",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 32001616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDAxNjE2",
    "user": {
      "login": "zzzeek",
      "id": 128223,
      "node_id": "MDQ6VXNlcjEyODIyMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzzeek",
      "html_url": "https://github.com/zzzeek",
      "followers_url": "https://api.github.com/users/zzzeek/followers",
      "following_url": "https://api.github.com/users/zzzeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions",
      "organizations_url": "https://api.github.com/users/zzzeek/orgs",
      "repos_url": "https://api.github.com/users/zzzeek/repos",
      "events_url": "https://api.github.com/users/zzzeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzzeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-10T04:14:16Z",
    "updated_at": "2014-01-10T04:14:16Z",
    "author_association": "NONE",
    "body": "@derrley here is an actual test against MySQL, comparing the SQLAlchemy Core result proxy with C extensions installed to the raw MySQLdb driver.   To execute a query with 50K rows, fetch all the rows and fetch a single column from the row takes 44 calls / .032 sec on MySQLdb raw and 82 calls / .057 sec with SQLA core.    So sure, SQLA introduces overhead but it is not very much - by the time you implement your own logic on top of the raw MySQLdb cursor, you'd be pretty much at the same place or worse:  https://gist.github.com/zzzeek/8346896\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32046868",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-32046868",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 32046868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDQ2ODY4",
    "user": {
      "login": "zzzeek",
      "id": 128223,
      "node_id": "MDQ6VXNlcjEyODIyMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzzeek",
      "html_url": "https://github.com/zzzeek",
      "followers_url": "https://api.github.com/users/zzzeek/followers",
      "following_url": "https://api.github.com/users/zzzeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions",
      "organizations_url": "https://api.github.com/users/zzzeek/orgs",
      "repos_url": "https://api.github.com/users/zzzeek/repos",
      "events_url": "https://api.github.com/users/zzzeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzzeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-10T17:20:56Z",
    "updated_at": "2014-01-10T17:20:56Z",
    "author_association": "NONE",
    "body": "@derrley also as far as Oracle, the SQLAlchemy cx_oracle dialect goes through (documented) effort in order to fix some issues with the driver, most notably being able to return numerics with full precision, rather than receiving floating points.  There is overhead to this process which is detailed here: http://docs.sqlalchemy.org/en/rel_0_9/dialects/oracle.html#precision-numerics .  If this process is specific to the performance issues you've been seeing, this feature can be turned off by specifying `coerce_to_decimal=False`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32635601",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-32635601",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 32635601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjM1NjAx",
    "user": {
      "login": "derrley",
      "id": 1234652,
      "node_id": "MDQ6VXNlcjEyMzQ2NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1234652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/derrley",
      "html_url": "https://github.com/derrley",
      "followers_url": "https://api.github.com/users/derrley/followers",
      "following_url": "https://api.github.com/users/derrley/following{/other_user}",
      "gists_url": "https://api.github.com/users/derrley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/derrley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/derrley/subscriptions",
      "organizations_url": "https://api.github.com/users/derrley/orgs",
      "repos_url": "https://api.github.com/users/derrley/repos",
      "events_url": "https://api.github.com/users/derrley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/derrley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-17T18:52:55Z",
    "updated_at": "2014-01-17T18:52:55Z",
    "author_association": "NONE",
    "body": "Appreciate the suggestions.\n\nJust tried both the coerce trick and the cdecimal trick, and neither prevent talking directly to cx_Oracle from being 3-4x faster, depending on the table. :/\n\nOn Jan 10, 2014, at 11:21 AM, mike bayer notifications@github.com wrote:\n\n> @derrley also as far as Oracle, the SQLAlchemy cx_oracle dialect goes through (documented) effort in order to fix some issues with the driver, most notably being able to return numerics with full precision, rather than receiving floating points. There is overhead to this process which is detailed here: http://docs.sqlalchemy.org/en/rel_0_9/dialects/oracle.html#precision-numerics . If this process is specific to the performance issues you've been seeing, this feature can be turned off by specifying coerce_to_decimal=False.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32636623",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-32636623",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 32636623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjM2NjIz",
    "user": {
      "login": "zzzeek",
      "id": 128223,
      "node_id": "MDQ6VXNlcjEyODIyMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzzeek",
      "html_url": "https://github.com/zzzeek",
      "followers_url": "https://api.github.com/users/zzzeek/followers",
      "following_url": "https://api.github.com/users/zzzeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions",
      "organizations_url": "https://api.github.com/users/zzzeek/orgs",
      "repos_url": "https://api.github.com/users/zzzeek/repos",
      "events_url": "https://api.github.com/users/zzzeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzzeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-17T19:05:16Z",
    "updated_at": "2014-01-17T19:05:16Z",
    "author_association": "NONE",
    "body": "@derrley if you can provide self-contained test scripts with sample tables/data I can isolate the cause of a 400% slowdown.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32636950",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-32636950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 32636950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjM2OTUw",
    "user": {
      "login": "zzzeek",
      "id": 128223,
      "node_id": "MDQ6VXNlcjEyODIyMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzzeek",
      "html_url": "https://github.com/zzzeek",
      "followers_url": "https://api.github.com/users/zzzeek/followers",
      "following_url": "https://api.github.com/users/zzzeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions",
      "organizations_url": "https://api.github.com/users/zzzeek/orgs",
      "repos_url": "https://api.github.com/users/zzzeek/repos",
      "events_url": "https://api.github.com/users/zzzeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzzeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-17T19:09:13Z",
    "updated_at": "2014-01-17T19:09:13Z",
    "author_association": "NONE",
    "body": "let me run my above script against an Oracle database here first just to make sure nothing funny is going on...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32637618",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-32637618",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 32637618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjM3NjE4",
    "user": {
      "login": "zzzeek",
      "id": 128223,
      "node_id": "MDQ6VXNlcjEyODIyMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzzeek",
      "html_url": "https://github.com/zzzeek",
      "followers_url": "https://api.github.com/users/zzzeek/followers",
      "following_url": "https://api.github.com/users/zzzeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions",
      "organizations_url": "https://api.github.com/users/zzzeek/orgs",
      "repos_url": "https://api.github.com/users/zzzeek/repos",
      "events_url": "https://api.github.com/users/zzzeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzzeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-17T19:17:52Z",
    "updated_at": "2014-01-17T19:17:52Z",
    "author_association": "NONE",
    "body": "nope, nothing unusual, script + output is at https://gist.github.com/zzzeek/8479592\n\nSQLAlchemy Core: 100058 function calls in 0.302 CPU seconds\ncx_oracle:  100012 function calls in 0.263 CPU seconds\n\nso that's around 1.2 times slower.  Feel free to show me your code and also make sure you're running the C extensions.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32637829",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-32637829",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 32637829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjM3ODI5",
    "user": {
      "login": "zzzeek",
      "id": 128223,
      "node_id": "MDQ6VXNlcjEyODIyMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzzeek",
      "html_url": "https://github.com/zzzeek",
      "followers_url": "https://api.github.com/users/zzzeek/followers",
      "following_url": "https://api.github.com/users/zzzeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions",
      "organizations_url": "https://api.github.com/users/zzzeek/orgs",
      "repos_url": "https://api.github.com/users/zzzeek/repos",
      "events_url": "https://api.github.com/users/zzzeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzzeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-17T19:20:21Z",
    "updated_at": "2014-01-17T19:20:21Z",
    "author_association": "NONE",
    "body": "ah, lets try again, SQLA's output type handler leaked into that, one moment\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32638603",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-32638603",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 32638603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjM4NjAz",
    "user": {
      "login": "zzzeek",
      "id": 128223,
      "node_id": "MDQ6VXNlcjEyODIyMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzzeek",
      "html_url": "https://github.com/zzzeek",
      "followers_url": "https://api.github.com/users/zzzeek/followers",
      "following_url": "https://api.github.com/users/zzzeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions",
      "organizations_url": "https://api.github.com/users/zzzeek/orgs",
      "repos_url": "https://api.github.com/users/zzzeek/repos",
      "events_url": "https://api.github.com/users/zzzeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzzeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-17T19:29:27Z",
    "updated_at": "2014-01-17T19:29:27Z",
    "author_association": "NONE",
    "body": "OK, so in both cases it's the coercion to unicode adding the majority of overhead.  https://gist.github.com/zzzeek/8479592 is now updated to run both tests without any coercion - in the SQLAlchemy case we are using an event to \"undo\" the cursor.outputtypehandler used to coerce to unicode.    I will look today into current cx_oracle releases to see if cx_oracle has decided to coerce to unicode for us yet (this is required of it in Python 3), and if so I will add version detection for this feature; otherwise, I will add a flag to turn it off with a documentation note.\n\nwith unicode coercion turned off, we again have similar results of:\n\nSQLA core:  56 function calls in 0.113 CPU seconds\ncx_oracle:  9 function calls in 0.086 CPU seconds\n\nthis is again about 1.3 times slower.    Feel free to apply this event to your application:\n\n```\nfrom sqlalchemy import event\n@event.listens_for(engine, \"connect\")\ndef connect(dbapi_connection, connection_record):\n    dbapi_connection.outputtypehandler = None\n```\n\nthat will disable all numeric/unicode type conversion within the cx_oracle driver.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32638820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-32638820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 32638820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjM4ODIw",
    "user": {
      "login": "zzzeek",
      "id": 128223,
      "node_id": "MDQ6VXNlcjEyODIyMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzzeek",
      "html_url": "https://github.com/zzzeek",
      "followers_url": "https://api.github.com/users/zzzeek/followers",
      "following_url": "https://api.github.com/users/zzzeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions",
      "organizations_url": "https://api.github.com/users/zzzeek/orgs",
      "repos_url": "https://api.github.com/users/zzzeek/repos",
      "events_url": "https://api.github.com/users/zzzeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzzeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-17T19:32:17Z",
    "updated_at": "2014-01-17T19:32:17Z",
    "author_association": "NONE",
    "body": "I hope it's clear that when using SQLAlchemy, one needn't \"plan on spending 2-4x the CPU cycles on top of your database driver to load the same number of rows.\"   I've demonstrated that in the specific case of cx_oracle, we have converters in place to accommodate cx_oracle's default behavior of returning inaccurate decimal data and encoded bytestrings, as SQLAlchemy prefers to return the correct result first versus the fastest - normalizing behavior across DBAPIs is one of SQLAlchemy's primary features and in the case of cx_oracle it requires us to do more work than that of a driver like psycopg2.  These converters can however be disabled and I will add further documentation and potential features regarding being able to customize this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32638821",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-32638821",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 32638821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjM4ODIx",
    "user": {
      "login": "derrley",
      "id": 1234652,
      "node_id": "MDQ6VXNlcjEyMzQ2NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1234652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/derrley",
      "html_url": "https://github.com/derrley",
      "followers_url": "https://api.github.com/users/derrley/followers",
      "following_url": "https://api.github.com/users/derrley/following{/other_user}",
      "gists_url": "https://api.github.com/users/derrley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/derrley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/derrley/subscriptions",
      "organizations_url": "https://api.github.com/users/derrley/orgs",
      "repos_url": "https://api.github.com/users/derrley/repos",
      "events_url": "https://api.github.com/users/derrley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/derrley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-17T19:32:17Z",
    "updated_at": "2014-01-17T19:32:17Z",
    "author_association": "NONE",
    "body": "It's sufficiently tangled up in our ETL tool (and the data I'm extracting is private).\n\nI can probably reproduce it with fixture data over a weekend some time. The SQLAlchemy interface is much nicer to use, so I'd love if this didn't produce the slowdown (or if I was discovered to be a moron).\n\nubuntu@test-slave-jenkins-i-25e5480b:~$ python\nPython 2.7.3 (default, Sep 26 2013, 20:03:06)\n[GCC 4.6.3] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n> > > import sqlalchemy\n> > > import sqlalchemy.cprocessors\n> > > print sqlalchemy.**version**\n> > > 0.8.3\n> > > import cx_Oracle\n> > > print cx_Oracle.version\n> > > 5.1.2\n\nselect \\* from product_component_version yields\nNLSRTL  11.2.0.3.0  Production\nOracle Database 11g Enterprise Edition  11.2.0.3.0  64bit Production\nPL/SQL  11.2.0.3.0  Production\nTNS for Linux:  11.2.0.3.0  Production\n\nThe \"fast\" hack is:\n\n```\n  try:\n    with self._engine.connect() as connection:\n      # SQLAlchemy is no good for the hot path of extraction. Too much\n      # overhead. Instead, use the underlying connection object and the\n      # python DBAPI.\n      connection = connection.connection.connection\n      cursor = connection.cursor()\n      cursor.arraysize = 3000\n      compiled_query = query.compile(bind=self._engine)\n      params = compiled_query.params\n\n      if isinstance(self._engine.dialect,\n                    sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect):\n        # The SQLite dialect seems to stupidly compile expressions that\n        # always have ? characters for parameters but returns a dictionary\n        # representation of parameter values. In order to bridge this gap\n        # (and make unit tests work), I convert the params here. I don't\n        # want to do this outside of this if block, because the code seems\n        # dangerous and I don't want it running against real databases\n        # (which seem to compile their expressions just fine).\n        params = [v for k, v in sorted(params.items())]\n\n      logger.debug(\"Extract query\\n %s\\nparameters:\\n%r\",\n                   compiled_query, params)\n      cursor.execute(str(compiled_query), params)\n\n      cols = [d[0].lower() for d in cursor.description]\n\n      for row in cursor:\n        yield {c: row[i] for i, c in enumerate(cols)}\n\n  except sys.modules[type(connection).__module__].DatabaseError as e:\n    msg = str(e.message)\n    if any(k in msg for k in KEYBOARD_INTERRUPT_STRINGS):\n      raise KeyboardInterrupt()\n    raise civetl.source.DataSourceError(e)\n```\n\nThe original SQLA code was:\n\n```\n  try:\n    for row in self._engine.execute(query):\n      yield dict(row)\n\n  except sqlalchemy.exc.SQLAlchemyError as e:\n    raise civetl.source.DataSourceError(e)\n```\n\nOn Jan 17, 2014, at 1:05 PM, mike bayer notifications@github.com wrote:\n\n> @derrley if you can provide self-contained test scripts with sample tables/data I can isolate the cause of a 400% slowdown.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32639237",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-32639237",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 32639237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjM5MjM3",
    "user": {
      "login": "zzzeek",
      "id": 128223,
      "node_id": "MDQ6VXNlcjEyODIyMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzzeek",
      "html_url": "https://github.com/zzzeek",
      "followers_url": "https://api.github.com/users/zzzeek/followers",
      "following_url": "https://api.github.com/users/zzzeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions",
      "organizations_url": "https://api.github.com/users/zzzeek/orgs",
      "repos_url": "https://api.github.com/users/zzzeek/repos",
      "events_url": "https://api.github.com/users/zzzeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzzeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-17T19:37:03Z",
    "updated_at": "2014-01-17T19:37:03Z",
    "author_association": "NONE",
    "body": "for your code above, use `[params[key] for key in compiled_query.positiontup]`.   Sorting params.items() is not going to produce the correct order, that's not a sorted dictionary.\n\nAlso, if the overhead issue on the result fetching side, you should stick with connection.execute() - then, use result.cursor to get at the raw DBAPI cursor.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32658760",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-32658760",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 32658760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjU4NzYw",
    "user": {
      "login": "zzzeek",
      "id": 128223,
      "node_id": "MDQ6VXNlcjEyODIyMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzzeek",
      "html_url": "https://github.com/zzzeek",
      "followers_url": "https://api.github.com/users/zzzeek/followers",
      "following_url": "https://api.github.com/users/zzzeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions",
      "organizations_url": "https://api.github.com/users/zzzeek/orgs",
      "repos_url": "https://api.github.com/users/zzzeek/repos",
      "events_url": "https://api.github.com/users/zzzeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzzeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-17T22:41:52Z",
    "updated_at": "2014-01-17T22:41:52Z",
    "author_association": "NONE",
    "body": "I've made a change to the Oracle dialect in http://www.sqlalchemy.org/trac/ticket/2911 such that we no longer use cx_oracle's \"outputtypehandler\" to coerce to unicode; SQLAlchemy's own converters have minimal overhead while cx_Oracle's within Py2K seems to have full blown Python function overhead (but oddly not when run under Py3K).  So a result set with cx_oracle will in 0.9.2 no longer have any string conversion overhead for plain strings, minimal overhead for Python unicode.   I've enhanced the C extensions to better provide for DBAPIs like cx_Oracle that sometimes return unicode and sometimes str.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34506940",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2717#issuecomment-34506940",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2717",
    "id": 34506940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTA2OTQw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-07T21:44:14Z",
    "updated_at": "2014-02-07T21:44:14Z",
    "author_association": "MEMBER",
    "body": "Closing this, as SQLAlchemy integration in io.sql is now merged: #5950 \n"
  }
]
