[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/329913209",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17552#issuecomment-329913209",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17552",
    "id": 329913209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTkxMzIwOQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-15T21:54:33Z",
    "updated_at": "2017-09-15T21:54:33Z",
    "author_association": "MEMBER",
    "body": "@1kastner : Thanks for reporting this!  It appears that the `cloud_cover_df` table is causing issues because the index is not aligned with that of the other two.\r\n\r\nI'm not sure if the concatenation should work (@jreback ?), but that being said, better error messages should be raised if that's the case."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/329959790",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17552#issuecomment-329959790",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17552",
    "id": 329959790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTk1OTc5MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-16T10:19:14Z",
    "updated_at": "2017-09-16T10:19:14Z",
    "author_association": "MEMBER",
    "body": "Normally, not aligned indices work fine (you just get a lot of NaNs):\r\n\r\n```\r\nIn [46]: df1 = pd.DataFrame(np.zeros((2,2)), index=[0, 1], columns=['a', 'b'])\r\n\r\nIn [47]: df2 = pd.DataFrame(np.ones((2,2)), index=[2, 3], columns=['c', 'd'])\r\n\r\nIn [48]: pd.concat([df1, df2], axis=1)\r\nOut[48]: \r\n     a    b    c    d\r\n0  0.0  0.0  NaN  NaN\r\n1  0.0  0.0  NaN  NaN\r\n2  NaN  NaN  1.0  1.0\r\n3  NaN  NaN  1.0  1.0\r\n\r\nIn [49]: df2 = pd.DataFrame(np.ones((2,2)), index=[pd.Timestamp(1), pd.Timestamp(2)], columns=['c', 'd'])\r\n\r\nIn [50]: pd.concat([df1, df2], axis=1)\r\nOut[50]: \r\n                                 a    b    c    d\r\n0                              0.0  0.0  NaN  NaN\r\n1                              0.0  0.0  NaN  NaN\r\n1970-01-01 00:00:00.000000001  NaN  NaN  1.0  1.0\r\n1970-01-01 00:00:00.000000002  NaN  NaN  1.0  1.0\r\n```\r\n\r\nSo not sure what is different in the original example.\r\n\r\n@1kastner sidenote: I think you are misunderstanding what `ignore_index` does. It is not meant to say to ignore the index values on the axis you are concatting on (the index in your case), but it is meant to replace the concatenated axis (the columns) with default values (0, 1, ..). Which is not what you want I think (but this is not related to the actual bug here)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/329960698",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17552#issuecomment-329960698",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17552",
    "id": 329960698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTk2MDY5OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-16T10:39:33Z",
    "updated_at": "2017-09-16T10:39:33Z",
    "author_association": "MEMBER",
    "body": "OK, so the cause is the fact that the index is uniform (a single value repeated), and depending on the dtype of the index, you get a different error message:\r\n\r\n```\r\nIn [113]: df1 = pd.DataFrame(np.zeros((2,2)), index=[0, 1], columns=['a', 'b'])\r\n     ...: df2 = pd.DataFrame(np.ones((2,2)), index=[2, 2], columns=['c', 'd'])\r\n\r\nIn [114]: pd.concat([df1, df2], axis=1)\r\n...\r\nValueError: Shape of passed values is (4, 6), indices imply (4, 4)\r\n\r\nIn [115]: df1 = pd.DataFrame(np.zeros((2,2)), index=[0, 1], columns=['a', 'b'])\r\n     ...: df2 = pd.DataFrame(np.ones((2,2)), index=pd.DatetimeIndex([2, 2]), columns=['c', 'd'])\r\n\r\nIn [116]: pd.concat([df1, df2], axis=1)\r\n...\r\nTypeError: 'NoneType' object is not iterable\r\n```\r\n\r\nClosing this as a duplicate of https://github.com/pandas-dev/pandas/issues/6963. It seems that `concat` cannot handle indices with duplicates and different values (if there are no different values in the indices, then duplicates are handled fine). It is not exactly the same error message as in that issue (the error message depends on which axis you are concatting), but the idea is the same.\r\n\r\n@1kastner I think the reason you get this, as I said above, is from misunderstanding what `ignore_index` is supposed to do. If you know all 3 frames are aligned, and you don't care about the actual index values, what you can do is use `reset_index`:\r\n\r\n```\r\npd.concat([data_df, df_hour, cloud_cover_df.reset_index()], axis=1)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/329960726",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17552#issuecomment-329960726",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17552",
    "id": 329960726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTk2MDcyNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-16T10:39:55Z",
    "updated_at": "2017-09-16T10:39:55Z",
    "author_association": "MEMBER",
    "body": "Duplicate of https://github.com/pandas-dev/pandas/issues/6963"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/329979750",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17552#issuecomment-329979750",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17552",
    "id": 329979750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTk3OTc1MA==",
    "user": {
      "login": "1kastner",
      "id": 5236165,
      "node_id": "MDQ6VXNlcjUyMzYxNjU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5236165?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1kastner",
      "html_url": "https://github.com/1kastner",
      "followers_url": "https://api.github.com/users/1kastner/followers",
      "following_url": "https://api.github.com/users/1kastner/following{/other_user}",
      "gists_url": "https://api.github.com/users/1kastner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1kastner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1kastner/subscriptions",
      "organizations_url": "https://api.github.com/users/1kastner/orgs",
      "repos_url": "https://api.github.com/users/1kastner/repos",
      "events_url": "https://api.github.com/users/1kastner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1kastner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-16T16:40:34Z",
    "updated_at": "2017-09-16T16:40:34Z",
    "author_association": "NONE",
    "body": "Thanks for the feedback, the ignore_index thing was a bit confusing, I will try to add some information to the documentation as this behavior was a bit surprising for me. The rest of the analysis seems valid as the dataframe resulting from the get_dummies invocation has a different-looking index.\r\n\r\nThe solution I chose was to add the lines \r\n```python\r\n    data_df.reset_index(inplace=True, drop=True)\r\n    df_hour.reset_index(inplace=True, drop=True)\r\n    cloud_cover_df.reset_index(inplace=True, drop=True)\r\n```\r\njust before the concatenation from which I removed the ignore_index keyword. So now the complete code looks like:\r\n\r\n```python\r\nimport io\r\nimport pandas\r\ncsv_file = io.StringIO(\"\"\"datetime,cloudcover_eddh,dewpoint,dewpoint_eddh,humidity,humidity_eddh,lat,lon,precipitation_eddh,pressure_eddh,temperature,temperature_eddh,winddirection_eddh,windgust_eddh,windspeed_eddh\r\n2016-01-01 00:00:00,CAVOC,4.1,3.0,100.0,94.0,53.5443,9.926839999999999,,1023.0,4.1,3.0,160.0,0.0,7.2\r\n2016-01-01 00:00:00,CAVOC,1.7,3.0,96.0,94.0,53.61297,9.98145,,1023.0,2.3,3.0,160.0,0.0,7.2\r\n2016-01-01 00:00:00,CAVOC,2.4,3.0,98.0,94.0,53.57735,10.09428,,1023.0,2.7,3.0,160.0,0.0,7.2\r\n2016-01-01 00:00:00,CAVOC,3.0,3.0,94.0,94.0,53.68849,10.1335,,1023.0,3.9,3.0,160.0,0.0,7.2\r\n2016-01-01 00:00:00,CAVOC,4.2,3.0,76.0,94.0,53.6608,10.06555,,1023.0,,3.0,160.0,0.0,7.2\r\n2016-01-01 00:00:00,CAVOC,3.0,3.0,100.0,94.0,53.43252,10.297989999999999,,1023.0,3.0,3.0,160.0,0.0,7.2\r\n2016-01-01 00:00:00,CAVOC,1.9,3.0,92.0,94.0,53.68937,10.13025,,1023.0,3.1,3.0,160.0,0.0,7.2\r\n2016-01-01 00:00:00,CAVOC,3.5,3.0,100.0,94.0,53.6344,9.966560000000001,,1023.0,3.5,3.0,160.0,0.0,7.2\r\n2016-01-01 00:00:00,CAVOC,3.6,3.0,99.0,94.0,53.46402,9.89157,,1023.0,3.7,3.0,160.0,0.0,7.2\"\"\")\r\ndata_df = pandas.read_csv(csv_file, parse_dates=[\"datetime\"], index_col=\"datetime\")\r\ncloud_cover_df = pandas.get_dummies(data_df.cloudcover_eddh, prefix=\"cloudcover_eddh\")\r\ndf_hour = pandas.get_dummies(data_df.index.hour, prefix=\"hour\")\r\ndata_df.reset_index(inplace=True, drop=True)\r\ncloud_cover_df.reset_index(inplace=True, drop=True)\r\ndf_hour.reset_index(inplace=True, drop=True)\r\ndata_df = pandas.concat([\r\n   data_df,\r\n   df_hour,\r\n   cloud_cover_df\r\n], axis=1)\r\n```\r\nThat way I could enter all the dummies back into the dataframe and have all columns I wanted, i. e.:\r\n\r\n```\r\ndewpoint_eddh  humidity_eddh       lat      lon  pressure_eddh  \\\r\n   temperature_eddh  winddirection_eddh  windgust_eddh  windspeed_eddh  \\\r\n   hour_0  hour_1  hour_2  hour_3  hour_4  hour_5  hour_6  hour_7  hour_8  \\\r\n   hour_9  hour_10  hour_11  hour_12  hour_13  hour_14  hour_15  hour_16  \\\r\n   hour_17  hour_18  hour_19  hour_20  hour_21  hour_22  hour_23  \\\r\n   cloudcover_eddh_0  cloudcover_eddh_1  cloudcover_eddh_2  cloudcover_eddh_3  \\\r\n   cloudcover_eddh_4  cloudcover_eddh_5  temperature\r\n```\r\n\r\nIt might be a special case that I want to drop the index (the row called \"datetime\") but overall it can be said that get_dummies is not that convenient for the described situation."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/329979864",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17552#issuecomment-329979864",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17552",
    "id": 329979864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTk3OTg2NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-16T16:42:33Z",
    "updated_at": "2017-09-16T16:42:33Z",
    "author_association": "MEMBER",
    "body": "Improvement to the docs is always welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/330311762",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17552#issuecomment-330311762",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17552",
    "id": 330311762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDMxMTc2Mg==",
    "user": {
      "login": "1kastner",
      "id": 5236165,
      "node_id": "MDQ6VXNlcjUyMzYxNjU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5236165?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1kastner",
      "html_url": "https://github.com/1kastner",
      "followers_url": "https://api.github.com/users/1kastner/followers",
      "following_url": "https://api.github.com/users/1kastner/following{/other_user}",
      "gists_url": "https://api.github.com/users/1kastner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1kastner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1kastner/subscriptions",
      "organizations_url": "https://api.github.com/users/1kastner/orgs",
      "repos_url": "https://api.github.com/users/1kastner/repos",
      "events_url": "https://api.github.com/users/1kastner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1kastner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T18:19:40Z",
    "updated_at": "2017-09-18T18:19:40Z",
    "author_association": "NONE",
    "body": "Another improvement as I just want to add some columns and I know that there are duplicated indices which does not work well with the logic of concatenating (joining on sth.)\r\n\r\n```python\r\ndata_df = data_df.assign(**{column: cloud_cover_df[column] for column in cloud_cover_df.columns})\r\n```\r\n"
  }
]
