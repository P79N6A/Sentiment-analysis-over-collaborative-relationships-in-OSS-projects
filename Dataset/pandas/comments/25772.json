[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474209334",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25772#issuecomment-474209334",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25772",
    "id": 474209334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDIwOTMzNA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T06:01:26Z",
    "updated_at": "2019-03-19T06:01:26Z",
    "author_association": "MEMBER",
    "body": "cc @bashtage \r\n\r\n@bdemeshev : Can you post the traceback for this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474220341",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25772#issuecomment-474220341",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25772",
    "id": 474220341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDIyMDM0MQ==",
    "user": {
      "login": "bdemeshev",
      "id": 1075773,
      "node_id": "MDQ6VXNlcjEwNzU3NzM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1075773?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bdemeshev",
      "html_url": "https://github.com/bdemeshev",
      "followers_url": "https://api.github.com/users/bdemeshev/followers",
      "following_url": "https://api.github.com/users/bdemeshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/bdemeshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bdemeshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bdemeshev/subscriptions",
      "organizations_url": "https://api.github.com/users/bdemeshev/orgs",
      "repos_url": "https://api.github.com/users/bdemeshev/repos",
      "events_url": "https://api.github.com/users/bdemeshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bdemeshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T06:55:07Z",
    "updated_at": "2019-03-19T06:55:07Z",
    "author_association": "NONE",
    "body": "Have updated all the packages. The error has changed.\r\n\r\n#### traceback\r\n<details>\r\n\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n~/anaconda3/lib/python3.6/site-packages/pandas/io/stata.py in _do_convert_categoricals(self, data, value_label_dict, lbllist, order_categoricals)\r\n   1710                 try:\r\n-> 1711                     cat_data.categories = categories\r\n   1712                 except ValueError:\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/core/arrays/categorical.py in categories(self, categories)\r\n    426     def categories(self, categories):\r\n--> 427         new_dtype = CategoricalDtype(categories, ordered=self.ordered)\r\n    428         if (self.dtype.categories is not None and\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/core/dtypes/dtypes.py in __init__(self, categories, ordered)\r\n    225     def __init__(self, categories=None, ordered=None):\r\n--> 226         self._finalize(categories, ordered, fastpath=False)\r\n    227 \r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/core/dtypes/dtypes.py in _finalize(self, categories, ordered, fastpath)\r\n    334             categories = self.validate_categories(categories,\r\n--> 335                                                   fastpath=fastpath)\r\n    336 \r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/core/dtypes/dtypes.py in validate_categories(categories, fastpath)\r\n    513             if not categories.is_unique:\r\n--> 514                 raise ValueError('Categorical categories must be unique')\r\n    515 \r\n\r\nValueError: Categorical categories must be unique\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-3-d44763a40bf9> in <module>\r\n----> 1 d = pd.read_stata(\"USER_RLMS-HSE_IND_1994_2017_v2_eng.dta\")\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/util/_decorators.py in wrapper(*args, **kwargs)\r\n    186                 else:\r\n    187                     kwargs[new_arg_name] = new_arg_value\r\n--> 188             return func(*args, **kwargs)\r\n    189         return wrapper\r\n    190     return _deprecate_kwarg\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/util/_decorators.py in wrapper(*args, **kwargs)\r\n    186                 else:\r\n    187                     kwargs[new_arg_name] = new_arg_value\r\n--> 188             return func(*args, **kwargs)\r\n    189         return wrapper\r\n    190     return _deprecate_kwarg\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/io/stata.py in read_stata(filepath_or_buffer, convert_dates, convert_categoricals, encoding, index_col, convert_missing, preserve_dtypes, columns, order_categoricals, chunksize, iterator)\r\n    190     else:\r\n    191         try:\r\n--> 192             data = reader.read()\r\n    193         finally:\r\n    194             reader.close()\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/util/_decorators.py in wrapper(*args, **kwargs)\r\n    186                 else:\r\n    187                     kwargs[new_arg_name] = new_arg_value\r\n--> 188             return func(*args, **kwargs)\r\n    189         return wrapper\r\n    190     return _deprecate_kwarg\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/io/stata.py in read(self, nrows, convert_dates, convert_categoricals, index_col, convert_missing, preserve_dtypes, columns, order_categoricals)\r\n   1593                                                  self.value_label_dict,\r\n   1594                                                  self.lbllist,\r\n-> 1595                                                  order_categoricals)\r\n   1596 \r\n   1597         if not preserve_dtypes:\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/io/stata.py in _do_convert_categoricals(self, data, value_label_dict, lbllist, order_categoricals)\r\n   1717                                      'unique. The repeated labels are:\\n'\r\n   1718                                      '{repeats}'\r\n-> 1719                                      .format(col=col, repeats=repeats))\r\n   1720                 # TODO: is the next line needed above in the data(...) method?\r\n   1721                 cat_data = Series(cat_data, index=data.index)\r\n\r\nValueError: Value labels for column I4 are not unique. The repeated labels are:\r\n\r\n--------------------------------------------------------------------------------european\r\ntsumadin\r\n\r\n</details>\r\n\r\n#### `pd.show_versions()`\r\n\r\n<details>\r\n\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: None\r\npython: 3.6.8.final.0\r\npython-bits: 64\r\nOS: Linux\r\nOS-release: 4.15.0-46-generic\r\nmachine: x86_64\r\nprocessor: x86_64\r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: en_US.UTF-8\r\nLOCALE: en_US.UTF-8\r\n\r\npandas: 0.24.2\r\npytest: 4.3.1\r\npip: 19.0.3\r\nsetuptools: 40.8.0\r\nCython: 0.29.6\r\nnumpy: 1.16.2\r\nscipy: 1.2.1\r\npyarrow: None\r\nxarray: None\r\nIPython: 7.3.0\r\nsphinx: 1.8.5\r\npatsy: 0.5.1\r\ndateutil: 2.8.0\r\npytz: 2018.9\r\nblosc: None\r\nbottleneck: 1.2.1\r\ntables: 3.5.1\r\nnumexpr: 2.6.9\r\nfeather: None\r\nmatplotlib: 3.0.3\r\nopenpyxl: 2.6.1\r\nxlrd: 1.2.0\r\nxlwt: 1.3.0\r\nxlsxwriter: 1.1.5\r\nlxml.etree: 4.3.2\r\nbs4: 4.7.1\r\nhtml5lib: 1.0.1\r\nsqlalchemy: 1.3.1\r\npymysql: None\r\npsycopg2: None\r\njinja2: 2.10\r\ns3fs: None\r\nfastparquet: None\r\npandas_gbq: None\r\npandas_datareader: None\r\ngcsfs: None\r\n\r\n</details>\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474235252",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25772#issuecomment-474235252",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25772",
    "id": 474235252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDIzNTI1Mg==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T07:58:13Z",
    "updated_at": "2019-03-19T07:58:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seems to require a log-in to get the data file.  Can you share it by some other means?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474238976",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25772#issuecomment-474238976",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25772",
    "id": 474238976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDIzODk3Ng==",
    "user": {
      "login": "bdemeshev",
      "id": 1075773,
      "node_id": "MDQ6VXNlcjEwNzU3NzM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1075773?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bdemeshev",
      "html_url": "https://github.com/bdemeshev",
      "followers_url": "https://api.github.com/users/bdemeshev/followers",
      "following_url": "https://api.github.com/users/bdemeshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/bdemeshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bdemeshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bdemeshev/subscriptions",
      "organizations_url": "https://api.github.com/users/bdemeshev/orgs",
      "repos_url": "https://api.github.com/users/bdemeshev/repos",
      "events_url": "https://api.github.com/users/bdemeshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bdemeshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T08:12:33Z",
    "updated_at": "2019-03-19T08:12:33Z",
    "author_association": "NONE",
    "body": "Yes it requires login, but the registration is completely free. I think it will not be an abuse if I share it temporary for [a couple of hours](https://yadi.sk/d/AcztkxZSzAqN_w). "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474258390",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25772#issuecomment-474258390",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25772",
    "id": 474258390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDI1ODM5MA==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T09:14:27Z",
    "updated_at": "2019-03-19T09:14:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have downloaded it.  Takes a long time to load in pandas. \r\n\r\nOne hint that the file is not strictly valid: in Stata you get \r\n\r\n```\r\n(label K8_1 already defined)\r\n(label K8_2 already defined)\r\n```\r\n\r\nwhen loading the data. Doesn't mean it should crash necessarily. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474284572",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25772#issuecomment-474284572",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25772",
    "id": 474284572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDI4NDU3Mg==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T10:13:53Z",
    "updated_at": "2019-03-19T10:13:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have taken a look and the major isue is in replacing missing values.   This data set has many columns with missing columns. ~2600 out of 2700.  These are mostly integer columns, often byte (1 byte) which don't require much storage.  Converting these requires casting the values to doubles which requires 8 bytes/entry.  This effectively blows up the dataset by a factor if 4ish (some columns have larger types), which makes it impractically big.  I suppose the correct solution would be to use an extension type that supports the correct bit width and a missing value.  This needs the extension type API to stabilize.\r\n\r\nA side problem that is probably worth fixing is that the conversion of missing values is very slow.  I did a quick hack that reduced the conversion time by a factor of about 1000.\r\n\r\nFor now, you can use the lower level StataReader and not convert missing values (you will need to handle them your self).  That will get you past at least one problem. \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474305866",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25772#issuecomment-474305866",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25772",
    "id": 474305866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDMwNTg2Ng==",
    "user": {
      "login": "bdemeshev",
      "id": 1075773,
      "node_id": "MDQ6VXNlcjEwNzU3NzM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1075773?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bdemeshev",
      "html_url": "https://github.com/bdemeshev",
      "followers_url": "https://api.github.com/users/bdemeshev/followers",
      "following_url": "https://api.github.com/users/bdemeshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/bdemeshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bdemeshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bdemeshev/subscriptions",
      "organizations_url": "https://api.github.com/users/bdemeshev/orgs",
      "repos_url": "https://api.github.com/users/bdemeshev/repos",
      "events_url": "https://api.github.com/users/bdemeshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bdemeshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T10:57:19Z",
    "updated_at": "2019-03-19T10:57:19Z",
    "author_association": "NONE",
    "body": "Ok! Thanks for pointing the low level interface! Will try it :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474307702",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25772#issuecomment-474307702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25772",
    "id": 474307702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDMwNzcwMg==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T11:02:10Z",
    "updated_at": "2019-03-19T11:02:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "The other issue is that the labels are not unique.  That is, 2 values in stata are getting the same lable.  Pandas categoricals don't support this.  A work around:\r\n\r\n```\r\nfrom pandas.io.stata import StataReader\r\nfile_name = r'C:\\temp\\USER_RLMS-HSE_IND_1994_2017_v2_eng.dta'\r\nsr = StataReader(file_name, convert_missing=False, chunksize=1000, convert_categoricals=False)\r\nlabels = sr.value_labels()  # To use later\r\nfor block in sr:\r\n    temp = block\r\n    break\r\n```\r\nYou will then have to apply labels yourself, if you need them.\r\n"
  }
]
