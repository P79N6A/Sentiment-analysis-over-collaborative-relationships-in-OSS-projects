[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438467989",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11499#issuecomment-438467989",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11499",
    "id": 438467989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODQ2Nzk4OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-13T22:47:41Z",
    "updated_at": "2018-11-13T22:47:41Z",
    "author_association": "MEMBER",
    "body": "@Themanwithoutaplan : Sorry that this went unnoticed for **AWHILE** ! ðŸ˜® \r\n\r\nIs this something you would still be interested in pursuing?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438661331",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11499#issuecomment-438661331",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11499",
    "id": 438661331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODY2MTMzMQ==",
    "user": {
      "login": "Themanwithoutaplan",
      "id": 1080058,
      "node_id": "MDQ6VXNlcjEwODAwNTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1080058?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Themanwithoutaplan",
      "html_url": "https://github.com/Themanwithoutaplan",
      "followers_url": "https://api.github.com/users/Themanwithoutaplan/followers",
      "following_url": "https://api.github.com/users/Themanwithoutaplan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Themanwithoutaplan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Themanwithoutaplan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Themanwithoutaplan/subscriptions",
      "organizations_url": "https://api.github.com/users/Themanwithoutaplan/orgs",
      "repos_url": "https://api.github.com/users/Themanwithoutaplan/repos",
      "events_url": "https://api.github.com/users/Themanwithoutaplan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Themanwithoutaplan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T13:28:06Z",
    "updated_at": "2018-11-14T13:28:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung Sure. We've got a sprint coming up this weekend where I'll be working on this. I'd basically like to see the packages work together using explicit APIs rathe than the current, largely unavoidable, spaghetti code.\r\n\r\nSeems to me that a telco would make sense."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438784640",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11499#issuecomment-438784640",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11499",
    "id": 438784640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODc4NDY0MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T19:17:58Z",
    "updated_at": "2018-11-14T19:18:05Z",
    "author_association": "MEMBER",
    "body": "> I'd basically like to see the packages work together using explicit APIs rathe than the current, largely unavoidable, spaghetti code.\r\n\r\nThat makes a lot of sense to me.  I don't think any of us would object to making the Excel reading process a lot nicer to use and understand."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439107339",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11499#issuecomment-439107339",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11499",
    "id": 439107339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTEwNzMzOQ==",
    "user": {
      "login": "Themanwithoutaplan",
      "id": 1080058,
      "node_id": "MDQ6VXNlcjEwODAwNTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1080058?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Themanwithoutaplan",
      "html_url": "https://github.com/Themanwithoutaplan",
      "followers_url": "https://api.github.com/users/Themanwithoutaplan/followers",
      "following_url": "https://api.github.com/users/Themanwithoutaplan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Themanwithoutaplan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Themanwithoutaplan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Themanwithoutaplan/subscriptions",
      "organizations_url": "https://api.github.com/users/Themanwithoutaplan/orgs",
      "repos_url": "https://api.github.com/users/Themanwithoutaplan/repos",
      "events_url": "https://api.github.com/users/Themanwithoutaplan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Themanwithoutaplan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T16:44:44Z",
    "updated_at": "2018-11-15T16:44:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suspect that the XLS code will have to stay as it is because xlrd is now effectively abandonware. Personally, I'd think about deprecating it as a formatâ€¦ but anyway.\r\n\r\n2.6 will add the `values_only` parameter to `iter_rows`. My current tests suggest similar performance when reading worksheets to xlrd but with the added advantage of reading only the sheets you're interested in. Unsurprising really because the underlying code in both cases is ElementTree plus string to types. In addition, Pandas seems to do some heuristics to try and find relevant cell areas for those worksheets which aren't a row of headers followed by rows of data.\r\n\r\nFrom our side: it would be nice if DataFrame.columns could give richer information such as how many columns a heading is valid for. This would make writing dataframes to a stream a lot easier.\r\n\r\nIf you're around later today (I'm +0100) then we could perhaps discuss this over Hangouts or some such."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439135217",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11499#issuecomment-439135217",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11499",
    "id": 439135217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTEzNTIxNw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T18:04:29Z",
    "updated_at": "2018-11-15T18:04:29Z",
    "author_association": "MEMBER",
    "body": "> From our side: it would be nice if DataFrame.columns could give richer information such as how many columns a heading is valid for. This would make writing dataframes to a stream a lot easier.\r\n\r\nI think I see what you're saying, but I suggest opening an issue for this separately so as to explain more what you mean."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441273106",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11499#issuecomment-441273106",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11499",
    "id": 441273106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTI3MzEwNg==",
    "user": {
      "login": "Themanwithoutaplan",
      "id": 1080058,
      "node_id": "MDQ6VXNlcjEwODAwNTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1080058?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Themanwithoutaplan",
      "html_url": "https://github.com/Themanwithoutaplan",
      "followers_url": "https://api.github.com/users/Themanwithoutaplan/followers",
      "following_url": "https://api.github.com/users/Themanwithoutaplan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Themanwithoutaplan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Themanwithoutaplan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Themanwithoutaplan/subscriptions",
      "organizations_url": "https://api.github.com/users/Themanwithoutaplan/orgs",
      "repos_url": "https://api.github.com/users/Themanwithoutaplan/repos",
      "events_url": "https://api.github.com/users/Themanwithoutaplan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Themanwithoutaplan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-23T15:50:21Z",
    "updated_at": "2018-11-23T15:50:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW I've now released an alpha of 2.6 and backported the `values_only` parameter. Some performance [numbers using an existing file are available](https://openpyxl.readthedocs.io/en/2.6/performance.html). In particular for anything containing datetimes openpyxl is easier to work with as well as being faster.\r\n\r\nI'm not sure whether being able to run in parallel is useful for Pandas, nor whether this would be best using threads or processes: there is a lot of I/O but also quite a lot of CPU work.\r\n\r\nI'll also create a separate ticket for what I'd like to see in the Pandas API."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458403990",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11499#issuecomment-458403990",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11499",
    "id": 458403990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQwMzk5MA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T04:31:08Z",
    "updated_at": "2019-01-29T04:31:08Z",
    "author_association": "MEMBER",
    "body": "@Themanwithoutaplan I've been working to decouple xlrd in this code and have implemented a base class for excel reading which you can see below:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/3fd47fef4442a9a116e9bf37b607332551924179/pandas/io/excel.py#L379\r\n\r\nStill planning to shuffle things around but I'm hoping this represents an improvement over when you first started looking at this. PRs are always welcome and if there's anything I can do to assist feel free to reach out"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458642730",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11499#issuecomment-458642730",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11499",
    "id": 458642730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODY0MjczMA==",
    "user": {
      "login": "Themanwithoutaplan",
      "id": 1080058,
      "node_id": "MDQ6VXNlcjEwODAwNTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1080058?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Themanwithoutaplan",
      "html_url": "https://github.com/Themanwithoutaplan",
      "followers_url": "https://api.github.com/users/Themanwithoutaplan/followers",
      "following_url": "https://api.github.com/users/Themanwithoutaplan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Themanwithoutaplan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Themanwithoutaplan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Themanwithoutaplan/subscriptions",
      "organizations_url": "https://api.github.com/users/Themanwithoutaplan/orgs",
      "repos_url": "https://api.github.com/users/Themanwithoutaplan/repos",
      "events_url": "https://api.github.com/users/Themanwithoutaplan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Themanwithoutaplan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T18:00:38Z",
    "updated_at": "2019-01-29T18:00:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Still planning to shuffle things around but I'm hoping this represents an improvement over when you first started looking at this. PRs are always welcome and if there's anything I can do to assist feel free to reach out\r\n\r\nLooks a lot better (especially the writer code that doesn't have to worry about the different ways we've handled styles). The reader code is definitely less tightly coupled to xlrd than it was. You will probably want to use `read-only` mode with openpyxl.\r\n\r\nI notice you've got your own code for converting Excel coords to numerical indices but I think all the libraries their own robust functions you could probably use (ok, openpyxl uses 1-indexing) and your own evil code for handling headers with multiple layers. I'd really like to see this in the dataframe or index API, or anything that openpyl can use directly."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/459507448",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11499#issuecomment-459507448",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11499",
    "id": 459507448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTUwNzQ0OA==",
    "user": {
      "login": "tdamsma",
      "id": 7870803,
      "node_id": "MDQ6VXNlcjc4NzA4MDM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7870803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdamsma",
      "html_url": "https://github.com/tdamsma",
      "followers_url": "https://api.github.com/users/tdamsma/followers",
      "following_url": "https://api.github.com/users/tdamsma/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdamsma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdamsma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdamsma/subscriptions",
      "organizations_url": "https://api.github.com/users/tdamsma/orgs",
      "repos_url": "https://api.github.com/users/tdamsma/repos",
      "events_url": "https://api.github.com/users/tdamsma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdamsma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T21:10:04Z",
    "updated_at": "2019-01-31T21:10:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well if no one else has started this I'll see if I have some time this weekend to make an openpyxl reader. Hopefully I can reuse all the same tests, just swap out the engine. "
  }
]
