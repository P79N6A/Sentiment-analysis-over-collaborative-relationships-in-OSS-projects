[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401313034",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21676#issuecomment-401313034",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21676",
    "id": 401313034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTMxMzAzNA==",
    "user": {
      "login": "rgeens",
      "id": 511604,
      "node_id": "MDQ6VXNlcjUxMTYwNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/511604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgeens",
      "html_url": "https://github.com/rgeens",
      "followers_url": "https://api.github.com/users/rgeens/followers",
      "following_url": "https://api.github.com/users/rgeens/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgeens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgeens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgeens/subscriptions",
      "organizations_url": "https://api.github.com/users/rgeens/orgs",
      "repos_url": "https://api.github.com/users/rgeens/repos",
      "events_url": "https://api.github.com/users/rgeens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgeens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-29T10:15:11Z",
    "updated_at": "2018-06-29T10:15:11Z",
    "author_association": "NONE",
    "body": "Not sure to which degree this is related to https://github.com/pandas-dev/pandas/issues/18435 or not."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401510905",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21676#issuecomment-401510905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21676",
    "id": 401510905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTUxMDkwNQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-30T02:19:55Z",
    "updated_at": "2018-06-30T02:19:55Z",
    "author_association": "MEMBER",
    "body": "`equal` checks if two objects are the same while  `==` check if two objects are equal. In you example, the times are equal although they are in different timezones, but they aren't the same object\r\n\r\n```\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: utc = pd.Timestamp('2018-06-01 00:00:00+0000', tz='UTC', freq='H')\r\n\r\nIn [3]: brus = pd.Timestamp('2018-06-01 02:00:00+0200', tz='Europe/Brussels', freq='H')\r\n\r\nIn [4]: brus\r\nOut[4]: Timestamp('2018-06-01 02:00:00+0200', tz='Europe/Brussels', freq='H')\r\n\r\nIn [5]: utc\r\nOut[5]: Timestamp('2018-06-01 00:00:00+0000', tz='UTC', freq='H')\r\n\r\n# what .equals() checks, different objects\r\nIn [6]: brus is utc\r\nOut[6]: False\r\n\r\n# the same time although in different timezones.\r\nIn [7]: brus == utc\r\nOut[7]: True\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401706391",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21676#issuecomment-401706391",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21676",
    "id": 401706391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTcwNjM5MQ==",
    "user": {
      "login": "rgeens",
      "id": 511604,
      "node_id": "MDQ6VXNlcjUxMTYwNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/511604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgeens",
      "html_url": "https://github.com/rgeens",
      "followers_url": "https://api.github.com/users/rgeens/followers",
      "following_url": "https://api.github.com/users/rgeens/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgeens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgeens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgeens/subscriptions",
      "organizations_url": "https://api.github.com/users/rgeens/orgs",
      "repos_url": "https://api.github.com/users/rgeens/repos",
      "events_url": "https://api.github.com/users/rgeens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgeens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-02T08:12:27Z",
    "updated_at": "2018-07-02T08:13:37Z",
    "author_association": "NONE",
    "body": "But if `equals` checks if objects are the same with `is`, why is `equals` true in the examples below? The definition at https://pandas.pydata.org/pandas-docs/version/0.23/generated/pandas.DataFrame.equals.html seems to leave some room for interpretation. I suppose that the term 'same elements' there implies every simple value that isn't wrapped in some container structure?\r\n\r\n```\r\n>>> import pandas as pd\r\n>>> import pytz\r\n>>> d1 = pd.date_range(start='2018-06-01T00:00:00Z', periods=3, freq='1h', tz=pytz.UTC)\r\n>>> d2 = pd.date_range(start='2018-06-01T00:00:00Z', periods=3, freq='1h', tz=pytz.UTC)\r\n>>> d1 is d2\r\nFalse\r\n>>> d1 == d2\r\narray([ True,  True,  True])\r\n>>> d1.equals(d2)\r\nTrue\r\n>>> x = pd.DataFrame(data=[10,20,30], index=d1)\r\n>>> y = pd.DataFrame(data=[10,20,30], index=d2)\r\n>>> x is y\r\nFalse\r\n>>> x == y\r\n                              0\r\n2018-06-01 00:00:00+00:00  True\r\n2018-06-01 01:00:00+00:00  True\r\n2018-06-01 02:00:00+00:00  True\r\n>>> x.equals(y)\r\nTrue\r\n```\r\n\r\nIn your timestamp example, if the timezones are the same, `equals` will be true, but `is` will still be false.\r\n```\r\n>>> utc1 = pd.Timestamp('2018-06-01 00:00:00+0000', tz='UTC', freq='H')\r\n>>> utc2 = pd.Timestamp('2018-06-01 00:00:00+0000', tz='UTC', freq='H')\r\n>>> utc1 is utc2\r\nFalse\r\n>>> utc1 == utc2\r\nTrue\r\n```"
  }
]
