[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/144898108",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11216#issuecomment-144898108",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11216",
    "id": 144898108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDg5ODEwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T02:00:04Z",
    "updated_at": "2015-10-02T02:00:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche pls have a look.\n\nThis is not a bug per-se, more of not wanting to actually coerce these ATM (as this is a new type and _might_ be unexpected) as a user attested.\n\n```\n(Pdb) p data_frame\n  TextCol    DateCol             DateColWithTz  IntDateCol  FloatCol  IntCol  \\\n0   first 2000-01-03 2000-01-01 03:00:00-05:00   535852800      10.1       1   \n\n  BoolCol  IntColWithNull BoolColWithNull  \n0   False               1           False  \n(Pdb) p data_frame.dtypes\nTextCol                                                       object\nDateCol                                               datetime64[ns]\nDateColWithTz      datetime64[ns, psycopg2.tz.FixedOffsetTimezone...\nIntDateCol                                                     int64\nFloatCol                                                     float64\nIntCol                                                         int64\nBoolCol                                                         bool\nIntColWithNull                                                 int64\nBoolColWithNull                                                 bool\ndtype: object\n```\n\n```\n(Pdb) data_frame.DateColWithTz\n0   2000-01-01 03:00:00-05:00\nName: DateColWithTz, dtype: datetime64[ns, psycopg2.tz.FixedOffsetTimezone(offset=-300, name=None)]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145033395",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11216#issuecomment-145033395",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11216",
    "id": 145033395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTAzMzM5NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T14:16:46Z",
    "updated_at": "2015-10-02T14:16:46Z",
    "author_association": "MEMBER",
    "body": "@jreback thanks for working on this! xref https://github.com/pydata/pandas/pull/7364 were we also discussed some of these issues.\n\nThe main hesitation I feel for this is that with or without chunksize can give different results (what it can do anyway, but still ..). So I was thinking, maybe we should coerce the datetimes to utc either way, also if it are datetime objects.\n\nIt maybe also makes sense to return it as tz-aware data (but with utc timezone), since it is specified as aware in the database.\n\nI didn't yet look into your updated commit, but will come back to it this evening\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145033816",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11216#issuecomment-145033816",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11216",
    "id": 145033816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTAzMzgxNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T14:18:05Z",
    "updated_at": "2015-10-02T14:18:05Z",
    "author_association": "MEMBER",
    "body": "Note that what exactly is returned from postgres depends on the postgres server timezone settings (it stores it internally as UTC, and converts to the timezone of that setting on output)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145054311",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11216#issuecomment-145054311",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11216",
    "id": 145054311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTA1NDMxMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T15:07:18Z",
    "updated_at": "2015-10-02T15:07:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche but that's exactly the point. I wan to coerce _always_ to a naive tz (this is what this fixes). Its irrelevant whether you use chunksize, pass parse_dates, or use query.\n\nas I said I think that we can remove this at some point to pass thru a 'better' tz.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145132291",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11216#issuecomment-145132291",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11216",
    "id": 145132291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTEzMjI5MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T19:30:03Z",
    "updated_at": "2017-01-16T10:56:11Z",
    "author_association": "MEMBER",
    "body": "@jreback I was reading through the gitter chat, and the `_harmonize_columns` etc is _only_ used for reading tables (so `read_sql_table`),  as in this case we have information about the supposed types for each column. For reading a query, we just receive the values as they are fetched by the driver and feed that to `DataFrame.from_records`. So there is only automatic coercing of types that happens in pandas anyways (eg list of datetime.datetime objects are coerced to the datetime64 dtype).\r\n\r\nSo in this case, the starting point if we have a column 'timestamp with timezone' (for postgresql in this case), is the following:\r\n\r\n```\r\n[datetime.datetime(2012, 1, 1, 9, 0, tzinfo=psycopg2.tz.FixedOffsetTimezone(offset=60, name=None)), \r\n datetime.datetime(2012, 6, 1, 9, 0, tzinfo=psycopg2.tz.FixedOffsetTimezone(offset=60, name=None))]\r\n```\r\n\r\nWhen this is feeded into a pandas objects, previously this gave an object dtype preserving the above objects. Now, in master after the introduction of the datetime tz, this gives:\r\n\r\n```\r\nIn [38]: s = pd.Series([datetime.datetime(2012, 1, 1, 9, 0, tzinfo=psycopg2.tz.FixedOffsetTimezone(offset=60, name=None)), \r\n               datetime.datetime(2012, 6, 1, 9, 0, tzinfo=psycopg2.tz.FixedOffsetTimezone(offset=60, name=None))])\r\n\r\nIn [39]: s\r\nOut[39]:\r\n0   2012-01-01 09:00:00+01:00\r\n1   2012-06-01 09:00:00+01:00\r\ndtype: datetime64[ns, psycopg2.tz.FixedOffsetTimezone(offset=60, name=None)]\r\n```\r\n\r\nI agree that the above is not very useful, so coercing it to UTC is probably a good idea (= what you do in this PR, the only question is do we want naive or aware UTC). \r\nThe problem, however, is that once there is a DST change in the timeseries, you still get object dtype because the datetime tz obviously supports only a uniform timezone:\r\n\r\n```\r\nIn [40]: sb = pd.Series([datetime.datetime(2012, 1, 1, 9, 0, tzinfo=psycopg2.tz.FixedOffsetTimezone(offset=60, name=None)), \r\n               datetime.datetime(2012, 6, 1, 9, 0, tzinfo=psycopg2.tz.FixedOffsetTimezone(offset=120, name=None))])\r\n\r\nIn [41]: sb\r\nOut[41]: \r\n0    2012-01-01 09:00:00+01:00\r\n1    2012-06-01 09:00:00+02:00\r\ndtype: object\r\n```\r\n\r\nAnd what I meant with chunksize giving a different result: if you chunk the above (like in the tests) in two sets of one row, you get two times a series with a uniform timezone, so they are coerced to datetime64. And when combined together with concat they are casted to naive:\r\n\r\n```\r\nIn [24]: s1 = pd.Series([datetime.datetime(2012, 1, 1, 9, 0, tzinfo=psycopg2.tz.FixedOffsetTimezone(offset=60, name=None))])\r\n\r\nIn [25]: s2 = pd.Series([datetime.datetime(2012, 6, 1, 9, 0, tzinfo=psycopg2.tz.FixedOffsetTimezone(offset=120, name=None))])\r\n\r\nIn [26]: s1.dtype\r\nOut[26]:\r\ndatetime64[ns, psycopg2.tz.FixedOffsetTimezone(offset=60, name=None)]\r\n\r\nIn [27]: s2.dtype\r\nOut[27]:\r\ndatetime64[ns, psycopg2.tz.FixedOffsetTimezone(offset=120, name=None)]\r\n\r\nIn [28]: pd.concat([s1, s2])\r\nOut[28]:\r\n0   2012-01-01 08:00:00\r\n0   2012-06-01 07:00:00\r\ndtype: datetime64[ns]\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145160557",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11216#issuecomment-145160557",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11216",
    "id": 145160557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTE2MDU1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T21:35:23Z",
    "updated_at": "2015-10-02T21:35:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \n\nWe can't currently force postgres to actually create a `datetime with timezone` column (unless you pass the dtype manually). So unless the table is existing and created this way (and in this case it was), I am not really sure whether to return naive or converted to `UTC` or the actual timezone. Hmm. I think its reasonable to return `datetime64[ns, UTC]` as that preserves the fact that this was a timezone type (though we are 'loosing' the timezone nature itself), but that can be remedied later.\n"
  }
]
