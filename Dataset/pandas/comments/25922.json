[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478044477",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-478044477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 478044477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODA0NDQ3Nw==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-29T15:38:48Z",
    "updated_at": "2019-04-05T10:03:03Z",
    "author_association": "NONE",
    "body": "Hello @vnlitvin! Thanks for updating this PR. We checked the lines you've touched for [PEP 8](https://www.python.org/dev/peps/pep-0008) issues, and found:\n\n\n\n\n\nThere are currently no PEP 8 issues detected in this Pull Request. Cheers! :beers: \n\n##### Comment last updated at 2019-04-05 10:03:02 UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478049788",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-478049788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 478049788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODA0OTc4OA==",
    "user": {
      "login": "vnlitvin",
      "id": 45396231,
      "node_id": "MDQ6VXNlcjQ1Mzk2MjMx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45396231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vnlitvin",
      "html_url": "https://github.com/vnlitvin",
      "followers_url": "https://api.github.com/users/vnlitvin/followers",
      "following_url": "https://api.github.com/users/vnlitvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vnlitvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vnlitvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vnlitvin/subscriptions",
      "organizations_url": "https://api.github.com/users/vnlitvin/orgs",
      "repos_url": "https://api.github.com/users/vnlitvin/repos",
      "events_url": "https://api.github.com/users/vnlitvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vnlitvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-29T15:52:31Z",
    "updated_at": "2019-03-29T15:52:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Performance benefits, shown by `asv continuous -f 1.01 upstream/master parse-slashed-date -e -b io.csv.ReadCSVParseSpecialDate -a sample_time=1 -a warmup_time=1`:\r\n\r\nbefore|after|ratio|test name\r\n-|-|-|-\r\n[1d4c89f4]|[72a6ed8c]||\r\n**master**|**parse-slashed-date**||\r\n721±10ms|44.3±2ms|0.06|io.csv.ReadCSVParseSpecialDate.time_read_special_date('mY')\r\n493±4ms|17.9±0.3ms|0.04|io.csv.ReadCSVParseSpecialDate.time_read_special_date('mdY')"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478061011",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-478061011",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 478061011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODA2MTAxMQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-03-29T16:23:01Z",
    "updated_at": "2019-03-29T16:23:01Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25922?src=pr&el=h1) Report\n> Merging [#25922](https://codecov.io/gh/pandas-dev/pandas/pull/25922?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/1d4c89f4d747854def6c32733383b4afa250165d?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/25922/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/25922?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #25922      +/-   ##\n==========================================\n- Coverage    91.8%   91.79%   -0.01%     \n==========================================\n  Files         174      174              \n  Lines       52536    52536              \n==========================================\n- Hits        48231    48227       -4     \n- Misses       4305     4309       +4\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.35% <ø> (ø)` | :arrow_up: |\n| #single | `41.87% <ø> (-0.08%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/25922?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/25922/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `75% <0%> (-12.5%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/25922/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `96.79% <0%> (-0.12%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25922?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25922?src=pr&el=footer). Last update [1d4c89f...72a6ed8](https://codecov.io/gh/pandas-dev/pandas/pull/25922?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478061098",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-478061098",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 478061098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODA2MTA5OA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-03-29T16:23:17Z",
    "updated_at": "2019-04-05T10:03:44Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25922?src=pr&el=h1) Report\n> Merging [#25922](https://codecov.io/gh/pandas-dev/pandas/pull/25922?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/3989e474eea3d998a25c6219b19333696aca040e?src=pr&el=desc) will **increase** coverage by `0.03%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/25922/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/25922?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #25922      +/-   ##\n==========================================\n+ Coverage   91.82%   91.85%   +0.03%     \n==========================================\n  Files         175      175              \n  Lines       52580    52543      -37     \n==========================================\n- Hits        48279    48263      -16     \n+ Misses       4301     4280      -21\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.4% <ø> (+0.04%)` | :arrow_up: |\n| #single | `41.9% <ø> (-0.07%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/25922?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/25922/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `75% <0%> (-12.5%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/25922/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `96.79% <0%> (-0.12%)` | :arrow_down: |\n| [pandas/util/\\_decorators.py](https://codecov.io/gh/pandas-dev/pandas/pull/25922/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvX2RlY29yYXRvcnMucHk=) | `91.42% <0%> (-0.09%)` | :arrow_down: |\n| [pandas/core/internals/construction.py](https://codecov.io/gh/pandas-dev/pandas/pull/25922/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL2NvbnN0cnVjdGlvbi5weQ==) | `95.88% <0%> (-0.02%)` | :arrow_down: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/25922/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `90.72% <0%> (-0.01%)` | :arrow_down: |\n| [pandas/core/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/25922/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvY29tbW9uLnB5) | `98.38% <0%> (-0.01%)` | :arrow_down: |\n| [pandas/io/packers.py](https://codecov.io/gh/pandas-dev/pandas/pull/25922/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL3BhY2tlcnMucHk=) | `88.08% <0%> (ø)` | :arrow_up: |\n| [pandas/io/formats/csvs.py](https://codecov.io/gh/pandas-dev/pandas/pull/25922/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvY3N2cy5weQ==) | `98.2% <0%> (ø)` | :arrow_up: |\n| [pandas/core/sparse/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/25922/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc3BhcnNlL3Nlcmllcy5weQ==) | `93.3% <0%> (ø)` | :arrow_up: |\n| [pandas/core/dtypes/inference.py](https://codecov.io/gh/pandas-dev/pandas/pull/25922/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2luZmVyZW5jZS5weQ==) | `98.41% <0%> (ø)` | :arrow_up: |\n| ... and [20 more](https://codecov.io/gh/pandas-dev/pandas/pull/25922/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25922?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25922?src=pr&el=footer). Last update [3989e47...4d5c1fc](https://codecov.io/gh/pandas-dev/pandas/pull/25922?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478096614",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-478096614",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 478096614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODA5NjYxNA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-29T18:08:01Z",
    "updated_at": "2019-03-29T18:08:01Z",
    "author_association": "MEMBER",
    "body": "xref https://github.com/pandas-dev/pandas/issues/12667\r\n\r\nI like the spirit of of this PR, but i am a little weary of the creep in scope. pandas does have some date parsing utility especially for iso dates, but I feel that more niche formats should be dispatched to dateutil i.e. maybe dateutil should inherit this performance improvement\r\n\r\nThoughts @jbrockmendel?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478104577",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-478104577",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 478104577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODEwNDU3Nw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-29T18:32:30Z",
    "updated_at": "2019-03-29T18:32:30Z",
    "author_association": "MEMBER",
    "body": "I agree with @mroeschke about creep scope.  Do we have strong reason to believe that performance on this particular set of formats is a major pain point for users?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478244589",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-478244589",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 478244589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODI0NDU4OQ==",
    "user": {
      "login": "vnlitvin",
      "id": 45396231,
      "node_id": "MDQ6VXNlcjQ1Mzk2MjMx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45396231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vnlitvin",
      "html_url": "https://github.com/vnlitvin",
      "followers_url": "https://api.github.com/users/vnlitvin/followers",
      "following_url": "https://api.github.com/users/vnlitvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vnlitvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vnlitvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vnlitvin/subscriptions",
      "organizations_url": "https://api.github.com/users/vnlitvin/orgs",
      "repos_url": "https://api.github.com/users/vnlitvin/repos",
      "events_url": "https://api.github.com/users/vnlitvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vnlitvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-30T13:13:37Z",
    "updated_at": "2019-03-30T13:13:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I agree with @mroeschke about creep scope. Do we have strong reason to believe that performance on this particular set of formats is a major pain point for users?\r\n\r\nAs far as I can tell, `dateutil` is pure-Python by design, so it would be really hard to integrate this there.\r\nI don't see why this date format should be treated differently than ISO8601 one (our parsing is definitely way easier to maintain than that).\r\n\r\nAs for being a pain point - this format is quite widely used in certain real-world data sets, like Mortgage or NYC Taxi Rides, so yes, it _is_ a pain point in some cases (Mortgage dataset that takes dozens of minutes to be loaded _because_ of this format being parsed slowly is the reality I measured)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478254918",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-478254918",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 478254918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODI1NDkxOA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-30T15:13:48Z",
    "updated_at": "2019-03-30T15:13:48Z",
    "author_association": "MEMBER",
    "body": "> As far as I can tell, dateutil is pure-Python by design, so it would be really hard to integrate this there.\r\n\r\ndateutil is pure-python, but it also has lots of room for performance improvement.  Also IIRC @pganssle has been considering adding C/cython/rust backend(s).\r\n\r\n> I don't see why this date format should be treated differently than ISO8601 one (our parsing is definitely way easier to maintain than that)\r\n\r\nThat logic can apply to many formats, most of which we don't want to be responsible for internally.\r\n\r\n> Mortgage dataset that takes dozens of minutes to be loaded because of this format being parsed slowly\r\n\r\nI think if you pass the `format` kwarg to `to_datetime` it should use `array_strptime`, which I expect would be performant."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478539999",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-478539999",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 478539999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODUzOTk5OQ==",
    "user": {
      "login": "vnlitvin",
      "id": 45396231,
      "node_id": "MDQ6VXNlcjQ1Mzk2MjMx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45396231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vnlitvin",
      "html_url": "https://github.com/vnlitvin",
      "followers_url": "https://api.github.com/users/vnlitvin/followers",
      "following_url": "https://api.github.com/users/vnlitvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vnlitvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vnlitvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vnlitvin/subscriptions",
      "organizations_url": "https://api.github.com/users/vnlitvin/orgs",
      "repos_url": "https://api.github.com/users/vnlitvin/repos",
      "events_url": "https://api.github.com/users/vnlitvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vnlitvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-01T11:22:46Z",
    "updated_at": "2019-04-01T11:22:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think if you pass the `format` kwarg to `to_datetime` it should use `array_strptime`, which I expect would be performant.\r\n\r\nThere's no direct way of passing `format` argument to `to_datetime()` from `read_csv`. I have prototyped passing the argument to run a benchmark, though, and measured the performance.\r\nIt is performing roughly the same (in the margin of error), but it requires the caller of `read_csv` to know date format beforehand (including knowing the separator, so if different separators are for some reason used in different rows this would fail to parse correctly).\r\n\r\ndate format|`format` + `array_strptime`|proposed PR\r\n-|-|-\r\nmY |     43.9±0.4ms   |43.5±0.3ms\r\nmdY|     16.4±0.08ms |  16.5±0.2ms\r\n\r\nSo I'm stating that using `format` keyword here could save from implementing our speed ups, yes, but at expense of end user knowing the format of input data, while our PR makes parsing almost equally fast without requiring knowledge from the user (and keeping public API unchanged! 😄  )."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478739958",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-478739958",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 478739958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODczOTk1OA==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-01T20:43:14Z",
    "updated_at": "2019-04-01T20:43:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does this not need additional tests?\r\n\r\nI can't comment on the scoping stuff, but one of the hardest parts of changing any auto-magical interface is that it's *very* hard to tell if the things you are doing are going to break something someone is counting on. Even something like this with a fast-path, you should probably be doing a decent amount of testing of the desired behavior *and* similar, related behavior - hard to even say what that would do.\r\n\r\nSince you are trying to replace `dateutil.parser.parse`, this may be an ideal situation to use [hypothesis](https://github.com/HypothesisWorks/hypothesis), because you can test the property \"this function returns the same thing as `dateutil`\" for all kinds of formats, since you're looking for something that is basically a faster version of `dateutil`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478746725",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-478746725",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 478746725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODc0NjcyNQ==",
    "user": {
      "login": "vnlitvin",
      "id": 45396231,
      "node_id": "MDQ6VXNlcjQ1Mzk2MjMx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45396231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vnlitvin",
      "html_url": "https://github.com/vnlitvin",
      "followers_url": "https://api.github.com/users/vnlitvin/followers",
      "following_url": "https://api.github.com/users/vnlitvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vnlitvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vnlitvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vnlitvin/subscriptions",
      "organizations_url": "https://api.github.com/users/vnlitvin/orgs",
      "repos_url": "https://api.github.com/users/vnlitvin/repos",
      "events_url": "https://api.github.com/users/vnlitvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vnlitvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-01T21:02:42Z",
    "updated_at": "2019-04-01T21:02:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Does this not need additional tests?\r\n\r\nGreat question, it most likely does need tests, we'll add some."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478982317",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-478982317",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 478982317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODk4MjMxNw==",
    "user": {
      "login": "anmyachev",
      "id": 45976948,
      "node_id": "MDQ6VXNlcjQ1OTc2OTQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45976948?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anmyachev",
      "html_url": "https://github.com/anmyachev",
      "followers_url": "https://api.github.com/users/anmyachev/followers",
      "following_url": "https://api.github.com/users/anmyachev/following{/other_user}",
      "gists_url": "https://api.github.com/users/anmyachev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anmyachev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anmyachev/subscriptions",
      "organizations_url": "https://api.github.com/users/anmyachev/orgs",
      "repos_url": "https://api.github.com/users/anmyachev/repos",
      "events_url": "https://api.github.com/users/anmyachev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anmyachev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-02T12:55:35Z",
    "updated_at": "2019-04-02T12:55:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have added tests and fixed bug. Thanks @pganssle"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479519407",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-479519407",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 479519407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTUxOTQwNw==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T14:41:30Z",
    "updated_at": "2019-04-03T14:41:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Glad that it helped to add tests.\r\n\r\nMaybe it's a job for a different PR, but I do still think it may be worth adding hypothesis-based tests testing that `dateutil` and `pandas` return the same thing for a wide swathe of dates and formats. It's super easy to change something about datetime parsing logic and change some use case you didn't think about."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479537625",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-479537625",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 479537625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTUzNzYyNQ==",
    "user": {
      "login": "vnlitvin",
      "id": 45396231,
      "node_id": "MDQ6VXNlcjQ1Mzk2MjMx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45396231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vnlitvin",
      "html_url": "https://github.com/vnlitvin",
      "followers_url": "https://api.github.com/users/vnlitvin/followers",
      "following_url": "https://api.github.com/users/vnlitvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vnlitvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vnlitvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vnlitvin/subscriptions",
      "organizations_url": "https://api.github.com/users/vnlitvin/orgs",
      "repos_url": "https://api.github.com/users/vnlitvin/repos",
      "events_url": "https://api.github.com/users/vnlitvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vnlitvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T15:24:38Z",
    "updated_at": "2019-04-03T15:24:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "> testing that `dateutil` and `pandas` return the same thing for a wide swathe of dates and formats\r\n\r\nNote that this change changes the behaviour for dates like `MM/YYYY` slightly, as `dateutil` parses `MM/YYYY` with day set equal to current day while our patch parses it set to `1`. I think our approach is more consistent with how other abbreviated dates are parsed, see \r\n\r\nhttps://github.com/pandas-dev/pandas/blob/4814a2875d078d6e9e9300bd1f77af15ef4f0f0a/pandas/_libs/tslibs/parsing.pyx#L195-L298\r\n\r\nIt never replaces `day` in `_DEFAULT_DATETIME` so day stays `1` there.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479540886",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-479540886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 479540886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTU0MDg4Ng==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T15:32:18Z",
    "updated_at": "2019-04-03T15:32:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vnlitvin While I think defaulting to \"today\" was not a good choice in `dateutil`, the reason I have not changed that is that it would be a backwards-incompatible change.\r\n\r\nIf you are going to make a backwards-incompatible change to the behavior of the library, that should be **very** prominently documented. This change is only documented as a performance improvement."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479546728",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-479546728",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 479546728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTU0NjcyOA==",
    "user": {
      "login": "vnlitvin",
      "id": 45396231,
      "node_id": "MDQ6VXNlcjQ1Mzk2MjMx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45396231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vnlitvin",
      "html_url": "https://github.com/vnlitvin",
      "followers_url": "https://api.github.com/users/vnlitvin/followers",
      "following_url": "https://api.github.com/users/vnlitvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vnlitvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vnlitvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vnlitvin/subscriptions",
      "organizations_url": "https://api.github.com/users/vnlitvin/orgs",
      "repos_url": "https://api.github.com/users/vnlitvin/repos",
      "events_url": "https://api.github.com/users/vnlitvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vnlitvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T15:46:22Z",
    "updated_at": "2019-04-03T15:46:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "> This change is only documented as a performance improvement.\r\n\r\nThat is because I didn't suspect that `dateutil` would use today's day for some unrelated date :)\r\nWe will update `whatsnew` with this change."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479619558",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-479619558",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 479619558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTYxOTU1OA==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T19:06:18Z",
    "updated_at": "2019-04-03T19:06:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vnlitvin You wrote:\r\n\r\n> There's no direct way of passing format argument to to_datetime() from read_csv.\r\n\r\nYes, there is.  You can use something like the following for a MM/YYYY format:\r\n```\r\ndf = pd.read_csv(filename, date_parser = lambda d:pd.to_datetime(d, format=\"%m/%Y\")\r\n```\r\n\r\nI believe this will use a C implementation of the parser and be very fast.  Can you test that and compare it to what you have put together to see if there is still a significant difference?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479666654",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-479666654",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 479666654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTY2NjY1NA==",
    "user": {
      "login": "vnlitvin",
      "id": 45396231,
      "node_id": "MDQ6VXNlcjQ1Mzk2MjMx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45396231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vnlitvin",
      "html_url": "https://github.com/vnlitvin",
      "followers_url": "https://api.github.com/users/vnlitvin/followers",
      "following_url": "https://api.github.com/users/vnlitvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vnlitvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vnlitvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vnlitvin/subscriptions",
      "organizations_url": "https://api.github.com/users/vnlitvin/orgs",
      "repos_url": "https://api.github.com/users/vnlitvin/repos",
      "events_url": "https://api.github.com/users/vnlitvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vnlitvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T21:31:28Z",
    "updated_at": "2019-04-03T21:31:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I believe this will use a C implementation of the parser and be very fast. Can you test that and compare it to what you have put together to see if there is still a significant difference?\r\n\r\nSure, thanks for pointing the way.\r\nHere's the results of measuring stuff:\r\n\r\nformat|master|to_datetime|proposed PR\r\n-|-|-|-\r\n%m/%Y (3 times)|689±5ms|103±0.8ms|43.3±0.5ms\r\n%m/%d/%Y|457±3ms|37.1±0.3ms|16.6±0.2ms\r\n\r\nSo this `pd.to_datetime` approach is about 2.2x slower than proposed patch, _plus_ user has to know date format beforehand, _plus_ one cannot have mixed dates (like `15/02/2000` and `03/18/2010`). Both current master and our proposed patch allow for _not_ knowing the format and being able to mix MM/DD and DD/MM (I see no use case for that, but still), but ours is about 20x faster."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479822765",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-479822765",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 479822765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTgyMjc2NQ==",
    "user": {
      "login": "vnlitvin",
      "id": 45396231,
      "node_id": "MDQ6VXNlcjQ1Mzk2MjMx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45396231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vnlitvin",
      "html_url": "https://github.com/vnlitvin",
      "followers_url": "https://api.github.com/users/vnlitvin/followers",
      "following_url": "https://api.github.com/users/vnlitvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vnlitvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vnlitvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vnlitvin/subscriptions",
      "organizations_url": "https://api.github.com/users/vnlitvin/orgs",
      "repos_url": "https://api.github.com/users/vnlitvin/repos",
      "events_url": "https://api.github.com/users/vnlitvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vnlitvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T09:28:30Z",
    "updated_at": "2019-04-04T09:28:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @vnlitvin While I think defaulting to \"today\" was not a good choice in `dateutil`, the reason I have not changed that is that it would be a backwards-incompatible change.\r\n> \r\n> If you are going to make a backwards-incompatible change to the behavior of the library, that should be **very** prominently documented. This change is only documented as a performance improvement.\r\n\r\nAfter more carefully looking into the code and performing some tests via `pandas.read_csv` (thx @anmyachev for running these!) instead of `dateutil.parser.parse` we found that we are not changing the behaviour, as Pandas have already been parsing `MM/YYYY` with day=`1` - they effectively supply \"default date\" to `dateutil` equal to `01/01/0001`.\r\n\r\nSo we're actually _not_ changing the behaviour! :) _whew_"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479931901",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-479931901",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 479931901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTkzMTkwMQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T14:55:43Z",
    "updated_at": "2019-04-04T14:55:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vnlitvin Glad to hear that.\r\n\r\n@jbrockmendel Do you know anything about the current state of the pandas datetime parsing test suite? Do you think it's got adequate format coverage to feel confident enough that there will be no behavior change from this PR? If so I'll stop pushing for the property-based test suite in this PR. If not, it may require a more careful assessment of the possible edge cases."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479947185",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25922#issuecomment-479947185",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25922",
    "id": 479947185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTk0NzE4NQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T15:32:35Z",
    "updated_at": "2019-04-04T15:32:35Z",
    "author_association": "MEMBER",
    "body": "> Do you know anything about the current state of the pandas datetime parsing test suite?\r\n\r\nReasonably thorough, not as centralized as they could/should be (ideally this would be easy for a newcomer/auditor to check for themselves).\r\n\r\ntests.tslibs.test_array_to_datetime\r\ntests.tslibs.test_parse_iso8601\r\ntests.tslibs.test_parsing\r\ntests.indexes.datetimes.test_tools\r\ntests.scalar.timestamp.test_timestamp\r\n\r\n>  If so I'll stop pushing for the property-based test suite in this PR [...] possible edge cases \r\n\r\nI think this is worthwhile.  A very simple test would take _any_ string and assert (match or both raise).\r\n\r\nI'm still not sold on this PR being something that should be done in pandas.  I'd rather go in the direction of seeing less parsing code in pandas and relying on dateutil more (possibly pending the compiled dateutil backend discussed elsewhere)"
  }
]
