[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108060787",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9584#issuecomment-108060787",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9584",
    "id": 108060787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODA2MDc4Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T19:09:03Z",
    "updated_at": "2015-06-02T19:21:10Z",
    "author_association": "MEMBER",
    "body": "@njsmith I changed the title, as this is not specific to the categorical example\n\nThis was brought to my attention again by the discussion in ipython about changing the default visibility of DeprecationWarnings (https://github.com/ipython/ipython/issues/8478)\n\nBasically, in plain warning calls, we should use `stacklevel=2`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108069585",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9584#issuecomment-108069585",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9584",
    "id": 108069585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODA2OTU4NQ==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T19:34:55Z",
    "updated_at": "2015-06-02T19:34:55Z",
    "author_association": "NONE",
    "body": "Rule of thumb: Calling `warnings.warn` without specifying a `stacklevel=` is _always_ a bug.\n\nHere's a summary of what's at stake, since as @jorisvandenbossche pointed out in the ipython discussion the docs are somewhat confusing. It's actually pretty simple. Say I have this code:\n\n```\ndef f():\n    warnings.warn(\"this is deprecated\", category=DeprecationWarning, stacklevel=X)\n\ndef g():\n    f()\n```\n\nIf `X` is 1 (the default), then Python will print a warning saying \"`f` is doing something wrong -- it's using deprecated functionality\". If `X` is 2 (what you usually want, esp. for deprecation warnings), then Python will print a warning saying \"`g` is doing something wrong -- it's using deprecated functionality\".\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108076175",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9584#issuecomment-108076175",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9584",
    "id": 108076175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODA3NjE3NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T19:50:13Z",
    "updated_at": "2015-06-02T19:50:13Z",
    "author_association": "MEMBER",
    "body": "Thanks @njsmith for the overview!\n\nFor pandas it means that\n- most direct uses of `FutureWarning` (inside functions) need a `stacklevel=2`\n- we have a `deprecate(..)` function: here `stacklevel=2` works as well (has only to be changed in `utils/decorators.py`\n- we have a `deprecate_kwarg` decorator: I tested this one, and apparantly a `stacklevel=2` is also the correct one\n- only for the ones on import (eg rpy: https://github.com/pydata/pandas/blob/master/pandas/rpy/__init__.py) we don't have to change anything (as you cannot get this right for all python versions -> @njsmith correct?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/109444909",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9584#issuecomment-109444909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9584",
    "id": 109444909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTQ0NDkwOQ==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-05T21:25:36Z",
    "updated_at": "2015-06-05T21:25:36Z",
    "author_association": "NONE",
    "body": "For warn-on-import for deprecated modules/packages, you should also use `stacklevel=2`. This works correctly on Python 2.7 (so... like 80%+ of your users), and will hopefully get fixed to work correctly on python 3 as well (see: https://bugs.python.org/issue24305)\n"
  }
]
