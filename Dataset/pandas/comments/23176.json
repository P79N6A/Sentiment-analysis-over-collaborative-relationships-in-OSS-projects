[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430392351",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23176#issuecomment-430392351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23176",
    "id": 430392351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM5MjM1MQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T20:40:24Z",
    "updated_at": "2018-10-16T20:40:24Z",
    "author_association": "MEMBER",
    "body": "I'd argue that this is the correct behavior, albeit not documented clearly:\r\n\r\nhttps://pandas.pydata.org/pandas-docs/stable/generated/pandas.date_range.html\r\n\r\nThe order of operations is essentially: Create the dates from `start`, `end`, `periods`, and/or `freq` _and then_ use the `closed` argument to truncate the created dates if `None` isn't specified.\r\n\r\n```\r\n# start would be '2018-10-16 00:00:00',\r\n# end would be '2018-10-16 11:00:00'\r\nIn [13]: pd.DatetimeIndex(start=\"2018-10-16\", periods=12, freq=\"H\", closed=None)\r\nOut[13]:\r\nDatetimeIndex(['2018-10-16 00:00:00', '2018-10-16 01:00:00',\r\n               '2018-10-16 02:00:00', '2018-10-16 03:00:00',\r\n               '2018-10-16 04:00:00', '2018-10-16 05:00:00',\r\n               '2018-10-16 06:00:00', '2018-10-16 07:00:00',\r\n               '2018-10-16 08:00:00', '2018-10-16 09:00:00',\r\n               '2018-10-16 10:00:00', '2018-10-16 11:00:00'],\r\n              dtype='datetime64[ns]', freq='H')\r\n\r\n# This looks like a bug, '2018-10-16 11:00:00' shouldn't be included\r\nIn [14]: pd.DatetimeIndex(start=\"2018-10-16\", periods=12, freq=\"H\", closed='left')\r\nOut[14]:\r\nDatetimeIndex(['2018-10-16 00:00:00', '2018-10-16 01:00:00',\r\n               '2018-10-16 02:00:00', '2018-10-16 03:00:00',\r\n               '2018-10-16 04:00:00', '2018-10-16 05:00:00',\r\n               '2018-10-16 06:00:00', '2018-10-16 07:00:00',\r\n               '2018-10-16 08:00:00', '2018-10-16 09:00:00',\r\n               '2018-10-16 10:00:00', '2018-10-16 11:00:00'],\r\n              dtype='datetime64[ns]', freq='H')\r\n\r\nIn [15]: pd.DatetimeIndex(start=\"2018-10-16\", periods=12, freq=\"H\", closed='right')\r\nOut[15]:\r\nDatetimeIndex(['2018-10-16 01:00:00', '2018-10-16 02:00:00',\r\n               '2018-10-16 03:00:00', '2018-10-16 04:00:00',\r\n               '2018-10-16 05:00:00', '2018-10-16 06:00:00',\r\n               '2018-10-16 07:00:00', '2018-10-16 08:00:00',\r\n               '2018-10-16 09:00:00', '2018-10-16 10:00:00',\r\n               '2018-10-16 11:00:00'],\r\n              dtype='datetime64[ns]', freq='H')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430564593",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23176#issuecomment-430564593",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23176",
    "id": 430564593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDU2NDU5Mw==",
    "user": {
      "login": "Adirio",
      "id": 522770,
      "node_id": "MDQ6VXNlcjUyMjc3MA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/522770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Adirio",
      "html_url": "https://github.com/Adirio",
      "followers_url": "https://api.github.com/users/Adirio/followers",
      "following_url": "https://api.github.com/users/Adirio/following{/other_user}",
      "gists_url": "https://api.github.com/users/Adirio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Adirio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Adirio/subscriptions",
      "organizations_url": "https://api.github.com/users/Adirio/orgs",
      "repos_url": "https://api.github.com/users/Adirio/repos",
      "events_url": "https://api.github.com/users/Adirio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Adirio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T09:50:01Z",
    "updated_at": "2018-10-17T10:06:12Z",
    "author_association": "NONE",
    "body": "I do not agree. If you specify `periods` instead of `end` is because you want that size. The same should apply if you specify `end` and `periods`. You are considering that by specifying `periods` and only one of the boundaries the user wants to give you the two boundaries (that's what you are doing by saying it should end at `'2018-10-16 11:00:00'` while that is not true). The user just specified the `start` and the `periods`, why would you return one less `period` that specified?\r\n\r\nThe easy way to do this is always computing one period more than needed and then truncating to the number of periods specified. Only one is needed as it can not be opened on both sides (this bug happens when one of the boundaries is not given, so there is nothing to open or close in that side).\r\n\r\nEDIT: I edited the Issue to include the `end` and `closed=\"left\"` mirror bug."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430581229",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23176#issuecomment-430581229",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23176",
    "id": 430581229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDU4MTIyOQ==",
    "user": {
      "login": "Adirio",
      "id": 522770,
      "node_id": "MDQ6VXNlcjUyMjc3MA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/522770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Adirio",
      "html_url": "https://github.com/Adirio",
      "followers_url": "https://api.github.com/users/Adirio/followers",
      "following_url": "https://api.github.com/users/Adirio/following{/other_user}",
      "gists_url": "https://api.github.com/users/Adirio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Adirio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Adirio/subscriptions",
      "organizations_url": "https://api.github.com/users/Adirio/orgs",
      "repos_url": "https://api.github.com/users/Adirio/repos",
      "events_url": "https://api.github.com/users/Adirio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Adirio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T10:47:49Z",
    "updated_at": "2018-10-17T10:59:28Z",
    "author_association": "NONE",
    "body": "I found [a check in the code](https://github.com/pandas-dev/pandas/blob/v0.23.4/pandas/core/indexes/datetimes.py#L484-L487) that is suposed to prevent using `closed` with one of the boundaries not defined:\r\n\r\n```raise ValueError(\"Closed has to be None if not both of start and end are defined\")```\r\n\r\nIn the master branch this check is moved to [here](https://github.com/pandas-dev/pandas/blob/master/pandas/core/arrays/datetimes.py#L242-L245), but is still the same.\r\n\r\nThe problem with this error is that it never gets raised because the check is bugged, it checks for both to be `None` (`and`) instead of any of them (`or`).\r\n\r\nNow the issue changes. The question now is, why would you disallow to use `closed` if one of the boundaries is not defined? I will close this Issue and start a new one proposing to change this behaviour after I make a PR solving the `and`/`or` bug mentioned."
  }
]
