[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362807002",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-362807002",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 362807002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjgwNzAwMg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-02-03T13:40:21Z",
    "updated_at": "2018-02-22T16:31:53Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19520?src=pr&el=h1) Report\n> Merging [#19520](https://codecov.io/gh/pandas-dev/pandas/pull/19520?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/cd1b168cf0fe12d3d850e2f98e3e7164c649f274?src=pr&el=desc) will **increase** coverage by `0.04%`.\n> The diff coverage is `94.79%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/19520/graphs/tree.svg?height=150&width=650&token=eZ4WkYLtcO&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/19520?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #19520      +/-   ##\n==========================================\n+ Coverage   91.58%   91.63%   +0.04%     \n==========================================\n  Files         150      150              \n  Lines       48892    48931      +39     \n==========================================\n+ Hits        44780    44840      +60     \n+ Misses       4112     4091      -21\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.01% <94.79%> (+0.05%)` | :arrow_up: |\n| #single | `41.77% <61.45%> (-0.02%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/19520?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/dtypes/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/19520/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2NvbW1vbi5weQ==) | `94.16% <ø> (-1.22%)` | :arrow_down: |\n| [pandas/core/dtypes/dtypes.py](https://codecov.io/gh/pandas-dev/pandas/pull/19520/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2R0eXBlcy5weQ==) | `95.9% <ø> (-0.19%)` | :arrow_down: |\n| [pandas/core/indexing.py](https://codecov.io/gh/pandas-dev/pandas/pull/19520/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhpbmcucHk=) | `93.11% <ø> (ø)` | :arrow_up: |\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/19520/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `96.36% <100%> (-0.09%)` | :arrow_down: |\n| [pandas/core/dtypes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/19520/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2Jhc2UucHk=) | `91.66% <100%> (+44.04%)` | :arrow_up: |\n| [pandas/core/internals.py](https://codecov.io/gh/pandas-dev/pandas/pull/19520/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzLnB5) | `95.53% <100%> (+0.47%)` | :arrow_up: |\n| [pandas/core/dtypes/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/19520/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2dlbmVyaWMucHk=) | `100% <100%> (ø)` | :arrow_up: |\n| [pandas/core/algorithms.py](https://codecov.io/gh/pandas-dev/pandas/pull/19520/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYWxnb3JpdGhtcy5weQ==) | `94.18% <100%> (+0.01%)` | :arrow_up: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/19520/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.23% <100%> (ø)` | :arrow_up: |\n| [pandas/core/arrays/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/19520/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2Jhc2UucHk=) | `75.67% <100%> (+15.67%)` | :arrow_up: |\n| ... and [21 more](https://codecov.io/gh/pandas-dev/pandas/pull/19520/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19520?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19520?src=pr&el=footer). Last update [cd1b168...ea5562b](https://codecov.io/gh/pandas-dev/pandas/pull/19520?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363076975",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363076975",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363076975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzA3Njk3NQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-05T12:56:51Z",
    "updated_at": "2018-02-22T16:31:59Z",
    "author_association": "NONE",
    "body": "Hello @TomAugspurger! Thanks for updating the PR.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on February 22, 2018 at 16:31 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363078321",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363078321",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363078321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzA3ODMyMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-05T13:02:33Z",
    "updated_at": "2018-02-05T13:02:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added a test-case \"JSONArray\" that stores mappings."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363095260",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363095260",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363095260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzA5NTI2MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-05T14:11:07Z",
    "updated_at": "2018-02-13T14:43:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Meta-discussion, what methods should we consider \"necessary\" to work. Currently we have\r\n\r\n- constructors\r\n- slicing (`__getitem__`, `loc`, `iloc`)\r\n- reindex\r\n- isna\r\n- concat\r\n- memory_usage\r\n\r\nMy current TODO list includes\r\n\r\n- [x] dropna (will do here)\r\n- [ ] fillna\r\n- [x] value_counts\r\n- [ ] groupby (not too hard, but separate PR I think). This include algos like factorize and unique.\r\n- [ ] reductions (separate PR)\r\n- [ ] ops (separate PR)\r\n- [ ] cumulative ops (separate PR)\r\n\r\nAm I missing anything obvious? (cc @shoyer, @chris-b1 if you have opinions on this point)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363097713",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363097713",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363097713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzA5NzcxMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-05T14:20:10Z",
    "updated_at": "2018-02-05T14:20:10Z",
    "author_association": "MEMBER",
    "body": "For any kind of ops, my \"minimum\" is a (decent) error message for now. \r\nAlthough with my block-based implementation in geopandas, I had working comparison ops (at least equality, as greater/smaller than doesn't make sense for geometries), and only errors for arithmetic or reducing ops.\r\n\r\nI think `value_counts` will also need some kind of factorize/unique implementation?\r\n\r\nFurther:\r\n\r\n- `astype`: for now a good error message, but do we want a way to enable this in the future? (an `astype` on ExtensionArray ?)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363229905",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363229905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363229905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzIyOTkwNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-05T21:38:14Z",
    "updated_at": "2018-02-05T21:38:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think value_counts will also need some kind of factorize/unique implementation?\r\n\r\nA *good* one, yes :) But for now the only correctness issue is NA-handling. For now we can (maybe) drop missing values, convert to an object array, and then do `value_counts`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363758239",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363758239",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363758239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzc1ODIzOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T12:46:47Z",
    "updated_at": "2018-02-07T12:46:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche https://github.com/pandas-dev/pandas/pull/19520#discussion_r166605819 should not be a goal at all. there are already too many special cases. sure if its possible great GeoPandas will simply have to adjust to this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363758979",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363758979",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363758979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzc1ODk3OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T12:49:47Z",
    "updated_at": "2018-02-07T12:49:47Z",
    "author_association": "MEMBER",
    "body": "I agree it should not be a goal. But if all it takes is one `getattr` for now (which I actually think is not needed, see latest comment above), then that would make my life easier.\r\nIt should also not take too much time to adapt to the new interface, so it shouldn't be needed for long. At that time, I would actually just remove the full `test_external_blocks` tests."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363795038",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363795038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363795038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzc5NTAzOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T14:59:04Z",
    "updated_at": "2018-02-07T14:59:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed the stuff with extension blocks. The only change needed to the test from the old way was to inherit from `NonConsolidatableMixin` and `Block`. Before my first PR, it was just `NonConsolidatableMixin`. I see that geopandas already inherits from both, so we should be good to go.\r\n\r\n\r\nA thorny issue: What to do with comparison methods (cc @jbrockmendel for thoughts).\r\n\r\nNeither the Python 2 or Python 3 object defaults are appropriate, so I think we should make it abstract or provide a default implementation.\r\n\r\nWe *should* be able to do a default implementation for the simple case of `binop(extension_array, extension_array)` by\r\n\r\n1. masking nulls in either `self | other`\r\n2. cast self / other to ndarrays\r\n3. compare and apply null mask\r\n\r\nHow much coercion do we want to attempt? I would vote to stay simple and only attempt a comparison if\r\n\r\n1. `other` is an instance of the same `ExtensionArray` type\r\n2. `other` is a scalar of `self.dtype.type`.\r\n\r\nOtherwise we return `NotImplemented`. Subclasses can of course choose more or less aggressive coercion rules.\r\n\r\nThoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363797811",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363797811",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363797811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzc5NzgxMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T15:07:22Z",
    "updated_at": "2018-02-07T15:07:45Z",
    "author_association": "MEMBER",
    "body": "> We should be able to do a default implementation for the simple case of binop(extension_array, extension_array) by\r\n> ...\r\n> 2. cast self / other to ndarrays\r\n\r\nThe problem with this as default behaviour is that this can be a big performance bottleneck in case casting to an array is expensive. And of course, something like `Series(extension_array) + 1` might still raise the desired error because `extension_scalar + 1` will raise this error. But I think it can be annoying that at lot of ops first need to do a lot of computations (casting to array) before erroring properly.\r\n\r\nSo in the ideal world, for me as an extension author, I would want to be able to specify for certain ops that they are not possible (an error is raised without casting to array and trying) and for certain ops provide my own fast implementation (that does not need casting to an array)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363798551",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363798551",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363798551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzc5ODU1MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T15:09:48Z",
    "updated_at": "2018-02-07T15:09:48Z",
    "author_association": "MEMBER",
    "body": "If we want to do something like what I want, I suppose the most logical solution is to fall back to `ExtensionArray.__op__` to see if that is defined / works, and wrapping the result of it back into Series with the correct index?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363799536",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363799536",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363799536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzc5OTUzNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T15:12:53Z",
    "updated_at": "2018-02-07T15:12:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "> So in the ideal world, for me as an extension author,\r\n\r\nIsn't that the world we live in? :) If your class doesn't implement `__add__` then you define `__add__` to raise a `TypeError`?\r\n\r\nSeeing your second post now, I should clarify that I'm just talking about ExtensionArray ops at the moment, not `Series[ExtensionArray]`. Your suggestion of the Series ops dispatching to `ExtensionArray` ops makes since, but will require more work in `nanops.py` to support.\r\n\r\nI'm tempted to shove all that into a separate PR, but can go either way."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363800281",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363800281",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363800281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzgwMDI4MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T15:15:12Z",
    "updated_at": "2018-02-07T15:15:12Z",
    "author_association": "MEMBER",
    "body": "Ah, yes, I thought you were talking about the `Series([extensionarray])` case.\r\n\r\n> I'm tempted to shove all that into a separate PR, but can go either way.\r\n\r\nYes, for sure. Erroring for all is fine for now,  let's first get this merged."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363800958",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363800958",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363800958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzgwMDk1OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T15:17:10Z",
    "updated_at": "2018-02-07T15:17:10Z",
    "author_association": "MEMBER",
    "body": "> Isn't that the world we live in? :) If your class doesn't implement __add__ then you define __add__ to raise a TypeError?\r\n\r\nYep, that's fine for me. Then we should add that to the documentation of ExtensionArray that it is *recommended* (IMO) to implement those ops (even if it is to raise a TypeError) to prevent casting to array of scalars."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363801511",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363801511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363801511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzgwMTUxMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T15:18:47Z",
    "updated_at": "2018-02-07T15:18:47Z",
    "author_association": "MEMBER",
    "body": "Just a question: how is this discussion related to this PR (I thought here it was about being able to store it inside a Series, but if you say for Series ops we do not yet dispatch to the underlying extension array?)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363803443",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363803443",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363803443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzgwMzQ0Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T15:24:47Z",
    "updated_at": "2018-02-07T15:24:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's not strictly related to this PR, I just happened to write some tests for it without really thinking :) I'll split those off to the next PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363881250",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363881250",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363881250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzg4MTI1MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T19:23:22Z",
    "updated_at": "2018-02-07T19:23:22Z",
    "author_association": "MEMBER",
    "body": "> A thorny issue: What to do with comparison methods\r\n\r\nI've been planning on moving the Index/Series arithmetic/comparison ops into Array subclasses, so that `Series.__op__(other)` could just wrap `self._data.blocks[0].__op__(other)` and we get consistency between Series/DataFrame ops for free.\r\n\r\n_Most_ of the comparison ops are ready to make that jump; I can prioritize it if getting that done quickly will help you out.\r\n\r\nOne caveat I'm concerned about is that the existing implementations in the Index subclasses have gotten tangled up with a bunch of unrelated Index machinery.  Ideally I'd like these operations to go into self-contained mixin classes that rely on constructor methods, but are independent of slicing/concat/reindex/dropna/... mentioned above."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363916931",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363916931",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363916931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzkxNjkzMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T21:29:25Z",
    "updated_at": "2018-02-07T21:29:25Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel Tom opened https://github.com/pandas-dev/pandas/issues/19577 for the ops discussion, so maybe best post that there"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363939356",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363939356",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363939356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzkzOTM1Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T22:54:50Z",
    "updated_at": "2018-02-07T22:54:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Latest commit will fail till I get boolean setitem working. Hopefully everything else passes.\r\n\r\n> We could maybe think about encouraging (or at least make it possible, which you already have been doing for the internal exampel tests) for extension authors to subclass those tests so they can make sure everything passes\r\n\r\nThat's what I've been doing for my IPAddress tests, everything seems to work fine. We'll just need to document it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363997965",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-363997965",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 363997965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzk5Nzk2NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-08T04:19:12Z",
    "updated_at": "2018-02-08T04:20:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Dropna is now working. (side note, we'll now avoid materializing the values for a `DataFrame` with a single column of `Categorical` dtype on `count` and `dropna`)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364130588",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-364130588",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 364130588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDEzMDU4OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-08T14:37:27Z",
    "updated_at": "2018-02-08T14:37:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Quick status update:\r\n\r\n- I've split ExtensionBlock.setitem to https://github.com/pandas-dev/pandas/issues/19599 (xfailing the tests for now)\r\n- I'm going to pick up https://github.com/pandas-dev/pandas/pull/19558 again, remove all the index vs. Series special casing / `_as_best_array` stuff\r\n\r\nThen this should be ready for another round of reviews when people have time."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364160988",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-364160988",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 364160988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDE2MDk4OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-08T16:10:03Z",
    "updated_at": "2018-02-08T16:10:03Z",
    "author_association": "MEMBER",
    "body": "I tested this out with GeometryArray, some feedback (I am putting everything here, and not each should be fixed in this PR, some could also be put in a general to do list):\r\n\r\n- easy to implement (based on what there already was of course), and subclassed the general dtype/array tests and they all pass, only xfailed the setitem ones (we don't yet support setitem) and the value_counts (shapely geometry objects are not hashable, so the ndarray materializing fallback does not work)\r\n- It seems we could have a default implementation for `ExtensionDtype.construct_from_string` ? (I now just copy pasted from the decimal example, and I think json example also has the same basic one)\r\n- The requirement that GeometryArray(..) needs to be able to accept instances of itself, makes it a little bit more complex (but certainly no problem if needed, I just need to think a bit about the memory management / gc). But my question is maybe: which semantic do we (pandas) expect here? That it just returns that same instance, or that it takes kind of a (deep) copy?\r\n- Is `ExtensionArray._fill_value` actually used somewhere? Because we have two different notions of fill values: the internal one for the underlying data (just a 0 pointer), and the external one we use when unboxing (None). But since the first is internal, I suppose whatever pandas needs it for, it should be the second? \r\n  Anyhow, there is no test failing with or without this property. Only one test relied on it for the construction of the expected result. But that could also indicate that this property is not really needed for the interface?\r\n- Numerical operations give AssertionError, instead of TypeError (although the correct TypeError is somewhere in the traceback). Eg consider `s` a series with extension array: `s + 1` gives assertion error\r\n- `s == scalar` already works (eg ``s == s[1]``), so could add a test for it. But this is probably because it is materializing the array? \r\n- We should eventually make the \"AttributeError: 'GeometryArray' object has no attribute '_reduce'\" error a bit more user friendly\r\n- `s.astype(object)` or `s.astype(str)` worked for geopandas (because I did some custom code for that in the block), to have this here, we might need to extend the interface with an `astype` method?\r\n- `Series.where` does not yet preserve extension array\r\n- We need to special case `.astype(object)` I think, irregardless of a more general solution for ``astype``. Because eg Series.apply (and suppose also map) relies on `values = self.astype(object).values`. Or of course we could special case extension types there, but maybe this pattern is used more throughout the code base.\r\n- `series.align(dataframe)` where the series contains an extension array fails with \"data type not understood\" (somewhere deep in the reindexing machinery)\r\n\r\nI did not yet fully integrate it in the rest of geopandas, so probably more will come :-)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364175280",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-364175280",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 364175280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDE3NTI4MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-08T16:52:18Z",
    "updated_at": "2018-02-08T16:52:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "> It seems we could have a default implementation for ExtensionDtype.construct_from_string ? (I now just copy pasted from the decimal example, and I think json example also has the same basic one)\r\n\r\nhttps://github.com/pandas-dev/pandas/issues/19600\r\n\r\n> But my question is maybe: which semantic do we (pandas) expect here? That it just returns that same instance, or that it takes kind of a (deep) copy?\r\n\r\nI'll take a look and clarify. I suspect that just returning the same instance is fine, but perhaps surprising compared to other container types?\r\n\r\n> Is ExtensionArray._fill_value actually used somewhere?\r\n\r\nNot sure... I want to nail this down too. Pandas uses `fill_value` for two meanings too. Externally, `fill_value` is typically for \"Fill missing values with this.\" Internally, on Block, `fill_value` is the missing value sentinel.\r\n\r\n> we might need to extend the interface with an astype method?\r\n\r\nPerhaps, the idea being that `ExtensionArray.astype(object)` returns an ndarray of your `.dtype.type` objects? Does `np.array(extension_array, dtype=object)` suffice? We would then just have to say that the default `ExtensionArray.astype` only astypes to object.\r\n\r\n> Series.where\r\n\r\nWill take a look, and push if it seems complicated :)\r\n\r\n> series.align(dataframe)\r\n\r\nWill fix this here"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364587570",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-364587570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 364587570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDU4NzU3MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-09T22:27:40Z",
    "updated_at": "2018-02-09T22:27:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Latest push contains the changes in https://github.com/pandas-dev/pandas/pull/19558. Just making sure the CI passes, put the other PR will ahve to be merged first."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365397770",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-365397770",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 365397770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTM5Nzc3MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-13T20:43:30Z",
    "updated_at": "2018-02-13T20:43:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ugh, https://github.com/pandas-dev/pandas/pull/19520/commits/a312ba5c59c2e96854a286bde74d7fd4562afbf8, which set `PANDAS_DEPRECATION_WARNING` to work around https://github.com/pandas-dev/pandas/issues/19585 turned up some deprecation warnings we were ignoring.\r\n\r\nI'll fix those in a separate PR, and then push this again."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365428169",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-365428169",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 365428169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTQyODE2OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-13T22:33:12Z",
    "updated_at": "2018-02-13T22:33:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Latest commit should fix up https://github.com/pandas-dev/pandas/issues/19585."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365437276",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-365437276",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 365437276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTQzNzI3Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-13T23:10:14Z",
    "updated_at": "2018-02-13T23:10:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can split the test parquet stuff off to a different issue, but I'd prefer to leave it hear since (for whatever reason) the issue in #19585 manifests here and not on master."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365944790",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-365944790",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 365944790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTk0NDc5MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T14:34:30Z",
    "updated_at": "2018-02-15T14:34:30Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger Is this ready for a new review?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365946256",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-365946256",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 365946256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTk0NjI1Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T14:39:12Z",
    "updated_at": "2018-02-15T14:39:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, sorry. The only changes I'm making at the moment specifying exact warnings to catch in the parquet tests to fix https://github.com/pandas-dev/pandas/issues/19585, which is interacting badly with another test in `test_internals.py`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365947015",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19520#issuecomment-365947015",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19520",
    "id": 365947015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTk0NzAxNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T14:41:51Z",
    "updated_at": "2018-02-15T14:41:51Z",
    "author_association": "MEMBER",
    "body": "But apart from that, have there been changes since I last reviewed? (I suppose you integrated the `_values` PR?)"
  }
]
