[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372067137",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20237#issuecomment-372067137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20237",
    "id": 372067137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjA2NzEzNw==",
    "user": {
      "login": "Michael-J-Ward",
      "id": 3186847,
      "node_id": "MDQ6VXNlcjMxODY4NDc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3186847?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Michael-J-Ward",
      "html_url": "https://github.com/Michael-J-Ward",
      "followers_url": "https://api.github.com/users/Michael-J-Ward/followers",
      "following_url": "https://api.github.com/users/Michael-J-Ward/following{/other_user}",
      "gists_url": "https://api.github.com/users/Michael-J-Ward/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Michael-J-Ward/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Michael-J-Ward/subscriptions",
      "organizations_url": "https://api.github.com/users/Michael-J-Ward/orgs",
      "repos_url": "https://api.github.com/users/Michael-J-Ward/repos",
      "events_url": "https://api.github.com/users/Michael-J-Ward/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Michael-J-Ward/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-10T21:09:12Z",
    "updated_at": "2018-03-10T21:09:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would to like to give recognition to @qshng who worked on this documentation with me."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372117414",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20237#issuecomment-372117414",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20237",
    "id": 372117414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjExNzQxNA==",
    "user": {
      "login": "Michael-J-Ward",
      "id": 3186847,
      "node_id": "MDQ6VXNlcjMxODY4NDc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3186847?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Michael-J-Ward",
      "html_url": "https://github.com/Michael-J-Ward",
      "followers_url": "https://api.github.com/users/Michael-J-Ward/followers",
      "following_url": "https://api.github.com/users/Michael-J-Ward/following{/other_user}",
      "gists_url": "https://api.github.com/users/Michael-J-Ward/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Michael-J-Ward/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Michael-J-Ward/subscriptions",
      "organizations_url": "https://api.github.com/users/Michael-J-Ward/orgs",
      "repos_url": "https://api.github.com/users/Michael-J-Ward/repos",
      "events_url": "https://api.github.com/users/Michael-J-Ward/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Michael-J-Ward/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-11T13:55:59Z",
    "updated_at": "2018-03-11T13:55:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "The `validate_docstring` output for `DataFrame.combine`\r\n```\r\n################################################################################\r\n##################### Docstring (pandas.DataFrame.combine) #####################\r\n################################################################################\r\n\r\nPerform series-wise combine with `other` DataFrame using given `func`.\r\n\r\nCombines `self` DataFrame with `other` DataFrame using `func`\r\nto element-wise combine columns. The row and column indexes of the\r\nresulting DataFrame will be the union of the two.\r\n\r\nParameters\r\n----------\r\nother : DataFrame\r\n    The DataFrame to merge column-wise.\r\nfunc : function\r\n    Function that takes two series as inputs and return a Series or a\r\n    scalar, used to merge the two dataframes column by columns.\r\nfill_value : scalar value, default None\r\n    The value to fill NaNs with prior to passing any column to the\r\n    merge func.\r\noverwrite : boolean, default True\r\n    If True, columns in `self` that do not exist in `other` will be\r\n    overwritten with NaNs.\r\n\r\nReturns\r\n-------\r\nresult : DataFrame\r\n\r\nExamples\r\n--------\r\nCombine using a simple function that chooses the smaller column.\r\n\r\n>>> from pandas import DataFrame\r\n>>> import numpy as np\r\n>>> df1 = DataFrame({'A': [0, 0], 'B': [4, 4]})\r\n>>> df2 = DataFrame({'A': [1, 1], 'B': [3, 3]})\r\n>>> take_smaller = lambda s1, s2: s1 if s1.sum() < s2.sum() else s2\r\n>>> df1.combine(df2, take_smaller)\r\n   A  B\r\n0  0  3\r\n1  0  3\r\n\r\nExample  using a true element-wise combine function.\r\n\r\n>>> import numpy as np\r\n>>> df1 = DataFrame({'A': [5, 0], 'B': [2, 4]})\r\n>>> df2 = DataFrame({'A': [1, 1], 'B': [3, 3]})\r\n>>> df1.combine(df2, np.minimum)\r\n   A  B\r\n0  1  2\r\n1  0  3\r\n\r\nUsing `fill_value` fills Nones prior to passing the column to the\r\nmerge function.\r\n\r\n>>> df1 = DataFrame({'A': [0, 0], 'B': [None, 4]})\r\n>>> df2 = DataFrame({'A': [1, 1], 'B': [3, 3]})\r\n>>> df1.combine(df2, take_smaller, fill_value=-5)\r\n   A    B\r\n0  0 -5.0\r\n1  0  4.0\r\n\r\nHowever, if the same element in both dataframes is None, that None\r\nis preserved\r\n\r\n>>> df1 = DataFrame({'A': [0, 0], 'B': [None, 4]})\r\n>>> df2 = DataFrame({'A': [1, 1], 'B': [None, 3]})\r\n>>> df1.combine(df2, take_smaller, fill_value=-5)\r\n   A    B\r\n0  0  NaN\r\n1  0  3.0\r\n\r\nExample that demonstrates the use of `overwrite` and behavior when\r\nthe axis differ between the dataframes.\r\n\r\n>>> df1 = DataFrame({'A': [0, 0], 'B': [4, 4]})\r\n>>> df2 = DataFrame({'B': [3, 3], 'C': [-10, 1],}, index=[1, 2])\r\n>>> df1.combine(df2, take_smaller)\r\n     A    B     C\r\n0  NaN  NaN   NaN\r\n1  NaN  3.0 -10.0\r\n2  NaN  3.0   1.0\r\n\r\n>>> df1.combine(df2, take_smaller, overwrite=False)\r\n     A    B     C\r\n0  0.0  NaN   NaN\r\n1  0.0  3.0 -10.0\r\n2  NaN  3.0   1.0\r\n\r\nDemonstrating the preference of the passed in dataframe.\r\n\r\n>>> df2 = DataFrame({'B': [3, 3], 'C': [1, 1],}, index=[1, 2])\r\n>>> df2.combine(df1, take_smaller)\r\n   A    B   C\r\n0  0.0  NaN NaN\r\n1  0.0  3.0 NaN\r\n2  NaN  3.0 NaN\r\n\r\n>>> df2.combine(df1, take_smaller, overwrite=False)\r\n     A    B   C\r\n0  0.0  NaN NaN\r\n1  0.0  3.0 1.0\r\n2  NaN  3.0 1.0\r\n\r\nSee Also\r\n--------\r\nDataFrame.combine_first : Combine two DataFrame objects and default to\r\n    non-null values in frame calling the method\r\n\r\n################################################################################\r\n################################## Validation ##################################\r\n################################################################################\r\n\r\nDocstring for \"pandas.DataFrame.combine\" correct. :)\r\n```\r\n\r\nAnd for `combine_first`\r\n\r\n```\r\n################################################################################\r\n################## Docstring (pandas.DataFrame.combine_first) ##################\r\n################################################################################\r\n\r\nUpdate null elements with value in the same location in `other`.\r\n\r\nCombine two DataFrame objects by filling null values in self DataFrame\r\nwith non-null values from other DataFrame. The row and column indexes\r\nof the resulting DataFrame will be the union of the two.\r\n\r\nParameters\r\n----------\r\nother : DataFrame\r\n    Provided DataFrame to use to fill null values.\r\n\r\nReturns\r\n-------\r\ncombined : DataFrame\r\n\r\nExamples\r\n--------\r\n\r\ndf1's values prioritized, use values from df2 to fill holes:\r\n\r\n>>> from pandas import DataFrame\r\n>>> df1 = DataFrame({'A': [None, 0], 'B': [None, 4]})\r\n>>> df2 = DataFrame({'A': [1, 1], 'B': [3, 3]})\r\n>>> df1.combine_first(df2)\r\n     A    B\r\n0  1.0  3.0\r\n1  0.0  4.0\r\n\r\nIllustrate the behavior when the axis differ between the dataframes.\r\n\r\n>>> df1 = DataFrame({'A': [None, 0], 'B': [4, None]})\r\n>>> df2 = DataFrame({'B': [3, 3], 'C': [1, 1],}, index=[1, 2])\r\n>>> df1.combine_first(df2)\r\n     A    B    C\r\n0  NaN  4.0  NaN\r\n1  0.0  3.0  1.0\r\n2  NaN  3.0  1.0\r\n\r\nSee Also\r\n--------\r\nDataFrame.combine : Perform series-wise operation on two DataFrames\r\n    using a given function\r\n\r\n################################################################################\r\n################################## Validation ##################################\r\n################################################################################\r\n\r\nDocstring for \"pandas.DataFrame.combine_first\" correct. :)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403237998",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20237#issuecomment-403237998",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20237",
    "id": 403237998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzIzNzk5OA==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-07T19:29:06Z",
    "updated_at": "2018-07-07T19:58:11Z",
    "author_association": "NONE",
    "body": "Hello @Michael-J-Ward! Thanks for updating the PR.\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on July 07, 2018 at 19:58 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403246364",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20237#issuecomment-403246364",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20237",
    "id": 403246364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI0NjM2NA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-07T22:17:24Z",
    "updated_at": "2018-07-07T22:17:24Z",
    "author_association": "MEMBER",
    "body": "Thanks @Michael-J-Ward! \r\n\r\n(Travis error was from a prior lint error on master)"
  }
]
