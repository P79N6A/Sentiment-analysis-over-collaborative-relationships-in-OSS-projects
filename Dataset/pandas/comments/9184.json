[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68530022",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9184#issuecomment-68530022",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9184",
    "id": 68530022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTMwMDIy",
    "user": {
      "login": "Sereger13",
      "id": 10167353,
      "node_id": "MDQ6VXNlcjEwMTY3MzUz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10167353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sereger13",
      "html_url": "https://github.com/Sereger13",
      "followers_url": "https://api.github.com/users/Sereger13/followers",
      "following_url": "https://api.github.com/users/Sereger13/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sereger13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sereger13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sereger13/subscriptions",
      "organizations_url": "https://api.github.com/users/Sereger13/orgs",
      "repos_url": "https://api.github.com/users/Sereger13/repos",
      "events_url": "https://api.github.com/users/Sereger13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sereger13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-02T14:32:45Z",
    "updated_at": "2015-01-02T14:32:45Z",
    "author_association": "NONE",
    "body": "## INSTALLED VERSIONS\n\ncommit: None\npython: 2.7.5.final.0\npython-bits: 32\nOS: Linux\nOS-release: 2.6.18-238.9.1.el5\nmachine: x86_64\nprocessor: x86_64\nbyteorder: little\nLC_ALL: None\nLANG: en_US\n\npandas: 0.15.0\nnose: 1.3.0\nCython: 0.20\nnumpy: 1.7.1\nscipy: 0.13.0\nstatsmodels: 0.5.0\nIPython: 2.2.0\nsphinx: 1.1.3\npatsy: 0.2.1\ndateutil: 1.5\npytz: 2013b\nbottleneck: None\ntables: 3.1.0\nnumexpr: 2.2.2\nmatplotlib: 1.3.1\nopenpyxl: 1.6.2\nxlrd: 0.9.2\nxlwt: 0.7.5\nxlsxwriter: 0.5.5\nlxml: None\nbs4: 4.3.1\nhtml5lib: None\nhttplib2: None\napiclient: None\nrpy2: None\nsqlalchemy: 0.8.3\npymysql: None\npsycopg2: None\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68542383",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9184#issuecomment-68542383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9184",
    "id": 68542383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTQyMzgz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-02T17:03:25Z",
    "updated_at": "2015-01-02T17:03:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm. The behavior of `.str` on non-object/string-like columns is actually suspect in general. We _could_ raise (e.g. like what we are doing with an operation that does not apply to that type, like doing with `.cat`).\n\nThoughts?\n\n@jorisvandenbossche @shoyer @cpcloud \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68551658",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9184#issuecomment-68551658",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9184",
    "id": 68551658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTUxNjU4",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-02T18:57:13Z",
    "updated_at": "2015-01-02T18:57:13Z",
    "author_association": "MEMBER",
    "body": "I agree, `.str` probably _should_ raise on non-string columns instead of the operations returning vectors of `NaN`. But all NaN columns even with float dtype are somewhat ambiguous, so it would be reasonable to still interpret them as (plausibly) string-like.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68641416",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9184#issuecomment-68641416",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9184",
    "id": 68641416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjQxNDE2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-04T17:42:41Z",
    "updated_at": "2015-01-04T17:42:41Z",
    "author_association": "MEMBER",
    "body": "IMO cat and str shouldn't even be attributes on a series unless it has the proper dtype. For example a float64 column should throw an attribute error on str access. This can be achieved by overriding getattr behavior. \n\nI also don't think an all nan column of float64 is ambiguous. @shoyer can you elaborate on why you think that's ambiguous?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68642149",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9184#issuecomment-68642149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9184",
    "id": 68642149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjQyMTQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-04T18:03:23Z",
    "updated_at": "2015-01-04T18:03:23Z",
    "author_association": "CONTRIBUTOR",
    "body": ".cat does this now \n\nbut .str is still the original code \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68642206",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9184#issuecomment-68642206",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9184",
    "id": 68642206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjQyMjA2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-04T18:04:49Z",
    "updated_at": "2015-01-04T18:04:49Z",
    "author_association": "MEMBER",
    "body": "What I'm saying is that it shouldn't even show up in tab completion, just like if you did s.blarg \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68642276",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9184#issuecomment-68642276",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9184",
    "id": 68642276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjQyMjc2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-04T18:06:45Z",
    "updated_at": "2015-01-04T18:06:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm it should be taken out of local_dir then \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68645277",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9184#issuecomment-68645277",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9184",
    "id": 68645277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjQ1Mjc3",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-04T19:27:42Z",
    "updated_at": "2015-01-04T19:27:42Z",
    "author_association": "MEMBER",
    "body": "@cpcloud the all nan column of float64 is somewhat ambiguous only because pandas presumes that all NA lists, for example, should be floats. For example, consider the original example here:\n\n```\ndf = pd.DataFrame({'a': ['x', 'y', 'z'], 'b': [np.nan, np.nan, np.nan]})\n```\n\nWe don't have any clues for the type of column `b`. To indicate that it's a string type, you would need to write something like `np.array([np.nan, np.nan, np.nan], dtype=object)`.\n\nThat said... this is an edge case that probably isn't worth worrying about. Likely only expert users even realize that we use `nan` to mark missing values in string arrays.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68645475",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9184#issuecomment-68645475",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9184",
    "id": 68645475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjQ1NDc1",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-04T19:32:46Z",
    "updated_at": "2015-01-04T19:32:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "We should patch pandas to send anonymous usage statistics. Would help answer the frequency of edge cases :/\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68646171",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9184#issuecomment-68646171",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9184",
    "id": 68646171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjQ2MTcx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-04T19:49:58Z",
    "updated_at": "2015-01-04T19:49:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer presuming an all-na list is float-like has been long-stranding, and the most likely case. Agreed that the user would have to explicity specifiy another dtype.\n\nOk, so this issue is one of fixing the visibility of `.str/.cat` in the Series namespace when the dtype is not-appropriate. (which fixes the operating on a non-object series for strings as a by-product).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68796882",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9184#issuecomment-68796882",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9184",
    "id": 68796882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Nzk2ODgy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T22:52:12Z",
    "updated_at": "2015-01-05T22:52:12Z",
    "author_association": "MEMBER",
    "body": "I fully agree that `.str` should better raise an error on a non-string series. And it should then at once raise an informative message that it is only availble for string types, and that you can use \"astype(str)\" to obtain that.\n\nBut I don't know if it is worth the effort to also have it not visible in the Series namespace. Still seeing it also on non-string series can make people more aware of its existence, and maybe remind them they can make it strings to use that function.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68843165",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9184#issuecomment-68843165",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9184",
    "id": 68843165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODQzMTY1",
    "user": {
      "login": "Sereger13",
      "id": 10167353,
      "node_id": "MDQ6VXNlcjEwMTY3MzUz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10167353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sereger13",
      "html_url": "https://github.com/Sereger13",
      "followers_url": "https://api.github.com/users/Sereger13/followers",
      "following_url": "https://api.github.com/users/Sereger13/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sereger13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sereger13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sereger13/subscriptions",
      "organizations_url": "https://api.github.com/users/Sereger13/orgs",
      "repos_url": "https://api.github.com/users/Sereger13/repos",
      "events_url": "https://api.github.com/users/Sereger13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sereger13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-06T09:24:38Z",
    "updated_at": "2015-01-06T09:24:38Z",
    "author_association": "NONE",
    "body": "Is it feasible to convert series to string type (i.e. apply \"astype(str)\") internally when calling `.str`? I always thought that is what was going on under the hood.\n"
  }
]
