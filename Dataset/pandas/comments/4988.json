[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25129831",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4988#issuecomment-25129831",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4988",
    "id": 25129831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTI5ODMx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T22:24:27Z",
    "updated_at": "2013-09-25T22:24:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "That seems reasonable, however we'd probably still have to support the old parameter. My impression is that the only difference is that parse_cols accept a single int: clearly csv can't support the string option, given that it's excel specific and it already accepts a list of int (and I'm sure it accepts None as well).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25130885",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4988#issuecomment-25130885",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4988",
    "id": 25130885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTMwODg1",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T22:42:20Z",
    "updated_at": "2013-09-25T22:42:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner Maybe adding `use_cols` (since all other parameters use the underscore convention) that does the combination you specified (+ for excel files the excel specific thing) and deprecate the `usecols` and `parse_cols` parameters in 0.13, 0.14... Exclude them from docs and drop them in some future version?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25131223",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4988#issuecomment-25131223",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4988",
    "id": 25131223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTMxMjIz",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T22:49:09Z",
    "updated_at": "2013-09-25T22:49:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can take this if you decide this is reasonable to implement... The question is just what to do with the test cases? Test both or test just the `use_cols` since `usecols and`parse_cols` will be just aliases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25131404",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4988#issuecomment-25131404",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4988",
    "id": 25131404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTMxNDA0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T22:51:40Z",
    "updated_at": "2013-09-25T22:51:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "you are talking about`usecols`, not `use_cols` (sp?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25131992",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4988#issuecomment-25131992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4988",
    "id": 25131992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTMxOTky",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T23:02:50Z",
    "updated_at": "2013-09-25T23:03:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I proposed a change from `usecols` to `use_cols`, since most parameters use the underscore naming convention: `filepath_or_buffer`, `index_col`, `na_values`, `keep_default_na`, `true_values`, `false_values`, `parse_dates`, `keep_date_col`, `date_parser`, `na_filter`, `infer_types`, `mangle_dupe_cols`, `tupleize_cols`... There are still ones that do not, like: `dayfirst`, `skiprows`, `escapechar`, `skipinitialspace`, `lineterminator`, `quotechar`, `skipfooter`, `chunksize`.\n\nBut if I noticed correctly the naming conventions are going toward the `_` separated ones... Correct me if I'm wrong.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25139577",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4988#issuecomment-25139577",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4988",
    "id": 25139577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTM5NTc3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-26T02:22:00Z",
    "updated_at": "2013-09-26T02:22:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@alefnula while I get what you're saying, I don't know if it really makes sense to change those keyword arguments now (and `escapechar` and `quotechar` are the `csv` module's kwargs, so thsoe probably shouldn't change). If you're going to do any change, you should definitely change it to `parse_cols`, to be consistent with excel\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25200558",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4988#issuecomment-25200558",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4988",
    "id": 25200558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjAwNTU4",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-26T20:24:06Z",
    "updated_at": "2013-09-26T22:39:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner I think you misunderstood me, but it's my fault, I wasn't clear enough :) So I'll start fresh.\n\nI went through the code of the `read_` functions and here are the results:\n\n| Function | Parameter |\n| --- | --- |\n| read_clipboard | usecols |\n| read_csv | usecols |\n| read_excel | parse_cols |\n| read_fwf | usecols |\n| read_hdf | - |\n| read_html | - |\n| read_json | - |\n| read_pickle | - |\n| read_sql | - |\n| read_stata | usecols |\n| read_table | usecols |\n| read_sql | - |\n\nThe conclusion is: Most of the functions that have a column selection parameter use `usecols`, except the `read_excel` which uses `parse_cols`.\n\nMy suggestion is to:\n1. _Add column selection to all `read_` functions._ Implementing this for the functions that does not support it, at the moment, can just be something like this:\n   \n   ``` python\n   if usecols:\n       return result[cols]\n   ```\n   \n   at the end of the function. I KNOW I oversimplified it :) This is just pseudecode. But doing a refined version of this wouldn't be so bad for the first iteration, and in the second iteration it can be supported directly by the parsers.\n2. Since I first looked only at the `read_csv` and `read_excel` I suggested a unification of `usecols` and `parse_cols` under the name `use_cols`, since the underscore convention is used more often in pandas. _But I take that back._ Five from thirteen functions use the `usecols` parameter, and this would just cause trouble and wont gain anything. So just forget that renaming part :) The only renaming in this case would be from `parse_cols` to `usecols` in `read_excel`.\n3. `usecols` should, for all functions, support the same thing it currently does + the integer slicing one `[:n]`.\n4. It will, for the `read_` functions that support something fancy, have additional superpowers (like in the case of the `read_excel`, and maybe some other formats) but the basic functionality from the point 3. should be there for all functions. Additional \"superpowers\" would be noted in the docs for the specific formats.\n\nThis is basically the proposal I had in mind :) I just wasn't clear enough.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209714290",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4988#issuecomment-209714290",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4988",
    "id": 209714290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTcxNDI5MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T01:27:13Z",
    "updated_at": "2016-04-14T01:27:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "If someone is interested in this, we should deprecate `parse_cols` in favor of `usecols`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303491011",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4988#issuecomment-303491011",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4988",
    "id": 303491011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ5MTAxMQ==",
    "user": {
      "login": "abarber4gh",
      "id": 7909540,
      "node_id": "MDQ6VXNlcjc5MDk1NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7909540?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abarber4gh",
      "html_url": "https://github.com/abarber4gh",
      "followers_url": "https://api.github.com/users/abarber4gh/followers",
      "following_url": "https://api.github.com/users/abarber4gh/following{/other_user}",
      "gists_url": "https://api.github.com/users/abarber4gh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abarber4gh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abarber4gh/subscriptions",
      "organizations_url": "https://api.github.com/users/abarber4gh/orgs",
      "repos_url": "https://api.github.com/users/abarber4gh/repos",
      "events_url": "https://api.github.com/users/abarber4gh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abarber4gh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T18:30:47Z",
    "updated_at": "2017-05-23T18:47:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "taking a look at this, I plan to deprecate `parse_cols` for `read_excel()` in favor of `usecols` for consistency with other read functions.  plan for `usecols` to support current functionality of `read_excel()`'s `parse_cols` and other `usecols`.\r\nBasically, @alefnula's points 2, 3, and 4 above.  point 1 (implement column selection functionality for all `read_` functions) probably should be another ENH."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303624654",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4988#issuecomment-303624654",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4988",
    "id": 303624654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzYyNDY1NA==",
    "user": {
      "login": "abarber4gh",
      "id": 7909540,
      "node_id": "MDQ6VXNlcjc5MDk1NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7909540?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abarber4gh",
      "html_url": "https://github.com/abarber4gh",
      "followers_url": "https://api.github.com/users/abarber4gh/followers",
      "following_url": "https://api.github.com/users/abarber4gh/following{/other_user}",
      "gists_url": "https://api.github.com/users/abarber4gh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abarber4gh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abarber4gh/subscriptions",
      "organizations_url": "https://api.github.com/users/abarber4gh/orgs",
      "repos_url": "https://api.github.com/users/abarber4gh/repos",
      "events_url": "https://api.github.com/users/abarber4gh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abarber4gh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T05:52:26Z",
    "updated_at": "2017-05-24T05:52:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "in the current release version (0.20.1), a list of columns returns an empty DF.  I.E. ``pandas.read_excel(test_inputexcel_file, parse_cols=['A','B','D']) `` results in \r\n````\r\nEmpty DataFrame\r\nColumns: []\r\nIndex: []\r\n````\r\nrather than the expected DataFrame with columns A, B, and D.  I plan to address this as well to implement @alefnula's point 3."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/331669873",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4988#issuecomment-331669873",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4988",
    "id": 331669873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTY2OTg3Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-23T21:04:20Z",
    "updated_at": "2017-09-23T21:04:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung anything worth changing for 0.21.0 for this? (prob in ``read_excel``) that isn't already done / in an issue?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/331695860",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4988#issuecomment-331695860",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4988",
    "id": 331695860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTY5NTg2MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-24T08:36:23Z",
    "updated_at": "2017-09-24T08:36:23Z",
    "author_association": "MEMBER",
    "body": "@jreback : I agree with you <a href=\"https://github.com/pandas-dev/pandas/issues/4988#issuecomment-209714290\">from a year ago</a> that `parse_cols` should be deprecated in favor of `usecols`.  I don't see why we shouldn't aim to do this in `0.21.0`."
  }
]
