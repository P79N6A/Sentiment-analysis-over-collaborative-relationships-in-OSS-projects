[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98773757",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10056#issuecomment-98773757",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10056",
    "id": 98773757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4NzczNzU3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-04T16:33:27Z",
    "updated_at": "2015-05-04T16:33:27Z",
    "author_association": "MEMBER",
    "body": "Can you be a bit more specific? Passed to what? (DataFrame?) \nMaybe give a small example.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98774113",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10056#issuecomment-98774113",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10056",
    "id": 98774113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4Nzc0MTEz",
    "user": {
      "login": "Zaharid",
      "id": 5675858,
      "node_id": "MDQ6VXNlcjU2NzU4NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5675858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zaharid",
      "html_url": "https://github.com/Zaharid",
      "followers_url": "https://api.github.com/users/Zaharid/followers",
      "following_url": "https://api.github.com/users/Zaharid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zaharid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zaharid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zaharid/subscriptions",
      "organizations_url": "https://api.github.com/users/Zaharid/orgs",
      "repos_url": "https://api.github.com/users/Zaharid/repos",
      "events_url": "https://api.github.com/users/Zaharid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zaharid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-04T16:35:13Z",
    "updated_at": "2015-05-04T16:35:13Z",
    "author_association": "NONE",
    "body": "Sorry, I pressed submit by mistake. Hope it's clear now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98812435",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10056#issuecomment-98812435",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10056",
    "id": 98812435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4ODEyNDM1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-04T18:54:50Z",
    "updated_at": "2015-05-04T18:54:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "It does work, but you are passing a list of dicts, which is quite different.\n\n```\nIn [20]: od\nOut[20]: OrderedDict([('Z', [5]), ('xx', [8]), ('uno', [2]), ('etc', [1]), ('j', [76]), ('e', [7])])\n\nIn [21]: DataFrame(od)\nOut[21]: \n   Z  xx  uno  etc   j  e\n0  5   8    2    1  76  7\n```\n\nI am +0 about supporting a nested version of this. I don't see the utility.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98865412",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10056#issuecomment-98865412",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10056",
    "id": 98865412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4ODY1NDEy",
    "user": {
      "login": "Zaharid",
      "id": 5675858,
      "node_id": "MDQ6VXNlcjU2NzU4NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5675858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zaharid",
      "html_url": "https://github.com/Zaharid",
      "followers_url": "https://api.github.com/users/Zaharid/followers",
      "following_url": "https://api.github.com/users/Zaharid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zaharid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zaharid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zaharid/subscriptions",
      "organizations_url": "https://api.github.com/users/Zaharid/orgs",
      "repos_url": "https://api.github.com/users/Zaharid/repos",
      "events_url": "https://api.github.com/users/Zaharid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zaharid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-04T22:11:54Z",
    "updated_at": "2015-05-04T22:11:54Z",
    "author_association": "NONE",
    "body": "My use case is:\n\n``` python\ndef results_table(results):\n    records = [OrderedDict([\n                ('Observable'       , result.obs),\n                ('PDF'              , result.pdf),\n                ('Collaboration'    , result.pdf.collaboration),\n                ('alpha_sMref'      , result.pdf.AlphaS_MZ),\n                ('PDF_OrderQCD'     , result.pdf.oqcd_str),\n                ('NumFlavors'       , result.pdf.NumFlavors),\n                ('CV'               , result.central_value),\n                ('Up68'             , result.error68['max']),\n                ('Down68'           , result.error68['min']),\n                ('Remarks'          , [],  )\n               ]) for result in results]\n    return pd.DataFrame(records)\n```\n\nThat is, I have a list of objects and I would like to turn them into a DataFrame to be able to display and aggregate them. Doing a list comprehension for each column doesn't look very nice.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99120513",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10056#issuecomment-99120513",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10056",
    "id": 99120513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MTIwNTEz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T15:44:05Z",
    "updated_at": "2015-05-05T15:44:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "This seems similar to passing namedtuples. Where I think it's clearer to be more explicit:\n\n```\nIn [11]: pd.DataFrame(l, columns=od.keys()).columns\nOut[11]: Index(['Z', 'xx', 'uno', 'etc', 'j', 'e'], dtype='object')\n\nIn [12]: pd.DataFrame(l, columns=l[0].keys()).columns\nOut[12]: Index(['Z', 'xx', 'uno', 'etc', 'j', 'e'], dtype='object')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99212936",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10056#issuecomment-99212936",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10056",
    "id": 99212936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjEyOTM2",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T20:34:42Z",
    "updated_at": "2015-05-05T20:34:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "One workaround:\n\n``` python\ndata=((1,2),(3,4))\nrecords = [pd.Series(OrderedDict([('a',d[0]),('b',d[1])])) for d in data]\nrecords =  pd.DataFrame(records)\n```\n"
  }
]
