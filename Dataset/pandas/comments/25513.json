[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469198598",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469198598",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469198598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTE5ODU5OA==",
    "user": {
      "login": "coderop2",
      "id": 28427884,
      "node_id": "MDQ6VXNlcjI4NDI3ODg0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28427884?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/coderop2",
      "html_url": "https://github.com/coderop2",
      "followers_url": "https://api.github.com/users/coderop2/followers",
      "following_url": "https://api.github.com/users/coderop2/following{/other_user}",
      "gists_url": "https://api.github.com/users/coderop2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/coderop2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/coderop2/subscriptions",
      "organizations_url": "https://api.github.com/users/coderop2/orgs",
      "repos_url": "https://api.github.com/users/coderop2/repos",
      "events_url": "https://api.github.com/users/coderop2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/coderop2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T10:20:20Z",
    "updated_at": "2019-03-04T10:29:42Z",
    "author_association": "NONE",
    "body": "@mroeschke in the function description its clearly mentioned that by using orient = \"records\" the index is not preserved... so what to here..?\r\n@dargueta u could use df.reset_index(inplace=True) to make the index as a column before using to_json()"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469264925",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469264925",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469264925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTI2NDkyNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T14:07:49Z",
    "updated_at": "2019-03-04T14:07:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right, so the `index=` parameter only works for `split` and `table` orients.\r\n\r\nI think we should change the default `split` to `None`, and \r\n\r\n1. Make the default `index` be `True` when orient is `split` or `table`.\r\n2. Raise if `index` is specified for any other orient.\r\n\r\nWe should deprecate the current behavior (ignoring `index` for other orients) first."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469267637",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469267637",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469267637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTI2NzYzNw==",
    "user": {
      "login": "coderop2",
      "id": 28427884,
      "node_id": "MDQ6VXNlcjI4NDI3ODg0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28427884?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/coderop2",
      "html_url": "https://github.com/coderop2",
      "followers_url": "https://api.github.com/users/coderop2/followers",
      "following_url": "https://api.github.com/users/coderop2/following{/other_user}",
      "gists_url": "https://api.github.com/users/coderop2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/coderop2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/coderop2/subscriptions",
      "organizations_url": "https://api.github.com/users/coderop2/orgs",
      "repos_url": "https://api.github.com/users/coderop2/repos",
      "events_url": "https://api.github.com/users/coderop2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/coderop2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T14:16:10Z",
    "updated_at": "2019-03-04T14:16:10Z",
    "author_association": "NONE",
    "body": "I think ignoring index for other orients might not be good because sometimes index like dates is used....so in that case the index might get ignored completely"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469268795",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469268795",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469268795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTI2ODc5NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T14:19:44Z",
    "updated_at": "2019-03-04T14:19:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@coderop2 can you clarify? My proposal is to stop ignoring the `index` parameter when it's not valid for the given `orient`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469354740",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469354740",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469354740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTM1NDc0MA==",
    "user": {
      "login": "dargueta",
      "id": 620513,
      "node_id": "MDQ6VXNlcjYyMDUxMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/620513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dargueta",
      "html_url": "https://github.com/dargueta",
      "followers_url": "https://api.github.com/users/dargueta/followers",
      "following_url": "https://api.github.com/users/dargueta/following{/other_user}",
      "gists_url": "https://api.github.com/users/dargueta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dargueta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dargueta/subscriptions",
      "organizations_url": "https://api.github.com/users/dargueta/orgs",
      "repos_url": "https://api.github.com/users/dargueta/repos",
      "events_url": "https://api.github.com/users/dargueta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dargueta/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T18:06:27Z",
    "updated_at": "2019-03-04T18:06:53Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  in the function description its clearly mentioned that by using orient = \"records\" the index is not preserved.\r\n\r\n@coderop2  I disagree about \"clearly\". The documentation of the parameter states:\r\n\r\n> Whether to include the index values in the JSON string. Not including the index (index=False) is only supported when orient is ‘split’ or ‘table’.\r\n\r\nI took this to mean the index is *always* included when the orientation is \"records\". We should at the very least rephrase this to be more explicit.\r\n\r\n@TomAugspurger I agree with most of your proposed solution, though I don't understand why the index should be automatically dropped for orient=\"records\". Dropping it would make sense *if* the index is the default sequential series, but if I explicitly specify a column as an index, I'd expect it to be included by default."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469356116",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469356116",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469356116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTM1NjExNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T18:10:31Z",
    "updated_at": "2019-03-04T18:10:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "We wouldn't want data-dependent behavior for whether the index is included.\n\nOn Mon, Mar 4, 2019 at 12:06 PM Diego Argueta <notifications@github.com>\nwrote:\n\n> in the function description its clearly mentioned that by using orient =\n> \"records\" the index is not preserved.\n>\n> @coderop2 <https://github.com/coderop2> I disagree about \"clearly\". The\n> documentation of the parameter states:\n>\n> Whether to include the index values in the JSON string. Not including the\n> index (index=False) is only supported when orient is ‘split’ or ‘table’.\n>\n> I took this to mean the index is *always* included when the orientation\n> is \"records\".\n>\n> @TomAugspurger <https://github.com/TomAugspurger> I agree with most of\n> your proposed solution, though I don't understand why the index should be\n> automatically dropped for orient=\"records\". Dropping it would make sense\n> *if* the index is the default sequential series, but if I explicitly\n> specify a column as an index, I'd expect it to be included by default.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469354740>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIl-dMOI4AmRz-6EbJWrOCMhDbBwEks5vTWCpgaJpZM4bZsDw>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469356584",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469356584",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469356584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTM1NjU4NA==",
    "user": {
      "login": "dargueta",
      "id": 620513,
      "node_id": "MDQ6VXNlcjYyMDUxMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/620513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dargueta",
      "html_url": "https://github.com/dargueta",
      "followers_url": "https://api.github.com/users/dargueta/followers",
      "following_url": "https://api.github.com/users/dargueta/following{/other_user}",
      "gists_url": "https://api.github.com/users/dargueta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dargueta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dargueta/subscriptions",
      "organizations_url": "https://api.github.com/users/dargueta/orgs",
      "repos_url": "https://api.github.com/users/dargueta/repos",
      "events_url": "https://api.github.com/users/dargueta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dargueta/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T18:11:57Z",
    "updated_at": "2019-03-04T18:11:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good point."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469583722",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469583722",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469583722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTU4MzcyMg==",
    "user": {
      "login": "coderop2",
      "id": 28427884,
      "node_id": "MDQ6VXNlcjI4NDI3ODg0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28427884?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/coderop2",
      "html_url": "https://github.com/coderop2",
      "followers_url": "https://api.github.com/users/coderop2/followers",
      "following_url": "https://api.github.com/users/coderop2/following{/other_user}",
      "gists_url": "https://api.github.com/users/coderop2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/coderop2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/coderop2/subscriptions",
      "organizations_url": "https://api.github.com/users/coderop2/orgs",
      "repos_url": "https://api.github.com/users/coderop2/repos",
      "events_url": "https://api.github.com/users/coderop2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/coderop2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T08:18:22Z",
    "updated_at": "2019-03-05T08:22:20Z",
    "author_association": "NONE",
    "body": "@TomAugspurger  I am sorry I misunderstood for what you were explaining...I understand now\r\n@dargueta I was talking about the description given in the code...it goes like this\r\n       ` Encoding/decoding a Dataframe using ``'records'`` formatted JSON.`\r\n       `Note that index labels are not preserved with this encoding.`\r\n@TomAugspurger since I am new to open source can I work up a solution and present it here...if that solution is acceptable then I will create a pull req"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469731392",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469731392",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469731392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTczMTM5Mg==",
    "user": {
      "login": "dargueta",
      "id": 620513,
      "node_id": "MDQ6VXNlcjYyMDUxMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/620513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dargueta",
      "html_url": "https://github.com/dargueta",
      "followers_url": "https://api.github.com/users/dargueta/followers",
      "following_url": "https://api.github.com/users/dargueta/following{/other_user}",
      "gists_url": "https://api.github.com/users/dargueta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dargueta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dargueta/subscriptions",
      "organizations_url": "https://api.github.com/users/dargueta/orgs",
      "repos_url": "https://api.github.com/users/dargueta/repos",
      "events_url": "https://api.github.com/users/dargueta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dargueta/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T15:47:53Z",
    "updated_at": "2019-03-05T15:47:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I still think dropping the index is a bit of a nasty surprise, especially if my code gets handed a DataFrame that someone else's code created. I don't want to break _their_ code if I change my serialization format on the back end. Do you think there should be a way to override the default behavior, at least for `orient=\"records\"`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469734531",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469734531",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469734531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTczNDUzMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T15:56:20Z",
    "updated_at": "2019-03-05T15:56:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dargueta we need to consider backwards compatibility. Making `df.to_json(orient='records')` include the index would be an API breaking change.\r\n\r\nWe'll need a period where providing `index=True` with the records orient raises. After that time period we can reconsider allowing it.\r\n\r\nIn the meantime, you'll need to `.reset_index()` before calling `.to_json` with the records orient."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469734664",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469734664",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469734664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTczNDY2NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T15:56:39Z",
    "updated_at": "2019-03-05T15:56:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @TomAugspurger since I am new to open source can I work up a solution and present it here...if that solution is acceptable then I will create a pull req\r\n\r\nThat'd be great! Let us know if you need help getting started."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469737412",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469737412",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469737412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTczNzQxMg==",
    "user": {
      "login": "dargueta",
      "id": 620513,
      "node_id": "MDQ6VXNlcjYyMDUxMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/620513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dargueta",
      "html_url": "https://github.com/dargueta",
      "followers_url": "https://api.github.com/users/dargueta/followers",
      "following_url": "https://api.github.com/users/dargueta/following{/other_user}",
      "gists_url": "https://api.github.com/users/dargueta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dargueta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dargueta/subscriptions",
      "organizations_url": "https://api.github.com/users/dargueta/orgs",
      "repos_url": "https://api.github.com/users/dargueta/repos",
      "events_url": "https://api.github.com/users/dargueta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dargueta/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T16:03:20Z",
    "updated_at": "2019-03-05T16:03:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh I didn't mean *making* it the default, just providing a way to override the default behavior so that we can include it if desired without breaking backwards compatibility."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469738984",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469738984",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469738984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTczODk4NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T16:07:14Z",
    "updated_at": "2019-03-05T16:07:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think there's a way though, since the default index is currently\nTrue, right?\n\nOn Tue, Mar 5, 2019 at 10:04 AM Diego Argueta <notifications@github.com>\nwrote:\n\n> Oh I didn't mean *making* it the default, just providing a way to\n> override the default behavior so that we can include it if desired without\n> breaking backwards compatibility.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469737412>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIlK3ra6VLIiqn-ybVtscU20H-Pefks5vTpWDgaJpZM4bZsDw>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469753148",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469753148",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469753148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTc1MzE0OA==",
    "user": {
      "login": "dargueta",
      "id": 620513,
      "node_id": "MDQ6VXNlcjYyMDUxMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/620513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dargueta",
      "html_url": "https://github.com/dargueta",
      "followers_url": "https://api.github.com/users/dargueta/followers",
      "following_url": "https://api.github.com/users/dargueta/following{/other_user}",
      "gists_url": "https://api.github.com/users/dargueta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dargueta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dargueta/subscriptions",
      "organizations_url": "https://api.github.com/users/dargueta/orgs",
      "repos_url": "https://api.github.com/users/dargueta/repos",
      "events_url": "https://api.github.com/users/dargueta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dargueta/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T16:39:30Z",
    "updated_at": "2019-03-05T16:40:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well if we change the default of `index` to be `None` like you said earlier, then passing `True` explicitly would indicate the intent, no?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469755911",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469755911",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469755911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTc1NTkxMQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T16:45:32Z",
    "updated_at": "2019-03-05T16:45:32Z",
    "author_association": "MEMBER",
    "body": "Can you use the table orient in this case? It at least provides the data that you are looking for, albeit with some extra metadata attached.\r\n\r\nWe already have quite a few JSON serialization formats so I'd be hesitant to add more, especially given this functionality overlaps already with one of the other formats"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469758273",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469758273",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469758273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTc1ODI3Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T16:50:49Z",
    "updated_at": "2019-03-05T16:50:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, yes. I worry a bit about people who were previously passing\n`index=True`... But perhaps that's\nnot a valid concern.\n\nOn Tue, Mar 5, 2019 at 10:40 AM Diego Argueta <notifications@github.com>\nwrote:\n\n> Well if we change the default of index to be None like you said earlier,\n> then passing True explicitly would indicate the intent, no?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469753148>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIjPmjxRyEGUel0aZkBWwGTJCD63tks5vTp4LgaJpZM4bZsDw>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469800925",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-469800925",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 469800925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTgwMDkyNQ==",
    "user": {
      "login": "dargueta",
      "id": 620513,
      "node_id": "MDQ6VXNlcjYyMDUxMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/620513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dargueta",
      "html_url": "https://github.com/dargueta",
      "followers_url": "https://api.github.com/users/dargueta/followers",
      "following_url": "https://api.github.com/users/dargueta/following{/other_user}",
      "gists_url": "https://api.github.com/users/dargueta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dargueta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dargueta/subscriptions",
      "organizations_url": "https://api.github.com/users/dargueta/orgs",
      "repos_url": "https://api.github.com/users/dargueta/repos",
      "events_url": "https://api.github.com/users/dargueta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dargueta/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T18:40:41Z",
    "updated_at": "2019-03-05T18:41:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Can you use the table orient in this case? It at least provides the data that you are looking for, albeit with some extra metadata attached.\r\n\r\nSadly no, I'm dumping it using `lines=True` so that it can be read by a database. I didn't put that in my example to minimize the number of arguments that could be interacting.\r\n\r\n> We already have quite a few JSON serialization formats so I'd be hesitant to add more\r\n\r\nI wasn't suggesting adding another format, only changing the behavior of `index`.\r\n\r\n> Hmm, yes. I worry a bit about people who were previously passing `index=True`\r\n\r\nI wouldn't say that's an invalid concern, but it does make me question why someone would deliberately pass `index=True` and `orient='records'` if they *weren't* trying to get the behavior I wanted, based on what the documentation states. I imagine the change be an issue for users who're dynamically constructing the arguments and are relying on `index` being ignored. At the risk of coming off as a pedantic jerk, I'd say relying on that behavior is unwise to begin with."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/470094995",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25513#issuecomment-470094995",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25513",
    "id": 470094995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDA5NDk5NQ==",
    "user": {
      "login": "coderop2",
      "id": 28427884,
      "node_id": "MDQ6VXNlcjI4NDI3ODg0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28427884?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/coderop2",
      "html_url": "https://github.com/coderop2",
      "followers_url": "https://api.github.com/users/coderop2/followers",
      "following_url": "https://api.github.com/users/coderop2/following{/other_user}",
      "gists_url": "https://api.github.com/users/coderop2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/coderop2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/coderop2/subscriptions",
      "organizations_url": "https://api.github.com/users/coderop2/orgs",
      "repos_url": "https://api.github.com/users/coderop2/repos",
      "events_url": "https://api.github.com/users/coderop2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/coderop2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-06T12:49:24Z",
    "updated_at": "2019-03-06T13:32:17Z",
    "author_association": "NONE",
    "body": "@TomAugspurger if we are ignoring the index for the records orient then why cannot we just set it to false. But if we do a error is thrown accrding to:\r\n`if not index and orient not in ['split', 'table']:`\r\n`raise ValueError(\"'index=False' is only valid when 'orient' is \"\" 'split' or 'table' \")`\r\nBecause if you include records in the list and pass index as false no error is thrown"
  }
]
