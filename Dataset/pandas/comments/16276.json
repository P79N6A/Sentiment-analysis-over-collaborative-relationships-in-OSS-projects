[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299702887",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16276#issuecomment-299702887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16276",
    "id": 299702887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTcwMjg4Nw==",
    "user": {
      "login": "has2k1",
      "id": 780341,
      "node_id": "MDQ6VXNlcjc4MDM0MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/780341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/has2k1",
      "html_url": "https://github.com/has2k1",
      "followers_url": "https://api.github.com/users/has2k1/followers",
      "following_url": "https://api.github.com/users/has2k1/following{/other_user}",
      "gists_url": "https://api.github.com/users/has2k1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/has2k1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/has2k1/subscriptions",
      "organizations_url": "https://api.github.com/users/has2k1/orgs",
      "repos_url": "https://api.github.com/users/has2k1/repos",
      "events_url": "https://api.github.com/users/has2k1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/has2k1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-07T12:23:48Z",
    "updated_at": "2017-05-07T12:23:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have seen PR #15309, looked at the code for `pd.cut` and `IntervalIndex`, it is quiet thorny and it looks like the change in API for `pd.cut` is a by product of the difficult implementation. I have also discovered this:\r\n\r\n```python\r\npd.Categorical([pd.Interval(0, 2, 'both'), pd.Interval(2, 4, 'right')])\r\n# ValueError: intervals must all be closed on the same side\r\n```\r\n\r\nSo, the *expected input* posted above does not indicate an unknown issue. Also, the meaning of the `right` parameter has changed from this:\r\n\r\n```\r\nIndicates whether the bins include the *rightmost* edge or not.\r\n```\r\n\r\nto this:\r\n\r\n```\r\nIndicates whether the bins include the *right* edge or not.\r\n```\r\n\r\nSo it seems like to get back the old (and still documentated) meaning, the vectors of the `IntervalIndex` type must be allowed to have intervals that are not all closed on the same side. This change need not be chaotic, the restriction could be narrowed to \"*internal* invervals must all be closed on the same side\".\r\n\r\nWould this change come with any disastrous consequences?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299705960",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16276#issuecomment-299705960",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16276",
    "id": 299705960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTcwNTk2MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-07T13:20:32Z",
    "updated_at": "2017-05-07T13:20:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "In the prior implementation it was allowed to have mixed intervals, IOW, ones that didn't conform in a uniform way. This is not allowed directly from ``.cut``, though you could construct it manually I suppose. It is completely non-performant.\r\n\r\n```\r\nIn [5]: pd.cut(range(5), (0, 2, 4), include_lowest=True)\r\nOut[5]: \r\n[(-0.001, 2.0], (-0.001, 2.0], (-0.001, 2.0], (2.0, 4.0], (2.0, 4.0]]\r\nCategories (2, interval[float64]): [(-0.001, 2.0] < (2.0, 4.0]]\r\n\r\nIn [6]: pd.cut(range(5), (0, 2, 4))\r\nOut[6]: \r\n[NaN, (0, 2], (0, 2], (2, 4], (2, 4]]\r\nCategories (2, interval[int64]): [(0, 2] < (2, 4]]\r\n```\r\n\r\nThis is not a regression but eliminates a non-tested / non-documented case, which IMHO is pretty useless.\r\n\r\nIt is theoretically possible to support it *in* an index, but you would need a clear cut usecase."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299706425",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16276#issuecomment-299706425",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16276",
    "id": 299706425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTcwNjQyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-07T13:29:07Z",
    "updated_at": "2017-05-07T13:29:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "If you really really needed to replicate this, you can do this.\r\n\r\n```\r\nIn [4]: pd.cut(range(5), (0, 2, 4), include_lowest=True, labels=['[0, 2]', '(2, 4)'])\r\nOut[4]: \r\n[[0, 2], [0, 2], [0, 2], (2, 4), (2, 4)]\r\nCategories (2, object): [(2, 4) < [0, 2]]\r\n```\r\n\r\nThis is supported as much as scalar labels are, meaning you can directly index them, but this is NOT an IntervalIndex.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299772097",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16276#issuecomment-299772097",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16276",
    "id": 299772097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTc3MjA5Nw==",
    "user": {
      "login": "has2k1",
      "id": 780341,
      "node_id": "MDQ6VXNlcjc4MDM0MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/780341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/has2k1",
      "html_url": "https://github.com/has2k1",
      "followers_url": "https://api.github.com/users/has2k1/followers",
      "following_url": "https://api.github.com/users/has2k1/following{/other_user}",
      "gists_url": "https://api.github.com/users/has2k1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/has2k1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/has2k1/subscriptions",
      "organizations_url": "https://api.github.com/users/has2k1/orgs",
      "repos_url": "https://api.github.com/users/has2k1/repos",
      "events_url": "https://api.github.com/users/has2k1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/has2k1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T04:47:59Z",
    "updated_at": "2017-05-08T04:47:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is a minimal usecase\r\n\r\n```python\r\nimport pandas as pd\r\nfrom plotnine import *\r\n\r\ndf = pd.DataFrame({'x': range(5),\r\n                   'y': range(5),\r\n                   })\r\n\r\np = (ggplot(df, aes('x', 'y'))\r\n     + geom_point()\r\n     + facet_wrap('pd.cut(x, 2, include_lowest=True)')\r\n     + lims(x=(0, 4))\r\n   )\r\n\r\nprint(p)\r\n```\r\n![pdcut-facetwrap-pandas-0 20 0](https://cloud.githubusercontent.com/assets/780341/25790542/1b2bcdfa-337f-11e7-91b6-50f422d1dd83.png)\r\n\r\nThe labels to the panels are not precise, so you would have to reexamine the data limits to be certain of what data is at the edges. Second, integers that can be otherwise cut along integer lines have floating-point artefacts. These two issues add up when the code that generates the plots is a script not amendable to changes specific to the data currently being plotted.\r\n\r\nAnother usecase -- planned for the plotting system -- is a tree faceting feature. In this case without automatic precise intervals/labels I envision a more gnarly tree generating algorithm.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299775666",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16276#issuecomment-299775666",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16276",
    "id": 299775666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTc3NTY2Ng==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T05:23:56Z",
    "updated_at": "2017-05-08T05:23:56Z",
    "author_association": "MEMBER",
    "body": "> I have seen PR #15309, looked at the code for pd.cut and IntervalIndex, it is quiet thorny and it looks like the change in API for pd.cut is a by product of the difficult implementation.\r\n\r\nYes, I think this summarizes things correctly.\r\n\r\nI agree that exposing a floating point lower bound is non-ideal. This was the simplest thing to do for `IntervalIndex`, but we should have discussed it more before making this change in the 0.20 release.\r\n\r\nI think IntervalIndex could indeed be adjusted to accommodate an external interval that is closed on both sides -- and this might be the nicest solution, especially if the more complex indexing behavior is not really needed -- but it would indeed take some work to make this happen."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317144853",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16276#issuecomment-317144853",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16276",
    "id": 317144853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzE0NDg1Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-22T01:29:41Z",
    "updated_at": "2017-07-22T01:29:41Z",
    "author_association": "MEMBER",
    "body": "Closing since this was just a usage question."
  }
]
