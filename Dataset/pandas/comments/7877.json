[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50666961",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7877#issuecomment-50666961",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7877",
    "id": 50666961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjY2OTYx",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-30T19:27:38Z",
    "updated_at": "2014-07-30T19:27:38Z",
    "author_association": "MEMBER",
    "body": "Is it possible to provide this engine yourself by doing the following in the `with` context: `data.to_sql(table.name, connection.engine, if_exists='append')`?\n\nBecause then it is the question: do we ask the user to do this themselves, or do we provide the convenience (but also clutter in interface) to also accept a connection?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55134512",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7877#issuecomment-55134512",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7877",
    "id": 55134512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTM0NTEy",
    "user": {
      "login": "mmautner",
      "id": 1419652,
      "node_id": "MDQ6VXNlcjE0MTk2NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1419652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmautner",
      "html_url": "https://github.com/mmautner",
      "followers_url": "https://api.github.com/users/mmautner/followers",
      "following_url": "https://api.github.com/users/mmautner/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmautner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmautner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmautner/subscriptions",
      "organizations_url": "https://api.github.com/users/mmautner/orgs",
      "repos_url": "https://api.github.com/users/mmautner/repos",
      "events_url": "https://api.github.com/users/mmautner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmautner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-10T15:39:16Z",
    "updated_at": "2014-09-10T15:39:16Z",
    "author_association": "NONE",
    "body": "Can this issue be closed? I agree w/ jorisvandenbossche that a change to pandas isn't necessary--you can easily access the .engine property from a SQLAlchemy connection object:\n\n```\nfrom sqlalchemy import create_engine\nengine = create_engine('sqlite:///file.db')\nconnection = engine.connect()\n# 'connection.engine' now refers to a readily usable engine object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55191197",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7877#issuecomment-55191197",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7877",
    "id": 55191197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTkxMTk3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-10T22:12:22Z",
    "updated_at": "2014-09-10T22:12:22Z",
    "author_association": "MEMBER",
    "body": "You can indeed easily access the engine, but I don't really know how then the atomicity is handled (the reason to use a transaction in this case). Accessing the engine and using that, within the `with engine.begin() as con` context, does this defeat the purpose of that, or does this keep it atomic? \nAnybody who knows this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55261014",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7877#issuecomment-55261014",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7877",
    "id": 55261014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjYxMDE0",
    "user": {
      "login": "mmautner",
      "id": 1419652,
      "node_id": "MDQ6VXNlcjE0MTk2NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1419652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmautner",
      "html_url": "https://github.com/mmautner",
      "followers_url": "https://api.github.com/users/mmautner/followers",
      "following_url": "https://api.github.com/users/mmautner/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmautner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmautner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmautner/subscriptions",
      "organizations_url": "https://api.github.com/users/mmautner/orgs",
      "repos_url": "https://api.github.com/users/mmautner/repos",
      "events_url": "https://api.github.com/users/mmautner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmautner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-11T13:10:20Z",
    "updated_at": "2014-09-11T13:10:20Z",
    "author_association": "NONE",
    "body": "It's already done as a transaction:\n\nhttps://github.com/pydata/pandas/blob/master/pandas/io/sql.py#L633-L644\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55261475",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7877#issuecomment-55261475",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7877",
    "id": 55261475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjYxNDc1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-11T13:14:27Z",
    "updated_at": "2014-09-11T13:14:27Z",
    "author_association": "MEMBER",
    "body": "yes, but that is for _one_ `to_sql` call, while here @maxgrenderjones wants to do multiple such calls in one transaction\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56121686",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7877#issuecomment-56121686",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7877",
    "id": 56121686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTIxNjg2",
    "user": {
      "login": "artemyk",
      "id": 833768,
      "node_id": "MDQ6VXNlcjgzMzc2OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/833768?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artemyk",
      "html_url": "https://github.com/artemyk",
      "followers_url": "https://api.github.com/users/artemyk/followers",
      "following_url": "https://api.github.com/users/artemyk/following{/other_user}",
      "gists_url": "https://api.github.com/users/artemyk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artemyk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artemyk/subscriptions",
      "organizations_url": "https://api.github.com/users/artemyk/orgs",
      "repos_url": "https://api.github.com/users/artemyk/repos",
      "events_url": "https://api.github.com/users/artemyk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artemyk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T00:22:00Z",
    "updated_at": "2014-09-19T00:22:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I tested it and running a statement as\n\n``` python\nconn.engine.execute(sql)\n```\n\ndoes _not_ run it within the transaction (in other words, the statement would not be rolledback as needed)\n\nOne possibility would be to a `connection` kwarg to `to_sql`.  So the call would be:\n\n``` python\ndata.to_sql(table.name, engine, connection=connection, if_exists='append')\n```\n\n`connection` could be saved in the appropriate object and, if not `None`, used in `run_transaction` instead of creating a new connection.  Thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56150847",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7877#issuecomment-56150847",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7877",
    "id": 56150847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTUwODQ3",
    "user": {
      "login": "maxgrenderjones",
      "id": 6059365,
      "node_id": "MDQ6VXNlcjYwNTkzNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6059365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxgrenderjones",
      "html_url": "https://github.com/maxgrenderjones",
      "followers_url": "https://api.github.com/users/maxgrenderjones/followers",
      "following_url": "https://api.github.com/users/maxgrenderjones/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxgrenderjones/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxgrenderjones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxgrenderjones/subscriptions",
      "organizations_url": "https://api.github.com/users/maxgrenderjones/orgs",
      "repos_url": "https://api.github.com/users/maxgrenderjones/repos",
      "events_url": "https://api.github.com/users/maxgrenderjones/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxgrenderjones/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T08:34:46Z",
    "updated_at": "2014-09-19T08:34:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "That would work. Still feels like it might be easier to pass either a `connection` or an `engine`, but I guess the `connection` option perhaps _should_ be a little bit awkward, as it requires you to understand that you need to do your own transaction wrapping.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56163123",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7877#issuecomment-56163123",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7877",
    "id": 56163123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTYzMTIz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T10:55:23Z",
    "updated_at": "2014-09-19T10:55:23Z",
    "author_association": "MEMBER",
    "body": "@artemyk Are you sure that providing a `connection` _does_ run it within a transaction? As `connection.begin()` instead of `engine.begin()` does also run a transaction on its own. \nOr does it work if the `to_sql(..., connection, ...)` is nested in another connection begin? (http://docs.sqlalchemy.org/en/latest/core/connections.html#nesting-of-transaction-blocks)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56230628",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7877#issuecomment-56230628",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7877",
    "id": 56230628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjMwNjI4",
    "user": {
      "login": "artemyk",
      "id": 833768,
      "node_id": "MDQ6VXNlcjgzMzc2OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/833768?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artemyk",
      "html_url": "https://github.com/artemyk",
      "followers_url": "https://api.github.com/users/artemyk/followers",
      "following_url": "https://api.github.com/users/artemyk/following{/other_user}",
      "gists_url": "https://api.github.com/users/artemyk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artemyk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artemyk/subscriptions",
      "organizations_url": "https://api.github.com/users/artemyk/orgs",
      "repos_url": "https://api.github.com/users/artemyk/repos",
      "events_url": "https://api.github.com/users/artemyk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artemyk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T20:25:29Z",
    "updated_at": "2014-09-19T20:25:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche The connection contextmanager (i.e. `with engine.begin() as connection:`) does run things within a transaction --- that's what we use now in `run_transaction`, and it passes tests for properly commiting/rollingback.  \nYou are right that `connection.begin()` also is a way to run a transaction, that might be the right way to do nested transactions. Is that something we'd want to support?\nBTW, there already seems to be a way to pass in a cursor --- see `cur` and `is_cursor` parameters some functions take.  I'm not sure if that is deprecated or not, but seems clearly related to the functionality being requested here.  `to_sql` doesn't support it though, nor does `run_transaction` check to see if the connection is a cursor.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/87767820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7877#issuecomment-87767820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7877",
    "id": 87767820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NzY3ODIw",
    "user": {
      "login": "tr11",
      "id": 1305065,
      "node_id": "MDQ6VXNlcjEzMDUwNjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1305065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tr11",
      "html_url": "https://github.com/tr11",
      "followers_url": "https://api.github.com/users/tr11/followers",
      "following_url": "https://api.github.com/users/tr11/following{/other_user}",
      "gists_url": "https://api.github.com/users/tr11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tr11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tr11/subscriptions",
      "organizations_url": "https://api.github.com/users/tr11/orgs",
      "repos_url": "https://api.github.com/users/tr11/repos",
      "events_url": "https://api.github.com/users/tr11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tr11/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-30T17:45:02Z",
    "updated_at": "2015-03-30T17:45:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@artemyk, what is the advantage of using a sqlalchemy engine instead of a connection? Going through the io/sql.py code, we really only use `has_tables` and `table_names` functions of the engine, which is not that much of an issue since we can recover the engine from the connection (using the engine attribute of the connection).  \n\nIn fact, it seems to make more sense for the scope of pandas to operate at the connection level only. That way the user can have full control over sqlalchemy connection issues such as isolation levels, nested transactions/savepoints, etc (see [sqlalchemy engines and connections](http://docs.sqlalchemy.org/en/latest/core/connections.html)).\n\nMaybe we could default to use connections and create our own connection in case the user passes an engine? That way this would backwards compatible, but still allow for more advanced usage.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/87777196",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7877#issuecomment-87777196",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7877",
    "id": 87777196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3Nzc3MTk2",
    "user": {
      "login": "artemyk",
      "id": 833768,
      "node_id": "MDQ6VXNlcjgzMzc2OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/833768?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artemyk",
      "html_url": "https://github.com/artemyk",
      "followers_url": "https://api.github.com/users/artemyk/followers",
      "following_url": "https://api.github.com/users/artemyk/following{/other_user}",
      "gists_url": "https://api.github.com/users/artemyk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artemyk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artemyk/subscriptions",
      "organizations_url": "https://api.github.com/users/artemyk/orgs",
      "repos_url": "https://api.github.com/users/artemyk/repos",
      "events_url": "https://api.github.com/users/artemyk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artemyk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-30T18:11:30Z",
    "updated_at": "2015-03-30T18:11:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tr11 that sounds like a good idea to me.  @jorisvandenbossche thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/87793644",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7877#issuecomment-87793644",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7877",
    "id": 87793644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NzkzNjQ0",
    "user": {
      "login": "tr11",
      "id": 1305065,
      "node_id": "MDQ6VXNlcjEzMDUwNjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1305065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tr11",
      "html_url": "https://github.com/tr11",
      "followers_url": "https://api.github.com/users/tr11/followers",
      "following_url": "https://api.github.com/users/tr11/following{/other_user}",
      "gists_url": "https://api.github.com/users/tr11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tr11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tr11/subscriptions",
      "organizations_url": "https://api.github.com/users/tr11/orgs",
      "repos_url": "https://api.github.com/users/tr11/repos",
      "events_url": "https://api.github.com/users/tr11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tr11/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-30T19:06:35Z",
    "updated_at": "2015-03-30T19:06:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, I really needed this right now, so I just hacked a quick version (https://github.com/tr11/pandas/commit/fe6fee394f78a908e74cf3675668a4475db3c616) that passes all the tests with engines or connections. I will add standard tests that use connection parameters and a couple other ones that show the new things that can be done with transaction rollbacks, using temporary tables, etc.  If there is any interest in merging this, I can also update the documentation before submitting a pull request.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/101193992",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7877#issuecomment-101193992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7877",
    "id": 101193992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTE5Mzk5Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T08:50:16Z",
    "updated_at": "2015-05-12T08:50:16Z",
    "author_association": "MEMBER",
    "body": "@tr11 Sorry for the slow reaction here! \nIndeed, that looks like a good idea. If you would still want to make a PR for this (with tests and examples/docs), or give some comments on the newly opened PR #10105, that would be really great\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/101261808",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7877#issuecomment-101261808",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7877",
    "id": 101261808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTI2MTgwOA==",
    "user": {
      "login": "graingert",
      "id": 413772,
      "node_id": "MDQ6VXNlcjQxMzc3Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/graingert",
      "html_url": "https://github.com/graingert",
      "followers_url": "https://api.github.com/users/graingert/followers",
      "following_url": "https://api.github.com/users/graingert/following{/other_user}",
      "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/graingert/subscriptions",
      "organizations_url": "https://api.github.com/users/graingert/orgs",
      "repos_url": "https://api.github.com/users/graingert/repos",
      "events_url": "https://api.github.com/users/graingert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/graingert/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T12:44:15Z",
    "updated_at": "2015-05-12T12:44:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've updated the PR with these changes, and added tests\n"
  }
]
