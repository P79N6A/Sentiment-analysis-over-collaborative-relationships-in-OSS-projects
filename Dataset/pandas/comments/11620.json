[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157389512",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11620#issuecomment-157389512",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11620",
    "id": 157389512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzM4OTUxMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-17T14:44:45Z",
    "updated_at": "2015-11-17T14:44:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "this would be after #11603 \n\nbut you don't actually want to modify `roll_generic`, rather you want to have different functions for different dtypes based on there input. So would need to modify the templates to generate `object` ones (which is prob useful), otherwise coerce to float.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157441592",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11620#issuecomment-157441592",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11620",
    "id": 157441592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzQ0MTU5Mg==",
    "user": {
      "login": "sandhujasmine",
      "id": 359129,
      "node_id": "MDQ6VXNlcjM1OTEyOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/359129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sandhujasmine",
      "html_url": "https://github.com/sandhujasmine",
      "followers_url": "https://api.github.com/users/sandhujasmine/followers",
      "following_url": "https://api.github.com/users/sandhujasmine/following{/other_user}",
      "gists_url": "https://api.github.com/users/sandhujasmine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sandhujasmine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sandhujasmine/subscriptions",
      "organizations_url": "https://api.github.com/users/sandhujasmine/orgs",
      "repos_url": "https://api.github.com/users/sandhujasmine/repos",
      "events_url": "https://api.github.com/users/sandhujasmine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sandhujasmine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-17T17:18:37Z",
    "updated_at": "2015-11-17T17:39:59Z",
    "author_association": "NONE",
    "body": "Are the #11603 changes already in master?\n\nI thought about creating a different rolling_\\* function for each dtype but the logic would be almost identical to rolling_generic() with changes in the dtype of input and a couple of dtype changes in the function.\n\nIt seemed cleaner (and DRY) to always give it a float as 'input' and give it another numpy array called array_to_roll when we have a non-float type we wish to roll over. Are you concerned about performance? I was unsure if coercion should be exposed to user and if it should default to True, but optimized for speed - anyhow, moot points if that's not the route we wish to go.\n\nBut curious if you prefer different but almost identical functions to `roll_generic` for each non float dtype. I can certainly give this a go in another branch, and we can see how similar the functions are then discuss further. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157688652",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11620#issuecomment-157688652",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11620",
    "id": 157688652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzY4ODY1Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T11:51:53Z",
    "updated_at": "2015-11-18T11:51:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sandhujasmine we use template generation to handle the differnt dtypes, see `src/generate_code.pyx`. you would end up with `roll_generic_float64` and `roll_generic_object`. These refer to the input types (you can also use a fused type for this, look for the `numeric` type). but we usually have a separate routine for `object` as well, as it sometimes needs customization.\nfurther its possible to have a matrixed set of input/output types (but I don't really like this), and would instead assert that the input type produces the same output type (and if it doesn't then it would raise and we would just use the `roll_generic_object` anyhow.\n"
  }
]
