[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184406883",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-184406883",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 184406883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDQwNjg4Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-15T21:43:05Z",
    "updated_at": "2016-02-15T21:43:05Z",
    "author_association": "MEMBER",
    "body": "I think there is clear agreement about the following:\n- when doing integer positional indexing, using floats are not allowed.  \n  Eg:\n  \n  ```\n  In [22]: s = pd.Series([1,2,3])\n  \n  In [23]: s.iloc[0.0]\n  TypeError: cannot do positional indexing on <class 'pandas.indexes.range.RangeIn\n  dex'> with these indexers [0.0] of <type 'float'>\n  \n  In [24]: s2 = pd.Series([1,2,3], index=['a', 'b', 'c'])\n  \n  In [25]: s2[0.0]\n  TypeError: cannot do label indexing on <class 'pandas.indexes.base.Index'> with\n  these indexers [0.0] of <type 'float'>\n  ```\n  \n  This was deprecated and now errors after Jeff's PR.\n- when doing label indexing on a non-numerical index (this is logical, but just to be complete)\n\nThere is less agreement on when floats should be allowed when doing **label indexing on a numerical but not-float index** (so integer index or RangeIndex) in case the float can be interpreted as an integer:\n- Previously, these were interpreted as integers, but raised a deprecation warning\n- In current master, when setting, the float will be coerced to an integer when possible:\n  \n  ```\n  In [38]: s = pd.Series([1,2,3])\n  \n  In [39]: s[1.0] = 10\n  \n  In [40]: s\n  Out[40]:\n  0     1\n  1    10\n  2     3\n  dtype: int64\n  ```\n- But (also in current master), when getting a value, this still raises, also for coercables floats:\n  \n  ```\n  In [42]: s[1.0]\n  TypeError: cannot do label indexing on <class 'pandas.indexes.range.RangeIndex'>\n  with these indexers [1.0] of <type 'float'>\n  ```\n  \n  giving the strange contradiction between `s[1.0] = 10` and `s[1.0]` raising\n\nI think for setting, the _rule_ is if the label you want to set evaluates as equal to one of the labels in the index, then it works without changing the index (`1 == 1.0` and `1 != '1'`). If it does not evaluates to equal, then it is seen as a new label and the index is expanded.\n\nI would argue that the same rule should apply for _getting_ as for setting. \nOn the other hand, setting is already more flexible (as for example `s[1.5] = 10` is allowed and will upcast the index, while getting with this `s[1.5]` obviously raises).\n\ncc @shoyer @TomAugspurger\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184420134",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-184420134",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 184420134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDQyMDEzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-15T22:19:17Z",
    "updated_at": "2016-02-15T22:19:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "The issue I have with @jorisvandenbossche last\n\n> I think for setting, the rule is if the label you want to set evaluates as equal to one of the labels in the index, then it works without changing the index (1 == 1.0 and 1 != '1'). If it does not evaluates to equal, then it is seen as a new label and the index is expanded.\n\nas this would _only_ apply to `[], .ix` and NOT `.loc` as `.loc` is strict about labels while the others can do positional AND/OR labels.\n\nBut since this in an integer index we are talking about we have the odd fallback where it is treated like a label (`.ix`), so this would be inconsistent then? (of course I may be misrepresenting things here as fallback is simply confusing).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184421965",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-184421965",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 184421965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDQyMTk2NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-15T22:24:37Z",
    "updated_at": "2016-02-15T22:24:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "> as this would only apply to [], .ix and NOT .loc as .loc is strict about labels while the others can do positional AND/OR labels.\n\nWe could say that a python dict is also strict about labels, but `{1: 'one'}[1.0]` goes through fine.\n\nI think I'm in agreement with Joris; haven't though how it affects fallback indexing entirely yet.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184608575",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-184608575",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 184608575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDYwODU3NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T10:10:56Z",
    "updated_at": "2016-02-16T10:10:56Z",
    "author_association": "MEMBER",
    "body": "AFAIK, integer indexes don't have any fallback to positional, and the indexer is _always_ interpreted as label. So I don't see how this could mess up with the fallback indexing.\n\n> .loc is strict about labels while the others can do positional AND/OR labels.\n\nI don't see why that is a reason to make `.loc` have different behaviour, as we are speaking here _only_ about label indexing, not positional.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184609080",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-184609080",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 184609080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDYwOTA4MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T10:12:37Z",
    "updated_at": "2016-02-16T10:12:37Z",
    "author_association": "MEMBER",
    "body": "You also have this discrepancy:\n\n```\nIn [71]: 1.0 in s.index\nOut[71]: True\n\nIn [72]: s[1.0]\nTypeError: cannot do label indexing on <class 'pandas.indexes.numeric.Int64Index\n'> with these indexers [1.0] of <type 'float'>\n```\n\n(to be honest, it would only be a full discrepancy if this gave a \"KeyError 1.0 not found in index\")\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184697849",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-184697849",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 184697849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDY5Nzg0OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T14:19:07Z",
    "updated_at": "2016-02-16T14:19:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, so @jorisvandenbossche what do you think _should_ work then. give me an example for setting/getting with the various indexers.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184770215",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-184770215",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 184770215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDc3MDIxNQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T16:59:16Z",
    "updated_at": "2016-02-16T16:59:16Z",
    "author_association": "MEMBER",
    "body": "I agree with @jorisvandenbossche, as I stated in the last PR:\n- `__setitem__` and `__getitem__` should be entirely consistent\n- We should use equality (like the Python dict) to determine whether or not a key matches\n- If inserting a key that doesn't exist, then the index type is upcast if necessary \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184779203",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-184779203",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 184779203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDc3OTIwMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T17:16:36Z",
    "updated_at": "2016-02-16T17:16:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "so @shoyer then essentially you want to have full support back for float indexers? (excluding `.iloc`)\n\nthats what your conditions imply.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184786423",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-184786423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 184786423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDc4NjQyMw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T17:27:25Z",
    "updated_at": "2016-02-16T17:27:25Z",
    "author_association": "MEMBER",
    "body": "@jreback Yes, I guess so. If pandas were stricter about not upcasting types (or even better, if we did not support reindexing with `.loc` at all), then it could make sense to make the distinction. But as is, I think we should be OK with float indexers. Obviously float indexers that don't match an integer will still result in KeyError, though\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/185235181",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-185235181",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 185235181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTIzNTE4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T14:45:33Z",
    "updated_at": "2016-02-17T14:45:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suppose this means we are reverting this as well.\n\n```\nIn [1]: s = Series(range(3))\n\nIn [2]: s\nOut[2]: \n0    0\n1    1\n2    2\ndtype: int64\n\nIn [3]: s[1.0:2]\nTypeError: cannot do slice start value indexing on <class 'pandas.indexes.range.RangeIndex'> with these indexers [1.0] of <type 'float'>\n```\n\nand have it return equiv of `s[1:2]` (and allow setting).\n\nNote that this will only apply to integer-like indices as string index will still raise `TypeError`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/185245714",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-185245714",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 185245714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTI0NTcxNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T15:11:40Z",
    "updated_at": "2016-02-17T15:11:40Z",
    "author_association": "MEMBER",
    "body": "> I suppose this means we are reverting this as well.\n> \n> In [3]: s[1.0:2]\n> TypeError: cannot do slice start value indexing on <class 'pandas.indexes.range.RangeIndex'>\n\nNo, that should still raise, as this is _positional_ indexing (alas ..):\n\n```\nIn [84]: s = pd.Series([1,2,3,4], index=range(1,5))\n\nIn [85]: s\nOut[85]:\n1    1\n2    2\n3    3\n4    4\ndtype: int64\n\nIn [86]: s[1:3]\nOut[86]:\n2    2\n3    3\ndtype: int64\n\nIn [87]: s[1.0:3]\nTypeError: cannot do slice start value indexing on <class 'pandas.indexes.numeri\nc.Int64Index'> with these indexers [1.0] of <type 'float'>\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/185246550",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-185246550",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 185246550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTI0NjU1MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T15:13:12Z",
    "updated_at": "2016-02-17T15:13:12Z",
    "author_association": "MEMBER",
    "body": "But you are correct for the case of slicing in `.ix` (and `.loc`). But strangely this does not raise on master for me at the moment:\n\n```\nIn [88]: s.ix[1.0:3]\nOut[88]:\n1    1\n2    2\n3    3\ndtype: int64\n\nIn [89]: pd.__version__\nOut[89]: '0.18.0rc1+10.gcac5f8b'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/185252844",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-185252844",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 185252844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTI1Mjg0NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T15:23:59Z",
    "updated_at": "2016-02-17T15:23:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "that last has always been allowed.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/185725447",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-185725447",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 185725447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTcyNTQ0Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-18T13:41:41Z",
    "updated_at": "2016-02-18T13:41:41Z",
    "author_association": "MEMBER",
    "body": "@jreback I don't really understand the confusion between us. My main issue is (here and in https://github.com/pydata/pandas/pull/12370/files#r53281590): I don't see why we should have differences in behaviour between scalar indexing and slicing (with regard to labels being found or not). It should just be:\n- positional: floats are disallowed, only integers\n- label-based: we use equality to see if a label matches\n\nThis last rule is then applicable to `loc`/`ix`/`[]` for scalar indexing (as these are all label based), and to `loc`/`ix` for slicing (as `[]` is positional and not label-based in the case of slicing, and so should follow the positional rule).\n\nWhy would this last one be different for `loc`? \nIf you find a matching label with `s.loc[1.0]`, why should this exact same label not match in `s.loc[1.0:2]` ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/185733374",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-185733374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 185733374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTczMzM3NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-18T13:55:03Z",
    "updated_at": "2016-02-18T13:55:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "the confusion is we had agreement on disallowing floats in indexers except for float indices\n\nwhich is s very simple rule\n\nnow we are allowing them all over the place essentially going back to where we were \n\ncreating another indexing mess where nothing is simple\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186666546",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-186666546",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 186666546,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjY2NjU0Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-20T19:00:04Z",
    "updated_at": "2016-02-20T19:00:04Z",
    "author_association": "MEMBER",
    "body": "> now we are allowing them all over the place essentially going back to where we were \n> creating another indexing mess where nothing is simple\n\nAnd I am sorry for that, as you are doing the hard work in dealing with the complex indexing code, and then changing behaviour every time is not making it easier\n\n> the confusion is we had agreement on disallowing floats in indexers except for float indices \n> which is s very simple rule\n\nOK, I agree that that is indeed a clear and simple rule. However, I personally think the rule should be how @shoyer formulated it: _\"We should use equality to determine whether or not a key matches\"_. \nI understand that you are maybe in favor of the \"disallow all floats except for FloatIndex\" rule (is that the case?). \nBut if we accept the equality-rule (which I thought you did, as in the merged PR #12246, you applied it for the setitem case), I think this rule should be entirely consistent for both setitem and getitem, for both scalar indexing as slicing, for both `ix` and `loc`.\n\nIt's from that point of vue (accepting the equality-rule), that I don't see why positional based slicing in `loc` should be different.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186668531",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-186668531",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 186668531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjY2ODUzMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-20T19:21:29Z",
    "updated_at": "2016-02-20T19:21:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I want to echo @jorisvandenbossche thanks for all your work on this. I'm still too scared to open up `core/indexing.py` :smile: \n\nThe rules of\n- equality for key / label indexing (like python's dict)\n- strict (integer) for location indexing (like where NumPy's going)\n- symmetry between getitem and setitem\n\nare the best. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186668643",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-186668643",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 186668643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjY2ODY0Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-20T19:23:29Z",
    "updated_at": "2016-02-20T19:23:29Z",
    "author_association": "MEMBER",
    "body": "Hmm, the `loc` slicing case is a bit more complicated than I thought ... I didn't think about the case where the float does not match one of the labels, because that is currently allowed in slicing\n\n(Using 0.17.1 here for the examples) Assuming we follow the rules as @shoyer summarised them above (https://github.com/pydata/pandas/issues/12333#issuecomment-184770215), accessing one value with a float that matches should work:\n\n```\nIn [1]: s = Series(range(3))\n\nIn [2]: s\nOut[2]:\n0    0\n1    1\n2    2\ndtype: int64\n\nIn [4]: s.loc[1.0]\nOut[4]: 1\n```\n\nThen I would say, slicing with matching items should also work:\n\n```\nIn [5]: s.loc[1.0:2]\nOut[5]:\n1    1\n2    2\ndtype: int64\n```\n\nBut what to do with slicing with a float that does _not_ match one of the labels in the index? When slicing with integers, the slice values don't need to be contained in the index, eg:\n\n```\nIn [6]: s.loc[1:10]\nOut[6]:\n1    1\n2    2\ndtype: int64\n```\n\nSo should this also work with floats? And currently, this also works with floats with a fractional part, eg:\n\n```\nIn [7]: s.loc[0.5:2.5]\nOut[7]:\n1    1\n2    2\ndtype: int64\n```\n\nSo in the **slicing** case, there is no equality required (only an ability to do searchsorted?), in the case of a monotonic index. So the defined rules do not really cover this case ..\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186669026",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-186669026",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 186669026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjY2OTAyNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-20T19:29:28Z",
    "updated_at": "2016-02-20T19:29:28Z",
    "author_association": "MEMBER",
    "body": "Slicing with floats in on an integer index is actually (now I remember) deliberately implemented, and even extended to work with decreasing monotonic indexes by @shoyer (https://github.com/pydata/pandas/pull/8680) even after the initial deprecation for float indexers was put in place.\n\nThis also did not raise a deprecation warning:\n\n```\nIn [1]: pd.__version__\nOut[1]: u'0.17.1'\n\nIn [2]: s = Series(range(3))\n\nIn [3]: s.loc[1.0:2.5]\nOut[3]:\n1    1\n2    2\ndtype: int64\n```\n\nwhile the above now raises in master. So @jreback even if we decide that we don't want this behaviour any longer, we should at least first deprecate it IMO.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186672336",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-186672336",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 186672336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjY3MjMzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-20T19:57:19Z",
    "updated_at": "2016-02-20T20:00:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't mind fixing it to be the right API, but I don't agree with @shoyer at all here. The indexing should strictly depend on the index type. I don't see why a float should be coereced to integer if they happen to be equal.\n\nI heare preaching all the time about how data shouldn't determine indexing. Well isn't that exactly what you are doing here?\n\nWe should not allow float indexer/slicers at all except with `Float64Index`, full-stop. This is a natural and simple rule. Everything else leads to confusion, special cases and whatnot. \n\nA python dictionary and numpy are just too simple for this case. They don't have to simultaneously deal with different TYPES of indexers and they only care about strict label matching (dicts) or positional (numpy).\n\nTo be honest I don't care what the rules are for `.ix`, whatever goes is fine, its already pretty screwed up. However for `.loc` we have some very strict rules. Every case above you mentioned is bending them some more, pretty soon this just be another `.ix`.\n\nPandas must deal with both.\n\nI think this is getting pretty lost in the fact that a user should have really well laid out rules for what is expected of indexing. They by definition HAVE to be simple. They are already way way too complex and special cased.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186683908",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12333#issuecomment-186683908",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12333",
    "id": 186683908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjY4MzkwOA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-20T21:31:36Z",
    "updated_at": "2016-02-20T21:31:36Z",
    "author_association": "MEMBER",
    "body": "This discussion reminds me of the one we had back in #8613. \n\nWe ended resolving this by _not_ making a distinction between floats and integers for label based indexing: #9566\n"
  }
]
