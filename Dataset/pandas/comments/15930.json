[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292336419",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15930#issuecomment-292336419",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15930",
    "id": 292336419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjMzNjQxOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T21:58:54Z",
    "updated_at": "2017-04-06T21:58:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you make a full copy-pastable example (including constructing `data_index`)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292338668",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15930#issuecomment-292338668",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15930",
    "id": 292338668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjMzODY2OA==",
    "user": {
      "login": "jadolfbr",
      "id": 3290052,
      "node_id": "MDQ6VXNlcjMyOTAwNTI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3290052?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jadolfbr",
      "html_url": "https://github.com/jadolfbr",
      "followers_url": "https://api.github.com/users/jadolfbr/followers",
      "following_url": "https://api.github.com/users/jadolfbr/following{/other_user}",
      "gists_url": "https://api.github.com/users/jadolfbr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jadolfbr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jadolfbr/subscriptions",
      "organizations_url": "https://api.github.com/users/jadolfbr/orgs",
      "repos_url": "https://api.github.com/users/jadolfbr/repos",
      "events_url": "https://api.github.com/users/jadolfbr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jadolfbr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T22:08:54Z",
    "updated_at": "2017-04-06T22:08:54Z",
    "author_association": "NONE",
    "body": "Sure. \r\n\r\n```python\r\nimport pandas\r\ndata_index = pandas.read_table(\"data_index.tsv\")\r\ndf = data_index[data_index['torsions'] == 2]\r\nprint df\r\n```\r\n\r\nTop Contents of ```data_index.tsv``` (sugar molecule linkages):\r\n\r\n```\r\nname\tfname\tntorsions\ttorsion_bins\r\nb-D-GlcpNAc ->4)-D-GlcpNAc\tb-D-GlcpNAc_-_4_-D-GlcpNAc.tsv\t2\t2.3\r\na-D-Glcp ->4)-D-Glcp\ta-D-Glcp_-_4_-D-Glcp.tsv\t2\t2.2\r\nb-D-Manp ->4)-D-GlcpNAc\tb-D-Manp_-_4_-D-GlcpNAc.tsv\t2\t5.5\r\na-L-Fucp ->3)-D-GlcpNAc\ta-L-Fucp_-_3_-D-GlcpNAc.tsv\t2\t2.3\r\nb-D-Xylp ->2)-D-Manp\tb-D-Xylp_-_2_-D-Manp.tsv\t2\t3.4\r\na-D-Manp ->3)-D-Manp\ta-D-Manp_-_3_-D-Manp.tsv\t2\t4.3\r\na-D-Manp ->6)-D-Manp\ta-D-Manp_-_6_-D-Manp.tsv\t3\t2.4.4\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292340750",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15930#issuecomment-292340750",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15930",
    "id": 292340750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjM0MDc1MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T22:18:58Z",
    "updated_at": "2017-04-06T22:18:58Z",
    "author_association": "MEMBER",
    "body": "As you mention yourself, you can use `reset_index(drop = True)` to get the desired result. \r\n\r\nChanging this (to do this resetting automatically when doing a slice) would fundamentally change how pandas currently works. \r\nAnd would for sure break a huge amount of code (many pandas code relies on the index being certain values, certainly when having specific indexes like a DatetimeIndex).\r\n\r\nThere are some ideas for a future release of pandas to allow dataframes without an explicit index (see https://github.com/pandas-dev/pandas2/issues/17, but that is currenlty just a discussion, no code or commitment this actually will happen)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292341215",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15930#issuecomment-292341215",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15930",
    "id": 292341215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjM0MTIxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T22:21:21Z",
    "updated_at": "2017-04-06T22:22:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jadolfbr this is *fundamental* pandas behavior. The *index* is preserved thru virtually all operations. That's the point.\r\n\r\nAnd combing is actually quite easy with ``.join``, or assignment, again, that the fundamental thing that pandas does, it *aligns* on the index.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292353591",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15930#issuecomment-292353591",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15930",
    "id": 292353591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjM1MzU5MQ==",
    "user": {
      "login": "jadolfbr",
      "id": 3290052,
      "node_id": "MDQ6VXNlcjMyOTAwNTI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3290052?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jadolfbr",
      "html_url": "https://github.com/jadolfbr",
      "followers_url": "https://api.github.com/users/jadolfbr/followers",
      "following_url": "https://api.github.com/users/jadolfbr/following{/other_user}",
      "gists_url": "https://api.github.com/users/jadolfbr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jadolfbr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jadolfbr/subscriptions",
      "organizations_url": "https://api.github.com/users/jadolfbr/orgs",
      "repos_url": "https://api.github.com/users/jadolfbr/repos",
      "events_url": "https://api.github.com/users/jadolfbr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jadolfbr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T23:02:18Z",
    "updated_at": "2017-04-06T23:02:18Z",
    "author_association": "NONE",
    "body": "I think options to allow dataframes without indexes would be great. They are extremely unwieldy without resetting that index.  Maybe if you have multiple indexes with layers, etc, they would be good.  However, these easily run into tons of problems in pandas as it stands now, so most of us in our lab shy away from that. \r\n\r\n\r\nHere is is a simple example.  Maybe you can suggest a better way and say that I'm using pandas wrong.  That's fine too.  This is just to divide two values that are different experiments (and yes, in this case the row order does matter):\r\n\r\n```python\r\nlength_data['length_rr'] = (rr_data[rr_data['exp'] == 'mw']['length_rr'].reset_index(drop=True)\\\r\n                            /rr_data[rr_data['exp'] == 'mo']['length_rr'].reset_index(drop=True))\r\n\r\nlength_data2['length_rr'] = (rr_data[rr_data['exp'] == 'rmw']['length_rr'].reset_index(drop=True)\\\r\n                             /rr_data[rr_data['exp'] == 'rmo']['length_rr'].reset_index(drop=True))\r\n\r\nlength_enrich = pandas.concat([length_data, length_data2]).reset_index(drop=True)\r\n\r\n```\r\nNote that for the concat, if you don't reset and drop the index, pandas throws a duplicate index error if you do not reset with drop. \r\n\r\nFor joining, etc. the indexes can again get in the way. Many times you want to be joining based on some operation of the _data_, so we use _merge_.  But I guess that might be preference.  \r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292359658",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15930#issuecomment-292359658",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15930",
    "id": 292359658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjM1OTY1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T23:24:25Z",
    "updated_at": "2017-04-06T23:24:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "you are not using pandas power at all. you are in fact making a big assumption that the data that you are dividing is exactly the same length and perfectly lines up. maybe that's always true for you.\r\n\r\nI would probably do something like this. In fact this is quite general and deals with missing labeled data.\r\n```\r\nIn [34]: df = DataFrame({'l': [1, 1, 1, 2, 2, 2], 'obs': [1, 2, 3, 1, 2, 3], 'value': [1, 2, 3, 4, 5, 6]})\r\n\r\nIn [35]: df\r\nOut[35]: \r\n   l  obs  value\r\n0  1    1      1\r\n1  1    2      2\r\n2  1    3      3\r\n3  2    1      4\r\n4  2    2      5\r\n5  2    3      6\r\n\r\nIn [36]: df = df.set_index(['l', 'obs'])\r\n\r\nIn [37]: df\r\nOut[37]: \r\n       value\r\nl obs       \r\n1 1        1\r\n  2        2\r\n  3        3\r\n2 1        4\r\n  2        5\r\n  3        6\r\n\r\nIn [38]: df.value.loc[1] / df.value.loc[2]\r\nOut[38]: \r\nobs\r\n1    0.25\r\n2    0.40\r\n3    0.50\r\nName: value, dtype: float64\r\n```\r\n\r\nThis is a slightly different and IMHO better way of organizing things.\r\n```\r\nIn [39]: df.unstack()\r\nOut[39]: \r\n    value      \r\nobs     1  2  3\r\nl              \r\n1       1  2  3\r\n2       4  5  6\r\n\r\nIn [40]: u = df.unstack()\r\n\r\nIn [41]: u.loc[1] / u.loc[2]\r\nOut[41]: \r\n       obs\r\nvalue  1      0.25\r\n       2      0.40\r\n       3      0.50\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292363465",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15930#issuecomment-292363465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15930",
    "id": 292363465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjM2MzQ2NQ==",
    "user": {
      "login": "jadolfbr",
      "id": 3290052,
      "node_id": "MDQ6VXNlcjMyOTAwNTI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3290052?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jadolfbr",
      "html_url": "https://github.com/jadolfbr",
      "followers_url": "https://api.github.com/users/jadolfbr/followers",
      "following_url": "https://api.github.com/users/jadolfbr/following{/other_user}",
      "gists_url": "https://api.github.com/users/jadolfbr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jadolfbr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jadolfbr/subscriptions",
      "organizations_url": "https://api.github.com/users/jadolfbr/orgs",
      "repos_url": "https://api.github.com/users/jadolfbr/repos",
      "events_url": "https://api.github.com/users/jadolfbr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jadolfbr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T23:42:31Z",
    "updated_at": "2017-04-06T23:42:31Z",
    "author_association": "NONE",
    "body": "Thanks for the suggestion.  Yes, this seems much better than what I was trying to do - use the indexes instead of fighting with them and trying to go around them.  Makes sense.  I guess this would make joining a whole lot more straightforward too.  Awesome.  Thanks for taking the time to write back.  "
  }
]
