[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/211886777",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12923#issuecomment-211886777",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12923",
    "id": 211886777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTg4Njc3Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T12:08:27Z",
    "updated_at": "2016-04-19T12:08:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you checkout https://github.com/pydata/pandas/pull/12743, which is closing a bunch of these issues, and ensure that it gives you the expected answers? I'm having a bit of trouble understanding your output since the formatting is off, but it looks correct on that branch.\n\nLet's move the discussion there if there are any issues.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/211902168",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12923#issuecomment-211902168",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12923",
    "id": 211902168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTkwMjE2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T12:32:07Z",
    "updated_at": "2016-04-19T12:32:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [1]: df=pd.DataFrame(np.ones((150,4)),columns=['A','B','C','D'],\n   ...: index=pd.date_range('2014-01-01',freq='D',periods=150))\n\nIn [2]: df2=pd.DataFrame(np.zeros((150,4)),columns=['A','B','C','D'],\n   ...: index=pd.date_range('2014-01-01',freq='D',periods=150))\n\nIn [3]: df=pd.concat([df,df2])\n\nIn [4]: print df.groupby('B').mean()\n       A    C    D\nB                 \n0.0  0.0  0.0  0.0\n1.0  1.0  1.0  1.0\n\nIn [5]: print df.groupby('B').resample('MS').mean().head()\n                  A    B    C    D\nB                                 \n0.0 2014-01-01  0.0  0.0  0.0  0.0\n    2014-02-01  0.0  0.0  0.0  0.0\n    2014-03-01  0.0  0.0  0.0  0.0\n    2014-04-01  0.0  0.0  0.0  0.0\n    2014-05-01  0.0  0.0  0.0  0.0\n\nIn [6]: print 'shape : ',df.groupby('B').resample('MS').mean().shape\nshape :  (10, 4)\n\nIn [7]: print df.groupby('B').apply(lambda x:x.resample('MS').mean()).head()\n                  A    B    C    D\nB                                 \n0.0 2014-01-01  0.0  0.0  0.0  0.0\n    2014-02-01  0.0  0.0  0.0  0.0\n    2014-03-01  0.0  0.0  0.0  0.0\n    2014-04-01  0.0  0.0  0.0  0.0\n    2014-05-01  0.0  0.0  0.0  0.0\n\nIn [8]: print 'shape : ',df.groupby('B').apply(lambda x:x.resample('MS').mean()).shape\nshape :  (10, 4)\nIn [9]: print df.groupby('B').mean()\n       A    C    D\nB                 \n0.0  0.0  0.0  0.0\n1.0  1.0  1.0  1.0\n\nIn [10]: print df.groupby('B').resample('H').mean().head()\n                           A    B    C    D\nB                                          \n0.0 2014-01-01 00:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 01:00:00  NaN  NaN  NaN  NaN\n    2014-01-01 02:00:00  NaN  NaN  NaN  NaN\n    2014-01-01 03:00:00  NaN  NaN  NaN  NaN\n    2014-01-01 04:00:00  NaN  NaN  NaN  NaN\n\nIn [11]: print 'shape : ',df.groupby('B').resample('H').mean().shape\nshape :  (7154, 4)\n\nIn [12]: print df.groupby('B').apply(lambda x:x.resample('H').mean()).head()\n                           A    B    C    D\nB                                          \n0.0 2014-01-01 00:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 01:00:00  NaN  NaN  NaN  NaN\n    2014-01-01 02:00:00  NaN  NaN  NaN  NaN\n    2014-01-01 03:00:00  NaN  NaN  NaN  NaN\n    2014-01-01 04:00:00  NaN  NaN  NaN  NaN\n\nIn [13]: print 'shape : ',df.groupby('B').apply(lambda x:x.resample('H').mean()).shape\nshape :  (7154, 4)\n\nIn [14]: print 'pd version', pd.__version__\npd version 0.18.0+129.g928a8b4\n```\n\nSo these all look correct to me, as @TomAugspurger says, #12743 will resolve any remaining issues here. In esscense `df.groupby(...).resample(...)` is doing `df.groupby(...).apply(lambda x: x.resample(...))` under the hood\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/211917684",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12923#issuecomment-211917684",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12923",
    "id": 211917684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTkxNzY4NA==",
    "user": {
      "login": "BreitA",
      "id": 11616460,
      "node_id": "MDQ6VXNlcjExNjE2NDYw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11616460?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BreitA",
      "html_url": "https://github.com/BreitA",
      "followers_url": "https://api.github.com/users/BreitA/followers",
      "following_url": "https://api.github.com/users/BreitA/following{/other_user}",
      "gists_url": "https://api.github.com/users/BreitA/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BreitA/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BreitA/subscriptions",
      "organizations_url": "https://api.github.com/users/BreitA/orgs",
      "repos_url": "https://api.github.com/users/BreitA/repos",
      "events_url": "https://api.github.com/users/BreitA/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BreitA/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T13:08:27Z",
    "updated_at": "2016-04-19T13:12:34Z",
    "author_association": "NONE",
    "body": "So the different behavior we have here : \n\n#### YOU\n\n```\nIn [10]: print df.groupby('B').resample('H').mean().head()\n                           A    B    C    D\nB                                          \n0.0 2014-01-01 00:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 01:00:00  NaN  NaN  NaN  NaN\n    2014-01-01 02:00:00  NaN  NaN  NaN  NaN\n    2014-01-01 03:00:00  NaN  NaN  NaN  NaN\n    2014-01-01 04:00:00  NaN  NaN  NaN  NaN\n```\n\n#### ME\n\n```\nIn [10]: print df.groupby('B').resample('H').mean().head()\n                  A    B    C    D\nB                                 \n0.0 2014-01-01  0.0  0.0  0.0  0.0\n    2014-01-02  0.0  0.0  0.0  0.0\n    2014-01-03  0.0  0.0  0.0  0.0\n    2014-01-04  0.0  0.0  0.0  0.0\n    2014-01-05  0.0  0.0  0.0  0.0\nshape :  (225, 4)\n```\n\nThis will be fixed in next build?  \n\nAlso is it normal B isn't dropped anymore? It seems weird it is dropped for simple functions such as .mean() but not for resampling. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/211919415",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12923#issuecomment-211919415",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12923",
    "id": 211919415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTkxOTQxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T13:14:56Z",
    "updated_at": "2016-04-19T13:16:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@BreitA you are probably looking to do this:\n\n```\nIn [6]: df.groupby('B').resample('H').ffill()\nOut[6]: \n                           A    B    C    D\nB                                          \n0.0 2014-01-01 00:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 01:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 02:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 03:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 04:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 05:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 06:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 07:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 08:00:00  0.0  0.0  0.0  0.0\n```\n\n`.mean()` is a downsamping operation and doesn't make any sense here (it works, but is probably not what you want)\n\nThe implemenation is exactly this. Yes you are doing an operation on the entire frame, so it makes sense to keep all columns.\n\n```\nIn [9]: df.groupby('B').apply(lambda x: x.resample('H').ffill())\nOut[9]: \n                           A    B    C    D\nB                                          \n0.0 2014-01-01 00:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 01:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 02:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 03:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 04:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 05:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 06:00:00  0.0  0.0  0.0  0.0\n    2014-01-01 07:00:00  0.0  0.0  0.0  0.0\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/211931268",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12923#issuecomment-211931268",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12923",
    "id": 211931268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTkzMTI2OA==",
    "user": {
      "login": "BreitA",
      "id": 11616460,
      "node_id": "MDQ6VXNlcjExNjE2NDYw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11616460?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BreitA",
      "html_url": "https://github.com/BreitA",
      "followers_url": "https://api.github.com/users/BreitA/followers",
      "following_url": "https://api.github.com/users/BreitA/following{/other_user}",
      "gists_url": "https://api.github.com/users/BreitA/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BreitA/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BreitA/subscriptions",
      "organizations_url": "https://api.github.com/users/BreitA/orgs",
      "repos_url": "https://api.github.com/users/BreitA/repos",
      "events_url": "https://api.github.com/users/BreitA/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BreitA/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T13:53:28Z",
    "updated_at": "2016-04-19T13:53:28Z",
    "author_association": "NONE",
    "body": "yeah I know the example is kind of silly (using .mean() for upsampling). The point was that the behavior was not the same by using apply(lambda x:x.resample.mean()) instead of using .resample.mean()\n"
  }
]
