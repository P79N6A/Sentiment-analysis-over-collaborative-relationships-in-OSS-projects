[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23233429",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-23233429",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 23233429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjMzNDI5",
    "user": {
      "login": "nehalecky",
      "id": 1455590,
      "node_id": "MDQ6VXNlcjE0NTU1OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1455590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nehalecky",
      "html_url": "https://github.com/nehalecky",
      "followers_url": "https://api.github.com/users/nehalecky/followers",
      "following_url": "https://api.github.com/users/nehalecky/following{/other_user}",
      "gists_url": "https://api.github.com/users/nehalecky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nehalecky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nehalecky/subscriptions",
      "organizations_url": "https://api.github.com/users/nehalecky/orgs",
      "repos_url": "https://api.github.com/users/nehalecky/repos",
      "events_url": "https://api.github.com/users/nehalecky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nehalecky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-25T19:05:11Z",
    "updated_at": "2013-08-25T19:05:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Most legacy Fortran 77 based simulators (of which many still are actively used in different scientific communities) such as [TOUGH2](http://esd.lbl.gov/research/projects/tough/), (which I've had the pleasure of working with extensively), often have data input file subroutines that have hardcoded fields widths. This makes life interesting, and often as much time is spent in **pre** processing as in post processing. Scientists I worked with had folders of rigid bash scripts and _even Fortran routines_ to attempt to manage these 'input decks' creationâ€”oh the scientist-hours lost. :cry:.\n\nInput decks can contain information such as mesh geometry and physical properties, system initial conditions (i.e., thermodynamic state of each element and transport states between them), and simulator operation parameters. While it's often the case that pandas is used to analyze measured or resultant data, I certainly could envision using it to manipulate input files (indeed, I wrote an entire perl library to do this, before discovering python and pandas). With functionality to manage such input decks, it is fundamental to have fixed width output. \n\nClearly there are much better ways to interact with fortran libraries (f2py / numpy) but I can tell you that (some) scientists are simply interested in getting a simulation up and running. If pandas already has them hooked for data analysis use, there could be a large benefit from such functionality. If had I access to such a tool, my graduate student life would have been a who lot more social :wink:.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23239594",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-23239594",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 23239594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjM5NTk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T01:16:00Z",
    "updated_at": "2013-08-26T01:16:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nehalecky so you want either to_csv to have a fixed width mode\n\nwhat kind of an API would you see here?\n\nwe have been toying with the idea of passing a style parameter to these output routines which could be a class (pandas would provide a base class) that could be overridden for really custom behavior\n\nbut easy to see a FIxedWidthWriter \n\nor maybe overkill an just need something straightforward?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23257432",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-23257432",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 23257432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjU3NDMy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T11:47:52Z",
    "updated_at": "2013-08-26T11:47:52Z",
    "author_association": "CONTRIBUTOR",
    "body": " Perhaps should be `float_format` to match with options.display.... actually atm that requires a formatter (e.g. `'{:10.4f}'.format`), maybe should also accept strings like `'%10.4f'`...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27417636",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-27417636",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 27417636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDE3NjM2",
    "user": {
      "login": "patricktokeeffe",
      "id": 1348834,
      "node_id": "MDQ6VXNlcjEzNDg4MzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1348834?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patricktokeeffe",
      "html_url": "https://github.com/patricktokeeffe",
      "followers_url": "https://api.github.com/users/patricktokeeffe/followers",
      "following_url": "https://api.github.com/users/patricktokeeffe/following{/other_user}",
      "gists_url": "https://api.github.com/users/patricktokeeffe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patricktokeeffe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patricktokeeffe/subscriptions",
      "organizations_url": "https://api.github.com/users/patricktokeeffe/orgs",
      "repos_url": "https://api.github.com/users/patricktokeeffe/repos",
      "events_url": "https://api.github.com/users/patricktokeeffe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patricktokeeffe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-30T17:44:41Z",
    "updated_at": "2013-10-30T17:44:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think per-column functionality should be added to this list, similar to how `read_csv`'s `dtype` and `na_values` accept per-column parameters as a dict. \n\nThat would allow users, for example, to apply a different float format to the timestamp than the data columns. Or change the time formatting to military format. (Date formatting was touched in PR #4313 but not time IIUC)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27423380",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-27423380",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 27423380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDIzMzgw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-30T18:25:27Z",
    "updated_at": "2013-10-30T18:25:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is really just waiting on a nice API that either does what you are suggesting / templates or both\n\nand of course someone to work on this....\n\nit would not be hard to extend `float_format/date_format` to accept a dict of columns to format \n\ne.g.\n\n`date_format={'A' : '%Y%m%d', 'B' : '%y'}` \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35142302",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-35142302",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 35142302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQyMzAy",
    "user": {
      "login": "nehalecky",
      "id": 1455590,
      "node_id": "MDQ6VXNlcjE0NTU1OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1455590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nehalecky",
      "html_url": "https://github.com/nehalecky",
      "followers_url": "https://api.github.com/users/nehalecky/followers",
      "following_url": "https://api.github.com/users/nehalecky/following{/other_user}",
      "gists_url": "https://api.github.com/users/nehalecky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nehalecky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nehalecky/subscriptions",
      "organizations_url": "https://api.github.com/users/nehalecky/orgs",
      "repos_url": "https://api.github.com/users/nehalecky/repos",
      "events_url": "https://api.github.com/users/nehalecky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nehalecky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-15T00:43:47Z",
    "updated_at": "2014-02-15T00:43:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "A per column template, as suggested by @jreback I think would be grand. For large/complex column arrangements, you could use a series beforehand to prescribe slices across certain columns and generate a dict.  :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35218152",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-35218152",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 35218152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjE4MTUy",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-16T22:22:22Z",
    "updated_at": "2014-02-16T22:24:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Currently the `date_format` argument is a little unclear as to what it does when the value being formatted is a \"date\" (`datetime` w/o a time) as opposed to a \"datetime\" (`datetime` w/ a time). At present, it treats these alike and uses the same formatter for each. This is different from how a `DatetimeIndex` is formatted to CSV. In that case, the formatting code detects if all of the values in the index do not contain times in which cases it only formats the date component. See:\n\n```\ndf = pd.DataFrame({'a':[datetime.datetime(2013,1,1)]}, index=pd.to_datetime([datetime.datetime(2013,1,1)]))\nio = StringIO()\ndf.to_csv(io)\n\nIn [12]: print io.getvalue()\n,a\n2013-01-01,2013-01-01 00:00:00\n```\n\nI would suggest having some way how to format datetime w/o time different from datetime with times.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36413631",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-36413631",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 36413631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDEzNjMx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-01T02:33:49Z",
    "updated_at": "2014-03-01T02:33:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cancan101 could have a flag to drop the minutes / seconds if 00:00:00 (not sure on good name). Could do with an example of date_format in doc, think it would make it clearer (or use default.\n\nShould these be in `options.io` ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36482936",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-36482936",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 36482936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDgyOTM2",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T05:36:44Z",
    "updated_at": "2014-03-03T05:38:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd I assume you mean drop the hours, minutes, and seconds (ie the time component of the `datetime`)?\n\nI think the option and its name depend on how it will work: should it be an \"intelligent\" format that only prints the time component if needed (i.e. if any of the datetime values have a time != midnight, see #5701) or should it work as a truncate where datetimes are truncated to just dates.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37490594",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-37490594",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 37490594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDkwNTk0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-13T01:26:28Z",
    "updated_at": "2014-03-13T01:26:28Z",
    "author_association": "MEMBER",
    "body": "Did we ever settle on an API here?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37491099",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-37491099",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 37491099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDkxMDk5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-13T01:36:08Z",
    "updated_at": "2014-03-13T01:36:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think need to create a Format object\n\nFormat(col or cols, format=None, default=None)\n\nso this easiky handles date_fornat and float_format (for back compat)\n\nand handles ability to customize as well\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/201142968",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-201142968",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 201142968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTE0Mjk2OA==",
    "user": {
      "login": "drafter250",
      "id": 11748615,
      "node_id": "MDQ6VXNlcjExNzQ4NjE1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/11748615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drafter250",
      "html_url": "https://github.com/drafter250",
      "followers_url": "https://api.github.com/users/drafter250/followers",
      "following_url": "https://api.github.com/users/drafter250/following{/other_user}",
      "gists_url": "https://api.github.com/users/drafter250/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drafter250/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drafter250/subscriptions",
      "organizations_url": "https://api.github.com/users/drafter250/orgs",
      "repos_url": "https://api.github.com/users/drafter250/repos",
      "events_url": "https://api.github.com/users/drafter250/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drafter250/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-25T05:28:21Z",
    "updated_at": "2016-03-25T05:28:21Z",
    "author_association": "NONE",
    "body": "I dont want to be a pain but This master issue looks like it has been holding the string spacing issue hostage for almost 3 years and I think is mostly unrelated to more complex issues like float and datetime formatting. just ran into it in version 17.1 Going to have to format entire table manualy.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/201242647",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-201242647",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 201242647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTI0MjY0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-25T11:10:33Z",
    "updated_at": "2016-03-25T11:10:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@drafter250 well we have 1600 issues - which one shall be first? best way to get something in would be to put in a pull request \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/205627647",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-205627647",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 205627647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTYyNzY0Nw==",
    "user": {
      "login": "VelizarVESSELINOV",
      "id": 8209940,
      "node_id": "MDQ6VXNlcjgyMDk5NDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8209940?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VelizarVESSELINOV",
      "html_url": "https://github.com/VelizarVESSELINOV",
      "followers_url": "https://api.github.com/users/VelizarVESSELINOV/followers",
      "following_url": "https://api.github.com/users/VelizarVESSELINOV/following{/other_user}",
      "gists_url": "https://api.github.com/users/VelizarVESSELINOV/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VelizarVESSELINOV/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VelizarVESSELINOV/subscriptions",
      "organizations_url": "https://api.github.com/users/VelizarVESSELINOV/orgs",
      "repos_url": "https://api.github.com/users/VelizarVESSELINOV/repos",
      "events_url": "https://api.github.com/users/VelizarVESSELINOV/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VelizarVESSELINOV/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-05T03:39:57Z",
    "updated_at": "2016-04-05T03:39:57Z",
    "author_association": "NONE",
    "body": "Suggestion to have float32_formatter different than the float64_formatter. Today force float32 and float64 types to have same formatter is far from optimal.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220876957",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-220876957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 220876957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDg3Njk1Nw==",
    "user": {
      "login": "drafter250",
      "id": 11748615,
      "node_id": "MDQ6VXNlcjExNzQ4NjE1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/11748615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drafter250",
      "html_url": "https://github.com/drafter250",
      "followers_url": "https://api.github.com/users/drafter250/followers",
      "following_url": "https://api.github.com/users/drafter250/following{/other_user}",
      "gists_url": "https://api.github.com/users/drafter250/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drafter250/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drafter250/subscriptions",
      "organizations_url": "https://api.github.com/users/drafter250/orgs",
      "repos_url": "https://api.github.com/users/drafter250/repos",
      "events_url": "https://api.github.com/users/drafter250/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drafter250/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-23T02:48:40Z",
    "updated_at": "2016-05-23T02:50:12Z",
    "author_association": "NONE",
    "body": "@jreback re: extra spaces between columns in DataFrame.to_string. not long after my posting I dug into the pandas/core/format.py module where to_string is located under the DataFrameFormater class. I found that there are a few calls to a method \"self.adj.adjoin\" where the first argument should be an integer for the number of spaces between columns and the second are the columns themselves. most of the calls to this method are hardcoded and the col_space argument in the \"to_string\" method seems to actually go un-used. \n\nso I added these lines to DataFrameFormatter.**init**()\n\n```\n    #set col_space to zero if custom formaters provided and\n    #no col_space provided.\n    self.col_space = col_space\n    if formatters is not None and col_space is None:\n        self.col_space = 0\n    elif col_space is None:\n        self.col_space = 1\n```\n\nthen replaced the hard-coded values to self.adj.adjoin with self.col_space and it seemed to work both with formatters or specifying a number of spaces to the col_space argument\n\nI just got a development environment setup for pandas per the user instructions and noticed that the format module is missing from pandas/core and is now in a subpackage called formatters. This would be my first pull request and I want to do things right and write my tests first.\n\nQ1 Where would I find any tests related to the to_string functionality as I don't see a test folder under the new formatters sub-package?\n\nQ2. Could the extra space issue #4158 be separated out from this bigger issue so it can be referenced from the pull request. (you can wait till I actually submit the request)?\n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220977404",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-220977404",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 220977404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDk3NzQwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-23T13:18:14Z",
    "updated_at": "2016-05-23T13:18:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "rebase on master and you will see the `pandas/formats` where things moved in 0.18.0.\ntest are in `tests/formats/`\n\nideally you DO separate out issues to as narrow as possible\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/260553624",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4668#issuecomment-260553624",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4668",
    "id": 260553624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDU1MzYyNA==",
    "user": {
      "login": "drafter250",
      "id": 11748615,
      "node_id": "MDQ6VXNlcjExNzQ4NjE1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/11748615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drafter250",
      "html_url": "https://github.com/drafter250",
      "followers_url": "https://api.github.com/users/drafter250/followers",
      "following_url": "https://api.github.com/users/drafter250/following{/other_user}",
      "gists_url": "https://api.github.com/users/drafter250/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drafter250/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drafter250/subscriptions",
      "organizations_url": "https://api.github.com/users/drafter250/orgs",
      "repos_url": "https://api.github.com/users/drafter250/repos",
      "events_url": "https://api.github.com/users/drafter250/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drafter250/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T05:50:03Z",
    "updated_at": "2016-11-15T05:50:03Z",
    "author_association": "NONE",
    "body": "I got hung up trying to find right spot to add/modify tests and think I\nremember running into some corner cases that  i couldn't quite figure out.\nAfter looking at the formatting code It seems very intertwined with other\nbits and i can see why they wanted to revamp the API.\n\nOn Mon, Nov 14, 2016 at 1:46 PM, acosby notifications@github.com wrote:\n\n> Was there any progress on this? Or a way to hack to_space to use commas\n> as sep?\n> \n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/pandas-dev/pandas/issues/4668#issuecomment-260423926,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ALNFB6uawZRNKHXCHWDCJAYuM8zefqvIks5q-Kx-gaJpZM4A7uJA\n> .\n"
  }
]
