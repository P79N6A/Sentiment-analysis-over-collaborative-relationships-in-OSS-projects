[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/147319508",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11038#issuecomment-147319508",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11038",
    "id": 147319508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzMxOTUwOA==",
    "user": {
      "login": "tnir",
      "id": 10229505,
      "node_id": "MDQ6VXNlcjEwMjI5NTA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10229505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tnir",
      "html_url": "https://github.com/tnir",
      "followers_url": "https://api.github.com/users/tnir/followers",
      "following_url": "https://api.github.com/users/tnir/following{/other_user}",
      "gists_url": "https://api.github.com/users/tnir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tnir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tnir/subscriptions",
      "organizations_url": "https://api.github.com/users/tnir/orgs",
      "repos_url": "https://api.github.com/users/tnir/repos",
      "events_url": "https://api.github.com/users/tnir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tnir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-12T07:53:27Z",
    "updated_at": "2015-10-12T07:53:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@behzadnouri You should pass either of `None`, `'any'` or `'all'` as dropna, instead of `True`. We should deprecate passing `True` to nth.\n\nWhen you however pass either `'any'` or `'all'`, there is still a bug.\n\n``` python\n>>> df = pd.DataFrame([[1],[2,3],[1],[2,4]], columns=['1st', '2nd'])\n>>> df\n   1st  2nd\n0    1  NaN\n1    2    3\n2    1  NaN\n3    2    4\n>>> df.groupby('1st')['2nd'].nth(0, dropna='any')\n1st\n1    3\n2    4\nName: 2nd, dtype: float64\n\n>>> df.groupby('1st')['2nd'].nth(0, dropna='all')\n1st\n1    3\n2    4\nName: 2nd, dtype: float64\n```\n\nExchanging the order of selecting a column and `nth()`, we expect the correct results as follows:\n\n``` python\n>>> df.groupby('1st').nth(0, dropna='any')['2nd']\n1st\n1   NaN\n2     3\nName: 2nd, dtype: float64\n\n>>> df.groupby('1st').nth(0, dropna='all')['2nd']\n1st\n1   NaN\n2     3\nName: 2nd, dtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/148017468",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11038#issuecomment-148017468",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11038",
    "id": 148017468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODAxNzQ2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-14T11:03:59Z",
    "updated_at": "2015-10-14T11:03:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tnir yep, the argument is a bit too free and should be checked at the top of `nth`, rather than in the conditional (which misses some cases).\n\nAs always pull-requests to fix are welcome.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/328315364",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11038#issuecomment-328315364",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11038",
    "id": 328315364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODMxNTM2NA==",
    "user": {
      "login": "tnir",
      "id": 10229505,
      "node_id": "MDQ6VXNlcjEwMjI5NTA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10229505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tnir",
      "html_url": "https://github.com/tnir",
      "followers_url": "https://api.github.com/users/tnir/followers",
      "following_url": "https://api.github.com/users/tnir/following{/other_user}",
      "gists_url": "https://api.github.com/users/tnir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tnir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tnir/subscriptions",
      "organizations_url": "https://api.github.com/users/tnir/orgs",
      "repos_url": "https://api.github.com/users/tnir/repos",
      "events_url": "https://api.github.com/users/tnir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tnir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-10T02:28:23Z",
    "updated_at": "2017-09-10T02:28:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is still reproducible with pandas-0.20.3 on Python 3.6:\r\n\r\n```bash\r\n$ python\r\nPython 3.6.0 (default, Dec 26 2016, 15:43:50)\r\n[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] on darwin\r\n```\r\n\r\n```python\r\n>>> import pandas as pd\r\n>>> df = pd.DataFrame([[1],[2,3],[1],[2,4]], columns=['1st', '2nd'])\r\n>>> df\r\n   1st  2nd\r\n0    1  NaN\r\n1    2  3.0\r\n2    1  NaN\r\n3    2  4.0\r\n>>> df.groupby('1st')['2nd'].nth(0, dropna='any')\r\n1st\r\n1    3.0\r\n2    4.0\r\nName: 2nd, dtype: float64\r\n>>> df.groupby('1st')['2nd'].nth(0, dropna='all')\r\n1st\r\n1    3.0\r\n2    4.0\r\nName: 2nd, dtype: float64\r\n>>> df.groupby('1st').nth(0, dropna='any')['2nd']\r\n1st\r\n1    NaN\r\n2    3.0\r\nName: 2nd, dtype: float64\r\n>>> df.groupby('1st').nth(0, dropna='all')['2nd']\r\n1st\r\n1    NaN\r\n2    3.0\r\nName: 2nd, dtype: float64\r\n```"
  }
]
