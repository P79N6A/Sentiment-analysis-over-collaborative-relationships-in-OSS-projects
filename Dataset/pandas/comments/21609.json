[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405134333",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21609#issuecomment-405134333",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21609",
    "id": 405134333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTEzNDMzMw==",
    "user": {
      "login": "javadnoorb",
      "id": 26352146,
      "node_id": "MDQ6VXNlcjI2MzUyMTQ2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/26352146?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/javadnoorb",
      "html_url": "https://github.com/javadnoorb",
      "followers_url": "https://api.github.com/users/javadnoorb/followers",
      "following_url": "https://api.github.com/users/javadnoorb/following{/other_user}",
      "gists_url": "https://api.github.com/users/javadnoorb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/javadnoorb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/javadnoorb/subscriptions",
      "organizations_url": "https://api.github.com/users/javadnoorb/orgs",
      "repos_url": "https://api.github.com/users/javadnoorb/repos",
      "events_url": "https://api.github.com/users/javadnoorb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/javadnoorb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T01:46:28Z",
    "updated_at": "2018-07-16T02:09:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "This seems to happen because of this line:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/b2305ea6d7ca1787bce8eb646a1791a0399353e7/pandas/_libs/reduction.pyx#L515\r\n\r\nWhat the Cython code seems to be doing is that it initially runs the function (in this case scatter) on the first group to check if there's no segmentation fault, and then loops through all groups (including the one that it just ran) and applies the function to them. So you always end up with one extra plot. \r\n\r\nI think the solution is probably to save the output of first run and skip it during the loop.\r\n\r\nIf no one else is picking this up I'd be willing to look into it and see if I can come up with a PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405151561",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21609#issuecomment-405151561",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21609",
    "id": 405151561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTE1MTU2MQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T05:23:34Z",
    "updated_at": "2018-07-16T05:23:34Z",
    "author_association": "MEMBER",
    "body": "@javadnoorb sounds reasonable. PRs are always welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405820860",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21609#issuecomment-405820860",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21609",
    "id": 405820860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTgyMDg2MA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-18T06:14:15Z",
    "updated_at": "2018-07-18T06:14:15Z",
    "author_association": "MEMBER",
    "body": "I created #21963 to specifically refer to the creation of one plot per category, so that this issue is devoted to the spurious initial plot only (what @javadnoorb is fixing)."
  }
]
