[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404653347",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21881#issuecomment-404653347",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21881",
    "id": 404653347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDY1MzM0Nw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T21:16:12Z",
    "updated_at": "2018-07-12T21:16:12Z",
    "author_association": "MEMBER",
    "body": "This is probably the same issue as #13910 "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404666318",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21881#issuecomment-404666318",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21881",
    "id": 404666318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDY2NjMxOA==",
    "user": {
      "login": "AllenDowney",
      "id": 1882093,
      "node_id": "MDQ6VXNlcjE4ODIwOTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1882093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AllenDowney",
      "html_url": "https://github.com/AllenDowney",
      "followers_url": "https://api.github.com/users/AllenDowney/followers",
      "following_url": "https://api.github.com/users/AllenDowney/following{/other_user}",
      "gists_url": "https://api.github.com/users/AllenDowney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AllenDowney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AllenDowney/subscriptions",
      "organizations_url": "https://api.github.com/users/AllenDowney/orgs",
      "repos_url": "https://api.github.com/users/AllenDowney/repos",
      "events_url": "https://api.github.com/users/AllenDowney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AllenDowney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T22:08:47Z",
    "updated_at": "2018-07-12T22:08:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the quick reply!  Yes, looks like it is the same issue.\n\nAny suggestions on a workaround?\n\nI thought with `dtype=object`, Series might stop trying to infer types.  Is\nthere any way to just turn off type inference?\n\nOn Thu, Jul 12, 2018 at 5:16 PM, William Ayd <notifications@github.com>\nwrote:\n\n> This is probably the same issue as #13910\n> <https://github.com/pandas-dev/pandas/issues/13910>\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/21881#issuecomment-404653347>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABy37bcl-Bm3NSA-rhUPCfMDlneKNNgUks5uF7y7gaJpZM4VNvfU>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406875411",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21881#issuecomment-406875411",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21881",
    "id": 406875411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjg3NTQxMQ==",
    "user": {
      "login": "makbigc",
      "id": 14367887,
      "node_id": "MDQ6VXNlcjE0MzY3ODg3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/14367887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/makbigc",
      "html_url": "https://github.com/makbigc",
      "followers_url": "https://api.github.com/users/makbigc/followers",
      "following_url": "https://api.github.com/users/makbigc/following{/other_user}",
      "gists_url": "https://api.github.com/users/makbigc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/makbigc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/makbigc/subscriptions",
      "organizations_url": "https://api.github.com/users/makbigc/orgs",
      "repos_url": "https://api.github.com/users/makbigc/repos",
      "events_url": "https://api.github.com/users/makbigc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/makbigc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-22T15:35:07Z",
    "updated_at": "2018-07-22T15:35:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "When adding a new index, `np.concatenate` joins the new array of value to the old one in the function ``_setitem_with_indexer``.\r\n\r\n`np.concatenate` turns the array with `dtype='datetime64[ns]` into `int`. While it doesn't turn the array with `dtype=object`.\r\n\r\nExplicitly, \r\n```\r\n\r\nIn [132]: array([pd.Timestamp('2016-01-01')])\r\nOut[132]: array([Timestamp('2016-01-01 00:00:00')], dtype=object)\r\n\r\nIn [133]: np.concatenate([array([None]), array([pd.Timestamp('2016-01-01')])])\r\nOut[133]: array([None, Timestamp('2016-01-01 00:00:00')], dtype=object)\r\n\r\nIn [134]: a = Series(pd.Timestamp('2016-01-01'))._values\r\n\r\nIn [135]: a\r\nOut[135]: array(['2016-01-01T00:00:00.000000000'], dtype='datetime64[ns]')\r\n\r\nIn [136]: np.concatenate([array([None]), a])\r\nOut[136]: array([None, 1451606400000000000], dtype=object)\r\n```\r\nShould a type check be added before `np.concatenate`? But it makes the code redundant."
  }
]
