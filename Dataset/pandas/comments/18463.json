[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346783280",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18463#issuecomment-346783280",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18463",
    "id": 346783280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njc4MzI4MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-24T09:31:38Z",
    "updated_at": "2017-11-24T09:31:38Z",
    "author_association": "MEMBER",
    "body": "Generally None and np.nan are considered equivalent in pandas, both are seen as missing value. For other types of dtypes the None will on construction be converted to NaN, so you don't have this issue in such a case:\r\n\r\n```\r\nIn [19]: pd.Series([1, 2, None])\r\nOut[19]: \r\n0    1.0\r\n1    2.0\r\n2    NaN\r\ndtype: float64\r\n```\r\n\r\nand for example the `equals` method also sees both frames in your example as equal:\r\n\r\n```\r\nIn [18]: df1.equals(df2)\r\nOut[18]: True\r\n```\r\n\r\nThat said, to be able to test we are actually retuning NaN and not None in the issue you referenced, I agree it is annoying that you don't have a way to discriminate between both in `assert_frame_equal`.\r\n\r\nFor the PR as a workaround now, you can get the values of that column and assert that those are equal (eg `np.testing.assert_array_equal(df1[0].values, df2[0].values)` differentiates between None and np.nan)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346858582",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18463#issuecomment-346858582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18463",
    "id": 346858582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njg1ODU4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-24T15:59:58Z",
    "updated_at": "2017-11-24T15:59:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would add a kwarg to ``assert_*``, maybe ``check_null='strict'`` or something. we almost always want 'strict' meaning not only is ``isnull(a) == isnull(b)``, but that ``np.isnan(a) & np.isnan(b)``.\r\n\r\nI don't think working around this is a good idea, let's actually fix the testing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346887467",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18463#issuecomment-346887467",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18463",
    "id": 346887467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njg4NzQ2Nw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-24T19:36:04Z",
    "updated_at": "2017-11-24T19:36:04Z",
    "author_association": "MEMBER",
    "body": "@jreback do you know why ``assert_frame_equal`` doesn't use the ``NDFrame.equals`` method? There's a comment preceding that method that mentions it should.\r\n\r\nThe reason I'm asking is because while we could add a kwarg to the ``assert_frame_equal`` method to control the null checking behavior and do it in a strict manner by default, as @jorisvandenbossche pointed out that would be inconsistent with how the ``equals`` method of the ``NDFrame`` works. I would think we would either want to make that change in both comparison methods, or attempt to refactor ``assert_frame_equal`` to match ``NDFrame`` as the comment suggests\r\n\r\nFWIW if we wanted to modify the behavior of the ``NDFrame.equals`` we'd probably want to add ``strict_nan=True`` to the following line:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/aec33479b923a05ead1ca35335f00aba87e4145e/pandas/core/internals.py#L1532\r\n\r\nThe ``array_equivalent`` method might also need some tweaks, as providing that argument is raising a ``ValueError`` for me, but nonetheless it seems like the intention is already in place there to handle this"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346891082",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18463#issuecomment-346891082",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18463",
    "id": 346891082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njg5MTA4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-24T20:12:23Z",
    "updated_at": "2017-11-24T20:13:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "``assert_frame_equal`` is NOT the same, it gives excruciating detail on where the error is (this is the entire point of this). ``.equals`` is just a user-facing shortcut. Under the hood these both use ``array_equivalent`` as the comparisons. I don't see a problem with adding things to the test methods, these are meant to be very fine grained.\r\n\r\nso for example, ``.equals`` on the example (which compares None/np.nan) *should* fail. These are not *exactly* equal. We should not add things to ``.equals`` (as this opens a big can of worms)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346891245",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18463#issuecomment-346891245",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18463",
    "id": 346891245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njg5MTI0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-24T20:14:08Z",
    "updated_at": "2017-11-24T20:14:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "from above, this is actually wrong and we should strictly check this.\r\n```\r\nIn [18]: df1.equals(df2)\r\nOut[18]: True\r\n```"
  }
]
