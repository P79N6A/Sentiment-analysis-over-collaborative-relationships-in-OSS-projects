[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236708502",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13869#issuecomment-236708502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13869",
    "id": 236708502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjcwODUwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T21:09:02Z",
    "updated_at": "2016-08-01T21:09:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "this shouldn't allow the assignment at all.  a slice of `:2` is not valid for a datetimeindex.\n\nThis is a bit deep in the code.\n\nsome of the setting validation is not nearly as well tested as the getting logic. You are welcome to take a stab.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236715124",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13869#issuecomment-236715124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13869",
    "id": 236715124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjcxNTEyNA==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T21:34:29Z",
    "updated_at": "2016-08-01T21:34:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I thought you might say that.  I am OK with it if you're sure this shouldn't be allowed, though I do find the syntax convenient so if you have another concise way to do the same thing in a more supported way I would love to know what that is.\n\nThis is not at all an area I'm familiar with so I'm not planning to try to fix it myself.  Just wanted to be clear so nobody waits for me on this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/237198980",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13869#issuecomment-237198980",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13869",
    "id": 237198980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzE5ODk4MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-03T10:15:24Z",
    "updated_at": "2016-08-03T10:15:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "well you an use [partial string indexing](http://pandas.pydata.org/pandas-docs/stable/timeseries.html#datetimeindex-partial-string-indexing) and `.loc` or\n\npandas by definition aligns things, you need to work with it, rather than fight it.\n\n```\nIn [10]: df1['a'] = Series(np.arange(2),index=df1.index[:2])\n\nIn [11]: df1\nOut[11]: \n                              a\n2009-02-13 23:31:30.123400  0.0\n2009-02-13 23:31:30.123401  1.0\n2009-02-13 23:31:30.123402  NaN\n2009-02-13 23:31:30.123403  NaN\n```\n\nOr this \n\n```\nIn [17]: df1['a'] = np.array([0,1,np.nan,np.nan])\n\nIn [18]: df1\nOut[18]: \n                              a\n2009-02-13 23:31:30.123400  0.0\n2009-02-13 23:31:30.123401  1.0\n2009-02-13 23:31:30.123402  NaN\n2009-02-13 23:31:30.123403  NaN\n```\n\nusing list-like indexers is not providing any aligning information, so you MUST fully fill out the array. Generally using Series is much more convenient.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/237254710",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13869#issuecomment-237254710",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13869",
    "id": 237254710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzI1NDcxMA==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-03T14:35:07Z",
    "updated_at": "2016-08-03T15:40:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Thanks, your example using Series is the best alternative I have seen.  But it is not equivalent to what I was doing, because it overwrites the entire column, even for indexes I did not want to overwrite.  For example, if you run my original code and then:\n\n```\ndf1['a'] = pd.Series(np.arange(2), index=df1.index[2:]) # last 2, not first 2\n```\n\nYou end up with `[NaN, NaN, 0, 1]`--it dropped the existing values from the first two rows!\n\nUsing Series also fails if there are duplicate values in the index (\"cannot reindex from a duplicate axis\"), whereas integer-based slicing is not sensitive to that.\n\nThis sort of thing comes up somewhat frequently, and I think ultimately the problem arises from the fact that `loc` and `iloc` require that _all_ the indexers are either labels or integers.  In this example what I really want is semantically more like one of these hypothetical syntaxes:\n\n```\ndf1.iloc[:2].loc['b'] =  np.arange(2)\ndf1.xloc[:2, 'b'] =  np.arange(2) # like iloc for first argument, loc for second\n```\n\nThat is, I often want a way to use integer-based indexing of rows, but name-based indexing of columns.  For those of us who use Pandas in concert with other NumPy-based libraries, this use case is fairly common.\n\nThe best working alternative I have come up with so far is to drop down to NumPy like this:\n\n```\ndf1['a'].values[:2] = np.arange(2)\n```\n\nIf the column exists already, this does what I want.  But I imagine you don't intend for people to drop down to NumPy to do something simple like this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/237288240",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13869#issuecomment-237288240",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13869",
    "id": 237288240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzI4ODI0MA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-03T16:23:01Z",
    "updated_at": "2016-08-03T16:23:01Z",
    "author_association": "MEMBER",
    "body": "@jzwinck You might try the `ix` indexer, which does mixed labeled/integer indexing (though with some problematic fallback logic).\n\nI usually prefer something more explicit, e.g., `df.loc[df.index[:2], 'b'] = np.arange(2)`. You can also use methods like `Index.get_loc` to go from labels to integers.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/237303272",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13869#issuecomment-237303272",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13869",
    "id": 237303272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzMwMzI3Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-03T17:15:37Z",
    "updated_at": "2016-08-03T17:15:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer is right. This is already a well-defined, very convenient way in pandas. Missing position-and-label based must be very explict on purpose. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/237629419",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13869#issuecomment-237629419",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13869",
    "id": 237629419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzYyOTQxOQ==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-04T17:48:14Z",
    "updated_at": "2016-08-04T17:48:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer and @jreback Thanks for the idea to use `df.loc[df.index[:2]]`.  Unfortunately that doesn't work in some cases--I assume it's a bug so I filed #13908.\n"
  }
]
