[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355949237",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19129#issuecomment-355949237",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19129",
    "id": 355949237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTk0OTIzNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-08T12:04:35Z",
    "updated_at": "2018-01-08T12:04:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I *thought* that https://frictionlessdata.io/specs/table-schema/ required the field names to be strings, but that may not be the case."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372024424",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19129#issuecomment-372024424",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19129",
    "id": 372024424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjAyNDQyNA==",
    "user": {
      "login": "robmarkcole",
      "id": 11855322,
      "node_id": "MDQ6VXNlcjExODU1MzIy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11855322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robmarkcole",
      "html_url": "https://github.com/robmarkcole",
      "followers_url": "https://api.github.com/users/robmarkcole/followers",
      "following_url": "https://api.github.com/users/robmarkcole/following{/other_user}",
      "gists_url": "https://api.github.com/users/robmarkcole/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robmarkcole/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robmarkcole/subscriptions",
      "organizations_url": "https://api.github.com/users/robmarkcole/orgs",
      "repos_url": "https://api.github.com/users/robmarkcole/repos",
      "events_url": "https://api.github.com/users/robmarkcole/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robmarkcole/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-10T11:58:07Z",
    "updated_at": "2018-03-10T11:58:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is an error with string column/index names too:\r\n```python\r\ndf = pd.DataFrame([['a', 'b'], ['c', 'd']],\r\n                  index=['row 1', 'row 2'],\r\n                  columns=['col 1', 'col 2'])\r\n\r\ndf.to_json(orient='table')\r\npd.read_json(_, orient='table')\r\n...\r\nValueError: Mixing dicts with non-Series may lead to ambiguous ordering.\r\n```\r\n\r\nThis issue should be renamed to `read_json and orient='table' Fails`\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372044628",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19129#issuecomment-372044628",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19129",
    "id": 372044628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjA0NDYyOA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-10T16:55:29Z",
    "updated_at": "2018-03-10T16:55:49Z",
    "author_association": "MEMBER",
    "body": "@robmarkcole what version are you using? Your example ran fine for me on master. \r\n\r\n<details>\r\n\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: 28e7a9498457e8cccc105a6261958197889325fa\r\npython: 3.6.4.final.0\r\npython-bits: 64\r\nOS: Darwin\r\nOS-release: 17.4.0\r\nmachine: x86_64\r\nprocessor: i386\r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: en_US.UTF-8\r\nLOCALE: en_US.UTF-8\r\n\r\npandas: 0.23.0.dev0+487.g28e7a9498\r\npytest: 3.4.1\r\npip: 9.0.1\r\nsetuptools: 38.5.1\r\nCython: 0.27.3\r\nnumpy: 1.14.1\r\nscipy: 1.0.0\r\npyarrow: 0.8.0\r\nxarray: 0.10.0\r\nIPython: 6.2.1\r\nsphinx: 1.7.0\r\npatsy: 0.5.0\r\ndateutil: 2.6.1\r\npytz: 2018.3\r\nblosc: None\r\nbottleneck: 1.2.1\r\ntables: 3.4.2\r\nnumexpr: 2.6.4\r\nfeather: 0.4.0\r\nmatplotlib: 2.1.2\r\nopenpyxl: 2.5.0\r\nxlrd: 1.1.0\r\nxlwt: 1.3.0\r\nxlsxwriter: 1.0.2\r\nlxml: 4.1.1\r\nbs4: 4.6.0\r\nhtml5lib: 1.0.1\r\nsqlalchemy: 1.2.1\r\npymysql: 0.8.0\r\npsycopg2: None\r\njinja2: 2.10\r\ns3fs: 0.1.3\r\nfastparquet: 0.1.4\r\npandas_gbq: None\r\npandas_datareader: None\r\n\r\n</details>"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372066664",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19129#issuecomment-372066664",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19129",
    "id": 372066664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjA2NjY2NA==",
    "user": {
      "login": "robmarkcole",
      "id": 11855322,
      "node_id": "MDQ6VXNlcjExODU1MzIy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11855322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robmarkcole",
      "html_url": "https://github.com/robmarkcole",
      "followers_url": "https://api.github.com/users/robmarkcole/followers",
      "following_url": "https://api.github.com/users/robmarkcole/following{/other_user}",
      "gists_url": "https://api.github.com/users/robmarkcole/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robmarkcole/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robmarkcole/subscriptions",
      "organizations_url": "https://api.github.com/users/robmarkcole/orgs",
      "repos_url": "https://api.github.com/users/robmarkcole/repos",
      "events_url": "https://api.github.com/users/robmarkcole/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robmarkcole/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-10T21:03:53Z",
    "updated_at": "2018-03-10T21:03:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd error on `0.22.0`. No error on `0.23.0.dev0`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372131159",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19129#issuecomment-372131159",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19129",
    "id": 372131159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjEzMTE1OQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-11T17:06:37Z",
    "updated_at": "2018-03-11T17:06:46Z",
    "author_association": "MEMBER",
    "body": "General support for read_json with `table='orient'` was only just added for the v0.23 release so makes sense it doesn't work on 0.22. See #19039"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/389871410",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19129#issuecomment-389871410",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19129",
    "id": 389871410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTg3MTQxMA==",
    "user": {
      "login": "MichaMucha",
      "id": 7082264,
      "node_id": "MDQ6VXNlcjcwODIyNjQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7082264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MichaMucha",
      "html_url": "https://github.com/MichaMucha",
      "followers_url": "https://api.github.com/users/MichaMucha/followers",
      "following_url": "https://api.github.com/users/MichaMucha/following{/other_user}",
      "gists_url": "https://api.github.com/users/MichaMucha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MichaMucha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MichaMucha/subscriptions",
      "organizations_url": "https://api.github.com/users/MichaMucha/orgs",
      "repos_url": "https://api.github.com/users/MichaMucha/repos",
      "events_url": "https://api.github.com/users/MichaMucha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MichaMucha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-17T13:45:37Z",
    "updated_at": "2018-05-17T13:45:37Z",
    "author_association": "NONE",
    "body": "Hi!\r\nCaptain Obvious here, just wanted to say getting this in 0.23.0 as well\r\n```\r\nimport pandas as pd\r\nbreaking_case = pd.DataFrame({\r\n    1: [1,2], \r\n    2: [3,4]}\r\n)\r\npd.read_json(breaking_case.to_json(orient='table'), orient='table')\r\n```\r\n`KeyError: '[1 2] not in index'`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/389898728",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19129#issuecomment-389898728",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19129",
    "id": 389898728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTg5ODcyOA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-17T15:02:57Z",
    "updated_at": "2018-05-17T15:02:57Z",
    "author_association": "MEMBER",
    "body": "@MichaMucha that's right this was never implemented, though not sure if it's valid JSON either. If interested investigation into the schema linked above to confirm or deny is welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390434746",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19129#issuecomment-390434746",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19129",
    "id": 390434746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDQzNDc0Ng==",
    "user": {
      "login": "MichaMucha",
      "id": 7082264,
      "node_id": "MDQ6VXNlcjcwODIyNjQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7082264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MichaMucha",
      "html_url": "https://github.com/MichaMucha",
      "followers_url": "https://api.github.com/users/MichaMucha/followers",
      "following_url": "https://api.github.com/users/MichaMucha/following{/other_user}",
      "gists_url": "https://api.github.com/users/MichaMucha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MichaMucha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MichaMucha/subscriptions",
      "organizations_url": "https://api.github.com/users/MichaMucha/orgs",
      "repos_url": "https://api.github.com/users/MichaMucha/repos",
      "events_url": "https://api.github.com/users/MichaMucha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MichaMucha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-19T21:45:39Z",
    "updated_at": "2018-05-19T21:46:12Z",
    "author_association": "NONE",
    "body": "Thanks for the quick reply!\r\n\r\nI read through the page and it seems that:\r\n- a descriptor specifying columns is an \"ordered dict\" equivalent\r\n- order of column descriptions in that dict implies column order\r\n- each column is described by a few properties, one of those is name. \r\n- technically speaking, `{ \"name\" : 1 }` is valid JSON\r\n\r\nI would reason that you can have numerical column names.\r\n\r\ndirect quotes from the spec (a \"field\" is a column in our case):\r\nA Table Schema is represented by a descriptor. The descriptor MUST be a JSON object (JSON is defined in RFC 4627).\r\nIt MUST contain a property fields. fields MUST be an array where each entry in the array is a field descriptor (as defined below). The order of elements in fields array MUST be the order of fields in the CSV file. \r\nA field descriptor MUST be a JSON object that describes a single field.\r\n\r\nLet me know what can I do if I can help more"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390451324",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19129#issuecomment-390451324",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19129",
    "id": 390451324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDQ1MTMyNA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-20T01:37:40Z",
    "updated_at": "2018-05-20T01:37:40Z",
    "author_association": "MEMBER",
    "body": "Thanks for the review! The table implementation is located in `pandas/pandas/io/json/table_schema.py` so if you poke around there you should see where this could be implemented.  Assuming this is your first time, also be sure to read through the contributing guide:\r\n\r\nhttps://pandas.pydata.org/pandas-docs/stable/contributing.html\r\n\r\nHope that helps but let me know if you have any questions"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/393702813",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19129#issuecomment-393702813",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19129",
    "id": 393702813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzcwMjgxMw==",
    "user": {
      "login": "MichaMucha",
      "id": 7082264,
      "node_id": "MDQ6VXNlcjcwODIyNjQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7082264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MichaMucha",
      "html_url": "https://github.com/MichaMucha",
      "followers_url": "https://api.github.com/users/MichaMucha/followers",
      "following_url": "https://api.github.com/users/MichaMucha/following{/other_user}",
      "gists_url": "https://api.github.com/users/MichaMucha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MichaMucha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MichaMucha/subscriptions",
      "organizations_url": "https://api.github.com/users/MichaMucha/orgs",
      "repos_url": "https://api.github.com/users/MichaMucha/repos",
      "events_url": "https://api.github.com/users/MichaMucha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MichaMucha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-31T22:32:25Z",
    "updated_at": "2018-05-31T22:32:25Z",
    "author_association": "NONE",
    "body": "Thank you! Sorry took me a while to find time.\r\nThanks for the links! I looked at the table implementation. Turns out table_schema.py is not to blame!\r\nThe assignment happens at [line 96](https://github.com/pandas-dev/pandas/blob/3147a86e1b20571766b488a8444c74cef29729ad/pandas/io/json/table_schema.py#L96) and leaves the type intact.\r\n\r\nI dug a little deeper and it seems that this guy over here - \r\n[`pandas/pandas/io/json/json.py:214 - JSONTableWriter._write`](https://github.com/pandas-dev/pandas/blob/d1f3689513026ba64122f1e254d6facef4d2e396/pandas/io/json/json.py#L214)\r\nwants to write data in a row-oriented fashion. \r\nEvery row becomes a dict, this makes every column a key, and JSON needs keys to be strings.\r\nWhen you read it back, you get strings obviously.\r\n\r\nOne workaround I can think about is to match `field['name']` to the stringified columns found in `data`[here](https://github.com/pandas-dev/pandas/blob/3147a86e1b20571766b488a8444c74cef29729ad/pandas/io/json/table_schema.py#L299), and cast them to the type of `field['name']`.\r\nThis will cause ambiguity trouble if you have a data frame with a column `\"1\"` and `1` for example.\r\n\r\nAnother solution I can imagine is an error asking the user to provide string columns.\r\n\r\nLet me know what you think.\r\nThanks again for the contributing guide!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/393752913",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19129#issuecomment-393752913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19129",
    "id": 393752913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mzc1MjkxMw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-01T04:14:09Z",
    "updated_at": "2018-06-01T04:14:09Z",
    "author_association": "MEMBER",
    "body": "@MichaMucha IIUC that supports the argument that numeric column names should not be allowed, given the column names are the keys in the JSON table schema and JSON keys need to be strings.\r\n\r\nIf that's the case and you are looking to contribute then I'd suggest perhaps raising a more descriptive `ValueError` when trying to write to the JSON table schema using non-string column names"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465446375",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19129#issuecomment-465446375",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19129",
    "id": 465446375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQ0NjM3NQ==",
    "user": {
      "login": "albertvillanova",
      "id": 8515462,
      "node_id": "MDQ6VXNlcjg1MTU0NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8515462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertvillanova",
      "html_url": "https://github.com/albertvillanova",
      "followers_url": "https://api.github.com/users/albertvillanova/followers",
      "following_url": "https://api.github.com/users/albertvillanova/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertvillanova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertvillanova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertvillanova/subscriptions",
      "organizations_url": "https://api.github.com/users/albertvillanova/orgs",
      "repos_url": "https://api.github.com/users/albertvillanova/repos",
      "events_url": "https://api.github.com/users/albertvillanova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertvillanova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T06:42:39Z",
    "updated_at": "2019-02-20T06:45:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd I think the problem is with the JSON serialization of the DataFrame (the 'data' for orient='table') and not with 'schema' (TableSchema spec).\r\n\r\nIIUC, the aim of orient='table' is to make round-trip JSON serialization-deserialization of pandas objects. As pandas DataFrame can have non-string column names (indeed, that is the default if column names are not passed explicitly at instantiation), then the column names SHOULD NOT be used as keys in the JSON object (JSON spec imposes that keys must be strings).\r\n\r\nIt is also the case for index names: they can be non-strings. Therefore, index names should not be used as keys in the JSON object."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465447270",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19129#issuecomment-465447270",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19129",
    "id": 465447270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQ0NzI3MA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T06:46:13Z",
    "updated_at": "2019-02-20T06:46:13Z",
    "author_association": "MEMBER",
    "body": "#19129 should already cover that just needs community PR"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465449715",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19129#issuecomment-465449715",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19129",
    "id": 465449715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQ0OTcxNQ==",
    "user": {
      "login": "albertvillanova",
      "id": 8515462,
      "node_id": "MDQ6VXNlcjg1MTU0NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8515462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertvillanova",
      "html_url": "https://github.com/albertvillanova",
      "followers_url": "https://api.github.com/users/albertvillanova/followers",
      "following_url": "https://api.github.com/users/albertvillanova/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertvillanova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertvillanova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertvillanova/subscriptions",
      "organizations_url": "https://api.github.com/users/albertvillanova/orgs",
      "repos_url": "https://api.github.com/users/albertvillanova/repos",
      "events_url": "https://api.github.com/users/albertvillanova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertvillanova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T06:56:29Z",
    "updated_at": "2019-02-20T06:56:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, but I was suggesting not just \"raising a more descriptive ValueError\" (sic), but changing the implementation of the JSON serialization for orient='table'."
  }
]
