[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317257058",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17054#issuecomment-317257058",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17054",
    "id": 317257058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzI1NzA1OA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-23T14:31:04Z",
    "updated_at": "2017-07-23T14:31:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the detailed issue!  I think handling `rowspan` and `colspan` correctly would be a welcome enhancement, agree it could basically work like Excel, either tuple-izing or creating a `MultiIndex`.  Appreciate a PR if you're interested.\r\n\r\nduplicate of #14267, but I'll close that one."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317266858",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17054#issuecomment-317266858",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17054",
    "id": 317266858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzI2Njg1OA==",
    "user": {
      "login": "jowens",
      "id": 976970,
      "node_id": "MDQ6VXNlcjk3Njk3MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/976970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jowens",
      "html_url": "https://github.com/jowens",
      "followers_url": "https://api.github.com/users/jowens/followers",
      "following_url": "https://api.github.com/users/jowens/following{/other_user}",
      "gists_url": "https://api.github.com/users/jowens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jowens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jowens/subscriptions",
      "organizations_url": "https://api.github.com/users/jowens/orgs",
      "repos_url": "https://api.github.com/users/jowens/repos",
      "events_url": "https://api.github.com/users/jowens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jowens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-23T16:59:45Z",
    "updated_at": "2017-07-23T16:59:45Z",
    "author_association": "NONE",
    "body": "@chris-b1 my last effort to provide a PR was pretty much a debacle, so I'm probably not your guy. That being said, since this does seem to be a topic of interest, a little guidance as to how it could be done would help either me or anyone else provide a PR (e.g.: \"should probably start with this function\"). I don't actually know if this is something that should be \"fixed\" in pandas or through pandas's setup of the underlying parser(s)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317269337",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17054#issuecomment-317269337",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17054",
    "id": 317269337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzI2OTMzNw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-23T17:41:33Z",
    "updated_at": "2017-07-23T17:41:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I haven't done anything with the `read_html` code, but my understanding is it works like excel, with 3 overall steps:\r\n\r\n1. Read from external data source w/ third party package\r\n2. (Bulk of logic) Convert that data into a list-of-lists data structure representing the rows\r\n3. That list-of-lists is passed to [`TextParser`](https://github.com/pandas-dev/pandas/blob/8d7d3fb545b4273cf9d1a61bf7ea3bfdde8a1199/pandas/io/parsers.py#L1868) which is generic logic that actually converts the data into a `DataFrame`\r\n\r\nIn this case, what most likely needs done is modifying step 2 in the presence of `rowspan`/`colspan`, adjusting the data.  Can look to `read_excel` for inspiration, or a simple example below - key things are  the padding of data and `header` keyword. (`index_col` works the same for index)\r\n\r\n```python\r\nIn [8]: from pandas.io.parsers import TextParser\r\n\r\nIn [14]: df = TextParser([\r\n    ...:     ['a', 'a', 'b'],\r\n    ...:     ['sub1', 'sub2', 'sub2'],\r\n    ...:     [1, 2, 3],\r\n    ...:     [4, 5, 6],\r\n    ...:     ],\r\n    ...:     header=[0, 1]).read()\r\n\r\nIn [16]: df\r\nOut[16]: \r\n     a         b\r\n  sub1 sub2 sub2\r\n0    1    2    3\r\n1    4    5    6\r\n\r\nIn [17]: df.columns\r\nOut[17]: \r\nMultiIndex(levels=[['a', 'b'], ['sub1', 'sub2']],\r\n           labels=[[0, 0, 1], [0, 1, 1]])\r\n\r\n```\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317285368",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17054#issuecomment-317285368",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17054",
    "id": 317285368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzI4NTM2OA==",
    "user": {
      "login": "jowens",
      "id": 976970,
      "node_id": "MDQ6VXNlcjk3Njk3MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/976970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jowens",
      "html_url": "https://github.com/jowens",
      "followers_url": "https://api.github.com/users/jowens/followers",
      "following_url": "https://api.github.com/users/jowens/following{/other_user}",
      "gists_url": "https://api.github.com/users/jowens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jowens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jowens/subscriptions",
      "organizations_url": "https://api.github.com/users/jowens/orgs",
      "repos_url": "https://api.github.com/users/jowens/repos",
      "events_url": "https://api.github.com/users/jowens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jowens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-23T22:01:34Z",
    "updated_at": "2017-07-23T22:01:34Z",
    "author_association": "NONE",
    "body": "FYI: All relevant logic appears to be in `io/html.py` in the function `_HtmlFrameParser:_parse_raw_thead`; it does not rely on the parser chosen."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317287909",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17054#issuecomment-317287909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17054",
    "id": 317287909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzI4NzkwOQ==",
    "user": {
      "login": "jowens",
      "id": 976970,
      "node_id": "MDQ6VXNlcjk3Njk3MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/976970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jowens",
      "html_url": "https://github.com/jowens",
      "followers_url": "https://api.github.com/users/jowens/followers",
      "following_url": "https://api.github.com/users/jowens/following{/other_user}",
      "gists_url": "https://api.github.com/users/jowens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jowens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jowens/subscriptions",
      "organizations_url": "https://api.github.com/users/jowens/orgs",
      "repos_url": "https://api.github.com/users/jowens/repos",
      "events_url": "https://api.github.com/users/jowens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jowens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-23T22:50:26Z",
    "updated_at": "2017-07-23T22:50:26Z",
    "author_association": "NONE",
    "body": "... although there is no current capability for the parser to get attributes (e.g., `rowspan`, `colspan`) from elements, so that must be added. (There's currently a `text_getter` that returns a string; we need an analogous `attrs_getter` that returns a dict with keys=attributes, values=attribute_values.)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317293646",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17054#issuecomment-317293646",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17054",
    "id": 317293646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzI5MzY0Ng==",
    "user": {
      "login": "jowens",
      "id": 976970,
      "node_id": "MDQ6VXNlcjk3Njk3MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/976970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jowens",
      "html_url": "https://github.com/jowens",
      "followers_url": "https://api.github.com/users/jowens/followers",
      "following_url": "https://api.github.com/users/jowens/following{/other_user}",
      "gists_url": "https://api.github.com/users/jowens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jowens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jowens/subscriptions",
      "organizations_url": "https://api.github.com/users/jowens/orgs",
      "repos_url": "https://api.github.com/users/jowens/repos",
      "events_url": "https://api.github.com/users/jowens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jowens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-24T00:32:24Z",
    "updated_at": "2017-07-24T18:44:11Z",
    "author_association": "NONE",
    "body": "@chris-b1 would you mind eyeballing the following output for the 4 tables on this web page: https://www.ssa.gov/policy/docs/statcomps/supplement/2015/5h.html? This seems to me to be the right pieces to pass to `TextParser` (as long as I'm returning this from `_parse_raw_thead`, everything else ought to just work fine):\r\n\r\n```\r\n++ Returning this from _HtmlFrameParser:_parse_raw_thead:\r\n[[u'Year', u'Retired-worker families', u'Retired-worker families', u'Retired-worker families', u'Retired-worker families', u'Survivor families', u'Survivor families', u'Survivor families', u'Survivor families', u'Disabled-worker families', u'Disabled-worker families', u'Disabled-worker families', u'Disabled-worker families', u'Disabled-worker families', u'Disabled-worker families'], [u'Year', u'Worker only', u'Worker only', u'Worker only', u'Worker and wife\\xa0a', u'Non-disabled widow only', u'Widowed mother or father and\\u2014', u'Widowed mother or father and\\u2014', u'Widowed mother or father and\\u2014', u'Worker only', u'Worker only', u'Worker only', u'Worker, wife,\\xa0b and\\u2014', u'Worker, wife,\\xa0b and\\u2014', u'Worker and spouse'], [u'Year', u'All', u'Men', u'Women', u'Worker and wife\\xa0a', u'Non-disabled widow only', u'1\\xa0child', u'2\\xa0children', u'3 or more children', u'All', u'Men', u'Women', u'1\\xa0child', u'2 or more children', u'Worker and spouse']]\r\n\r\n++ Returning this from _HtmlFrameParser:_parse_raw_thead:\r\n[[u'Family group', u'Number (thousands)', u'Number (thousands)', u'Average primary insurance amount (dollars)', u'Average monthly family benefit (dollars)'], [u'Family group', u'Families', u'Beneficiaries', u'Average primary insurance amount (dollars)', u'Average monthly family benefit (dollars)']]\r\n\r\n++ Returning this from _HtmlFrameParser:_parse_raw_thead:\r\n[[u'Monthly family benefit\\xa0a (dollars)', u'Retired worker only', u'Retired worker only', u'Retired worker and wife', u'Retired worker, wife, and\\u2014', u'Retired worker, wife, and\\u2014', u'Disabled worker only', u'Disabled worker only', u'Disabled worker, wife, and\\u2014', u'Disabled worker, wife, and\\u2014'], [u'Monthly family benefit\\xa0a (dollars)', u'Men', u'Women', u'Retired worker and wife', u'1\\xa0child', u'2 or more children', u'Men', u'Women', u'1\\xa0child', u'2 or more children']]\r\n\r\n++ Returning this from _HtmlFrameParser:_parse_raw_thead:\r\n[[u'Monthly family benefit (dollars)', u'Widowed mother or father and\\u2014', u'Widowed mother or father and\\u2014', u'Widowed mother or father and\\u2014', u'Children only', u'Children only', u'Children only', u'Widow only', u'Widow only'], [u'Monthly family benefit (dollars)', u'1\\xa0child', u'2\\xa0children', u'3 or more children', u'1\\xa0child', u'2\\xa0children', u'3 or more children', u'Nondisabled', u'Disabled']]\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317293863",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17054#issuecomment-317293863",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17054",
    "id": 317293863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzI5Mzg2Mw==",
    "user": {
      "login": "jowens",
      "id": 976970,
      "node_id": "MDQ6VXNlcjk3Njk3MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/976970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jowens",
      "html_url": "https://github.com/jowens",
      "followers_url": "https://api.github.com/users/jowens/followers",
      "following_url": "https://api.github.com/users/jowens/following{/other_user}",
      "gists_url": "https://api.github.com/users/jowens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jowens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jowens/subscriptions",
      "organizations_url": "https://api.github.com/users/jowens/orgs",
      "repos_url": "https://api.github.com/users/jowens/repos",
      "events_url": "https://api.github.com/users/jowens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jowens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-24T00:36:37Z",
    "updated_at": "2017-07-24T00:36:37Z",
    "author_association": "NONE",
    "body": "Here's the current output (from trunk).\r\n\r\n```\r\n++ Returning this from _HtmlFrameParser:_parse_raw_thead:\r\n[[u'Year', u'Retired-worker families', u'Survivor families', u'Disabled-worker families'], [u'Worker only', u'Worker and wife\\xa0a', u'Non-disabled widow only', u'Widowed mother or father and\\u2014', u'Worker only', u'Worker, wife,\\xa0b and\\u2014', u'Worker and spouse'], [u'All', u'Men', u'Women', u'1\\xa0child', u'2\\xa0children', u'3 or more children', u'All', u'Men', u'Women', u'1\\xa0child', u'2 or more children']]\r\n\r\n++ Returning this from _HtmlFrameParser:_parse_raw_thead:\r\n[[u'Family group', u'Number (thousands)', u'Average primary insurance amount (dollars)', u'Average monthly family benefit (dollars)'], [u'Families', u'Beneficiaries']]\r\n\r\n++ Returning this from _HtmlFrameParser:_parse_raw_thead:\r\n[[u'Monthly family benefit\\xa0a (dollars)', u'Retired worker only', u'Retired worker and wife', u'Retired worker, wife, and\\u2014', u'Disabled worker only', u'Disabled worker, wife, and\\u2014'], [u'Men', u'Women', u'1\\xa0child', u'2 or more children', u'Men', u'Women', u'1\\xa0child', u'2 or more children']]\r\n\r\n++ Returning this from _HtmlFrameParser:_parse_raw_thead:\r\n[[u'Monthly family benefit (dollars)', u'Widowed mother or father and\\u2014', u'Children only', u'Widow only'], [u'1\\xa0child', u'2\\xa0children', u'3 or more children', u'1\\xa0child', u'2\\xa0children', u'3 or more children', u'Nondisabled', u'Disabled']]\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317299176",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17054#issuecomment-317299176",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17054",
    "id": 317299176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzI5OTE3Ng==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-24T01:40:30Z",
    "updated_at": "2017-07-24T01:40:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, at a quick glance that's looking good!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317497723",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17054#issuecomment-317497723",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17054",
    "id": 317497723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzQ5NzcyMw==",
    "user": {
      "login": "jowens",
      "id": 976970,
      "node_id": "MDQ6VXNlcjk3Njk3MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/976970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jowens",
      "html_url": "https://github.com/jowens",
      "followers_url": "https://api.github.com/users/jowens/followers",
      "following_url": "https://api.github.com/users/jowens/following{/other_user}",
      "gists_url": "https://api.github.com/users/jowens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jowens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jowens/subscriptions",
      "organizations_url": "https://api.github.com/users/jowens/orgs",
      "repos_url": "https://api.github.com/users/jowens/repos",
      "events_url": "https://api.github.com/users/jowens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jowens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-24T17:36:29Z",
    "updated_at": "2017-07-24T18:15:24Z",
    "author_association": "NONE",
    "body": "There is a larger structural problem with the code in that currently, the parsing is divided into three pieces—`parse_thead`, `parse_tbody`, and `parse_tfoot`, each of which has its own custom logic. My current code is focused in `parse_thead`, where I thought it would be most relevant. However, (a) rowspan and colspan certainly can appear in the body and foot and (b) Wikipedia tables don't have a `<thead>` at all and so everything gets dumped into the body. So I think—lacking global knowledge about doing a big refactoring like this—that it might be better to have one chunk of code that does all parsing (hopefully in the generic parser code, not in the parser-specific parser code) and that special cases for header and footer might be in that one chunk of code. But this sort of refactoring is likely beyond what I could do well.\r\n\r\ncc: some of the folks who have recently edited this file for comment/advice: @jreback @brianhuey @gte620v @jorisvandenbossche @hnykda @mjsu @cpcloud"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317516862",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17054#issuecomment-317516862",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17054",
    "id": 317516862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzUxNjg2Mg==",
    "user": {
      "login": "jowens",
      "id": 976970,
      "node_id": "MDQ6VXNlcjk3Njk3MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/976970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jowens",
      "html_url": "https://github.com/jowens",
      "followers_url": "https://api.github.com/users/jowens/followers",
      "following_url": "https://api.github.com/users/jowens/following{/other_user}",
      "gists_url": "https://api.github.com/users/jowens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jowens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jowens/subscriptions",
      "organizations_url": "https://api.github.com/users/jowens/orgs",
      "repos_url": "https://api.github.com/users/jowens/repos",
      "events_url": "https://api.github.com/users/jowens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jowens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-24T18:42:44Z",
    "updated_at": "2017-07-24T18:42:44Z",
    "author_association": "NONE",
    "body": "(For posterity: A lot of the reason that I see there's different pieces for head, body, and foot is basically for flexibility on HTML tables: there might or might not be a head or foot, the body might or might not be declared with `<tbody>`, etc. (For Wikipedia tables, no `<thead>` but rows with `<th>` and not `<td>` means we should probably interpret those rows as header rows.) But, there's no documentation as far as I can tell to say, basically, these are the different styles of tables that pandas supports. The conditionals in the parse routines aren't commented so I'm just guessing on which different table behaviors they're handling. Hopefully the current test cases are comprehensive enough to cover 'em.)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317902305",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17054#issuecomment-317902305",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17054",
    "id": 317902305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzkwMjMwNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-25T23:27:22Z",
    "updated_at": "2017-07-25T23:27:22Z",
    "author_association": "MEMBER",
    "body": "xref discussion in #17073 : it will be addressed when this issue gets resolved."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317913658",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17054#issuecomment-317913658",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17054",
    "id": 317913658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzkxMzY1OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-26T00:44:22Z",
    "updated_at": "2017-07-26T00:44:22Z",
    "author_association": "MEMBER",
    "body": "From #17074:\r\n\r\n@chris-b1 or anyone else, help a brother out? Can you tell me what this test does? It's just expecting the parser to throw an error? The output from the test code (where it's failing) is at the bottom. It's a pretty weird HTML file.\r\n\r\n<img width=\"269\" alt=\"computer_sales_page_html\" src=\"https://user-images.githubusercontent.com/976970/28598596-882515f2-7159-11e7-902f-1262a7c5d983.png\">\r\n\r\nNow, if I call it with my current in-progress code as `dfs = pd.read_html('computer_sales_page.html', header=[0, 1])`, I see:\r\n\r\n```\r\nIndex([         (u'Unnamed: 0_level_0', u'Unnamed: 0_level_1'),\r\n                (u'Unnamed: 1_level_0', u'Unnamed: 1_level_1'),\r\n                     (u'Three months ended April?30', u'2013'),\r\n              u'(u'Three months ended April\\xa030', '2013').1',\r\n       (u'Three months ended April?30', u'Unnamed: 4_level_1'),\r\n                     (u'Three months ended April?30', u'2012'),\r\n              u'(u'Three months ended April\\xa030', '2012').1',\r\n                (u'Unnamed: 7_level_0', u'Unnamed: 7_level_1'),\r\n                       (u'Six months ended April?30', u'2013'),\r\n                u'(u'Six months ended April\\xa030', '2013').1',\r\n        (u'Six months ended April?30', u'Unnamed: 10_level_1'),\r\n                       (u'Six months ended April?30', u'2012'),\r\n                u'(u'Six months ended April\\xa030', '2012').1',\r\n              (u'Unnamed: 13_level_0', u'Unnamed: 13_level_1')],\r\n      dtype='object')\r\n```\r\n\r\nand if I call it without a header argument (`dfs = pd.read_html('computer_sales_page.html')`), I see:\r\n\r\n```\r\nIndex([   (u'Unnamed: 0_level_0', u'Unnamed: 0_level_1', u'Unnamed: 0_level_2'),\r\n          (u'Unnamed: 1_level_0', u'Unnamed: 1_level_1', u'Unnamed: 1_level_2'),\r\n                      (u'Three months ended April?30', u'2013', u'In millions'),\r\n                u'(u'Three months ended April\\xa030', '2013', 'In millions').1',\r\n        (u'Three months ended April?30', u'Unnamed: 4_level_1', u'In millions'),\r\n                      (u'Three months ended April?30', u'2012', u'In millions'),\r\n                u'(u'Three months ended April\\xa030', '2012', 'In millions').1',\r\n                 (u'Unnamed: 7_level_0', u'Unnamed: 7_level_1', u'In millions'),\r\n                        (u'Six months ended April?30', u'2013', u'In millions'),\r\n                  u'(u'Six months ended April\\xa030', '2013', 'In millions').1',\r\n         (u'Six months ended April?30', u'Unnamed: 10_level_1', u'In millions'),\r\n                        (u'Six months ended April?30', u'2012', u'In millions'),\r\n                  u'(u'Six months ended April\\xa030', '2012', 'In millions').1',\r\n       (u'Unnamed: 13_level_0', u'Unnamed: 13_level_1', u'Unnamed: 13_level_2')],\r\n      dtype='object')\r\n```\r\n\r\nThese seem like OK outputs to me. I'm not sure what the original test is supposed to show. I think I'd like to just delete the test if it's supposed to fail (and no longer fails).\r\n\r\n```\r\n____________________ TestReadHtml.test_computer_sales_page _____________________\r\n\r\nself = <pandas.tests.io.test_html.TestReadHtml object at 0x1120aa390>\r\n\r\n    def test_computer_sales_page(self):\r\n        data = os.path.join(DATA_PATH, 'computer_sales_page.html')\r\n        with tm.assert_raises_regex(ParserError,\r\n                                    r\"Passed header=\\[0,1\\] are \"\r\n                                    r\"too many rows for this \"\r\n                                    r\"multi_index of columns\"):\r\n>           self.read_html(data, header=[0, 1])\r\n\r\npandas/tests/io/test_html.py:778:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <pandas.util.testing._AssertRaisesContextmanager object at 0x1120aab50>\r\nexc_type = None, exc_value = None, trace_back = None\r\n\r\n    def __exit__(self, exc_type, exc_value, trace_back):\r\n        expected = self.exception\r\n\r\n        if not exc_type:\r\n            exp_name = getattr(expected, \"__name__\", str(expected))\r\n>           raise AssertionError(\"{0} not raised.\".format(exp_name))\r\nE           AssertionError: ParserError not raised.\r\n\r\npandas/util/testing.py:2491: AssertionError\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318076053",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17054#issuecomment-318076053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17054",
    "id": 318076053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODA3NjA1Mw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-26T14:47:33Z",
    "updated_at": "2017-07-26T14:47:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jowens  - can you open a PR with your WIP code?  Easier to answer these type of questions that way."
  }
]
