[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/255094466",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14459#issuecomment-255094466",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14459",
    "id": 255094466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTA5NDQ2Ng==",
    "user": {
      "login": "pankajp",
      "id": 776111,
      "node_id": "MDQ6VXNlcjc3NjExMQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/776111?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pankajp",
      "html_url": "https://github.com/pankajp",
      "followers_url": "https://api.github.com/users/pankajp/followers",
      "following_url": "https://api.github.com/users/pankajp/following{/other_user}",
      "gists_url": "https://api.github.com/users/pankajp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pankajp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pankajp/subscriptions",
      "organizations_url": "https://api.github.com/users/pankajp/orgs",
      "repos_url": "https://api.github.com/users/pankajp/repos",
      "events_url": "https://api.github.com/users/pankajp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pankajp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-20T12:41:02Z",
    "updated_at": "2016-10-20T12:43:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some additional notes:\n- The `python` engine works as expected:\n\n```\n$ python -c \"import pandas; df = pandas.read_table('quoted_data.csv', engine='python', skiprows=5, sep=','); print df\"\n   a  b  c\n0  1  2  3\n1  4  5  6\n2  7  8  9\n```\n- The commit https://github.com/pandas-dev/pandas/commit/5688d2771a00675bb530fc2d61fb8e356d8e134d is the one which changed this behavior for the `c` engine, as found out by `git bisect`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/255103548",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14459#issuecomment-255103548",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14459",
    "id": 255103548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTEwMzU0OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-20T13:20:30Z",
    "updated_at": "2016-10-20T13:20:30Z",
    "author_association": "MEMBER",
    "body": "The difference in behaviour between python and c engine is not good. But, the question is a bit which of both you want. \n\ncc @gfyoung \n\nI suppose normally newlines in quotes should only be regarded as part of the string if the quotes are 'valid'. I mean, `b\"` is not a valid quoted string, and if that occurs in a normal row this is just interpreted as the string `'b\"'`, not as the start of a multiline string\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/255286149",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14459#issuecomment-255286149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14459",
    "id": 255286149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTI4NjE0OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-21T03:37:43Z",
    "updated_at": "2016-10-21T03:38:56Z",
    "author_association": "MEMBER",
    "body": "@rahulporuri : Thanks for bringing up this issue!  This is not bugged behaviour but rather expected.  The reason why you get an empty DataFrame is because that multi-line quote is considered to be a single field value.  Thus, the five rows you are skipping are `'a'`, `'b\\nc\\nd\\ne'`, `a,b,c`, `1,2,3`, and `4,5,6`.  Once you are inside the quotation marks, anything goes.\n\nYour \"surprising\" results behave as expected too.  The first two rows are `'a'` and `'b\\nc\\nd\\ne'`, and those are skipped leaving the DataFrame you wanted.  The reason why your next example \"behaves\" is because you specified the quote character to be `'?'`.  Now `'b\\nc\\nd\\ne'` is no longer interpreted as a single field but rather as multiple lines because `\"` is no longer a quotation mark character.\n\nThe Python behaviour is out of our control because the `csv` library in Python is the foundation of that parser, and when you read the data you provided, it parses incorrectly IMO by \"ignoring\" quotation marks (i.e. it treats the `\\n` inside the quotation marks as line terminators).  While it is good that you bring up this inconsistency, I wonder in the long-term whether this is worthwhile to \"rectify,\" if there is any good way to do so.  I think we should be deprecating the Python parser eventually because I think the C parser is objectively superior both in performance and general correctness.\n\n@jorisvandenbossche : While I don't believe there is a real issue to fix, not entirely sure what would be best to do given my explanation above.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/255956352",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14459#issuecomment-255956352",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14459",
    "id": 255956352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTk1NjM1Mg==",
    "user": {
      "login": "pankajp",
      "id": 776111,
      "node_id": "MDQ6VXNlcjc3NjExMQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/776111?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pankajp",
      "html_url": "https://github.com/pankajp",
      "followers_url": "https://api.github.com/users/pankajp/followers",
      "following_url": "https://api.github.com/users/pankajp/following{/other_user}",
      "gists_url": "https://api.github.com/users/pankajp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pankajp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pankajp/subscriptions",
      "organizations_url": "https://api.github.com/users/pankajp/orgs",
      "repos_url": "https://api.github.com/users/pankajp/repos",
      "events_url": "https://api.github.com/users/pankajp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pankajp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T07:18:25Z",
    "updated_at": "2016-10-25T07:18:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think @jorisvandenbossche 's suggestion is reasonable and expected, quoted field should have quoting in the beginning and end of the field. The example here is artificial but has use in real world data with `'` and `\"` being used in quite a few places to indicate feet and inches.\nThe python engine's behavior seems appropriate.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/255974742",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14459#issuecomment-255974742",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14459",
    "id": 255974742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTk3NDc0Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T08:44:59Z",
    "updated_at": "2016-10-25T08:44:59Z",
    "author_association": "MEMBER",
    "body": "@gfyoung to illustrate the difference in how quotes are interpreted in skipped rows vs the data rows:\n\nnewline in quoted strings (`\"a\\nb\"`) -> regarded as one row\n\n```\ns1 = \"\"\"a,b,c\n1,\"a\nb\",3\n2,\"c\",4\"\"\"\n\nIn [2]: pd.read_csv(StringIO(s1))\nOut[2]: \n   a     b  c\n0  1  a\\nb  3\n1  2     c  4\n```\n\nif you have a similar case in to skip header rows (`\"further\\nskip\"\"`) -> also interpreted as one row -> skiprows=2 instead of 3\n\n```\ns2 = \"\"\"toskip\n\"further\nskip\"\na,b,c\n1,\"a\nb\",3\n2,\"c\",4\"\"\"\n\nIn [4]: pd.read_csv(StringIO(s2), skiprows=2)\nOut[4]: \n   a     b  c\n0  1  a\\nb  3\n1  2     c  4\n```\n\nbut if the quote is not 'valid' (`a\"\\nb\"`), it is not interpreted as one row\n\n```\ns3 = \"\"\"a,b,c\n1,a\"\nb\",3\n2,\"c\",4\"\"\"\n\nIn [7]: pd.read_csv(StringIO(s3))\nOut[7]: \n    a   b    c\n0   1  a\"  NaN\n1  b\"   3  NaN\n2   2   c  4.0\n```\n\nif you have a similar construct in the to skip header rows (`further\"\\nskip\"`), it is not regarded as separate rows as I still have to use `skiprows=2` instead of `skiprows=3`:\n\n```\ns4 = \"\"\"toskip\nfurther\"\nskip\"\na,b,c\n1,a\"\nb\",3\n2,c,4\"\"\"\n\nIn [9]: pd.read_csv(StringIO(s4), skiprows=2)\nOut[9]: \n    a   b    c\n0   1  a\"  NaN\n1  b\"   3  NaN\n2   2   c  4.0\n```\n\nI am not sure if we have some kind of definition of what a 'valid' quote is, but in any case there is some inconsistency here, and which caused possibly unintended change in the `skiprows` behaviour.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/256025151",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14459#issuecomment-256025151",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14459",
    "id": 256025151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjAyNTE1MQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T12:49:24Z",
    "updated_at": "2016-10-25T12:49:33Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : Hmmm...so I think that `s3` is a bug in your examples.  The reason is that we do not go back to parsing as a quoted field once we are inside the field (i.e. your `'a'` character means that the quote becomes in-field).  It is not a thing of valid and invalid quotation marks.  That can be patched.\n\n@rahulporuri : Imagine your field value is a multi-line quote.  Would you want Python to butcher it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/256181255",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14459#issuecomment-256181255",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14459",
    "id": 256181255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjE4MTI1NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T21:27:50Z",
    "updated_at": "2016-10-25T21:27:50Z",
    "author_association": "MEMBER",
    "body": "@gfyoung If `s3` would be a bug, what would you expect from this:\n\n```\ns = \"\"\"a,b\n1,a\"d\n2,d\"d\"d\"\"\"\n\nIn [14]: pd.read_csv(StringIO(s))\nOut[14]: \n   a      b\n0  1    a\"d\n1  2  d\"d\"d\n```\n\nas this are both example of where quotation marks are not interpreted as starting quotes \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/256181794",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14459#issuecomment-256181794",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14459",
    "id": 256181794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjE4MTc5NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T21:30:07Z",
    "updated_at": "2016-10-25T21:31:10Z",
    "author_association": "MEMBER",
    "body": "> The reason is that we do not go back to parsing as a quoted field once we are inside the field (i.e. your 'a' character means that the quote becomes in-field).\n\nYes (that's what I meant with 'invalid' quote, but maybe not a good name), so indeed because the field is already started, the quotation mark is not regarded as the start of a quote. But I don't understand why you say this would be a bug, as you also explain that we deliberately do not go as a quoted field one we are inside the field.\n\nSo why not follow the same reasoning for the header lines? If the line does not start with a quotation mark, you already are 'in-field'\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/256182584",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14459#issuecomment-256182584",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14459",
    "id": 256182584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjE4MjU4NA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T21:33:30Z",
    "updated_at": "2016-10-25T21:33:30Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : Fair point.  Now that I think about it, we could go either way on this:\n\n1) We consider inline quotation marks as quotation marks to parse.\n2) We consider inline quotation marks as data.\n\nWhich one do you think has more use-cases?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/256185749",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14459#issuecomment-256185749",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14459",
    "id": 256185749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjE4NTc0OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T21:47:14Z",
    "updated_at": "2016-10-25T21:47:14Z",
    "author_association": "MEMBER",
    "body": "Given that it is the current behaviour of both the python and c engine, I would go with option 2. \nAnd apart from that, option 2 also makes the most sense to me I think.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/256188210",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14459#issuecomment-256188210",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14459",
    "id": 256188210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjE4ODIxMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T21:56:03Z",
    "updated_at": "2016-10-25T21:56:03Z",
    "author_association": "MEMBER",
    "body": "But if we think option 2 is the right way, that means that the `s3` example from above is not a bug (and that the current behaviour for data rows is the desired one). \nBut that leaves the question of how to interpret quotes on skipped lines. I would say that we should treat then the same as other rows. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/256191779",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14459#issuecomment-256191779",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14459",
    "id": 256191779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjE5MTc3OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T22:08:34Z",
    "updated_at": "2016-10-25T22:08:45Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : Okay, but I suspect we're going to take a major performance hit if we have to differentiate between \"quoted fields\" and \"in-field quotes\".  For example, what happens if your skipped row has multiple quoted fields in a single row?\n\nI tackled this issue before with the C parser when I implemented quotation mark parsing in skipped rows.  Right now, whenever we see a quotation mark, we just let anything and everything pass through.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/256346438",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14459#issuecomment-256346438",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14459",
    "id": 256346438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjM0NjQzOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T13:25:53Z",
    "updated_at": "2016-10-26T13:25:53Z",
    "author_association": "MEMBER",
    "body": "But didn't we get the performance hit already when we started parsing the skipped rows? \nOr is there still a large difference between parsing the skipped rows just for quotes and parsing the skipped rows for both delimiter and quotes ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/256348155",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14459#issuecomment-256348155",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14459",
    "id": 256348155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjM0ODE1NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T13:31:46Z",
    "updated_at": "2016-10-26T13:31:46Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : Yes, we did.  Now that I think about it, as long as we just check for delimiters (and no other parsing), we could be okay.  We might need a couple of other states I think in `tokenize_bytes`.\n"
  }
]
