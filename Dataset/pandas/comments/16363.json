[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303226925",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16363#issuecomment-303226925",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16363",
    "id": 303226925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzIyNjkyNQ==",
    "user": {
      "login": "james-nichols",
      "id": 844072,
      "node_id": "MDQ6VXNlcjg0NDA3Mg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/844072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/james-nichols",
      "html_url": "https://github.com/james-nichols",
      "followers_url": "https://api.github.com/users/james-nichols/followers",
      "following_url": "https://api.github.com/users/james-nichols/following{/other_user}",
      "gists_url": "https://api.github.com/users/james-nichols/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/james-nichols/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/james-nichols/subscriptions",
      "organizations_url": "https://api.github.com/users/james-nichols/orgs",
      "repos_url": "https://api.github.com/users/james-nichols/repos",
      "events_url": "https://api.github.com/users/james-nichols/events{/privacy}",
      "received_events_url": "https://api.github.com/users/james-nichols/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T21:37:17Z",
    "updated_at": "2017-05-22T21:37:17Z",
    "author_association": "NONE",
    "body": "I am looking at this as part of the PyCon2017 sprints"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303420205",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16363#issuecomment-303420205",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16363",
    "id": 303420205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQyMDIwNQ==",
    "user": {
      "login": "mkozel92",
      "id": 6642274,
      "node_id": "MDQ6VXNlcjY2NDIyNzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6642274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkozel92",
      "html_url": "https://github.com/mkozel92",
      "followers_url": "https://api.github.com/users/mkozel92/followers",
      "following_url": "https://api.github.com/users/mkozel92/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkozel92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkozel92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkozel92/subscriptions",
      "organizations_url": "https://api.github.com/users/mkozel92/orgs",
      "repos_url": "https://api.github.com/users/mkozel92/repos",
      "events_url": "https://api.github.com/users/mkozel92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkozel92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T14:42:26Z",
    "updated_at": "2017-05-23T14:42:26Z",
    "author_association": "NONE",
    "body": "Not really a fix. But if you need a workaround just use float64.\r\nWorked for me."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/304466476",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16363#issuecomment-304466476",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16363",
    "id": 304466476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQ2NjQ3Ng==",
    "user": {
      "login": "james-nichols",
      "id": 844072,
      "node_id": "MDQ6VXNlcjg0NDA3Mg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/844072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/james-nichols",
      "html_url": "https://github.com/james-nichols",
      "followers_url": "https://api.github.com/users/james-nichols/followers",
      "following_url": "https://api.github.com/users/james-nichols/following{/other_user}",
      "gists_url": "https://api.github.com/users/james-nichols/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/james-nichols/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/james-nichols/subscriptions",
      "organizations_url": "https://api.github.com/users/james-nichols/orgs",
      "repos_url": "https://api.github.com/users/james-nichols/repos",
      "events_url": "https://api.github.com/users/james-nichols/events{/privacy}",
      "received_events_url": "https://api.github.com/users/james-nichols/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-27T17:43:01Z",
    "updated_at": "2017-05-27T17:43:01Z",
    "author_association": "NONE",
    "body": "Using float64 does not work for me, and in any case does not address that attribute `value` is being sought from `UnaryOp`.\r\n\r\nLeft the sprints early, but looked in to this and realised I don't understand the Pandas Op class behaviour well enough. \r\n\r\nThe problem is that `UnaryOp` returns `True` for `isscalar`, which on first inspection seems a little strange. Also any descendent of `Op` (e.g. `BinaryOp`) also returns `True` for `isscalar`, in similar circumstances. This is because of the following in the `Op` class:\r\n```\r\n@property\r\ndef isscalar(self):\r\n    return all(operand.isscalar for operand in self.operands)\r\n```\r\nSeems like incorrect behaviour to me. If I make `isscalar` simply return `False`, then the problem here is fixed, but I have little idea of the far reaching consequences of such a change. I searched for all references to `isscalar` through the core code-base and it seems that it is only called in this method and one other, so perhaps there is little problem.\r\n\r\nDoes anyone have any thoughts on this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305077807",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16363#issuecomment-305077807",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16363",
    "id": 305077807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTA3NzgwNw==",
    "user": {
      "login": "james-nichols",
      "id": 844072,
      "node_id": "MDQ6VXNlcjg0NDA3Mg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/844072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/james-nichols",
      "html_url": "https://github.com/james-nichols",
      "followers_url": "https://api.github.com/users/james-nichols/followers",
      "following_url": "https://api.github.com/users/james-nichols/following{/other_user}",
      "gists_url": "https://api.github.com/users/james-nichols/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/james-nichols/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/james-nichols/subscriptions",
      "organizations_url": "https://api.github.com/users/james-nichols/orgs",
      "repos_url": "https://api.github.com/users/james-nichols/repos",
      "events_url": "https://api.github.com/users/james-nichols/events{/privacy}",
      "received_events_url": "https://api.github.com/users/james-nichols/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T04:13:45Z",
    "updated_at": "2017-05-31T04:13:45Z",
    "author_association": "NONE",
    "body": "I've run the test suite with `isscalar` set to `False` in the `Op` class, and it doesn't seem to break anything. In my opinion I think someone got the notion of what a scalar in this case confused with the notion of a scalar in terms of numpy arrays, somewhere along the way. I think only objects of type `Term` and descendants should return `True` for `isscalar`.\r\n\r\nAny thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/313231698",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16363#issuecomment-313231698",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16363",
    "id": 313231698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzIzMTY5OA==",
    "user": {
      "login": "kenahoo",
      "id": 111939,
      "node_id": "MDQ6VXNlcjExMTkzOQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/111939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kenahoo",
      "html_url": "https://github.com/kenahoo",
      "followers_url": "https://api.github.com/users/kenahoo/followers",
      "following_url": "https://api.github.com/users/kenahoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kenahoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kenahoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kenahoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kenahoo/orgs",
      "repos_url": "https://api.github.com/users/kenahoo/repos",
      "events_url": "https://api.github.com/users/kenahoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kenahoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-05T21:26:48Z",
    "updated_at": "2017-07-05T21:26:48Z",
    "author_association": "NONE",
    "body": "A smaller version of the original test case is:\r\n\r\n```\r\ndef test_unary():\r\n    df = pd.DataFrame({'x': np.array([0], dtype=np.float32)})\r\n    res = df.eval('x < -0.1')\r\n    assert np.array_equal(res, np.array([False])), res\r\n```\r\n\r\nNote that it's not just a problem with `np.float32`, it also fails with string data (which is my original use case that motivated #16833):\r\n\r\n```\r\ndef test_unary():\r\n    df = pd.DataFrame({'x': [\"one\", \"two\"]})\r\n    df.eval('x.shift(-1)')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/313403537",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16363#issuecomment-313403537",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16363",
    "id": 313403537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzQwMzUzNw==",
    "user": {
      "login": "james-nichols",
      "id": 844072,
      "node_id": "MDQ6VXNlcjg0NDA3Mg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/844072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/james-nichols",
      "html_url": "https://github.com/james-nichols",
      "followers_url": "https://api.github.com/users/james-nichols/followers",
      "following_url": "https://api.github.com/users/james-nichols/following{/other_user}",
      "gists_url": "https://api.github.com/users/james-nichols/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/james-nichols/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/james-nichols/subscriptions",
      "organizations_url": "https://api.github.com/users/james-nichols/orgs",
      "repos_url": "https://api.github.com/users/james-nichols/repos",
      "events_url": "https://api.github.com/users/james-nichols/events{/privacy}",
      "received_events_url": "https://api.github.com/users/james-nichols/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-06T13:56:52Z",
    "updated_at": "2017-07-06T13:56:52Z",
    "author_association": "NONE",
    "body": "Agreed. It is not just np.float32 that is causing the trouble.\r\n\r\nI think that my suggested fix is the correct way forward, having run the full test suite and seen no problems, and thinking about how the design notionally should work. I believe someone got confused with the notion of `isscalar` from numpy - that an expression shouldn't be considered a \"scalar\" just because it returns scalar values as opposed to array/list values, versus the idea here which should be a test whether the expression is actually a scalar as opposed to an expression that could be further broken down or an op."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359131775",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16363#issuecomment-359131775",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16363",
    "id": 359131775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTEzMTc3NQ==",
    "user": {
      "login": "ksw9",
      "id": 7399551,
      "node_id": "MDQ6VXNlcjczOTk1NTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7399551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ksw9",
      "html_url": "https://github.com/ksw9",
      "followers_url": "https://api.github.com/users/ksw9/followers",
      "following_url": "https://api.github.com/users/ksw9/following{/other_user}",
      "gists_url": "https://api.github.com/users/ksw9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ksw9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ksw9/subscriptions",
      "organizations_url": "https://api.github.com/users/ksw9/orgs",
      "repos_url": "https://api.github.com/users/ksw9/repos",
      "events_url": "https://api.github.com/users/ksw9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ksw9/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-20T01:10:36Z",
    "updated_at": "2018-01-20T01:10:36Z",
    "author_association": "NONE",
    "body": "Hi, \r\nI am wondering if this is resolved? I'm running into a similar issue using pandas df.query() with negative numbers.\r\nThank you!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359185726",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16363#issuecomment-359185726",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16363",
    "id": 359185726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTE4NTcyNg==",
    "user": {
      "login": "james-nichols",
      "id": 844072,
      "node_id": "MDQ6VXNlcjg0NDA3Mg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/844072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/james-nichols",
      "html_url": "https://github.com/james-nichols",
      "followers_url": "https://api.github.com/users/james-nichols/followers",
      "following_url": "https://api.github.com/users/james-nichols/following{/other_user}",
      "gists_url": "https://api.github.com/users/james-nichols/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/james-nichols/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/james-nichols/subscriptions",
      "organizations_url": "https://api.github.com/users/james-nichols/orgs",
      "repos_url": "https://api.github.com/users/james-nichols/repos",
      "events_url": "https://api.github.com/users/james-nichols/events{/privacy}",
      "received_events_url": "https://api.github.com/users/james-nichols/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-20T17:01:51Z",
    "updated_at": "2018-01-20T17:01:51Z",
    "author_association": "NONE",
    "body": "@ksw9 I'll submit a fix for this. That way at least a moderator will have to respond."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359486475",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16363#issuecomment-359486475",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16363",
    "id": 359486475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTQ4NjQ3NQ==",
    "user": {
      "login": "ksw9",
      "id": 7399551,
      "node_id": "MDQ6VXNlcjczOTk1NTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7399551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ksw9",
      "html_url": "https://github.com/ksw9",
      "followers_url": "https://api.github.com/users/ksw9/followers",
      "following_url": "https://api.github.com/users/ksw9/following{/other_user}",
      "gists_url": "https://api.github.com/users/ksw9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ksw9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ksw9/subscriptions",
      "organizations_url": "https://api.github.com/users/ksw9/orgs",
      "repos_url": "https://api.github.com/users/ksw9/repos",
      "events_url": "https://api.github.com/users/ksw9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ksw9/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T16:42:41Z",
    "updated_at": "2018-01-22T16:42:41Z",
    "author_association": "NONE",
    "body": "Great, thank you!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/360327655",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16363#issuecomment-360327655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16363",
    "id": 360327655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDMyNzY1NQ==",
    "user": {
      "login": "ksw9",
      "id": 7399551,
      "node_id": "MDQ6VXNlcjczOTk1NTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7399551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ksw9",
      "html_url": "https://github.com/ksw9",
      "followers_url": "https://api.github.com/users/ksw9/followers",
      "following_url": "https://api.github.com/users/ksw9/following{/other_user}",
      "gists_url": "https://api.github.com/users/ksw9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ksw9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ksw9/subscriptions",
      "organizations_url": "https://api.github.com/users/ksw9/orgs",
      "repos_url": "https://api.github.com/users/ksw9/repos",
      "events_url": "https://api.github.com/users/ksw9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ksw9/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T01:08:25Z",
    "updated_at": "2018-01-25T01:08:25Z",
    "author_association": "NONE",
    "body": "Would it be possible to update this thread if this has been fixed? Thanks again!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365677309",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16363#issuecomment-365677309",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16363",
    "id": 365677309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTY3NzMwOQ==",
    "user": {
      "login": "vmuriart",
      "id": 13303020,
      "node_id": "MDQ6VXNlcjEzMzAzMDIw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/13303020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vmuriart",
      "html_url": "https://github.com/vmuriart",
      "followers_url": "https://api.github.com/users/vmuriart/followers",
      "following_url": "https://api.github.com/users/vmuriart/following{/other_user}",
      "gists_url": "https://api.github.com/users/vmuriart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vmuriart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vmuriart/subscriptions",
      "organizations_url": "https://api.github.com/users/vmuriart/orgs",
      "repos_url": "https://api.github.com/users/vmuriart/repos",
      "events_url": "https://api.github.com/users/vmuriart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vmuriart/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T17:11:00Z",
    "updated_at": "2018-02-14T17:11:00Z",
    "author_association": "NONE",
    "body": "@james-nichols there might be a problem with your approach though. It seems doing your change would completely skip over [this section of code](https://github.com/pandas-dev/pandas/blob/d198a6efd5a3d2e7d5afb4a3cf556507c7501dd4/pandas/core/computation/expr.py#L369-L380) which would downcast the type of the unary term to `float32` and would result in a series of `dtype` of `float32`. With your changes the result would be of `dtype` of `float64`.\r\n\r\nWith the silly fix I suggested in #19697 (`self.value = operand.value`), the return type would be `float32` which seems what was intended, but the results are wrong (the negative is ignored)\r\n\r\nNeither though seems to solve #16833. Setting the `isscalar` to `False` would just push the error further down the line. Add `self.value = operand.value` pushes the code further along and it will instead error out with `TypeError: 'Series' objects are mutable, thus they cannot be hashed`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395930641",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16363#issuecomment-395930641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16363",
    "id": 395930641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTkzMDY0MQ==",
    "user": {
      "login": "alexcwatt",
      "id": 494201,
      "node_id": "MDQ6VXNlcjQ5NDIwMQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/494201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexcwatt",
      "html_url": "https://github.com/alexcwatt",
      "followers_url": "https://api.github.com/users/alexcwatt/followers",
      "following_url": "https://api.github.com/users/alexcwatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexcwatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexcwatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexcwatt/subscriptions",
      "organizations_url": "https://api.github.com/users/alexcwatt/orgs",
      "repos_url": "https://api.github.com/users/alexcwatt/repos",
      "events_url": "https://api.github.com/users/alexcwatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexcwatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-09T01:43:37Z",
    "updated_at": "2018-06-09T01:43:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I ran into this recently and would like to help with a patch. As best I can tell, the problem is that `_maybe_downcast_constants` not only tries to downcast constants but also `UnaryOp`'s, which isn't possible, since `UnaryOp` instances don't have a `value` attribute like constants/scalars do.\r\n\r\nI am new to the pandas code, and the expressions code is a bit tricky, but I think we could catch the `AttributeError` in `_maybe_downcast_constants` or explicitly check in each case that `left` or `right` has the attribute `value`.\r\n\r\nIn short, the problem is that an operation like `df.eval(x < -.1)` fails when `x` is a `np.float32` because the right side of the equation is seen as a `UnaryOp` node instead of as a `np.float32` and is subjected to `_maybe_downcast_constants` by `visit_BinOp`. OTOH, `df.eval(x < @y)` works when `y = -.1`, because pandas doesn't have to parse it. I think a small change might fix this, but I could be overlooking something bigger and would appreciate feedback."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/467251435",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16363#issuecomment-467251435",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16363",
    "id": 467251435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzI1MTQzNQ==",
    "user": {
      "login": "eyadsibai",
      "id": 935729,
      "node_id": "MDQ6VXNlcjkzNTcyOQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/935729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eyadsibai",
      "html_url": "https://github.com/eyadsibai",
      "followers_url": "https://api.github.com/users/eyadsibai/followers",
      "following_url": "https://api.github.com/users/eyadsibai/following{/other_user}",
      "gists_url": "https://api.github.com/users/eyadsibai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eyadsibai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eyadsibai/subscriptions",
      "organizations_url": "https://api.github.com/users/eyadsibai/orgs",
      "repos_url": "https://api.github.com/users/eyadsibai/repos",
      "events_url": "https://api.github.com/users/eyadsibai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eyadsibai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T01:13:56Z",
    "updated_at": "2019-02-26T01:13:56Z",
    "author_association": "NONE",
    "body": "I just wanted to mention that this issue still remains in 0.24.1. I just ran into it. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/467266327",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16363#issuecomment-467266327",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16363",
    "id": 467266327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzI2NjMyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T02:20:42Z",
    "updated_at": "2019-02-26T02:20:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "best way to fix is to submit a PR\r\n\r\nthere are 2800 other issues"
  }
]
