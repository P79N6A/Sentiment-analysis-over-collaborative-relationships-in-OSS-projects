[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305063343",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16520#issuecomment-305063343",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16520",
    "id": 305063343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTA2MzM0Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T02:20:30Z",
    "updated_at": "2017-05-31T02:20:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry for letting this sit unacknowledged for so long.\r\n\r\nI think having a familiar dataframe would be nice, but I don't think other docstrings should feel forced to use it (not that you're proposing that).\r\n\r\nAs for this specific one, it seems good. The construction might be a bit long, but that's not really a problem for me."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305124374",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16520#issuecomment-305124374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16520",
    "id": 305124374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTEyNDM3NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T08:39:04Z",
    "updated_at": "2017-05-31T08:39:17Z",
    "author_association": "MEMBER",
    "body": "@datapythonista Thanks for working on this!\r\n\r\nI agree it would be nice to use more similar dataframes throughout the examples. My main concern is that for many examples you don't need such a 'complex' dataframe (with all the different dtypes, also in this case it is eg not 'really' needed). And then it may also take attention away from the actual example / behaviour you want to show (IMO).\r\n\r\nAnyhow we will probably want not only 1 default example, but a few with different characteristics to have a suitable one for different cases. \r\nIt would also be good to mention this in https://github.com/pandas-dev/pandas/issues/15580 (a general issue about improving the docstrings)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/306005922",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16520#issuecomment-306005922",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16520",
    "id": 306005922,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjAwNTkyMg==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-03T22:46:06Z",
    "updated_at": "2017-06-03T22:46:06Z",
    "author_association": "MEMBER",
    "body": "Thanks a lot for the great feedback.\r\n\r\nI updated the PR, so the example dataframe is more simple.\r\n\r\nI think we can still have a familiar/consistent example dataframe, but show the minimum for the example to make sense. But this I mean that if it makes sense to have a boolean column, we can always use the same, but if it's not required, just keep a smaller dataframe with two or 3 columns.\r\n\r\nThere is just one thing I'd like to discuss, the imports. We said that we wanted the examples to be runnable, and I agree. And while obviously importing pandas each time is repetitive, I see a value of it:\r\n* The code is 100% runnable\r\n* The example can be executed as a doctest (even if we don't do it)\r\n* For people who is just starting, these imports are not as obvious as for us. It happened to me before, in a project where they ommited the imports for being obvious (I guess), but they weren't to me.\r\n\r\nI can imagine someone getting into pandas for the first time, trying to follow an example, and not knowing what's pd or np, or plt...\r\n\r\nIf that has been discussed, and you have a strong opinion about not having them, I'm happy to take them out. But my personal opinion is that they add more value, than the \"noise\" they add to the page.\r\n\r\nAttached screenshot of the doc rendered as html:\r\n\r\n![pandas_doc_v2](https://cloud.githubusercontent.com/assets/10058240/26757536/c390d02a-48b6-11e7-9aea-9523abf3ebd0.png)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315520116",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16520#issuecomment-315520116",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16520",
    "id": 315520116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTUyMDExNg==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-15T08:45:32Z",
    "updated_at": "2017-07-15T15:34:46Z",
    "author_association": "NONE",
    "body": "Hello @datapythonista! Thanks for updating the PR.\n\n - In the file [`pandas/core/generic.py`](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py), following are the PEP8 issues :\n\n> [Line 351:13](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L351): [E722](https://duckduckgo.com/?q=pep8%20E722) do not use bare except'\n> [Line 364:13](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L364): [E722](https://duckduckgo.com/?q=pep8%20E722) do not use bare except'\n> [Line 618:9](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L618): [E722](https://duckduckgo.com/?q=pep8%20E722) do not use bare except'\n> [Line 901:9](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L901): [E722](https://duckduckgo.com/?q=pep8%20E722) do not use bare except'\n> [Line 1795:17](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L1795): [E722](https://duckduckgo.com/?q=pep8%20E722) do not use bare except'\n> [Line 1904:13](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L1904): [E722](https://duckduckgo.com/?q=pep8%20E722) do not use bare except'\n> [Line 1912:13](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L1912): [E722](https://duckduckgo.com/?q=pep8%20E722) do not use bare except'\n> [Line 2673:13](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L2673): [E722](https://duckduckgo.com/?q=pep8%20E722) do not use bare except'\n> [Line 2882:13](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L2882): [E731](https://duckduckgo.com/?q=pep8%20E731) do not assign a lambda expression, use a def\n> [Line 3321:13](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L3321): [E731](https://duckduckgo.com/?q=pep8%20E731) do not assign a lambda expression, use a def\n> [Line 3336:9](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L3336): [E731](https://duckduckgo.com/?q=pep8%20E731) do not assign a lambda expression, use a def\n> [Line 3341:9](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L3341): [E731](https://duckduckgo.com/?q=pep8%20E731) do not assign a lambda expression, use a def\n> [Line 3346:9](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L3346): [E731](https://duckduckgo.com/?q=pep8%20E731) do not assign a lambda expression, use a def\n> [Line 3359:17](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L3359): [E722](https://duckduckgo.com/?q=pep8%20E722) do not use bare except'\n> [Line 5401:25](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L5401): [E722](https://duckduckgo.com/?q=pep8%20E722) do not use bare except'\n> [Line 5441:29](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L5441): [E722](https://duckduckgo.com/?q=pep8%20E722) do not use bare except'\n> [Line 6285:9](https://github.com/pandas-dev/pandas/blob/0343b90d5c6aea35826125021f516284b655bcb3/pandas/core/generic.py#L6285): [E731](https://duckduckgo.com/?q=pep8%20E731) do not assign a lambda expression, use a def\n\n\n\n##### Comment last updated on July 15, 2017 at 15:34 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315534069",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16520#issuecomment-315534069",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16520",
    "id": 315534069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTUzNDA2OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-15T13:30:25Z",
    "updated_at": "2017-07-15T13:30:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@datapythonista ignore the pep8 comments in the issue. once you rebase these will be gone."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315542214",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16520#issuecomment-315542214",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16520",
    "id": 315542214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU0MjIxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-15T15:38:26Z",
    "updated_at": "2017-07-15T15:38:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks!"
  }
]
