[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97883189",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-97883189",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 97883189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3ODgzMTg5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-30T17:07:45Z",
    "updated_at": "2015-04-30T17:07:45Z",
    "author_association": "MEMBER",
    "body": "Why not just write:\n\n```\npd_avg = (np.array(w) * pandas.DataFrame(a)).mean(axis=1)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98386585",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-98386585",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 98386585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4Mzg2NTg1",
    "user": {
      "login": "benjello",
      "id": 1175927,
      "node_id": "MDQ6VXNlcjExNzU5Mjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1175927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjello",
      "html_url": "https://github.com/benjello",
      "followers_url": "https://api.github.com/users/benjello/followers",
      "following_url": "https://api.github.com/users/benjello/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjello/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjello/subscriptions",
      "organizations_url": "https://api.github.com/users/benjello/orgs",
      "repos_url": "https://api.github.com/users/benjello/repos",
      "events_url": "https://api.github.com/users/benjello/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjello/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-02T19:03:52Z",
    "updated_at": "2015-05-02T19:03:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree with @bgrayburn, weighted statistics would be very useful in pandas. One can use statsmodel but extending DataFrame methods to use weight would be very useful for people using weighted survey data.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98416482",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-98416482",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 98416482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4NDE2NDgy",
    "user": {
      "login": "bgrayburn",
      "id": 3170676,
      "node_id": "MDQ6VXNlcjMxNzA2NzY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3170676?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bgrayburn",
      "html_url": "https://github.com/bgrayburn",
      "followers_url": "https://api.github.com/users/bgrayburn/followers",
      "following_url": "https://api.github.com/users/bgrayburn/following{/other_user}",
      "gists_url": "https://api.github.com/users/bgrayburn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bgrayburn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bgrayburn/subscriptions",
      "organizations_url": "https://api.github.com/users/bgrayburn/orgs",
      "repos_url": "https://api.github.com/users/bgrayburn/repos",
      "events_url": "https://api.github.com/users/bgrayburn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bgrayburn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-02T23:13:42Z",
    "updated_at": "2015-05-02T23:13:42Z",
    "author_association": "NONE",
    "body": "@Stephan : I agree your code snippet accomplishes (nearly) the same thing\nfrom a functional perspective, but from a code-readability standpoint, and\na code reuse standpoint, including a weights parameter seems optimal. Also\nnumpy's weight parameter automatically normalizes the weights vector which\nis also extremely useful.\n\nOn Sat, May 2, 2015 at 3:04 PM, Mahdi Ben Jelloul notifications@github.com\nwrote:\n\n> I agree with @bgrayburn https://github.com/bgrayburn, weighted\n> statistics would be very useful in pandas. One can use statsmodel but\n> extending DataFrame methods to use weight would be very useful for people\n> using weighted survey data.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/issues/10030#issuecomment-98386585.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98520315",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-98520315",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 98520315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4NTIwMzE1",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-03T18:37:43Z",
    "updated_at": "2015-05-03T18:37:43Z",
    "author_association": "MEMBER",
    "body": "Okay, fair enough. This seems within scope for pandas. We recently added a `sample` method which includes a similar `weights` argument (#9666) which might be useful as a starting point. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111736756",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-111736756",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 111736756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTczNjc1Ng==",
    "user": {
      "login": "benjello",
      "id": 1175927,
      "node_id": "MDQ6VXNlcjExNzU5Mjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1175927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjello",
      "html_url": "https://github.com/benjello",
      "followers_url": "https://api.github.com/users/benjello/followers",
      "following_url": "https://api.github.com/users/benjello/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjello/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjello/subscriptions",
      "organizations_url": "https://api.github.com/users/benjello/orgs",
      "repos_url": "https://api.github.com/users/benjello/repos",
      "events_url": "https://api.github.com/users/benjello/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjello/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T17:54:02Z",
    "updated_at": "2015-06-13T17:54:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer asked elsewhere (#10000) about a list of methods that could be enhanced by a 'weighted' version. \nAlmost all the statistical functions that can be found [here](http://pandas.pydata.org/pandas-docs/dev/api.html#computations-descriptive-stats) are candidates. I can also think of describe, value_counts, qcut, hist and margin computations in pivot tables.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111741607",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-111741607",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 111741607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTc0MTYwNw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T19:15:49Z",
    "updated_at": "2015-06-13T19:15:49Z",
    "author_association": "MEMBER",
    "body": "Again, I think we're open to most of these changes (all of which are backward compatible with `weights=None`). The main obstacle is that we need implementations, documentation and benchmarks to show we aren't slowing anything down. PRs would be welcome.although, It would also be worth checking if any of these could be pushed upstream to numpy. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/124710256",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-124710256",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 124710256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDcxMDI1Ng==",
    "user": {
      "login": "bgrayburn",
      "id": 3170676,
      "node_id": "MDQ6VXNlcjMxNzA2NzY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3170676?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bgrayburn",
      "html_url": "https://github.com/bgrayburn",
      "followers_url": "https://api.github.com/users/bgrayburn/followers",
      "following_url": "https://api.github.com/users/bgrayburn/following{/other_user}",
      "gists_url": "https://api.github.com/users/bgrayburn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bgrayburn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bgrayburn/subscriptions",
      "organizations_url": "https://api.github.com/users/bgrayburn/orgs",
      "repos_url": "https://api.github.com/users/bgrayburn/repos",
      "events_url": "https://api.github.com/users/bgrayburn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bgrayburn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-24T20:24:52Z",
    "updated_at": "2015-07-24T20:24:52Z",
    "author_association": "NONE",
    "body": "@shoyer @benjello sorry for the delay on this, still planning on submitting a PR, I'll be coding this weekend.\n\nin regards to the numpy thing, for weighted means they use .average which you can see [here](http://docs.scipy.org/doc/numpy/reference/generated/numpy.average.html). My plan was to implement\n\n```\npd_avg = (np.array(w) * pandas.DataFrame(a)).mean(axis=1)\n```\n\npretty much as written, by multiplying the input dataframe's columns by the weight vector. Alternatively we could call np.average when a weights parameter is present, OR (3rd option) we could implement a pandas.DataFrame(a).average(weights=[...]) to mirror pandas. \n\none last question, should weighting be applicable in either axis=0 or axis=1 mode? I'm assuming yes, but wanted to check.\n\nLet me know your preferences, or if somehow this should be incorporated with a larger change as mentioned above.\n\nBest\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/124711429",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-124711429",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 124711429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDcxMTQyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-24T20:28:28Z",
    "updated_at": "2015-07-24T20:28:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "why are you not just adding a weights keyword to .mean?\n\nmuch more consistent in the API and we don't implement average I suspect because it's just confusing \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/124711754",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-124711754",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 124711754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDcxMTc1NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-24T20:29:19Z",
    "updated_at": "2015-07-24T20:29:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "and this needs to trickle down to nanops.py where all of the actual computation is done - this handles many different dtypes\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/125925178",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-125925178",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 125925178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTkyNTE3OA==",
    "user": {
      "login": "benjello",
      "id": 1175927,
      "node_id": "MDQ6VXNlcjExNzU5Mjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1175927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjello",
      "html_url": "https://github.com/benjello",
      "followers_url": "https://api.github.com/users/benjello/followers",
      "following_url": "https://api.github.com/users/benjello/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjello/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjello/subscriptions",
      "organizations_url": "https://api.github.com/users/benjello/orgs",
      "repos_url": "https://api.github.com/users/benjello/repos",
      "events_url": "https://api.github.com/users/benjello/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjello/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-29T11:33:29Z",
    "updated_at": "2015-07-29T11:33:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bgrayburn : i think @jreback suggestion is worth following: using a mean with weights is what you re expecting for a weighted mean\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126098708",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-126098708",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 126098708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjA5ODcwOA==",
    "user": {
      "login": "mattayes",
      "id": 8622473,
      "node_id": "MDQ6VXNlcjg2MjI0NzM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8622473?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattayes",
      "html_url": "https://github.com/mattayes",
      "followers_url": "https://api.github.com/users/mattayes/followers",
      "following_url": "https://api.github.com/users/mattayes/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattayes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattayes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattayes/subscriptions",
      "organizations_url": "https://api.github.com/users/mattayes/orgs",
      "repos_url": "https://api.github.com/users/mattayes/repos",
      "events_url": "https://api.github.com/users/mattayes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattayes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-29T21:20:41Z",
    "updated_at": "2015-07-29T21:20:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 Would make working with microdata samples (think [PUMS](https://www.census.gov/programs-surveys/acs/technical-documentation/pums.html)) so much nicer.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126107893",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-126107893",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 126107893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjEwNzg5Mw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-29T21:54:51Z",
    "updated_at": "2015-07-29T21:54:51Z",
    "author_association": "MEMBER",
    "body": "I agree that it would be better to incorporate this directly into aggregation functions like `mean` and `var` instead of adding specialized methods like `average`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/189703954",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-189703954",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 189703954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTcwMzk1NA==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-27T19:13:38Z",
    "updated_at": "2016-02-27T19:13:38Z",
    "author_association": "NONE",
    "body": "+1 to @mattayes  & @shoyer -- when working with weighted data you pretty much want to weight EVERY statistic and graph that you generate.  It's pretty much a necessity to have some weighting option if you're working with such data.\n\nAdding a weights argument to as many functions as possible over time sounds like the way to go to the extent it isn't going to be handled in numpy/statsmodels/matplotlib.\n\nStata, for example, allows a weight option for practically all functions.  I use stata's tabstat with the weight option very frequently and at the moment there isn't any good analog in pandas that I know of.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/189969545",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-189969545",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 189969545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTk2OTU0NQ==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-28T23:42:22Z",
    "updated_at": "2016-02-28T23:42:50Z",
    "author_association": "NONE",
    "body": "A possible complication to consider:  there are potentially different kinds of weights.  Stata, for example, defines 4 types of weights:  frequency, analytical, probability, and importance (although the last one is just an abstract catchall).  [http://www.stata.com/help.cgi?weight]\n\nI'm thinking that in this thread most people are thinking of frequency weights, but it might be necessary to clarify this.  Also, it probably won't matter for something like mean or median, but could affect something like variance.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198127536",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-198127536",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 198127536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODEyNzUzNg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T23:21:29Z",
    "updated_at": "2016-03-17T23:21:29Z",
    "author_association": "MEMBER",
    "body": "There has been some recent discussion about implementing efficient algorithms for weighted partition (e.g., to do weighted median) upstream in NumPy, as well:\nhttps://mail.scipy.org/pipermail/numpy-discussion/2016-February/075000.html\n\nIn any case, a first draft that uses sorting to do weighted median would still be valuable.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218326728",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-218326728",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 218326728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODMyNjcyOA==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T00:00:24Z",
    "updated_at": "2016-05-11T00:00:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "From https://github.com/pydata/xarray/pull/650:\n\nHow about designing this as a `groupby`-like interface? In the same way as `.rolling` (or `.expanding` & `.ewm` in pandas)?\n\nSo for example `ds.weighted(weights=ds.dim).mean()`. \n\nAnd then this is extensible, clean, pandan-tic.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218349705",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-218349705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 218349705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODM0OTcwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T03:00:50Z",
    "updated_at": "2016-05-11T03:00:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "what other things would you do with a .weighted(..).mean() interface?\n\nIOW what other parameters would it accept aside from the actual weights?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218353590",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-218353590",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 218353590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODM1MzU5MA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T03:37:16Z",
    "updated_at": "2016-05-11T03:37:16Z",
    "author_association": "MEMBER",
    "body": "@jreback I think `.weighted()` would only accept `weights`, which could be either an array or a callable of the usual form (`lambda df: ....`). But the `WeightedMethods` class could also expose weighted implementations of other methods, such as std, var, median, sum, value_counts, hist, etc. I would even consider moving over `sample` and deprecating the `weights`  argument.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218443199",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-218443199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 218443199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODQ0MzE5OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T12:22:05Z",
    "updated_at": "2016-05-11T12:22:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer I can see some syntax from that e.g.\n\n`df.weighted('A').B.mean()` is pretty clear\n\nthough `df.B.mean(weights=df.A)` is just as clear, so looking for a case where this is significantly nicer. \n\nany idea how/does R do this? (julia?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218444916",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-218444916",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 218444916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODQ0NDkxNg==",
    "user": {
      "login": "benjello",
      "id": 1175927,
      "node_id": "MDQ6VXNlcjExNzU5Mjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1175927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjello",
      "html_url": "https://github.com/benjello",
      "followers_url": "https://api.github.com/users/benjello/followers",
      "following_url": "https://api.github.com/users/benjello/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjello/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjello/subscriptions",
      "organizations_url": "https://api.github.com/users/benjello/orgs",
      "repos_url": "https://api.github.com/users/benjello/repos",
      "events_url": "https://api.github.com/users/benjello/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjello/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T12:30:06Z",
    "updated_at": "2016-05-11T12:31:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I used R [wtd.stats](http://svitsrv25.epfl.ch/R-doc/library/Hmisc/html/wtd.stats.html).\n\n``` R\nwtd.mean(x, weights=NULL, normwt=\"ignored\", na.rm=TRUE)\nwtd.var(x, weights=NULL, normwt=FALSE, na.rm=TRUE)\nwtd.quantile(x, weights=NULL, probs=c(0, .25, .5, .75, 1), \n             type=c('quantile','(i-1)/(n-1)','i/(n+1)','i/n'), \n             normwt=FALSE, na.rm=TRUE)\nwtd.Ecdf(x, weights=NULL, \n         type=c('i/n','(i-1)/(n-1)','i/(n+1)'), \n         normwt=FALSE, na.rm=TRUE)\nwtd.table(x, weights=NULL, type=c('list','table'), \n          normwt=FALSE, na.rm=TRUE)\nwtd.rank(x, weights=NULL, normwt=FALSE, na.rm=TRUE)\nwtd.loess.noiter(x, y, weights=rep(1,n), robust=rep(1,n), \n                 span=2/3, degree=1, cell=.13333, \n                 type=c('all','ordered all','evaluate'), \n                 evaluation=100, na.rm=TRUE)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218447467",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-218447467",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 218447467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODQ0NzQ2Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T12:41:45Z",
    "updated_at": "2016-05-11T12:41:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@benjello hmm, that's interesting.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218515119",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-218515119",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 218515119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODUxNTExOQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T16:33:03Z",
    "updated_at": "2016-05-11T16:33:03Z",
    "author_association": "MEMBER",
    "body": "> though df.B.mean(weights=df.A) is just as clear, so looking for a case where this is significantly nicer.\n\nOn the face of it, this does look as nice. But from an API design perspective, adding a keyword argument for `weights` is much less elegant.\n\nBeing \"weighted\" is orthogonal to the type of statistical calculation. With this proposal, instead of adding the `weights` keyword argument to `N` different methods, we define a single `weighted` method, and add statistical methods to it that exactly match the signature of the same methods on DataFrame/Series. This makes it obvious that all these methods share the same approach, and keeps method signatures from growing additional arguments that trigger entirely independent code paths (which is a sign of code smell).\n\nSeparately: perhaps `weightby` is a slightly better name than `weighted`? It suggests more similarity to `groupby`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218515555",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-218515555",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 218515555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODUxNTU1NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T16:34:38Z",
    "updated_at": "2016-05-11T16:34:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah I think I could get behind `.weightby(...)`. This is not that difficult as most of the machinery already exists....... so if someone wants to to a prototype ...!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218528272",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-218528272",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 218528272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODUyODI3Mg==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T17:20:01Z",
    "updated_at": "2016-05-11T17:20:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Being \"weighted\" is orthogonal to the type of statistical calculation.\n\nCan you expand on that?  \n\nHow are we defining weights here?  Are negative weights accepted (I think the domain could depend on the function)?  Must weights be of the same length as the data points?  Does this API do any validation or is that deferred to the stats functions (if weights can be a `lambda`, I imagine it's the latter)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218531028",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-218531028",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 218531028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODUzMTAyOA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T17:29:50Z",
    "updated_at": "2016-05-11T17:29:50Z",
    "author_association": "MEMBER",
    "body": "> How are we defining weights here? Are negative weights accepted (I think the domain could depend on the function)? Must weights be of the same length as the data points?\n\nMy vision for the `weights` argument is quite similar to how it is currently defined on `DataFrame.sample`:\nhttp://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sample.html\n\nSo weights need to non-negative numbers that are alignable with the object being weighted. They do not need to be prenormalized, though perhaps there should be a keyword argument on `weightby` to indicate that that doesn't need to be checked (if it's actually a real performance concern). We also might add an `axis` argument, which allows you to select the axis over weights are applied. This would let weight columns in a DataFrame differently, for example.\n\n> Does this API do any validation or is that deferred to the stats functions (if weights can be a lambda, I imagine it's the latter)?\n\nIdeally we could share validation between different methods on `weightby`. I don't think it particularly matters whether you validate before or after calling the submethod on the `WeightByMethods` object.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218535538",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-218535538",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 218535538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODUzNTUzOA==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T17:45:49Z",
    "updated_at": "2016-05-11T17:45:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see.  That makes sense.  Places I have encountered negative 'weights' include the calculation of portfolio returns (which is a linear, but not necessarily convex, combination of individual security returns), but that kind of 'weights' is of course less density-like. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238324993",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-238324993",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 238324993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODMyNDk5Mw==",
    "user": {
      "login": "randomgambit",
      "id": 8282510,
      "node_id": "MDQ6VXNlcjgyODI1MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8282510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/randomgambit",
      "html_url": "https://github.com/randomgambit",
      "followers_url": "https://api.github.com/users/randomgambit/followers",
      "following_url": "https://api.github.com/users/randomgambit/following{/other_user}",
      "gists_url": "https://api.github.com/users/randomgambit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/randomgambit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/randomgambit/subscriptions",
      "organizations_url": "https://api.github.com/users/randomgambit/orgs",
      "repos_url": "https://api.github.com/users/randomgambit/repos",
      "events_url": "https://api.github.com/users/randomgambit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/randomgambit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-08T18:06:38Z",
    "updated_at": "2016-08-08T18:07:16Z",
    "author_association": "NONE",
    "body": "hi guys, \n\nI think its a great idea! However, when one tries to look more deeply, things are not as simple as expected. For instance, these are the kind of weights used in Stata\n\n```\n\n    1.  fweights, or frequency weights, are weights that indicate the number of duplicated observations.\n\n    2.  pweights, or sampling weights, are weights that denote the inverse of the probability that the\n        observation is included because of the sampling design.\n\n    3.  aweights, or analytic weights, are weights that are inversely proportional to the variance of an\n        observation; that is, the variance of the jth observation is assumed to be sigma^2/w_j, where w_j are\n        the weights.  Typically, the observations represent averages and the weights are the number of elements\n        that gave rise to the average.  For most Stata commands, the recorded scale of aweights is irrelevant;\n        Stata internally rescales them to sum to N, the number of observations in your data, when it uses them.\n\n    4.  iweights, or importance weights, are weights that indicate the \"importance\" of the observation in some\n        vague sense.  iweights have no formal statistical definition; any command that supports iweights will\n        define exactly how they are treated.  Usually, they are intended for use by programmers who want to\n        produce a certain computation.\n\n```\n\nlook also here more a more in-depth comparison http://www.ats.ucla.edu/stat/sas/faq/weights.htm\n\nThe bottom line is: it is really worth having a good discussion about the weights before including them. \n\nDo you want to be super flexible, and put the responsibility on the user? Or do you want to have just simple and plain non-negative weights (hence putting a strong limitation on what can be done?) \n\nIt all depends on how many keywords do want to add to the `pd.weight` function.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238332272",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-238332272",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 238332272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODMzMjI3Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-08T18:30:35Z",
    "updated_at": "2016-08-08T18:30:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@randomgambit well a much bigger issue is someone volunteering to implement this. Having the discussion is fine. But someone would need to step up.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238333259",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-238333259",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 238333259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODMzMzI1OQ==",
    "user": {
      "login": "bgrayburn",
      "id": 3170676,
      "node_id": "MDQ6VXNlcjMxNzA2NzY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3170676?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bgrayburn",
      "html_url": "https://github.com/bgrayburn",
      "followers_url": "https://api.github.com/users/bgrayburn/followers",
      "following_url": "https://api.github.com/users/bgrayburn/following{/other_user}",
      "gists_url": "https://api.github.com/users/bgrayburn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bgrayburn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bgrayburn/subscriptions",
      "organizations_url": "https://api.github.com/users/bgrayburn/orgs",
      "repos_url": "https://api.github.com/users/bgrayburn/repos",
      "events_url": "https://api.github.com/users/bgrayburn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bgrayburn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-08T18:33:49Z",
    "updated_at": "2016-12-29T12:24:24Z",
    "author_association": "NONE",
    "body": "@Jeff Reback, yeah sorry, I said I'd do this quite a while ago, but life's\r\ngotten the better of me. I'd still do it if I can find time, but anybody\r\nelse willing should definitely move this forward.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238333949",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10030#issuecomment-238333949",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10030",
    "id": 238333949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODMzMzk0OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-08T18:35:58Z",
    "updated_at": "2016-08-08T18:35:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bgrayburn haha, not picking on you :>\n"
  }
]
