[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18182140",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3417#issuecomment-18182140",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3417",
    "id": 18182140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTgyMTQw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-21T00:25:47Z",
    "updated_at": "2013-05-21T00:25:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suspect you are wanting something like this?\n\nas_index does not do anything in this case, btw\n\nto return an empty group in a user defined function, you should\nreturn a like-indexed Series/DataFrame (whatever the rest of your function returns)\nthis should be simpler....will think about say how to deal with returning `None`\n(its a bit non-trivial)\n\n```\ndef f2(x):\n           if x.a[:1] == 2:\n               mean = np.nan\n               std  = np.nan\n            else:\n                mean = x.b.mean()\n                std  = x.b.std()\n            return Series({ 'mean' : mean, 'std' : std })\n\n\nIn [2]: df = DataFrame({\n   ...:             'a' : [1,1,1,2,2,2,3,3,3],\n   ...:             'b' : [1,2,3,4,5,6,7,8,9],\n   ...:             })\n\n\nIn [4]: df.groupby('a', as_index=False).apply(f2)\nOut[4]: \n   mean  std\na           \n1     2    1\n2   NaN  NaN\n3     8    1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18741288",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3417#issuecomment-18741288",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3417",
    "id": 18741288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NzQxMjg4",
    "user": {
      "login": "floux",
      "id": 101264,
      "node_id": "MDQ6VXNlcjEwMTI2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/101264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/floux",
      "html_url": "https://github.com/floux",
      "followers_url": "https://api.github.com/users/floux/followers",
      "following_url": "https://api.github.com/users/floux/following{/other_user}",
      "gists_url": "https://api.github.com/users/floux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/floux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/floux/subscriptions",
      "organizations_url": "https://api.github.com/users/floux/orgs",
      "repos_url": "https://api.github.com/users/floux/repos",
      "events_url": "https://api.github.com/users/floux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/floux/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-31T12:11:50Z",
    "updated_at": "2013-05-31T12:11:50Z",
    "author_association": "NONE",
    "body": "Thanks for the clarification on how to return empty group results from a user-defined function.\n\nAs for the as_index option, I would classifiy this is a bug, as it is silently ignored in this case; moreover, if it's set to True, it returns the wrong index.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23234137",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3417#issuecomment-23234137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3417",
    "id": 23234137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjM0MTM3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-25T19:43:36Z",
    "updated_at": "2013-08-25T19:43:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the above behaviour won't completely fix your initial code as you are _creating_ an indexed DataFrame when you create f (so it uses the index from that), in the pr I was just putting together this returns:\n\n```\nIn [45]: grouped\nOut[45]: \n   mean  std\n0     2    1\n0     8    1\n```\n\nWhich to me seems like the expected behaviour (given the definition of f).\n\nJeff's solution is the way to do it.\n"
  }
]
