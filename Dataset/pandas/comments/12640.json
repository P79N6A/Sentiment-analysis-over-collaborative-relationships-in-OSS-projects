[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275881262",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12640#issuecomment-275881262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12640",
    "id": 275881262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTg4MTI2Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-28T23:07:26Z",
    "updated_at": "2017-01-28T23:07:26Z",
    "author_association": "MEMBER",
    "body": "From the above list, `pivot_table` is already a method, so I think that one can be removed.\r\n\r\nFurther, I don't think I find it necessary to deprecate those. Those are frequently used functions, so not sure it is worth deprecating them (which does not mean some of them would be valuable as a method as well)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282518851",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12640#issuecomment-282518851",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12640",
    "id": 282518851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUxODg1MQ==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-25T22:59:53Z",
    "updated_at": "2017-02-25T22:59:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback  I'm interested in taking a stab at this, but since I've never toyed with `pandas` before I wanted to first ask what your opinion is as to implementation?\r\n\r\nThe easiest way to port these to methods would be to simply thread a call to the globals from a method (akin to what is done in `Series.from_csv`/`Series.to_csv`). The advantage of this approach is that it's easy to do and avoids code refactoring. The disadvantage is that you would have to add a handful of additional dependencies (e.g. `from pandas.tools.tile import (cut, qcut)`) to `series.py` and `dataframe.py`, which I assume would slow down module initialization. Perhaps these imports could be made in the method body? Seems suboptimal...\r\n\r\nAs I see it, the best option would be to instead move the core of each of the method bodies into a `core` module (`common.py`?), then simplify the old global and new class methods into wrappers on those. This might allow object method implementations to use a (marginally?) faster code path, since less type-checking would be required. However, it would require a refactor."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282520937",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12640#issuecomment-282520937",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12640",
    "id": 282520937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUyMDkzNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-25T23:40:56Z",
    "updated_at": "2017-02-25T23:40:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ResidentMario conceptually this is *very* easy, (look at something like ``.unstack()``) or this:\r\n\r\n```\r\ndef melt(self, ....):\r\n    from pandas.core.reshape import melt\r\n    return melt(self, ....)\r\n```\r\n\r\nBUT I didn't put a doc-string. And you cannot import things directly at the top-level in ``core/frame.py``. It wouldn't slow down initialization much, the issue is dependencies (e.g. these modules import DataFrame, so they can't be imported directly.\r\n\r\nso here's a way to do this.\r\n\r\ncreate ``DataFrame.melt`` (like above), but use a ``_shared_docs`` doc-string (and define it *in* ``core/frame.py``). Then you can set the doc-string directly in ``pandas.core.reshape.melt`` directly.\r\n\r\nI think this is a nice pattern that will work."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282530945",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12640#issuecomment-282530945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12640",
    "id": 282530945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUzMDk0NQ==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T03:52:27Z",
    "updated_at": "2017-02-26T03:52:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, great, glad I asked!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282570634",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12640#issuecomment-282570634",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12640",
    "id": 282570634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU3MDYzNA==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T17:10:38Z",
    "updated_at": "2017-02-26T17:17:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Line no. 186 in `pivot.py` in the current source:\r\n\r\n    DataFrame.pivot_table = pivot_table\r\n\r\n`git blame pandas/tools/pivot.py -L 186` shows that this is a *very* old Wes McKinney commit from circa 2011. <s>Technically, this approach is correct, but it doesn't generate a reference in the docs. Do we want to refactor this into the new pattern?</s>\r\n\r\nEdit: [actually it does generate a doc entry](http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.pivot_table.html). Sphinx is more clever than I thought! So I think that `pd.pivot_table` can be marked \"done\" as-is."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282571694",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12640#issuecomment-282571694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12640",
    "id": 282571694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU3MTY5NA==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T17:26:40Z",
    "updated_at": "2017-02-26T17:26:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Technically speaking, if reusing the original docstring is OK, this pattern could be used for all of the other conversions as well, since the files they are defined in already import that `Series` and `DataFrame` names where needed.\r\n\r\nHowever I think that the old functions ought to get links to the new methods in their docstrings, and vice versa, and that the new methods ought to additionally get a `versionadded` docstring. To do that, Jeff's pattern is required.\r\n\r\nIn the case of `pivot_table`, the alias is already ancient. Nevertheless, refactoring it using Jeff's pattern is an arguable documentation improvement, since `DataFrame.pivot_table` would now link to `pd.pivot_table` in the docs (and vice versa).\r\n\r\n@jreback what do you think?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282576648",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12640#issuecomment-282576648",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12640",
    "id": 282576648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU3NjY0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T18:38:12Z",
    "updated_at": "2017-02-26T18:38:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ResidentMario yeah ok with having a standard way of doing this for doc-strings and such (so should fix ``pivot_table``).\r\n\r\nSo for *how* to do this, Ideally establish the pattern doing 1 or 2 methods, then in additional PR's can do the rest. IOW, can tweek to get the pattern that we want (and maybe make helpers / decorators to assist first).\r\n\r\nFYI, I have made a decorator https://github.com/pandas-dev/pandas/pull/15484/commits/e75eacb2f7d165fa4b2148c2c5cb051b0bff816c (see ``pandas.utils.decorator`` for doing something almost like this.\r\n\r\nI am going to split this off and push to master shortly. (the decorator)"
  }
]
