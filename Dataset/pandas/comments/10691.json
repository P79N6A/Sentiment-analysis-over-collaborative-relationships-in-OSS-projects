[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/125728901",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-125728901",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 125728901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTcyODkwMQ==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-28T19:28:06Z",
    "updated_at": "2015-07-28T19:28:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I also have a local change to the documentation that adds an example of using the new kwarg, but I'd like to verify first that people think the behavior implemented here is good.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/125757297",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-125757297",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 125757297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTc1NzI5Nw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-28T21:21:19Z",
    "updated_at": "2015-07-28T21:21:19Z",
    "author_association": "MEMBER",
    "body": "From an API perspective, it would be nice if `backward_limit` was treated the same way as `limit`. Also, maybe we want to deprecate the existing `limit` keyword argument in favor of the more explicit `forward_limit`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/125757832",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-125757832",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 125757832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTc1NzgzMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-28T21:24:06Z",
    "updated_at": "2015-07-28T21:24:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would rather see a `method='forward|backward'` (or for compat, `ffill|bfill`) to be like `.fillna`. Then this becomes unambiguous.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/125762453",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-125762453",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 125762453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTc2MjQ1Mw==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-28T21:42:56Z",
    "updated_at": "2015-07-28T21:42:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the feedback!\n\n@jreback if there's a forward/backward flag (or ffill/bfill), then the interpolation can only fill in one direction at a time? So I would have to do two interpolations to fill values around non-NaNs? (This is currently the case for fillna as well, just confirming that's what you have in mind.)\n\nIt would be nice if I could fill \"forward\", \"backward\", or \"around\" with just one call, since I can currently use your suggestion from #9218 and just reverse the sequence and interpolate (or fill) if I'm going to interpolate twice anyway.\n\n@shoyer I agree that it would be nice to respect passing the \"backward_limit\" kwarg only ... this was just my first attempt to put some code in place. It seems like we ought to work out this forward/backward/around issue before getting too detailed on the backward_limit.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/125762864",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-125762864",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 125762864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTc2Mjg2NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-28T21:45:16Z",
    "updated_at": "2015-07-28T21:45:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "`around` would be ok too. I just want to limit the api differences with other routines.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/125764995",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-125764995",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 125764995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTc2NDk5NQ==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-28T21:56:37Z",
    "updated_at": "2015-07-28T21:56:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, totally agree, api consistency is a good thing!\n\nI like the idea of adding `method=forward|backward|around` and then just using `limit` in whatever is the indicated direction. But `method` is already used by `interpolate` to indicate which type of interpolation to use (`linear`, `quadratic` etc.)\n\nWhat if `limit` accepted an int or a pair of ints? If it's an int it would just apply like it currently does, if a list/tuple it would contain (backward, forward) limits? Perhaps too different from existing api conventions?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/125969117",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-125969117",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 125969117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTk2OTExNw==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-29T14:25:51Z",
    "updated_at": "2015-07-29T14:25:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry for the noise, I got my branch in a weird state and did a hard reset.\n\nI changed the code so that limit accepts either an int (preserves current behavior) or a tuple of (backward, forward) ints.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126447399",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-126447399",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 126447399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQ0NzM5OQ==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-30T19:28:46Z",
    "updated_at": "2015-07-30T19:28:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any comments on this version of the change?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126508900",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-126508900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 126508900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjUwODkwMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-30T22:23:52Z",
    "updated_at": "2015-07-30T22:23:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer what you do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126510122",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-126510122",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 126510122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjUxMDEyMg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-30T22:32:30Z",
    "updated_at": "2015-07-30T22:32:30Z",
    "author_association": "MEMBER",
    "body": "To me, `limit` does not seem like something that should be inherently directional. So if we were starting over from scratch, I would make it apply in both directions.\n\nThat said, we are here where we are today, and we do want to make some effort to preserve backwards compatibility.\n\nI'm not a really big fan of using tuples instead of another keyword argument. It seems a little awkward and not so Pythonic. I'm also not sure if there are legitimate use cases for limiting the interpolation only in one direction (maybe?).\n\nIf we don't care about asymmetrical limits, we could add a new keyword argument `symmetric_limit`. For now, the default would be `False`, but would also issue a deprecation warning. In some future version of pandas, we switch the default to `True`. Then, we eventually remove it entirely.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126527187",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-126527187",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 126527187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjUyNzE4Nw==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-31T00:14:40Z",
    "updated_at": "2015-07-31T00:14:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer I get what you're saying about using a tuple, it's a bit odd considering the way the rest of the pandas api works (at least what I've seen of it).\n\nIf we want to add a new kwarg, it could be something categorical like `limit_direction='forward'|'backward'|'both'`?\n\nI'd also be fine with your `symmetric_limit` idea, too.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126958379",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-126958379",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 126958379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjk1ODM3OQ==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-01T22:23:09Z",
    "updated_at": "2015-08-01T22:23:09Z",
    "author_association": "NONE",
    "body": "\"If we want to add a new kwarg, it could be something categorical like `limit_direction='forward'|'backward'|'both'?`\"\n\nThis seems like a very good way to me.  You can preserve backwards compatibility by setting the default to \"forward\" which also makes it obvious to a new user in the documentation why interpolate is only extrapolating in one direction (and how to change that).\n\nIt's also consistent with `fillna` behavior aside from the necessary use of a keyword other than 'method'.\n\nFWIW, I think allowing asymmetric behavior is really important overall for this command.  I don't think having different limits is all that important though.  That is, a user will often want to interpolate forwards or backwards (but not both).  In cases where the user wants to go in both directions I'd expect a symmetric limit is fine.  I.e. I think it would be fairly uncommon to want to set a limit of, say, 2 in one direction and 5 in the other.  And on those rare occasions, I think just running 2 separate interpolations is not that onerous.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/127036592",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-127036592",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 127036592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzAzNjU5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-02T15:30:30Z",
    "updated_at": "2015-08-02T15:30:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would be +1 on adding `limit_direction`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/127052412",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-127052412",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 127052412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzA1MjQxMg==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-02T18:30:16Z",
    "updated_at": "2015-08-02T18:30:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've updated the change in my local branch to add a `limit_direction` keyword argument. It defaults to `'forward'` which preserves the existing behavior. If it's set to `'backward'` the limit applies in a backward direction, and if it's set to some other value the `limit` applies in both directions. (I use `'both'` in the test and the docs.)\n\nThe change does not change the current behavior at all when `limit` is falsey. So in particular if you want to fill all the values at the beginning of a series (e.g. #10420) you need to provide a nonzero `limit` and also `limit_direction='backward'` or `limit_direction='both'`. This matches the current default behavior and to me seems like an ok thing to ask of people who really want to fill in all the `NaN` values in their series.\n\nI'm not such a big fan of `extrapolate` since in my brain extrapolation only refers to the extreme beginning or end of a series, i.e., when there's not another valid data point to aim for.\n\nI thought a bit about a `'none'` or something like that, but then why would you even call `interpolate` in the first place?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/127057900",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-127057900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 127057900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzA1NzkwMA==",
    "user": {
      "login": "johne13",
      "id": 8753876,
      "node_id": "MDQ6VXNlcjg3NTM4NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8753876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johne13",
      "html_url": "https://github.com/johne13",
      "followers_url": "https://api.github.com/users/johne13/followers",
      "following_url": "https://api.github.com/users/johne13/following{/other_user}",
      "gists_url": "https://api.github.com/users/johne13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johne13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johne13/subscriptions",
      "organizations_url": "https://api.github.com/users/johne13/orgs",
      "repos_url": "https://api.github.com/users/johne13/repos",
      "events_url": "https://api.github.com/users/johne13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johne13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-02T19:22:13Z",
    "updated_at": "2015-08-02T19:23:41Z",
    "author_association": "NONE",
    "body": "@lmjohns3   Sorry about the `extrapolation` comment, I have since deleted it after I realized the `limit` arg is applied to both interpolations and extrapolations, so it didn't really make any sense.\n\nRegarding extrapolation, I think things are still a little strange in this sense.  If you do the simplest version `df.interpolate()` you really just get an interpolation followed by `ffill()`.  But if you do `df.interpolate(method='spline',order=1)` you'll get a true extrapolation.  (see below)\n\nBut I don't mean to further complicate the current issue.  One step at a time and I think this is a very good change you are making.\n\n```\ndf=pd.DataFrame( [ 0, np.nan, 2, np.nan] )\n\ndf.interpolate()\nOut[890]: \n   0\n0  0\n1  1\n2  2\n3  2\n\ndf.interpolate(method='spline',order=1)\nOut[891]: \n   0\n0  0\n1  1\n2  2\n3  3\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/127059071",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-127059071",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 127059071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzA1OTA3MQ==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-02T19:26:18Z",
    "updated_at": "2015-08-02T19:26:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@johne13 This is a good point you bring up, and might require a bit more thought/testing (but I'm not sure!). It looks like interpolate() actually is a sort of wrapper for several different interpolation methods. The change as it currently stands only applies to the variant where `method` is specified. I'm not sure how much that limits the change, or if that would be confusing to people.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/127061062",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-127061062",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 127061062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzA2MTA2Mg==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-02T19:44:39Z",
    "updated_at": "2015-08-02T19:44:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just checked further and the code is a bit wacky, but it looks like this change should be ok.\n\nThere are basically two branches inside the `Block.interpolate` method in `internals.py`. If `method` is one of ffill, bfill, pad, backfill, or nearest, then interpolate basically does the same thing as fillna (i.e., it doesn't actually do an interpolation in the function-fitting sense). But if `method` is one of the scipy interpolate methods, then it does a function-fitting interpolation.\n\nThere's also a `CategoricalBlock.interpolate` method, and a `SparseBlock.interpolate` method. Both of these appear only to fill, not to interpolate.\n\nThe interpolate methods are called from a number of different places, but the main one I'm after is `NDFrame.interpolate` in `generic.py` (both `Series` and `DataFrame` are subclasses). The default `method` here is `'linear'` so it seems like this change should cover the right cases.\n\nIf anyone is more familiar with the API and this raises any red flags let me know!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/128735272",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-128735272",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 128735272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyODczNTI3Mg==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-07T15:28:39Z",
    "updated_at": "2015-08-07T15:28:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any further comments on this PR?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/129521796",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-129521796",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 129521796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTUyMTc5Ng==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-10T16:40:29Z",
    "updated_at": "2015-08-10T16:40:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the comments!\n\nI've addressed the test issues, and I've tried to update the docs in the way that I think you were describing.\n\nI made a new \"interpolation limits\" section in the \"missing_data.rst\" file, but I'm unsure if it's kosher -- I used ^^^^^ for the headline level, but there are no other headlines in any of the other docs that use that level. Maybe I should just make the section header bold?\n\nLikewise in the whatsnew file I added a small example, but if anything about the formatting etc. looks weird to you let me know.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131195180",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-131195180",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 131195180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTE5NTE4MA==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T17:57:45Z",
    "updated_at": "2015-08-14T17:57:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any further comments on this? And suggestions for the ^^^^ header level?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131205427",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-131205427",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 131205427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTIwNTQyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T18:38:05Z",
    "updated_at": "2015-08-14T18:38:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger can you have a look\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131205759",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-131205759",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 131205759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTIwNTc1OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T18:39:51Z",
    "updated_at": "2015-08-14T18:39:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@lmjohns3 need to update the doc-string for `.interpolate` (in core/generic.py)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131236982",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-131236982",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 131236982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTIzNjk4Mg==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T20:55:35Z",
    "updated_at": "2015-08-14T20:55:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just added the `ser.interpolate(limit=1)` example in the doc, and updated the interpolate docstring.\n\n(Also: So far I've been committing all these incremental changes as fixups to the original commit, so that there will be just one commit with this change after merging. Let me know if it's better to keep them as individual commits in my fork for some reason.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131238650",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-131238650",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 131238650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTIzODY1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T21:03:10Z",
    "updated_at": "2015-08-14T21:03:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@lmjohns3 this is what I do, others just add everything in their own commit.\n\nIts sort of up to you when deving. Eventually I'll have you squash if you didn't, so this is sort of a continuous squash.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131238771",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-131238771",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 131238771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTIzODc3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T21:03:55Z",
    "updated_at": "2015-08-14T21:03:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "lgtm.\n\n@jorisvandenbossche \n@shoyer \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132171069",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-132171069",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 132171069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjE3MTA2OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T10:54:20Z",
    "updated_at": "2015-08-18T10:54:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@lmjohns3 need validation on the `limit_direction` that it can only be `forward|backward|both` (and tests for same).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132303159",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-132303159",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 132303159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjMwMzE1OQ==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T18:11:28Z",
    "updated_at": "2015-08-18T18:11:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, I've made a number of updates to the patch that address the comments above.\n- limit_direction is limited to 'forward', 'backward', 'both', or 'symmetric' ('both' and 'symmetric' do the same thing), but can be passed in any combination of uppercase/lowercase. raises ValueError if not one of these values\n- tests for case/validity of limit_direction kwarg, filling values backward to beginning of series, and different limit_direction cases\n\nIn dealing with the case of filling a series backward to the beginning, I had to muck around with the interpolate_1d function a good bit more than before. This makes the diff quite ugly ... I'd be happier with it if I could check in a separate PR first that does the code-rearranging part of things. Any opinions on how to do that? Or is everyone comfortable with an ugly change that is nonetheless pretty well tested?\n\nThanks for everyone's feedback on this by the way!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132303958",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-132303958",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 132303958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjMwMzk1OA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T18:12:52Z",
    "updated_at": "2015-08-18T18:12:52Z",
    "author_association": "MEMBER",
    "body": "Redundant \"both\" and \"symmetric\" arguments seems like a bad idea. I would\npick one and stick to it (probably \"both\").\n\nOn Tue, Aug 18, 2015 at 11:11 AM, Leif Johnson notifications@github.com\nwrote:\n\n> OK, I've made a number of updates to the patch that address the comments\n> above.\n> - limit_direction is limited to 'forward', 'backward', 'both', or\n>   'symmetric' ('both' and 'symmetric' do the same thing), but can be passed\n>   in any combination of uppercase/lowercase. raises ValueError if not one of\n>   these values\n> - tests for case/validity of limit_direction kwarg, filling values\n>   backward to beginning of series, and different limit_direction cases\n> \n> In dealing with the case of filling a series backward to the beginning, I\n> had to muck around with the interpolate_1d function a good bit more than\n> before. This makes the diff quite ugly ... I'd be happier with it if I\n> could check in a separate PR first that does the code-rearranging part of\n> things. Any opinions on how to do that? Or is everyone comfortable with an\n> ugly change that is nonetheless pretty well tested?\n> \n> Thanks for everyone's feedback on this by the way!\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/pull/10691#issuecomment-132303159.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132305522",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-132305522",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 132305522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjMwNTUyMg==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T18:16:28Z",
    "updated_at": "2015-08-18T18:16:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Done -- it's just 'both' now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132306639",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10691#issuecomment-132306639",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10691",
    "id": 132306639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjMwNjYzOQ==",
    "user": {
      "login": "lmjohns3",
      "id": 53048,
      "node_id": "MDQ6VXNlcjUzMDQ4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/53048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmjohns3",
      "html_url": "https://github.com/lmjohns3",
      "followers_url": "https://api.github.com/users/lmjohns3/followers",
      "following_url": "https://api.github.com/users/lmjohns3/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmjohns3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmjohns3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmjohns3/subscriptions",
      "organizations_url": "https://api.github.com/users/lmjohns3/orgs",
      "repos_url": "https://api.github.com/users/lmjohns3/repos",
      "events_url": "https://api.github.com/users/lmjohns3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmjohns3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T18:20:21Z",
    "updated_at": "2015-08-18T18:20:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was also a bit surprised by this change, because it turns out that both `numpy.interp` and `scipy.interp1d` resort to \"filling\" behavior for extrapolations -- they just fill the extrapolated index values with the closest observed value.\n\nTo get a true extrapolation you'd have to use something like this:\n\n```\nser.interpolate(method='spline', order=1, limit=10000, limit_direction='both')\n```\n\nBut at least it's possible now!\n"
  }
]
