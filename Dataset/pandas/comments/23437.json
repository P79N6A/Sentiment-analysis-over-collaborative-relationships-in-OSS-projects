[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/434897542",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23437#issuecomment-434897542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23437",
    "id": 434897542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDg5NzU0Mg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-01T01:06:41Z",
    "updated_at": "2018-11-01T01:06:41Z",
    "author_association": "MEMBER",
    "body": "Reminds me a little of #549."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437600698",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23437#issuecomment-437600698",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23437",
    "id": 437600698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzYwMDY5OA==",
    "user": {
      "login": "nmusolino",
      "id": 3150861,
      "node_id": "MDQ6VXNlcjMxNTA4NjE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3150861?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nmusolino",
      "html_url": "https://github.com/nmusolino",
      "followers_url": "https://api.github.com/users/nmusolino/followers",
      "following_url": "https://api.github.com/users/nmusolino/following{/other_user}",
      "gists_url": "https://api.github.com/users/nmusolino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nmusolino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nmusolino/subscriptions",
      "organizations_url": "https://api.github.com/users/nmusolino/orgs",
      "repos_url": "https://api.github.com/users/nmusolino/repos",
      "events_url": "https://api.github.com/users/nmusolino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nmusolino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-10T17:26:52Z",
    "updated_at": "2018-11-10T17:26:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have needed something just like this for DataFrames as well.\r\n\r\nNote that Index, Series, and DataFrame already have a Boolean `.empty` attribute indicating whether the object is empty.\r\n\r\nWhat about a function `pandas.empty_like()`, or `pandas.empty()`, or `pandas.emptied()` ?  Note that “empty_like” is already used by numpy for something pretty different: the [`numpy.empty_like`](\r\nhttps://docs.scipy.org/doc/numpy-1.15.1/reference/generated/numpy.empty_like.htm) function returns an array of the same shape, with uninitialized data. \r\n"
  }
]
