[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149630875",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-149630875",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 149630875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTYzMDg3NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T16:51:55Z",
    "updated_at": "2015-10-20T16:55:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "never embed DataFrames within a Series!\n\ninstead you _could_ simply return a multi-indexed frame, e.g. the first level are the original indexes of the Series, the 2nd level are the number of matches the columns as you have them\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149632234",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-149632234",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 149632234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTYzMjIzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T16:57:13Z",
    "updated_at": "2015-10-20T16:58:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [13]: DataFrame({'user' : ['dave','rob','steve',np.nan],\n                              'domain' : ['google.com','gmail.com','gmail.com',np.nan]},\n                              index=pd.MultiIndex.from_tuples([('Dave',0),('multiple',0),('multiple',1),('none',0)]))\nOut[13]: \n                domain   user\nDave     0  google.com   dave\nmultiple 0   gmail.com    rob\n         1   gmail.com  steve\nnone     0         NaN    NaN\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149632817",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-149632817",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 149632817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTYzMjgxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T16:59:35Z",
    "updated_at": "2015-10-20T16:59:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tdhock further you would prob add a parameter on how to handle partial matches (e.g. the `some` and `text` fields), e.g. would you be greedy then nan-fill or skip unless all filled (e.g. what you are doing now)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149906882",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-149906882",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 149906882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTkwNjg4Mg==",
    "user": {
      "login": "tdhock",
      "id": 932850,
      "node_id": "MDQ6VXNlcjkzMjg1MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/932850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdhock",
      "html_url": "https://github.com/tdhock",
      "followers_url": "https://api.github.com/users/tdhock/followers",
      "following_url": "https://api.github.com/users/tdhock/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdhock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdhock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdhock/subscriptions",
      "organizations_url": "https://api.github.com/users/tdhock/orgs",
      "repos_url": "https://api.github.com/users/tdhock/repos",
      "events_url": "https://api.github.com/users/tdhock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdhock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-21T14:06:49Z",
    "updated_at": "2015-10-21T14:06:49Z",
    "author_association": "NONE",
    "body": "Thanks for the suggestions @jreback. Now extractall returns a DataFrame with a MultiIndex:\n\n``` python\n>>> import re\n>>> import pandas as pd\n>>> import numpy as np\n>>> data_dict = {\n...     'single': {\n...         \"Dave\":'dave@google.com',\n...         \"Toby\":'tdhock5@gmail.com',\n...         \"Maude\":'maudelaperriere@gmail.com',\n...         },\n...     'multiple': {\n...         \"robAndSteve\": 'rob@gmail.com some text steve@gmail.com',\n...         \"abcdef\": 'a@b.com some text c@d.com and e@f.com',\n...         },\n...     'none': {\n...         \"missing\":np.nan,\n...         \"empty\":\"\",\n...         },\n...     }\n>>> tuple_list = []\n>>> subject_list = []\n>>> for k1, d in data_dict.iteritems():\n...     for k2, subject in d.iteritems():\n...         k = (k1, k2)\n...         tuple_list.append(k)\n...         subject_list.append(subject)\n... \n>>> index = pd.MultiIndex.from_tuples(tuple_list, names=(\"matches\", \"subject\"))\n>>> Si = pd.Series(subject_list, index)\n>>> named_pattern = r'''\n... (?P<user>[a-z0-9]+)\n... @\n... (?P<domain>[a-z]+)\n... \\.\n... (?P<tld>[a-z]{2,4})\n... '''\n>>> iresult = Si.str.extractall(named_pattern, re.VERBOSE)\n>>> iresult\n                                 user  domain  tld\nmatches  subject                                  \nsingle   Dave                    dave  google  com\n         Maude        maudelaperriere   gmail  com\n         Toby                 tdhock5   gmail  com\nmultiple robAndSteve              rob   gmail  com\n         robAndSteve            steve   gmail  com\n         abcdef                     a       b  com\n         abcdef                     c       d  com\n         abcdef                     e       f  com\n>>> S = pd.Series(subject_list)\n>>> result = S.str.extractall(named_pattern, re.VERBOSE)\n>>> result\n              user  domain  tld\n0             dave  google  com\n1  maudelaperriere   gmail  com\n2          tdhock5   gmail  com\n3              rob   gmail  com\n3            steve   gmail  com\n4                a       b  com\n4                c       d  com\n4                e       f  com\n>>>\n```\n\nSo then we can access all the matches for the subject string with rob and steve via:\n\n``` python\n>>> iresult.loc[\"multiple\", \"robAndSteve\"]\n                       user domain  tld\nmatches  subject                       \nmultiple robAndSteve    rob  gmail  com\n         robAndSteve  steve  gmail  com\n>>> result.loc[3]\n    user domain  tld\n3    rob  gmail  com\n3  steve  gmail  com\n```\n\nFor subjects that have 0 matches I think it would be more consistent and user-friendly if the following would return a DataFrame with 0 rows rather than an exception. Is that possible using some index options?\n\n``` python\n>>> result.loc[5]\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"pandas/core/indexing.py\", line 1198, in __getitem__\n    return self._getitem_axis(key, axis=0)\n  File \"pandas/core/indexing.py\", line 1342, in _getitem_axis\n    self._has_valid_type(key, axis)\n  File \"pandas/core/indexing.py\", line 1304, in _has_valid_type\n    error()\n  File \"pandas/core/indexing.py\", line 1291, in error\n    (key, self.obj._get_axis_name(axis)))\nKeyError: 'the label [5] is not in the [index]'\n>>> iresult.loc[\"none\", \"empty\"]\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"pandas/core/indexing.py\", line 1196, in __getitem__\n    return self._getitem_tuple(key)\n  File \"pandas/core/indexing.py\", line 709, in _getitem_tuple\n    return self._getitem_lowerdim(tup)\n  File \"pandas/core/indexing.py\", line 822, in _getitem_lowerdim\n    result = self._handle_lowerdim_multi_index_axis0(tup)\n  File \"pandas/core/indexing.py\", line 804, in _handle_lowerdim_multi_index_axis0\n    raise e1\nKeyError: 'none'\n>>> \n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/152852077",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-152852077",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 152852077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjg1MjA3Nw==",
    "user": {
      "login": "tdhock",
      "id": 932850,
      "node_id": "MDQ6VXNlcjkzMjg1MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/932850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdhock",
      "html_url": "https://github.com/tdhock",
      "followers_url": "https://api.github.com/users/tdhock/followers",
      "following_url": "https://api.github.com/users/tdhock/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdhock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdhock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdhock/subscriptions",
      "organizations_url": "https://api.github.com/users/tdhock/orgs",
      "repos_url": "https://api.github.com/users/tdhock/repos",
      "events_url": "https://api.github.com/users/tdhock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdhock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-01T18:59:53Z",
    "updated_at": "2015-11-01T18:59:53Z",
    "author_association": "NONE",
    "body": "I further propose the `extractiter` method which returns an iterator over DataFrames, one for each subject: one row for each match, one column for each group:\n\n``` python\n>>> for df in Si.str.extractiter(named_pattern, re.VERBOSE):\n...   print df\n... \n   user  domain  tld\n0  dave  google  com\n              user domain  tld\n0  maudelaperriere  gmail  com\n      user domain  tld\n0  tdhock5  gmail  com\n    user domain  tld\n0    rob  gmail  com\n1  steve  gmail  com\n  user domain  tld\n0    a      b  com\n1    c      d  com\n2    e      f  com\nEmpty DataFrame\nColumns: [user, domain, tld]\nIndex: []\nEmpty DataFrame\nColumns: [user, domain, tld]\nIndex: []\n>>> for df in Si.str.extractiter(named_pattern, re.VERBOSE):\n...   print df[\"domain\"]\n... \n0    google\nName: domain, dtype: object\n0    gmail\nName: domain, dtype: object\n0    gmail\nName: domain, dtype: object\n0    gmail\n1    gmail\nName: domain, dtype: object\n0    b\n1    d\n2    f\nName: domain, dtype: object\nSeries([], Name: domain, dtype: object)\nSeries([], Name: domain, dtype: object)\n>>> \n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/152861284",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-152861284",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 152861284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjg2MTI4NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-01T20:32:41Z",
    "updated_at": "2015-11-01T20:32:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tdhock let's just keep it straightforward for now\nwe don't support iterators like this so it would be a big API change\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/152874488",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-152874488",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 152874488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjg3NDQ4OA==",
    "user": {
      "login": "tdhock",
      "id": 932850,
      "node_id": "MDQ6VXNlcjkzMjg1MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/932850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdhock",
      "html_url": "https://github.com/tdhock",
      "followers_url": "https://api.github.com/users/tdhock/followers",
      "following_url": "https://api.github.com/users/tdhock/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdhock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdhock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdhock/subscriptions",
      "organizations_url": "https://api.github.com/users/tdhock/orgs",
      "repos_url": "https://api.github.com/users/tdhock/repos",
      "events_url": "https://api.github.com/users/tdhock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdhock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-01T23:17:49Z",
    "updated_at": "2015-11-01T23:17:49Z",
    "author_association": "NONE",
    "body": "OK, in that case I deleted extractiter, and added some more tests and examples for extractall.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159645103",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-159645103",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 159645103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTY0NTEwMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-25T15:43:37Z",
    "updated_at": "2015-11-25T15:43:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you rebase / squash and i'll take a look\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159661856",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-159661856",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 159661856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTY2MTg1Ng==",
    "user": {
      "login": "tdhock",
      "id": 932850,
      "node_id": "MDQ6VXNlcjkzMjg1MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/932850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdhock",
      "html_url": "https://github.com/tdhock",
      "followers_url": "https://api.github.com/users/tdhock/followers",
      "following_url": "https://api.github.com/users/tdhock/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdhock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdhock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdhock/subscriptions",
      "organizations_url": "https://api.github.com/users/tdhock/orgs",
      "repos_url": "https://api.github.com/users/tdhock/repos",
      "events_url": "https://api.github.com/users/tdhock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdhock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-25T16:24:09Z",
    "updated_at": "2015-11-25T16:24:09Z",
    "author_association": "NONE",
    "body": "OK @jreback this is my first time doing a rebase / squash. Did I do it correctly?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159662170",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-159662170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 159662170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTY2MjE3MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-25T16:25:26Z",
    "updated_at": "2015-11-25T16:25:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes that looks right\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159662595",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-159662595",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 159662595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTY2MjU5NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-25T16:27:00Z",
    "updated_at": "2015-11-25T16:27:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "- add to `api.rst`\n- add a note in `v0.18.0.txt` (use this PR number as the issue number), in Enhancement\n- update `text.rst`\n- update test in `test_categorical` if needed (this implements `.str` as well)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159933249",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-159933249",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 159933249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTkzMzI0OQ==",
    "user": {
      "login": "tdhock",
      "id": 932850,
      "node_id": "MDQ6VXNlcjkzMjg1MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/932850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdhock",
      "html_url": "https://github.com/tdhock",
      "followers_url": "https://api.github.com/users/tdhock/followers",
      "following_url": "https://api.github.com/users/tdhock/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdhock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdhock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdhock/subscriptions",
      "organizations_url": "https://api.github.com/users/tdhock/orgs",
      "repos_url": "https://api.github.com/users/tdhock/repos",
      "events_url": "https://api.github.com/users/tdhock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdhock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-26T14:59:30Z",
    "updated_at": "2015-11-26T14:59:30Z",
    "author_association": "NONE",
    "body": "TODO update docstrings\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159966794",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-159966794",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 159966794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTk2Njc5NA==",
    "user": {
      "login": "tdhock",
      "id": 932850,
      "node_id": "MDQ6VXNlcjkzMjg1MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/932850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdhock",
      "html_url": "https://github.com/tdhock",
      "followers_url": "https://api.github.com/users/tdhock/followers",
      "following_url": "https://api.github.com/users/tdhock/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdhock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdhock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdhock/subscriptions",
      "organizations_url": "https://api.github.com/users/tdhock/orgs",
      "repos_url": "https://api.github.com/users/tdhock/repos",
      "events_url": "https://api.github.com/users/tdhock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdhock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-26T17:42:18Z",
    "updated_at": "2015-11-26T18:30:16Z",
    "author_association": "NONE",
    "body": "TODOs\n- [x] double check api.rst\n- [x] add a note in v0.18.0.txt (use this PR number as the issue number), in Enhancement\n- [x] double check text.rst\n- [x] add extractall tests to test_categorical? (this implements .str as well) Is this needed? There are no tests for extract in test_categorical.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159969637",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-159969637",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 159969637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTk2OTYzNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-26T17:56:58Z",
    "updated_at": "2015-11-26T17:56:58Z",
    "author_association": "CONTRIBUTOR",
    "body": ".str functions are all tested in test--categorical - only the ones that need args are special cased\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160140355",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-160140355",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 160140355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDE0MDM1NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-27T13:32:11Z",
    "updated_at": "2015-11-27T13:32:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tdhock need a big note in whatsnew API breaking changes to show off the prior / new behavior in `.extract`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/161055123",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-161055123",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 161055123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTA1NTEyMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-01T18:27:32Z",
    "updated_at": "2015-12-01T18:27:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tdhock looks pretty good, just some minor comments.\n\n@jorisvandenbossche comments?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/161337167",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-161337167",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 161337167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTMzNzE2Nw==",
    "user": {
      "login": "tdhock",
      "id": 932850,
      "node_id": "MDQ6VXNlcjkzMjg1MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/932850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdhock",
      "html_url": "https://github.com/tdhock",
      "followers_url": "https://api.github.com/users/tdhock/followers",
      "following_url": "https://api.github.com/users/tdhock/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdhock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdhock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdhock/subscriptions",
      "organizations_url": "https://api.github.com/users/tdhock/orgs",
      "repos_url": "https://api.github.com/users/tdhock/repos",
      "events_url": "https://api.github.com/users/tdhock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdhock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-02T15:38:53Z",
    "updated_at": "2015-12-02T15:38:53Z",
    "author_association": "NONE",
    "body": "I am adding a test for extractall when there are no matches at all. In that case it should return an Empty DataFrame with columns named according to group names.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162005542",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-162005542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 162005542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjAwNTU0Mg==",
    "user": {
      "login": "tdhock",
      "id": 932850,
      "node_id": "MDQ6VXNlcjkzMjg1MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/932850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdhock",
      "html_url": "https://github.com/tdhock",
      "followers_url": "https://api.github.com/users/tdhock/followers",
      "following_url": "https://api.github.com/users/tdhock/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdhock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdhock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdhock/subscriptions",
      "organizations_url": "https://api.github.com/users/tdhock/orgs",
      "repos_url": "https://api.github.com/users/tdhock/repos",
      "events_url": "https://api.github.com/users/tdhock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdhock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-04T16:03:10Z",
    "updated_at": "2015-12-04T16:03:10Z",
    "author_association": "NONE",
    "body": "@jreback would you suggest any other changes?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162022996",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-162022996",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 162022996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjAyMjk5Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-04T17:05:45Z",
    "updated_at": "2015-12-04T17:05:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche can you have a look\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162103984",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-162103984",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 162103984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjEwMzk4NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-04T22:52:51Z",
    "updated_at": "2015-12-04T22:52:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sinhrks @TomAugspurger comments?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162194197",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-162194197",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 162194197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjE5NDE5Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T14:22:32Z",
    "updated_at": "2015-12-05T14:34:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just gave a quick skim, looks like a great addition.\n\n@tdhock @jreback, is breaking the API to always return a DataFrame a necessary part of this change? How much messier would your code have to get to support maybe returning an Index or Series? I agree that always returning a DataFrame is nice, but maybe not nice enough to warrant breaking API without a deprecation cycle.\n\nCould we deprecate returning an Index/Series for a release? In the code you could check the output shape a squeeze to a Series for now, and raise a FutureWarning in that case. Again I haven't looked closely, so you'll know better than me how much of a hassle this will be.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162201289",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-162201289",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 162201289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIwMTI4OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T14:46:23Z",
    "updated_at": "2015-12-05T14:46:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger the API change on `str.extract` is not necessary, but IMHO it is just simply confusing. Depdending on the data (e.g. whether you have 1 or more capture groups), you get an Index/Series or a DataFrame. Better to just be consistent and always return a DataFrame.\n\nWe could deprecate this, but that is just kicking the can and not actually providing an upgrade path.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162205935",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-162205935",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 162205935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIwNTkzNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T14:57:44Z",
    "updated_at": "2015-12-05T14:57:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed that the current behavior is confusing, and it bites me often. Always returning a DataFame is a better behavior.\n\n> We could deprecate this, but that is just kicking the can and not actually providing an upgrade path.\n\nThe deprecation path would need to include a flag like `squeeze` that defaults to `True` for a release before flipping to default, and being removed further down the road. So we'll require people to change their code once before 0.19, but at least the have a chance to adapt over the 0.18 series.\n\nI don't like introducing a keyword just for the deprecation cycle, so I'm really on the fence here. I just know that `extractall` is a widely used method.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162206835",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-162206835",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 162206835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIwNjgzNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T14:59:56Z",
    "updated_at": "2015-12-05T14:59:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually we use the `expand` flag for several other method, so not w/o precedent. I suppose we could introduce here with a deprecation warning (and default it)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162207616",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-162207616",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 162207616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIwNzYxNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T15:03:40Z",
    "updated_at": "2015-12-05T15:03:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, `expand=False` for now to match `str.split` would be better than `squeeze=True`. Is `expand` on `str.split` slated for an API change to flip to True? Would make sense to do those together, if we were wanting to flip that (I don't think I've ever intentionally kept `expand=False` on `str.split`).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162208886",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-162208886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 162208886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIwODg4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T15:06:55Z",
    "updated_at": "2015-12-05T15:07:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, so here's a proposal. How about adding `expand=False` in 0.18.0; then adding deprecation warnings for both `.extract` and `.split` (shown if its an `Index/Series`) that going to change for 0.19.0.\n\n@tdhock I think adding the parameter `expand=False` (and restoring the functionailiy for `.extract` depending on the kw), then another PR for the deprecations.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162211601",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-162211601",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 162211601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIxMTYwMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T15:15:04Z",
    "updated_at": "2015-12-05T15:15:04Z",
    "author_association": "CONTRIBUTOR",
    "body": ":+1:\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162212744",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-162212744",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 162212744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIxMjc0NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T15:38:27Z",
    "updated_at": "2015-12-05T15:41:49Z",
    "author_association": "MEMBER",
    "body": "A question: as it is a bit difficult to track in the long discussion, can somebody summarize the reasoning to change the return type to a DataFrame? Or is the only reason that is 'is confusing'? (the reason given in the whatsnew docs)\n\nAs I personally don't find this so confusing. I rather find it clear: doing an extract on a Series (Series.str.extract) gives you a Series (1 group) or a DataFrame (more groups). Note that this does \n_not_ depend on your data, but only on the regular expression you provide to the function. \n\nFurther, the fact that the extract on an Index no longer returns an Index but a DataFrame, I don't know if this is an improvement. To be consistent with the other methods, shouldn't it rather return a Index/Multi-Index?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162213238",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-162213238",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 162213238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIxMzIzOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T15:47:38Z",
    "updated_at": "2015-12-05T15:47:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I agree that an `Index` _should_ return a `MultiIndex` (but this is not implemented, so for sure we should do that).\n\nBut, this is data dependent on the moment, which is very confusing. If you have a regex with 1 group you get a `Series`, or 2 you get a `DataFrame`. So if the passed regex is unknown to the writer at that time (say its a user variable), then you don't know what you are getting back.\n\nWe try to be very predictable, this IMHO is pretty unpredictable.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162233096",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11386#issuecomment-162233096",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11386",
    "id": 162233096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIzMzA5Ng==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T18:34:31Z",
    "updated_at": "2015-12-05T18:34:31Z",
    "author_association": "MEMBER",
    "body": "I agree that always returning a frame would be a better API. It's pretty common to use variables for regexs.\n\nOn Sat, Dec 5, 2015 at 7:47 AM, Jeff Reback notifications@github.com\nwrote:\n\n> @jorisvandenbossche I agree that an `Index` _should_ return a `MultiIndex` (but this is not implemented, so for sure we should do that).\n> But, this is data dependent on the moment, which is very confusing. If you have a regex with 1 group you get a `Series`, or 2 you get a `DataFrame`. So if the passed regex is unknown to the writer at that time (say its a user variable), then you don't know what you are getting back.\n> \n> ## We try to be very predictable, this IMHO is pretty unpredictable.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/pydata/pandas/pull/11386#issuecomment-162213238\n"
  }
]
