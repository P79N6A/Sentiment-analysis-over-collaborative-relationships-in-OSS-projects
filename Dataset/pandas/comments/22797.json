[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423552244",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22797#issuecomment-423552244",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22797",
    "id": 423552244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzU1MjI0NA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-21T14:31:45Z",
    "updated_at": "2018-09-21T14:31:45Z",
    "author_association": "MEMBER",
    "body": "I don't think we make guarantees about the order of returned values from a `.loc` operation so I am inclined to say this is not a bug but let's see what others say"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423709838",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22797#issuecomment-423709838",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22797",
    "id": 423709838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzcwOTgzOA==",
    "user": {
      "login": "jungwu",
      "id": 29705055,
      "node_id": "MDQ6VXNlcjI5NzA1MDU1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/29705055?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jungwu",
      "html_url": "https://github.com/jungwu",
      "followers_url": "https://api.github.com/users/jungwu/followers",
      "following_url": "https://api.github.com/users/jungwu/following{/other_user}",
      "gists_url": "https://api.github.com/users/jungwu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jungwu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jungwu/subscriptions",
      "organizations_url": "https://api.github.com/users/jungwu/orgs",
      "repos_url": "https://api.github.com/users/jungwu/repos",
      "events_url": "https://api.github.com/users/jungwu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jungwu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-22T02:14:28Z",
    "updated_at": "2018-09-22T02:14:28Z",
    "author_association": "NONE",
    "body": "For a single-indexed table, we can reindex it using .loc() instead of .reindex()\r\n\r\n```\r\ndf = pd.DataFrame([[1,2,3],[4,5,6]], index=['a','b'])\r\n\r\ndf.loc[['b','a']]\r\n\r\nOut[9]: \r\n   0  1  2\r\nb  4  5  6\r\na  1  2  3\r\n```\r\nIn his book, \"Python for Data Analysis 2ed\" Wes McKinney says \"you can reindex more succinctly by label-indexing with loc, and many users prefer to use it\", although he used only a single-index table\r\nfor illustration.\r\n\r\nThis may be not a bug. however it is natural for one to expect the same effect for the multi-index table. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450590836",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22797#issuecomment-450590836",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22797",
    "id": 450590836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDU5MDgzNg==",
    "user": {
      "login": "normanius",
      "id": 11406002,
      "node_id": "MDQ6VXNlcjExNDA2MDAy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11406002?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/normanius",
      "html_url": "https://github.com/normanius",
      "followers_url": "https://api.github.com/users/normanius/followers",
      "following_url": "https://api.github.com/users/normanius/following{/other_user}",
      "gists_url": "https://api.github.com/users/normanius/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/normanius/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/normanius/subscriptions",
      "organizations_url": "https://api.github.com/users/normanius/orgs",
      "repos_url": "https://api.github.com/users/normanius/repos",
      "events_url": "https://api.github.com/users/normanius/events{/privacy}",
      "received_events_url": "https://api.github.com/users/normanius/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-30T22:24:30Z",
    "updated_at": "2018-12-30T22:24:30Z",
    "author_association": "NONE",
    "body": "I personally think that this inconsistency between single- and multi-index dataframes is dangerous. \r\n\r\nIn python, a list not only represents a collection of objects, but also sets an ordering of these objects. Not respecting this ordering under certain conditions (single- vs. multi-index) is non-intuitive.\r\n\r\nFor sure the inconsistency is not emphasized enough in the documentation. I didn't come across a corresponding warning in the article on [advanced indexing](https://pandas.pydata.org/pandas-docs/stable/advanced.html), neither is there any note in the documentation of [`.loc`](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.loc.html)\r\n\r\nBy the way: SO brought me here, [see my related SO question](https://stackoverflow.com/questions/53981653/)."
  }
]
