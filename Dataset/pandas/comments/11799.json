[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/163253106",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11799#issuecomment-163253106",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11799",
    "id": 163253106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzI1MzEwNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-09T14:20:58Z",
    "updated_at": "2015-12-09T14:20:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can do this, but using tuples as index is VERY awkward and barely supported. These are much more naturally represented (and performant) as `MultiIndexes`. I have never seen a case where this is actually a good idea.\n\n```\nIn [6]: df.columns = Index([(1,2)],tupleize_cols=False)\n\nIn [7]: df\nOut[7]: \n   (1, 2)\n0     2.3\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/163373834",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11799#issuecomment-163373834",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11799",
    "id": 163373834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzM3MzgzNA==",
    "user": {
      "login": "htzh",
      "id": 5956967,
      "node_id": "MDQ6VXNlcjU5NTY5Njc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5956967?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/htzh",
      "html_url": "https://github.com/htzh",
      "followers_url": "https://api.github.com/users/htzh/followers",
      "following_url": "https://api.github.com/users/htzh/following{/other_user}",
      "gists_url": "https://api.github.com/users/htzh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/htzh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/htzh/subscriptions",
      "organizations_url": "https://api.github.com/users/htzh/orgs",
      "repos_url": "https://api.github.com/users/htzh/repos",
      "events_url": "https://api.github.com/users/htzh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/htzh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-09T20:01:30Z",
    "updated_at": "2015-12-09T20:01:30Z",
    "author_association": "NONE",
    "body": "@jreback Thanks for the response. The problem is that `DataFrame` constructor does not expose `tupleize_cols` option.\n\n```\n>>> pd.DataFrame({(1,2):pd.Series([2.3])}, tupleize_cols=False).columns\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: __init__() got an unexpected keyword argument 'tupleize_cols'\n__init__() got an unexpected keyword argument 'tupleize_cols'\n```\n\nEven though `read_csv` and friends do expose this. While I agree `MultiIndex` may be superior the problem is `rename` is then inconsistent as I showed earlier, even though `in` behaves correctly:\n\n```\n>>> (1, 2) in pd.DataFrame({(1,2):pd.Series([2.3])}).columns\nTrue\n```\n\nSo there seem to be API inconsistencies here (if not bugs).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/163377861",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11799#issuecomment-163377861",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11799",
    "id": 163377861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzM3Nzg2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-09T20:11:04Z",
    "updated_at": "2015-12-09T20:11:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@htzh its not exposed because its not recommended in any way to do this.\n\nto be honest we should completely ban tuples as columns, this should never have been allowed IMHO. but we are living with it. MultiIndexes are much much better supported. (and `tuplize_cols` is `read_csv` should be deprecated as well, just hasn't been bothering anyone so left it in).\n\nnot sure what you mean by:\n\n> So there seem to be API inconsistencies here (if not bugs).\n\nnot in the main API's\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/163463023",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11799#issuecomment-163463023",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11799",
    "id": 163463023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzQ2MzAyMw==",
    "user": {
      "login": "htzh",
      "id": 5956967,
      "node_id": "MDQ6VXNlcjU5NTY5Njc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5956967?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/htzh",
      "html_url": "https://github.com/htzh",
      "followers_url": "https://api.github.com/users/htzh/followers",
      "following_url": "https://api.github.com/users/htzh/following{/other_user}",
      "gists_url": "https://api.github.com/users/htzh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/htzh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/htzh/subscriptions",
      "organizations_url": "https://api.github.com/users/htzh/orgs",
      "repos_url": "https://api.github.com/users/htzh/repos",
      "events_url": "https://api.github.com/users/htzh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/htzh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-10T02:03:19Z",
    "updated_at": "2015-12-10T02:03:19Z",
    "author_association": "NONE",
    "body": "I accept that tuple is not desirable. My problem is that during data cleaning phase I need to rename index (column or row) at a few places. However the conversion of tuple to `MultiIndex` is not consistent for row index:\n\n```\n>>> pd.DataFrame({'a':pd.Series([2, 3], index=[(1,1), (2,2)])})\n        a\n(1, 1)  2\n(2, 2)  3\n```\n\nAnd as `rename` semantics is not uniform between `Index` and `MultiIndex`, it would be nice to have consistent behavior here:\n- tuple row index converts to MultiIndex\n- `rename` method (for DataFrame or Series) accepts tuple as specifying `MultiIndex` instead of tuple index just like `in` operator does.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/163463312",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11799#issuecomment-163463312",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11799",
    "id": 163463312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzQ2MzMxMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-10T02:05:40Z",
    "updated_at": "2015-12-10T02:05:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "#4160 is waiting for you !\n\nthat's the fastest / best way to get a change as that is an actual bug. What you want is marginal behavior which mucks with some long defined semantics, so very low likelood of change.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/163472341",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11799#issuecomment-163472341",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11799",
    "id": 163472341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzQ3MjM0MQ==",
    "user": {
      "login": "htzh",
      "id": 5956967,
      "node_id": "MDQ6VXNlcjU5NTY5Njc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5956967?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/htzh",
      "html_url": "https://github.com/htzh",
      "followers_url": "https://api.github.com/users/htzh/followers",
      "following_url": "https://api.github.com/users/htzh/following{/other_user}",
      "gists_url": "https://api.github.com/users/htzh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/htzh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/htzh/subscriptions",
      "organizations_url": "https://api.github.com/users/htzh/orgs",
      "repos_url": "https://api.github.com/users/htzh/repos",
      "events_url": "https://api.github.com/users/htzh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/htzh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-10T03:14:50Z",
    "updated_at": "2015-12-10T03:14:50Z",
    "author_association": "NONE",
    "body": "Thanks for the reference.\n\nWhat about the behavior of row index? Is there a reason why row uses tuple index by default while the column uses `MultiIndex` by default?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/163479130",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11799#issuecomment-163479130",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11799",
    "id": 163479130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzQ3OTEzMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-10T03:51:34Z",
    "updated_at": "2015-12-10T03:51:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "you are creating a list of tuples not an Index (if u wrapped this in Index it would be the same)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/164098780",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11799#issuecomment-164098780",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11799",
    "id": 164098780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDA5ODc4MA==",
    "user": {
      "login": "htzh",
      "id": 5956967,
      "node_id": "MDQ6VXNlcjU5NTY5Njc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5956967?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/htzh",
      "html_url": "https://github.com/htzh",
      "followers_url": "https://api.github.com/users/htzh/followers",
      "following_url": "https://api.github.com/users/htzh/following{/other_user}",
      "gists_url": "https://api.github.com/users/htzh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/htzh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/htzh/subscriptions",
      "organizations_url": "https://api.github.com/users/htzh/orgs",
      "repos_url": "https://api.github.com/users/htzh/repos",
      "events_url": "https://api.github.com/users/htzh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/htzh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-12T02:21:00Z",
    "updated_at": "2015-12-12T02:21:00Z",
    "author_association": "NONE",
    "body": "Sorry for bringing this up one more time. I wonder if you think the following behavior is expected:\n\n```\n>>> pd.Series([2, 3], index=[(1,1), (2,2)]).index\nIndex([(1, 1), (2, 2)], dtype='object')\n\n>>> pd.Series([2, 3], index=[(1,1), (2,2)]).rename({(1,1):(5,6)}).index\nMultiIndex(levels=[[2, 5], [2, 6]],\n           labels=[[1, 0], [1, 0]])\n```\n\nI know you don't like tuple index. I use them as a quick way to specify properties without going through the boilerplates of defining the class. During data cleaning phase I need to change some names depending on the data. It looks like my alternatives are:\n- not use pandas during data cleaning, which kind of defeats the purpose\n- wrap the tuple properties in a class to prevent pandas from messing with it, which creates more work during the experimentation phase\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/164108922",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11799#issuecomment-164108922",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11799",
    "id": 164108922,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDEwODkyMg==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-12T04:25:11Z",
    "updated_at": "2015-12-12T04:25:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@htzh why don't you use a MultiIndex?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/164116964",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11799#issuecomment-164116964",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11799",
    "id": 164116964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDExNjk2NA==",
    "user": {
      "login": "htzh",
      "id": 5956967,
      "node_id": "MDQ6VXNlcjU5NTY5Njc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5956967?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/htzh",
      "html_url": "https://github.com/htzh",
      "followers_url": "https://api.github.com/users/htzh/followers",
      "following_url": "https://api.github.com/users/htzh/following{/other_user}",
      "gists_url": "https://api.github.com/users/htzh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/htzh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/htzh/subscriptions",
      "organizations_url": "https://api.github.com/users/htzh/orgs",
      "repos_url": "https://api.github.com/users/htzh/repos",
      "events_url": "https://api.github.com/users/htzh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/htzh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-12T07:18:45Z",
    "updated_at": "2015-12-12T07:19:41Z",
    "author_association": "NONE",
    "body": "@MaximilianR The problem is that I need to occasionally rename some row names during data cleaning and that needs to be done before MultiIndex is created. Let's say I want to merge two tables. The two tables agree on most row names but it is also possible that they name a particular row differently. They have some overlapping columns so I can infer for which rows the tables differ in row names from the data cells in the shared column. The real problem is more complicated but this is the gist. So in my case the data schema is not completely known a priori and needs some data dependent inference based on logical relationships. Using MultiIndex during the cleaning phase would only make things more complicated (for example I may not know how many levels I will have a priori either).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/164125032",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11799#issuecomment-164125032",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11799",
    "id": 164125032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDEyNTAzMg==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-12T08:19:20Z",
    "updated_at": "2015-12-12T08:19:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@htzh If you need a container-like object, use something like `argparse.Namespace` - pandas will recognize it as an object. Example below.\nIf you can cope with the enforced structure, MultiIndexes are really worth considering though\n\n``` python\nIn [22]: from argparse import Namespace\n\nIn [24]: n=Namespace(a=3, b=4)\n\nIn [25]: n\nOut[25]: Namespace(a=3, b=4)\n\nIn [26]: n.a\nOut[26]: 3\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/164157353",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11799#issuecomment-164157353",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11799",
    "id": 164157353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDE1NzM1Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-12T14:08:05Z",
    "updated_at": "2015-12-12T14:08:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@htzh as I said what you are describing is a bug similar to #4164 \n\nbest way to fix is to submit a PR for `.rename`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/164212851",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11799#issuecomment-164212851",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11799",
    "id": 164212851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDIxMjg1MQ==",
    "user": {
      "login": "htzh",
      "id": 5956967,
      "node_id": "MDQ6VXNlcjU5NTY5Njc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5956967?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/htzh",
      "html_url": "https://github.com/htzh",
      "followers_url": "https://api.github.com/users/htzh/followers",
      "following_url": "https://api.github.com/users/htzh/following{/other_user}",
      "gists_url": "https://api.github.com/users/htzh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/htzh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/htzh/subscriptions",
      "organizations_url": "https://api.github.com/users/htzh/orgs",
      "repos_url": "https://api.github.com/users/htzh/repos",
      "events_url": "https://api.github.com/users/htzh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/htzh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-13T02:39:26Z",
    "updated_at": "2015-12-13T02:39:26Z",
    "author_association": "NONE",
    "body": "Thanks to all for the help. I think I will try to grok MultiIndex better and more effectively incorporate it into the processing pipeline sooner. I also realized that one way to achieve what I wanted is to first convert names of rows as a data column and change the names in the data column. Pandas offers convenient ways to then use the changed column as Index or MultiIndex.\n\n@jreback I read the #4160 thread but it is not completely clear to me what the proposed API is. Is the proposal to make the following statement work for MultiIndex:\n\n```\ndf.rename(columns={('abspx','red) : ('foo','orange')})\n```\n\npresumably moving the particular column from one part of the hierarchy to another? If that is the proposal that is also what I requested earlier: \"`rename` method (for `DataFrame` or `Series`) accepts tuple as specifying `MultiIndex` instead of tuple index just like `in` operator does.\"\n\nI am not yet familiar with pandas source but I will keep that in mind.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/164297034",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11799#issuecomment-164297034",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11799",
    "id": 164297034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDI5NzAzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-13T20:53:46Z",
    "updated_at": "2015-12-13T20:53:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@htzh I think what you proposed above should work. There are quite a few cases that need working out though. E.g. what if you only have a partial level rename\n\n`df.rename(columns={'foo : 'bar'})`\n\nwhere 'foo' is in level=0\n\nI think this should work too\n"
  }
]
