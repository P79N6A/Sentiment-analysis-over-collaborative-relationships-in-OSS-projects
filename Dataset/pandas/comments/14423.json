[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253763416",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14423#issuecomment-253763416",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14423",
    "id": 253763416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mzc2MzQxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-14T10:21:43Z",
    "updated_at": "2016-10-14T10:21:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I think we a duplicate of this already, need to search for it. In any event I think its doing a coercing conversion. This should strictly be a soft-conversion from object -> numeric. So the following works (though I _think_ the existing code should actually work correctly, maybe something is not getting passed thru).\n\n```\ndiff --git a/pandas/core/groupby.py b/pandas/core/groupby.py\nindex 3c376e3..a86e6d6 100644\n--- a/pandas/core/groupby.py\n+++ b/pandas/core/groupby.py\n@@ -10,6 +10,7 @@ from pandas.compat import(\n     zip, range, long, lzip,\n     callable, map\n )\n+import pandas as pd\n from pandas import compat\n from pandas.compat.numpy import function as nv\n from pandas.compat.numpy import _np_version_under1p8\n@@ -3446,7 +3447,7 @@ class NDFrameGroupBy(GroupBy):\n                 # as we are stacking can easily have object dtypes here\n                 so = self._selected_obj\n                 if (so.ndim == 2 and so.dtypes.isin(_DATELIKE_DTYPES).any()):\n-                    result = result._convert(numeric=True)\n+                    result = result.apply(lambda x: pd.to_numeric(x, errors='ignore'))\n                     date_cols = self._selected_obj.select_dtypes(\n                         include=list(_DATELIKE_DTYPES)).columns\n                     date_cols = date_cols.intersection(result.columns)\n```\n\na pull-request with tests would be welcome.\n\nas an aside, what you are doing in side the `.apply` is completely inefficient and non-idiomatic.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253859340",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14423#issuecomment-253859340",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14423",
    "id": 253859340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mzg1OTM0MA==",
    "user": {
      "login": "waqarmalik",
      "id": 1182613,
      "node_id": "MDQ6VXNlcjExODI2MTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1182613?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/waqarmalik",
      "html_url": "https://github.com/waqarmalik",
      "followers_url": "https://api.github.com/users/waqarmalik/followers",
      "following_url": "https://api.github.com/users/waqarmalik/following{/other_user}",
      "gists_url": "https://api.github.com/users/waqarmalik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/waqarmalik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/waqarmalik/subscriptions",
      "organizations_url": "https://api.github.com/users/waqarmalik/orgs",
      "repos_url": "https://api.github.com/users/waqarmalik/repos",
      "events_url": "https://api.github.com/users/waqarmalik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/waqarmalik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-14T16:58:34Z",
    "updated_at": "2016-10-14T17:00:39Z",
    "author_association": "NONE",
    "body": "Tested and the suggested change works on a much larger data set too.\n\nAs an aside, I'd like to find better ways to do it -- groupby followed by extracting key parameters from each group. I couldn't devise a way to make aggregate work. Could you provide some suggestion on improving this? I've setup another page on stackoverflow for the discussion.\n\nhttp://stackoverflow.com/questions/40032039/pandas-groupby-apply-weird-behavior-with-series\n"
  }
]
