[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21393244",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4326#issuecomment-21393244",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4326",
    "id": 21393244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzkzMjQ0",
    "user": {
      "login": "brainysmurf",
      "id": 859335,
      "node_id": "MDQ6VXNlcjg1OTMzNQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/859335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brainysmurf",
      "html_url": "https://github.com/brainysmurf",
      "followers_url": "https://api.github.com/users/brainysmurf/followers",
      "following_url": "https://api.github.com/users/brainysmurf/following{/other_user}",
      "gists_url": "https://api.github.com/users/brainysmurf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brainysmurf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brainysmurf/subscriptions",
      "organizations_url": "https://api.github.com/users/brainysmurf/orgs",
      "repos_url": "https://api.github.com/users/brainysmurf/repos",
      "events_url": "https://api.github.com/users/brainysmurf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brainysmurf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-23T04:57:49Z",
    "updated_at": "2013-07-23T04:57:49Z",
    "author_association": "NONE",
    "body": "I realize isnull() will do this for me, but the idea is that I want the unittest to compare values themselves:\n\n(1, 2) == (1, 2)  #returns True\n(1, 2, null()) == (1, 2, null()) #return False\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21400260",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4326#issuecomment-21400260",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4326",
    "id": 21400260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDAwMjYw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-23T08:36:59Z",
    "updated_at": "2013-07-23T08:36:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "nan != nan ALWAYS\nin fact this is how you test it\nuse np.isnan()\nbetter is to use isnull() which is more general and faster\nlook at pandas.utils.testing \nlots of examples in utilities in there for comparisons\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21401825",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4326#issuecomment-21401825",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4326",
    "id": 21401825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDAxODI1",
    "user": {
      "login": "brainysmurf",
      "id": 859335,
      "node_id": "MDQ6VXNlcjg1OTMzNQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/859335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brainysmurf",
      "html_url": "https://github.com/brainysmurf",
      "followers_url": "https://api.github.com/users/brainysmurf/followers",
      "following_url": "https://api.github.com/users/brainysmurf/following{/other_user}",
      "gists_url": "https://api.github.com/users/brainysmurf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brainysmurf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brainysmurf/subscriptions",
      "organizations_url": "https://api.github.com/users/brainysmurf/orgs",
      "repos_url": "https://api.github.com/users/brainysmurf/repos",
      "events_url": "https://api.github.com/users/brainysmurf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brainysmurf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-23T09:08:36Z",
    "updated_at": "2013-07-23T09:08:36Z",
    "author_association": "NONE",
    "body": "I did look there, but I'm still a bit lost. Anyway, I must be missing something. I've fixed my problem by using fillna with value=0 and just testing that instead, which gives me the behavior I'm expecting.\n"
  }
]
