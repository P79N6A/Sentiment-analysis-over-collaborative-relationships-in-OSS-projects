[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59614215",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59614215",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59614215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjE0MjE1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-18T13:56:34Z",
    "updated_at": "2014-10-18T13:56:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "nope, this is how it is. It is just a pointer. which is always 8 bytes. I believe that python interns the actual strings for smaller ones, and allocates from the heap for bigger. Though not really sure.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59617810",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59617810",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59617810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjE3ODEw",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-18T15:12:09Z",
    "updated_at": "2014-10-18T15:12:09Z",
    "author_association": "NONE",
    "body": "That is very misleading. It must be possible to calculate the memory footprint of native python objects.\n\ncc @jorisvandenbossche \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59618279",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59618279",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59618279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjE4Mjc5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-18T15:22:49Z",
    "updated_at": "2014-10-18T15:22:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "see discussion in #7619\nif u can find a reliable cross version way of doing this without sacrificing perf I am all ears\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59621050",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59621050",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59621050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjIxMDUw",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-18T16:43:36Z",
    "updated_at": "2014-10-18T16:43:36Z",
    "author_association": "NONE",
    "body": "ok:\n\n@jreback:\n\n```\nThe reason is the 'real' storage for strings is NOT the object pointer, but rather \na fixed-width storage block of memory depending on the length of strings.\n\nThis is a teeny bit wrong for actual objects\n```\n\n\"a teeny bit wrong\" ;) \nit may be complicated to estimate precise memory but even an estimate would be more \"reliable\".\n\n@shoyer:\n\n```\n For now, I would just warn that memory usage will be an underestimate for object dtype.\n```\n\nMaybe its much work to do better but don't you think the warning is good idea?\n\nwhy does performance of `info()` matter, memory report could be off by default if there are object dtypes. is it better to give a wrong answer quickly? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59621152",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59621152",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59621152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjIxMTUy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-18T16:46:41Z",
    "updated_at": "2014-10-18T16:46:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kay1793 you are welcome to provide a soln if you would like\n\nperformance of info is extremely crucial\nif I have 1m rows and every time I display this then it's perceptibly slow that is a problem\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59640760",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59640760",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59640760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjQwNzYw",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-19T06:16:17Z",
    "updated_at": "2014-10-19T06:16:17Z",
    "author_association": "NONE",
    "body": "@jreback how about this solution:\n\nif object dtype is present, the memory usage reported gets an asterisk and warning text added at bottom.\nif a better memory estimate is possible but slow it'll be off by default but user can request it with keyword to `info()`.\n\nWould that be ok?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59641090",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59641090",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59641090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjQxMDkw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-19T06:35:39Z",
    "updated_at": "2014-10-19T22:37:32Z",
    "author_association": "MEMBER",
    "body": "Let's see just how slow it is :).\n\nBut I don't think there is any option other than Cython here.\n\nPure Python will be impossibly slow for iterating over large enough arrays for memory usage to be relevant, but the numpy solution will double memory usage -- which makes the command almost useless, since it is there particularly for debugging and understanding in low memory situations.\n\nOn Saturday, Oct 18, 2014 at 11:16 PM, kay1793 notifications@github.com, wrote:\n\n@jreback how about this solution:\n\nif object dtype is present, the memory usage reported gets an asterisk and warning text added at bottom.\n\nif a better memory estimate is possible but slow it'll be off by default but user can request it with keyword to info().\n\nWould that be ok?\n\n—\nReply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59655435",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59655435",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59655435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjU1NDM1",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-19T16:34:06Z",
    "updated_at": "2014-10-19T16:34:06Z",
    "author_association": "NONE",
    "body": "Here you go @jreback, it was much easier than you said.\n\ncourtesy of blosc/bcolz 's @esc from:\nhttp://nbviewer.ipython.org/github/Blosc/movielens-bench/blob/master/querying-ep14.ipynb\n\n``` python\nIn [48]: d=pd.DataFrame([\"%06d\" %x for x in range(1000000)])\n    ...: print(\"%d MB\" % (sum(sys.getsizeof(o) for o in d[0].values.flat)/ 2**20))\n    ...: d=pd.DataFrame([\"%12d\" %x for x in range(1000000)])\n    ...: print(\"%d MB\" % (sum(sys.getsizeof(o) for o in d[0].values.flat)/ 2**20))\n    ...: d=pd.DataFrame([u\"%06d\" %x for x in range(1000000)])\n    ...: print(\"%d MB\" % (sum(sys.getsizeof(o) for o in d[0].values.flat)/ 2**20))\n41 MB\n46 MB\n72 MB\n\n# compare info() which gives the same wrong size for all of them\nIn [51]: d.info()\n<...>\nmemory usage: 15.3 MB\n\n# for 1M objects\nIn [49]: %timeit sum(sys.getsizeof(o) for o in d[0].values.flat)/ 2**20\n1 loops, best of 3: 290 ms per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59656359",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59656359",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59656359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjU2MzU5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-19T17:02:33Z",
    "updated_at": "2014-10-19T17:02:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "well that is nice for a SINGLE column. What if you have 100? (and assume we only do the strings, you cannot do `df.values` as that turns everything to object dtype).\n\nDon't get me wrong I think this would be nice,\nbut you cannot wait 20s for a result on an interactive display\n\nand this can possibly way overstimate if things are interned.\n\nYou are welcome to put together something to do this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59672995",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59672995",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59672995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjcyOTk1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T00:48:26Z",
    "updated_at": "2014-10-20T00:52:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kay1793 ok, will reopen to see if anything can be done for this. But not sure of an easy way to surmount the perf issue here (though cytonizing may be enough).\n\n`sizeof` is a c-operator, so this may be pretty easy at the cython level.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59690376",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59690376",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59690376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjkwMzc2",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T06:56:08Z",
    "updated_at": "2014-10-20T06:56:08Z",
    "author_association": "NONE",
    "body": "There is no performance issue if it's disabled by default (or limit by row count like null count reporting) - I suggest this twice already.\n\n`sizeof` is a c operator, but `sys.getsizeof` is not. for structs or even C++ objects you get the same wrong answer if you use it because it doesn't count the space connected with pointers.\n\nyes, interning could cause overestimate but only [if python actually does it](https://stackoverflow.com/questions/15541404/python-string-interning#comment32855426_15541556).\n\n_And to make it doubly clear: there is not interning going on here at all. Immutable literals are instead stored as constants with the bytecode. Interning does take place for names used in code, but not for string values created by the program unless specifically interned by the intern() function. –  Martijn Pieters Feb 12 (2014) at 11:23_\n\nMartin has 300k reputation on SO - you can maybe trust him :)\n\n``` python\nIn [6]: x=\"string string\"\n   ...: a,b=x.split()\n   ...: print(a==b, a is b)\nTrue False\n\nIn [7]: a,b=\"string\",\"string\"\n   ...: print(a==b, a is b)\nTrue True\n```\n\nfor 99% of cases, I think the string data that ends up in dataframe has no interning because its not literals.\n\n> Don't get me wrong I think this would be nice,\n\n@jreback, I belive you but still you make lots of objection that actually is not a problem at all ;)\nwhy not be more positive, much better pandas that way!\n\n@shoyer, I wanted just the warning about the completely wrong memory estimate and can't get into the bigger PR, do you like to do it maybe?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59690822",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59690822",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59690822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjkwODIy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T07:01:37Z",
    "updated_at": "2014-10-20T07:01:37Z",
    "author_association": "MEMBER",
    "body": "@kay1793 What do you think of this?\n\n```\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 1000000 entries, 0 to 999999\nData columns (total 1 columns):\n0    1000000 non-null object\ndtypes: object(1)\nmemory usage: 15.3+ MB\n```\n\nwhere the `+` only appears if at least one column has `object` dtype.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59703969",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59703969",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59703969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzAzOTY5",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T08:20:35Z",
    "updated_at": "2014-10-20T08:20:35Z",
    "author_association": "NONE",
    "body": "Sure that's better. thanks @shoyer .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59735949",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59735949",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59735949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzM1OTQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T11:57:03Z",
    "updated_at": "2014-10-20T11:57:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kay1793 I think you are missing the point. Pandas needs to provide a pretty close user experience regardless of the data set size (this is in fact the reason for the `df.info()` method). We could add an option to do this, but first have to have a valid computational soln, that doesn't take 20s. I have suggested that you can cythonize this. I'll try it if i have time, but always like for people to put up solns rather that just responses.\n\nI do appreciate your comments, and I am quite positive about including new features. That said, they cannot change the UX w/o a really good reason, and performance / API / usability are very important.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59751688",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59751688",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59751688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzUxNjg4",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T13:16:50Z",
    "updated_at": "2014-10-20T13:16:50Z",
    "author_association": "NONE",
    "body": "> I think you are missing the point. Pandas needs to provide a pretty close user experience \n> regardless  of the data set size\n\nit can't change user experience if it's off by default. like I said before i suggest it will be off by default, and available even if it takes 20s or even more for big big frames. and use it only when you need it.\n\n> I'll try it if i have time, always like for people to put up solns rather that just responses.\n\nthat it not fair.  when I reported the issue you immediately closed it. then I spent some hours checking and showing solutions to all the objections you said, proving it **is** possible and not that difficult. It is not fair to call my effort \"not solutions just responses\" just because I can't spend as much time on pandas like you (and I am gratefull for everyone who is working on pandas). I think I DID give solutions.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59752061",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-59752061",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 59752061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzUyMDYx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T13:19:56Z",
    "updated_at": "2014-10-20T13:19:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kay1793 you cannot possibly be claiming that having a user possibly wait 20s is a good thing???\n\nthis is the entire problem, you cannot have a flag which makes this work 2 completely different ways DEPENDING on the data. \n\nI do appreciate your attention to this issue. But you have to understand that I cannot possibly do everything.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60041496",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-60041496",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 60041496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDQxNDk2",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T06:18:18Z",
    "updated_at": "2014-10-22T06:18:18Z",
    "author_association": "NONE",
    "body": "> @kay1793 you cannot possibly be claiming that having a user possibly wait 20s is a good thing???\n\nno I didn't. you cannot possibly be claiming that giving the user a completely wrong answer quickly is good??? I cant suggest making this a keyword option default off again for the 5th time without my head exploding, so I will not.\n\n> you cannot have a flag which makes this work 2 completely different ways DEPENDING on the data. \n\n`df.info(self, verbose=None, buf=None, max_cols=None, memory_usage=None)`\nwhat about `verbose`/`max_cols`? what about 'display.max_info_rows`? I dont know what you are fighting so bad.\n\n> I do appreciate your attention to this issue. But you have to understand that I cannot possibly do everything.\n\nAll I said was it was wrong of _you_ to say that **I** didn't do anything because I didn't make a PR.\n\nI don't care any more @jreback. Do what you want.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60067262",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8578#issuecomment-60067262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8578",
    "id": 60067262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDY3MjYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T10:52:10Z",
    "updated_at": "2014-10-22T10:52:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kay1793 I am afraid that you are still not getting my point. but moving on. thanks for raising this point.\n"
  }
]
