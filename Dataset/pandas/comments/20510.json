[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376855139",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-376855139",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 376855139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Njg1NTEzOQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-28T11:34:42Z",
    "updated_at": "2018-03-28T11:34:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure I understand the purpose of making it so you can't set `tz`.\r\n\r\nIt's also *not* certain that you will get `LMT` for any given zone (though it is likely for certain zones). In general I think [people should not use pytz at all](https://blog.ganssle.io/articles/2018/03/pytz-fastest-footgun.html), but I'm aware that that might be a pretty big API change. Still, I think any sort of datetime implementation should try to *hide* `pytz`'s implementation details, not expose them directly."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376859948",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-376859948",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 376859948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Njg1OTk0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-28T11:54:46Z",
    "updated_at": "2018-03-28T11:54:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I'm not sure I understand the purpose of making it so you can't set tz.\r\n\r\nTimestamp and DTI are immutable objects, so setting after creation doesn't make sense.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376860338",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-376860338",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 376860338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Njg2MDMzOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-28T11:56:22Z",
    "updated_at": "2018-03-28T11:56:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "> It's also not certain that you will get LMT for any given zone (though it is likely for certain zones). In general I think people should not use pytz at all, but I'm aware that that might be a pretty big API change. Still, I think any sort of datetime implementation should try to hide pytz's implementation details, not expose them directly.\r\n\r\nthis is generally true. The actual tz is an implementation detail, which we don't really care / want to expose to the user directly (of course we want them to be able to construct using there favorite tz library & ISO). Users mostly just care about the iso repr anyhow (US/Eastern). After this PR things will more closely follow this pattern."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376868336",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-376868336",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 376868336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Njg2ODMzNg==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-28T12:27:02Z",
    "updated_at": "2018-03-28T12:27:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Looking more closely, I think I was slightly confused because the comments and documentation are misleading. None of these are testing or ensuring that the tz is \"LMT\", they are just ensuring that it is a consistent `tzinfo` object. I think it is best to scrub all mentions of LMT from the comments and documentation."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376958445",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-376958445",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 376958445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Njk1ODQ0NQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-28T16:55:32Z",
    "updated_at": "2018-03-28T16:55:32Z",
    "author_association": "MEMBER",
    "body": "@pganssle Yeah I was mainly using `LMT` as an alias (and consistent pytz basis) for \"the first tzinfo object returned from `pytz.timezone(...)`\" since I thought it would always be `LMT`. Since that may not be the case, agreed that I should remove mention of `LMT` to avoid confusion"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377006974",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-377006974",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 377006974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzAwNjk3NA==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-28T19:28:01Z",
    "updated_at": "2018-03-28T19:28:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mroeschke I don't think \"the first tzinfo object\" is really the contract either. The point is that `tz` should represent the *canonical* time zone object, to the extent that there is one (any one of them can be chosen as a representative, so long as it's always the same one).\r\n\r\nThat said, exposing that information anywhere in the public-facing documentation is probably a bad idea, because it's very much a `pytz` concept, and specifically one of the weird ones that violates the `tzinfo` interface. I think it would be better if pandas started moving away from any overt sign that they use pytz and try to move away from using pytz-specific concepts.\r\n\r\nI think a property alone is enough to hide the implementation detail that the time zone object may be different for different `datetime` objects within the `DateTimeIndex`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377130428",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-377130428",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 377130428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzEzMDQyOA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-03-29T05:58:20Z",
    "updated_at": "2018-04-06T03:45:57Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20510?src=pr&el=h1) Report\n> Merging [#20510](https://codecov.io/gh/pandas-dev/pandas/pull/20510?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/aa3fefc898b2f101f3cf83f90add69857926fcbe?src=pr&el=desc) will **decrease** coverage by `0.02%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/20510/graphs/tree.svg?src=pr&width=650&token=eZ4WkYLtcO&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/20510?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #20510      +/-   ##\n==========================================\n- Coverage   91.84%   91.82%   -0.03%     \n==========================================\n  Files         153      153              \n  Lines       49256    49257       +1     \n==========================================\n- Hits        45241    45230      -11     \n- Misses       4015     4027      +12\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.21% <100%> (-0.03%)` | :arrow_down: |\n| #single | `41.91% <63.63%> (ø)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/20510?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/indexes/datetimelike.py](https://codecov.io/gh/pandas-dev/pandas/pull/20510/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZWxpa2UucHk=) | `96.72% <100%> (ø)` | :arrow_up: |\n| [pandas/core/indexes/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/20510/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZXMucHk=) | `95.73% <100%> (ø)` | :arrow_up: |\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/20510/diff?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `65.07% <0%> (-1.74%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20510?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20510?src=pr&el=footer). Last update [aa3fefc...67a29d5](https://codecov.io/gh/pandas-dev/pandas/pull/20510?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377426620",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-377426620",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 377426620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzQyNjYyMA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-30T02:18:09Z",
    "updated_at": "2018-03-30T02:18:15Z",
    "author_association": "MEMBER",
    "body": "Addressed your comments @jreback. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377699093",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-377699093",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 377699093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzY5OTA5Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-31T15:01:32Z",
    "updated_at": "2018-03-31T15:01:32Z",
    "author_association": "MEMBER",
    "body": "> I think a property alone is enough to hide the implementation detail that the time zone object may be different for different datetime objects within the DateTimeIndex.\r\n\r\n@pganssle what do you mean exactly here?\r\n\r\n@mroeschke great work!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377704329",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-377704329",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 377704329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzcwNDMyOQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-31T16:17:55Z",
    "updated_at": "2018-03-31T16:17:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche Not sure what part you are confused about, but my intention was that `tz_standardize ` should be as private as possible, not part of the public interface. Having time zone accessed exclusively through a `tz` property should be sufficient to achieve this, and thus end users should never actually have to call `tz_standardize`.\n\nIdeally, the `tz` property *itself* would just be implemented as a `cpdef` and `tz_standardize` would be a `cdef` not accessible by end users."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377704906",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-377704906",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 377704906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzcwNDkwNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-31T16:25:14Z",
    "updated_at": "2018-03-31T16:25:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Ideally, the tz property itself would just be implemented as a cpdef and tz_standardize would be a cdef not accessible by end users.\r\n\r\n@pganssle ALL of this is explicitly private already."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377706049",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-377706049",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 377706049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzcwNjA0OQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-31T16:41:11Z",
    "updated_at": "2018-03-31T16:41:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I think I was at least partially fooled by the fact that it has documentation - it's not always clear to me what ends up getting included in the docs.\n\nIs it \"explicitly private\" in the sense that it's actually impossible for users to access from the Python API, or in the sense that it's under `_libs`? If the latter, then Hyrum's law indicates that someone will start using it eventually. I'm pretty sure there's a way to implement this as truly private.\n\nThat said, if it's a pain don't bother. I wasn't planning on harping on it, just explaining my comment."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377706668",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-377706668",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 377706668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzcwNjY2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-31T16:49:41Z",
    "updated_at": "2018-03-31T16:49:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pganssle if completely private as its under ``_libs``. we can and do change these things w/o warning. If someone uses it, then tough luck. We have enough issues with the public API. \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377706761",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-377706761",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 377706761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzcwNjc2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-31T16:50:55Z",
    "updated_at": "2018-03-31T16:50:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "note that ALL functions really should have documentation. private ones as well as public ones. We have been making efforts on this recently. It is just useful for future readers."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377707264",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-377707264",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 377707264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzcwNzI2NA==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-31T16:57:13Z",
    "updated_at": "2018-03-31T16:57:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure, but the same could be said for `dateutil.parser._timelex`, the undocumented private class not in `__all__`, but you were the one who persuaded me to add a deprecation warning to that. I'm suggesting that these things go much easier when the interpreter literally won't let you access the symbols (though this is not always possible)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377784139",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-377784139",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 377784139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Nzc4NDEzOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-01T12:39:51Z",
    "updated_at": "2018-04-01T12:39:51Z",
    "author_association": "MEMBER",
    "body": "> things go much easier when the interpreter literally won't let you access the symbols (though this is not always possible)\r\n\r\nthat's not possible in this case, as we need to use `tz_standardize` (internally) in a python file\r\n\r\n> Not sure what part you are confused about, but my intention was that tz_standardize should be as private as possible, not part of the public interface. Having time zone accessed exclusively through a tz property should be sufficient to achieve this\r\n\r\nConfusion solved :) My starting point was that only `.tz` was already the only public exposure.\r\n\r\nThat said,  `.tz` *is* public, and returns a pytz instance:\r\n\r\n> I think it would be better if pandas started moving away from any overt sign that they use pytz and try to move away from using pytz-specific concepts.\r\n\r\nI suppose this would only be solved by no longer returning a pytz instance? This could potentially break peoples codes that use a pytz-specific method of the `tz` object?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377802224",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-377802224",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 377802224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzgwMjIyNA==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-01T17:24:00Z",
    "updated_at": "2018-04-01T17:25:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> that's not possible in this case, as we need to use tz_standardize (internally) in a python file\r\n\r\nThis is not quite true. In `tslibs` you can do this:\r\n\r\n```python\r\ncdef tz_standardize(tz):\r\n    ...\r\n\r\ncpdef get_tz(self):\r\n    return tz_standardize(self._tz)\r\n```\r\n\r\nAnd then you can just do:\r\n\r\n```python\r\nclass DateTimeIndex:\r\n    tz = property(get_tz)\r\n```\r\n\r\nThis is one way to do it (might actually be faster because presumably the `tz_standarize` call is inlined into `get_tz`). There are other mechanisms that prevent exposing the `tz_standardize` symbol, but I'm not terribly worried about it honestly.\r\n\r\n> I suppose this would only be solved by no longer returning a pytz instance? This could potentially break peoples codes that use a pytz-specific method of the tz object?\r\n\r\nIt doesn't actually return a `pytz` instance, it returns whatever `tzinfo` object you attached. If you use a `dateutil` timezone, it should return a `dateutil` timezone. If you're going to move away from `pytz`, I would change it so that passing an IANA timezone string to `tz_localize` attaches a `dateutil` zone, not a `pytz` zone, but as you mention that would probably be a breaking change.\r\n\r\nDeprecating that behavior would be tricky, though. The best option for deprecation I think would be to create some sort of mock object that wraps `pytz` time zones and raises `DeprecationWarning` whenever any of the `pytz`-specific methods are called."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377973833",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-377973833",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 377973833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Nzk3MzgzMw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-02T16:42:51Z",
    "updated_at": "2018-04-02T16:42:51Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche address your comment and all green. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378139694",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-378139694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 378139694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODEzOTY5NA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-03T06:15:25Z",
    "updated_at": "2018-04-03T06:15:25Z",
    "author_association": "MEMBER",
    "body": "I'll try to get those ASV sometime tomorrow; my asv setup still doesn't work and need to look into it. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378494885",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-378494885",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 378494885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODQ5NDg4NQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T06:30:38Z",
    "updated_at": "2018-04-04T06:30:38Z",
    "author_association": "MEMBER",
    "body": "I wasn't able to resolve my asv issues, but here's a timeit in the meantime. There appears to be a noticeable slowdown. \r\n\r\n```\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: dti = pd.DatetimeIndex([pd.Timestamp('2010', tz='US/Pacific')])\r\n\r\n# This branch\r\nIn [3]: %timeit dti.tz\r\n2.21 µs ± 25.8 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\r\n\r\n#Master\r\nIn [4]: %timeit dti.tz\r\n52.8 ns ± 1.37 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378603490",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-378603490",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 378603490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODYwMzQ5MA==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T13:40:46Z",
    "updated_at": "2018-04-04T13:40:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mroeschke Have you tried using the mechanism I mentioned [in this comment](https://github.com/pandas-dev/pandas/pull/20510#issuecomment-377802224), using `tz_standardize` as a `cdef`? That may end up being faster because it saves on Python function call overhead, but I'm not sure how much faster.\r\n\r\nThat said, it seems unlikely that anyone is accessing the `tz` property in a tight loop. It's an operation that happens once per index. I suspect spending *too* much time optimizing it might be a waste of time."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378632765",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-378632765",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 378632765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODYzMjc2NQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T15:03:07Z",
    "updated_at": "2018-04-04T15:03:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually, just tried it, a lot of the \"slow\" part is converting to the \"canonical\" `pytz` zone. It's much faster if you `tz` refers to a `dateutil` time zone.\r\n\r\nUsing a `pytz` zone:\r\n```python\r\n# master branch\r\nIn [4]: %timeit dti.tz\r\n69.8 ns ± 0.826 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)\r\n\r\n# cdef tz_standardize\r\n#master\r\nIn [8]: %timeit dti.tz\r\n69.5 ns ± 1.25 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)\r\n\r\nIn [3]: %timeit dti.tz\r\n2.41 µs ± 11.2 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\r\n\r\n# cpdef tz_standardize\r\nIn [6]: %timeit dti.tz\r\n2.79 µs ± 113 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\r\n```\r\n\r\nAnd for a `dateutil` zone:\r\n```python\r\n# cdef tz_standardize\r\nIn [25]: %timeit dti.tz\r\n478 ns ± 31.7 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)\r\n\r\n# cpdef tz_standardize\r\nIn [4]: %timeit dti.tz\r\n691 ns ± 4.62 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)\r\n```\r\n\r\nAnother 190 ns is explained by using a property at all (and thus using the descriptor protocol). When `tz` is set to `return self._tz`, we get:\r\n\r\n```python\r\nIn [4]: %timeit dti.tz\r\n190 ns ± 1.11 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)\r\n```\r\n\r\nI think the remaining timing is just the time it takes to determine if something is \"pytz-like\". That said, there's not much you can do about that, particularly since most people will be using `pytz` until and unless `pandas` starts to move towards using `dateutil` zones."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378664307",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-378664307",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 378664307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODY2NDMwNw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T16:34:48Z",
    "updated_at": "2018-04-04T16:34:48Z",
    "author_association": "MEMBER",
    "body": "Thanks for the investigation @pganssle! I am getting similar results for the `get_tz` property implementation as the one on this branch.\r\n\r\n```\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]:  dti = pd.DatetimeIndex([pd.Timestamp('2010', tz='US/Pacific')])\r\n\r\n# tz = property(get_tz)\r\nIn [3]: %timeit dti.tz\r\n2.43 µs ± 153 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\r\n```\r\n\r\nFor a dateutil tz, this should just some overhead with a `hasattr` check, but you're probably correct that for pytz, a good amount of time is spent constructing the new pytz.\r\n\r\nBut overall I agree with you that I do not suspect many accessing `.tz` in a tight loop."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378668810",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-378668810",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 378668810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODY2ODgxMA==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T16:49:40Z",
    "updated_at": "2018-04-04T16:49:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> For a dateutil tz, this should just some overhead with a hasattr check, but you're probably correct that for pytz, a good amount of time is spent constructing the new pytz.\r\n\r\nIt's more than just that, it's also the function call overhead. To the extent that `%timeit` is reliable, inlining the extra call to `tz_standardize` does provide a reasonable (looks like it could be about 30%) speedup when using `dateutil` zones."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378689238",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-378689238",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 378689238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODY4OTIzOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T17:55:27Z",
    "updated_at": "2018-04-04T17:55:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "so what u need to do here is use the cache_only decorator\r\nsince these are immutable once constructed they r good"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378976725",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-378976725",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 378976725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODk3NjcyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-05T15:30:06Z",
    "updated_at": "2018-04-05T15:30:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "will this PR still work if instead of calling ``tz_standarize`` on the ``.tz``, you instead set the ``._tz`` with the standardized value? this sidesteps the caching as its not longer needed then.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/379151716",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-379151716",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 379151716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTE1MTcxNg==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-06T05:26:19Z",
    "updated_at": "2018-04-06T05:26:57Z",
    "author_association": "MEMBER",
    "body": "Good call @jreback. Additionally, standardizing `._tz` directly allows us to provide a better error message when someone attempts to set `.tz`.\r\n\r\nAll green "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380306700",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20510#issuecomment-380306700",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20510",
    "id": 380306700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDMwNjcwMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-11T02:30:02Z",
    "updated_at": "2018-04-11T02:30:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "very nice @mroeschke ! keep em coming!"
  }
]
