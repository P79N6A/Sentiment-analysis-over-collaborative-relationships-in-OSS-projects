[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/444680655",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24118#issuecomment-444680655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24118",
    "id": 444680655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDY4MDY1NQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-05T22:45:18Z",
    "updated_at": "2018-12-29T09:59:12Z",
    "author_association": "NONE",
    "body": "Hello @qwhelan! Thanks for updating the PR.\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on December 29, 2018 at 09:59 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/445036836",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24118#issuecomment-445036836",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24118",
    "id": 445036836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTAzNjgzNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-06T21:31:53Z",
    "updated_at": "2018-12-06T21:31:53Z",
    "author_association": "MEMBER",
    "body": "> Fine by me. Elsewhere we're trying to move towards fewer arguments in the constructors. Should we consider a dedicated constructor for this? (not necessarily for this PR)\r\n\r\nI am personally -1 on adding this to the Period constructor. \r\n(They are also not present on the Timestamp constructor. They are on DatetimeIndex, but I would rather see them deprecated there, in favor of `to_datetime` for all non-default string parsing).\r\n\r\nI also find it strange that a `display` option actually determines how an input is parsed. I would rather deprecate that ability (as I understand this is what makes it slower?)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/445082895",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24118#issuecomment-445082895",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24118",
    "id": 445082895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTA4Mjg5NQ==",
    "user": {
      "login": "qwhelan",
      "id": 440095,
      "node_id": "MDQ6VXNlcjQ0MDA5NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/440095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qwhelan",
      "html_url": "https://github.com/qwhelan",
      "followers_url": "https://api.github.com/users/qwhelan/followers",
      "following_url": "https://api.github.com/users/qwhelan/following{/other_user}",
      "gists_url": "https://api.github.com/users/qwhelan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qwhelan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qwhelan/subscriptions",
      "organizations_url": "https://api.github.com/users/qwhelan/orgs",
      "repos_url": "https://api.github.com/users/qwhelan/repos",
      "events_url": "https://api.github.com/users/qwhelan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qwhelan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-07T00:44:23Z",
    "updated_at": "2018-12-07T00:44:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I also find it strange that a display option actually determines how an input is parsed. I would rather deprecate that ability (as I understand this is what makes it slower?).\r\n\r\nYeah, we're spending 90%+ of runtime importing/querying these display variables. Unfortunately, this same code path is used for handling `DatetimeIndex` slicing, so deprecation is likely to be tricky.\r\n\r\nThe caveat on the above is that this speedup is only when creating a `PeriodArray` directly from integers. This was not covered by our `asv` suite until the past week, but is leveraged in places like `get_indexer_non_unique()`.\r\n\r\nRegarding the name of the option, it seems the intent was for it to cover display + parsing, but only parsing was ever implemented (per https://github.com/pandas-dev/pandas/issues/11501#issuecomment-152848626 )"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/449669733",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24118#issuecomment-449669733",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24118",
    "id": 449669733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTY2OTczMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-23T23:33:23Z",
    "updated_at": "2018-12-23T23:33:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@qwhelan ok adding the benchmarks, but yea let's not mess with the Period constructor. where does the get_option things get called now that is slowings things down?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450214462",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24118#issuecomment-450214462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24118",
    "id": 450214462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDIxNDQ2Mg==",
    "user": {
      "login": "qwhelan",
      "id": 440095,
      "node_id": "MDQ6VXNlcjQ0MDA5NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/440095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qwhelan",
      "html_url": "https://github.com/qwhelan",
      "followers_url": "https://api.github.com/users/qwhelan/followers",
      "following_url": "https://api.github.com/users/qwhelan/following{/other_user}",
      "gists_url": "https://api.github.com/users/qwhelan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qwhelan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qwhelan/subscriptions",
      "organizations_url": "https://api.github.com/users/qwhelan/orgs",
      "repos_url": "https://api.github.com/users/qwhelan/repos",
      "events_url": "https://api.github.com/users/qwhelan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qwhelan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-27T19:23:59Z",
    "updated_at": "2018-12-27T19:23:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback `Period.__new__()` calls `_lib.parsers.parse_datetime_string` without passing `yearfirst` or `dayfirst`. When either of these are `None`, `parse_datetime_string` imports `get_option()` and calls it for each missing parameter. This import is done inside the function due to a cyclic dependency and accounts for ~95% of the runtime in simple cases. The gains seen here are mostly due to eliminating an import-per-Period object (the rest is eliminating duplicative `get_option()` calls).\r\n\r\nGiven the desire to keep the signature the same, I dug into breaking the import cycle and think I found a sensible way to break it - this yields a 7x improvement (down from 15x). The short description of the cycle is that importing `get_option()` pulls in essentially all cython extensions via `pandas.io.formats.printing`, which imports `is_sequence()` from `pandas._libs.lib`. My thinking is to move the `is_*()` functions into a `pandas._libs.inference.pyx` module analogous to `pandas.core.dtypes.inference.py` (alternatively, we could guard the import in `pandas.io.formats.printing`). This breaks the cycle, allowing the `get_option` import to be moved into the global scope and lets us have most of the speedup without any API changes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450227118",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24118#issuecomment-450227118",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24118",
    "id": 450227118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDIyNzExOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-27T20:39:50Z",
    "updated_at": "2018-12-27T20:40:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@qwhelan look at how the import is deferred in ``pandas.io.pytables``, e.g. ``_tables()``. not super petty but should work here. basically\r\n\r\n```\r\n_get_option = None\r\n\r\n\r\n\r\ndef get_option():\r\n     global _get_option\r\n     if _get_option is None:\r\n          from pandas.core.config_init import get_option\r\n          _get_option = get_option\r\n     return _get_option\r\n```  \r\n\r\nthen you can use it like\r\n```\r\nday_first = get_option().get(....)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450251366",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24118#issuecomment-450251366",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24118",
    "id": 450251366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDI1MTM2Ng==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-12-27T23:21:33Z",
    "updated_at": "2018-12-29T10:38:47Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24118?src=pr&el=h1) Report\n> Merging [#24118](https://codecov.io/gh/pandas-dev/pandas/pull/24118?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/80295f9483176b1335226680f1b55f09ded9ad46?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24118/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24118?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #24118      +/-   ##\n==========================================\n+ Coverage   92.32%   92.32%   +<.01%     \n==========================================\n  Files         166      166              \n  Lines       52298    52298              \n==========================================\n+ Hits        48285    48286       +1     \n+ Misses       4013     4012       -1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.74% <ø> (ø)` | :arrow_up: |\n| #single | `43.05% <ø> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24118?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/24118/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `87.84% <0%> (+0.09%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24118?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24118?src=pr&el=footer). Last update [80295f9...bd9eddb](https://codecov.io/gh/pandas-dev/pandas/pull/24118?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450251367",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24118#issuecomment-450251367",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24118",
    "id": 450251367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDI1MTM2Nw==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-12-27T23:21:33Z",
    "updated_at": "2018-12-27T23:21:33Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24118?src=pr&el=h1) Report\n> Merging [#24118](https://codecov.io/gh/pandas-dev/pandas/pull/24118?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/3086e0a170934d87b01fa910f371002a55fd07b9?src=pr&el=desc) will **decrease** coverage by `0.1%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24118/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24118?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #24118      +/-   ##\n==========================================\n- Coverage   92.31%    92.2%   -0.11%     \n==========================================\n  Files         163      162       -1     \n  Lines       51987    51703     -284     \n==========================================\n- Hits        47990    47674     -316     \n- Misses       3997     4029      +32\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.6% <ø> (-0.12%)` | :arrow_down: |\n| #single | `43.03% <ø> (+0.03%)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24118?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/io/s3.py](https://codecov.io/gh/pandas-dev/pandas/pull/24118/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL3MzLnB5) | `0% <0%> (-86.37%)` | :arrow_down: |\n| [pandas/io/parquet.py](https://codecov.io/gh/pandas-dev/pandas/pull/24118/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL3BhcnF1ZXQucHk=) | `76.92% <0%> (-7.7%)` | :arrow_down: |\n| [pandas/core/arrays/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/24118/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2Jhc2UucHk=) | `96.77% <0%> (-0.84%)` | :arrow_down: |\n| [pandas/compat/numpy/function.py](https://codecov.io/gh/pandas-dev/pandas/pull/24118/diff?src=pr&el=tree#diff-cGFuZGFzL2NvbXBhdC9udW1weS9mdW5jdGlvbi5weQ==) | `87.13% <0%> (-0.78%)` | :arrow_down: |\n| [pandas/io/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/24118/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2NvbW1vbi5weQ==) | `72.09% <0%> (-0.78%)` | :arrow_down: |\n| [pandas/core/indexes/category.py](https://codecov.io/gh/pandas-dev/pandas/pull/24118/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9jYXRlZ29yeS5weQ==) | `97.9% <0%> (-0.76%)` | :arrow_down: |\n| [pandas/core/indexes/interval.py](https://codecov.io/gh/pandas-dev/pandas/pull/24118/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9pbnRlcnZhbC5weQ==) | `94.73% <0%> (-0.53%)` | :arrow_down: |\n| [pandas/core/tools/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/24118/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvdG9vbHMvZGF0ZXRpbWVzLnB5) | `85.27% <0%> (-0.49%)` | :arrow_down: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/24118/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `87.41% <0%> (-0.43%)` | :arrow_down: |\n| [pandas/core/dtypes/concat.py](https://codecov.io/gh/pandas-dev/pandas/pull/24118/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2NvbmNhdC5weQ==) | `96.63% <0%> (-0.43%)` | :arrow_down: |\n| ... and [39 more](https://codecov.io/gh/pandas-dev/pandas/pull/24118/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24118?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24118?src=pr&el=footer). Last update [3086e0a...c779265](https://codecov.io/gh/pandas-dev/pandas/pull/24118?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450251586",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24118#issuecomment-450251586",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24118",
    "id": 450251586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDI1MTU4Ng==",
    "user": {
      "login": "qwhelan",
      "id": 440095,
      "node_id": "MDQ6VXNlcjQ0MDA5NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/440095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qwhelan",
      "html_url": "https://github.com/qwhelan",
      "followers_url": "https://api.github.com/users/qwhelan/followers",
      "following_url": "https://api.github.com/users/qwhelan/following{/other_user}",
      "gists_url": "https://api.github.com/users/qwhelan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qwhelan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qwhelan/subscriptions",
      "organizations_url": "https://api.github.com/users/qwhelan/orgs",
      "repos_url": "https://api.github.com/users/qwhelan/repos",
      "events_url": "https://api.github.com/users/qwhelan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qwhelan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-27T23:22:53Z",
    "updated_at": "2018-12-27T23:22:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Eliminated the constructor changes and replaced with your suggestion. Also added a new benchmark as the int case before was hitting a special case. Here's the new benchmark comparison:\r\n```\r\n$ asv compare upstream/master HEAD --sort ratio -s\r\n\r\nBenchmarks that have improved:\r\n\r\n       before           after         ratio\r\n     [3086e0a1]       [b0a82749]\r\n-        394±20μs          300±8μs     0.76  period.PeriodConstructor.time_period_constructor('D', False)\r\n-        414±10μs          312±8μs     0.75  period.PeriodConstructor.time_period_constructor('D', True)\r\n-         192±3ms         99.2±3ms     0.52  period.PeriodIndexConstructor.time_from_ints_daily('D', False)\r\n-         194±3ms         95.6±2ms     0.49  period.PeriodIndexConstructor.time_from_ints_daily('D', True)\r\n-         108±2ms         16.8±1ms     0.16  period.PeriodIndexConstructor.time_from_ints('D', False)\r\n-         109±2ms         15.3±1ms     0.14  period.PeriodIndexConstructor.time_from_ints('D', True)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450266789",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24118#issuecomment-450266789",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24118",
    "id": 450266789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDI2Njc4OQ==",
    "user": {
      "login": "qwhelan",
      "id": 440095,
      "node_id": "MDQ6VXNlcjQ0MDA5NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/440095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qwhelan",
      "html_url": "https://github.com/qwhelan",
      "followers_url": "https://api.github.com/users/qwhelan/followers",
      "following_url": "https://api.github.com/users/qwhelan/following{/other_user}",
      "gists_url": "https://api.github.com/users/qwhelan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qwhelan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qwhelan/subscriptions",
      "organizations_url": "https://api.github.com/users/qwhelan/orgs",
      "repos_url": "https://api.github.com/users/qwhelan/repos",
      "events_url": "https://api.github.com/users/qwhelan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qwhelan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-28T01:15:54Z",
    "updated_at": "2018-12-28T01:15:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Updated with whatsnew and comment. There's no specific issue open for this - I believe I stumbled across it while reviewing asv results."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450496427",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24118#issuecomment-450496427",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24118",
    "id": 450496427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDQ5NjQyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-29T14:23:20Z",
    "updated_at": "2018-12-29T14:23:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @qwhelan nice!"
  }
]
