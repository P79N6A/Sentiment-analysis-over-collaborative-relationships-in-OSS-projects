[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3814148",
    "html_url": "https://github.com/pandas-dev/pandas/pull/750#issuecomment-3814148",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/750",
    "id": 3814148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQxNDg=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-04T23:07:33Z",
    "updated_at": "2012-02-04T23:08:15Z",
    "author_association": "MEMBER",
    "body": "Hmm, I'm not sure this needs to be so complicated. Why not just have a `numeric_only` flag (default True, unless all the data are non-numeric) and call either `rank_2d_generic` on the values (if it happens to be `dtype='O'`)? If you do numeric_only=False then it will attempt to call whichever `rank_2d` method on the values matrix is appropriate (and letting failure raise an exception if there are incomparables in the DataFrame)\n\nThis solution is also more consistent with other methods that have a numeric_only flag\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3814208",
    "html_url": "https://github.com/pandas-dev/pandas/pull/750#issuecomment-3814208",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/750",
    "id": 3814208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQyMDg=",
    "user": {
      "login": "adamklein",
      "id": 869232,
      "node_id": "MDQ6VXNlcjg2OTIzMg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/869232?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamklein",
      "html_url": "https://github.com/adamklein",
      "followers_url": "https://api.github.com/users/adamklein/followers",
      "following_url": "https://api.github.com/users/adamklein/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamklein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamklein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamklein/subscriptions",
      "organizations_url": "https://api.github.com/users/adamklein/orgs",
      "repos_url": "https://api.github.com/users/adamklein/repos",
      "events_url": "https://api.github.com/users/adamklein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamklein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-04T23:20:05Z",
    "updated_at": "2012-02-04T23:20:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "About your comment - I wondered about this - but what if some object columns/rows are rank-able and others are not? Won't it then fail unnecessarily (during the 2d argsort/sort in numpy)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3814963",
    "html_url": "https://github.com/pandas-dev/pandas/pull/750#issuecomment-3814963",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/750",
    "id": 3814963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQ5NjM=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-05T01:51:39Z",
    "updated_at": "2012-02-05T01:51:39Z",
    "author_association": "MEMBER",
    "body": "In that case it _should_ fail. I'm saying the logic should probably be\n- `numeric_only=None` (default)\n  - attempt to rank. if fail only rank numeric data\n\notherwise if numeric_only=True use only the numeric data (current behavior) otherwise only use all data (and fail if there are any incomparables)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3815456",
    "html_url": "https://github.com/pandas-dev/pandas/pull/750#issuecomment-3815456",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/750",
    "id": 3815456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTU0NTY=",
    "user": {
      "login": "adamklein",
      "id": 869232,
      "node_id": "MDQ6VXNlcjg2OTIzMg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/869232?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamklein",
      "html_url": "https://github.com/adamklein",
      "followers_url": "https://api.github.com/users/adamklein/followers",
      "following_url": "https://api.github.com/users/adamklein/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamklein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamklein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamklein/subscriptions",
      "organizations_url": "https://api.github.com/users/adamklein/orgs",
      "repos_url": "https://api.github.com/users/adamklein/repos",
      "events_url": "https://api.github.com/users/adamklein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamklein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-05T03:59:51Z",
    "updated_at": "2012-02-05T03:59:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Makes sense, will make those changes\n"
  }
]
