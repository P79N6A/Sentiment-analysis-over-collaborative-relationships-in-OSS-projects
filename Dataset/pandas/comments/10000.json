[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/96782860",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-96782860",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 96782860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2NzgyODYw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-27T19:08:58Z",
    "updated_at": "2015-04-27T19:08:58Z",
    "author_association": "MEMBER",
    "body": "My wish list for pandas 1.0:\n1. Fix `[]`/`__getitem__` (#9595)\n2. Make the index/column distinction less painful (#5677, #8162)\n\nI also have a fantasy world where the pandas Index becomes entirely optional, but that might be too big of a break even for pandas 1.0.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/96789159",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-96789159",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 96789159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2Nzg5MTU5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-27T19:30:25Z",
    "updated_at": "2015-04-27T19:30:25Z",
    "author_association": "MEMBER",
    "body": "I want to add:\n\n3. Clean up the `Index` vs `MultiIndex` API (#3268)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/96792204",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-96792204",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 96792204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2NzkyMjA0",
    "user": {
      "login": "jnmclarty",
      "id": 6062071,
      "node_id": "MDQ6VXNlcjYwNjIwNzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6062071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnmclarty",
      "html_url": "https://github.com/jnmclarty",
      "followers_url": "https://api.github.com/users/jnmclarty/followers",
      "following_url": "https://api.github.com/users/jnmclarty/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnmclarty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnmclarty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnmclarty/subscriptions",
      "organizations_url": "https://api.github.com/users/jnmclarty/orgs",
      "repos_url": "https://api.github.com/users/jnmclarty/repos",
      "events_url": "https://api.github.com/users/jnmclarty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnmclarty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-27T19:39:50Z",
    "updated_at": "2015-04-27T19:40:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "What if, every pnl, df, s, had a mode, that changed the slicing/**getitem** behavior.  One could set the default in the options, and change it on a per-object basis when necessary?  It could allow old-new to transition smoother, plus, get more creative where desired.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/96824720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-96824720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 96824720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2ODI0NzIw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-27T21:16:46Z",
    "updated_at": "2015-04-27T21:16:46Z",
    "author_association": "MEMBER",
    "body": "@jnmclarty A better option would be some sort of flag that could be set per module, similar to a future statement -- changing the way in which a specific DataFrame is queried is just begging for someone to pass it off to an incompatible function. In fact, I just asked if this is possible on StackOverflow: http://stackoverflow.com/questions/29905278/using-future-style-imports-for-module-specific-features-in-python/\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97826802",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-97826802",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 97826802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3ODI2ODAy",
    "user": {
      "login": "djchou",
      "id": 7996484,
      "node_id": "MDQ6VXNlcjc5OTY0ODQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7996484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djchou",
      "html_url": "https://github.com/djchou",
      "followers_url": "https://api.github.com/users/djchou/followers",
      "following_url": "https://api.github.com/users/djchou/following{/other_user}",
      "gists_url": "https://api.github.com/users/djchou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djchou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djchou/subscriptions",
      "organizations_url": "https://api.github.com/users/djchou/orgs",
      "repos_url": "https://api.github.com/users/djchou/repos",
      "events_url": "https://api.github.com/users/djchou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djchou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-30T14:52:13Z",
    "updated_at": "2015-04-30T14:52:31Z",
    "author_association": "NONE",
    "body": "It would be nice if there was an option to have boxplot X axis labels match line plot's X axis labels.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97883557",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-97883557",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 97883557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3ODgzNTU3",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-30T17:09:47Z",
    "updated_at": "2015-04-30T17:09:47Z",
    "author_association": "MEMBER",
    "body": "@djchou is there an existing issue for that? If not, please make one :).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98040042",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-98040042",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 98040042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MDQwMDQy",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T04:13:32Z",
    "updated_at": "2015-05-01T04:13:32Z",
    "author_association": "MEMBER",
    "body": "Congrats on the great package:D\n\nMy wish is:\n- cythonize internals (#163)\n- Parallelize option for some ops, such as groupby / aggregation\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98178079",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-98178079",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 98178079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MTc4MDc5",
    "user": {
      "login": "datnamer",
      "id": 8646471,
      "node_id": "MDQ6VXNlcjg2NDY0NzE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8646471?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datnamer",
      "html_url": "https://github.com/datnamer",
      "followers_url": "https://api.github.com/users/datnamer/followers",
      "following_url": "https://api.github.com/users/datnamer/following{/other_user}",
      "gists_url": "https://api.github.com/users/datnamer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datnamer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datnamer/subscriptions",
      "organizations_url": "https://api.github.com/users/datnamer/orgs",
      "repos_url": "https://api.github.com/users/datnamer/repos",
      "events_url": "https://api.github.com/users/datnamer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datnamer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T17:01:38Z",
    "updated_at": "2015-05-01T17:01:38Z",
    "author_association": "NONE",
    "body": "dplyr like macros: https://github.com/dalejung/naginpy \n\nA guy can wish...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98213106",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-98213106",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 98213106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjEzMTA2",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T19:30:06Z",
    "updated_at": "2015-05-01T19:30:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've been working on problems recently where having groupbys run in parallel would have been great (I think). Also `map`s / `apply`s.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/109583905",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-109583905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 109583905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTU4MzkwNQ==",
    "user": {
      "login": "lexual",
      "id": 410907,
      "node_id": "MDQ6VXNlcjQxMDkwNw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/410907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lexual",
      "html_url": "https://github.com/lexual",
      "followers_url": "https://api.github.com/users/lexual/followers",
      "following_url": "https://api.github.com/users/lexual/following{/other_user}",
      "gists_url": "https://api.github.com/users/lexual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lexual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lexual/subscriptions",
      "organizations_url": "https://api.github.com/users/lexual/orgs",
      "repos_url": "https://api.github.com/users/lexual/repos",
      "events_url": "https://api.github.com/users/lexual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lexual/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-06T14:24:31Z",
    "updated_at": "2015-06-06T14:24:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "ref #1907\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110361598",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-110361598",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 110361598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDM2MTU5OA==",
    "user": {
      "login": "toddrjen",
      "id": 2272878,
      "node_id": "MDQ6VXNlcjIyNzI4Nzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2272878?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toddrjen",
      "html_url": "https://github.com/toddrjen",
      "followers_url": "https://api.github.com/users/toddrjen/followers",
      "following_url": "https://api.github.com/users/toddrjen/following{/other_user}",
      "gists_url": "https://api.github.com/users/toddrjen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toddrjen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toddrjen/subscriptions",
      "organizations_url": "https://api.github.com/users/toddrjen/orgs",
      "repos_url": "https://api.github.com/users/toddrjen/repos",
      "events_url": "https://api.github.com/users/toddrjen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toddrjen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-09T13:47:09Z",
    "updated_at": "2015-06-09T13:47:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "These may be too small, but since this is a wishlist I would like to see some improvements in the consistency of the API.  Some example:\n- More consistent usage of singular vs. plural, for example `index`/`indexes`, `column`/`columns`, and `level`/`levels`.  This includes both the names and whether they accept single values, multiple values, or both.\n- Make sure the `axis` argument is available wherever operations are applied across along an axis.\n- Go through related functions and make sure they have the same arguments in the same order.  For example, for `DataFrame`, `cumsum` has a `skip_na` argument, while `diff` doesn't. \n- If an argument does the same thing as a method, it should have the same name as the method.  So for example `fill_value` should be `fillna`.\n- Try to get the use of underscores more consistent.  For example, in `DataFrame` we have `sort_index` and `sortlevel`, and `is_copy`, `isin`, and `isnull`.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110364651",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-110364651",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 110364651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDM2NDY1MQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-09T14:01:01Z",
    "updated_at": "2015-06-09T14:01:01Z",
    "author_association": "MEMBER",
    "body": "For the record, I'm strongly -1 on @toddrjen's suggestion to rename methods to make the use of underscores more consistent. Even Python 3 didn't clean things up like that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111457447",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-111457447",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 111457447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ1NzQ0Nw==",
    "user": {
      "login": "bwillers",
      "id": 4094953,
      "node_id": "MDQ6VXNlcjQwOTQ5NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4094953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bwillers",
      "html_url": "https://github.com/bwillers",
      "followers_url": "https://api.github.com/users/bwillers/followers",
      "following_url": "https://api.github.com/users/bwillers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bwillers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bwillers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bwillers/subscriptions",
      "organizations_url": "https://api.github.com/users/bwillers/orgs",
      "repos_url": "https://api.github.com/users/bwillers/repos",
      "events_url": "https://api.github.com/users/bwillers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bwillers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T11:23:12Z",
    "updated_at": "2015-06-12T18:25:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Integer columns with missing data support :) \n\nxref #8643\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111467864",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-111467864",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 111467864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ2Nzg2NA==",
    "user": {
      "login": "benjello",
      "id": 1175927,
      "node_id": "MDQ6VXNlcjExNzU5Mjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1175927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjello",
      "html_url": "https://github.com/benjello",
      "followers_url": "https://api.github.com/users/benjello/followers",
      "following_url": "https://api.github.com/users/benjello/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjello/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjello/subscriptions",
      "organizations_url": "https://api.github.com/users/benjello/orgs",
      "repos_url": "https://api.github.com/users/benjello/repos",
      "events_url": "https://api.github.com/users/benjello/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjello/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T11:55:46Z",
    "updated_at": "2015-06-12T11:55:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Allow \"statistics\"l function like count, sum, mean, quantile etc to handle weighted data\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111582390",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-111582390",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 111582390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTU4MjM5MA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T18:30:48Z",
    "updated_at": "2015-06-12T18:30:48Z",
    "author_association": "MEMBER",
    "body": "@bwillers I added a xref to an existing issue where that was discussed\n\n@benjello is there already a github issue for adding weights? If not, please make one :).\n\n@bwillers @benjello The good news is that I don't think either of your suggestions require pandas 1.0. Both could be done incrementally.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111689412",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-111689412",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 111689412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY4OTQxMg==",
    "user": {
      "login": "benjello",
      "id": 1175927,
      "node_id": "MDQ6VXNlcjExNzU5Mjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1175927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjello",
      "html_url": "https://github.com/benjello",
      "followers_url": "https://api.github.com/users/benjello/followers",
      "following_url": "https://api.github.com/users/benjello/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjello/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjello/subscriptions",
      "organizations_url": "https://api.github.com/users/benjello/orgs",
      "repos_url": "https://api.github.com/users/benjello/repos",
      "events_url": "https://api.github.com/users/benjello/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjello/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T09:08:28Z",
    "updated_at": "2015-06-13T17:24:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer #2501 and #10030 are somehow about weights: should I open a new one ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111694677",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-111694677",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 111694677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY5NDY3Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T10:09:24Z",
    "updated_at": "2015-06-13T10:09:24Z",
    "author_association": "MEMBER",
    "body": "@benjello I think we can discuss this further at #10030. That issue is now only about the mean, but would be good to discuss there to which methods we would want to add this functionality. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121096119",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-121096119",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 121096119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTA5NjExOQ==",
    "user": {
      "login": "tgarc",
      "id": 431388,
      "node_id": "MDQ6VXNlcjQzMTM4OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/431388?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tgarc",
      "html_url": "https://github.com/tgarc",
      "followers_url": "https://api.github.com/users/tgarc/followers",
      "following_url": "https://api.github.com/users/tgarc/following{/other_user}",
      "gists_url": "https://api.github.com/users/tgarc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tgarc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tgarc/subscriptions",
      "organizations_url": "https://api.github.com/users/tgarc/orgs",
      "repos_url": "https://api.github.com/users/tgarc/repos",
      "events_url": "https://api.github.com/users/tgarc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tgarc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T00:10:00Z",
    "updated_at": "2015-07-14T22:53:12Z",
    "author_association": "NONE",
    "body": "I wasn't entirely sure where to put this but I've written up a short gist as an IPython notebook on the current state of `MultiIndex`ing with `DataFrames.loc`.\n\nhttps://nbviewer.jupyter.org/gist/tgarc/6c40a65f648302b6b9d7#\n\nWhat is particularly relevant to this discussion is in the [last section](https://nbviewer.jupyter.org/gist/tgarc/6c40a65f648302b6b9d7#ambiguities). Specifically pandas allows,\n\n`df.loc[('foo','bar'), ('one','two'), ('three','four')]` (1)\n\nTo be taken to mean\n\n`df.loc[(('foo','bar'), ('one','two'), ('three','four')), :]`\n\nBut this type of indexing is ambiguous in the case when the number of indexing tuples is 2 since\n\n`df.loc[('foo','bar'), ('one','two')]`\n\ncould mean incomplete indexing as in\n\n`df.loc[(('foo','bar'), ('one','two')),:]`\n\nor row,column indexing. Currently, pandas just interprets this as row, column indexing when there are 2 indexing tuples.\n\nMy feeling is that the incomplete indexing as in (1) shouldn't be allowed for MultiIndex DataFrames because of the aforementioned ambiguity. I'm not sure whether changing this would break other code and hence whether it should be considered a change that should be held off until v1.0.\n\nThis comment and gist is also a summary of some of the discussion that I had with @shoyer and @jonathanrocher at the SciPy sprints.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121157447",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-121157447",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 121157447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTE1NzQ0Nw==",
    "user": {
      "login": "toddrjen",
      "id": 2272878,
      "node_id": "MDQ6VXNlcjIyNzI4Nzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2272878?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toddrjen",
      "html_url": "https://github.com/toddrjen",
      "followers_url": "https://api.github.com/users/toddrjen/followers",
      "following_url": "https://api.github.com/users/toddrjen/following{/other_user}",
      "gists_url": "https://api.github.com/users/toddrjen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toddrjen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toddrjen/subscriptions",
      "organizations_url": "https://api.github.com/users/toddrjen/orgs",
      "repos_url": "https://api.github.com/users/toddrjen/repos",
      "events_url": "https://api.github.com/users/toddrjen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toddrjen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T07:59:09Z",
    "updated_at": "2015-07-14T07:59:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "This may or may not be a good idea, but it may at least be worth thinking about.  Considering that `PanelND` has always been marked as \"experimental\" and not all features support it, and considering the work that has been going on in xray, is `PanelND` something that could be deprecated or dropped for 1.0?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121212752",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-121212752",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 121212752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTIxMjc1Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T11:46:25Z",
    "updated_at": "2015-07-14T11:46:25Z",
    "author_association": "MEMBER",
    "body": "@tgarc Nice overview notebook! (by the way, if you would like to submit parts of that to improve the docs, very welcome!)\n\nPart of what you describe is also discussed here (collapsing index levels or not): #10552 \n\nFor the allowing of 'incomplete' indexing on frames, there is already a warning in docs for this: http://pandas.pydata.org/pandas-docs/stable/advanced.html#using-slicers (the red warning box). So it is explicitly \"allowed, although warned for because of possible ambiguities\" (so not a bug in that sense). \nBut the question is indeed of this is a good idea. It is somewhat convenient that it works in the non-ambiguous cases, but maybe better to not allow this. If we want to discuss this more in detail, probably better to open a separate issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121228635",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-121228635",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 121228635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTIyODYzNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T12:41:24Z",
    "updated_at": "2015-07-14T12:41:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@toddrjen \n\n@shoyer and I have had discussion about this. The proposal is to rename `Xray` -> `pandas-nd`. We can discuss further consolidation at some later point. I think we would then deprecate Panelnd (e.g. 4D and higher) and point to `pandas-nd`. Their are a couple of API issues if we also did this for `Panel`.\n\nMainly I think we would need some conversions, e.g. `to_nd` as a mainline function.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121228843",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-121228843",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 121228843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTIyODg0Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T12:42:54Z",
    "updated_at": "2015-07-14T12:42:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tgarc this was added quite a long time ago as a convenience / magic feature. It is specifically warned about and is a limitation of the python syntax.\n\nThere are times when it can be detected and other times it is ambiguous. I am not sure that we can do anything about it. If people don't read the docs what can you do.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121365610",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-121365610",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 121365610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTM2NTYxMA==",
    "user": {
      "login": "tgarc",
      "id": 431388,
      "node_id": "MDQ6VXNlcjQzMTM4OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/431388?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tgarc",
      "html_url": "https://github.com/tgarc",
      "followers_url": "https://api.github.com/users/tgarc/followers",
      "following_url": "https://api.github.com/users/tgarc/following{/other_user}",
      "gists_url": "https://api.github.com/users/tgarc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tgarc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tgarc/subscriptions",
      "organizations_url": "https://api.github.com/users/tgarc/orgs",
      "repos_url": "https://api.github.com/users/tgarc/repos",
      "events_url": "https://api.github.com/users/tgarc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tgarc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T20:02:52Z",
    "updated_at": "2015-07-15T01:40:35Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche Thanks, I'll look to see if there's an appropriate place to add documentation. Thanks for pointing me to that warning - I admit I didn't know it was there.\n\n@jreback I realize that this is an established feature and that there is a warning about it in the docs but as we were discussing pulling back on the complexity of indexing in the future of pandas, modifying this particular feature seemed like a good opportunity to simplify existing code and restrict the number of ways users can do multi-indexing. I'll give this some more thought and potentially open as a new issue.\n\n**EDIT** opened as issue #10574\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/172090251",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-172090251",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 172090251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjA5MDI1MQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-15T20:55:31Z",
    "updated_at": "2016-01-15T20:55:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is pretty fundamental - probably too much so: changing `.values` to `.data`, so a `DataFrame` can be more pythonic in its dict-like interface.\nref https://github.com/pydata/pandas/issues/12056\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235746241",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-235746241",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 235746241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTc0NjI0MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T22:53:33Z",
    "updated_at": "2016-07-27T22:53:33Z",
    "author_association": "MEMBER",
    "body": "Pinging here on github as well, as I am not sure everybody is aware of the pandas-dev mailing list. But there is currently a thread started by Wes on a pandas 1.0 / future roadmap, and you are certainly welcome to also provide feedback or share ideas.\n\nhttps://mail.python.org/pipermail/pandas-dev/2016-July/000512.html\n\ncc @chris-b1 @gfyoung @MaximilianR @kawochen @janschulz \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236238297",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-236238297",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 236238297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjIzODI5Nw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T17:13:28Z",
    "updated_at": "2016-07-29T17:13:28Z",
    "author_association": "MEMBER",
    "body": "One other major breaking change to consider:\n\nWe should consider making arithmetic between a Series and a DataFrame broadcast across the _columns_ of the dataframe, i.e., aligning `series.index` with `df.index`, rather than the current behavior aligning `series.index` with `df.columns`.\n\nI think this would be far more useful than the current behavior, because it's much more common to want to do arithmetic between a series and all columns of a DataFrame. This would make broadcasting in pandas inconsistent with NumPy, but I think that's OK for a library that focuses on 1D/2D rather than N-dimensional data structures.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238956123",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-238956123",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 238956123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODk1NjEyMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-10T18:19:28Z",
    "updated_at": "2016-08-10T18:19:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some questions for the next couple releases...\n- Is the idea for 1.0 to stabilize the 0.x API, or to drop a handful of larger API-breaking changes? Or are we pushing the API-breaking changes (e.g. fixing `__getitem__`) till 2.0?\n\nActually, that's really my only question. I guess the only followup would be \"what falls into that bucket of large API-breaking changes that are actually feasible?\"\n\nI think now that 1.0 is upon us, we should refocus this issue from \"wishlist\" to \"stuff that's actually going to happen for 1.0\". As we go through issues prepping for 0.19, what's our policy on pushing issues' milestones? Do we push to \"1.0\" or \"Someday\"? I'd lean towards \"Someday\", and only change use 1.0 for stuff that's blockers.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239031550",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-239031550",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 239031550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTAzMTU1MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-10T23:05:48Z",
    "updated_at": "2016-08-10T23:05:48Z",
    "author_association": "MEMBER",
    "body": "> Is the idea for 1.0 to stabilize the 0.x API, or to drop a handful of larger API-breaking changes? Or are we pushing the API-breaking changes (e.g. fixing **getitem**) till 2.0?\n\nAs it is now discussed on the pandas-dev mailing list, I think the conclusion is indeed how you state it here: 1.0 as a stabilization of the current 0.x API, and 2.0 with an internal refactor / larger API changes (eg getitem)\n\n> we should refocus this issue from \"wishlist\" to \"stuff that's actually going to happen for 1.0\"\n\nI think what is discussed in this issue is actually what we now are discussing as changes for 2.0, so I would rather change the milestone, and open an new issue for things we want to do before 1.0\n\n> As we go through issues prepping for 0.19, what's our policy on pushing issues' milestones? Do we push to \"1.0\" or \"Someday\"? I'd lean towards \"Someday\", and only change use 1.0 for stuff that's blockers.\n\n+1, there is also 'next major release', that is often used in the past to push issues to that are not included anymore in the current release. But indeed, I would not rename automatically all issues of 'next major release' to '1.0', but keep the '1.0' milestone to selectively add to issues that we regard as blockers for 1.0\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239037604",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-239037604",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 239037604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTAzNzYwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-10T23:41:37Z",
    "updated_at": "2016-08-10T23:41:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "here's why I have the tags set this way. We have approx 1000 issues under `next major release`. This is really just a placeholder for things to do, that otherwise are not categorized as pie-in-sky `Someday`. \n\nThe way things have been working is to pull issues off of this to a numbered release. IOW, when someone submits a pull-request I mark the issue. Then when the PR is actually merged it gets set with the version number. Otherwise you get a bunch of stale PR's that have version numbers and you have to then go back and manually unassign them.\n\nSame thing with issues. Before I switched to this way (IIRC was 0.15 or 0.16). I would would have to manually go thru each each and reassign it (well, often did it in bulk, but the idea was to review open issues). The 'issue' is that we have a LOT of open issues. They are only semi-prioritized. Prioritizing is quite difficult as resources are not generally available (IOW, there aren't people to 'assign' issues, rather its the reverse, people 'assign' them to themselves).\n\nSo generally newish issues I would assign to the current version number, as time closes to the release, I would push newer issues to `next major release`.  Then would still review open issues that have a version number and push / request help. \n\nThis activity get's quickie bugs fixed, while allowing some semblance of 'newish' issues (IOW those that happened recently).\n\nOf course if anyone has better suggestions on how to manage issues. speak up!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239039378",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10000#issuecomment-239039378",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10000",
    "id": 239039378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTAzOTM3OA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-10T23:52:11Z",
    "updated_at": "2016-08-10T23:52:42Z",
    "author_association": "MEMBER",
    "body": "pandas has basically been operating in Kanban style since its beginning. Issues are marked as \"on deck\" (here: \"next major release\" -- perhaps we could give this a better name like \"approved\", \"on deck\", \"fair game\" -- some issues may be either pie-in-the-sky or have not yet reached consensus about the path forward) with potentially an additional level of prioritization (e.g. blocker) \n\nIt may be a good idea to start thinning down the 1.0 TODO list to things that absolutely must get done. We also need to figure out a procedure for maintaining both a 1.x maintenance branch as well as an unstable 2.0 development branch. I believe that the 2.0 branch can be made to cleanly rebase until the first cut of the internals (libpandas + wrapper classes) stabilizes (which will likely take on the order of months) and can begin to be integrated into `pandas/core`. At some point a more serious divergence will have to take place, at which point \"forward-porting\" bug fixes may become complicated. \n"
  }
]
