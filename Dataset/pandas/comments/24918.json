[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457642454",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24918#issuecomment-457642454",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24918",
    "id": 457642454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzY0MjQ1NA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T17:03:43Z",
    "updated_at": "2019-01-25T17:03:43Z",
    "author_association": "MEMBER",
    "body": "Thanks for the report, though I believe the expectation is wrong. Why should A, E, F or G return anything?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457681281",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24918#issuecomment-457681281",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24918",
    "id": 457681281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzY4MTI4MQ==",
    "user": {
      "login": "BasilBeirouti",
      "id": 10292259,
      "node_id": "MDQ6VXNlcjEwMjkyMjU5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10292259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BasilBeirouti",
      "html_url": "https://github.com/BasilBeirouti",
      "followers_url": "https://api.github.com/users/BasilBeirouti/followers",
      "following_url": "https://api.github.com/users/BasilBeirouti/following{/other_user}",
      "gists_url": "https://api.github.com/users/BasilBeirouti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BasilBeirouti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BasilBeirouti/subscriptions",
      "organizations_url": "https://api.github.com/users/BasilBeirouti/orgs",
      "repos_url": "https://api.github.com/users/BasilBeirouti/repos",
      "events_url": "https://api.github.com/users/BasilBeirouti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BasilBeirouti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T18:51:36Z",
    "updated_at": "2019-01-25T18:52:48Z",
    "author_association": "NONE",
    "body": " @WillAyd A, E and F do though. Why should G be different? Either all of them should return something or none of them should.\r\n\r\nI think it is counterintuitive for a .isin(mylist) to return some rows, and .isin(mylist + [newel]) to return no rows. Adding more elements to the list that pandas is matching on should never result in fewer elements being returned.  \r\n\r\nDo you know if there is a C subroutine the performs the comparisons or if it's in Python?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457690909",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24918#issuecomment-457690909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24918",
    "id": 457690909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzY5MDkwOQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T19:15:34Z",
    "updated_at": "2019-01-25T19:15:49Z",
    "author_association": "MEMBER",
    "body": "> Either all of them should return something or none of them should.\r\n\r\nThat's my point. None of these should return anything\r\n\r\nThe implementation of this for a Series is linked below if you want to take a look\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/83eb2428ceb6257042173582f3f436c2c887aa69/pandas/core/series.py#L3943\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457778641",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24918#issuecomment-457778641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24918",
    "id": 457778641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzc3ODY0MQ==",
    "user": {
      "login": "BasilBeirouti",
      "id": 10292259,
      "node_id": "MDQ6VXNlcjEwMjkyMjU5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10292259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BasilBeirouti",
      "html_url": "https://github.com/BasilBeirouti",
      "followers_url": "https://api.github.com/users/BasilBeirouti/followers",
      "following_url": "https://api.github.com/users/BasilBeirouti/following{/other_user}",
      "gists_url": "https://api.github.com/users/BasilBeirouti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BasilBeirouti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BasilBeirouti/subscriptions",
      "organizations_url": "https://api.github.com/users/BasilBeirouti/orgs",
      "repos_url": "https://api.github.com/users/BasilBeirouti/repos",
      "events_url": "https://api.github.com/users/BasilBeirouti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BasilBeirouti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-26T00:16:24Z",
    "updated_at": "2019-01-26T00:17:14Z",
    "author_association": "NONE",
    "body": "Thanks @WillAyd. I followed that function into the `isin()` implementation in `core/algorithms.py`\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/83eb2428ceb6257042173582f3f436c2c887aa69/pandas/core/algorithms.py#L418\r\n\r\nThat function sees that the series `comps` (which corresponds to `mycol` in my example) is of type int, so it casts `values` (same as `alist` in my example) to int. This throws `ValueError` with example G, but not with the others. The way `ValueError` is handled is to cast both values and comps to python objects and then attempt to compare one last time. \r\n\r\nAt first I thought that example D was returning matches for `'2'` and `4`,  but actually, it is only returning matching rows for `4`. This actually make sense to me. \r\n\r\nSo really what it comes down to is that `.astype('int64')` is all or nothing, meaning that if only one element cannot be cast then no elements will be cast and `ValueError` is thrown. This of course makes sense. \r\n\r\nIterating through each element and casting it is probably not what we want. I can also see why `ValueError` is handled and not returned to the user. So really, I'm not sure if anything should be changed here, although @WillAyd  may prefer to make the comparisons more strict and produce fewer matches. Another option might be to just include a warning message to alert the user that attempting to cast the elements raised a `ValueError`, and that elements were being compared as objects instead. \r\n\r\nIt was a fun rabbit hole to go down, thanks again Will!\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457886045",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24918#issuecomment-457886045",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24918",
    "id": 457886045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzg4NjA0NQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-27T03:32:04Z",
    "updated_at": "2019-01-27T03:32:04Z",
    "author_association": "MEMBER",
    "body": "@BasilBeirouti thanks a lot for investigating! Looking at the line you've called out I get the impression this is an unintended consequence of that exception handling\r\n\r\ncc @jreback in case he knows of something I don't and/or objects to making this comparison stricter"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457888781",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24918#issuecomment-457888781",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24918",
    "id": 457888781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzg4ODc4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-27T04:45:43Z",
    "updated_at": "2019-01-27T04:45:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "this takes a pretty tricky path of code and sometimes we call out to numpy which has some weird inference rules\r\n\r\nit’s possible might be a bug - it’s also somewhat performance sensitive"
  }
]
