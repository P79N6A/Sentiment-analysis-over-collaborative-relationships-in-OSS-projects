[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72416224",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9394#issuecomment-72416224",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9394",
    "id": 72416224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDE2MjI0",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-02T07:34:14Z",
    "updated_at": "2015-02-02T07:34:14Z",
    "author_association": "MEMBER",
    "body": "To help narrow this down: do you see the same behavior if you just import `numpy` or `scipy`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72438108",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9394#issuecomment-72438108",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9394",
    "id": 72438108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDM4MTA4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-02T10:51:48Z",
    "updated_at": "2015-02-02T10:51:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "pandas doesn't create a thread pool at all, but does create a single global thread local to handle some caching for date format parsing.\n`numexpr` and `blosc` (used by `pytables` and others IIRC) implcity use threading/multi-cores to do work.\n\nIt is typical to setup a thread pool at import time as this is a global resource.\n\nSince these threads are not actually doing anything unless the code for them takes over, how does this actually matter? how is this unclean? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72477816",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9394#issuecomment-72477816",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9394",
    "id": 72477816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDc3ODE2",
    "user": {
      "login": "thomasj02",
      "id": 2532431,
      "node_id": "MDQ6VXNlcjI1MzI0MzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2532431?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thomasj02",
      "html_url": "https://github.com/thomasj02",
      "followers_url": "https://api.github.com/users/thomasj02/followers",
      "following_url": "https://api.github.com/users/thomasj02/following{/other_user}",
      "gists_url": "https://api.github.com/users/thomasj02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thomasj02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thomasj02/subscriptions",
      "organizations_url": "https://api.github.com/users/thomasj02/orgs",
      "repos_url": "https://api.github.com/users/thomasj02/repos",
      "events_url": "https://api.github.com/users/thomasj02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thomasj02/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-02T15:40:16Z",
    "updated_at": "2015-02-02T15:40:16Z",
    "author_association": "NONE",
    "body": "Numpy does create some BLAS threads by default, but if I set OMP_NUM_THREADS=1 and NUMEXPR_NUM_THREADS=1 I don't see extra threads:\n\n```\n$ export NUMEXPR_NUM_THREADS=1\n$ export OMP_NUM_THREADS=1\n$ gdb python\n(gdb) run\nStarting program: /usr/bin/python \n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nPython 2.7.6 (default, Mar 22 2014, 22:59:56) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import numpy\n>>> import scipy\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72478390",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9394#issuecomment-72478390",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9394",
    "id": 72478390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDc4Mzkw",
    "user": {
      "login": "thomasj02",
      "id": 2532431,
      "node_id": "MDQ6VXNlcjI1MzI0MzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2532431?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thomasj02",
      "html_url": "https://github.com/thomasj02",
      "followers_url": "https://api.github.com/users/thomasj02/followers",
      "following_url": "https://api.github.com/users/thomasj02/following{/other_user}",
      "gists_url": "https://api.github.com/users/thomasj02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thomasj02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thomasj02/subscriptions",
      "organizations_url": "https://api.github.com/users/thomasj02/orgs",
      "repos_url": "https://api.github.com/users/thomasj02/repos",
      "events_url": "https://api.github.com/users/thomasj02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thomasj02/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-02T15:43:21Z",
    "updated_at": "2015-02-02T15:43:21Z",
    "author_association": "NONE",
    "body": "Apologies for the huge stacktrace below, but you can see that after setting the environment variables, at least some of the new threads are blosc-related stuff created by what looks like pandas.io:\n\n```\n(gdb) b __pthread_create_2_1\nFunction \"__pthread_create_2_1\" not defined.\nMake breakpoint pending on future shared library load? (y or [n]) y\nBreakpoint 1 (__pthread_create_2_1) pending.\n(gdb) run\nStarting program: /usr/bin/python \n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nPython 2.7.6 (default, Mar 22 2014, 22:59:56) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from pandas.tslib import Timestamp\n\nBreakpoint 1, __pthread_create_2_1 (newthread=newthread@entry=0x7fffec5f2fa0 <threads>, \n    attr=attr@entry=0x7fffec5f2b60 <ct_attr>, start_routine=start_routine@entry=0x7fffec3d17d0 <t_blosc>, \n    arg=arg@entry=0x7fffec5f2ba0 <tids>) at pthread_create.c:466\n466 pthread_create.c: No such file or directory.\n(gdb) bt\n#0  __pthread_create_2_1 (newthread=newthread@entry=0x7fffec5f2fa0 <threads>, attr=attr@entry=0x7fffec5f2b60 <ct_attr>, \n    start_routine=start_routine@entry=0x7fffec3d17d0 <t_blosc>, arg=arg@entry=0x7fffec5f2ba0 <tids>) at pthread_create.c:466\n#1  0x00007fffec3d2242 in init_threads () at c-blosc/blosc/blosc.c:1562\n#2  blosc_set_nthreads_ (nthreads_new=nthreads_new@entry=8) at c-blosc/blosc/blosc.c:1645\n#3  0x00007fffec3d2e45 in blosc_set_nthreads (nthreads_new=8) at c-blosc/blosc/blosc.c:1596\n#4  0x00007fffec3d098b in PyBlosc_set_nthreads (self=<optimized out>, args=<optimized out>) at blosc/blosc_extension.c:38\n#5  0x000000000052c6d5 in call_function (oparg=<optimized out>, pp_stack=0x7fffffffc030) at ../Python/ceval.c:4020\n#6  PyEval_EvalFrameEx (f=f@entry=\n    Frame 0x7fffedb55e50, for file /usr/local/lib/python2.7/dist-packages/blosc/toplevel.py, line 95, in set_nthreads (nthreads=8), throwflag=throwflag@entry=0) at ../Python/ceval.c:2666\n#7  0x000000000052cf32 in fast_function (nk=<optimized out>, na=<optimized out>, n=1, pp_stack=0x7fffffffc170, \n    func=<function at remote 0x7fffec8438c0>) at ../Python/ceval.c:4106\n#8  call_function (oparg=<optimized out>, pp_stack=0x7fffffffc170) at ../Python/ceval.c:4041\n#9  PyEval_EvalFrameEx (\n    f=f@entry=Frame 0x139b050, for file /usr/local/lib/python2.7/dist-packages/blosc/__init__.py, line 52, in <module> (), \n    throwflag=throwflag@entry=0) at ../Python/ceval.c:2666\n#10 0x000000000055c594 in PyEval_EvalCodeEx (co=0x7fffec845e30, globals=<optimized out>, locals=<optimized out>, \n    args=<optimized out>, argcount=<optimized out>, kws=<optimized out>, kwcount=0, defs=0x0, defcount=0, closure=0x0)\n    at ../Python/ceval.c:3252\n#11 0x00000000005b7392 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>)\n    at ../Python/ceval.c:667\n#12 0x00000000005b744a in PyImport_ExecCodeModuleEx (name=name@entry=0x14dcd7a \"blosc\", \n    co=co@entry=<code at remote 0x7fffec845e30>, \n    pathname=pathname@entry=0x14ec430 \"/usr/local/lib/python2.7/dist-packages/blosc/__init__.pyc\") at ../Python/import.c:709\n#13 0x0000000000579f0f in load_source_module.39194 (name=name@entry=0x14dcd7a \"blosc\", \n    pathname=0x14ec430 \"/usr/local/lib/python2.7/dist-packages/blosc/__init__.pyc\", \n    pathname@entry=0x14eb420 \"/usr/local/lib/python2.7/dist-packages/blosc/__init__.py\", fp=<optimized out>)\n    at ../Python/import.c:1099\n#14 0x00000000005b7541 in load_module.39237 (name=name@entry=0x14dcd7a \"blosc\", fp=<optimized out>, \n    pathname=pathname@entry=0x14eb420 \"/usr/local/lib/python2.7/dist-packages/blosc/__init__.py\", type=<optimized out>, \n    loader=loader@entry=0x0) at ../Python/import.c:1906\n#15 0x000000000046b0e7 in load_package.39273 (name=name@entry=0x14dcd7a \"blosc\", \n    pathname=pathname@entry=0x14ddd80 \"/usr/local/lib/python2.7/dist-packages/blosc\") at ../Python/import.c:1166\n#16 0x00000000005b75bd in load_module.39237 (name=name@entry=0x14dcd7a \"blosc\", fp=<optimized out>, \n    pathname=pathname@entry=0x14ddd80 \"/usr/local/lib/python2.7/dist-packages/blosc\", type=<optimized out>, \n    loader=<optimized out>) at ../Python/import.c:1920\n#17 0x000000000055d3a3 in import_submodule.39248 (mod=mod@entry=None, subname=subname@entry=0x14dcd7a \"blosc\", \n    fullname=fullname@entry=0x14dcd7a \"blosc\") at ../Python/import.c:2700\n#18 0x000000000055d830 in load_next (mod=<module at remote 0x7fffef32ba28>, altmod=None, p_name=p_name@entry=0x7fffffffc560, \n    buf=buf@entry=0x14dcd70 \"pandas.io.blosc\", p_buflen=p_buflen@entry=0x7fffffffc570) at ../Python/import.c:2519\n#19 0x000000000055db37 in import_module_level.isra.3 (level=-1, fromlist=None, globals=<optimized out>, name=0x0)\n    at ../Python/import.c:2224\n---Type <return> to continue, or q <return> to quit---\n#20 PyImport_ImportModuleLevel (name=<optimized out>, globals=<optimized out>, locals=<optimized out>, fromlist=None, \n    level=-1) at ../Python/import.c:2288\n#21 0x00000000004755e7 in builtin___import__.32997 (self=<optimized out>, args=<optimized out>, kwds=<optimized out>)\n    at ../Python/bltinmodule.c:49\n#22 0x00000000004da20b in PyObject_Call (kw=0x0, \n    arg=('blosc', {'Index': <type at remote 0x1052620>, 'SparsePanel': <type at remote 0x1350880>, 'make_block': <function at remote 0x7fffee9eb938>, 'PY3': False, 'Panel4D': <type at remote 0x10cc070>, 'DataFrame': <type at remote 0x12ba690>, 'datetime': <type at remote 0x7ffff549ca00>, 'parse': <function at remote 0x7ffff07f4e60>, '_Packer': <type at remote 0x7fffec811e20>, 'SparseSeries': <type at remote 0x1347830>, 'IntIndex': <type at remote 0x7fffeef2dc80>, 'PeriodIndex': <type at remote 0xba9fa0>, 'BlockManager': <type at remote 0x1131170>, 'compat': <module at remote 0x7ffff0b0c2b8>, 'DatetimeIndex': <type at remote 0x10a0b70>, '_Unpacker': <type at remote 0x7fffec811b80>, 'Timestamp': <type at remote 0xe9fbe0>, 'NDFrame': <type at remote 0x114d3c0>, '__package__': 'pandas.io', 'Float64Index': <type at remote 0x1055a70>, 'NaT': <NaTType at remote 0x7ffff0ec2750>, 'np': <module at remote 0x7ffff4318bb0>, '__doc__': '\\nMsgpack serializer support for reading and writing pandas data structures\\nto disk\\n', 'Panel...(truncated), func=<built-in function __import__>) at ../Objects/abstract.c:2529\n#23 PyEval_CallObjectWithKeywords (func=func@entry=<built-in function __import__>, \n    arg=arg@entry=('blosc', {'Index': <type at remote 0x1052620>, 'SparsePanel': <type at remote 0x1350880>, 'make_block': <function at remote 0x7fffee9eb938>, 'PY3': False, 'Panel4D': <type at remote 0x10cc070>, 'DataFrame': <type at remote 0x12ba690>, 'datetime': <type at remote 0x7ffff549ca00>, 'parse': <function at remote 0x7ffff07f4e60>, '_Packer': <type at remote 0x7fffec811e20>, 'SparseSeries': <type at remote 0x1347830>, 'IntIndex': <type at remote 0x7fffeef2dc80>, 'PeriodIndex': <type at remote 0xba9fa0>, 'BlockManager': <type at remote 0x1131170>, 'compat': <module at remote 0x7ffff0b0c2b8>, 'DatetimeIndex': <type at remote 0x10a0b70>, '_Unpacker': <type at remote 0x7fffec811b80>, 'Timestamp': <type at remote 0xe9fbe0>, 'NDFrame': <type at remote 0x114d3c0>, '__package__': 'pandas.io', 'Float64Index': <type at remote 0x1055a70>, 'NaT': <NaTType at remote 0x7ffff0ec2750>, 'np': <module at remote 0x7ffff4318bb0>, '__doc__': '\\nMsgpack serializer support for reading and writing pandas data structures\\nto disk\\n', 'Panel...(truncated), kw=kw@entry=0x0) at ../Python/ceval.c:3889\n#24 0x000000000052e6d7 in PyEval_EvalFrameEx (\n    f=f@entry=Frame 0x7fffee15bd38, for file /usr/local/lib/python2.7/dist-packages/pandas/io/packers.py, line 67, in <module> (), throwflag=throwflag@entry=0) at ../Python/ceval.c:2333\n#25 0x000000000055c594 in PyEval_EvalCodeEx (co=0x7fffec8458b0, globals=<optimized out>, locals=<optimized out>, \n    args=<optimized out>, argcount=<optimized out>, kws=<optimized out>, kwcount=0, defs=0x0, defcount=0, closure=0x0)\n    at ../Python/ceval.c:3252\n#26 0x00000000005b7392 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>)\n    at ../Python/ceval.c:667\n#27 0x00000000005b744a in PyImport_ExecCodeModuleEx (name=name@entry=0xf3cf80 \"pandas.io.packers\", \n    co=co@entry=<code at remote 0x7fffec8458b0>, \n    pathname=pathname@entry=0x14e0db0 \"/usr/local/lib/python2.7/dist-packages/pandas/io/packers.pyc\")\n    at ../Python/import.c:709\n#28 0x0000000000579f0f in load_source_module.39194 (name=name@entry=0xf3cf80 \"pandas.io.packers\", \n    pathname=0x14e0db0 \"/usr/local/lib/python2.7/dist-packages/pandas/io/packers.pyc\", \n    pathname@entry=0x133b600 \"/usr/local/lib/python2.7/dist-packages/pandas/io/packers.py\", fp=<optimized out>)\n    at ../Python/import.c:1099\n#29 0x00000000005b7541 in load_module.39237 (name=name@entry=0xf3cf80 \"pandas.io.packers\", fp=<optimized out>, \n    pathname=pathname@entry=0x133b600 \"/usr/local/lib/python2.7/dist-packages/pandas/io/packers.py\", type=<optimized out>, \n---Type <return> to continue, or q <return> to quit---\n    loader=<optimized out>) at ../Python/import.c:1906\n#30 0x000000000055d3a3 in import_submodule.39248 (mod=mod@entry=<module at remote 0x7fffef32ba28>, \n    subname=subname@entry=0xf3cf8a \"packers\", fullname=0xf3cf80 \"pandas.io.packers\") at ../Python/import.c:2700\n#31 0x000000000055d77c in load_next (mod=mod@entry=<module at remote 0x7fffef32ba28>, \n    altmod=altmod@entry=<module at remote 0x7fffef32ba28>, p_name=p_name@entry=0x7fffffffcb30, \n    buf=buf@entry=0xf3cf80 \"pandas.io.packers\", p_buflen=p_buflen@entry=0x7fffffffcb40) at ../Python/import.c:2515\n#32 0x000000000055e054 in import_module_level.isra.3 (level=<optimized out>, fromlist=('read_msgpack', 'to_msgpack'), \n    globals=<optimized out>, name=0x0) at ../Python/import.c:2232\n#33 PyImport_ImportModuleLevel (name=<optimized out>, globals=<optimized out>, locals=<optimized out>, \n    fromlist=('read_msgpack', 'to_msgpack'), level=<optimized out>) at ../Python/import.c:2288\n#34 0x00000000004755e7 in builtin___import__.32997 (self=<optimized out>, args=<optimized out>, kwds=<optimized out>)\n    at ../Python/bltinmodule.c:49\n#35 0x00000000004da20b in PyObject_Call (kw=0x0, \n    arg=('pandas.io.packers', {'read_sql': <function at remote 0x7fffec82a488>, 'read_table': <function at remote 0x7fffee162230>, 'read_html': <function at remote 0x7fffec81d668>, 'ExcelWriter': <ABCMeta(engine=<abstractproperty(__doc__='name of engine') at remote 0x7fffee173808>, check_extension=<classmethod at remote 0x7fffee17f328>, __module__='pandas.io.excel', __abstractmethods__=frozenset(['engine', 'save', 'write_cells', 'supported_extensions']), __exit__=<function at remote 0x7fffee1806e0>, _abc_negative_cache=<WeakSet(_remove=<function at remote 0x7fffee180848>, _pending_removals=[], _iterating=set([]), data=set([])) at remote 0x7fffee179950>, path=None, __dict__=<getset_descriptor at remote 0x7fffee17c5f0>, close=<function at remote 0x7fffee180758>, __weakref__=<getset_descriptor at remote 0x7fffee17c638>, __init__=<function at remote 0x7fffee180500>, _abc_cache=<WeakSet(_remove=<function at remote 0x7fffee1807d0>, _pending_removals=[], _iterating=set([]), data=set([])) at remote 0x7fffee1798d0>, supported...(truncated), func=<built-in function __import__>) at ../Objects/abstract.c:2529\n#36 PyEval_CallObjectWithKeywords (func=func@entry=<built-in function __import__>, \n    arg=arg@entry=('pandas.io.packers', {'read_sql': <function at remote 0x7fffec82a488>, 'read_table': <function at remote 0x7fffee162230>, 'read_html': <function at remote 0x7fffec81d668>, 'ExcelWriter': <ABCMeta(engine=<abstractproperty(__doc__='name of engine') at remote 0x7fffee173808>, check_extension=<classmethod at remote 0x7fffee17f328>, __module__='pandas.io.excel', __abstractmethods__=frozenset(['engine', 'save', 'write_cells', 'supported_extensions']), __exit__=<function at remote 0x7fffee1806e0>, _abc_negative_cache=<WeakSet(_remove=<function at remote 0x7fffee180848>, _pending_removals=[], _iterating=set([]), data=set([])) at remote 0x7fffee179950>, path=None, __dict__=<getset_descriptor at remote 0x7fffee17c5f0>, close=<function at remote 0x7fffee180758>, __weakref__=<getset_descriptor at remote 0x7fffee17c638>, __init__=<function at remote 0x7fffee180500>, _abc_cache=<WeakSet(_remove=<function at remote 0x7fffee1807d0>, _pending_removals=[], _iterating=set([]), data=set([])) at remote 0x7fffee1798d0>, supported...(truncated), kw=kw@entry=0x0) at ../Python/ceval.c:3889\n#37 0x000000000052e6d7 in PyEval_EvalFrameEx (\n    f=f@entry=Frame 0x7ffff0832560, for file /usr/local/lib/python2.7/dist-packages/pandas/io/api.py, line 14, in <module> (), throwflag=throwflag@entry=0) at ../Python/ceval.c:2333\n#38 0x000000000055c594 in PyEval_EvalCodeEx (co=0x7fffeefbe2b0, globals=<optimized out>, locals=<optimized out>, \n    args=<optimized out>, argcount=<optimized out>, kws=<optimized out>, kwcount=0, defs=0x0, defcount=0, closure=0x0)\n    at ../Python/ceval.c:3252\n#39 0x00000000005b7392 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>)\n    at ../Python/ceval.c:667\n#40 0x00000000005b744a in PyImport_ExecCodeModuleEx (name=name@entry=0xa14b80 \"pandas.io.api\", \n    co=co@entry=<code at remote 0x7fffeefbe2b0>, \n---Type <return> to continue, or q <return> to quit---\n    pathname=pathname@entry=0x1359f00 \"/usr/local/lib/python2.7/dist-packages/pandas/io/api.pyc\") at ../Python/import.c:709\n#41 0x0000000000579f0f in load_source_module.39194 (name=name@entry=0xa14b80 \"pandas.io.api\", \n    pathname=0x1359f00 \"/usr/local/lib/python2.7/dist-packages/pandas/io/api.pyc\", \n    pathname@entry=0x10b4590 \"/usr/local/lib/python2.7/dist-packages/pandas/io/api.py\", fp=<optimized out>)\n    at ../Python/import.c:1099\n#42 0x00000000005b7541 in load_module.39237 (name=name@entry=0xa14b80 \"pandas.io.api\", fp=<optimized out>, \n    pathname=pathname@entry=0x10b4590 \"/usr/local/lib/python2.7/dist-packages/pandas/io/api.py\", type=<optimized out>, \n    loader=<optimized out>) at ../Python/import.c:1906\n#43 0x000000000055d3a3 in import_submodule.39248 (mod=mod@entry=<module at remote 0x7fffef32ba28>, \n    subname=subname@entry=0xa14b8a \"api\", fullname=0xa14b80 \"pandas.io.api\") at ../Python/import.c:2700\n#44 0x000000000055d77c in load_next (mod=mod@entry=<module at remote 0x7fffef32ba28>, \n    altmod=altmod@entry=<module at remote 0x7fffef32ba28>, p_name=p_name@entry=0x7fffffffd100, \n    buf=buf@entry=0xa14b80 \"pandas.io.api\", p_buflen=p_buflen@entry=0x7fffffffd110) at ../Python/import.c:2515\n#45 0x000000000055e054 in import_module_level.isra.3 (level=<optimized out>, fromlist=('*',), globals=<optimized out>, \n    name=0x0) at ../Python/import.c:2232\n#46 PyImport_ImportModuleLevel (name=<optimized out>, globals=<optimized out>, locals=<optimized out>, fromlist=('*',), \n    level=<optimized out>) at ../Python/import.c:2288\n#47 0x00000000004755e7 in builtin___import__.32997 (self=<optimized out>, args=<optimized out>, kwds=<optimized out>)\n    at ../Python/bltinmodule.c:49\n#48 0x00000000004da20b in PyObject_Call (kw=0x0, \n    arg=('pandas.io.api', {'SparseArray': <type at remote 0x1175460>, 'expanding_median': <function at remote 0x7fffee1902a8>, 'ewmvol': <function at remote 0x7fffee18e230>, 'Categorical': <type at remote 0x10c4830>, 'LooseVersion': <classobj at remote 0x7ffff07e7808>, 'datetime': <type at remote 0x7ffff549ca00>, '__path__': ['/usr/local/lib/python2.7/dist-packages/pandas'], 'computation': <module at remote 0x7fffeef6d6a8>, 'to_timedelta': <function at remote 0x7fffee9eb758>, 'expanding_corr': <function at remote 0x7fffee190848>, 'expanding_quantile': <function at remote 0x7fffee190758>, 'rolling_corr': <function at remote 0x7fffee200cf8>, 'rolling_apply': <function at remote 0x7fffee18ed70>, 'tseries': <module at remote 0x7fffef34ac58>, 'save': <function at remote 0x7ffff04b7e60>, 'match': <function at remote 0x7fffef0bd410>, 'bdate_range': <function at remote 0x7fffef041320>, 'expanding_cov': <function at remote 0x7fffee1907d0>, '__file__': '/usr/local/lib/python2.7/dist-packages/pandas/__init__.pyc', 'util': <modu...(truncated), func=<built-in function __import__>) at ../Objects/abstract.c:2529\n#49 PyEval_CallObjectWithKeywords (func=func@entry=<built-in function __import__>, \n    arg=arg@entry=('pandas.io.api', {'SparseArray': <type at remote 0x1175460>, 'expanding_median': <function at remote 0x7fffee1902a8>, 'ewmvol': <function at remote 0x7fffee18e230>, 'Categorical': <type at remote 0x10c4830>, 'LooseVersion': <classobj at remote 0x7ffff07e7808>, 'datetime': <type at remote 0x7ffff549ca00>, '__path__': ['/usr/local/lib/python2.7/dist-packages/pandas'], 'computation': <module at remote 0x7fffeef6d6a8>, 'to_timedelta': <function at remote 0x7fffee9eb758>, 'expanding_corr': <function at remote 0x7fffee190848>, 'expanding_quantile': <function at remote 0x7fffee190758>, 'rolling_corr': <function at remote 0x7fffee200cf8>, 'rolling_apply': <function at remote 0x7fffee18ed70>, 'tseries': <module at remote 0x7fffef34ac58>, 'save': <function at remote 0x7ffff04b7e60>, 'match': <function at remote 0x7fffef0bd410>, 'bdate_range': <function at remote 0x7fffef041320>, 'expanding_cov': <function at remote 0x7fffee1907d0>, '__file__': '/usr/local/lib/python2.7/dist-packages/pandas/__init__.pyc', 'util': <modu...(truncated), kw=kw@entry=0x0) at ../Python/ceval.c:3889\n#50 0x000000000052e6d7 in PyEval_EvalFrameEx (\n    f=f@entry=Frame 0x7ffff42e5218, for file /usr/local/lib/python2.7/dist-packages/pandas/__init__.py, line 53, in <module> (), throwflag=throwflag@entry=0) at ../Python/ceval.c:2333\n---Type <return> to continue, or q <return> to quit---\n#51 0x000000000055c594 in PyEval_EvalCodeEx (co=0x7ffff4315630, globals=<optimized out>, locals=<optimized out>, \n    args=<optimized out>, argcount=<optimized out>, kws=<optimized out>, kwcount=0, defs=0x0, defcount=0, closure=0x0)\n    at ../Python/ceval.c:3252\n#52 0x00000000005b7392 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>)\n    at ../Python/ceval.c:667\n#53 0x00000000005b744a in PyImport_ExecCodeModuleEx (name=name@entry=0xb15530 \"pandas\", \n    co=co@entry=<code at remote 0x7ffff4315630>, \n    pathname=pathname@entry=0xa0fcc0 \"/usr/local/lib/python2.7/dist-packages/pandas/__init__.pyc\") at ../Python/import.c:709\n#54 0x0000000000579f0f in load_source_module.39194 (name=name@entry=0xb15530 \"pandas\", \n    pathname=0xa0fcc0 \"/usr/local/lib/python2.7/dist-packages/pandas/__init__.pyc\", \n    pathname@entry=0xa9ca30 \"/usr/local/lib/python2.7/dist-packages/pandas/__init__.py\", fp=<optimized out>)\n    at ../Python/import.c:1099\n#55 0x00000000005b7541 in load_module.39237 (name=name@entry=0xb15530 \"pandas\", fp=<optimized out>, \n    pathname=pathname@entry=0xa9ca30 \"/usr/local/lib/python2.7/dist-packages/pandas/__init__.py\", type=<optimized out>, \n    loader=loader@entry=0x0) at ../Python/import.c:1906\n#56 0x000000000046b0e7 in load_package.39273 (name=name@entry=0xb15530 \"pandas\", \n    pathname=pathname@entry=0xa2f6d0 \"/usr/local/lib/python2.7/dist-packages/pandas\") at ../Python/import.c:1166\n#57 0x00000000005b75bd in load_module.39237 (name=name@entry=0xb15530 \"pandas\", fp=<optimized out>, \n    pathname=pathname@entry=0xa2f6d0 \"/usr/local/lib/python2.7/dist-packages/pandas\", type=<optimized out>, \n    loader=<optimized out>) at ../Python/import.c:1920\n#58 0x000000000055d3a3 in import_submodule.39248 (mod=mod@entry=None, subname=subname@entry=0xb15530 \"pandas\", \n    fullname=0xb15530 \"pandas\") at ../Python/import.c:2700\n#59 0x000000000055d77c in load_next (mod=None, altmod=None, p_name=p_name@entry=0x7fffffffd720, \n    buf=buf@entry=0xb15530 \"pandas\", p_buflen=p_buflen@entry=0x7fffffffd730) at ../Python/import.c:2515\n#60 0x000000000055db37 in import_module_level.isra.3 (level=-1, fromlist=('Timestamp',), globals=<optimized out>, \n    name=0x7ffff4318333 \"tslib\") at ../Python/import.c:2224\n#61 PyImport_ImportModuleLevel (name=<optimized out>, globals=<optimized out>, locals=<optimized out>, \n    fromlist=('Timestamp',), level=-1) at ../Python/import.c:2288\n#62 0x00000000004755e7 in builtin___import__.32997 (self=<optimized out>, args=<optimized out>, kwds=<optimized out>)\n    at ../Python/bltinmodule.c:49\n#63 0x00000000004da20b in PyObject_Call (kw=0x0, \n    arg=('pandas.tslib', {'__builtins__': <module at remote 0x7ffff7f82b08>, '__name__': '__main__', '__doc__': None, '__package__': None}, {...}, ('Timestamp',)), func=<built-in function __import__>) at ../Objects/abstract.c:2529\n#64 PyEval_CallObjectWithKeywords (func=func@entry=<built-in function __import__>, \n    arg=arg@entry=('pandas.tslib', {'__builtins__': <module at remote 0x7ffff7f82b08>, '__name__': '__main__', '__doc__': None, '__package__': None}, {...}, ('Timestamp',)), kw=kw@entry=0x0) at ../Python/ceval.c:3889\n#65 0x000000000052e6d7 in PyEval_EvalFrameEx (f=f@entry=Frame 0x7ffff7e2edd0, for file <stdin>, line 1, in <module> (), \n    throwflag=throwflag@entry=0) at ../Python/ceval.c:2333\n#66 0x000000000055c594 in PyEval_EvalCodeEx (co=0x7ffff7e71330, globals=<optimized out>, locals=<optimized out>, \n    args=<optimized out>, argcount=<optimized out>, kws=<optimized out>, kwcount=0, defs=0x0, defcount=0, closure=0x0)\n    at ../Python/ceval.c:3252\n#67 0x00000000005b7392 in PyEval_EvalCode (co=co@entry=0x7ffff7e71330, \n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72483152",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9394#issuecomment-72483152",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9394",
    "id": 72483152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDgzMTUy",
    "user": {
      "login": "thomasj02",
      "id": 2532431,
      "node_id": "MDQ6VXNlcjI1MzI0MzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2532431?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thomasj02",
      "html_url": "https://github.com/thomasj02",
      "followers_url": "https://api.github.com/users/thomasj02/followers",
      "following_url": "https://api.github.com/users/thomasj02/following{/other_user}",
      "gists_url": "https://api.github.com/users/thomasj02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thomasj02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thomasj02/subscriptions",
      "organizations_url": "https://api.github.com/users/thomasj02/orgs",
      "repos_url": "https://api.github.com/users/thomasj02/repos",
      "events_url": "https://api.github.com/users/thomasj02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thomasj02/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-02T16:08:38Z",
    "updated_at": "2015-02-02T16:08:38Z",
    "author_association": "NONE",
    "body": "@jreback  The particular use case that's causing me trouble is when I use a thread pinning tool like likwid-pin (https://code.google.com/p/likwid/). Likwid does round-robin allocation of threads onto CPU cores. But since there are a ton of extra threads created by Pandas, I have to try to trick likwid into putting the \"real\" threads on distinct cores while ignoring the Pandas threads. \n\nI use likwid as an example, but it would be just as much of a pain for any other general-purpose thread pinning tool.\n\nYou could imagine other problems, like increased script run time due to thread creation / destruction when running a very large number of small python tasks.\n\nI think a simple solution would be to have Pandas take XXX_NUM_THREADS settings for all the multithreaded libraries it uses. \n\nA better solution would make Pandas not pull in all sorts of extra machinery when you just import a simple class (e.g., Timestamp)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72585050",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9394#issuecomment-72585050",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9394",
    "id": 72585050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTg1MDUw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-03T03:11:40Z",
    "updated_at": "2015-02-03T03:11:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "well as I said\npandss doesn't use threads\nthe dependencies do\n\nso \na) can't do anything about this\nb) this is thread pool creation not actual thread creation\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72586577",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9394#issuecomment-72586577",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9394",
    "id": 72586577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTg2NTc3",
    "user": {
      "login": "thomasj02",
      "id": 2532431,
      "node_id": "MDQ6VXNlcjI1MzI0MzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2532431?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thomasj02",
      "html_url": "https://github.com/thomasj02",
      "followers_url": "https://api.github.com/users/thomasj02/followers",
      "following_url": "https://api.github.com/users/thomasj02/following{/other_user}",
      "gists_url": "https://api.github.com/users/thomasj02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thomasj02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thomasj02/subscriptions",
      "organizations_url": "https://api.github.com/users/thomasj02/orgs",
      "repos_url": "https://api.github.com/users/thomasj02/repos",
      "events_url": "https://api.github.com/users/thomasj02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thomasj02/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-03T03:29:20Z",
    "updated_at": "2015-02-03T03:29:20Z",
    "author_association": "NONE",
    "body": "Yeah, you're probably right that the solution of not importing the entire world when small classes are imported is the better way to go.\n"
  }
]
