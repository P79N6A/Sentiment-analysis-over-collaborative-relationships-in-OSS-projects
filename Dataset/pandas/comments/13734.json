[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234201206",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13734#issuecomment-234201206",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13734",
    "id": 234201206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDIwMTIwNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T09:20:22Z",
    "updated_at": "2016-07-21T09:20:22Z",
    "author_association": "MEMBER",
    "body": "I think this performance difference is expected (of course, it can always be that each of both implementations can be optimized). \n`nunique` is a specific method that is optimized to do what it has to do, while passing a function to `agg` is a very generic method to deal with all kinds of functions. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234202630",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13734#issuecomment-234202630",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13734",
    "id": 234202630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDIwMjYzMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T09:26:09Z",
    "updated_at": "2016-07-21T09:26:09Z",
    "author_association": "MEMBER",
    "body": "What is maybe surprising is the large difference when applying a generic function in `agg` depending on the object vs categorical column what you report in the SO question.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234215352",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13734#issuecomment-234215352",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13734",
    "id": 234215352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDIxNTM1Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T10:24:04Z",
    "updated_at": "2016-07-21T10:24:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is not surprising at all :)\n\nwhen you agg/apply with a lambda, pandas must interate over the individual groups, thus you have `O(num_of_groups)` with an `O(function)` complexity.\n\n`.nunique` has a particularly optimized impl for an entire pandas object as this is part of calculating the groupby in the first place, so the difference here is more stark.\n\nUsing an explicity function is ALWAYS, full-stop, preferred.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234219786",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13734#issuecomment-234219786",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13734",
    "id": 234219786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDIxOTc4Ng==",
    "user": {
      "login": "FlavienMakesInfographics",
      "id": 13651925,
      "node_id": "MDQ6VXNlcjEzNjUxOTI1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13651925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FlavienMakesInfographics",
      "html_url": "https://github.com/FlavienMakesInfographics",
      "followers_url": "https://api.github.com/users/FlavienMakesInfographics/followers",
      "following_url": "https://api.github.com/users/FlavienMakesInfographics/following{/other_user}",
      "gists_url": "https://api.github.com/users/FlavienMakesInfographics/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FlavienMakesInfographics/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FlavienMakesInfographics/subscriptions",
      "organizations_url": "https://api.github.com/users/FlavienMakesInfographics/orgs",
      "repos_url": "https://api.github.com/users/FlavienMakesInfographics/repos",
      "events_url": "https://api.github.com/users/FlavienMakesInfographics/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FlavienMakesInfographics/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T10:47:24Z",
    "updated_at": "2016-07-21T10:47:24Z",
    "author_association": "NONE",
    "body": "@jreback Would you also have an explanation for the difference of performance with `lambda` functions when applied to object and categorical columns, as I was asking on [stackoverflow](http://stackoverflow.com/questions/38496930/performance-of-groupby-when-dealing-with-category-type-in-pandas)? Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234233356",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13734#issuecomment-234233356",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13734",
    "id": 234233356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDIzMzM1Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T12:00:20Z",
    "updated_at": "2016-07-21T12:00:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "that is one of the benefits of a `categorical` :)\n\nwe _already_ know the uniques (the categories), so counting them is easy, compared to first finding & then comparing for `object`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234234099",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13734#issuecomment-234234099",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13734",
    "id": 234234099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDIzNDA5OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T12:04:18Z",
    "updated_at": "2016-07-21T12:04:18Z",
    "author_association": "MEMBER",
    "body": "@jreback the categorical is a lot slower in this case ... (although the `nunique` itself is faster on a categorical, applying it in a lambda and combining the result in a a groupby for a categorical column is slower)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234234603",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13734#issuecomment-234234603",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13734",
    "id": 234234603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDIzNDYwMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T12:07:04Z",
    "updated_at": "2016-07-21T12:07:04Z",
    "author_association": "MEMBER",
    "body": "The example of SO:\n\n```\n\nIn [48]: a = np.random.choice(['a', 'A'], size=100000)\n    ...: b = np.random.choice(range(10000), size=100000)\n    ...:\n    ...: df = pd.DataFrame(data=dict(A1=a, A2=a, B=b))\n    ...: df['A2'] = df.A2.astype('category')\n\nIn [50]: %tmeit df['A1'].nunique()\nERROR:root:Line magic function `%tmeit` not found.\n\nIn [51]: %timeit df['A1'].nunique()\n100 loops, best of 3: 4.71 ms per loop\n\nIn [52]: %timeit df['A2'].nunique()\n1000 loops, best of 3: 1.32 ms per loop\n\nIn [53]:  %timeit df.groupby(by='B').agg(dict(A1=lambda s: s.nunique()))\n1 loop, best of 3: 1.7 s per loop\n\nIn [54]: %timeit df.groupby(by='B').agg(dict(A2=lambda s: s.nunique()))\n1 loop, best of 3: 5.52 s per loop\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234235384",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13734#issuecomment-234235384",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13734",
    "id": 234235384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDIzNTM4NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T12:11:19Z",
    "updated_at": "2016-07-21T12:11:57Z",
    "author_association": "MEMBER",
    "body": "Which is probably cause by the fact that each of the groups is rather small, and for smaller frames, a categorical nunique is not faster but shows some overhead:\n\n```\nIn [58]: group1 = df.groupby(by='B').get_group(1)\n\nIn [59]: group1\nOut[59]:\n      A1 A2  B\n2618   a  a  1\n11259  a  a  1\n15889  a  a  1\n47883  a  a  1\n60714  a  a  1\n82558  a  a  1\n98286  A  A  1\n\nIn [60]: %timeit group1['A1'].nunique()\n10000 loops, best of 3: 69.8 µs per loop\n\nIn [61]: %timeit group1['A2'].nunique()\n1000 loops, best of 3: 361 µs per loop\n```\n\n@FlavienMakesInfographics  so that is the reason it is slower. But in any case, you shouldn't use `agg` in this case with a lambda function\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234430820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13734#issuecomment-234430820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13734",
    "id": 234430820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDQzMDgyMA==",
    "user": {
      "login": "FlavienMakesInfographics",
      "id": 13651925,
      "node_id": "MDQ6VXNlcjEzNjUxOTI1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13651925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FlavienMakesInfographics",
      "html_url": "https://github.com/FlavienMakesInfographics",
      "followers_url": "https://api.github.com/users/FlavienMakesInfographics/followers",
      "following_url": "https://api.github.com/users/FlavienMakesInfographics/following{/other_user}",
      "gists_url": "https://api.github.com/users/FlavienMakesInfographics/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FlavienMakesInfographics/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FlavienMakesInfographics/subscriptions",
      "organizations_url": "https://api.github.com/users/FlavienMakesInfographics/orgs",
      "repos_url": "https://api.github.com/users/FlavienMakesInfographics/repos",
      "events_url": "https://api.github.com/users/FlavienMakesInfographics/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FlavienMakesInfographics/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T01:24:06Z",
    "updated_at": "2016-07-22T01:24:06Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche Thank you very much for the explanation and the piece of advice.\n"
  }
]
