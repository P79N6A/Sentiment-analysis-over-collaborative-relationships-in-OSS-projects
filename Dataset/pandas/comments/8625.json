[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60432669",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8625#issuecomment-60432669",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8625",
    "id": 60432669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDMyNjY5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-24T18:52:39Z",
    "updated_at": "2014-11-02T06:14:59Z",
    "author_association": "MEMBER",
    "body": "Sounds good to me. As a reminder: here is the `IntervalIndex` proposal: #7640\n\nLet's consider whether you should be able to control whether the level and right margins are closed/open separately or if you should only be able to say `closed='left'` or `closed='right'`. I am inclined to go for the later since it will be more complex for other cases in `IntervalIndex`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60434507",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8625#issuecomment-60434507",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8625",
    "id": 60434507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDM0NTA3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-24T19:06:13Z",
    "updated_at": "2014-10-24T19:06:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer\n\nyou could also do\n\n`Interval(left,right,closed='left|right|both|neither')` I guess for full compat (and could have both constructors I guess)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60470397",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8625#issuecomment-60470397",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8625",
    "id": 60470397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDcwMzk3",
    "user": {
      "login": "jnmclarty",
      "id": 6062071,
      "node_id": "MDQ6VXNlcjYwNjIwNzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6062071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnmclarty",
      "html_url": "https://github.com/jnmclarty",
      "followers_url": "https://api.github.com/users/jnmclarty/followers",
      "following_url": "https://api.github.com/users/jnmclarty/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnmclarty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnmclarty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnmclarty/subscriptions",
      "organizations_url": "https://api.github.com/users/jnmclarty/orgs",
      "repos_url": "https://api.github.com/users/jnmclarty/repos",
      "events_url": "https://api.github.com/users/jnmclarty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnmclarty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-25T03:40:56Z",
    "updated_at": "2014-10-25T03:40:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Idea: `def __init__(leftside='[',leftnum=0,rightnum=0,rightside=']')`\n\nThen...\n\n`Interval('[',left,right,']') == Interval('closed',left,right,'closed') == Interval(leftnum=left,rightnum=right)`\n\ncould subclass and create `left(leftside,leftnum)` and `right(rightnum, rightside)`, so that `left('(',-1) + right(2,']') == Interval('(',-1,2,']')`\n\n...but individually they would repr to `(-1,inf]` and `[-inf,2]`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60635553",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8625#issuecomment-60635553",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8625",
    "id": 60635553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjM1NTUz",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-27T17:38:37Z",
    "updated_at": "2014-10-27T17:38:37Z",
    "author_association": "MEMBER",
    "body": "One follow up thought: if we support `closed='both'` and `closed='neither'` we don't want the want the repr to look like `[-1.5, 0]` or `(-1.5, 0)`. Probably better to repr to the more verbose `Interval(-1.5, 0, closed='both')` for these cases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60731926",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8625#issuecomment-60731926",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8625",
    "id": 60731926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzMxOTI2",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T09:56:36Z",
    "updated_at": "2014-10-28T09:56:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Why this verbose repr? In repr of a dataframe (as index or values), I would expect that I only get the \"short\" repr...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60808826",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8625#issuecomment-60808826",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8625",
    "id": 60808826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODA4ODI2",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T18:41:06Z",
    "updated_at": "2014-10-28T18:41:06Z",
    "author_association": "MEMBER",
    "body": "The problem is ambiguity with list and tuple, at least as long as the array has dtype=object.\n\nOn Tue, Oct 28, 2014 at 2:56 AM, Jan Schulz notifications@github.com\nwrote:\n\n> ## Why this verbose repr? In repr of a dataframe (as index or values), I would expect that I only get the \"short\" repr...\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/pydata/pandas/issues/8625#issuecomment-60731926\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61022053",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8625#issuecomment-61022053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8625",
    "id": 61022053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDIyMDUz",
    "user": {
      "login": "jnmclarty",
      "id": 6062071,
      "node_id": "MDQ6VXNlcjYwNjIwNzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6062071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnmclarty",
      "html_url": "https://github.com/jnmclarty",
      "followers_url": "https://api.github.com/users/jnmclarty/followers",
      "following_url": "https://api.github.com/users/jnmclarty/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnmclarty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnmclarty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnmclarty/subscriptions",
      "organizations_url": "https://api.github.com/users/jnmclarty/orgs",
      "repos_url": "https://api.github.com/users/jnmclarty/repos",
      "events_url": "https://api.github.com/users/jnmclarty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnmclarty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-29T23:19:14Z",
    "updated_at": "2014-10-29T23:19:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could clear up the ambiguity with dash ( or even double dash ).  Nobody should confuse \"(0 - 2)\" with a tuple.  Nor would \"[0 - 2]\" be confused with a list.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61397913",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8625#issuecomment-61397913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8625",
    "id": 61397913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzk3OTEz",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-02T09:17:56Z",
    "updated_at": "2014-11-02T09:18:21Z",
    "author_association": "MEMBER",
    "body": "Rough draft implementation up for review in #8707.\n\nTurns out `closed='neither'` and `closed='both'` are probably not harder cases for `IntervalIndex` than `'left'`/`'right'`. But I still like the constructor `Interval(left, right, closed='right')`.\n\nWe could also have a `to_interval` function like `to_datetime` that parses strings, e.g., `to_interval('(0, 1]')` -> `Interval(0, 1, closed='right')` (lists of strings would turn into `IntervalIndex`).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61629100",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8625#issuecomment-61629100",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8625",
    "id": 61629100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjI5MTAw",
    "user": {
      "login": "jnmclarty",
      "id": 6062071,
      "node_id": "MDQ6VXNlcjYwNjIwNzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6062071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnmclarty",
      "html_url": "https://github.com/jnmclarty",
      "followers_url": "https://api.github.com/users/jnmclarty/followers",
      "following_url": "https://api.github.com/users/jnmclarty/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnmclarty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnmclarty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnmclarty/subscriptions",
      "organizations_url": "https://api.github.com/users/jnmclarty/orgs",
      "repos_url": "https://api.github.com/users/jnmclarty/repos",
      "events_url": "https://api.github.com/users/jnmclarty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnmclarty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-04T11:54:15Z",
    "updated_at": "2014-11-04T11:54:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for `to_interval('(0,1]')`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61764111",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8625#issuecomment-61764111",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8625",
    "id": 61764111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzY0MTEx",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T06:09:57Z",
    "updated_at": "2014-11-05T06:09:57Z",
    "author_association": "MEMBER",
    "body": "Here's another design question: how should comparison operations work with intervals?\n\nMy initial thought was to support all comparisons operations, but when I attempted to write it, I realized that it's not obvious to me what the result of `0.5 < Interval(0, 1)` should be (it's even less clear when both values are intervals). \n\nSo, my current proposal is that we _do not_ actually want to support support most comparisons with intervals. Instead, we should encourage users to write things like `0.5 < interval.left`. The only comparison like operations we want to define are `__eq__`/`__ne__`, for comparing two intervals objects (e.g., `Interval(0, 1) == Interval(0, 1)`), and `__contains__`, for checking if a scalar value is contained in an interval (e.g., `0.5 in Interval(0, 1)`).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61766147",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8625#issuecomment-61766147",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8625",
    "id": 61766147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzY2MTQ3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T06:41:09Z",
    "updated_at": "2014-11-05T06:41:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure\n\nthough you will need to provide an ordering in used for IntervalIndex\n\neg imagine spitting these though it's sort of trivial:\n\ni = IntervalIndex(...)\ni.take(...) equiv to IntervalIndex(_left=i._left.take(), _righti._right.take())\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61766999",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8625#issuecomment-61766999",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8625",
    "id": 61766999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzY2OTk5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T06:54:06Z",
    "updated_at": "2014-11-05T06:54:06Z",
    "author_association": "MEMBER",
    "body": "So after testing out this alternative, I have now waffled back to defining comparison operations -- otherwise we can't get sorting to work, even in cases of non-overlapping intervals. I would like set operations like union to be able to sort, at least in unambiguous cases, and I don't see any other obvious way to do this.\n\n@jreback I'm not sure I understand your point about take.\n"
  }
]
