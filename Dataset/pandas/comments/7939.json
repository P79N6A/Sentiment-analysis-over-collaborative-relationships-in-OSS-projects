[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51190587",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51190587",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51190587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTkwNTg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T12:30:35Z",
    "updated_at": "2014-08-05T12:30:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "`None` is a real value, and you are using this on an `object` dtyped series. On other dtypes this works fine. Not sure that this is possible to deal with. How do you know that I don't want to store `None` in `s3[0] = None` (as apposed to `NaN`) above?\n\nrelated is this: https://github.com/pydata/pandas/pull/7657 (this has to do with a mixed-dtype frame)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51190918",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51190918",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51190918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTkwOTE4",
    "user": {
      "login": "Wilfred",
      "id": 70800,
      "node_id": "MDQ6VXNlcjcwODAw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/70800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Wilfred",
      "html_url": "https://github.com/Wilfred",
      "followers_url": "https://api.github.com/users/Wilfred/followers",
      "following_url": "https://api.github.com/users/Wilfred/following{/other_user}",
      "gists_url": "https://api.github.com/users/Wilfred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Wilfred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Wilfred/subscriptions",
      "organizations_url": "https://api.github.com/users/Wilfred/orgs",
      "repos_url": "https://api.github.com/users/Wilfred/repos",
      "events_url": "https://api.github.com/users/Wilfred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Wilfred/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T12:34:05Z",
    "updated_at": "2014-08-05T12:34:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've edited to clarify that I was expecting None in my Series. I do want to store None.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51191445",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51191445",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51191445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTkxNDQ1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T12:39:43Z",
    "updated_at": "2014-08-05T12:39:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "why do you want to actually store `None`? `NaN` is the missing value indicator\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51192705",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51192705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51192705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTkyNzA1",
    "user": {
      "login": "Wilfred",
      "id": 70800,
      "node_id": "MDQ6VXNlcjcwODAw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/70800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Wilfred",
      "html_url": "https://github.com/Wilfred",
      "followers_url": "https://api.github.com/users/Wilfred/followers",
      "following_url": "https://api.github.com/users/Wilfred/following{/other_user}",
      "gists_url": "https://api.github.com/users/Wilfred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Wilfred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Wilfred/subscriptions",
      "organizations_url": "https://api.github.com/users/Wilfred/orgs",
      "repos_url": "https://api.github.com/users/Wilfred/repos",
      "events_url": "https://api.github.com/users/Wilfred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Wilfred/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T12:52:40Z",
    "updated_at": "2014-08-05T12:52:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's useful to store None when we're putting database data in pandas Series objects.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51192787",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51192787",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51192787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTkyNzg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T12:53:31Z",
    "updated_at": "2014-08-05T12:53:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "`to_sql` does this conversion for you.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51193694",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51193694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51193694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTkzNjk0",
    "user": {
      "login": "Wilfred",
      "id": 70800,
      "node_id": "MDQ6VXNlcjcwODAw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/70800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Wilfred",
      "html_url": "https://github.com/Wilfred",
      "followers_url": "https://api.github.com/users/Wilfred/followers",
      "following_url": "https://api.github.com/users/Wilfred/following{/other_user}",
      "gists_url": "https://api.github.com/users/Wilfred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Wilfred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Wilfred/subscriptions",
      "organizations_url": "https://api.github.com/users/Wilfred/orgs",
      "repos_url": "https://api.github.com/users/Wilfred/repos",
      "events_url": "https://api.github.com/users/Wilfred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Wilfred/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T13:01:56Z",
    "updated_at": "2014-08-05T13:01:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "We're not using a SQL database I'm afraid.\n\nI've opened pull request #7941 to show one possible solution.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51195750",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51195750",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51195750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTk1NzUw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T13:20:33Z",
    "updated_at": "2014-08-05T13:20:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is actually consistent now. With both series/frame having the same behavior, e.g. they presereve. None when `inplace=False` and convert when `inplace=True`. Further complicating this is a straight setitem `s[0] = None` works now, with no conversion at all.\n\nSo unless a comprehensive soln exists, can't do anything about this. I'll leave this issue open and if you want to address pls do so.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51206643",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51206643",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51206643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjA2NjQz",
    "user": {
      "login": "Wilfred",
      "id": 70800,
      "node_id": "MDQ6VXNlcjcwODAw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/70800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Wilfred",
      "html_url": "https://github.com/Wilfred",
      "followers_url": "https://api.github.com/users/Wilfred/followers",
      "following_url": "https://api.github.com/users/Wilfred/following{/other_user}",
      "gists_url": "https://api.github.com/users/Wilfred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Wilfred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Wilfred/subscriptions",
      "organizations_url": "https://api.github.com/users/Wilfred/orgs",
      "repos_url": "https://api.github.com/users/Wilfred/repos",
      "events_url": "https://api.github.com/users/Wilfred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Wilfred/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T14:40:42Z",
    "updated_at": "2014-08-05T14:40:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Are you sure it's consistent? I'm seeing different behaviour between Series and DataFrame:\n\n```\nIn [1]: import pandas\n\nIn [2]: s = pandas.Series(['a', 'b', 'c'])\n\nIn [3]: s[s == 'a'] = None\n\nIn [4]: s\nOut[4]: \n0    NaN\n1      b\n2      c\ndtype: object\n\nIn [5]: df = pandas.DataFrame(['a', 'b', 'c'], columns=['letter'])\n\nIn [6]: df[df['letter'] == 'a'] = None\n\nIn [7]: df\nOut[7]: \n  letter\n0   None\n1      b\n2      c\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51207900",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51207900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51207900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjA3OTAw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T14:48:50Z",
    "updated_at": "2014-08-05T14:48:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "you are showing different operations actually (I know it doesn't look like it). But the dataframe case is across multiple columns so that is de-factor `df.loc[indexer,:] = value`. which is different.\n\ndon't get me wrong I would like 100% consistency too. But you should have to look at ALL the cases. Probably some are simply not tested.\n\nIf you would ilke to do that great.\n\n`NaN` is the missing indexer. `None` is treated similarly but its nearly impossible to always distinguish this, and that's the basic problem. You should not use `None` if at all possible.\n\nGenerally `None` is coerced on construction as well. I think we should ALWAYS coerce it. But some of the existing tests require it to work in the indexers.\n\nWe are at a hybrid state. I don't think this should move, unless it moves completely, iow, test and move evrything to ALWAYS coerce `None` (its almost their, just some residual cases).\n\nYour usecase can be 'fixed' by just using `.values`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51216508",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51216508",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51216508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjE2NTA4",
    "user": {
      "login": "Wilfred",
      "id": 70800,
      "node_id": "MDQ6VXNlcjcwODAw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/70800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Wilfred",
      "html_url": "https://github.com/Wilfred",
      "followers_url": "https://api.github.com/users/Wilfred/followers",
      "following_url": "https://api.github.com/users/Wilfred/following{/other_user}",
      "gists_url": "https://api.github.com/users/Wilfred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Wilfred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Wilfred/subscriptions",
      "organizations_url": "https://api.github.com/users/Wilfred/orgs",
      "repos_url": "https://api.github.com/users/Wilfred/repos",
      "events_url": "https://api.github.com/users/Wilfred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Wilfred/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T15:46:37Z",
    "updated_at": "2014-08-05T15:46:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Neither Series nor DataFrame seem to coerce None to NaN on construction, unless the other values are all numeric.\n\n```\nIn [1]: import pandas\np\nIn [2]: pandas.Series([None, 'a', 'b'])\nOut[2]: \n0    None\n1       a\n2       b\ndtype: object\n\nIn [3]: pandas.DataFrame([None, 'a', 'b'])\nOut[3]: \n      0\n0  None\n1     a\n2     b\n```\n\nIn principle, would you accept a patch that consistently supported inserting None values in an arbitrary pandas data types that contains objects?\n\nIf pandas were to always coerce None, we'd be in an awkward situation where pandas allowed any arbitrary Python object, except None.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51219458",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51219458",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51219458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjE5NDU4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T16:06:47Z",
    "updated_at": "2014-08-05T16:06:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not sure why you are keen on using `None` at all, where `np.nan`  is the de-facto standard for all missing value types for `object`/`numeric` (and `NaT` for datetimelike). You are trying to change what is all long established for missing values.\n\nagain, what is the purpose here? internally I see no reason to try to integrate `None` when `np.nan` serves this purpose quite well. \n\nWe are talking about some left-cover instances of non-conversion only. Which to be honest should prob be cleaned up.\n\n`None` exists on conversion because its ambiguous to convert it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51219705",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51219705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51219705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjE5NzA1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T16:08:16Z",
    "updated_at": "2014-08-05T16:08:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "see here for full docs on working with strings: http://pandas.pydata.org/pandas-docs/stable/basics.html#vectorized-string-methods\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51234590",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51234590",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51234590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjM0NTkw",
    "user": {
      "login": "ranchotexicana",
      "id": 8365770,
      "node_id": "MDQ6VXNlcjgzNjU3NzA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8365770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ranchotexicana",
      "html_url": "https://github.com/ranchotexicana",
      "followers_url": "https://api.github.com/users/ranchotexicana/followers",
      "following_url": "https://api.github.com/users/ranchotexicana/following{/other_user}",
      "gists_url": "https://api.github.com/users/ranchotexicana/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ranchotexicana/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ranchotexicana/subscriptions",
      "organizations_url": "https://api.github.com/users/ranchotexicana/orgs",
      "repos_url": "https://api.github.com/users/ranchotexicana/repos",
      "events_url": "https://api.github.com/users/ranchotexicana/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ranchotexicana/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T17:56:10Z",
    "updated_at": "2014-08-05T17:56:10Z",
    "author_association": "NONE",
    "body": "Hi, \n\nSorry to wade in late, but I've been having this issue as well.\n\n```\ndf = pd.Series(['A','B','C'])\n\ndf[df != 'A'] = None\n\ndf\nOut[1]: \n0      A\n1    NaN\n2    NaN\ndtype: object\n\ndf[df != 'A'] = [None]\n\ndf\nOut[1]: \n0       A\n1    None\n2    None\ndtype: object\n```\n\nIt seems inconsistent. Having read most of the discussion up above, I'm puzzled as to why you (jreback) think that None is ambiguous to convert? Numpy has it clearly defined (see below), so I don't know why pandas would go to lengths of deliberately changing it to a nan in the 'object' array case.\n\n```\na = [None]\n\nnp.array(a, dtype='float')\nOut[1]: array([ nan])\n\nnp.array(a, dtype='object')\nOut[1]: array([None], dtype=object)\n\nnp.array(a, dtype='datetime64[ns]')\nOut[1]: array(['NaT'], dtype='datetime64[ns]')\n```\n\nAlso, the first of my examples errors at the point of `df[df != 'A'] = [None]` if df is a DataFrame as all of a sudden it is unable to broadcast. Is this inconsistency between DataFrames and Series with 1 column really intended?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51235471",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51235471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51235471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjM1NDcx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T18:02:18Z",
    "updated_at": "2014-08-05T18:02:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ranchotexicana \n\nyou are setting 2 values to a list of a single value `[None]`. What would expect to happen here?\nthat is very different than setting a scalar on the right-hand side which can be broadcast.\n\nTheir could be a bug here (always possible of course). But `None` is sometimes treated as a null value and sometimes not. Its oftentimes tricky to distinguish when to do this. I am `np.nan` is the sole missing value indictator. I think the acceptance of `None` was (a while ago) was an accomodation as people will naturally put in `None`. That is what is ambiguous, is it a missing value or not. (and when and how to treat it as such).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51288863",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51288863",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51288863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjg4ODYz",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T03:07:53Z",
    "updated_at": "2014-08-06T03:07:53Z",
    "author_association": "MEMBER",
    "body": "@jreback I think the point is that `None` _is_ a valid Python object that one might want to put in object arrays -- which is indeed a slightly unusual use case, but a legitimate one. I don't think anyone disagrees that `np.nan` should be the sole missing value.\n\nIt may be too late to change this now thanks to backwards compatibility, but I think there is a reasonable case that `None` should not be coerced if the target array has `dtype=object`. But there are plenty of implications, e.g., `pd.isnull(None)` should become `False`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51292787",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51292787",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51292787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjkyNzg3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T04:33:41Z",
    "updated_at": "2014-08-06T04:33:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Using loc this works (surprisingly?) i.e. doesn't convert to NaN:\n\n```\nIn [11]: s = pd.Series(['a', 'b', 'c'])\n\nIn [12]: s.loc[s == 'a'] = None\n\nIn [13]: s\nOut[13]: \n0    None\n1       b\n2       c\ndtype: object\n```\n\n_IMO You ought to be using loc and assignment rather than \"inplace\" flags (which are not guaranteed to  actually be \"inplace\" anyways)!_\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51307104",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51307104",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51307104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzA3MTA0",
    "user": {
      "login": "Wilfred",
      "id": 70800,
      "node_id": "MDQ6VXNlcjcwODAw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/70800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Wilfred",
      "html_url": "https://github.com/Wilfred",
      "followers_url": "https://api.github.com/users/Wilfred/followers",
      "following_url": "https://api.github.com/users/Wilfred/following{/other_user}",
      "gists_url": "https://api.github.com/users/Wilfred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Wilfred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Wilfred/subscriptions",
      "organizations_url": "https://api.github.com/users/Wilfred/orgs",
      "repos_url": "https://api.github.com/users/Wilfred/repos",
      "events_url": "https://api.github.com/users/Wilfred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Wilfred/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T08:30:57Z",
    "updated_at": "2014-08-06T08:30:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer is it necessary to change the behaviour of `pd.isnull`? It would be possible to just not call `pd.isnull` when `dtype=object`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51353012",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51353012",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51353012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzUzMDEy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T15:42:19Z",
    "updated_at": "2014-08-06T15:42:19Z",
    "author_association": "MEMBER",
    "body": "@jreback A possible usecase to have None is here: http://stackoverflow.com/questions/23353732/python-pandas-write-to-sql-with-nan-values/23358894#23358894 (converting all NaNs to None before writing to a database, although this use case comes from a current limitation of pandas itself ..)\n\nA comment I got there leads to this inconsistency:\n\n```\nIn [87]: df = pd.DataFrame({'float':[1,2.2,np.nan], 'string':['a', np.nan, 'b'], 'datetime':pd.to_datetime(['2012-01-01', '2012-01-02', np.nan])})\n\nIn [88]: df\nOut[88]:\n    datetime  float string\n0 2012-01-01    1.0      a\n1 2012-01-02    2.2    NaN\n2        NaT    NaN      b\n\nIn [89]: df.where(pd.notnull(df), None)\nOut[89]:\n    datetime float string\n0 2012-01-01     1      a\n1 2012-01-02   2.2   None\n2        NaT  None      b\n```\n\nSo object and float `NaN` is converted to `None`, datetime `NaT` not (open a seperate issue?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51353277",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51353277",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51353277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzUzMjc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T15:44:07Z",
    "updated_at": "2014-08-06T15:45:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Wilfred I think in order to change anything (and I am not really sure what exactly is the correct behavior), when/how/should `None` be missing and coerced to `np.nan` and when should it not.\n\nWe need a full set of tests to simply validate current behavior (right or wrong). and a case by case of when to coerce to `np.nan`.\n\nNote: this is really ONLY true for `object` dtypes. It is clear that coercion HAS to happen for all other dtypes (either to `NaT` or `NaN`), OR, the coercion actually changes the dtype to `object` (as above usecase from @jorisvandenbossche )\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51923562",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7939#issuecomment-51923562",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7939",
    "id": 51923562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTIzNTYy",
    "user": {
      "login": "Wilfred",
      "id": 70800,
      "node_id": "MDQ6VXNlcjcwODAw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/70800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Wilfred",
      "html_url": "https://github.com/Wilfred",
      "followers_url": "https://api.github.com/users/Wilfred/followers",
      "following_url": "https://api.github.com/users/Wilfred/following{/other_user}",
      "gists_url": "https://api.github.com/users/Wilfred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Wilfred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Wilfred/subscriptions",
      "organizations_url": "https://api.github.com/users/Wilfred/orgs",
      "repos_url": "https://api.github.com/users/Wilfred/repos",
      "events_url": "https://api.github.com/users/Wilfred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Wilfred/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T14:43:24Z",
    "updated_at": "2014-08-12T14:43:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed, coercion should probably do the following:\n- Coerce None to nan for containers with numeric types\n- Coerce None to NaT for containers with datetimes\n- Preserve None otherwise\n\nI've updated #7941 to reflect this, and to test it more thoroughly.\n"
  }
]
