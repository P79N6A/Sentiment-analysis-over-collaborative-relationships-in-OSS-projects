[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373046514",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373046514",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373046514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzA0NjUxNA==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-14T14:44:42Z",
    "updated_at": "2018-05-02T05:33:59Z",
    "author_association": "NONE",
    "body": "Hello @h-vetinari! Thanks for updating the PR.\n\n\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on May 02, 2018 at 05:33 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373057410",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373057410",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373057410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzA1NzQxMA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-14T15:13:36Z",
    "updated_at": "2018-03-15T09:36:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just realised that due to the API-change, a what's-new entry is probably needed somewhere?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373111383",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373111383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373111383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzExMTM4Mw==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-03-14T17:39:59Z",
    "updated_at": "2018-05-02T06:21:17Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20347?src=pr&el=h1) Report\n> Merging [#20347](https://codecov.io/gh/pandas-dev/pandas/pull/20347?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/c4da79b5b322c73d8e61d1cb98ac4ab1e2438b40?src=pr&el=desc) will **increase** coverage by `0.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/20347/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/20347?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #20347      +/-   ##\n==========================================\n+ Coverage   91.79%   91.81%   +0.01%     \n==========================================\n  Files         153      153              \n  Lines       49411    49478      +67     \n==========================================\n+ Hits        45359    45429      +70     \n+ Misses       4052     4049       -3\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.21% <100%> (+0.01%)` | :arrow_up: |\n| #single | `41.85% <4%> (-0.06%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/20347?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/strings.py](https://codecov.io/gh/pandas-dev/pandas/pull/20347/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc3RyaW5ncy5weQ==) | `98.63% <100%> (+0.28%)` | :arrow_up: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/20347/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `84.59% <0%> (+0.2%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20347?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20347?src=pr&el=footer). Last update [c4da79b...3f77b80](https://codecov.io/gh/pandas-dev/pandas/pull/20347?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373318309",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373318309",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373318309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzMxODMwOQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-15T09:46:18Z",
    "updated_at": "2018-03-15T09:46:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "There are some useless commits in the appveyor-queue - how can those be cancelled? I'm guessing I don't have sufficient rights to do it. If someone who can should see this, you can cancel builds for commits (starting with): `41daef8d` and `d1c5543f`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373384379",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373384379",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373384379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM4NDM3OQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-15T13:57:49Z",
    "updated_at": "2018-03-15T13:57:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback, I assume you meant `text.rst` and not `io.rst`. Added tests (changed alignment to `join='outer'`), added some tests, updated `v0.23.0.txt` and `text.rst`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373423692",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373423692",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373423692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQyMzY5Mg==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-15T15:47:26Z",
    "updated_at": "2018-03-15T15:47:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger @jreback Can one of you (tell me how to) remove all but the last of my commits from the appveyor-queue? It's quite far behind as it is, so no need to choke it with unnecessary commits (in Travis new commits automatically supersede old ones - why not in appveyor...?)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373435090",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373435090",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373435090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQzNTA5MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-15T16:19:13Z",
    "updated_at": "2018-03-15T16:19:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Appveyor will auto cancel a build if there are newer commits on the PR\nbranch, but it doesn't show up as canceled until its turn in the queue.\n\nOn Thu, Mar 15, 2018 at 10:47 AM, h-vetinari <notifications@github.com>\nwrote:\n\n> @TomAugspurger <https://github.com/tomaugspurger> @jreback\n> <https://github.com/jreback> Can one of you (tell me how to) remove all\n> but the last of my commits from the appveyor-queue? It's quite far behind\n> as it is, so no need to choke it with unnecessary commits (in Travis new\n> commits automatically supersede old ones - why not in appveyor...?).\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373423692>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHItmN8d6A8SplKgALB5ivkC4OwDPSks5teo0UgaJpZM4SqkE_>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373498166",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373498166",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373498166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQ5ODE2Ng==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-15T19:38:03Z",
    "updated_at": "2018-03-15T19:38:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger , re:appveyor: this is not the case, at least not immediately. I can see in https://ci.appveyor.com/project/pandas-dev/pandas/history that some old commits were tried (while the new ones already existed) and ran for 1-2 minutes. I asked because I saw that some other commits were explicitly cancelled by users, but I don't know how to do that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373525559",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373525559",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373525559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzUyNTU1OQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-15T21:16:14Z",
    "updated_at": "2018-03-15T21:16:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I wasn't even aware that's a legal signature? I'm guessing all Series would be concatenated with the same ``sep`` (and ``na_rep``, etc.)? And it is only legal if all are Series? What about a mix of Series and ``ndarray``?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373535325",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373535325",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373535325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzUzNTMyNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-15T21:55:12Z",
    "updated_at": "2018-03-15T21:55:12Z",
    "author_association": "MEMBER",
    "body": "> I'm guessing all Series would be concatenated with the same sep (and na_rep, etc.)? \r\n\r\nYes, I think so\r\n\r\n> And it is only legal if all are Series? What about a mix of Series and ndarray?\r\n\r\nI suppose we should just process each element in the list separately, so then it does not really matter if it is a mixture.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373569504",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373569504",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373569504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzU2OTUwNA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-16T00:56:12Z",
    "updated_at": "2018-03-16T00:56:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there some pandas default how often a ``FutureWarning`` shows up? I'm not getting the align-warning a second time, even I verified the code runs through the corresponding ``if``."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373573879",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373573879",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373573879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzU3Mzg3OQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-16T01:23:24Z",
    "updated_at": "2018-03-16T07:51:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\nI added the functionality you wanted, but it's potentially a bit unintuitive if there's a mix of ``ndarray`` and ``Series`` (because treating the elements sequentually would mean that the lengths of an array would have to match the length of the union of the indexes of all previous seriers-like elements). In this case, I demand that the ``ndarray`` elements match in length to the Series that's calling ``str.cat``.\r\n\r\nIt was a substantial rewrite, but the code got better through it (found some bugs, and now its cleaner).\r\nI added *a lot* of tests about the expected behavior - please have a look at those tests if something is unclear. Maybe some of these examples should make it into whatsnew or ``text.rst``, but I'm too tired now. Feedback welcome."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373575175",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373575175",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373575175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzU3NTE3NQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-16T01:31:48Z",
    "updated_at": "2018-03-16T01:31:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback \r\nJust saw your comments now (thanks!), will work on them tomorrow (if I can). Writing good docs is surely an important part.\r\nThe code changed a fair bit with the last commit -- initially, I left the structure as it was (i.e. ``str_cat`` and ``_get_array_list``), but that was very much not optimal (and the reason for some of my comments).\r\n\r\nIs ``str_cat`` part of the public API or just used to construct ``str.cat``? Because I shifted all the relevant logic to ``str.cat`` now, and ``str_cat`` just provides the doc-string (i.e. align does not do anything for ``str_cat``)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373634226",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373634226",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373634226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzYzNDIyNg==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-16T08:02:20Z",
    "updated_at": "2018-03-16T08:30:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche @TomAugspurger @jreback \r\nregarding legal inputs for ``others`` - if list of series are allowed, why not DataFrames too? It would be a very simple addition.\r\n\r\nI added functionality and tests for it. If you like how everything so far works, I'll update the docs (just wanna leave the doc-writing for when the code has converged)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373641841",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373641841",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373641841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzY0MTg0MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-16T08:38:52Z",
    "updated_at": "2018-03-16T08:38:52Z",
    "author_association": "MEMBER",
    "body": "> Is there some pandas default how often a FutureWarning shows up? I'm not getting the align-warning a second time, even I verified the code runs through the corresponding if.\r\n\r\nThat's normal. FutureWarnings only show up the first time you use something (you can warnings.filterwarnings to have it show always)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373894741",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373894741",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373894741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzg5NDc0MQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-17T05:00:19Z",
    "updated_at": "2018-03-17T05:00:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @TomAugspurger @jorisvandenbossche \r\nI added documentation (also for things I haven't touched, like ``_get_array_list``), and wrote and extensive section in ``text.rst`` outlining the ``str.cat``-method in general, and the expanded usability in particular.\r\n\r\nIf you would be so kind, please compile and read ``text.rst`` first, before you have a look at the code or tests; it should make for easier reading. I could document the code some more, but it should be quite understandable. Despite the lengths, I think it is not wasteful in terms of lines. It's just not that easy to cover all the desired cases *plus*  all the alignment options.\r\n\r\nFeedback welcome."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373941492",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373941492",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373941492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzk0MTQ5Mg==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-17T18:18:36Z",
    "updated_at": "2018-03-17T18:20:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "The failure in the Travis-CI is an artefact -- the linter (only in the 2.7 run) complained about ``pandas/_libs/tslibs/period.pyx:1358:12: W291 trailing whitespace``, but neither did I touch this file, nor is there any trailing whitespace around the line where the failure supposedly happened."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373987413",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-373987413",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 373987413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzk4NzQxMw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-18T10:31:08Z",
    "updated_at": "2018-03-18T12:09:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\n> I suppose we should just process each element in the list separately, so then it does not really matter if it is a mixture.\r\n\r\nA comment why this is not so easy (and why I align all elements in a list before starting concatenation):\r\nIf one starts concatenating right away, then one might get a problem with index changes induced by later list elements.\r\n\r\n```\r\n>>> s = pd.Series(['a', 'b', 'c', 'd'])\r\n>>> t = pd.Series(['d', 'a', 'e', 'b'], index=[3, 0, 4, 1])\r\n>>>\r\n>>> # the following would be equivalent to\r\n>>> # s.str.cat([t.values, t], align=True, join='outer', na_rep='-')\r\n>>> # if list elements in `other` would be concatenated sequentially\r\n>>> s.str.cat(t.values).str.cat(t, align=True, join='outer', na_rep='-')\r\n0    ada\r\n1    bab\r\n2    ce-\r\n3    dbd\r\n4     -e  # <-- missing a NaN for first column!\r\ndtype: object\r\n>>> s.str.cat([t.values, t], align=True, join='outer', na_rep='-')\r\n0    ada\r\n1    bab\r\n2    ce-\r\n3    dbd\r\n4    --e  # <-- this is more sensible behavior, IMO\r\ndtype: object\r\n```\r\n\r\nEven worse, this would mean that any other arrays following in the list would be of the wrong length and trigger a warning..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374176238",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-374176238",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 374176238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDE3NjIzOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-19T11:07:29Z",
    "updated_at": "2018-03-19T11:07:29Z",
    "author_association": "MEMBER",
    "body": "OK, let's try to take a step back and first decide what behaviour we want, as I think the code now it getting too complicated:\r\n\r\n- I mentioned I would find a \"left align\" more logical, so the returned series always preserves length and index. But, although I still find that sensible, on a second thought, that was maybe not a good suggestion? \r\n  Do we have some similar methods in pandas to see how they do it, so we could have a consistency argument?\r\n- I am not sure we want to add an `align` or `join` keyword here. IMO, we should just choose a default alignment (bullet point above), and stick to that. If people want a different alignment, they can always first do an `s1.algin(s2)` manually before feeding the data to `str.cat`. Adding it here, just complicates things further? \r\n- you are right the lists of series/arrays gives some additional problems (also eg if you have first a series that realigns the data, and then an array that does not fit the length anymore due to this re-alignment). But, maybe we can be just more restrictive here. Eg disallow different types (either only series, or either only lists/arrays), might simplify things?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374191773",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-374191773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 374191773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDE5MTc3Mw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-19T12:14:03Z",
    "updated_at": "2018-03-19T12:55:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\nThanks for the comment.\r\n\r\npandas advertises itself as (http://pandas.pydata.org/pandas-docs/stable/):\r\n> Automatic and explicit **data alignment**: objects can be explicitly aligned to a set of labels, or the user can simply ignore the labels and let Series, DataFrame, etc. automatically align the data for you in computations\r\n\r\nTherefore, I do not think that uses should have to align their Series themselves - the expectation that pandas evokes everywhere else is that things will be aligned automatically (in fact, I didn't know about ``Series.align`` for a long time, because it was never necessary). The easiest reference for me is something like boolean operations, which are 'outer' by default,\r\n```\r\nIn [0]: s = pd.Series(['a', 'b'])\r\nIn [1]: t = pd.Series(['a', 'b'], index=[1, 2])\r\nIn [2]: s.astype(bool) & t.astype(bool)\r\nOut[2]:\r\n0    False\r\n1     True\r\n2    False\r\ndtype: bool\r\n```\r\nbut also things like ``.eq``. OTOH, methods like  ``.merge`` gives full control over the join-type.\r\n\r\nI agree that ``join='left'`` is a sensible default behavior for ``str.cat``, but it is very important IMHO to allow the other options as well (see also the original issue #18657, which needs at least 'outer'). And since there are *no other methods*  for the ``.str``-accessor that take another Series as an argument, this does not break any consistency. Therefore, the proposal would be:\r\n```\r\nIn [3]: s.str.cat(t, align=True, na_rep='-')\r\nOut[3]: \r\n0    a-\r\n1    ba\r\ndtype: object\r\nIn [4]: s.str.cat(t, align=True, join='outer', na_rep='-')\r\nOut[4]: \r\n0    a-\r\n1    ba\r\n2    -b\r\ndtype: object\r\n```\r\n\r\nA bit further up, @TomAugspurger agreed with the ``join``-keyword as well. Finally, the join-types have completely negligible impact on code complexity (see below).\r\n\r\n> But, maybe we can be just more restrictive here. Eg disallow different types (either only series, or either only lists/arrays), might simplify things?\r\n\r\nI don't think that this would make things easier -- assuming we don't want to break existing code like\r\n`` s.str.cat([t, ['A', 'B'], ['1', '2']])``. Basically all of the complexity comes from allowing lists of Series and arrays, but since those are legal currently, it's a strong argument to keep that, no?\r\n\r\nAnd as soon as the logic is there to deal with such mixed lists (i.e. align arrays with the calling Series and proceed from there), then the other additions I made are really cheap:\r\nMy thought was, \"if we allow list of Series, why not DataFrames?\"\r\nSame for two-dimensional ndarrays and an iterable as the outer container. Those can easily be removed, but I consider them cheap (in terms of line-count) and *useful* additions to the capability that is already needed to deal with the list of Series/arrays.\r\n\r\nPS. have you seen a compiled version of the ``text.rst`` I updated? I think the exposition I made makes the case reasonably well. Particularly, I think it's easy to understand \"All elements [in a list] must match in length to the calling Series, except those having an Index if align=True.\""
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374526275",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-374526275",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 374526275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDUyNjI3NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T09:15:17Z",
    "updated_at": "2018-03-20T09:15:17Z",
    "author_association": "MEMBER",
    "body": "> Therefore, I do not think that uses should have to align their Series themselves - the expectation that pandas evokes everywhere else is that things will be aligned automatically (in fact, I didn't know about Series.align for a long time, because it was never necessary)\r\n\r\nSure, I agree we want to do alignment if a Series is provided (the bug you are fixing, completely agree with that), but that doesn't mean we should give a keyword to specify the *kind* of alignment. \r\nWe *can* choose the default alignment which we think will make most sense in most of the cases, and only leave the manual alignment for advanced corner cases.\r\n\r\n> The easiest reference for me is something like boolean operations, which are 'outer' by default,\r\n\r\nYep, indeed, and that's the reason I mentioned I am also not sure that I find 'left' alignment better, as we indeed have many cases where 'outer' is the default. \r\nBut it is not everywhere, there are also methods where a 'left' alignment is more natural, eg `fillna`:\r\n\r\n```\r\nIn [15]: s = pd.Series([0, 1, 2, np.nan, 4])\r\n\r\nIn [17]: s.fillna(pd.Series([10, 20, 30, 40, 50], index=[1, 2, 3, 4, 5]))\r\nOut[17]: \r\n0     0.0\r\n1     1.0\r\n2     2.0\r\n3    30.0\r\n4     4.0\r\ndtype: float64\r\n```\r\n\r\nSo when filling element-wise, it aligns the `other` series, but not using 'outer' alignment (in this case it would also be very strange to do 'outer' alignment, as you only want to fill the calling series). Another example is the `where` method.\r\n\r\nThe question of course is a bit how we see `str.cat`, to which of the methods it is more similar to.\r\n\r\n> see also the original issue #18657, which needs at least 'outer\r\n\r\nOf course that goes into the very specifics of that code examples and is not a general answer, but there you could also do `col.loc[ss1] + col.loc[ss2]` and you get the outer alignment.\r\n \r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374532586",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-374532586",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 374532586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDUzMjU4Ng==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T09:37:07Z",
    "updated_at": "2018-03-20T09:37:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\n> We *can* choose the default alignment which we think will make most sense in most of the cases, and only leave the manual alignment for advanced corner cases.\r\n\r\nIf I had to choose one, I would choose 'outer'. OTOH, I see only benefits in providing the 'join'-options, but will defer to (plural-)your experience on that. Maybe @TomAugspurger can elaborate why he was in favor of a 'join'-keyword?\r\n\r\n> So when filling element-wise, it aligns the other series, but not using 'outer' alignment (in this case it would also be very strange to do 'outer' alignment, as you only want to fill the calling series).\r\n[...]\r\nThe question of course is a bit how we see str.cat, to which of the methods it is more similar to.\r\n\r\nI think ``str.cat`` sort of lives in the middle where both the 'outer'-POV (like booleans) and 'left'-POV (like fillna) can make more sense, depending on context. Kind of like ``merge``, where all these options are needed as well - and isn't the concatenation between Series essentially a merging operation?\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374635330",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-374635330",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 374635330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDYzNTMzMA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T15:14:36Z",
    "updated_at": "2018-03-20T15:14:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback\r\nI shortened ``text.rst``, mainly by reducing somewhat redundant examples - please re-review. I left the align/join-kwargs as they are for the moment, pending further discussion (there seem to be 3 different opinions from the core-devs at the moment)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374636271",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-374636271",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 374636271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDYzNjI3MQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T15:17:15Z",
    "updated_at": "2018-03-20T15:17:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Re: build failure: this is due to ``curl: (7) Failed to connect to s3.amazonaws.com port 443: Connection timed out``\r\n\r\nNothing build-relevant changed to the previous (passing) commit, and sphinx ran fine for me."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374745095",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-374745095",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 374745095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDc0NTA5NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T20:28:07Z",
    "updated_at": "2018-03-20T20:28:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I haven't looked at the code changes yet, so I can't gauge the complexity tradeoff here yet.\r\n  \r\nleft-align seems the most natural to me because most other accessor methods are shape-preserving. I could also see wanting an outer join, hence my preference for a keyword argument.\r\n\r\nDo we want to change the default behavior (with a deprecation warning)? If so, what's the default?\r\n\r\nI don't think we need both `align` and `join`. We can achieve everything with a single keyword argument."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374772163",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-374772163",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 374772163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDc3MjE2Mw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T22:01:20Z",
    "updated_at": "2018-03-20T22:01:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger \r\nAs a comment: the join-style & -default (as well as whether there's one or two keywords) have almost no bearing on the complexity. The complexity comes from dealing with lists containing combinations of Series/ndarray/etc.\r\n\r\nRe:\r\n> Do we want to change the default behavior (with a deprecation warning)? If so, what's the default?\r\n\r\nIn your response to #18657, you wrote \r\n>I'd favor a keyword like align for controlling it. For now it'll be None by default and if others is a series it will not align, but warn that the default will change in the future to align.\r\n\r\nwhich was my starting point for implementing it. But again, the necessary changes for different keyword(-combination)s would all be minor. My only preference is giving the option of different joins in some form."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374787940",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-374787940",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 374787940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDc4Nzk0MA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T23:08:59Z",
    "updated_at": "2018-03-20T23:08:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Do we want to change the default behavior (with a deprecation warning)? If so, what's the default?\r\n\r\nI think the default should (eventually) be alignment, but will need a transition period?\r\nAs join-type-default, I would use 'outer' *if* only one option is available. Otherwise, I would use 'left' as default (if all the other join-options are also available), to stay \"closer\" to the ``.str``-accessor-feel, while having full flexibility."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374845137",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-374845137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 374845137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDg0NTEzNw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T06:37:14Z",
    "updated_at": "2018-03-21T06:39:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "If I try to summarize the positions (as I understand them) so far:\r\n\r\n@jorisvandenbossche prefers a single join-style (potentially 'left' or 'outer'), and asks (paraphrasing) \"what other methods is ``str.cat`` similar to``?\r\n@TomAugspurger prefers having a kwarg for different joins, but only one kwarg in total, and asks about how to transition the API with Deprecation (or Future?) Warnings\r\n@jreback says only one kwarg should suffice.\r\n\r\nI believe that ``str.cat`` is more similar to ``merge`` than to the other ``str``-accessors, in that it should support all different join styles. In order to not break currently legal code (but maybe issue a warning on *every* non-alignment right away - i.e. from v.0.23), how about the following suggestion:\r\n- v.0.23: ``join=None(->FuWa)|'left'|'outer'|'inner'|'right'``, with default None. The warning would be emitted only when necessary - i.e. if others contains an (element with an) index.\r\n- v.0.2x: ``join='left'|'outer'|'inner'|'right'``, with default tbd ('left'/'outer'?). If the user wants no alignment, they could still use ``.values``."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/375316605",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-375316605",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 375316605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTMxNjYwNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-22T14:02:05Z",
    "updated_at": "2018-03-22T14:02:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the summary. I think your proposal is reasonable. For the future default, I'd favor `join='left'`, because it preserves the shape of `self`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/375390641",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20347#issuecomment-375390641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20347",
    "id": 375390641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTM5MDY0MQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-22T17:27:09Z",
    "updated_at": "2018-03-22T17:27:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger I agree with the (future) default of ``join='left'`` as well.\r\n\r\n@jorisvandenbossche Can you OK (or critique) the above proposal, before I start rewriting code/tests/docs?"
  }
]
