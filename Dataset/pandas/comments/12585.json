[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194833461",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-194833461",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 194833461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDgzMzQ2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T13:04:26Z",
    "updated_at": "2016-03-10T13:04:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "So we ONLY hit the dateutil path (and hence use `dayfirst/yearfirst` settings) IF we fail to parse ISO8601 (IOW an exception is raised).\n\nSo easiest thing to do is track in `array_to_datetime` when/if this happens.\n- If we don't trigger the exception at all, then all dates are consistent (as ISO 8601, meaning `dayfirst=False`, `yearfirst=False`). \n- If we have at least 1 time we hit the exception (but not all), then we have a potential ambiguity (meaning \n  some dates were parsed as ISO 8601 and some maybe were not)\n- If we hit the exception EVERY time, then we have NO ISO8601 dates and I think the `dayfirst/yearfirst` flags would make this unambiguous (somewhat depends on `dateutil`).\n\nSo this is a relatively easy first step, we could easily raise an ambiguity error and force the user to figure it out (unless coerceing of course).\n\nWe could also (and maybe wait for an ambiguity error to occur), try several formats to see what parses.\n\nThese options take into account all dates, to make this more performance we might want to take a sample (or a sample of the uniques is best).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/195195496",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-195195496",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 195195496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTE5NTQ5Ng==",
    "user": {
      "login": "dolaameng",
      "id": 36718,
      "node_id": "MDQ6VXNlcjM2NzE4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/36718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dolaameng",
      "html_url": "https://github.com/dolaameng",
      "followers_url": "https://api.github.com/users/dolaameng/followers",
      "following_url": "https://api.github.com/users/dolaameng/following{/other_user}",
      "gists_url": "https://api.github.com/users/dolaameng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dolaameng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dolaameng/subscriptions",
      "organizations_url": "https://api.github.com/users/dolaameng/orgs",
      "repos_url": "https://api.github.com/users/dolaameng/repos",
      "events_url": "https://api.github.com/users/dolaameng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dolaameng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T05:17:42Z",
    "updated_at": "2016-03-11T05:17:42Z",
    "author_association": "NONE",
    "body": "The `dayfirst` parameter to the reading functions such as `read_csv` is even more confusing, as multiple datetime columns with different formats might co-exist in the same dataset.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413552730",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-413552730",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 413552730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzU1MjczMA==",
    "user": {
      "login": "lordgrenville",
      "id": 16547083,
      "node_id": "MDQ6VXNlcjE2NTQ3MDgz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16547083?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lordgrenville",
      "html_url": "https://github.com/lordgrenville",
      "followers_url": "https://api.github.com/users/lordgrenville/followers",
      "following_url": "https://api.github.com/users/lordgrenville/following{/other_user}",
      "gists_url": "https://api.github.com/users/lordgrenville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lordgrenville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lordgrenville/subscriptions",
      "organizations_url": "https://api.github.com/users/lordgrenville/orgs",
      "repos_url": "https://api.github.com/users/lordgrenville/repos",
      "events_url": "https://api.github.com/users/lordgrenville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lordgrenville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T13:51:38Z",
    "updated_at": "2018-08-16T13:51:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Since mixed date formats within one series is unusual, why not raise a warning every time there are ambiguous values? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413568190",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-413568190",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 413568190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzU2ODE5MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T14:37:12Z",
    "updated_at": "2018-08-16T14:37:12Z",
    "author_association": "MEMBER",
    "body": "> Since mixed date formats within one series is unusual, why not raise a warning every time there are ambiguous values?\r\n\r\nI am not sure there is way to get from `dateutil` how (assuming which format) it parsed the date, so then it will also be difficult to warn for different formats."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/462430986",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-462430986",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 462430986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjQzMDk4Ng==",
    "user": {
      "login": "MartinThoma",
      "id": 1658117,
      "node_id": "MDQ6VXNlcjE2NTgxMTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1658117?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MartinThoma",
      "html_url": "https://github.com/MartinThoma",
      "followers_url": "https://api.github.com/users/MartinThoma/followers",
      "following_url": "https://api.github.com/users/MartinThoma/following{/other_user}",
      "gists_url": "https://api.github.com/users/MartinThoma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MartinThoma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MartinThoma/subscriptions",
      "organizations_url": "https://api.github.com/users/MartinThoma/orgs",
      "repos_url": "https://api.github.com/users/MartinThoma/repos",
      "events_url": "https://api.github.com/users/MartinThoma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MartinThoma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-11T18:05:26Z",
    "updated_at": "2019-02-11T18:05:52Z",
    "author_association": "NONE",
    "body": "Just a minimal example a colleague created as we stumbled over this:\r\n\r\n```\r\nimport pandas as pd\r\nfrom io import StringIO\r\n\r\nDATA=StringIO(\"\"\"timestamp,num\r\n03/09/2018 12:02:00,1\r\n14/09/2018 14:09:00,2\r\n\"\"\")\r\ndf = pd.read_csv(DATA, parse_dates=['timestamp'])\r\n```\r\n\r\ngives\r\n\r\n```\r\n            timestamp  num\r\n0 2018-03-09 12:02:00    1\r\n1 2018-09-14 14:09:00    2\r\n```\r\n\r\nbut it should either have raised an exception or better give\r\n\r\n```\r\n            timestamp  num\r\n0 2018-09-03 12:02:00    1   <----------- wrong month/day order!\r\n1 2018-09-14 14:09:00    2\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463827428",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-463827428",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 463827428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzgyNzQyOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T22:27:23Z",
    "updated_at": "2019-02-14T22:27:23Z",
    "author_association": "MEMBER",
    "body": "@MartinThoma that seems like a bug, not necessarily related to this issue. Can you open a new issue for it?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463917558",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-463917558",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 463917558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzkxNzU1OA==",
    "user": {
      "login": "MartinThoma",
      "id": 1658117,
      "node_id": "MDQ6VXNlcjE2NTgxMTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1658117?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MartinThoma",
      "html_url": "https://github.com/MartinThoma",
      "followers_url": "https://api.github.com/users/MartinThoma/followers",
      "following_url": "https://api.github.com/users/MartinThoma/following{/other_user}",
      "gists_url": "https://api.github.com/users/MartinThoma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MartinThoma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MartinThoma/subscriptions",
      "organizations_url": "https://api.github.com/users/MartinThoma/orgs",
      "repos_url": "https://api.github.com/users/MartinThoma/repos",
      "events_url": "https://api.github.com/users/MartinThoma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MartinThoma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-15T05:57:46Z",
    "updated_at": "2019-02-15T05:57:46Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche Sure, I can do that. But looking at your first post (section \"The problem\") I'm pretty sure it is exactly the same problem as here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463942890",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-463942890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 463942890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Mzk0Mjg5MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-15T07:56:38Z",
    "updated_at": "2019-02-15T07:56:38Z",
    "author_association": "MEMBER",
    "body": "Ah, sorry, missed the fact that this is an \"unorthodox\" format (the default format (at least in US) is month first, so month/day/year). Yes, then the behaviour you see is totally \"expected\" (given the current rules as outlined above). The best thing you can do is specify a `format` (or specify `dayfirst=True`, but I wouldn't recommend that for its non-strictness explained above)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464387316",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-464387316",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 464387316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDM4NzMxNg==",
    "user": {
      "login": "minggli",
      "id": 14131823,
      "node_id": "MDQ6VXNlcjE0MTMxODIz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14131823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggli",
      "html_url": "https://github.com/minggli",
      "followers_url": "https://api.github.com/users/minggli/followers",
      "following_url": "https://api.github.com/users/minggli/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggli/subscriptions",
      "organizations_url": "https://api.github.com/users/minggli/orgs",
      "repos_url": "https://api.github.com/users/minggli/repos",
      "events_url": "https://api.github.com/users/minggli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-16T21:26:25Z",
    "updated_at": "2019-02-16T21:34:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I also came across this issue of inconsistent parsing of non-ISO8601 formats (i.e. MMDDYYYY and DDMMYYYY). I understand this is a known issue involving `dateutil` but maybe we can enhance `infer_datetime_format` so there is a format to parse towards in order to avoid such ambiguity.\r\n\r\n`_guess_datetime_format_for_array` only looks at first non-null value. Potentially we (happy to contribute myself) can make it more robust by searching for inconsistency and set `dayfirst=True` if formats inferred in the array are not unique. If still not unique, raise exception so that `to_datetime` with `infer_datetime_format=True` gives strict parsing.\r\n\r\n@jorisvandenbossche @jreback your thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464387934",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-464387934",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 464387934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDM4NzkzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-16T21:33:30Z",
    "updated_at": "2019-02-16T21:33:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "you would do this in array_to_datetime\r\n\r\nonce a date is parsed with dayfirst or yearfirst then it would be an error to not parse others in the same way"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/466781873",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-466781873",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 466781873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Njc4MTg3Mw==",
    "user": {
      "login": "minggli",
      "id": 14131823,
      "node_id": "MDQ6VXNlcjE0MTMxODIz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14131823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggli",
      "html_url": "https://github.com/minggli",
      "followers_url": "https://api.github.com/users/minggli/followers",
      "following_url": "https://api.github.com/users/minggli/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggli/subscriptions",
      "organizations_url": "https://api.github.com/users/minggli/orgs",
      "repos_url": "https://api.github.com/users/minggli/repos",
      "events_url": "https://api.github.com/users/minggli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-24T14:26:50Z",
    "updated_at": "2019-02-24T14:27:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have looked into this possibility however, `array_to_datetime` utimately uses `dateutil.parser.parse` which operates a soft `dayfirst` kwarg and reverts silently if not match. I don't see how this `parse` function gives any callback in terms of whether `dayfirst` or `yearfirst`. So I suppose changes have to be sought in `dateutil`\r\n\r\nAlternatively, we can make enhance `_guess_datetime_format_for_array` and raise error if the array has more than one datetime formats inferred. It currently only check first item and therefore is not statistically significant in terms of the conclusion."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/475908159",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-475908159",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 475908159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTkwODE1OQ==",
    "user": {
      "login": "garfieldthecat",
      "id": 20935452,
      "node_id": "MDQ6VXNlcjIwOTM1NDUy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20935452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garfieldthecat",
      "html_url": "https://github.com/garfieldthecat",
      "followers_url": "https://api.github.com/users/garfieldthecat/followers",
      "following_url": "https://api.github.com/users/garfieldthecat/following{/other_user}",
      "gists_url": "https://api.github.com/users/garfieldthecat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garfieldthecat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garfieldthecat/subscriptions",
      "organizations_url": "https://api.github.com/users/garfieldthecat/orgs",
      "repos_url": "https://api.github.com/users/garfieldthecat/repos",
      "events_url": "https://api.github.com/users/garfieldthecat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garfieldthecat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-23T21:58:03Z",
    "updated_at": "2019-03-23T21:58:03Z",
    "author_association": "NONE",
    "body": "I think the title and the discussion fail to make explicit the enormity of the issue that, **in pandas, a column can contain dates formatted in different ways, so that one row is dd-mm-yyyy and another row is mm-dd-yyyy** . This might sort of maybe be inferred reading here, but in no way is it explicit. An example with minimal code to reproduce this is in my other post referenced just above: https://github.com/pandas-dev/pandas/issues/25847\r\nTry telling this to anyone with a SQL background and watch them drop dead! :)\r\n\r\nIMHO this needs to be added to the docs as a matter of urgency (I am, in fact, drafting something I hope the community will accept). \r\n\r\nA few more points:\r\n\r\n- this happens with read_csv(), as per the example linked above. So I guess that read_csv uses to_datetime ? I haven't found it mentioned clearly in the docs.\r\n\r\n- @jreback , what is array_to_datetime which you mention? Is it a function? Of which library? I couldn't find it. If i search the pandas docs for it, nothing comes up: https://pandas.pydata.org/pandas-docs/stable/search.html?q=array_to_datetime&check_keywords=yes&area=default After some googling, it seems it was part of pandas.tslib which has now been deprecated - is that correct? Did it solve the problem, as @jreback said, or not, as @minggli reported?\r\n\r\n- Is there any way to force a column in a pandas dataframe to contain items of the same type? Ie to get pandas to behave like SQL, so that you can specify a date format for a column, and be sure the whole column will follow that format?\r\n\r\n- The docs https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.to_datetime.html?highlight=to_datetime#pandas.to_datetime say that to_datetime returns one of these 3:\r\n\r\n1.     list-like: DatetimeIndex\r\n2.     Series: Series of datetime64 dtype\r\n3.     scalar: Timestamp\r\n\r\nHowever, in the code linked above, it returns a Series of dtype object, NOT of dtype datetime64 as stated in the docs\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/475915173",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-475915173",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 475915173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTkxNTE3Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-23T23:58:52Z",
    "updated_at": "2019-03-23T23:58:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@garfieldthecat pls have a read thru the very extensive documentation \r\nthis having mixed dayfirst datetimes is only a problem at parse time; you can specify multiple options to properly parse including dayfirst and format strings\r\n\r\npandas of course has single dtypes for efficiency ; though allows object for mixed tyoes"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/475942674",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-475942674",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 475942674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTk0MjY3NA==",
    "user": {
      "login": "garfieldthecat",
      "id": 20935452,
      "node_id": "MDQ6VXNlcjIwOTM1NDUy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20935452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garfieldthecat",
      "html_url": "https://github.com/garfieldthecat",
      "followers_url": "https://api.github.com/users/garfieldthecat/followers",
      "following_url": "https://api.github.com/users/garfieldthecat/following{/other_user}",
      "gists_url": "https://api.github.com/users/garfieldthecat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garfieldthecat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garfieldthecat/subscriptions",
      "organizations_url": "https://api.github.com/users/garfieldthecat/orgs",
      "repos_url": "https://api.github.com/users/garfieldthecat/repos",
      "events_url": "https://api.github.com/users/garfieldthecat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garfieldthecat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-24T09:33:35Z",
    "updated_at": "2019-03-24T09:33:35Z",
    "author_association": "NONE",
    "body": "> this having mixed dayfirst datetimes is only a problem at parse time; you can specify multiple options to properly parse including dayfirst and format strings\r\n\r\n**Only**? Really? I am simply speechless. It seems clear you totally fail to grasp how huge an issue this is. _Look, I have no interest in convincing you of anything - my point is simply that this can be a huge issue for many users (even if it doesn't affect you and your workflow), that this is not clear at all from the docs, and that it must be made so._\r\n\r\nFor example, **anyone who has been importing csv with dates**, and who didn't explicitly state the format because they thought there could be no ambiguity (if their days go all the way to the 31st) and who didn't realise that a column can contain dates in different formats, **may have imported dates incorrectly and therefore any function, analysis etc based on those dates may be wrong**. This is not big, it's HUGE.\r\n\r\n\r\n\r\n> @garfieldthecat pls have a read thru the very extensive documentation\r\n\r\nCould I please ask you to be a bit more specific on what can be found where in the extensive documentation?\r\nLike I said:\r\n\r\n- array_to_datetime seems to have been deprecated. Is that so? If yes, do you know of an up to date alternative? If not, where is it documented, since it's not in the pandas docs?\r\n\r\n- the pandas docs are wrong in saying what kind of objects to_datetime can return, as I explained above. Do you agree? And can I therefore continue to work on my draft of what I think needs updating in the pandas docs? Or am I missing something?\r\n\r\n- I didn't find any explicit mention that read_csv uses to_datetime. Without this clarification, it is not clear at all that to_datetime affects the output of read_csv. The title of this discussion should really be amended to reflect that this bug 1) affects read_csv and 2) means that a pandas column can have dates with different formats, so that one row is dd-mm-yyyy and another mm-dd-yyyy.\r\n\r\n- is there another solution, other than always explicitly specifying the date format, which is in the docs and which I missed?\r\n\r\nBy the way, what saved me was that I almost always load the data into a SQL server after cleansing it in pandas; SQL would have picked up any inconsistency in the date formats. Had I not had this SQL step in my workflow, I'd probably have to double check YEARS of code and analyses to make sure that nothing was messed up.\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/475985531",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-475985531",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 475985531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTk4NTUzMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-24T18:21:24Z",
    "updated_at": "2019-03-24T18:21:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "well see:http://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-read-csv-table for date parsing, the doc-string: http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.to_datetime.html?highlight=to_datetime#pandas.to_datetime\r\n\r\nI am not sure what else you are refering, ``array_to_datetime`` is an internal implementation, so if you want to fix this issue, then certainly look at that.\r\n\r\n> the pandas docs are wrong in saying what kind of objects to_datetime can return, as I explained above. Do you agree? And can I therefore continue to work on my draft of what I think needs updating in the pandas docs? Or am I missing something?\r\n\r\nand exactly how are they wrong? these are the things that are returned.\r\n\r\nYou are welcome to propose updates to doc-strings and/or docs, but I would first review in detail what pandas has to offer."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476012162",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-476012162",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 476012162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjAxMjE2Mg==",
    "user": {
      "login": "garfieldthecat",
      "id": 20935452,
      "node_id": "MDQ6VXNlcjIwOTM1NDUy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20935452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garfieldthecat",
      "html_url": "https://github.com/garfieldthecat",
      "followers_url": "https://api.github.com/users/garfieldthecat/followers",
      "following_url": "https://api.github.com/users/garfieldthecat/following{/other_user}",
      "gists_url": "https://api.github.com/users/garfieldthecat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garfieldthecat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garfieldthecat/subscriptions",
      "organizations_url": "https://api.github.com/users/garfieldthecat/orgs",
      "repos_url": "https://api.github.com/users/garfieldthecat/repos",
      "events_url": "https://api.github.com/users/garfieldthecat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garfieldthecat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-24T23:23:41Z",
    "updated_at": "2019-03-24T23:23:41Z",
    "author_association": "NONE",
    "body": "Again, unless I missed it, the links you post do not clearly explain that read_csv relies on to_datetime - which is why I didn't find this issue: I was looking for issue with read_csv\r\n\r\nAgain, unless I missed it, they also do not clearly explain that, in pandas, one row in a date column can be mm-dd-yyyy while another row in the same column can be dd-mm-yyyy. This is something that should be written in huge bold letters in the documentation of read_csv\r\n\r\nI have drafted something, but **what is the best way to propose changes to the documentation (not to the code)? Discuss it on a github forum first to reach a consensus?** Just write it and post it to github?\r\n\r\nPS about what to_datetime() returns: I was sure I remembered it returned dtype object. I guess I was wrong - apologies.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476013327",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12585#issuecomment-476013327",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12585",
    "id": 476013327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjAxMzMyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-24T23:37:56Z",
    "updated_at": "2019-03-24T23:37:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "you are welcome to submit a PR: http://pandas.pydata.org/pandas-docs/stable/development/contributing.html"
  }
]
