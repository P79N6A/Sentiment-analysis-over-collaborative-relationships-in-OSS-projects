[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367187275",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19792#issuecomment-367187275",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19792",
    "id": 367187275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzE4NzI3NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T01:53:16Z",
    "updated_at": "2018-02-21T01:53:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "not real clear what u r asking here - can u show an example "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367190874",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19792#issuecomment-367190874",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19792",
    "id": 367190874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzE5MDg3NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T02:13:49Z",
    "updated_at": "2018-02-21T02:13:49Z",
    "author_association": "MEMBER",
    "body": "TL;DR: it is not clear what the pandas convention is for the desired behavior of these operations with dtypes including timedelta64/datetime64/datetime64[tz]/categorical/[extension?]\r\n\r\nIn some cases these ops are bool-like and in others they are bit-like, see how `filler` is defined https://github.com/pandas-dev/pandas/blob/master/pandas/core/ops.py#L1100, roughly:\r\n\r\n```\r\n        elif isinstance(other, ABCSeries):\r\n            name = com._maybe_match_name(self, other)\r\n            is_other_int_dtype = is_integer_dtype(other.dtype)\r\n            other = fill_int(other) if is_other_int_dtype else fill_bool(other)\r\n            filler = (fill_int if is_self_int_dtype and is_other_int_dtype\r\n                      else fill_bool)\r\n        else:\r\n            # scalars, list, tuple, np.array\r\n            filler = (fill_int if is_self_int_dtype and\r\n                      is_integer_dtype(np.asarray(other)) else fill_bool)\r\n```\r\n\r\nThe error-catching in the nested function (https://github.com/pandas-dev/pandas/blob/master/pandas/core/ops.py#L1063) is about patching numpy's conventions with pandas conventions:\r\n\r\n```\r\narr = np.random.randn(5) * 1000\r\ni = arr.astype('i8')\r\nb = arr.astype(bool)\r\nf = arr.astype('f8')\r\n\r\ni & b --> returns 0/1-values in  a ndarray[int64] \r\ni & f --> raises TypeError\r\nb & f --> raises TypeError\r\n\r\npd.Series(i) & pd.Series(b) --> returns Series[bool]\r\npd.Series(i) & pd.Series(f) --> returns Series[bool] \r\npd.Series(b) & pd.Series(f) --> returns Series[bool]\r\n```\r\n\r\nAFAICT this was written without datetime64/datetime64[tz]/timedelta64/categorical being taken into account, so it is not obvious what the desired behavior is for these other dtypes."
  }
]
