[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160638839",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11723#issuecomment-160638839",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11723",
    "id": 160638839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDYzODgzOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-30T14:03:10Z",
    "updated_at": "2015-11-30T14:03:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "related to #10349 \n\nI suppose this is possible. This would be fairly easy to implement, but would require a good number of test cases to ensure its propogating correctly (e.g. this is analagous to the `name` attribute for `Indexes` in that it propogates when appropriate).\n\nFurther would require an audit of the indexing code for it to be a synonymous application (e.g. you can use the alias where you could use the actual label).\n\nSo while this is interesting, it would require a pull-request from the community to jump start it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/161489862",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11723#issuecomment-161489862",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11723",
    "id": 161489862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTQ4OTg2Mg==",
    "user": {
      "login": "bbirand",
      "id": 334435,
      "node_id": "MDQ6VXNlcjMzNDQzNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/334435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bbirand",
      "html_url": "https://github.com/bbirand",
      "followers_url": "https://api.github.com/users/bbirand/followers",
      "following_url": "https://api.github.com/users/bbirand/following{/other_user}",
      "gists_url": "https://api.github.com/users/bbirand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bbirand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bbirand/subscriptions",
      "organizations_url": "https://api.github.com/users/bbirand/orgs",
      "repos_url": "https://api.github.com/users/bbirand/repos",
      "events_url": "https://api.github.com/users/bbirand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bbirand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-03T01:42:52Z",
    "updated_at": "2015-12-03T01:42:52Z",
    "author_association": "NONE",
    "body": "I'll have a go at this when I get a chance. It also occurred to me that these aliases may be useful when dealing with `DataFrame.query()` methods. Based on my trials, this function does not work when there are spaces on the column names (please correct me if I'm wrong, I couldn't get them to work).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/161492194",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11723#issuecomment-161492194",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11723",
    "id": 161492194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTQ5MjE5NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-03T01:52:56Z",
    "updated_at": "2015-12-03T01:52:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "no `.query` processes strings so you cannot use strings, this is noted in the documentation.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/161509265",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11723#issuecomment-161509265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11723",
    "id": 161509265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTUwOTI2NQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-03T04:04:39Z",
    "updated_at": "2015-12-03T04:04:39Z",
    "author_association": "MEMBER",
    "body": "I'm not a big fan of including this feature in pandas itself, because it would make the pandas data model significantly more complex. Maybe this could be implemented in some sort of add-on package that wraps pandas DataFrames? Another option would be a [DataFrame subclass](http://pandas.pydata.org/pandas-docs/version/0.17.1/internals.html#subclassing-pandas-data-structures).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/245384831",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11723#issuecomment-245384831",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11723",
    "id": 245384831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTM4NDgzMQ==",
    "user": {
      "login": "ijstokes",
      "id": 293525,
      "node_id": "MDQ6VXNlcjI5MzUyNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/293525?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ijstokes",
      "html_url": "https://github.com/ijstokes",
      "followers_url": "https://api.github.com/users/ijstokes/followers",
      "following_url": "https://api.github.com/users/ijstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ijstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ijstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ijstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ijstokes/orgs",
      "repos_url": "https://api.github.com/users/ijstokes/repos",
      "events_url": "https://api.github.com/users/ijstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ijstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-07T19:09:43Z",
    "updated_at": "2016-09-07T19:09:43Z",
    "author_association": "NONE",
    "body": "There are certainly risks that could be introduced from adding aliasing, but wouldn't a straightforward strategy be to augment the logic in `get_attribute()` that, presumably, already does some form of this.  So if an `alias` dictionary existed on the `DataFrame` then it would try again provided the requested attribute (not found using \"the usual mechanism\") had a key entry in the `alias` dictionary.  E.g.\n\n``` python\n# 1. works today:\ndf['Time of Sale']\n\n# 2. fails today:\ndf.time_of_sale\n\n# 3. could work in the future:\ndf.alias = dict(time_of_sale='Time of Sale')\ndf.time_of_sale\n```\n\nOr maybe I misunderstand and 2. is already possible today.  If so, could someone point me in the right direction toward documentation?  I too would find this quite useful.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/245442199",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11723#issuecomment-245442199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11723",
    "id": 245442199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTQ0MjE5OQ==",
    "user": {
      "login": "bbirand",
      "id": 334435,
      "node_id": "MDQ6VXNlcjMzNDQzNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/334435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bbirand",
      "html_url": "https://github.com/bbirand",
      "followers_url": "https://api.github.com/users/bbirand/followers",
      "following_url": "https://api.github.com/users/bbirand/following{/other_user}",
      "gists_url": "https://api.github.com/users/bbirand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bbirand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bbirand/subscriptions",
      "organizations_url": "https://api.github.com/users/bbirand/orgs",
      "repos_url": "https://api.github.com/users/bbirand/repos",
      "events_url": "https://api.github.com/users/bbirand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bbirand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-07T22:42:09Z",
    "updated_at": "2016-09-07T22:42:09Z",
    "author_association": "NONE",
    "body": "> Or maybe I misunderstand and 2. is already possible today. If so, could someone point me in the right direction toward documentation? I too would find this quite useful.\n\nIn order to do 2., you would have to rename the column, possibly using http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.rename.html\n\nAnd then, when you'd like to print or plot it, you'd rename it back to the original version.\n\nI too think this would still be a good addition for interactive work. To make things even more interesting, I would alias \"Time of Sale\" to \"tos\", so I can work with the data as `df.tos`, but then see the full name when plotted.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421301418",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11723#issuecomment-421301418",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11723",
    "id": 421301418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTMwMTQxOA==",
    "user": {
      "login": "KeithWM",
      "id": 11614277,
      "node_id": "MDQ6VXNlcjExNjE0Mjc3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/11614277?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KeithWM",
      "html_url": "https://github.com/KeithWM",
      "followers_url": "https://api.github.com/users/KeithWM/followers",
      "following_url": "https://api.github.com/users/KeithWM/following{/other_user}",
      "gists_url": "https://api.github.com/users/KeithWM/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KeithWM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KeithWM/subscriptions",
      "organizations_url": "https://api.github.com/users/KeithWM/orgs",
      "repos_url": "https://api.github.com/users/KeithWM/repos",
      "events_url": "https://api.github.com/users/KeithWM/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KeithWM/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T09:56:36Z",
    "updated_at": "2018-09-14T09:56:36Z",
    "author_association": "NONE",
    "body": "I'd also like to see such a feature. For me the favourite use case would be to have nice, legible axes labels (with units) in seaborn plots. I know one can manually set the axis labels, but I find this error prone, too verbose and it leads to code duplication.\r\n\r\nIf you ask me, the easier way would be to keep the _current_ name in the role of an alias as @bbirand proposes, and to add some other field for a longer name, which can default to the \"normal\" name if none is explicitly given."
  }
]
