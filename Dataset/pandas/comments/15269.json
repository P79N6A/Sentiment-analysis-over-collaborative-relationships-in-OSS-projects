[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276330927",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-276330927",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 276330927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjMzMDkyNw==",
    "user": {
      "login": "bluss",
      "id": 3209739,
      "node_id": "MDQ6VXNlcjMyMDk3Mzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3209739?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluss",
      "html_url": "https://github.com/bluss",
      "followers_url": "https://api.github.com/users/bluss/followers",
      "following_url": "https://api.github.com/users/bluss/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluss/subscriptions",
      "organizations_url": "https://api.github.com/users/bluss/orgs",
      "repos_url": "https://api.github.com/users/bluss/repos",
      "events_url": "https://api.github.com/users/bluss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluss/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T10:44:22Z",
    "updated_at": "2017-01-31T10:44:22Z",
    "author_association": "NONE",
    "body": "Is there a fast replacement for `set_value`? Using `loc` in its place seems to be slow.\r\n\r\n```python\r\nIn [328]: columns = list(\"abcdef\")\r\nIn [329]: dx = 0.01; xs = np.arange(0, 1, step=dx);\r\nIn [330]: df = pd.DataFrame(index=xs)\r\nIn [331]: %%timeit\r\n     ...: for x in xs:\r\n     ...:   for c in columns:\r\n     ...:     df.set_value(x, c, 1)\r\n     ...: \r\nThe slowest run took 8.40 times longer than the fastest. This could mean that an intermediate result is being cached.\r\n100 loops, best of 3: 2.24 ms per loop\r\n\r\nIn [333]: df = pd.DataFrame(index=xs)\r\nIn [334]: %%timeit\r\n     ...: for x in xs:\r\n     ...:   for c in columns:\r\n     ...:     df.loc[x, c] = 1\r\n     ...: \r\n10 loops, best of 3: 96.4 ms per loop\r\n``` \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276335695",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-276335695",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 276335695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjMzNTY5NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T11:07:41Z",
    "updated_at": "2017-01-31T11:07:41Z",
    "author_association": "MEMBER",
    "body": "In your example, `df.at[x, c] = 1` is also faster than `loc`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276336615",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-276336615",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 276336615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjMzNjYxNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T11:12:29Z",
    "updated_at": "2017-01-31T11:12:29Z",
    "author_association": "MEMBER",
    "body": "Sparked by https://github.com/pandas-dev/pandas/issues/15268\r\n\r\nPersonally, I never use those functions, so would also not regret them being gone (and would welcome the cleaning up of namespace).\r\n\r\nBut, are there genuine cases where these methods can be useful? (compared to the other indexing methods) Why were they added in the first place? \r\n\r\nOn StackOverflow, it seems mainly mentioned for its speed (eg http://stackoverflow.com/questions/13842088/set-value-for-particular-cell-in-pandas-dataframe/24517695#24517695)\r\n\r\ncc @pandas-dev/pandas-core \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276382712",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-276382712",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 276382712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjM4MjcxMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T14:47:57Z",
    "updated_at": "2017-01-31T14:47:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "IIRC these were *always* there :> (e.g. way before ``.iloc/.loc`` even).\r\n\r\nreplacements are well-supported ``.iat/.at``. (which internally do almost what these functions do, they should be performant, yet support all of the pandas types). These routines are 'raw' and don't do any validation / checking.\r\n\r\nThese are not idiomatic (e.g. calling functions to set/get values). And confusing to beginners."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276470930",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-276470930",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 276470930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjQ3MDkzMA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T19:47:02Z",
    "updated_at": "2017-01-31T19:47:02Z",
    "author_association": "MEMBER",
    "body": "Once upon a time, I spent a lot of time making get_value and set_value extremely fast. Over time the performance has degraded significantly.\r\n\r\nIn the course of rewriting the scalar value access code paths for pandas 2, things will get fast again, so I'm not sure how to proceed given that will occur at some point in the future"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276471603",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-276471603",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 276471603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjQ3MTYwMw==",
    "user": {
      "login": "bluss",
      "id": 3209739,
      "node_id": "MDQ6VXNlcjMyMDk3Mzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3209739?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluss",
      "html_url": "https://github.com/bluss",
      "followers_url": "https://api.github.com/users/bluss/followers",
      "following_url": "https://api.github.com/users/bluss/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluss/subscriptions",
      "organizations_url": "https://api.github.com/users/bluss/orgs",
      "repos_url": "https://api.github.com/users/bluss/repos",
      "events_url": "https://api.github.com/users/bluss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluss/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T19:49:25Z",
    "updated_at": "2017-01-31T19:49:25Z",
    "author_association": "NONE",
    "body": "`.at` is indeed fast, but still slows down that loop example by 2-3x. `.at` is barely documented, too."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276501180",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-276501180",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 276501180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjUwMTE4MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T21:39:42Z",
    "updated_at": "2017-01-31T21:39:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bluss \r\n\r\nyou know you can just do this right:\r\n```\r\nIn [7]: %timeit pd.DataFrame(1.0, index=xs, columns=list('abcde'))\r\n10000 loops, best of 3: 165 µs per loop\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276503920",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-276503920",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 276503920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjUwMzkyMA==",
    "user": {
      "login": "bluss",
      "id": 3209739,
      "node_id": "MDQ6VXNlcjMyMDk3Mzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3209739?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluss",
      "html_url": "https://github.com/bluss",
      "followers_url": "https://api.github.com/users/bluss/followers",
      "following_url": "https://api.github.com/users/bluss/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluss/subscriptions",
      "organizations_url": "https://api.github.com/users/bluss/orgs",
      "repos_url": "https://api.github.com/users/bluss/repos",
      "events_url": "https://api.github.com/users/bluss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluss/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T21:49:56Z",
    "updated_at": "2017-01-31T21:49:56Z",
    "author_association": "NONE",
    "body": "Yes, the actual use case does not write just the same value, but a value specific to the current index and column. I've noticed that if I do it wrong, building the DataFrame overshadows all other computation, but with .set_value it is fine (and .at too, slower but not dominating)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322562966",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-322562966",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 322562966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjU2Mjk2Ng==",
    "user": {
      "login": "dov",
      "id": 338235,
      "node_id": "MDQ6VXNlcjMzODIzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/338235?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dov",
      "html_url": "https://github.com/dov",
      "followers_url": "https://api.github.com/users/dov/followers",
      "following_url": "https://api.github.com/users/dov/following{/other_user}",
      "gists_url": "https://api.github.com/users/dov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dov/subscriptions",
      "organizations_url": "https://api.github.com/users/dov/orgs",
      "repos_url": "https://api.github.com/users/dov/repos",
      "events_url": "https://api.github.com/users/dov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-15T19:22:12Z",
    "updated_at": "2017-08-16T06:33:59Z",
    "author_association": "NONE",
    "body": "I was refered to this issue from #17256, where chris-b1 suggested that I use `loc` instead of `set_value`. I thought that I would share a small test that I made in building a dataframe through various methods. Indeed I switched from `loc` to `set_value` because of a performance problem with `loc`. Consider the following test program that shows the huge difference in efficiency:\r\n\r\n```python\r\nimport pandas as pd\r\nimport numpy as numpy\r\npd.options.display.float_format = '{:,.0f}'.format\r\nimport time\r\n\r\ndf = pd.DataFrame(numpy.random.rand(1000,100)*100)\r\ndf.loc[:,'A'] = None\r\ndf.loc[:,'B'] = None\r\ndf.loc[:,'C'] = None\r\n\r\nt0 = time.time()\r\nfor idx,row in df.iterrows():\r\n  row.loc[('A','B','C')] = (100+idx,200+idx,300+idx)\r\n  df.loc[idx] = row\r\nprint 'First:  ', time.time()-t0\r\n\r\nt0 = time.time()\r\nfor idx,row in df.iterrows():\r\n  row.loc[('A','B','C')] = (100+idx,200+idx,300+idx)\r\nprint 'Second: ', time.time()-t0\r\n\r\nt0 = time.time()\r\nfor idx,row in df.iterrows():\r\n  df.set_value(idx,'A', 100+idx)\r\n  df.set_value(idx,'B', 200+idx)\r\n  df.set_value(idx,'C', 300+idx)\r\nprint 'Third:  ', time.time()-t0\r\n\r\nt0 = time.time()\r\nfor idx,row in df.iterrows():\r\n  df.loc[idx,'A'] = 100+idx\r\n  df.loc[idx,'B'] = 200+idx\r\n  df.loc[idx,'C'] = 300+idx\r\nprint 'Fourth: ', time.time()-t0\r\n\r\nt0 = time.time()\r\nfor idx,row in df.iterrows():\r\n  df.loc[idx,('A','B','C')] = (100+idx,200+idx,300+idx)\r\nprint 'Fifth:  ', time.time()-t0\r\n```\r\nOn my home box this gives the output:\r\n```\r\nFirst:   13.1010141373\r\nSecond:  0.216350078583\r\nThird:   0.0418322086334\r\nFourth:  0.731967926025\r\nFifth:   0.692142963409\r\n\r\n```\r\nUsing `set_value` in the third example is more than 15 times faster than using `loc` in the forth and the fifth exmple! In a real world problem I reduced my run time from 54 to 6 seconds, just by doing these kind of changes. Needless to say, until these problems are solved, will I continue to use `set_value`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322571210",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-322571210",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 322571210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjU3MTIxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-15T19:55:50Z",
    "updated_at": "2017-08-15T19:55:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dov you should simply use ``.at`` and ``.iat``. ``.set_value`` / ``.get_value`` are going to be deprecated. Iteratively setting values is an anti-pattern."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322681450",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-322681450",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 322681450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjY4MTQ1MA==",
    "user": {
      "login": "dov",
      "id": 338235,
      "node_id": "MDQ6VXNlcjMzODIzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/338235?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dov",
      "html_url": "https://github.com/dov",
      "followers_url": "https://api.github.com/users/dov/followers",
      "following_url": "https://api.github.com/users/dov/following{/other_user}",
      "gists_url": "https://api.github.com/users/dov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dov/subscriptions",
      "organizations_url": "https://api.github.com/users/dov/orgs",
      "repos_url": "https://api.github.com/users/dov/repos",
      "events_url": "https://api.github.com/users/dov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-16T06:46:10Z",
    "updated_at": "2017-08-16T06:46:10Z",
    "author_association": "NONE",
    "body": "Thanks @jreback, I missed the `.at` accessor. There are just too many different options! Adding the following to my above script:\r\n\r\n```python\r\nt0 = time.time()\r\nfor idx,row in df.iterrows():\r\n  df.at[idx,'A'] = 100+idx\r\n  df.at[idx,'B'] = 200+idx\r\n  df.at[idx,'C'] = 300+idx\r\nprint 'Sixth: ', time.time()-t0\r\n\r\nAIdx = len(df.columns)-3\r\nBIdx = len(df.columns)-2\r\nCIdx = len(df.columns)-1\r\n\r\nt0 = time.time()\r\nfor idx,row in df.iterrows():\r\n  df.iat[idx,AIdx] = 100+idx\r\n  df.iat[idx,BIdx] = 200+idx\r\n  df.iat[idx,CIdx] = 300+idx\r\nprint 'Seventh: ', time.time()-t0\r\n```\r\ngives the additional output\r\n```\r\nSixth:   0.0538790225983\r\nSeventh: 0.0564727783203\r\n```\r\nI.e. it is \"only\" about 20% slower than the `set_value()` calls. I can live with that, but I still think it is strange to deprecate the fastest option.\r\n\r\nRegarding the anti-pattern of the loop, I agree. But it can just be considered as a stress test run a thousand times. On the other hand I often do something non-pandas related (e.g. image processing) and you just want to store the result in an existing dataframe."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322723934",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-322723934",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 322723934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjcyMzkzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-16T10:00:54Z",
    "updated_at": "2017-08-16T10:00:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "> .ie. it is \"only\" about 20% slower than the set_value() calls. I can live with that, but I still think it is strange to deprecate the fastest option.\r\n\r\n@dov well you can have correct, or slightly faster. I would always take correct.\r\n\r\n> (e.g. image processing) \r\n\r\nthis most certainly is an anti-pattern, there are vectorized methods in other libraries. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374909936",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-374909936",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 374909936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDkwOTkzNg==",
    "user": {
      "login": "PointyShinyBurning",
      "id": 5345844,
      "node_id": "MDQ6VXNlcjUzNDU4NDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5345844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PointyShinyBurning",
      "html_url": "https://github.com/PointyShinyBurning",
      "followers_url": "https://api.github.com/users/PointyShinyBurning/followers",
      "following_url": "https://api.github.com/users/PointyShinyBurning/following{/other_user}",
      "gists_url": "https://api.github.com/users/PointyShinyBurning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PointyShinyBurning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PointyShinyBurning/subscriptions",
      "organizations_url": "https://api.github.com/users/PointyShinyBurning/orgs",
      "repos_url": "https://api.github.com/users/PointyShinyBurning/repos",
      "events_url": "https://api.github.com/users/PointyShinyBurning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PointyShinyBurning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T11:42:26Z",
    "updated_at": "2018-03-21T11:42:26Z",
    "author_association": "NONE",
    "body": "What's the right way to set a single value in a method chain given this deprecation?\r\n\r\nThere's got to be something faster/more readable than:\r\n```python\r\n%timeit df.set_value(1, \"a\", 1).mean()\r\n__main__:1: FutureWarning: set_value is deprecated and will be removed in a future release. Please use .at[] or .iat[] accessors instead\r\n68.6 µs ± 1.11 µs per loop (mean ± std. dev. of 7 runs, 10000 loops each)\r\n\r\n%timeit df.assign(a=lambda f: f.a.mask(f.a.index==1,1)).mean()\r\n632 µs ± 2.36 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374916015",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-374916015",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 374916015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDkxNjAxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T12:10:15Z",
    "updated_at": "2018-03-21T12:10:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "the deprecate warning is pretty explicit "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374922477",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-374922477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 374922477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDkyMjQ3Nw==",
    "user": {
      "login": "PointyShinyBurning",
      "id": 5345844,
      "node_id": "MDQ6VXNlcjUzNDU4NDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5345844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PointyShinyBurning",
      "html_url": "https://github.com/PointyShinyBurning",
      "followers_url": "https://api.github.com/users/PointyShinyBurning/followers",
      "following_url": "https://api.github.com/users/PointyShinyBurning/following{/other_user}",
      "gists_url": "https://api.github.com/users/PointyShinyBurning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PointyShinyBurning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PointyShinyBurning/subscriptions",
      "organizations_url": "https://api.github.com/users/PointyShinyBurning/orgs",
      "repos_url": "https://api.github.com/users/PointyShinyBurning/repos",
      "events_url": "https://api.github.com/users/PointyShinyBurning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PointyShinyBurning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T12:38:13Z",
    "updated_at": "2018-03-21T12:38:13Z",
    "author_association": "NONE",
    "body": "Yes, but `.at[1, \"a\"] = 1 ` returns None, so I have to break the method chain and give the intermediate variable a name.  I have a lot of code that's patterned like https://tomaugspurger.github.io/method-chaining.html which I thought was a style pandas aimed to support?\r\n\r\nI can roll my own but still losing speed/readability quite a bit:\r\n```python\r\ndef set_value(df, index, col, val):\r\n    new_df = df.copy()\r\n    df.at[index, col] = val\r\n    return new_df\r\n\r\n\r\n%timeit df.pipe(set_value, 1, \"a\", 1).mean()\r\n160 µs ± 1.2 µs per loop (mean ± std. dev. of 7 runs, 10000 loops each)\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374930693",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-374930693",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 374930693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDkzMDY5Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T13:09:58Z",
    "updated_at": "2018-03-21T13:09:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "you are missing the point\r\nsetting a single item at a time is non performant and an anti-pattern\r\n\r\nsure you can do it but in a\r\nmethod chain doesn’t make any sense"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374935284",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15269#issuecomment-374935284",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15269",
    "id": 374935284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDkzNTI4NA==",
    "user": {
      "login": "PointyShinyBurning",
      "id": 5345844,
      "node_id": "MDQ6VXNlcjUzNDU4NDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5345844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PointyShinyBurning",
      "html_url": "https://github.com/PointyShinyBurning",
      "followers_url": "https://api.github.com/users/PointyShinyBurning/followers",
      "following_url": "https://api.github.com/users/PointyShinyBurning/following{/other_user}",
      "gists_url": "https://api.github.com/users/PointyShinyBurning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PointyShinyBurning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PointyShinyBurning/subscriptions",
      "organizations_url": "https://api.github.com/users/PointyShinyBurning/orgs",
      "repos_url": "https://api.github.com/users/PointyShinyBurning/repos",
      "events_url": "https://api.github.com/users/PointyShinyBurning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PointyShinyBurning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T13:26:17Z",
    "updated_at": "2018-03-21T13:26:17Z",
    "author_association": "NONE",
    "body": "I understand that it's an anti-pattern to construct a dataframe by doing it 2000 times. I admit I don't really understand why it's wrong to correct, say, the first value in my data because the instrument it comes from has a warm up period?\r\n\r\n(there also isn't a good pattern to set on a slice in a method chain either, of course, but that's a separate issue from removing functionality that already exists)"
  }
]
