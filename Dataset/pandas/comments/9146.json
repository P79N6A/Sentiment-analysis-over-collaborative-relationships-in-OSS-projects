[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68068381",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9146#issuecomment-68068381",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9146",
    "id": 68068381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDY4Mzgx",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-24T18:29:22Z",
    "updated_at": "2014-12-24T18:29:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "This could also support multi-level indexes and panels etc.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68069283",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9146#issuecomment-68069283",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9146",
    "id": 68069283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDY5Mjgz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-24T18:51:04Z",
    "updated_at": "2014-12-24T18:51:16Z",
    "author_association": "MEMBER",
    "body": "@jreback  and i are currently using a schema that looks somewhat like this:\n\n``` python\nschema = {\n    'pandas': {\n        'type': 'DataFrame',\n        'version': pd.__version__,\n        'orient': 'records',\n        'date_unit': 'ms',\n        'values': df,\n        'dtypes': {\n            'str': [dtype.str for dtype in dtypes],\n            'characters': [dtype.char for dtype in dtypes],\n            'kind': [dtype.kind for dtype in dtypes]\n        },\n        'axes': {\n            'columns': {\n                'values': df.columns.values,\n                'dtype': df.columns.dtype.str,\n                'names': df.columns.names\n            },\n            'index': {\n                'values': df.index.values,\n                'dtype': df.index.dtype.str,\n                'names': df.index.names\n            }\n        }\n    }\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68072693",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9146#issuecomment-68072693",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9146",
    "id": 68072693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDcyNjkz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-24T20:20:13Z",
    "updated_at": "2014-12-24T20:21:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Komnomnomnom \n\nthe idea is the encompas enough meta data to really make a DataFrame round tripable w/o passing anything, IOW, making it a fully-capable format. Of course its a 'user-made' one, but that is true with lots of formats.\n\nI suspect lots of people have already implemented this (painfully) by creating their own formats. This is basically trying to set a standard, in that, pandas objects become JSON serializable in a well-defined format.\n\nThis _can_ be done simply by using `pandas.io.json.dumps` with this format on the writing. @cpcloud mentioned that it might be necessary to support some sniffing the reader to de-serialize this format (e.g. look for the `pandas` tag then use the meta-data to set the next part of the serialization options).\n\nThe idea of the format is that it is pretty straightforward to extend to Series/Panel/Multi-Index. \n"
  }
]
