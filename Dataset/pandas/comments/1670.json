[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/7243732",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1670#issuecomment-7243732",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1670",
    "id": 7243732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDM3MzI=",
    "user": {
      "login": "lesteve",
      "id": 1680079,
      "node_id": "MDQ6VXNlcjE2ODAwNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1680079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lesteve",
      "html_url": "https://github.com/lesteve",
      "followers_url": "https://api.github.com/users/lesteve/followers",
      "following_url": "https://api.github.com/users/lesteve/following{/other_user}",
      "gists_url": "https://api.github.com/users/lesteve/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lesteve/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lesteve/subscriptions",
      "organizations_url": "https://api.github.com/users/lesteve/orgs",
      "repos_url": "https://api.github.com/users/lesteve/repos",
      "events_url": "https://api.github.com/users/lesteve/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lesteve/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-25T08:46:14Z",
    "updated_at": "2012-07-25T08:46:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see this has been tagged as Community, I'd be more than happy to take a look at this if I could get a few pointers to get started.\n\nI actually started looking in `matplotlib.axes.AxesSubplot.format_coord` (let me know if this was the wrong place to start from) and ended up in `pandas.tseries.converter.TimeSeries_DateFormatter.__call__` (ax.fmt_xdata is None in my case but that might be set to a function if we don't want to use the formatter in this case).\n\n``` python\n    def __call__(self, x, pos=0):\n        if self.formatdict is None:\n            return ''\n        else:\n            fmt = self.formatdict.pop(x, '')\n            return Period(ordinal=int(x), freq=self.freq).strftime(fmt)\n```\n\nIn my case the formatter formatdict is an empty dict so `__call__` will always return an empty string. I am not sure I understand the reason for the pop (getting the string for a x coordinate may work only once) or the structure of the formatdict (do you really want one format string per timestamp), although I am guessing this is used in the scikits.timeseries style tick labelling.\n\nFinal question what is x supposed to be in this case, is it just an the underlying int64 value of the pandas.Timestamp? What's the best way to get it from a pandas.Timestamp object?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14408484",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1670#issuecomment-14408484",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1670",
    "id": 14408484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDA4NDg0",
    "user": {
      "login": "willfurnass",
      "id": 1249695,
      "node_id": "MDQ6VXNlcjEyNDk2OTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1249695?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willfurnass",
      "html_url": "https://github.com/willfurnass",
      "followers_url": "https://api.github.com/users/willfurnass/followers",
      "following_url": "https://api.github.com/users/willfurnass/following{/other_user}",
      "gists_url": "https://api.github.com/users/willfurnass/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willfurnass/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willfurnass/subscriptions",
      "organizations_url": "https://api.github.com/users/willfurnass/orgs",
      "repos_url": "https://api.github.com/users/willfurnass/repos",
      "events_url": "https://api.github.com/users/willfurnass/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willfurnass/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-04T21:57:15Z",
    "updated_at": "2013-03-04T21:59:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "A simple, possibly crude solution would be to use something like the following at the end of `tsplot(series, plotf, **kwargs)` in `pandas/tseries/plotting.py` \n\n```\nax.format_coord = lambda t, y : \"t = {:%Y-%m-%d %H-%M}    y = {}\".format(\\\n                  datetime.fromtimestamp(t, series.index.to_timestamp().tz)), y)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24862623",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1670#issuecomment-24862623",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1670",
    "id": 24862623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYyNjIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T13:42:10Z",
    "updated_at": "2013-09-21T13:42:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "merged in 0.11\n"
  }
]
