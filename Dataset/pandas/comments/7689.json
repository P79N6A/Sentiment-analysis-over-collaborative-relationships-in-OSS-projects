[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48324159",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-48324159",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 48324159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzI0MTU5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T11:22:46Z",
    "updated_at": "2014-07-08T11:22:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "what are you asking here? pandas provides a read/write API to JSON: http://pandas.pydata.org/pandas-docs/stable/io.html#json, which should be deserializable by foreign JSON parsers. You must use `.to_json()` as a dataframe as many custom types. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48365351",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-48365351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 48365351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzY1MzUx",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T16:39:17Z",
    "updated_at": "2014-07-08T16:39:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello,\n\nThanks I know `to_json()` method\nI thought Pandas DataFrame could inherit an other class to become directly \"JSON serializable\".\nSo `json.dumps(df)` could return exactly the same result as `df.to_json()`.\nSo in this Flask view we could directly return DataFrame (in fact `jsonify(df)`) instead of doing:\n\n```\n    resp = Response(response=df.to_json(),\n        status=200,\n        mimetype=\"application/json\")\n    return(resp)\n```\n\nBut maybe I'm wrong and there is no way for `json.dumps(df)` to return a JSON string.\nI thought that what I'm asking is more a syntactic sugar than a major improvement.\n\nKind regards\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48366525",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-48366525",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 48366525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzY2NTI1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T16:47:02Z",
    "updated_at": "2014-07-08T16:47:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is the typical way to extend the default json encoder\n\n```\nIn [9]: class JSONEncoder(json.JSONEncoder):\n   ...:     def default(self, obj):\n   ...:         if hasattr(obj,'to_json'):\n   ...:             return obj.to_json()\n   ...:         return json.JSONEncoder.default(self, obj)\n   ...:     \n\nIn [10]: json.dumps(df, cls=JSONEncoder)\nOut[10]: '\"{\\\\\"col1\\\\\":{\\\\\"0\\\\\":1,\\\\\"1\\\\\":1,\\\\\"2\\\\\":1,\\\\\"3\\\\\":1,\\\\\"4\\\\\":1,\\\\\"5\\\\\":1,\\\\\"6\\\\\":1,\\\\\"7\\\\\":1,\\\\\"8\\\\\":1,\\\\\"9\\\\\":1},\\\\\"col2\\\\\":{\\\\\"0\\\\\":2,\\\\\"1\\\\\":2,\\\\\"2\\\\\":2,\\\\\"3\\\\\":2,\\\\\"4\\\\\":2,\\\\\"5\\\\\":2,\\\\\"6\\\\\":2,\\\\\"7\\\\\":2,\\\\\"8\\\\\":2,\\\\\"9\\\\\":2}}\"'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48384873",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-48384873",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 48384873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzg0ODcz",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T19:00:56Z",
    "updated_at": "2018-10-12T04:59:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "So you think it's better to define our own JSONEncoder. The problem is that I don't think jsonify support cls argument for encoder... but that's an other problem\r\n\r\nMoreover I noticed\r\n\r\n```\r\nIn [20]: df.to_json()\r\nOut[20]: '{\"col1\":{\"0\":1,\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1I\"6\":1,\"7\":1,\"8\":1,\"9\":1},\"col2\":{\"0\":2,\"1\":2,\"2\":2,\"3\":2,\"4\":2,\"5\":2,\"6\":2,\"7\":2,\"8\":2,\"9\":2}}'\r\n\r\nIn [21]: json.dumps(df, cls=JSONEncoder)\r\nOut[21]: '\"{\\\"col1\\\":{\\\"0\\\":1,\\\"1\\\":1,\\\"2\\\":1,\\\"3\\\":1,\\\"4\\\":1,\\\"5\\\":1,\\\"6\\\":1,\\\"7\\\":1,\\\"8\\\":1,\\\"9\\\":1},\\\"col2\\\":{\\\"0\\\":2,\\\"1\\\":2,\\\"2\\\":2,\\\"3\\\":2,\\\"4\\\":2,\\\"5\\\":2,\\\"6\\\":2,\\\"7\\\":2,\\\"8\\\":2,\\\"9\\\":2}}\"'\r\n```\r\n\r\nit's like a string inside a string...\r\n\r\nWhat I want to encode is in fact\r\n\r\n```\r\n        d = {\"success\":1 , \"return\": df}\r\n```\r\n\r\nI know I can do\r\n\r\n```\r\n        d = \"{\\\"success\\\":1, \\\"return\\\":%s}\" % df.to_json()\r\n```\r\n\r\nbut I feel that's not the right way of doing\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48385168",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-48385168",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 48385168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzg1MTY4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T19:03:16Z",
    "updated_at": "2014-07-08T19:03:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "HTH\n\ntheir are lots of options for `to_json()`, see docs: http://pandas.pydata.org/pandas-docs/stable/io.html#json\n\nnot really sure what you are doing\n\nclosing this as its out of scope for pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48386617",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-48386617",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 48386617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzg2NjE3",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T19:14:48Z",
    "updated_at": "2014-07-08T19:14:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Please try this:\n\n```\nd = {\"success\":1 , \"return\": df}\n\nser=json.dumps(d, cls=JSONEncoder)\n\nunser=json.loads(ser)\n\ntype(unser[\"return\"])\n```\n\nit returns `unicode` I could expect `dict`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48387094",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-48387094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 48387094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzg3MDk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T19:18:34Z",
    "updated_at": "2014-07-08T19:20:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "you need to teach `json` how to do this by defining an object hook. http://www.yilmazhuseyin.com/blog/dev/advanced_json_manipulation_with_python/\n\n```\nIn [13]: pd.read_json(json.loads(ser)['return'])\nOut[13]: \n   col1  col2\n0     1     2\n1     1     2\n2     1     2\n3     1     2\n4     1     2\n5     1     2\n6     1     2\n7     1     2\n8     1     2\n9     1     2\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48389160",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-48389160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 48389160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzg5MTYw",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T19:34:47Z",
    "updated_at": "2014-07-08T19:34:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for this tutorial but there is a difference between the 2 serialized versions\n\n```\nIn [74]: d = {\"success\":1 , \"return\": df}\n\nIn [75]: d\nOut[75]:\n{'return':    col1  col2\n 0     1     2\n 1     1     2\n 2     1     2\n 3     1     2\n 4     1     2\n 5     1     2\n 6     1     2\n 7     1     2\n 8     1     2\n 9     1     2\n\n [10 rows x 2 columns], 'success': 1}\n\nIn [76]: dat_json = \"{\\\"success\\\":1, \\\"return\\\":%s}\" % df.to_json()\n\nIn [77]: dat_json\nOut[77]: '{\"success\":1, \"return\":{\"col1\":{\"0\":1,\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1},\"col2\":{\"0\":2,\"1\":2,\"2\":2,\"3\":2,\"4\":2,\"5\":2,\"6\":2,\"7\":2,\"8\":2,\"9\":2}}}'\n\nIn [78]: dat_json2 = json.dumps(d, cls=JSONEncoder)\n\nIn [79]: dat_json2\nOut[79]: '{\"return\": \"{\\\\\"col1\\\\\":{\\\\\"0\\\\\":1,\\\\\"1\\\\\":1,\\\\\"2\\\\\":1,\\\\\"3\\\\\":1,\\\\\"4\\\\\":1,\\\\\"5\\\\\":1,\\\\\"6\\\\\":1,\\\\\"7\\\\\":1,\\\\\"8\\\\\":1,\\\\\"9\\\\\":1},\\\\\"col2\\\\\":{\\\\\"0\\\\\":2,\\\\\"1\\\\\":2,\\\\\"2\\\\\":2,\\\\\"3\\\\\":2,\\\\\"4\\\\\":2,\\\\\"5\\\\\":2,\\\\\"6\\\\\":2,\\\\\"7\\\\\":2,\\\\\"8\\\\\":2,\\\\\"9\\\\\":2}}\", \"success\": 1}'\n```\n\nIs there a clean solution with a custom encoder for object with to_json method (like DataFrame) to output correctly JSON (without extra quotes)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48389421",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-48389421",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 48389421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzg5NDIx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T19:37:01Z",
    "updated_at": "2014-07-08T19:37:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is maybe a question for SO, I don't use custom uncoders at all. It seems a whole lot simpler for you to simply call `df.to_json()` which returns a string no? (then since you know the structure, then just `pd.read_json()` when you need to.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48389901",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-48389901",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 48389901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzg5OTAx",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T19:40:57Z",
    "updated_at": "2014-07-08T19:40:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I understand your reply... but imagine you have several dataframes to output into the same JSON message.... doing things this way is not very clear. I think it's much more clear to have a dict structure which can contains several df (and other data) and after serialize it.\n\nAbout deserialization... yes that's not a problem... I know structure and where are dataframes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48390207",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-48390207",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 48390207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzkwMjA3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T19:43:12Z",
    "updated_at": "2014-07-08T19:43:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, as I said, you maybe want to do custom encoding/decoding like I showed above. You need to write that. a dataframe can be turned into json via `to_json` and read by `read_json`. when to do that is up 2 u.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48391812",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-48391812",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 48391812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzkxODEy",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T19:55:42Z",
    "updated_at": "2014-07-08T19:55:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "It works much better with this custom encoder (with `to_dict` method):\n\n```\nclass JSONEncoder(json.JSONEncoder):\n    def default(self, obj):\n        if hasattr(obj,'to_dict'):\n            return obj.to_dict()\n        return json.JSONEncoder.default(self, obj)\n\nIn: size = 10\nIn: df = pd.DataFrame({\"col1\": [1]*size, \"col2\": [2]*size})\nIn: ser = json.dumps(d, cls=JSONEncoder)\nOut: '{\"return\": {\"col2\": {\"0\": 2, \"1\": 2, \"2\": 2, \"3\": 2, \"4\": 2, \"5\": 2, \"6\": 2, \"7\": 2, \"8\": 2, \"9\": 2}, \"col1\": {\"0\": 1, \"1\": 1, \"2\": 1, \"3\": 1, \"4\": 1, \"5\": 1, \"6\": 1, \"7\": 1, \"8\": 1, \"9\": 1}}, \"success\": 1}'\nunser=json.loads(ser)\n\nIn: print(unser)\nOut: {u'return': {u'col2': {u'1': 2, u'0': 2, u'3': 2, u'2': 2, u'5': 2, u'4': 2, u'7': 2, u'6': 2, u'9': 2, u'8': 2}, u'col1': {u'1': 1, u'0': 1, u'3': 1, u'2': 1, u'5': 1, u'4': 1, u'7': 1, u'6': 1, u'9': 1, u'8': 1}}, u'success': 1}\n\nIn: type(unser)\nOut: dict\n\npd.DataFrame(unser['return'])\n```\n\nThere is no extra quotes.\n\nThanks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48397560",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-48397560",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 48397560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzk3NTYw",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T20:48:44Z",
    "updated_at": "2014-07-08T20:48:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Problem is that in fact I can't use 'orient' parameter which is very convenient to reduce message size. Maybe a `to_object(orient='...')` could be a good idea and could be call by `to_json`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/255893305",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-255893305",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 255893305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTg5MzMwNQ==",
    "user": {
      "login": "wegry",
      "id": 5156873,
      "node_id": "MDQ6VXNlcjUxNTY4NzM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5156873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wegry",
      "html_url": "https://github.com/wegry",
      "followers_url": "https://api.github.com/users/wegry/followers",
      "following_url": "https://api.github.com/users/wegry/following{/other_user}",
      "gists_url": "https://api.github.com/users/wegry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wegry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wegry/subscriptions",
      "organizations_url": "https://api.github.com/users/wegry/orgs",
      "repos_url": "https://api.github.com/users/wegry/repos",
      "events_url": "https://api.github.com/users/wegry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wegry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-24T23:20:16Z",
    "updated_at": "2016-10-24T23:20:28Z",
    "author_association": "NONE",
    "body": "@scls19fr this is obviously an old issue, but seeing as I stumbled upon it. The easiest way to nest a dataframe in a larger JSON blob is to use \n\n```\ndemo = {\n    'key': df.to_dict(orient='record')\n}\n\njson.dump(demo)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/255964168",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-255964168",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 255964168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTk2NDE2OA==",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T07:58:18Z",
    "updated_at": "2017-10-13T10:09:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @wegry I'm aware of https://github.com/pandas-dev/pandas/pull/8486 which closes https://github.com/pandas-dev/pandas/issues/7840\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336408630",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-336408630",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 336408630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjQwODYzMA==",
    "user": {
      "login": "Abir0802",
      "id": 31650001,
      "node_id": "MDQ6VXNlcjMxNjUwMDAx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/31650001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Abir0802",
      "html_url": "https://github.com/Abir0802",
      "followers_url": "https://api.github.com/users/Abir0802/followers",
      "following_url": "https://api.github.com/users/Abir0802/following{/other_user}",
      "gists_url": "https://api.github.com/users/Abir0802/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Abir0802/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Abir0802/subscriptions",
      "organizations_url": "https://api.github.com/users/Abir0802/orgs",
      "repos_url": "https://api.github.com/users/Abir0802/repos",
      "events_url": "https://api.github.com/users/Abir0802/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Abir0802/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T10:00:25Z",
    "updated_at": "2017-10-13T10:01:07Z",
    "author_association": "NONE",
    "body": "you can use make_response from flask , e.g. \r\nresp = make_response(df.to_json(orient = \"records\"))\r\nand then simply return it. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429150546",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7689#issuecomment-429150546",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7689",
    "id": 429150546,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTE1MDU0Ng==",
    "user": {
      "login": "shwetasit",
      "id": 36028387,
      "node_id": "MDQ6VXNlcjM2MDI4Mzg3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36028387?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shwetasit",
      "html_url": "https://github.com/shwetasit",
      "followers_url": "https://api.github.com/users/shwetasit/followers",
      "following_url": "https://api.github.com/users/shwetasit/following{/other_user}",
      "gists_url": "https://api.github.com/users/shwetasit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shwetasit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shwetasit/subscriptions",
      "organizations_url": "https://api.github.com/users/shwetasit/orgs",
      "repos_url": "https://api.github.com/users/shwetasit/repos",
      "events_url": "https://api.github.com/users/shwetasit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shwetasit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-11T23:04:32Z",
    "updated_at": "2018-10-11T23:04:32Z",
    "author_association": "NONE",
    "body": "This saved my life. Thank you!"
  }
]
