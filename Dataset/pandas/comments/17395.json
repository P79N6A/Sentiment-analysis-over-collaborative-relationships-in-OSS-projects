[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/326268798",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17395#issuecomment-326268798",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17395",
    "id": 326268798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjI2ODc5OA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-31T11:33:52Z",
    "updated_at": "2017-08-31T11:34:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I get the inconsistency, but the general answer of `len(df) = # of rows` isn't going to change, at minimum because of backwards compat.  In general pandas is willing to bend/break python semantics some for usability (maybe too much!) because pandas is something of a DSL (non scalar `==`, non-runnable repr, etc).\r\n\r\nIn general empty DataFrames with a non-empty axis are messy, there's probably an argument for dis-allowing altogether."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/326269505",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17395#issuecomment-326269505",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17395",
    "id": 326269505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjI2OTUwNQ==",
    "user": {
      "login": "DRMacIver",
      "id": 28623,
      "node_id": "MDQ6VXNlcjI4NjIz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/28623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DRMacIver",
      "html_url": "https://github.com/DRMacIver",
      "followers_url": "https://api.github.com/users/DRMacIver/followers",
      "following_url": "https://api.github.com/users/DRMacIver/following{/other_user}",
      "gists_url": "https://api.github.com/users/DRMacIver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DRMacIver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DRMacIver/subscriptions",
      "organizations_url": "https://api.github.com/users/DRMacIver/orgs",
      "repos_url": "https://api.github.com/users/DRMacIver/repos",
      "events_url": "https://api.github.com/users/DRMacIver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DRMacIver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-31T11:37:33Z",
    "updated_at": "2017-08-31T11:37:33Z",
    "author_association": "NONE",
    "body": "> I get the inconsistency, but the general answer of len(df) = # of rows isn't going to change, at minimum because of backwards compat. \r\n\r\nAh, apologies, in that case this was actually me failing to properly understand the semantics of len on data frames and being conned into thinking my interpretation was right by looking at too simple examples!\r\n\r\nFWIW this behaviour is extremely confusing, and as a result I really don't think it contributes to usability at all, but I totally get not wanting to change it for backwards compatibility reasons and this certainly isn't the bug I thought it was, so I'll close this issue."
  }
]
