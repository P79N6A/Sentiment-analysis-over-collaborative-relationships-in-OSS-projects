[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355196761",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19069#issuecomment-355196761",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19069",
    "id": 355196761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTE5Njc2MQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-04T04:31:54Z",
    "updated_at": "2018-01-06T05:42:43Z",
    "author_association": "NONE",
    "body": "Hello @mroeschke! Thanks for updating the PR.\n\n - In the file [`asv_bench/benchmarks/pandas_vb_common.py`](https://github.com/pandas-dev/pandas/blob/fb0852ff9cc2f4bb027279cf1e15860636739eba/asv_bench/benchmarks/pandas_vb_common.py), following are the PEP8 issues :\n\n> [Line 15:5](https://github.com/pandas-dev/pandas/blob/fb0852ff9cc2f4bb027279cf1e15860636739eba/asv_bench/benchmarks/pandas_vb_common.py#L15): [E722](https://duckduckgo.com/?q=pep8%20E722) do not use bare except'\n\n\n\n\n\n##### Comment last updated on January 06, 2018 at 05:42 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355505174",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19069#issuecomment-355505174",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19069",
    "id": 355505174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTUwNTE3NA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-01-05T09:03:38Z",
    "updated_at": "2018-01-06T09:29:46Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19069?src=pr&el=h1) Report\n> Merging [#19069](https://codecov.io/gh/pandas-dev/pandas/pull/19069?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/35b2aba7386619dc156ca245cab781d3aea37789?src=pr&el=desc) will **increase** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/19069/graphs/tree.svg?width=650&height=150&token=eZ4WkYLtcO&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/19069?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #19069      +/-   ##\n==========================================\n+ Coverage   91.51%   91.53%   +0.01%     \n==========================================\n  Files         148      148              \n  Lines       48680    48688       +8     \n==========================================\n+ Hits        44550    44566      +16     \n+ Misses       4130     4122       -8\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.9% <ø> (+0.01%)` | :arrow_up: |\n| #single | `41.63% <ø> (-0.06%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/19069?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/indexes/interval.py](https://codecov.io/gh/pandas-dev/pandas/pull/19069/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9pbnRlcnZhbC5weQ==) | `92.19% <0%> (-0.43%)` | :arrow_down: |\n| [pandas/core/indexes/timedeltas.py](https://codecov.io/gh/pandas-dev/pandas/pull/19069/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy90aW1lZGVsdGFzLnB5) | `90.92% <0%> (-0.17%)` | :arrow_down: |\n| [pandas/core/ops.py](https://codecov.io/gh/pandas-dev/pandas/pull/19069/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvb3BzLnB5) | `91.89% <0%> (-0.02%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/19069/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.62% <0%> (-0.01%)` | :arrow_down: |\n| [pandas/core/strings.py](https://codecov.io/gh/pandas-dev/pandas/pull/19069/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc3RyaW5ncy5weQ==) | `98.46% <0%> (-0.01%)` | :arrow_down: |\n| [pandas/core/groupby.py](https://codecov.io/gh/pandas-dev/pandas/pull/19069/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ3JvdXBieS5weQ==) | `92.14% <0%> (ø)` | :arrow_up: |\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/19069/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `95.9% <0%> (ø)` | :arrow_up: |\n| [pandas/core/reshape/merge.py](https://codecov.io/gh/pandas-dev/pandas/pull/19069/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS9tZXJnZS5weQ==) | `94.21% <0%> (ø)` | :arrow_up: |\n| [pandas/core/dtypes/dtypes.py](https://codecov.io/gh/pandas-dev/pandas/pull/19069/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2R0eXBlcy5weQ==) | `95.31% <0%> (+0.03%)` | :arrow_up: |\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/19069/diff?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `66.95% <0%> (+1.73%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19069?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19069?src=pr&el=footer). Last update [35b2aba...fb0852f](https://codecov.io/gh/pandas-dev/pandas/pull/19069?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355616814",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19069#issuecomment-355616814",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19069",
    "id": 355616814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTYxNjgxNA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T17:38:41Z",
    "updated_at": "2018-01-05T17:38:41Z",
    "author_association": "MEMBER",
    "body": "There is no open issue about linting the asv (#18545 is a closed issue about linting them). "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355725353",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19069#issuecomment-355725353",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19069",
    "id": 355725353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTcyNTM1Mw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-06T05:43:57Z",
    "updated_at": "2018-01-06T05:43:57Z",
    "author_association": "MEMBER",
    "body": "Removed `pandas_tseries` from the lib import in `pandas_vb_common.py`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355761409",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19069#issuecomment-355761409",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19069",
    "id": 355761409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTc2MTQwOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-06T17:20:18Z",
    "updated_at": "2018-01-06T17:20:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @mroeschke nice work!\r\n\r\ncan you give a run to *all* benchmarks to make sure that they run and nothing is too excessive for times."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355799750",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19069#issuecomment-355799750",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19069",
    "id": 355799750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTc5OTc1MA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-07T04:59:31Z",
    "updated_at": "2018-01-07T04:59:31Z",
    "author_association": "MEMBER",
    "body": "I still have 3 more timeseries benchmarks left to clean up, but it looks like there's some benchmarks in `GroupByMethods` that are taking upwards of 30s on my machine (due to large test sizes) that can be reduced:\r\n\r\n```\r\n[  0.30%] ··· Running ...ns.time_different_python_functions_multicol     35.6ms\r\n[  0.45%] ··· Running ...s.time_different_python_functions_singlecol      574ms\r\n[  0.60%] ··· Running ...y.AggFunctions.time_different_str_functions     23.7ms\r\n[  0.60%] ··· Setting up /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/inference.py:39\r\n[  0.75%] ··· Running inference.DateInferOps.time_add_timedeltas          459ms\r\n[  0.90%] ··· Running inference.DateInferOps.time_subtract_datetimes      487ms\r\n[  1.05%] ··· Running ...e.DateInferOps.time_timedelta_plus_datetime      578ms\r\n[  1.05%] ··· Setting up /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/groupby.py:66\r\n[  1.20%] ··· Running groupby.Groups.time_series_groups                      ok\r\n[  1.20%] ···· \r\n               ============== ========\r\n                    key               \r\n               -------------- --------\r\n                int64_small    88.5ms \r\n                int64_large    292ms  \r\n                object_small   137ms  \r\n                object_large   484ms  \r\n               ============== ========\r\n\r\n[  1.35%] ··· Running algorithms.Duplicated.time_duplicated_float            ok\r\n[  1.35%] ···· \r\n               ======= ========\r\n                 keep          \r\n               ------- --------\r\n                first   34.1ms \r\n                 last   35.5ms \r\n                False   39.7ms \r\n               ======= ========\r\n\r\n[  1.50%] ··· Running algorithms.Duplicated.time_duplicated_int              ok\r\n[  1.50%] ···· \r\n               ======= ========\r\n                 keep          \r\n               ------- --------\r\n                first   21.4ms \r\n                 last   22.4ms \r\n                False   31.3ms \r\n               ======= ========\r\n\r\n[  1.65%] ··· Running algorithms.Duplicated.time_duplicated_string           ok\r\n[  1.65%] ···· \r\n               ======= ========\r\n                 keep          \r\n               ------- --------\r\n                first   24.8ms \r\n                 last   25.2ms \r\n                False   23.8ms \r\n               ======= ========\r\n\r\n[  1.80%] ··· Running ...catedUniqueIndex.time_duplicated_unique_int      349μs\r\n[  1.95%] ··· Running algorithms.Factorize.time_factorize_float              ok\r\n[  1.95%] ···· \r\n               ======= ========\r\n                 sort          \r\n               ------- --------\r\n                 True   53.8ms \r\n                False   29.3ms \r\n               ======= ========\r\n\r\n[  2.11%] ··· Running algorithms.Factorize.time_factorize_int                ok\r\n[  2.11%] ···· \r\n               ======= ========\r\n                 sort          \r\n               ------- --------\r\n                 True   34.7ms \r\n                False   20.0ms \r\n               ======= ========\r\n\r\n[  2.26%] ··· Running algorithms.Factorize.time_factorize_string             ok\r\n[  2.26%] ···· \r\n               ======= ========\r\n                 sort          \r\n               ------- --------\r\n                 True   265ms  \r\n                False   42.4ms \r\n               ======= ========\r\n\r\n[  2.41%] ··· Running algorithms.Match.time_match_string                  711μs\r\n[  2.41%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/algorithms.py:86: FutureWarning: pd.match() is deprecated and will be removed in a future version\r\n                pd.match(self.all, self.uniques)\r\n\r\n[  2.56%] ··· Running ...s_caching.CacheReadonly.time_cache_readonly     10.5μs\r\n[  2.71%] ··· Running ..._caching.DataFrameAttributes.time_get_index     10.9μs\r\n[  2.86%] ··· Running ..._caching.DataFrameAttributes.time_set_index     24.7μs\r\n[  3.01%] ··· Running ...verflowArray.time_add_overflow_arr_mask_nan     38.0ms\r\n[  3.16%] ··· Running ....AddOverflowArray.time_add_overflow_arr_rev     24.8ms\r\n[  3.31%] ··· Running ...dOverflowArray.time_add_overflow_b_mask_nan     38.2ms\r\n[  3.46%] ··· Running ...verflowArray.time_add_overflow_both_arg_nan     39.9ms\r\n[  3.61%] ··· Running ....AddOverflowScalar.time_add_overflow_scalar         ok\r\n[  3.61%] ···· \r\n               ======== ========\r\n                scalar          \r\n               -------- --------\r\n                  1      19.4ms \r\n                  -1     19.9ms \r\n                  0      20.2ms \r\n               ======== ========\r\n\r\n[  3.76%] ··· Running binary_ops.Ops.time_frame_add                          ok\r\n[  3.76%] ···· \r\n               ============= ========= ========\r\n               --                 threads      \r\n               ------------- ------------------\r\n                use_numexpr   default     1    \r\n               ============= ========= ========\r\n                    True       27.1ms   21.4ms \r\n                   False       22.2ms   21.1ms \r\n               ============= ========= ========\r\n\r\n[  3.91%] ··· Running binary_ops.Ops.time_frame_comparison                   ok\r\n[  3.91%] ···· \r\n               ============= ========= ========\r\n               --                 threads      \r\n               ------------- ------------------\r\n                use_numexpr   default     1    \r\n               ============= ========= ========\r\n                    True       16.2ms   10.2ms \r\n                   False       125ms    124ms  \r\n               ============= ========= ========\r\n\r\n[  4.06%] ··· Running binary_ops.Ops.time_frame_mult                         ok\r\n[  4.06%] ···· \r\n               ============= ========= ========\r\n               --                 threads      \r\n               ------------- ------------------\r\n                use_numexpr   default     1    \r\n               ============= ========= ========\r\n                    True       55.5ms   21.2ms \r\n                   False       20.6ms   20.6ms \r\n               ============= ========= ========\r\n\r\n[  4.21%] ··· Running binary_ops.Ops.time_frame_multi_and                    ok\r\n[  4.21%] ···· \r\n               ============= ========= =======\r\n               --                 threads     \r\n               ------------- -----------------\r\n                use_numexpr   default     1   \r\n               ============= ========= =======\r\n                    True       135ms    110ms \r\n                   False       97.4ms   105ms \r\n               ============= ========= =======\r\n\r\n[  4.36%] ··· Running binary_ops.Ops2.time_frame_float_div               71.0ms\r\n[  4.51%] ··· Running binary_ops.Ops2.time_frame_float_div_by_zero       23.4ms\r\n[  4.66%] ··· Running binary_ops.Ops2.time_frame_float_floor_by_zero     84.1ms\r\n[  4.81%] ··· Running binary_ops.Ops2.time_frame_float_mod               25.6ms\r\n[  4.96%] ··· Running binary_ops.Ops2.time_frame_int_div_by_zero         23.3ms\r\n[  5.11%] ··· Running binary_ops.Ops2.time_frame_int_mod                 45.2ms\r\n[  5.26%] ··· Running ...ps.Timeseries.time_series_timestamp_compare         ok\r\n[  5.26%] ···· \r\n               ============ ========\r\n                    tz              \r\n               ------------ --------\r\n                   None      5.33ms \r\n                US/Eastern   5.58ms \r\n               ============ ========\r\n\r\n[  5.41%] ··· Running binary_ops.Timeseries.time_timestamp_ops_diff          ok\r\n[  5.41%] ···· \r\n               ============ ========\r\n                    tz              \r\n               ------------ --------\r\n                   None      36.9ms \r\n                US/Eastern   42.1ms \r\n               ============ ========\r\n\r\n[  5.56%] ··· Running ...meseries.time_timestamp_ops_diff_with_shift         ok\r\n[  5.56%] ···· \r\n               ============ ========\r\n                    tz              \r\n               ------------ --------\r\n                   None      118ms  \r\n                US/Eastern   60.5ms \r\n               ============ ========\r\n\r\n[  5.71%] ··· Running ...ps.Timeseries.time_timestamp_series_compare         ok\r\n[  5.71%] ···· \r\n               ============ ========\r\n                    tz              \r\n               ------------ --------\r\n                   None      5.48ms \r\n                US/Eastern   5.57ms \r\n               ============ ========\r\n\r\n[  5.86%] ··· Running categoricals.Concat.time_concat                    16.1ms\r\n[  6.02%] ··· Running categoricals.Concat.time_union                     11.1ms\r\n[  6.17%] ··· Running categoricals.Constructor.time_all_nan               113ms\r\n[  6.32%] ··· Running categoricals.Constructor.time_datetimes            2.37ms\r\n[  6.47%] ··· Running ...oricals.Constructor.time_datetimes_with_nat     2.47ms\r\n[  6.62%] ··· Running categoricals.Constructor.time_fastpath             1.55ms\r\n[  6.77%] ··· Running categoricals.Constructor.time_regular              32.1ms\r\n[  6.92%] ··· Running categoricals.Constructor.time_with_nan              332ms\r\n[  7.07%] ··· Running categoricals.Rank.time_rank_int                    10.6ms\r\n[  7.07%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/categoricals.py:122: FutureWarning: specifying 'categories' or 'ordered' in .astype() is deprecated; pass a CategoricalDtype instead\r\n                  self.s_str_cat_ordered = self.s_str.astype('category', ordered=True)\r\n                /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/categoricals.py:126: FutureWarning: specifying 'categories' or 'ordered' in .astype() is deprecated; pass a CategoricalDtype instead\r\n                  self.s_int_cat_ordered = self.s_int.astype('category', ordered=True)\r\n\r\n[  7.22%] ··· Running categoricals.Rank.time_rank_int_cat                12.7ms\r\n[  7.22%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/categoricals.py:122: FutureWarning: specifying 'categories' or 'ordered' in .astype() is deprecated; pass a CategoricalDtype instead\r\n                  self.s_str_cat_ordered = self.s_str.astype('category', ordered=True)\r\n                /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/categoricals.py:126: FutureWarning: specifying 'categories' or 'ordered' in .astype() is deprecated; pass a CategoricalDtype instead\r\n                  self.s_int_cat_ordered = self.s_int.astype('category', ordered=True)\r\n\r\n[  7.37%] ··· Running categoricals.Rank.time_rank_int_cat_ordered        12.2ms\r\n[  7.37%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/categoricals.py:122: FutureWarning: specifying 'categories' or 'ordered' in .astype() is deprecated; pass a CategoricalDtype instead\r\n                  self.s_str_cat_ordered = self.s_str.astype('category', ordered=True)\r\n                /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/categoricals.py:126: FutureWarning: specifying 'categories' or 'ordered' in .astype() is deprecated; pass a CategoricalDtype instead\r\n                  self.s_int_cat_ordered = self.s_int.astype('category', ordered=True)\r\n\r\n[  7.52%] ··· Running categoricals.Rank.time_rank_string                  338ms\r\n[  7.52%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/categoricals.py:122: FutureWarning: specifying 'categories' or 'ordered' in .astype() is deprecated; pass a CategoricalDtype instead\r\n                  self.s_str_cat_ordered = self.s_str.astype('category', ordered=True)\r\n                /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/categoricals.py:126: FutureWarning: specifying 'categories' or 'ordered' in .astype() is deprecated; pass a CategoricalDtype instead\r\n                  self.s_int_cat_ordered = self.s_int.astype('category', ordered=True)\r\n\r\n[  7.67%] ··· Running categoricals.Rank.time_rank_string_cat             16.2ms\r\n[  7.67%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/categoricals.py:122: FutureWarning: specifying 'categories' or 'ordered' in .astype() is deprecated; pass a CategoricalDtype instead\r\n                  self.s_str_cat_ordered = self.s_str.astype('category', ordered=True)\r\n                /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/categoricals.py:126: FutureWarning: specifying 'categories' or 'ordered' in .astype() is deprecated; pass a CategoricalDtype instead\r\n                  self.s_int_cat_ordered = self.s_int.astype('category', ordered=True)\r\n                /home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/pandas/core/categorical.py:1591: FutureWarning: Treating Series 'new_categories' as a list-like and using the values. In a future version, 'rename_categories' will treat Series like a dictionary.\r\n                For dict-like, use 'new_categories.to_dict()'\r\n                For list-like, use 'new_categories.values'.\r\n                  self.rename_categories(Series(self.categories).rank())\r\n\r\n[  7.82%] ··· Running categoricals.Rank.time_rank_string_cat_ordered     11.6ms\r\n[  7.82%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/categoricals.py:122: FutureWarning: specifying 'categories' or 'ordered' in .astype() is deprecated; pass a CategoricalDtype instead\r\n                  self.s_str_cat_ordered = self.s_str.astype('category', ordered=True)\r\n                /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/categoricals.py:126: FutureWarning: specifying 'categories' or 'ordered' in .astype() is deprecated; pass a CategoricalDtype instead\r\n                  self.s_int_cat_ordered = self.s_int.astype('category', ordered=True)\r\n\r\n[  7.97%] ··· Running categoricals.Repr.time_rendering                   1.80ms\r\n[  8.12%] ··· Running categoricals.SetCategories.time_set_categories     50.1ms\r\n[  8.27%] ··· Running categoricals.ValueCounts.time_value_counts             ok\r\n[  8.27%] ···· \r\n               ======== ========\r\n                dropna          \r\n               -------- --------\r\n                 True    61.6ms \r\n                False    60.1ms \r\n               ======== ========\r\n\r\n[  8.42%] ··· Running ...xConstructor.time_multiindex_from_iterables     20.5ms\r\n[  8.57%] ··· Running ....SeriesConstructors.time_series_constructor         ok\r\n[  8.57%] ···· \r\n               ======================================= ======== ========\r\n               --                                          with_index   \r\n               --------------------------------------- -----------------\r\n                               data_fmt                 False     True  \r\n               ======================================= ======== ========\r\n                <function <lambda> at 0x7f9c849e3a28>   101μs    141μs  \r\n                            <type 'list'>               3.48ms   3.62ms \r\n                <function <lambda> at 0x7f9c849e3cf8>   835μs    871μs  \r\n                <function <lambda> at 0x7f9c849e3e60>   11.1ms   8.96ms \r\n                <function <lambda> at 0x7f9c849e3ed8>   1.06ms   1.16ms \r\n                <function <lambda> at 0x7f9c849e3f50>   1.19ms   1.10ms \r\n                <function <lambda> at 0x7f9c849e8050>   1.03ms   1.11ms \r\n                <function <lambda> at 0x7f9c849e80c8>   1.10ms   1.08ms \r\n               ======================================= ======== ========\r\n\r\n[  8.72%] ··· Running ...ructors.time_dtindex_from_index_with_series      195μs\r\n[  8.87%] ··· Running ...DtypesConstructors.time_dtindex_from_series      115μs\r\n[  9.02%] ··· Running ...esConstructors.time_index_from_array_floats      140μs\r\n[  9.17%] ··· Running ...esConstructors.time_index_from_array_string      203μs\r\n[  9.32%] ··· Running eval.Eval.time_add                                     ok\r\n[  9.32%] ···· \r\n               ========= ======== ========\r\n               --             threads     \r\n               --------- -----------------\r\n                 engine     1       all   \r\n               ========= ======== ========\r\n                numexpr   39.3ms   77.1ms \r\n                 python   59.6ms   136ms  \r\n               ========= ======== ========\r\n\r\n[  9.47%] ··· Running eval.Eval.time_and                                     ok\r\n[  9.47%] ···· \r\n               ========= ======== ========\r\n               --             threads     \r\n               --------- -----------------\r\n                 engine     1       all   \r\n               ========= ======== ========\r\n                numexpr   55.5ms   59.8ms \r\n                 python   110ms    111ms  \r\n               ========= ======== ========\r\n\r\n[  9.62%] ··· Running eval.Eval.time_chained_cmp                             ok\r\n[  9.62%] ···· \r\n               ========= ======== ========\r\n               --             threads     \r\n               --------- -----------------\r\n                 engine     1       all   \r\n               ========= ======== ========\r\n                numexpr   48.5ms   56.9ms \r\n                 python   54.2ms   74.8ms \r\n               ========= ======== ========\r\n\r\n[  9.77%] ··· Running eval.Eval.time_mult                                    ok\r\n[  9.77%] ···· \r\n               ========= ======== ========\r\n               --             threads     \r\n               --------- -----------------\r\n                 engine     1       all   \r\n               ========= ======== ========\r\n                numexpr   39.1ms   73.1ms \r\n                 python   59.5ms   136ms  \r\n               ========= ======== ========\r\n\r\n[  9.92%] ··· Running eval.Query.time_query_datetime_column              19.6ms\r\n[ 10.08%] ··· Running eval.Query.time_query_datetime_index               41.5ms\r\n[ 10.23%] ··· Running eval.Query.time_query_with_boolean_selection       69.1ms\r\n[ 10.38%] ··· Running frame_ctor.FromDicts.time_dict                     4.83ms\r\n[ 10.53%] ··· Running frame_ctor.FromDicts.time_list_of_dict              149ms\r\n[ 10.68%] ··· Running frame_ctor.FromDicts.time_nested_dict              90.0ms\r\n[ 10.83%] ··· Running frame_ctor.FromDicts.time_nested_dict_int64         204ms\r\n[ 10.98%] ··· Running ...hTimestamp.time_dict_with_timestamp_offsets         ok\r\n[ 10.98%] ···· \r\n               ======== ========\r\n                offset          \r\n               -------- --------\r\n                <Nano>   71.5ms \r\n                <Hour>   93.3ms \r\n               ======== ========\r\n\r\n[ 11.13%] ··· Running frame_ctor.FromNDArray.time_frame_from_ndarray      374μs\r\n[ 11.28%] ··· Running ...omRecords.time_frame_from_records_generator         ok\r\n[ 11.28%] ···· \r\n               ======= ========\r\n                nrows          \r\n               ------- --------\r\n                 None   141ms  \r\n                 1000   2.36ms \r\n               ======= ========\r\n\r\n[ 11.43%] ··· Running frame_ctor.FromSeries.time_mi_series                289μs\r\n[ 11.58%] ··· Running frame_methods.Apply.time_apply_axis_1               725ms\r\n[ 11.73%] ··· Running frame_methods.Apply.time_apply_lambda_mean         12.2ms\r\n[ 11.88%] ··· Running frame_methods.Apply.time_apply_np_mean             13.6ms\r\n[ 12.03%] ··· Running frame_methods.Apply.time_apply_pass_thru           14.2ms\r\n[ 12.18%] ··· Running frame_methods.Apply.time_apply_ref_by_name         65.1ms\r\n[ 12.33%] ··· Running frame_methods.Apply.time_apply_user_func            262ms\r\n[ 12.48%] ··· Running ...s.Count.time_count_level_mixed_dtypes_multi         ok\r\n[ 12.48%] ···· \r\n               ====== =======\r\n                axis         \r\n               ------ -------\r\n                 0     145ms \r\n                 1     127ms \r\n               ====== =======\r\n\r\n[ 12.63%] ··· Running frame_methods.Count.time_count_level_multi             ok\r\n[ 12.63%] ···· \r\n               ====== =======\r\n                axis         \r\n               ------ -------\r\n                 0     114ms \r\n                 1     155ms \r\n               ====== =======\r\n\r\n[ 12.78%] ··· Running frame_methods.Dropna.time_dropna                       ok\r\n[ 12.78%] ···· \r\n               ===== ======== ========\r\n               --           axis      \r\n               ----- -----------------\r\n                how     0        1    \r\n               ===== ======== ========\r\n                all   141ms    152ms  \r\n                any   61.3ms   63.3ms \r\n               ===== ======== ========\r\n\r\n[ 12.93%] ··· Running ...ethods.Dropna.time_dropna_axis_mixed_dtypes         ok\r\n[ 12.93%] ···· \r\n               ===== ======= =======\r\n               --          axis     \r\n               ----- ---------------\r\n                how     0       1   \r\n               ===== ======= =======\r\n                all   429ms   440ms \r\n                any   331ms   339ms \r\n               ===== ======= =======\r\n\r\n[ 13.08%] ··· Running frame_methods.Dtypes.time_frame_dtypes              338μs\r\n[ 13.23%] ··· Running frame_methods.Duplicated.time_frame_duplicated      361ms\r\n[ 13.38%] ··· Running ...thods.Duplicated.time_frame_duplicated_wide      393ms\r\n[ 13.53%] ··· Running frame_methods.Equals.time_frame_float_equal        7.63ms\r\n[ 13.68%] ··· Running frame_methods.Equals.time_frame_float_unequal      21.7ms\r\n[ 13.83%] ··· Running ...e_methods.Equals.time_frame_nonunique_equal     11.8ms\r\n[ 13.98%] ··· Running ...methods.Equals.time_frame_nonunique_unequal     12.0ms\r\n[ 14.14%] ··· Running frame_methods.Equals.time_frame_object_equal       42.1ms\r\n[ 14.29%] ··· Running frame_methods.Equals.time_frame_object_unequal     26.3ms\r\n[ 14.44%] ··· Running frame_methods.Fillna.time_frame_fillna                 ok\r\n[ 14.44%] ···· \r\n               ========= ======== ========\r\n               --              method     \r\n               --------- -----------------\r\n                inplace    pad     bfill  \r\n               ========= ======== ========\r\n                  True    16.6ms   16.8ms \r\n                 False    17.1ms   16.8ms \r\n               ========= ======== ========\r\n\r\n[ 14.59%] ··· Running ....GetDtypeCounts.time_frame_get_dtype_counts      476μs\r\n[ 14.74%] ··· Running frame_methods.GetDtypeCounts.time_info              972ms\r\n[ 14.74%] ····· <class 'pandas.core.frame.DataFrame'>\r\n                RangeIndex: 10 entries, 0 to 9\r\n                Columns: 10000 entries, 0 to 9999\r\n                dtypes: float64(10000)\r\n                memory usage: 781.3 KB\r\n\r\n[ 14.89%] ··· Running ....GetNumericData.time_frame_get_numeric_data      321μs\r\n[ 14.89%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/frame_methods.py:18: FutureWarning: consolidate is deprecated and will be removed in a future release.\r\n                self.df = self.df.consolidate()\r\n\r\n[ 15.04%] ··· Running frame_methods.Interpolate.time_interpolate             ok\r\n[ 15.04%] ···· \r\n               ========== =======\r\n                downcast         \r\n               ---------- -------\r\n                  None     105ms \r\n                 infer     162ms \r\n               ========== =======\r\n\r\n[ 15.19%] ··· Running ...hods.Interpolate.time_interpolate_some_good         ok\r\n[ 15.19%] ···· \r\n               ========== ========\r\n                downcast          \r\n               ---------- --------\r\n                  None     3.07ms \r\n                 infer     6.04ms \r\n               ========== ========\r\n\r\n[ 15.34%] ··· Running frame_methods.Isnull.time_isnull                   2.48ms\r\n[ 15.49%] ··· Running ...e_methods.Isnull.time_isnull_floats_no_null     2.53ms\r\n[ 15.64%] ··· Running frame_methods.Isnull.time_isnull_obj               92.4ms\r\n[ 15.79%] ··· Running frame_methods.Isnull.time_isnull_strngs            84.3ms\r\n[ 15.94%] ··· Running frame_methods.Iteration.time_iteritems             84.4ms\r\n[ 16.09%] ··· Running frame_methods.Iteration.time_iteritems_cached      84.9ms\r\n[ 16.24%] ··· Running ...e_methods.Iteration.time_iteritems_indexing      445ms\r\n[ 16.39%] ··· Running frame_methods.Iteration.time_iterrows               587ms\r\n[ 16.54%] ··· Running frame_methods.Iteration.time_itertuples            91.6ms\r\n[ 16.69%] ··· Running frame_methods.Lookup.time_frame_fancy_lookup       7.61ms\r\n[ 16.84%] ··· Running ..._methods.Lookup.time_frame_fancy_lookup_all     48.3ms\r\n[ 16.99%] ··· Running frame_methods.MaskBool.time_frame_mask_bools       32.7ms\r\n[ 17.14%] ··· Running frame_methods.MaskBool.time_frame_mask_floats      25.8ms\r\n[ 17.29%] ··· Running frame_methods.NSort.time_nlargest                      ok\r\n[ 17.29%] ···· \r\n               ======= ========\r\n                 keep          \r\n               ------- --------\r\n                first   3.63ms \r\n                 last   3.60ms \r\n               ======= ========\r\n\r\n[ 17.44%] ··· Running frame_methods.NSort.time_nsmallest                     ok\r\n[ 17.44%] ···· \r\n               ======= ========\r\n                 keep          \r\n               ------- --------\r\n                first   3.58ms \r\n                 last   3.57ms \r\n               ======= ========\r\n\r\n[ 17.59%] ··· Running frame_methods.Nunique.time_frame_nunique            804ms\r\n[ 17.74%] ··· Running frame_methods.Quantile.time_frame_quantile             ok\r\n[ 17.74%] ···· \r\n               ====== ========\r\n                axis          \r\n               ------ --------\r\n                 0     1.05ms \r\n                 1     1.67ms \r\n               ====== ========\r\n\r\n[ 17.89%] ··· Running frame_methods.Reindex.time_reindex_axis0           19.8ms\r\n[ 18.05%] ··· Running frame_methods.Reindex.time_reindex_axis1            140ms\r\n[ 18.20%] ··· Running frame_methods.Reindex.time_reindex_both_axes       54.7ms\r\n[ 18.35%] ··· Running ...e_methods.Reindex.time_reindex_both_axes_ix     54.2ms\r\n[ 18.50%] ··· Running frame_methods.Reindex.time_reindex_upcast          19.5ms\r\n[ 18.65%] ··· Running frame_methods.Repr.time_frame_repr_wide            33.5ms\r\n[ 18.80%] ··· Running frame_methods.Repr.time_html_repr_trunc_mi          907ms\r\n[ 18.95%] ··· Running frame_methods.Repr.time_html_repr_trunc_si          829ms\r\n[ 19.10%] ··· Running frame_methods.Repr.time_repr_tall                  55.2ms\r\n[ 19.25%] ··· Running frame_methods.Shift.time_shift                         ok\r\n[ 19.25%] ···· \r\n               ====== ========\r\n                axis          \r\n               ------ --------\r\n                 0     39.8ms \r\n                 1     45.4ms \r\n               ====== ========\r\n\r\n[ 19.40%] ··· Running ...ByColumns.time_frame_sort_values_by_columns     68.9ms\r\n[ 19.55%] ··· Running ...e_methods.SortValues.time_frame_sort_values         ok\r\n[ 19.55%] ···· \r\n               =========== =======\r\n                ascending         \r\n               ----------- -------\r\n                   True     387ms \r\n                  False     393ms \r\n               =========== =======\r\n\r\n[ 19.70%] ··· Running frame_methods.ToHTML.time_to_html_mixed            failed\r\n[ 19.70%] ····· Traceback (most recent call last):\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 818, in <module>\r\n                    commands[mode](args)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 789, in main_run\r\n                    skip = benchmark.do_setup()\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 393, in do_setup\r\n                    result = Benchmark.do_setup(self)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 327, in do_setup\r\n                    setup(*self._current_params)\r\n                  File \"/home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/frame_methods.py\", line 130, in setup\r\n                    self.df2[0] = period_range('2000', '2010', nrows)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/pandas/core/indexes/period.py\", line 1226, in period_range\r\n                    raise ValueError('Of the three parameters: start, end, and periods, '\r\n                ValueError: Of the three parameters: start, end, and periods, exactly two must be specified\r\n\r\n[ 19.85%] ··· Running frame_methods.ToString.time_to_string_floats       73.5ms\r\n[ 20.00%] ··· Running frame_methods.XS.time_frame_xs                         ok\r\n[ 20.00%] ···· \r\n               ====== =======\r\n                axis         \r\n               ------ -------\r\n                 0     887μs \r\n                 1     752μs \r\n               ====== =======\r\n\r\n[ 20.15%] ··· Running ...allelDatetimeFields.time_datetime_field_day      226ms\r\n[ 20.30%] ··· Running ...etimeFields.time_datetime_field_daysinmonth      236ms\r\n[ 20.45%] ··· Running ...atetimeFields.time_datetime_field_normalize      327ms\r\n[ 20.60%] ··· Running ...llelDatetimeFields.time_datetime_field_year      223ms\r\n[ 20.75%] ··· Running ...allelDatetimeFields.time_datetime_to_period      237ms\r\n[ 20.90%] ··· Running ...allelDatetimeFields.time_period_to_datetime      325ms\r\n[ 21.05%] ··· Running gil.ParallelFactorize.time_loop                        ok\r\n[ 21.05%] ···· \r\n               ========= ========\r\n                threads          \r\n               --------- --------\r\n                   2      83.9ms \r\n                   4      167ms  \r\n                   8      332ms  \r\n               ========= ========\r\n\r\n[ 21.20%] ··· Running gil.ParallelFactorize.time_parallel                    ok\r\n[ 21.20%] ···· \r\n               ========= =======\r\n                threads         \r\n               --------- -------\r\n                   2      103ms \r\n                   4      229ms \r\n                   8      491ms \r\n               ========= =======\r\n\r\n[ 21.35%] ··· Running gil.ParallelGroupbyMethods.time_loop                   ok\r\n[ 21.35%] ···· \r\n               ========= ======== ========\r\n                threads   method          \r\n               --------- -------- --------\r\n                   2      count    112ms  \r\n                   2       last    102ms  \r\n                   2       max     99.4ms \r\n                   2       mean    102ms  \r\n                   2       min     99.0ms \r\n                   2       prod    101ms  \r\n                   2       sum     102ms  \r\n                   2       var     125ms  \r\n                   4      count    226ms  \r\n                   4       last    201ms  \r\n                   4       max     196ms  \r\n                   4       mean    205ms  \r\n                   4       min     199ms  \r\n                   4       prod    201ms  \r\n                   4       sum     200ms  \r\n                   4       var     250ms  \r\n                   8      count    492ms  \r\n                   8       last    447ms  \r\n                   8       max     432ms  \r\n                   8       mean    444ms  \r\n                   8       min     433ms  \r\n                   8       prod    443ms  \r\n                   8       sum     438ms  \r\n                   8       var     535ms  \r\n               ========= ======== ========\r\n\r\n[ 21.50%] ··· Running gil.ParallelGroupbyMethods.time_parallel               ok\r\n[ 21.50%] ···· \r\n               ========= ======== =======\r\n                threads   method         \r\n               --------- -------- -------\r\n                   2      count    168ms \r\n                   2       last    136ms \r\n                   2       max     124ms \r\n                   2       mean    136ms \r\n                   2       min     136ms \r\n                   2       prod    139ms \r\n                   2       sum     135ms \r\n                   2       var     159ms \r\n                   4      count    360ms \r\n                   4       last    292ms \r\n                   4       max     283ms \r\n                   4       mean    295ms \r\n                   4       min     276ms \r\n                   4       prod    282ms \r\n                   4       sum     285ms \r\n                   4       var     331ms \r\n                   8      count    744ms \r\n                   8       last    600ms \r\n                   8       max     568ms \r\n                   8       mean    604ms \r\n                   8       min     590ms \r\n                   8       prod    595ms \r\n                   8       sum     535ms \r\n                   8       var     726ms \r\n               ========= ======== =======\r\n\r\n[ 21.65%] ··· Running gil.ParallelGroups.time_get_groups                     ok\r\n[ 21.65%] ···· \r\n               ========= =======\r\n                threads         \r\n               --------- -------\r\n                   2      1.49s \r\n                   4      2.96s \r\n                   8      5.93s \r\n               ========= =======\r\n\r\n[ 21.80%] ··· Running gil.ParallelKth.time_kth_smallest                   292ms\r\n[ 21.95%] ··· Running gil.ParallelReadCSV.time_read_csv                      ok\r\n[ 21.95%] ···· \r\n               ========== ========\r\n                 dtype            \r\n               ---------- --------\r\n                 float     587ms  \r\n                 object    31.8ms \r\n                datetime   600ms  \r\n               ========== ========\r\n\r\n[ 22.11%] ··· Running gil.ParallelRolling.time_rolling                       ok\r\n[ 22.11%] ···· \r\n               ================ ========\r\n                    method              \r\n               ---------------- --------\r\n                rolling_median   232ms  \r\n                 rolling_mean    10.2ms \r\n                 rolling_min     18.6ms \r\n                 rolling_max     15.4ms \r\n                 rolling_var     15.2ms \r\n                 rolling_skew    27.2ms \r\n                 rolling_kurt    20.2ms \r\n                 rolling_std     8.49ms \r\n               ================ ========\r\n\r\n[ 22.26%] ··· Running gil.ParallelTake1D.time_take1d                         ok\r\n[ 22.26%] ···· \r\n               ========= ========\r\n                 dtype           \r\n               --------- --------\r\n                 int64    23.5ms \r\n                float64   19.7ms \r\n               ========= ========\r\n\r\n[ 22.41%] ··· Running ...lyDictReturn.time_groupby_apply_dict_return     92.4ms\r\n[ 22.56%] ··· Running ...by.Categories.time_groupby_extra_cat_nosort     13.9ms\r\n[ 22.71%] ··· Running groupby.Categories.time_groupby_extra_cat_sort     4.00ms\r\n[ 22.86%] ··· Running groupby.Categories.time_groupby_nosort             17.3ms\r\n[ 23.01%] ··· Running groupby.Categories.time_groupby_ordered_nosort     26.3ms\r\n[ 23.16%] ··· Running groupby.Categories.time_groupby_ordered_sort       4.54ms\r\n[ 23.31%] ··· Running groupby.Categories.time_groupby_sort               4.89ms\r\n[ 23.46%] ··· Running groupby.DateAttributes.time_len_groupby_object      330ms\r\n[ 23.61%] ··· Running groupby.Datelike.time_sum                              ok\r\n[ 23.61%] ···· \r\n               =============== ========\r\n                   grouper             \r\n               --------------- --------\r\n                 period_range   62.9ms \r\n                  date_range    5.12ms \r\n                date_range_tz   8.15ms \r\n               =============== ========\r\n\r\n[ 23.76%] ··· Running groupby.FirstLast.time_groupby_first                   ok\r\n[ 23.76%] ···· \r\n               ========== ========\r\n                 dtype            \r\n               ---------- --------\r\n                float32    11.3ms \r\n                float64    10.9ms \r\n                datetime   23.0ms \r\n                 object    29.0ms \r\n               ========== ========\r\n\r\n[ 23.91%] ··· Running groupby.FirstLast.time_groupby_last                    ok\r\n[ 23.91%] ···· \r\n               ========== ========\r\n                 dtype            \r\n               ---------- --------\r\n                float32    10.8ms \r\n                float64    10.7ms \r\n                datetime   23.1ms \r\n                 object    28.4ms \r\n               ========== ========\r\n\r\n[ 24.06%] ··· Running groupby.FirstLast.time_groupby_nth_all                 ok\r\n[ 24.06%] ···· \r\n               ========== ========\r\n                 dtype            \r\n               ---------- --------\r\n                float32    57.3ms \r\n                float64    58.3ms \r\n                datetime   83.2ms \r\n                 object    95.1ms \r\n               ========== ========\r\n\r\n[ 24.21%] ··· Running groupby.FirstLast.time_groupby_nth_none                ok\r\n[ 24.21%] ···· \r\n               ========== ========\r\n                 dtype            \r\n               ---------- --------\r\n                float32    31.4ms \r\n                float64    31.6ms \r\n                datetime   44.8ms \r\n                 object    47.6ms \r\n               ========== ========\r\n\r\n[ 24.36%] ··· Running groupby.Float32.time_sum                           21.4ms\r\n[ 24.51%] ··· Running groupby.GroupByMethods.time_all                        ok\r\n[ 24.51%] ···· \r\n               ======= ======== =======\r\n               --          ngroups     \r\n               ------- ----------------\r\n                dtype    100     10000 \r\n               ======= ======== =======\r\n                 int    27.3ms   2.52s \r\n                float   41.6ms   3.99s \r\n               ======= ======== =======\r\n\r\n[ 24.66%] ··· Running groupby.GroupByMethods.time_any                        ok\r\n[ 24.66%] ···· \r\n               ======= ======== =======\r\n               --          ngroups     \r\n               ------- ----------------\r\n                dtype    100     10000 \r\n               ======= ======== =======\r\n                 int    27.6ms   2.52s \r\n                float   41.5ms   3.97s \r\n               ======= ======== =======\r\n\r\n[ 24.81%] ··· Running groupby.GroupByMethods.time_count                      ok\r\n[ 24.81%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.09ms   4.10ms \r\n                float   1.21ms   5.67ms \r\n               ======= ======== ========\r\n\r\n[ 24.96%] ··· Running groupby.GroupByMethods.time_cumcount                   ok\r\n[ 24.96%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.23ms   5.49ms \r\n                float   1.28ms   6.77ms \r\n               ======= ======== ========\r\n\r\n[ 25.11%] ··· Running groupby.GroupByMethods.time_cummax                     ok\r\n[ 25.11%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.27ms   4.50ms \r\n                float   1.32ms   5.80ms \r\n               ======= ======== ========\r\n\r\n[ 25.26%] ··· Running groupby.GroupByMethods.time_cummin                     ok\r\n[ 25.26%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.32ms   4.54ms \r\n                float   1.35ms   5.96ms \r\n               ======= ======== ========\r\n\r\n[ 25.41%] ··· Running groupby.GroupByMethods.time_cumprod                    ok\r\n[ 25.41%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.65ms   5.16ms \r\n                float   1.73ms   6.68ms \r\n               ======= ======== ========\r\n\r\n[ 25.56%] ··· Running groupby.GroupByMethods.time_cumsum                     ok\r\n[ 25.56%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.33ms   4.30ms \r\n                float   1.38ms   6.00ms \r\n               ======= ======== ========\r\n\r\n[ 25.71%] ··· Running groupby.GroupByMethods.time_describe                   ok\r\n[ 25.71%] ···· \r\n               ======= ======= =======\r\n               --          ngroups    \r\n               ------- ---------------\r\n                dtype    100    10000 \r\n               ======= ======= =======\r\n                 int    323ms   31.7s \r\n                float   503ms   50.0s \r\n               ======= ======= =======\r\n\r\n[ 25.86%] ··· Running groupby.GroupByMethods.time_diff                       ok\r\n[ 25.86%] ···· \r\n               ======= ======== =======\r\n               --          ngroups     \r\n               ------- ----------------\r\n                dtype    100     10000 \r\n               ======= ======== =======\r\n                 int    35.9ms   3.26s \r\n                float   54.0ms   5.16s \r\n               ======= ======== =======\r\n\r\n[ 26.02%] ··· Running groupby.GroupByMethods.time_first                      ok\r\n[ 26.02%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.25ms   4.58ms \r\n                float   1.29ms   6.19ms \r\n               ======= ======== ========\r\n\r\n[ 26.17%] ··· Running groupby.GroupByMethods.time_head                       ok\r\n[ 26.17%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.73ms   5.91ms \r\n                float   1.78ms   7.20ms \r\n               ======= ======== ========\r\n\r\n[ 26.32%] ··· Running groupby.GroupByMethods.time_last                       ok\r\n[ 26.32%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.22ms   4.45ms \r\n                float   1.29ms   6.10ms \r\n               ======= ======== ========\r\n\r\n[ 26.47%] ··· Running groupby.GroupByMethods.time_mad                                     ok\r\n[ 26.47%] ···· \r\n               ======= ======= =======\r\n               --          ngroups    \r\n               ------- ---------------\r\n                dtype    100    10000 \r\n               ======= ======= =======\r\n                 int    533ms   10.4s \r\n                float   577ms   16.3s \r\n               ======= ======= =======\r\n\r\n[ 26.62%] ··· Running groupby.GroupByMethods.time_max                        ok\r\n[ 26.62%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.27ms   4.60ms \r\n                float   1.35ms   6.09ms \r\n               ======= ======== ========\r\n\r\n[ 26.77%] ··· Running groupby.GroupByMethods.time_mean                       ok\r\n[ 26.77%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.42ms   4.78ms \r\n                float   1.69ms   7.08ms \r\n               ======= ======== ========\r\n\r\n[ 26.92%] ··· Running groupby.GroupByMethods.time_median                     ok\r\n[ 26.92%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.43ms   5.52ms \r\n                float   1.70ms   7.61ms \r\n               ======= ======== ========\r\n\r\n[ 27.07%] ··· Running groupby.GroupByMethods.time_min                        ok\r\n[ 27.07%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.31ms   4.66ms \r\n                float   1.34ms   6.13ms \r\n               ======= ======== ========\r\n\r\n[ 27.22%] ··· Running groupby.GroupByMethods.time_nunique                    ok\r\n[ 27.22%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.22ms   8.95ms \r\n                float   1.24ms   10.6ms \r\n               ======= ======== ========\r\n\r\n[ 27.37%] ··· Running groupby.GroupByMethods.time_pct_change                 ok\r\n[ 27.37%] ···· \r\n               ======= ======= =======\r\n               --          ngroups    \r\n               ------- ---------------\r\n                dtype    100    10000 \r\n               ======= ======= =======\r\n                 int    535ms   11.5s \r\n                float   595ms   17.9s \r\n               ======= ======= =======\r\n\r\n[ 27.52%] ··· Running groupby.GroupByMethods.time_prod                       ok\r\n[ 27.52%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.63ms   5.17ms \r\n                float   1.65ms   7.08ms \r\n               ======= ======== ========\r\n\r\n[ 27.67%] ··· Running groupby.GroupByMethods.time_rank                       ok\r\n[ 27.67%] ···· \r\n               ======= ======== =======\r\n               --          ngroups     \r\n               ------- ----------------\r\n                dtype    100     10000 \r\n               ======= ======== =======\r\n                 int    40.0ms   3.75s \r\n                float   60.2ms   5.90s \r\n               ======= ======== =======\r\n\r\n[ 27.82%] ··· Running groupby.GroupByMethods.time_sem                        ok\r\n[ 27.82%] ···· \r\n               ======= ======= =======\r\n               --          ngroups    \r\n               ------- ---------------\r\n                dtype    100    10000 \r\n               ======= ======= =======\r\n                 int    416ms   423ms \r\n                float   418ms   427ms \r\n               ======= ======= =======\r\n\r\n[ 27.97%] ··· Running groupby.GroupByMethods.time_shift                      ok\r\n[ 27.97%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.07ms   4.77ms \r\n                float   1.12ms   6.47ms \r\n               ======= ======== ========\r\n\r\n[ 28.12%] ··· Running groupby.GroupByMethods.time_size                       ok\r\n[ 28.12%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.04ms   3.93ms \r\n                float   1.09ms   5.42ms \r\n               ======= ======== ========\r\n\r\n[ 28.27%] ··· Running groupby.GroupByMethods.time_skew                       ok\r\n[ 28.27%] ···· \r\n               ======= ======== =======\r\n               --          ngroups     \r\n               ------- ----------------\r\n                dtype    100     10000 \r\n               ======= ======== =======\r\n                 int    43.5ms   4.12s \r\n                float   66.3ms   6.44s \r\n               ======= ======== =======\r\n\r\n[ 28.42%] ··· Running groupby.GroupByMethods.time_std                        ok\r\n[ 28.42%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.56ms   5.22ms \r\n                float   1.49ms   6.64ms \r\n               ======= ======== ========\r\n\r\n[ 28.57%] ··· Running groupby.GroupByMethods.time_sum                        ok\r\n[ 28.57%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.64ms   5.26ms \r\n                float   1.73ms   6.91ms \r\n               ======= ======== ========\r\n\r\n[ 28.72%] ··· Running groupby.GroupByMethods.time_tail                       ok\r\n[ 28.72%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.74ms   6.02ms \r\n                float   1.81ms   7.21ms \r\n               ======= ======== ========\r\n\r\n[ 28.87%] ··· Running groupby.GroupByMethods.time_unique                     ok\r\n[ 28.87%] ···· \r\n               ======= ======== =======\r\n               --          ngroups     \r\n               ------- ----------------\r\n                dtype    100     10000 \r\n               ======= ======== =======\r\n                 int    31.5ms   2.86s \r\n                float   47.3ms   4.51s \r\n               ======= ======== =======\r\n\r\n[ 29.02%] ··· Running groupby.GroupByMethods.time_value_counts               ok\r\n[ 29.02%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.85ms   14.9ms \r\n                float   1.91ms   16.7ms \r\n               ======= ======== ========\r\n\r\n[ 29.17%] ··· Running groupby.GroupByMethods.time_var                        ok\r\n[ 29.17%] ···· \r\n               ======= ======== ========\r\n               --           ngroups     \r\n               ------- -----------------\r\n                dtype    100     10000  \r\n               ======= ======== ========\r\n                 int    1.39ms   5.23ms \r\n                float   1.39ms   6.31ms \r\n               ======= ======== ========\r\n\r\n[ 29.32%] ··· Running groupby.GroupManyLabels.time_sum                       ok\r\n[ 29.32%] ···· \r\n               ======= ========\r\n                ncols          \r\n               ------- --------\r\n                  1     6.73ms \r\n                 1000   15.6ms \r\n               ======= ========\r\n\r\n[ 29.47%] ··· Running groupby.GroupStrings.time_multi_columns            failed\r\n[ 29.47%] ····· Traceback (most recent call last):\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 818, in <module>\r\n                    commands[mode](args)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 789, in main_run\r\n                    skip = benchmark.do_setup()\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 393, in do_setup\r\n                    result = Benchmark.do_setup(self)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 327, in do_setup\r\n                    setup(*self._current_params)\r\n                  File \"/home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/groupby.py\", line 286, in setup\r\n                    (n // 1)), 1)})\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/pandas/core/frame.py\", line 330, in __init__\r\n                    mgr = self._init_dict(data, index, columns, dtype=dtype)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/pandas/core/frame.py\", line 461, in _init_dict\r\n                    return _arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/pandas/core/frame.py\", line 6163, in _arrays_to_mgr\r\n                    index = extract_index(arrays)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/pandas/core/frame.py\", line 6211, in extract_index\r\n                    raise ValueError('arrays must all be same length')\r\n                ValueError: arrays must all be same length\r\n\r\n[ 29.62%] ··· Running groupby.Int64.time_overflow                         596ms\r\n[ 29.77%] ··· Running groupby.Size.time_category_size                    15.2ms\r\n[ 29.92%] ··· Running groupby.Size.time_dt_size                          19.7ms\r\n[ 30.08%] ··· Running groupby.Size.time_dt_timegrouper_size              57.8ms\r\n[ 30.08%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/groupby.py:349: FutureWarning: pd.TimeGrouper is deprecated and will be removed; Please use pd.Grouper(freq=...)\r\n                self.df.groupby(TimeGrouper(key='dates', freq='M')).size()\r\n\r\n[ 30.23%] ··· Running groupby.Size.time_multi_size                       27.2ms\r\n[ 30.38%] ··· Running groupby.SumBools.time_groupby_sum_booleans         3.48ms\r\n[ 30.53%] ··· Running ...y.SumMultiLevel.time_groupby_sum_multiindex     2.79ms\r\n[ 30.68%] ··· Running groupby.Transform.time_transform_lambda_max         724ms\r\n[ 30.83%] ··· Running groupby.Transform.time_transform_multi_key1        17.1ms\r\n[ 30.98%] ··· Running groupby.Transform.time_transform_multi_key2        14.1ms\r\n[ 31.13%] ··· Running groupby.Transform.time_transform_multi_key3        13.5ms\r\n[ 31.28%] ··· Running groupby.Transform.time_transform_multi_key4        6.91ms\r\n[ 31.43%] ··· Running groupby.Transform.time_transform_ufunc_max         20.6ms\r\n[ 31.58%] ··· Running groupby.TransformBools.time_transform_mean         10.2ms\r\n[ 31.73%] ··· Running groupby.TransformNaN.time_first                    6.32ms\r\n[ 31.88%] ··· Running index_object.Datetime.time_is_dates_only            349μs\r\n[ 32.03%] ··· Running index_object.Float64IndexMethod.time_get_loc       7.95ms\r\n[ 32.18%] ··· Running index_object.IndexAppend.time_append_int_list       323ms\r\n[ 32.33%] ··· Running index_object.IndexAppend.time_append_obj_list       305ms\r\n[ 32.48%] ··· Running ...x_object.IndexAppend.time_append_range_list      164ms\r\n[ 32.63%] ··· Running index_object.Indexing.time_boolean_array               ok\r\n[ 32.63%] ···· \r\n               ======== ========\r\n                dtype           \r\n               -------- --------\r\n                String   35.8ms \r\n                Float    6.97ms \r\n                 Int     6.96ms \r\n               ======== ========\r\n\r\n[ 32.78%] ··· Running index_object.Indexing.time_boolean_series              ok\r\n[ 32.78%] ···· \r\n               ======== ========\r\n                dtype           \r\n               -------- --------\r\n                String   35.9ms \r\n                Float    7.03ms \r\n                 Int     7.00ms \r\n               ======== ========\r\n\r\n[ 32.93%] ··· Running index_object.Indexing.time_get                         ok\r\n[ 32.93%] ···· \r\n               ======== ========\r\n                dtype           \r\n               -------- --------\r\n                String   24.1μs \r\n                Float    26.5μs \r\n                 Int     27.4μs \r\n               ======== ========\r\n\r\n[ 33.08%] ··· Running index_object.Indexing.time_slice                       ok\r\n[ 33.08%] ···· \r\n               ======== ========\r\n                dtype           \r\n               -------- --------\r\n                String   55.5μs \r\n                Float    56.6μs \r\n                 Int     55.4μs \r\n               ======== ========\r\n\r\n[ 33.23%] ··· Running index_object.Indexing.time_slice_step                  ok\r\n[ 33.23%] ···· \r\n               ======== ========\r\n                dtype           \r\n               -------- --------\r\n                String   83.2μs \r\n                Float    57.3μs \r\n                 Int     55.9μs \r\n               ======== ========\r\n\r\n[ 33.38%] ··· Running index_object.Ops.time_add                              ok\r\n[ 33.38%] ···· \r\n               ======= ========\r\n                dtype          \r\n               ------- --------\r\n                float   5.50ms \r\n                 int    5.43ms \r\n               ======= ========\r\n\r\n[ 33.53%] ··· Running index_object.Ops.time_divide                           ok\r\n[ 33.53%] ···· \r\n               ======= ========\r\n                dtype          \r\n               ------- --------\r\n                float   5.38ms \r\n                 int    20.6ms \r\n               ======= ========\r\n\r\n[ 33.68%] ··· Running index_object.Ops.time_modulo                           ok\r\n[ 33.68%] ···· \r\n               ======= ========\r\n                dtype          \r\n               ------- --------\r\n                float   15.7ms \r\n                 int    19.3ms \r\n               ======= ========\r\n\r\n[ 33.83%] ··· Running index_object.Ops.time_multiply                         ok\r\n[ 33.83%] ···· \r\n               ======= ========\r\n                dtype          \r\n               ------- --------\r\n                float   5.41ms \r\n                 int    5.39ms \r\n               ======= ========\r\n\r\n[ 33.98%] ··· Running index_object.Ops.time_subtract                         ok\r\n[ 33.98%] ···· \r\n               ======= ========\r\n                dtype          \r\n               ------- --------\r\n                float   5.45ms \r\n                 int    5.38ms \r\n               ======= ========\r\n\r\n[ 34.14%] ··· Running index_object.Range.time_max                        13.3μs\r\n[ 34.29%] ··· Running index_object.Range.time_max_trivial                13.2μs\r\n[ 34.44%] ··· Running index_object.Range.time_min                        13.4μs\r\n[ 34.59%] ··· Running index_object.Range.time_min_trivial                13.0μs\r\n[ 34.74%] ··· Running ...tDisjoint.time_datetime_difference_disjoint     10.2ms\r\n[ 34.89%] ··· Running index_object.SetOperations.time_operation              ok\r\n[ 34.89%] ···· \r\n               ============= ====================== ========\r\n                   dtype             method                 \r\n               ------------- ---------------------- --------\r\n                  datetime        intersection       5.97ms \r\n                  datetime           union           8.34ms \r\n                  datetime    symmetric_difference   32.8ms \r\n                date_string       intersection       69.7ms \r\n                date_string          union           68.8ms \r\n                date_string   symmetric_difference   135ms  \r\n                    int           intersection       2.55ms \r\n                    int              union           2.53ms \r\n                    int       symmetric_difference   24.3ms \r\n                  strings         intersection       70.0ms \r\n                  strings            union           253ms  \r\n                  strings     symmetric_difference   96.3ms \r\n               ============= ====================== ========\r\n\r\n[ 35.04%] ··· Running ...iesIndex.time_frame_assign_timeseries_index     5.91ms\r\n[ 35.19%] ··· Running ....DataFrameNumericIndexing.time_bool_indexer     1.45ms\r\n[ 35.34%] ··· Running indexing.DataFrameNumericIndexing.time_iloc         525μs\r\n[ 35.49%] ··· Running ...ing.DataFrameNumericIndexing.time_iloc_dups      537μs\r\n[ 35.64%] ··· Running indexing.DataFrameNumericIndexing.time_loc          871μs\r\n[ 35.79%] ··· Running ...xing.DataFrameNumericIndexing.time_loc_dups     6.69ms\r\n[ 35.94%] ··· Running ...g.DataFrameStringIndexing.time_boolean_rows      680μs\r\n[ 36.09%] ··· Running ...rameStringIndexing.time_boolean_rows_object      677μs\r\n[ 36.24%] ··· Running ...xing.DataFrameStringIndexing.time_get_value      214μs\r\n[ 36.24%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/indexing.py:115: FutureWarning: get_value is deprecated and will be removed in a future release. Please use .at[] or .iat[] accessors instead\r\n                self.df.get_value(self.idx_scalar, self.col_scalar)\r\n\r\n[ 36.39%] ··· Running ...DataFrameStringIndexing.time_getitem_scalar      236μs\r\n[ 36.54%] ··· Running indexing.DataFrameStringIndexing.time_ix            360μs\r\n[ 36.69%] ··· Running indexing.DataFrameStringIndexing.time_loc           274μs\r\n[ 36.84%] ··· Running ...Column.time_frame_getitem_single_column_int      189μs\r\n[ 36.99%] ··· Running ...lumn.time_frame_getitem_single_column_label      168μs\r\n[ 37.14%] ··· Running ...xing.InsertColumns.time_assign_with_setitem     55.3ms\r\n[ 37.29%] ··· Running indexing.InsertColumns.time_insert                  103ms\r\n[ 37.44%] ··· Running indexing.MultiIndexing.time_frame_ix               19.3ms\r\n[ 37.59%] ··· Running indexing.MultiIndexing.time_index_slice            11.7ms\r\n[ 37.74%] ··· Running indexing.MultiIndexing.time_series_ix              17.3ms\r\n[ 37.89%] ··· Running ...ing.NonNumericSeriesIndexing.time_get_value         ok\r\n[ 37.89%] ···· \r\n               ========== ========\r\n                 index            \r\n               ---------- --------\r\n                 string    23.9ms \r\n                datetime   4.92ms \r\n               ========== ========\r\n\r\n[ 37.89%] ····· \r\n                \r\n                For parameters: 'string'\r\n                /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/indexing.py:94: FutureWarning: get_value is deprecated and will be removed in a future release. Please use .at[] or .iat[] accessors instead\r\n                  self.s.get_value(self.lbl)\r\n                \r\n                For parameters: 'datetime'\r\n                /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/indexing.py:94: FutureWarning: get_value is deprecated and will be removed in a future release. Please use .at[] or .iat[] accessors instead\r\n                  self.s.get_value(self.lbl)\r\n\r\n[ 38.05%] ··· Running ...ericSeriesIndexing.time_getitem_label_slice         ok\r\n[ 38.05%] ···· \r\n               ========== ========\r\n                 index            \r\n               ---------- --------\r\n                 string    26.0ms \r\n                datetime   5.67ms \r\n               ========== ========\r\n\r\n[ 38.20%] ··· Running ...umericSeriesIndexing.time_getitem_pos_slice         ok\r\n[ 38.20%] ···· \r\n               ========== ========\r\n                 index            \r\n               ---------- --------\r\n                 string    2.94ms \r\n                datetime   429μs  \r\n               ========== ========\r\n\r\n[ 38.35%] ··· Running ...onNumericSeriesIndexing.time_getitem_scalar         ok\r\n[ 38.35%] ···· \r\n               ========== ========\r\n                 index            \r\n               ---------- --------\r\n                 string    23.4ms \r\n                datetime   4.78ms \r\n               ========== ========\r\n\r\n[ 38.50%] ··· Running ...ng.NumericSeriesIndexing.time_getitem_array         ok\r\n[ 38.50%] ···· \r\n               ========================================== ========\r\n                                 param1                           \r\n               ------------------------------------------ --------\r\n                 pandas.core.indexes.numeric.Int64Index    58.6ms \r\n                pandas.core.indexes.numeric.Float64Index   269ms  \r\n               ========================================== ========\r\n\r\n[ 38.65%] ··· Running ...umericSeriesIndexing.time_getitem_list_like         ok\r\n[ 38.65%] ···· \r\n               ========================================== ========\r\n                                 param1                           \r\n               ------------------------------------------ --------\r\n                 pandas.core.indexes.numeric.Int64Index    57.0ms \r\n                pandas.core.indexes.numeric.Float64Index   265ms  \r\n               ========================================== ========\r\n\r\n[ 38.80%] ··· Running ...ng.NumericSeriesIndexing.time_getitem_lists         ok\r\n[ 38.80%] ···· \r\n               ========================================== ========\r\n                                 param1                           \r\n               ------------------------------------------ --------\r\n                 pandas.core.indexes.numeric.Int64Index    65.1ms \r\n                pandas.core.indexes.numeric.Float64Index   271ms  \r\n               ========================================== ========\r\n\r\n[ 38.95%] ··· Running ...g.NumericSeriesIndexing.time_getitem_scalar         ok\r\n[ 38.95%] ···· \r\n               ========================================== ========\r\n                                 param1                           \r\n               ------------------------------------------ --------\r\n                 pandas.core.indexes.numeric.Int64Index    2.60ms \r\n                pandas.core.indexes.numeric.Float64Index   3.42ms \r\n               ========================================== ========\r\n\r\n[ 39.10%] ··· Running ...ng.NumericSeriesIndexing.time_getitem_slice         ok\r\n[ 39.10%] ···· \r\n               ========================================== ========\r\n                                 param1                           \r\n               ------------------------------------------ --------\r\n                 pandas.core.indexes.numeric.Int64Index    282μs  \r\n                pandas.core.indexes.numeric.Float64Index   3.63ms \r\n               ========================================== ========\r\n\r\n[ 39.25%] ··· Running indexing.NumericSeriesIndexing.time_iloc_array         ok\r\n[ 39.25%] ···· \r\n               ========================================== =======\r\n                                 param1                          \r\n               ------------------------------------------ -------\r\n                 pandas.core.indexes.numeric.Int64Index    377μs \r\n                pandas.core.indexes.numeric.Float64Index   337μs \r\n               ========================================== =======\r\n\r\n[ 39.40%] ··· Running ...g.NumericSeriesIndexing.time_iloc_list_like         ok\r\n[ 39.40%] ···· \r\n               ========================================== =======\r\n                                 param1                          \r\n               ------------------------------------------ -------\r\n                 pandas.core.indexes.numeric.Int64Index    266μs \r\n                pandas.core.indexes.numeric.Float64Index   283μs \r\n               ========================================== =======\r\n\r\n[ 39.55%] ··· Running ...xing.NumericSeriesIndexing.time_iloc_scalar         ok\r\n[ 39.55%] ···· \r\n               ========================================== =======\r\n                                 param1                          \r\n               ------------------------------------------ -------\r\n                 pandas.core.indexes.numeric.Int64Index    140μs \r\n                pandas.core.indexes.numeric.Float64Index   127μs \r\n               ========================================== =======\r\n\r\n[ 39.70%] ··· Running indexing.NumericSeriesIndexing.time_iloc_slice         ok\r\n[ 39.70%] ···· \r\n               ========================================== =======\r\n                                 param1                          \r\n               ------------------------------------------ -------\r\n                 pandas.core.indexes.numeric.Int64Index    225μs \r\n                pandas.core.indexes.numeric.Float64Index   352μs \r\n               ========================================== =======\r\n\r\n[ 39.85%] ··· Running indexing.NumericSeriesIndexing.time_ix_array           ok\r\n[ 39.85%] ···· \r\n               ========================================== ========\r\n                                 param1                           \r\n               ------------------------------------------ --------\r\n                 pandas.core.indexes.numeric.Int64Index    57.7ms \r\n                pandas.core.indexes.numeric.Float64Index   266ms  \r\n               ========================================== ========\r\n\r\n[ 40.00%] ··· Running ...ing.NumericSeriesIndexing.time_ix_list_like         ok\r\n[ 40.00%] ···· \r\n               ========================================== ========\r\n                                 param1                           \r\n               ------------------------------------------ --------\r\n                 pandas.core.indexes.numeric.Int64Index    56.8ms \r\n                pandas.core.indexes.numeric.Float64Index   266ms  \r\n               ========================================== ========\r\n\r\n[ 40.15%] ··· Running indexing.NumericSeriesIndexing.time_ix_scalar          ok\r\n[ 40.15%] ···· \r\n               ========================================== ========\r\n                                 param1                           \r\n               ------------------------------------------ --------\r\n                 pandas.core.indexes.numeric.Int64Index    2.81ms \r\n                pandas.core.indexes.numeric.Float64Index   3.59ms \r\n               ========================================== ========\r\n\r\n[ 40.30%] ··· Running indexing.NumericSeriesIndexing.time_ix_slice           ok\r\n[ 40.30%] ···· \r\n               ========================================== ========\r\n                                 param1                           \r\n               ------------------------------------------ --------\r\n                 pandas.core.indexes.numeric.Int64Index    2.94ms \r\n                pandas.core.indexes.numeric.Float64Index   3.71ms \r\n               ========================================== ========\r\n\r\n[ 40.45%] ··· Running indexing.NumericSeriesIndexing.time_loc_array          ok\r\n[ 40.45%] ···· \r\n               ========================================== ========\r\n                                 param1                           \r\n               ------------------------------------------ --------\r\n                 pandas.core.indexes.numeric.Int64Index    59.6ms \r\n                pandas.core.indexes.numeric.Float64Index   268ms  \r\n               ========================================== ========\r\n\r\n[ 40.60%] ··· Running ...ng.NumericSeriesIndexing.time_loc_list_like         ok\r\n[ 40.60%] ···· \r\n               ========================================== ========\r\n                                 param1                           \r\n               ------------------------------------------ --------\r\n                 pandas.core.indexes.numeric.Int64Index    57.0ms \r\n                pandas.core.indexes.numeric.Float64Index   266ms  \r\n               ========================================== ========\r\n\r\n[ 40.75%] ··· Running indexing.NumericSeriesIndexing.time_loc_scalar         ok\r\n[ 40.75%] ···· \r\n               ========================================== ========\r\n                                 param1                           \r\n               ------------------------------------------ --------\r\n                 pandas.core.indexes.numeric.Int64Index    58.7ms \r\n                pandas.core.indexes.numeric.Float64Index   113ms  \r\n               ========================================== ========\r\n\r\n[ 40.90%] ··· Running indexing.NumericSeriesIndexing.time_loc_slice          ok\r\n[ 40.90%] ···· \r\n               ========================================== ========\r\n                                 param1                           \r\n               ------------------------------------------ --------\r\n                 pandas.core.indexes.numeric.Int64Index    2.82ms \r\n                pandas.core.indexes.numeric.Float64Index   3.67ms \r\n               ========================================== ========\r\n\r\n[ 41.05%] ··· Running indexing.PanelIndexing.time_subset                 5.11ms\r\n[ 41.20%] ··· Running indexing.Take.time_take                                ok\r\n[ 41.20%] ···· \r\n               ========== ========\r\n                 index            \r\n               ---------- --------\r\n                  int      11.1ms \r\n                datetime   11.0ms \r\n               ========== ========\r\n\r\n[ 41.35%] ··· Running inference.NumericInferOps.time_add                     ok\r\n[ 41.35%] ···· \r\n               ======================== =======\r\n                        dtype                  \r\n               ------------------------ -------\r\n                 <type 'numpy.int64'>    431ms \r\n                 <type 'numpy.int32'>    419ms \r\n                <type 'numpy.uint32'>    420ms \r\n                <type 'numpy.uint64'>    421ms \r\n                <type 'numpy.float32'>   421ms \r\n                <type 'numpy.float64'>   431ms \r\n                 <type 'numpy.int16'>    418ms \r\n                 <type 'numpy.int8'>     419ms \r\n                <type 'numpy.uint16'>    419ms \r\n                 <type 'numpy.uint8'>    419ms \r\n               ======================== =======\r\n\r\n[ 41.50%] ··· Running inference.NumericInferOps.time_divide                  ok\r\n[ 41.50%] ···· \r\n               ======================== =======\r\n                        dtype                  \r\n               ------------------------ -------\r\n                 <type 'numpy.int64'>    433ms \r\n                 <type 'numpy.int32'>    428ms \r\n                <type 'numpy.uint32'>    425ms \r\n                <type 'numpy.uint64'>    427ms \r\n                <type 'numpy.float32'>   425ms \r\n                <type 'numpy.float64'>   430ms \r\n                 <type 'numpy.int16'>    426ms \r\n                 <type 'numpy.int8'>     424ms \r\n                <type 'numpy.uint16'>    423ms \r\n                 <type 'numpy.uint8'>    422ms \r\n               ======================== =======\r\n\r\n[ 41.65%] ··· Running inference.NumericInferOps.time_modulo                  ok\r\n[ 41.65%] ···· \r\n               ======================== =======\r\n                        dtype                  \r\n               ------------------------ -------\r\n                 <type 'numpy.int64'>    442ms \r\n                 <type 'numpy.int32'>    427ms \r\n                <type 'numpy.uint32'>    426ms \r\n                <type 'numpy.uint64'>    445ms \r\n                <type 'numpy.float32'>   431ms \r\n                <type 'numpy.float64'>   428ms \r\n                 <type 'numpy.int16'>    432ms \r\n                 <type 'numpy.int8'>     432ms \r\n                <type 'numpy.uint16'>    426ms \r\n                 <type 'numpy.uint8'>    433ms \r\n               ======================== =======\r\n\r\n[ 41.80%] ··· Running inference.NumericInferOps.time_multiply                ok\r\n[ 41.80%] ···· \r\n               ======================== =======\r\n                        dtype                  \r\n               ------------------------ -------\r\n                 <type 'numpy.int64'>    427ms \r\n                 <type 'numpy.int32'>    419ms \r\n                <type 'numpy.uint32'>    419ms \r\n                <type 'numpy.uint64'>    422ms \r\n                <type 'numpy.float32'>   423ms \r\n                <type 'numpy.float64'>   425ms \r\n                 <type 'numpy.int16'>    420ms \r\n                 <type 'numpy.int8'>     416ms \r\n                <type 'numpy.uint16'>    419ms \r\n                 <type 'numpy.uint8'>    417ms \r\n               ======================== =======\r\n\r\n[ 41.95%] ··· Running inference.NumericInferOps.time_subtract                ok\r\n[ 41.95%] ···· \r\n               ======================== =======\r\n                        dtype                  \r\n               ------------------------ -------\r\n                 <type 'numpy.int64'>    427ms \r\n                 <type 'numpy.int32'>    422ms \r\n                <type 'numpy.uint32'>    419ms \r\n                <type 'numpy.uint64'>    424ms \r\n                <type 'numpy.float32'>   421ms \r\n                <type 'numpy.float64'>   425ms \r\n                 <type 'numpy.int16'>    417ms \r\n                 <type 'numpy.int8'>     417ms \r\n                <type 'numpy.uint16'>    418ms \r\n                 <type 'numpy.uint8'>    418ms \r\n               ======================== =======\r\n\r\n[ 42.11%] ··· Running inference.ToNumeric.time_from_float                    ok\r\n[ 42.11%] ···· \r\n               ======== =======\r\n                errors         \r\n               -------- -------\r\n                ignore   154μs \r\n                coerce   156μs \r\n               ======== =======\r\n\r\n[ 42.26%] ··· Running inference.ToNumeric.time_from_numeric_str              ok\r\n[ 42.26%] ···· \r\n               ======== ========\r\n                errors          \r\n               -------- --------\r\n                ignore   7.67ms \r\n                coerce   7.74ms \r\n               ======== ========\r\n\r\n[ 42.41%] ··· Running inference.ToNumeric.time_from_str                      ok\r\n[ 42.41%] ···· \r\n               ======== ========\r\n                errors          \r\n               -------- --------\r\n                ignore   378μs  \r\n                coerce   22.8ms \r\n               ======== ========\r\n\r\n[ 42.56%] ··· Running inference.ToNumericDowncast.time_downcast              ok\r\n[ 42.56%] ···· \r\n               ============== ========== ========\r\n                   dtype       downcast          \r\n               -------------- ---------- --------\r\n                string-float     None     284ms  \r\n                string-float   integer    281ms  \r\n                string-float    signed    284ms  \r\n                string-float   unsigned   281ms  \r\n                string-float    float     281ms  \r\n                 string-int      None     552ms  \r\n                 string-int    integer    595ms  \r\n                 string-int     signed    588ms  \r\n                 string-int    unsigned   586ms  \r\n                 string-int     float     553ms  \r\n                string-nint      None     524ms  \r\n                string-nint    integer    568ms  \r\n                string-nint     signed    572ms  \r\n                string-nint    unsigned   535ms  \r\n                string-nint     float     545ms  \r\n                 datetime64      None     5.13ms \r\n                 datetime64    integer    73.3ms \r\n                 datetime64     signed    72.3ms \r\n                 datetime64    unsigned   74.0ms \r\n                 datetime64     float     8.82ms \r\n                  int-list       None     68.9ms \r\n                  int-list     integer    102ms  \r\n                  int-list      signed    100ms  \r\n                  int-list     unsigned   102ms  \r\n                  int-list      float     69.4ms \r\n                   int32         None     26.0μs \r\n                   int32       integer    32.5ms \r\n                   int32        signed    32.5ms \r\n                   int32       unsigned   33.4ms \r\n                   int32        float     1.37ms \r\n               ============== ========== ========\r\n\r\n[ 42.71%] ··· Running io.csv.ReadCSVCategorical.time_convert_direct      96.8ms\r\n[ 42.86%] ··· Running io.csv.ReadCSVCategorical.time_convert_post         142ms\r\n[ 43.01%] ··· Running io.csv.ReadCSVComment.time_comment                 56.3ms\r\n[ 43.16%] ··· Running ...v.ReadCSVDInferDatetimeFormat.time_read_csv         ok\r\n[ 43.16%] ···· \r\n               ======================= ======== ========= ========\r\n               --                                 format          \r\n               ----------------------- ---------------------------\r\n                infer_datetime_format   custom   iso8601    ymd   \r\n               ======================= ======== ========= ========\r\n                         True           24.2ms    4.79ms   5.00ms \r\n                        False           654ms     3.59ms   3.26ms \r\n               ======================= ======== ========= ========\r\n\r\n[ 43.31%] ··· Running io.csv.ReadCSVFloatPrecision.time_read_csv             ok\r\n[ 43.31%] ···· \r\n               ===== ========= ======== ======== ============\r\n               --                     float_precision        \r\n               --------------- ------------------------------\r\n                sep   decimal    None     high    round_trip \r\n               ===== ========= ======== ======== ============\r\n                 ,       .      3.98ms   3.86ms     5.61ms   \r\n                 ,       _      4.21ms   4.38ms     4.28ms   \r\n                 ;       .      4.00ms   3.80ms     5.56ms   \r\n                 ;       _      4.24ms   4.23ms     4.21ms   \r\n               ===== ========= ======== ======== ============\r\n\r\n[ 43.46%] ··· Running ...VFloatPrecision.time_read_csv_python_engine         ok\r\n[ 43.46%] ···· \r\n               ===== ========= ======== ======== ============\r\n               --                     float_precision        \r\n               --------------- ------------------------------\r\n                sep   decimal    None     high    round_trip \r\n               ===== ========= ======== ======== ============\r\n                 ,       .      8.67ms   8.48ms     8.54ms   \r\n                 ,       _      7.03ms   7.04ms     7.12ms   \r\n                 ;       .      8.55ms   8.81ms     8.56ms   \r\n                 ;       _      7.05ms   7.05ms     7.29ms   \r\n               ===== ========= ======== ======== ============\r\n\r\n[ 43.61%] ··· Running io.csv.ReadCSVParseDates.time_baseline             2.86ms\r\n[ 43.76%] ··· Running io.csv.ReadCSVParseDates.time_multiple_date        2.84ms\r\n[ 43.91%] ··· Running io.csv.ReadCSVSkipRows.time_skipprows                  ok\r\n[ 43.91%] ···· \r\n               ========== ========\r\n                skiprows          \r\n               ---------- --------\r\n                  None     45.0ms \r\n                 10000     30.4ms \r\n               ========== ========\r\n\r\n[ 44.06%] ··· Running io.csv.ReadCSVThousands.time_thousands                 ok\r\n[ 44.06%] ···· \r\n               ===== ======== ========\r\n               --        thousands    \r\n               ----- -----------------\r\n                sep    None      ,    \r\n               ===== ======== ========\r\n                 ,    39.2ms   36.1ms \r\n                 |    38.5ms   38.4ms \r\n               ===== ======== ========\r\n\r\n[ 44.21%] ··· Running io.csv.ReadUint64Integers.time_read_uint64         8.91ms\r\n[ 44.36%] ··· Running ...adUint64Integers.time_read_uint64_na_values     13.1ms\r\n[ 44.51%] ··· Running ...dUint64Integers.time_read_uint64_neg_values     13.3ms\r\n[ 44.66%] ··· Running io.csv.S3.time_read_csv_10_rows                        ok\r\n[ 44.66%] ···· \r\n               ============= ======== =======\r\n               --                 engine     \r\n               ------------- ----------------\r\n                compression   python     c   \r\n               ============= ======== =======\r\n                    None      6.86s    9.88s \r\n                    gzip      8.80s    7.93s \r\n                    bz2       33.1s     n/a  \r\n               ============= ======== =======\r\n\r\n[ 44.81%] ··· Running io.csv.ToCSV.time_frame                                ok\r\n[ 44.81%] ···· \r\n               ======= ========\r\n                 kind          \r\n               ------- --------\r\n                 wide   88.6ms \r\n                 long   174ms  \r\n                mixed   38.9ms \r\n               ======= ========\r\n\r\n[ 44.96%] ··· Running ...sv.ToCSVDatetime.time_frame_date_formatting     23.1ms\r\n[ 45.11%] ··· Running io.excel.Excel.time_read_excel                         ok\r\n[ 45.11%] ···· \r\n               ============ =======\r\n                  engine           \r\n               ------------ -------\r\n                 openpyxl    571ms \r\n                xlsxwriter   561ms \r\n                   xlwt      160ms \r\n               ============ =======\r\n\r\n[ 45.26%] ··· Running io.excel.Excel.time_write_excel                        ok\r\n[ 45.26%] ···· \r\n               ============ =======\r\n                  engine           \r\n               ------------ -------\r\n                 openpyxl    1.25s \r\n                xlsxwriter   968ms \r\n                   xlwt      698ms \r\n               ============ =======\r\n\r\n[ 45.41%] ··· Running io.hdf.HDF.time_read_hdf                               ok\r\n[ 45.41%] ···· \r\n               ======== ========\r\n                format          \r\n               -------- --------\r\n                table    62.7ms \r\n                fixed    76.1ms \r\n               ======== ========\r\n\r\n[ 45.56%] ··· Running io.hdf.HDF.time_write_hdf                              ok\r\n[ 45.56%] ···· \r\n               ======== =======\r\n                format         \r\n               -------- -------\r\n                table    121ms \r\n                fixed    147ms \r\n               ======== =======\r\n\r\n[ 45.71%] ··· Running ...df.HDFStoreDataFrame.time_query_store_table     24.7ms\r\n[ 45.86%] ··· Running ...FStoreDataFrame.time_query_store_table_wide     33.7ms\r\n[ 46.02%] ··· Running io.hdf.HDFStoreDataFrame.time_read_store           12.7ms\r\n[ 46.17%] ··· Running io.hdf.HDFStoreDataFrame.time_read_store_mixed     25.2ms\r\n[ 46.32%] ··· Running io.hdf.HDFStoreDataFrame.time_read_store_table     18.2ms\r\n[ 46.47%] ··· Running ...FStoreDataFrame.time_read_store_table_mixed     36.9ms\r\n[ 46.62%] ··· Running ...DFStoreDataFrame.time_read_store_table_wide     29.5ms\r\n[ 46.77%] ··· Running io.hdf.HDFStoreDataFrame.time_store_info           52.3ms\r\n[ 46.92%] ··· Running io.hdf.HDFStoreDataFrame.time_store_repr            111μs\r\n[ 47.07%] ··· Running io.hdf.HDFStoreDataFrame.time_store_str             108μs\r\n[ 47.22%] ··· Running io.hdf.HDFStoreDataFrame.time_write_store          14.0ms\r\n[ 47.37%] ··· Running ...df.HDFStoreDataFrame.time_write_store_mixed     31.5ms\r\n[ 47.52%] ··· Running ...df.HDFStoreDataFrame.time_write_store_table     45.1ms\r\n[ 47.67%] ··· Running ...HDFStoreDataFrame.time_write_store_table_dc      358ms\r\n[ 47.82%] ··· Running ...StoreDataFrame.time_write_store_table_mixed     56.5ms\r\n[ 47.97%] ··· Running ...FStoreDataFrame.time_write_store_table_wide      145ms\r\n[ 48.12%] ··· Running ...f.HDFStorePanel.time_read_store_table_panel     54.9ms\r\n[ 48.27%] ··· Running ....HDFStorePanel.time_write_store_table_panel     86.9ms\r\n[ 48.42%] ··· Running io.json.ReadJSON.time_read_json                        ok\r\n[ 48.42%] ···· \r\n               ========= ======= ==========\r\n               --              index       \r\n               --------- ------------------\r\n                 orient    int    datetime \r\n               ========= ======= ==========\r\n                 split    253ms    269ms   \r\n                 index    7.78s    7.89s   \r\n                records   619ms    624ms   \r\n               ========= ======= ==========\r\n\r\n[ 48.57%] ··· Running io.json.ReadJSONLines.peakmem_read_json_lines          ok\r\n[ 48.57%] ···· \r\n               ========== ======\r\n                 index          \r\n               ---------- ------\r\n                  int      192M \r\n                datetime   192M \r\n               ========== ======\r\n\r\n[ 48.72%] ··· Running ...eadJSONLines.peakmem_read_json_lines_concat         ok\r\n[ 48.72%] ···· \r\n               ========== ======\r\n                 index          \r\n               ---------- ------\r\n                  int      164M \r\n                datetime   164M \r\n               ========== ======\r\n\r\n[ 48.87%] ··· Running io.json.ReadJSONLines.time_read_json_lines             ok\r\n[ 48.87%] ···· \r\n               ========== =======\r\n                 index           \r\n               ---------- -------\r\n                  int      720ms \r\n                datetime   721ms \r\n               ========== =======\r\n\r\n[ 49.02%] ··· Running ...n.ReadJSONLines.time_read_json_lines_concat         ok\r\n[ 49.02%] ···· \r\n               ========== =======\r\n                 index           \r\n               ---------- -------\r\n                  int      745ms \r\n                datetime   749ms \r\n               ========== =======\r\n\r\n[ 49.17%] ··· Running io.json.ToJSON.time_delta_int_tstamp                   ok\r\n[ 49.17%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    241ms \r\n                columns   231ms \r\n                 index    392ms \r\n               ========= =======\r\n\r\n[ 49.32%] ··· Running io.json.ToJSON.time_delta_int_tstamp_lines             ok\r\n[ 49.32%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    559ms \r\n                columns   567ms \r\n                 index    561ms \r\n               ========= =======\r\n\r\n[ 49.47%] ··· Running io.json.ToJSON.time_float_int                          ok\r\n[ 49.47%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    222ms \r\n                columns   216ms \r\n                 index    379ms \r\n               ========= =======\r\n\r\n[ 49.62%] ··· Running io.json.ToJSON.time_float_int_lines                    ok\r\n[ 49.62%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    593ms \r\n                columns   595ms \r\n                 index    598ms \r\n               ========= =======\r\n\r\n[ 49.77%] ··· Running io.json.ToJSON.time_float_int_str                      ok\r\n[ 49.77%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    346ms \r\n                columns   221ms \r\n                 index    392ms \r\n               ========= =======\r\n\r\n[ 49.92%] ··· Running io.json.ToJSON.time_float_int_str_lines                ok\r\n[ 49.92%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    618ms \r\n                columns   619ms \r\n                 index    616ms \r\n               ========= =======\r\n\r\n[ 50.08%] ··· Running io.json.ToJSON.time_floats_with_dt_index               ok\r\n[ 50.08%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    183ms \r\n                columns   209ms \r\n                 index    214ms \r\n               ========= =======\r\n\r\n[ 50.23%] ··· Running io.json.ToJSON.time_floats_with_dt_index_lines         ok\r\n[ 50.23%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    467ms \r\n                columns   467ms \r\n                 index    471ms \r\n               ========= =======\r\n\r\n[ 50.38%] ··· Running io.json.ToJSON.time_floats_with_int_idex_lines         ok\r\n[ 50.38%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    464ms \r\n                columns   460ms \r\n                 index    464ms \r\n               ========= =======\r\n\r\n[ 50.53%] ··· Running io.json.ToJSON.time_floats_with_int_index              ok\r\n[ 50.53%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    160ms \r\n                columns   173ms \r\n                 index    191ms \r\n               ========= =======\r\n\r\n[ 50.68%] ··· Running io.msgpack.MSGPack.time_read_msgpack               42.6ms\r\n[ 50.83%] ··· Running io.msgpack.MSGPack.time_write_msgpack              69.7ms\r\n[ 50.98%] ··· Running io.pickle.Pickle.time_read_pickle                   104ms\r\n[ 51.13%] ··· Running io.pickle.Pickle.time_write_pickle                  154ms\r\n[ 51.28%] ··· Running io.sas.SAS.time_read_msgpack                           ok\r\n[ 51.28%] ···· \r\n               ========== ========\r\n                 format           \r\n               ---------- --------\r\n                sas7bdat   608ms  \r\n                 xport     9.91ms \r\n               ========== ========\r\n\r\n[ 51.43%] ··· Running io.sql.ReadSQLTable.time_read_sql_table_all         101ms\r\n[ 51.58%] ··· Running ...eadSQLTable.time_read_sql_table_parse_dates     30.8ms\r\n[ 51.73%] ··· Running ...adSQLTableDtypes.time_read_sql_table_column         ok\r\n[ 51.73%] ···· \r\n               ================ ========\r\n                    dtype               \r\n               ---------------- --------\r\n                    float        23.7ms \r\n                float_with_nan   23.8ms \r\n                    string       25.2ms \r\n                     bool        23.6ms \r\n                     int         25.3ms \r\n                   datetime      46.0ms \r\n               ================ ========\r\n\r\n[ 51.88%] ··· Running io.sql.SQL.time_read_sql_query                         ok\r\n[ 51.88%] ···· \r\n               ============ ========\r\n                connection          \r\n               ------------ --------\r\n                sqlalchemy   70.5ms \r\n                  sqlite     57.8ms \r\n               ============ ========\r\n\r\n[ 52.03%] ··· Running io.sql.SQL.time_to_sql_dataframe                       ok\r\n[ 52.03%] ···· \r\n               ============ =======\r\n                connection         \r\n               ------------ -------\r\n                sqlalchemy   436ms \r\n                  sqlite     187ms \r\n               ============ =======\r\n\r\n[ 52.18%] ··· Running ...SQLDtypes.time_read_sql_query_select_column         ok\r\n[ 52.18%] ···· \r\n               ============ ================ ========\r\n                connection       dtype               \r\n               ------------ ---------------- --------\r\n                sqlalchemy       float        18.0ms \r\n                sqlalchemy   float_with_nan   18.6ms \r\n                sqlalchemy       string       18.8ms \r\n                sqlalchemy        bool        18.5ms \r\n                sqlalchemy        int         18.9ms \r\n                sqlalchemy      datetime      20.0ms \r\n                  sqlite         float        10.0ms \r\n                  sqlite     float_with_nan   9.75ms \r\n                  sqlite         string       11.0ms \r\n                  sqlite          bool        10.7ms \r\n                  sqlite          int         11.0ms \r\n                  sqlite        datetime      11.8ms \r\n               ============ ================ ========\r\n\r\n[ 52.33%] ··· Running ...WriteSQLDtypes.time_to_sql_dataframe_column         ok\r\n[ 52.33%] ···· \r\n               ============ ================ ========\r\n                connection       dtype               \r\n               ------------ ---------------- --------\r\n                sqlalchemy       float        137ms  \r\n                sqlalchemy   float_with_nan   149ms  \r\n                sqlalchemy       string       137ms  \r\n                sqlalchemy        bool        148ms  \r\n                sqlalchemy        int         132ms  \r\n                sqlalchemy      datetime      253ms  \r\n                  sqlite         float        53.8ms \r\n                  sqlite     float_with_nan   61.9ms \r\n                  sqlite         string       55.5ms \r\n                  sqlite          bool        92.9ms \r\n                  sqlite          int         52.4ms \r\n                  sqlite        datetime      119ms  \r\n               ============ ================ ========\r\n\r\n[ 52.48%] ··· Running io.stata.Stata.time_read_stata                         ok\r\n[ 52.48%] ···· \r\n               =============== =======\r\n                convert_dates         \r\n               --------------- -------\r\n                      tc        511ms \r\n                      td        512ms \r\n                      tm        1.35s \r\n                      tw        1.27s \r\n                      th        1.35s \r\n                      tq        1.35s \r\n                      ty        1.78s \r\n               =============== =======\r\n\r\n[ 52.63%] ··· Running io.stata.Stata.time_write_stata                        ok\r\n[ 52.63%] ···· \r\n               =============== =======\r\n                convert_dates         \r\n               --------------- -------\r\n                      tc        607ms \r\n                      td        594ms \r\n                      tm        603ms \r\n                      tw        1.34s \r\n                      th        604ms \r\n                      tq        613ms \r\n                      ty        602ms \r\n               =============== =======\r\n\r\n[ 52.78%] ··· Running join_merge.Align.time_series_align_int64_index      668ms\r\n[ 52.93%] ··· Running ...erge.Align.time_series_align_left_monotonic      198ms\r\n[ 53.08%] ··· Running join_merge.Append.time_append_homogenous           1.66ms\r\n[ 53.08%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/join_merge.py:29: FutureWarning: consolidate is deprecated and will be removed in a future release.\r\n                self.mdf1.consolidate(inplace=True)\r\n\r\n[ 53.23%] ··· Running join_merge.Append.time_append_mixed                2.54ms\r\n[ 53.23%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/join_merge.py:29: FutureWarning: consolidate is deprecated and will be removed in a future release.\r\n                self.mdf1.consolidate(inplace=True)\r\n\r\n[ 53.38%] ··· Running join_merge.Concat.time_concat_empty_left               ok\r\n[ 53.38%] ···· \r\n               ====== =======\r\n                axis         \r\n               ------ -------\r\n                 0     392μs \r\n                 1     484μs \r\n               ====== =======\r\n\r\n[ 53.53%] ··· Running join_merge.Concat.time_concat_empty_right              ok\r\n[ 53.53%] ···· \r\n               ====== =======\r\n                axis         \r\n               ------ -------\r\n                 0     403μs \r\n                 1     481μs \r\n               ====== =======\r\n\r\n[ 53.68%] ··· Running join_merge.Concat.time_concat_series                   ok\r\n[ 53.68%] ···· \r\n               ====== ========\r\n                axis          \r\n               ------ --------\r\n                 0     27.6ms \r\n                 1     218ms  \r\n               ====== ========\r\n\r\n[ 53.83%] ··· Running join_merge.Concat.time_concat_small_frames             ok\r\n[ 53.83%] ···· \r\n               ====== ========\r\n                axis          \r\n               ------ --------\r\n                 0     108ms  \r\n                 1     81.1ms \r\n               ====== ========\r\n\r\n[ 53.98%] ··· Running join_merge.ConcatDataFrames.time_c_ordered             ok\r\n[ 53.98%] ···· \r\n               ====== ======= =======\r\n               --       ignore_index \r\n               ------ ---------------\r\n                axis    True   False \r\n               ====== ======= =======\r\n                 0     146ms   148ms \r\n                 1     224ms   226ms \r\n               ====== ======= =======\r\n\r\n[ 54.14%] ··· Running join_merge.ConcatDataFrames.time_f_ordered             ok\r\n[ 54.14%] ···· \r\n               ====== ======= =======\r\n               --       ignore_index \r\n               ------ ---------------\r\n                axis    True   False \r\n               ====== ======= =======\r\n                 0     172ms   173ms \r\n                 1     162ms   154ms \r\n               ====== ======= =======\r\n\r\n[ 54.29%] ··· Running join_merge.ConcatPanels.time_c_ordered                 ok\r\n[ 54.29%] ···· \r\n               ====== ======= =======\r\n               --       ignore_index \r\n               ------ ---------------\r\n                axis    True   False \r\n               ====== ======= =======\r\n                 0     319ms   314ms \r\n                 1     368ms   369ms \r\n                 2     1.68s   1.67s \r\n               ====== ======= =======\r\n\r\n[ 54.44%] ··· Running join_merge.ConcatPanels.time_f_ordered                 ok\r\n[ 54.44%] ···· \r\n               ====== ======= =======\r\n               --       ignore_index \r\n               ------ ---------------\r\n                axis    True   False \r\n               ====== ======= =======\r\n                 0     667ms   671ms \r\n                 1     288ms   296ms \r\n                 2     298ms   292ms \r\n               ====== ======= =======\r\n\r\n[ 54.59%] ··· Running join_merge.I8Merge.time_i8merge                        ok\r\n[ 54.59%] ···· \r\n               ======= =======\r\n                 how          \r\n               ------- -------\r\n                inner   1.59s \r\n                outer   1.60s \r\n                 left   1.68s \r\n                right   1.59s \r\n               ======= =======\r\n\r\n[ 54.74%] ··· Running ..._merge.Join.time_join_dataframe_index_multi         ok\r\n[ 54.74%] ···· \r\n               ======= ========\r\n                 sort          \r\n               ------- --------\r\n                 True   52.9ms \r\n                False   42.6ms \r\n               ======= ========\r\n\r\n[ 54.89%] ··· Running ...oin_dataframe_index_shuffle_key_bigger_sort         ok\r\n[ 54.89%] ···· \r\n               ======= ========\r\n                 sort          \r\n               ------- --------\r\n                 True   37.8ms \r\n                False   30.7ms \r\n               ======= ========\r\n\r\n[ 55.04%] ··· Running ...time_join_dataframe_index_single_key_bigger         ok\r\n[ 55.04%] ···· \r\n               ======= ========\r\n                 sort          \r\n               ------- --------\r\n                 True   36.8ms \r\n                False   31.7ms \r\n               ======= ========\r\n\r\n[ 55.19%] ··· Running ....time_join_dataframe_index_single_key_small         ok\r\n[ 55.19%] ···· \r\n               ======= ========\r\n                 sort          \r\n               ------- --------\r\n                 True   29.9ms \r\n                False   28.1ms \r\n               ======= ========\r\n\r\n[ 55.34%] ··· Running ..._merge.JoinIndex.time_left_outer_join_index      3.80s\r\n[ 55.49%] ··· Running ...ge.JoinNonUnique.time_join_non_unique_equal      419ms\r\n[ 55.64%] ··· Running join_merge.Merge.time_merge_2intkey                    ok\r\n[ 55.64%] ···· \r\n               ======= ========\r\n                 sort          \r\n               ------- --------\r\n                 True   71.4ms \r\n                False   39.6ms \r\n               ======= ========\r\n\r\n[ 55.79%] ··· Running ...rge.Merge.time_merge_dataframe_integer_2key         ok\r\n[ 55.79%] ···· \r\n               ======= ========\r\n                 sort          \r\n               ------- --------\r\n                 True   23.1ms \r\n                False   9.88ms \r\n               ======= ========\r\n\r\n[ 55.94%] ··· Running ...erge.Merge.time_merge_dataframe_integer_key         ok\r\n[ 55.94%] ···· \r\n               ======= ========\r\n                 sort          \r\n               ------- --------\r\n                 True   5.66ms \r\n                False   4.87ms \r\n               ======= ========\r\n\r\n[ 56.09%] ··· Running join_merge.MergeAsof.time_by_int                   49.9ms\r\n[ 56.24%] ··· Running join_merge.MergeAsof.time_by_object                83.8ms\r\n[ 56.39%] ··· Running join_merge.MergeAsof.time_multiby                   1.33s\r\n[ 56.54%] ··· Running join_merge.MergeAsof.time_on_int                   30.2ms\r\n[ 56.69%] ··· Running join_merge.MergeAsof.time_on_int32                 34.2ms\r\n[ 56.84%] ··· Running join_merge.MergeCategoricals.time_merge_cat         776ms\r\n[ 56.99%] ··· Running join_merge.MergeCategoricals.time_merge_object      1.45s\r\n[ 57.14%] ··· Running join_merge.MergeOrdered.time_merge_ordered          148ms\r\n[ 57.29%] ··· Running multiindex_object.Duplicated.time_duplicated        224ms\r\n[ 57.44%] ··· Running ...object.Duplicates.time_remove_unused_levels     1.12ms\r\n[ 57.59%] ··· Running multiindex_object.GetLoc.time_large_get_loc         421ms\r\n[ 57.74%] ··· Running ...index_object.GetLoc.time_large_get_loc_warm      889ms\r\n[ 57.89%] ··· Running multiindex_object.GetLoc.time_med_get_loc          4.01ms\r\n[ 58.05%] ··· Running multiindex_object.GetLoc.time_med_get_loc_warm     18.9ms\r\n[ 58.20%] ··· Running ...index_object.GetLoc.time_small_get_loc_warm     15.3ms\r\n[ 58.35%] ··· Running multiindex_object.GetLoc.time_string_get_loc        703μs\r\n[ 58.50%] ··· Running multiindex_object.Integer.time_get_indexer          342ms\r\n[ 58.65%] ··· Running multiindex_object.Integer.time_is_monotonic         233ms\r\n[ 58.80%] ··· Running ...index_object.Sortlevel.time_sortlevel_int64      773ms\r\n[ 58.95%] ··· Running multiindex_object.Sortlevel.time_sortlevel_one     18.9ms\r\n[ 59.10%] ··· Running ...iindex_object.Sortlevel.time_sortlevel_zero     19.1ms\r\n[ 59.25%] ··· Running offset.ApplyIndex.time_apply_index                     ok\r\n[ 59.25%] ···· \r\n               ============================================= ========\r\n                                   offset                            \r\n               --------------------------------------------- --------\r\n                            <YearEnd: month=12>               171ms  \r\n                            <YearBegin: month=1>              6.79ms \r\n                       <QuarterEnd: startingMonth=3>          192ms  \r\n                      <QuarterBegin: startingMonth=3>         7.12ms \r\n                                 <MonthEnd>                   1.27ms \r\n                                <MonthBegin>                  1.20ms \r\n                <DateOffset: kwds={'months': 2, 'days': 2}>   2.49ms \r\n                               <BusinessDay>                  134ms  \r\n                      <SemiMonthEnd: day_of_month=15>         138ms  \r\n                     <SemiMonthBegin: day_of_month=15>        137ms  \r\n               ============================================= ========\r\n\r\n[ 59.40%] ··· Running offset.OffestDatetimeArithmetic.time_add               ok\r\n[ 59.40%] ···· \r\n               ============================================= ========\r\n                                   offset                            \r\n               --------------------------------------------- --------\r\n                                   <Day>                      104μs  \r\n                        <BusinessYearEnd: month=12>           201μs  \r\n                        <BusinessYearBegin: month=1>          122μs  \r\n                   <BusinessQuarterEnd: startingMonth=3>      107μs  \r\n                  <BusinessQuarterBegin: startingMonth=3>     126μs  \r\n                             <BusinessMonthEnd>               124μs  \r\n                            <BusinessMonthBegin>              137μs  \r\n                            <CustomBusinessDay>               93.8μs \r\n                            <CustomBusinessDay>               89.0μs \r\n                         <CustomBusinessMonthBegin>           413μs  \r\n                          <CustomBusinessMonthEnd>            440μs  \r\n                          <CustomBusinessMonthEnd>            421μs  \r\n                            <YearEnd: month=12>               61.9μs \r\n                            <YearBegin: month=1>              60.8μs \r\n                       <QuarterEnd: startingMonth=3>          168μs  \r\n                      <QuarterBegin: startingMonth=3>         121μs  \r\n                                 <MonthEnd>                   176μs  \r\n                                <MonthBegin>                  120μs  \r\n                <DateOffset: kwds={'months': 2, 'days': 2}>   70.0μs \r\n                               <BusinessDay>                  86.2μs \r\n                      <SemiMonthEnd: day_of_month=15>         179μs  \r\n                     <SemiMonthBegin: day_of_month=15>        176μs  \r\n               ============================================= ========\r\n\r\n[ 59.55%] ··· Running offset.OffestDatetimeArithmetic.time_add_10            ok\r\n[ 59.55%] ···· \r\n               ============================================= ========\r\n                                   offset                            \r\n               --------------------------------------------- --------\r\n                                   <Day>                      120μs  \r\n                        <BusinessYearEnd: month=12>           186μs  \r\n                        <BusinessYearBegin: month=1>          160μs  \r\n                   <BusinessQuarterEnd: startingMonth=3>      204μs  \r\n                  <BusinessQuarterBegin: startingMonth=3>     151μs  \r\n                             <BusinessMonthEnd>               139μs  \r\n                            <BusinessMonthBegin>              156μs  \r\n                            <CustomBusinessDay>               110μs  \r\n                            <CustomBusinessDay>               103μs  \r\n                         <CustomBusinessMonthBegin>           455μs  \r\n                          <CustomBusinessMonthEnd>            461μs  \r\n                          <CustomBusinessMonthEnd>            464μs  \r\n                            <YearEnd: month=12>               130μs  \r\n                            <YearBegin: month=1>              99.4μs \r\n                       <QuarterEnd: startingMonth=3>          116μs  \r\n                      <QuarterBegin: startingMonth=3>         131μs  \r\n                                 <MonthEnd>                   192μs  \r\n                                <MonthBegin>                  136μs  \r\n                <DateOffset: kwds={'months': 2, 'days': 2}>   277μs  \r\n                               <BusinessDay>                  94.6μs \r\n                      <SemiMonthEnd: day_of_month=15>         187μs  \r\n                     <SemiMonthBegin: day_of_month=15>        182μs  \r\n               ============================================= ========\r\n\r\n[ 59.70%] ··· Running offset.OffestDatetimeArithmetic.time_apply             ok\r\n[ 59.70%] ···· \r\n               ============================================= ========\r\n                                   offset                            \r\n               --------------------------------------------- --------\r\n                                   <Day>                      98.7μs \r\n                        <BusinessYearEnd: month=12>           190μs  \r\n                        <BusinessYearBegin: month=1>          115μs  \r\n                   <BusinessQuarterEnd: startingMonth=3>      96.2μs \r\n                  <BusinessQuarterBegin: startingMonth=3>     116μs  \r\n                             <BusinessMonthEnd>               113μs  \r\n                            <BusinessMonthBegin>              127μs  \r\n                            <CustomBusinessDay>               79.7μs \r\n                            <CustomBusinessDay>               81.0μs \r\n                         <CustomBusinessMonthBegin>           407μs  \r\n                          <CustomBusinessMonthEnd>            411μs  \r\n                          <CustomBusinessMonthEnd>            415μs  \r\n                            <YearEnd: month=12>               53.5μs \r\n                            <YearBegin: month=1>              51.1μs \r\n                       <QuarterEnd: startingMonth=3>          95.4μs \r\n                      <QuarterBegin: startingMonth=3>         111μs  \r\n                                 <MonthEnd>                   165μs  \r\n                                <MonthBegin>                  110μs  \r\n                <DateOffset: kwds={'months': 2, 'days': 2}>   60.4μs \r\n                               <BusinessDay>                  76.1μs \r\n                      <SemiMonthEnd: day_of_month=15>         167μs  \r\n                     <SemiMonthBegin: day_of_month=15>        166μs  \r\n               ============================================= ========\r\n\r\n[ 59.85%] ··· Running ...OffestDatetimeArithmetic.time_apply_np_dt64         ok\r\n[ 59.85%] ···· \r\n               ============================================= ========\r\n                                   offset                            \r\n               --------------------------------------------- --------\r\n                                   <Day>                      104μs  \r\n                        <BusinessYearEnd: month=12>           198μs  \r\n                        <BusinessYearBegin: month=1>          120μs  \r\n                   <BusinessQuarterEnd: startingMonth=3>      104μs  \r\n                  <BusinessQuarterBegin: startingMonth=3>     121μs  \r\n                             <BusinessMonthEnd>               120μs  \r\n                            <BusinessMonthBegin>              134μs  \r\n                            <CustomBusinessDay>               85.6μs \r\n                            <CustomBusinessDay>               86.6μs \r\n                         <CustomBusinessMonthBegin>           410μs  \r\n                          <CustomBusinessMonthEnd>            417μs  \r\n                          <CustomBusinessMonthEnd>            419μs  \r\n                            <YearEnd: month=12>               59.6μs \r\n                            <YearBegin: month=1>              58.5μs \r\n                       <QuarterEnd: startingMonth=3>          103μs  \r\n                      <QuarterBegin: startingMonth=3>         119μs  \r\n                                 <MonthEnd>                   173μs  \r\n                                <MonthBegin>                  118μs  \r\n                <DateOffset: kwds={'months': 2, 'days': 2}>   68.8μs \r\n                               <BusinessDay>                  83.1μs \r\n                      <SemiMonthEnd: day_of_month=15>         176μs  \r\n                     <SemiMonthBegin: day_of_month=15>        173μs  \r\n               ============================================= ========\r\n\r\n[ 60.00%] ··· Running offset.OffestDatetimeArithmetic.time_subtract          ok\r\n[ 60.00%] ···· \r\n               ============================================= ========\r\n                                   offset                            \r\n               --------------------------------------------- --------\r\n                                   <Day>                      126μs  \r\n                        <BusinessYearEnd: month=12>           165μs  \r\n                        <BusinessYearBegin: month=1>          164μs  \r\n                   <BusinessQuarterEnd: startingMonth=3>      116μs  \r\n                  <BusinessQuarterBegin: startingMonth=3>     135μs  \r\n                             <BusinessMonthEnd>               144μs  \r\n                            <BusinessMonthBegin>              145μs  \r\n                            <CustomBusinessDay>               112μs  \r\n                            <CustomBusinessDay>               104μs  \r\n                         <CustomBusinessMonthBegin>           374μs  \r\n                          <CustomBusinessMonthEnd>            566μs  \r\n                          <CustomBusinessMonthEnd>            569μs  \r\n                            <YearEnd: month=12>               104μs  \r\n                            <YearBegin: month=1>              103μs  \r\n                       <QuarterEnd: startingMonth=3>          113μs  \r\n                      <QuarterBegin: startingMonth=3>         130μs  \r\n                                 <MonthEnd>                   196μs  \r\n                                <MonthBegin>                  139μs  \r\n                <DateOffset: kwds={'months': 2, 'days': 2}>   128μs  \r\n                               <BusinessDay>                  86.1μs \r\n                      <SemiMonthEnd: day_of_month=15>         188μs  \r\n                     <SemiMonthBegin: day_of_month=15>        189μs  \r\n               ============================================= ========\r\n\r\n[ 60.15%] ··· Running ...t.OffestDatetimeArithmetic.time_subtract_10         ok\r\n[ 60.15%] ···· \r\n               ============================================= =======\r\n                                   offset                           \r\n               --------------------------------------------- -------\r\n                                   <Day>                      139μs \r\n                        <BusinessYearEnd: month=12>           196μs \r\n                        <BusinessYearBegin: month=1>          197μs \r\n                   <BusinessQuarterEnd: startingMonth=3>      125μs \r\n                  <BusinessQuarterBegin: startingMonth=3>     145μs \r\n                             <BusinessMonthEnd>               158μs \r\n                            <BusinessMonthBegin>              159μs \r\n                            <CustomBusinessDay>               132μs \r\n                            <CustomBusinessDay>               115μs \r\n                         <CustomBusinessMonthBegin>           389μs \r\n                          <CustomBusinessMonthEnd>            479μs \r\n                          <CustomBusinessMonthEnd>            486μs \r\n                            <YearEnd: month=12>               155μs \r\n                            <YearBegin: month=1>              134μs \r\n                       <QuarterEnd: startingMonth=3>          125μs \r\n                      <QuarterBegin: startingMonth=3>         140μs \r\n                                 <MonthEnd>                   209μs \r\n                                <MonthBegin>                  152μs \r\n                <DateOffset: kwds={'months': 2, 'days': 2}>   512μs \r\n                               <BusinessDay>                  114μs \r\n                      <SemiMonthEnd: day_of_month=15>         197μs \r\n                     <SemiMonthBegin: day_of_month=15>        193μs \r\n               ============================================= =======\r\n\r\n[ 60.30%] ··· Running ...fsetDatetimeIndexArithmetic.time_add_offset         ok\r\n[ 60.30%] ···· \r\n               ============================================= ========\r\n                                   offset                            \r\n               --------------------------------------------- --------\r\n                                   <Day>                      687μs  \r\n                        <BusinessYearEnd: month=12>           199ms  \r\n                        <BusinessYearBegin: month=1>          110ms  \r\n                   <BusinessQuarterEnd: startingMonth=3>      93.2ms \r\n                  <BusinessQuarterBegin: startingMonth=3>     111ms  \r\n                             <BusinessMonthEnd>               108ms  \r\n                            <BusinessMonthBegin>              123ms  \r\n                            <CustomBusinessDay>               76.1ms \r\n                            <CustomBusinessDay>               76.7ms \r\n                         <CustomBusinessMonthBegin>           397ms  \r\n                          <CustomBusinessMonthEnd>            404ms  \r\n                          <CustomBusinessMonthEnd>            404ms  \r\n                            <YearEnd: month=12>               21.1ms \r\n                            <YearBegin: month=1>              3.09ms \r\n                       <QuarterEnd: startingMonth=3>          22.9ms \r\n                      <QuarterBegin: startingMonth=3>         3.11ms \r\n                                 <MonthEnd>                   665μs  \r\n                                <MonthBegin>                  658μs  \r\n                <DateOffset: kwds={'months': 2, 'days': 2}>   1.33ms \r\n                               <BusinessDay>                  16.8ms \r\n                      <SemiMonthEnd: day_of_month=15>         17.9ms \r\n                     <SemiMonthBegin: day_of_month=15>        17.4ms \r\n               ============================================= ========\r\n\r\n[ 60.45%] ··· Running offset.OffsetSeriesArithmetic.time_add_offset          ok\r\n[ 60.45%] ···· \r\n               ============================================= =======\r\n                                   offset                           \r\n               --------------------------------------------- -------\r\n                                   <Day>                      419ms \r\n                        <BusinessYearEnd: month=12>           615ms \r\n                        <BusinessYearBegin: month=1>          530ms \r\n                   <BusinessQuarterEnd: startingMonth=3>      515ms \r\n                  <BusinessQuarterBegin: startingMonth=3>     533ms \r\n                             <BusinessMonthEnd>               528ms \r\n                            <BusinessMonthBegin>              544ms \r\n                            <CustomBusinessDay>               499ms \r\n                            <CustomBusinessDay>               495ms \r\n                         <CustomBusinessMonthBegin>           816ms \r\n                          <CustomBusinessMonthEnd>            826ms \r\n                          <CustomBusinessMonthEnd>            824ms \r\n                            <YearEnd: month=12>               443ms \r\n                            <YearBegin: month=1>              422ms \r\n                       <QuarterEnd: startingMonth=3>          442ms \r\n                      <QuarterBegin: startingMonth=3>         419ms \r\n                                 <MonthEnd>                   414ms \r\n                                <MonthBegin>                  415ms \r\n                <DateOffset: kwds={'months': 2, 'days': 2}>   418ms \r\n                               <BusinessDay>                  433ms \r\n                      <SemiMonthEnd: day_of_month=15>         438ms \r\n                     <SemiMonthBegin: day_of_month=15>        436ms \r\n               ============================================= =======\r\n\r\n[ 60.60%] ··· Running offset.OnOffset.time_on_offset                         ok\r\n[ 60.60%] ···· \r\n               ============================================= ========\r\n                                   offset                            \r\n               --------------------------------------------- --------\r\n                                   <Day>                      28.3μs \r\n                        <BusinessYearEnd: month=12>           6.95ms \r\n                        <BusinessYearBegin: month=1>          5.24ms \r\n                   <BusinessQuarterEnd: startingMonth=3>      5.61ms \r\n                  <BusinessQuarterBegin: startingMonth=3>     4.63ms \r\n                             <BusinessMonthEnd>               5.31ms \r\n                            <BusinessMonthBegin>              35.1μs \r\n                            <CustomBusinessDay>               405μs  \r\n                            <CustomBusinessDay>               407μs  \r\n                         <CustomBusinessMonthBegin>           16.1ms \r\n                          <CustomBusinessMonthEnd>            16.2ms \r\n                          <CustomBusinessMonthEnd>            16.6ms \r\n                            <YearEnd: month=12>               35.0μs \r\n                            <YearBegin: month=1>              21.2μs \r\n                       <QuarterEnd: startingMonth=3>          249μs  \r\n                      <QuarterBegin: startingMonth=3>         4.48ms \r\n                                 <MonthEnd>                   34.2μs \r\n                                <MonthBegin>                  18.9μs \r\n                <DateOffset: kwds={'months': 2, 'days': 2}>   21.0μs \r\n                               <BusinessDay>                  20.5μs \r\n                      <SemiMonthEnd: day_of_month=15>         38.8μs \r\n                     <SemiMonthBegin: day_of_month=15>        23.3μs \r\n               ============================================= ========\r\n\r\n[ 60.75%] ··· Running panel_ctor.DifferentIndexes.time_from_dict          384ms\r\n[ 60.90%] ··· Running panel_ctor.SameIndexes.time_from_dict              32.4ms\r\n[ 61.05%] ··· Running panel_ctor.TwoIndexes.time_from_dict                104ms\r\n[ 61.20%] ··· Running panel_methods.PanelMethods.time_pct_change             ok\r\n[ 61.20%] ···· \r\n               ======= =======\r\n                 axis         \r\n               ------- -------\r\n                items   1.56s \r\n                major   1.45s \r\n                minor   1.42s \r\n               ======= =======\r\n\r\n[ 61.35%] ··· Running panel_methods.PanelMethods.time_shift                  ok\r\n[ 61.35%] ···· \r\n               ======= =======\r\n                 axis         \r\n               ------- -------\r\n                items   476μs \r\n                major   384μs \r\n                minor   427μs \r\n               ======= =======\r\n\r\n[ 61.50%] ··· Running period.Algorithms.time_drop_duplicates                 ok\r\n[ 61.50%] ···· \r\n               ======== ========\r\n                 typ            \r\n               -------- --------\r\n                index    483μs  \r\n                series   7.28ms \r\n               ======== ========\r\n\r\n[ 61.65%] ··· Running period.Algorithms.time_value_counts                    ok\r\n[ 61.65%] ···· \r\n               ======== ========\r\n                 typ            \r\n               -------- --------\r\n                index    1.39ms \r\n                series   8.01ms \r\n               ======== ========\r\n\r\n[ 61.80%] ··· Running ...ramePeriodColumn.time_setitem_period_column     78.9ms\r\n[ 61.95%] ··· Running period.Indexing.time_align                         2.62ms\r\n[ 62.11%] ··· Running period.Indexing.time_get_loc                        207μs\r\n[ 62.26%] ··· Running period.Indexing.time_intersection                   561μs\r\n[ 62.41%] ··· Running period.Indexing.time_series_loc                     416μs\r\n[ 62.56%] ··· Running period.Indexing.time_shallow_copy                  52.7μs\r\n[ 62.71%] ··· Running period.Indexing.time_shape                         13.8μs\r\n[ 62.86%] ··· Running ...PeriodIndexConstructor.time_from_date_range         ok\r\n[ 62.86%] ···· \r\n               ====== =======\r\n                freq         \r\n               ------ -------\r\n                 D     368μs \r\n               ====== =======\r\n\r\n[ 63.01%] ··· Running ...PeriodIndexConstructor.time_from_pydatetime         ok\r\n[ 63.01%] ···· \r\n               ====== ========\r\n                freq          \r\n               ------ --------\r\n                 D     15.3ms \r\n               ====== ========\r\n\r\n[ 63.16%] ··· Running period.PeriodProperties.time_property                  ok\r\n[ 63.16%] ···· \r\n               ====== ============== ========\r\n                freq       attr              \r\n               ------ -------------- --------\r\n                 M         year       16.9μs \r\n                 M        month       17.5μs \r\n                 M         day        17.2μs \r\n                 M         hour       17.7μs \r\n                 M        minute      18.0μs \r\n                 M        second      16.5μs \r\n                 M     is_leap_year   18.1μs \r\n                 M       quarter      16.7μs \r\n                 M        qyear       17.0μs \r\n                 M         week       18.2μs \r\n                 M     daysinmonth    17.4μs \r\n                 M      dayofweek     16.7μs \r\n                 M      dayofyear     17.6μs \r\n                 M      start_time    246μs  \r\n                 M       end_time     283μs  \r\n                min        year       17.8μs \r\n                min       month       17.9μs \r\n                min        day        18.2μs \r\n                min        hour       17.5μs \r\n                min       minute      17.5μs \r\n                min       second      17.4μs \r\n                min    is_leap_year   19.0μs \r\n                min      quarter      18.8μs \r\n                min       qyear       17.1μs \r\n                min        week       17.9μs \r\n                min    daysinmonth    18.0μs \r\n                min     dayofweek     18.9μs \r\n                min     dayofyear     18.1μs \r\n                min     start_time    238μs  \r\n                min      end_time     274μs  \r\n               ====== ============== ========\r\n\r\n[ 63.31%] ··· Running period.PeriodUnaryMethods.time_asfreq                  ok\r\n[ 63.31%] ···· \r\n               ====== =======\r\n                freq         \r\n               ------ -------\r\n                 M     160μs \r\n                min    167μs \r\n               ====== =======\r\n\r\n[ 63.46%] ··· Running period.PeriodUnaryMethods.time_now                     ok\r\n[ 63.46%] ···· \r\n               ====== =======\r\n                freq         \r\n               ------ -------\r\n                 M     124μs \r\n                min    227μs \r\n               ====== =======\r\n\r\n[ 63.61%] ··· Running period.PeriodUnaryMethods.time_to_timestamp            ok\r\n[ 63.61%] ···· \r\n               ====== =======\r\n                freq         \r\n               ------ -------\r\n                 M     238μs \r\n                min    238μs \r\n               ====== =======\r\n\r\n[ 63.76%] ··· Running plotting.Misc.time_plot_andrews_curves              1.87s\r\n[ 63.91%] ··· Running plotting.Plotting.time_frame_plot                   413ms\r\n[ 64.06%] ··· Running plotting.Plotting.time_series_plot                  420ms\r\n[ 64.21%] ··· Running ...ting.TimeseriesPlotting.time_plot_irregular      128ms\r\n[ 64.36%] ··· Running plotting.TimeseriesPlotting.time_plot_regular       390ms\r\n[ 64.51%] ··· Running ...TimeseriesPlotting.time_plot_regular_compat      125ms\r\n[ 64.66%] ··· Running ...ex.Align.time_align_series_irregular_string      567ms\r\n[ 64.81%] ··· Running reindex.DropDuplicates.time_frame_drop_dups            ok\r\n[ 64.81%] ···· \r\n               ========= ========\r\n                inplace          \r\n               --------- --------\r\n                  True    24.2ms \r\n                 False    24.3ms \r\n               ========= ========\r\n\r\n[ 64.96%] ··· Running ...ex.DropDuplicates.time_frame_drop_dups_bool         ok\r\n[ 64.96%] ···· \r\n               ========= ========\r\n                inplace          \r\n               --------- --------\r\n                  True    6.43ms \r\n                 False    6.63ms \r\n               ========= ========\r\n\r\n[ 65.11%] ··· Running ...dex.DropDuplicates.time_frame_drop_dups_int         ok\r\n[ 65.11%] ···· \r\n               ========= ========\r\n                inplace          \r\n               --------- --------\r\n                  True    61.0ms \r\n                 False    57.4ms \r\n               ========= ========\r\n\r\n[ 65.26%] ··· Running reindex.DropDuplicates.time_frame_drop_dups_na         ok\r\n[ 65.26%] ···· \r\n               ========= ========\r\n                inplace          \r\n               --------- --------\r\n                  True    27.6ms \r\n                 False    27.2ms \r\n               ========= ========\r\n\r\n[ 65.41%] ··· Running ...ex.DropDuplicates.time_series_drop_dups_int         ok\r\n[ 65.41%] ···· \r\n               ========= ========\r\n                inplace          \r\n               --------- --------\r\n                  True    1.43ms \r\n                 False    1.37ms \r\n               ========= ========\r\n\r\n[ 65.56%] ··· Running ...DropDuplicates.time_series_drop_dups_string         ok\r\n[ 65.56%] ···· \r\n               ========= ========\r\n                inplace          \r\n               --------- --------\r\n                  True    1.57ms \r\n                 False    1.61ms \r\n               ========= ========\r\n\r\n[ 65.71%] ··· Running reindex.Fillna.time_float_32                           ok\r\n[ 65.71%] ···· \r\n               ========== =======\r\n                 method          \r\n               ---------- -------\r\n                  pad      815μs \r\n                backfill   812μs \r\n               ========== =======\r\n\r\n[ 65.86%] ··· Running reindex.Fillna.time_reindexed                          ok\r\n[ 65.86%] ···· \r\n               ========== ========\r\n                 method           \r\n               ---------- --------\r\n                  pad      1.20ms \r\n                backfill   1.17ms \r\n               ========== ========\r\n\r\n[ 66.02%] ··· Running reindex.LevelAlign.time_align_level                27.8ms\r\n[ 66.17%] ··· Running reindex.LevelAlign.time_reindex_level              27.0ms\r\n[ 66.32%] ··· Running reindex.LibFastZip.time_lib_fast_zip               27.1ms\r\n[ 66.47%] ··· Running reindex.LibFastZip.time_lib_fast_zip_fillna        30.1ms\r\n[ 66.62%] ··· Running reindex.Reindex.time_reindex_columns               2.01ms\r\n[ 66.77%] ··· Running reindex.Reindex.time_reindex_dates                 1.55ms\r\n[ 66.92%] ··· Running reindex.Reindex.time_reindex_multiindex             545ms\r\n[ 67.07%] ··· Running reindex.ReindexMethod.time_reindex_method              ok\r\n[ 67.07%] ···· \r\n               ========== ========\r\n                 method           \r\n               ---------- --------\r\n                  pad      5.53ms \r\n                backfill   5.75ms \r\n               ========== ========\r\n\r\n[ 67.22%] ··· Running replace.Convert.time_replace                           ok\r\n[ 67.22%] ···· \r\n               ============ =========== ===========\r\n               --                 replace_data     \r\n               ------------ -----------------------\r\n                contructor   Timestamp   Timedelta \r\n               ============ =========== ===========\r\n                DataFrame      437ms       429ms   \r\n                  Series       364ms       365ms   \r\n               ============ =========== ===========\r\n\r\n[ 67.37%] ··· Running replace.FillNa.time_fillna                             ok\r\n[ 67.37%] ···· \r\n               ========= ========\r\n                inplace          \r\n               --------- --------\r\n                  True    6.55ms \r\n                 False    15.7ms \r\n               ========= ========\r\n\r\n[ 67.52%] ··· Running replace.FillNa.time_replace                            ok\r\n[ 67.52%] ···· \r\n               ========= ========\r\n                inplace          \r\n               --------- --------\r\n                  True    6.50ms \r\n                 False    23.6ms \r\n               ========= ========\r\n\r\n[ 67.67%] ··· Running replace.ReplaceDict.time_replace_series                ok\r\n[ 67.67%] ···· \r\n               ========= =======\r\n                inplace         \r\n               --------- -------\r\n                  True    7.82s \r\n                 False    7.72s \r\n               ========= =======\r\n\r\n[ 67.82%] ··· Running reshape.Melt.time_melt_dataframe                   6.23ms\r\n[ 67.97%] ··· Running reshape.Pivot.time_reshape_pivot_time_series        329ms\r\n[ 68.12%] ··· Running reshape.PivotTable.time_pivot_table                40.6ms\r\n[ 68.27%] ··· Running reshape.SimpleReshape.time_stack                   5.75ms\r\n[ 68.42%] ··· Running reshape.SimpleReshape.time_unstack                 6.72ms\r\n[ 68.57%] ··· Running reshape.SparseIndex.time_unstack                   2.93ms\r\n[ 68.72%] ··· Running reshape.Unstack.time_full_product                   196ms\r\n[ 68.87%] ··· Running reshape.Unstack.time_without_last_row               339ms\r\n[ 69.02%] ··· Running reshape.WideToLong.time_wide_to_long_big            273ms\r\n[ 69.17%] ··· Running rolling.Methods.time_rolling                           ok\r\n[ 69.17%] ···· \r\n               ============ ======== ======= ======== ========\r\n                contructor   window   dtype   method          \r\n               ------------ -------- ------- -------- --------\r\n                DataFrame      10      int    median   60.2ms \r\n                DataFrame      10      int     mean    6.38ms \r\n                DataFrame      10      int     max     6.40ms \r\n                DataFrame      10      int     min     6.35ms \r\n                DataFrame      10      int     std     7.49ms \r\n                DataFrame      10      int    count    9.31ms \r\n                DataFrame      10      int     skew    6.51ms \r\n                DataFrame      10      int     kurt    6.57ms \r\n                DataFrame      10      int     sum     6.08ms \r\n                DataFrame      10      int     corr    57.3s  \r\n                DataFrame      10      int     cov     56.8s  \r\n                DataFrame      10     float   median   63.0ms \r\n                DataFrame      10     float    mean    5.81ms \r\n                DataFrame      10     float    max     6.81ms \r\n                DataFrame      10     float    min     6.89ms \r\n                DataFrame      10     float    std     8.57ms \r\n                DataFrame      10     float   count    9.15ms \r\n                DataFrame      10     float    skew    11.0ms \r\n                DataFrame      10     float    kurt    10.8ms \r\n                DataFrame      10     float    sum     5.36ms \r\n                DataFrame      10     float    corr    57.0s  \r\n                DataFrame      10     float    cov     56.7s  \r\n                DataFrame     1000     int    median   89.4ms \r\n                DataFrame     1000     int     mean    6.35ms \r\n                DataFrame     1000     int     max     6.44ms \r\n                DataFrame     1000     int     min     6.36ms \r\n                DataFrame     1000     int     std     7.56ms \r\n                DataFrame     1000     int    count    9.37ms \r\n                DataFrame     1000     int     skew    6.50ms \r\n                DataFrame     1000     int     kurt    6.56ms \r\n                DataFrame     1000     int     sum     6.02ms \r\n                DataFrame     1000     int     corr    57.4s  \r\n                DataFrame     1000     int     cov     56.9s  \r\n                DataFrame     1000    float   median   118ms  \r\n                DataFrame     1000    float    mean    5.82ms \r\n                DataFrame     1000    float    max     6.82ms \r\n                DataFrame     1000    float    min     6.90ms \r\n                DataFrame     1000    float    std     8.55ms \r\n                DataFrame     1000    float   count    9.20ms \r\n                DataFrame     1000    float    skew    10.9ms \r\n                DataFrame     1000    float    kurt    11.0ms \r\n                DataFrame     1000    float    sum     5.41ms \r\n                DataFrame     1000    float    corr    57.2s  \r\n                DataFrame     1000    float    cov     57.0s  \r\n                  Series       10      int    median   63.2ms \r\n                  Series       10      int     mean    9.56ms \r\n                  Series       10      int     max     9.51ms \r\n                  Series       10      int     min     9.52ms \r\n                  Series       10      int     std     11.0ms \r\n                  Series       10      int    count    18.2ms \r\n                  Series       10      int     skew    9.68ms \r\n                  Series       10      int     kurt    9.91ms \r\n                  Series       10      int     sum     9.15ms \r\n                  Series       10      int     corr    515ms  \r\n                  Series       10      int     cov     487ms  \r\n                  Series       10     float   median   66.3ms \r\n                  Series       10     float    mean    9.39ms \r\n                  Series       10     float    max     10.4ms \r\n                  Series       10     float    min     10.7ms \r\n                  Series       10     float    std     12.7ms \r\n                  Series       10     float   count    18.0ms \r\n                  Series       10     float    skew    14.7ms \r\n                  Series       10     float    kurt    14.2ms \r\n                  Series       10     float    sum     8.91ms \r\n                  Series       10     float    corr    518ms  \r\n                  Series       10     float    cov     489ms  \r\n                  Series      1000     int    median   93.4ms \r\n                  Series      1000     int     mean    9.56ms \r\n                  Series      1000     int     max     9.59ms \r\n                  Series      1000     int     min     9.59ms \r\n                  Series      1000     int     std     11.1ms \r\n                  Series      1000     int    count    18.2ms \r\n                  Series      1000     int     skew    9.60ms \r\n                  Series      1000     int     kurt    9.66ms \r\n                  Series      1000     int     sum     9.27ms \r\n                  Series      1000     int     corr    514ms  \r\n                  Series      1000     int     cov     490ms  \r\n                  Series      1000    float   median   121ms  \r\n                  Series      1000    float    mean    9.38ms \r\n                  Series      1000    float    max     10.4ms \r\n                  Series      1000    float    min     10.4ms \r\n                  Series      1000    float    std     12.6ms \r\n                  Series      1000    float   count    18.0ms \r\n                  Series      1000    float    skew    14.5ms \r\n                  Series      1000    float    kurt    14.2ms \r\n                  Series      1000    float    sum     8.93ms \r\n                  Series      1000    float    corr    515ms  \r\n                  Series      1000    float    cov     483ms  \r\n               ============ ======== ======= ======== ========\r\n\r\n[ 69.32%] ··· Running rolling.Quantile.time_quantile                         ok\r\n[ 69.32%] ···· \r\n               ============ ======== ======= ======== ======= ========\r\n               --                                    percentile       \r\n               ----------------------------- -------------------------\r\n                contructor   window   dtype     0       0.5      1    \r\n               ============ ======== ======= ======== ======= ========\r\n                DataFrame      10      int    6.46ms   303ms   6.40ms \r\n                DataFrame      10     float   6.89ms   315ms   6.85ms \r\n                DataFrame     1000     int    6.37ms   614ms   6.46ms \r\n                DataFrame     1000    float   6.94ms   711ms   6.83ms \r\n                  Series       10      int    9.49ms   308ms   9.64ms \r\n                  Series       10     float   10.6ms   304ms   10.3ms \r\n                  Series      1000     int    9.51ms   621ms   9.57ms \r\n                  Series      1000    float   10.3ms   674ms   10.3ms \r\n               ============ ======== ======= ======== ======= ========\r\n\r\n[ 69.47%] ··· Running series_methods.Clip.time_clip                       291μs\r\n[ 69.62%] ··· Running series_methods.Dir.time_dir_strings                30.7ms\r\n[ 69.77%] ··· Running series_methods.Dropna.time_dropna                      ok\r\n[ 69.77%] ···· \r\n               ========== ========\r\n                 dtype            \r\n               ---------- --------\r\n                  int      4.21ms \r\n                datetime   19.4ms \r\n               ========== ========\r\n\r\n[ 69.92%] ··· Running series_methods.IsIn.time_isin                          ok\r\n[ 69.92%] ···· \r\n               ======== ========\r\n                dtype           \r\n               -------- --------\r\n                int64    2.59ms \r\n                object   4.92ms \r\n               ======== ========\r\n\r\n[ 70.08%] ··· Running series_methods.Map.time_map                            ok\r\n[ 70.08%] ···· \r\n               ======== ========\r\n                  m             \r\n               -------- --------\r\n                 dict    3.48ms \r\n                Series   2.33ms \r\n               ======== ========\r\n\r\n[ 70.23%] ··· Running series_methods.NSort.time_nlargest                     ok\r\n[ 70.23%] ···· \r\n               ======= ========\r\n                 keep          \r\n               ------- --------\r\n                 last   5.36ms \r\n                first   5.63ms \r\n               ======= ========\r\n\r\n[ 70.38%] ··· Running series_methods.NSort.time_nsmallest                    ok\r\n[ 70.38%] ···· \r\n               ======= ========\r\n                 keep          \r\n               ------- --------\r\n                 last   4.37ms \r\n                first   5.01ms \r\n               ======= ========\r\n\r\n[ 70.53%] ··· Running ..._methods.SeriesConstructor.time_constructor         ok\r\n[ 70.53%] ···· \r\n               ====== =======\r\n                data         \r\n               ------ -------\r\n                None   652μs \r\n                dict   1.56s \r\n               ====== =======\r\n\r\n[ 70.68%] ··· Running series_methods.ValueCounts.time_value_counts           ok\r\n[ 70.68%] ···· \r\n               ======== ========\r\n                dtype           \r\n               -------- --------\r\n                 int     4.53ms \r\n                float    7.80ms \r\n                object   24.6ms \r\n               ======== ========\r\n\r\n[ 70.83%] ··· Running sparse.Arithmetic.time_add                             ok\r\n[ 70.83%] ···· \r\n               ================== ======== ========\r\n               --                     fill_value   \r\n               ------------------ -----------------\r\n                dense_proportion     0       nan   \r\n               ================== ======== ========\r\n                      0.1          82.2ms   69.5ms \r\n                      0.01         8.58ms   68.4ms \r\n               ================== ======== ========\r\n\r\n[ 70.98%] ··· Running sparse.Arithmetic.time_divide                          ok\r\n[ 70.98%] ···· \r\n               ================== ======== ========\r\n               --                     fill_value   \r\n               ------------------ -----------------\r\n                dense_proportion     0       nan   \r\n               ================== ======== ========\r\n                      0.1          87.2ms   68.0ms \r\n                      0.01         9.06ms   67.8ms \r\n               ================== ======== ========\r\n\r\n[ 71.13%] ··· Running sparse.Arithmetic.time_intersect                       ok\r\n[ 71.13%] ···· \r\n               ================== ======== =======\r\n               --                    fill_value   \r\n               ------------------ ----------------\r\n                dense_proportion     0       nan  \r\n               ================== ======== =======\r\n                      0.1          5.63ms   340ms \r\n                      0.01         357μs    366ms \r\n               ================== ======== =======\r\n\r\n[ 71.28%] ··· Running sparse.Arithmetic.time_make_union                      ok\r\n[ 71.28%] ···· \r\n               ================== ======== =======\r\n               --                    fill_value   \r\n               ------------------ ----------------\r\n                dense_proportion     0       nan  \r\n               ================== ======== =======\r\n                      0.1          79.5ms   728ms \r\n                      0.01         8.20ms   715ms \r\n               ================== ======== =======\r\n\r\n[ 71.43%] ··· Running sparse.ArithmeticBlock.time_addition                   ok\r\n[ 71.43%] ···· \r\n               ============ ========\r\n                fill_value          \r\n               ------------ --------\r\n                   nan       8.24ms \r\n                    0        7.98ms \r\n               ============ ========\r\n\r\n[ 71.58%] ··· Running sparse.ArithmeticBlock.time_division                   ok\r\n[ 71.58%] ···· \r\n               ============ ========\r\n                fill_value          \r\n               ------------ --------\r\n                   nan       8.41ms \r\n                    0        7.90ms \r\n               ============ ========\r\n\r\n[ 71.73%] ··· Running sparse.ArithmeticBlock.time_intersect                  ok\r\n[ 71.73%] ···· \r\n               ============ ========\r\n                fill_value          \r\n               ------------ --------\r\n                   nan       3.77ms \r\n                    0        3.75ms \r\n               ============ ========\r\n\r\n[ 71.88%] ··· Running sparse.ArithmeticBlock.time_make_union                 ok\r\n[ 71.88%] ···· \r\n               ============ ========\r\n                fill_value          \r\n               ------------ --------\r\n                   nan       7.93ms \r\n                    0        8.14ms \r\n               ============ ========\r\n\r\n[ 72.03%] ··· Running sparse.FromCoo.time_sparse_series_from_coo         3.47ms\r\n[ 72.18%] ··· Running ...se.SparseArrayConstructor.time_sparse_array         ok\r\n[ 72.18%] ···· \r\n               ================== ============ ======================== ========\r\n                dense_proportion   fill_value           dtype                   \r\n               ------------------ ------------ ------------------------ --------\r\n                      0.1              0         <type 'numpy.int64'>    47.9ms \r\n                      0.1              0        <type 'numpy.float64'>   45.7ms \r\n                      0.1              0           <type 'object'>       106ms  \r\n                      0.1             nan        <type 'numpy.int64'>    376ms  \r\n                      0.1             nan       <type 'numpy.float64'>   47.0ms \r\n                      0.1             nan          <type 'object'>       122ms  \r\n                      0.01             0         <type 'numpy.int64'>    8.95ms \r\n                      0.01             0        <type 'numpy.float64'>   8.94ms \r\n                      0.01             0           <type 'object'>       68.0ms \r\n                      0.01            nan        <type 'numpy.int64'>    357ms  \r\n                      0.01            nan       <type 'numpy.float64'>   9.63ms \r\n                      0.01            nan          <type 'object'>       65.1ms \r\n               ================== ============ ======================== ========\r\n\r\n[ 72.33%] ··· Running ...SparseDataFrameConstructor.time_constructor      6.42s\r\n[ 72.48%] ··· Running ...e.SparseDataFrameConstructor.time_from_dict      246ms\r\n[ 72.63%] ··· Running ....SparseDataFrameConstructor.time_from_scipy      566ms\r\n[ 72.78%] ··· Running ...se.SparseSeriesToFrame.time_series_to_frame      285ms\r\n[ 72.93%] ··· Running sparse.ToCoo.time_sparse_series_to_coo             44.3ms\r\n[ 73.08%] ··· Running stat_ops.Correlation.time_corr                         ok\r\n[ 73.08%] ···· \r\n               ========== ========\r\n                 method           \r\n               ---------- --------\r\n                spearman   117ms  \r\n                kendall    696ms  \r\n                pearson    5.82ms \r\n               ========== ========\r\n\r\n[ 73.23%] ··· Running stat_ops.FrameMultiIndexOps.time_op                    ok\r\n[ 73.23%] ···· \r\n               ======== ======== ========\r\n                level      op            \r\n               -------- -------- --------\r\n                  0       mean    8.40ms \r\n                  0       sum     8.41ms \r\n                  0      median   22.2ms \r\n                  0       std     12.0ms \r\n                  0       skew    75.3ms \r\n                  0       kurt    135ms  \r\n                  0       mad     507ms  \r\n                  0       prod    8.55ms \r\n                  0       sem     435ms  \r\n                  0       var     11.3ms \r\n                  1       mean    8.44ms \r\n                  1       sum     8.56ms \r\n                  1      median   24.9ms \r\n                  1       std     11.9ms \r\n                  1       skew    139ms  \r\n                  1       kurt    214ms  \r\n                  1       mad     683ms  \r\n                  1       prod    8.60ms \r\n                  1       sem     434ms  \r\n                  1       var     11.6ms \r\n                [0, 1]    mean    17.4ms \r\n                [0, 1]    sum     17.2ms \r\n                [0, 1]   median   32.3ms \r\n                [0, 1]    std     20.7ms \r\n                [0, 1]    skew    953ms  \r\n                [0, 1]    kurt    1.04s  \r\n                [0, 1]    mad     2.66s  \r\n                [0, 1]    prod    17.3ms \r\n                [0, 1]    sem     443ms  \r\n                [0, 1]    var     20.4ms \r\n               ======== ======== ========\r\n\r\n[ 73.38%] ··· Running stat_ops.FrameOps.time_op                              ok\r\n[ 73.38%] ···· \r\n               ======== ======= ====== ======== ========\r\n               --                        use_bottleneck \r\n               ----------------------- -----------------\r\n                  op     dtype   axis    True    False  \r\n               ======== ======= ====== ======== ========\r\n                 mean    float    0     1.21ms   12.0ms \r\n                 mean    float    1     2.08ms   12.3ms \r\n                 mean     int     0     1.22ms   10.2ms \r\n                 mean     int     1     2.06ms   11.3ms \r\n                 sum     float    0     11.6ms   11.7ms \r\n                 sum     float    1     11.9ms   11.6ms \r\n                 sum      int     0     7.35ms   7.44ms \r\n                 sum      int     1     8.31ms   8.42ms \r\n                median   float    0     6.88ms   23.7ms \r\n                median   float    1     6.07ms   7.46s  \r\n                median    int     0     4.47ms   24.6ms \r\n                median    int     1     5.61ms   7.44s  \r\n                 std     float    0     1.93ms   23.4ms \r\n                 std     float    1     4.49ms   26.1ms \r\n                 std      int     0     3.42ms   24.5ms \r\n                 std      int     1     6.13ms   26.0ms \r\n                 skew    float    0     33.5ms   33.3ms \r\n                 skew    float    1     53.8ms   53.4ms \r\n                 skew     int     0     34.7ms   34.9ms \r\n                 skew     int     1     53.0ms   52.5ms \r\n                 kurt    float    0     33.6ms   32.7ms \r\n                 kurt    float    1     44.7ms   45.0ms \r\n                 kurt     int     0     34.5ms   34.0ms \r\n                 kurt     int     1     46.6ms   46.9ms \r\n                 mad     float    0     433ms    448ms  \r\n                 mad     float    1     434ms    455ms  \r\n                 mad      int     0     433ms    455ms  \r\n                 mad      int     1     431ms    458ms  \r\n                 prod    float    0     9.99ms   10.0ms \r\n                 prod    float    1     9.86ms   10.1ms \r\n                 prod     int     0     3.82ms   3.85ms \r\n                 prod     int     1     5.35ms   5.38ms \r\n                 sem     float    0     5.63ms   48.5ms \r\n                 sem     float    1     12.0ms   55.5ms \r\n                 sem      int     0     9.55ms   51.1ms \r\n                 sem      int     1     15.4ms   58.1ms \r\n                 var     float    0     1.93ms   23.4ms \r\n                 var     float    1     3.30ms   25.9ms \r\n                 var      int     0     3.41ms   24.3ms \r\n                 var      int     1     4.76ms   25.5ms \r\n               ======== ======= ====== ======== ========\r\n\r\n[ 73.53%] ··· Running stat_ops.Rank.time_average_old                         ok\r\n[ 73.53%] ···· \r\n               ============= ======= =======\r\n               --                  pct      \r\n               ------------- ---------------\r\n                constructor    True   False \r\n               ============= ======= =======\r\n                 DataFrame    435ms   438ms \r\n                   Series     435ms   434ms \r\n               ============= ======= =======\r\n\r\n[ 73.68%] ··· Running stat_ops.Rank.time_rank                                ok\r\n[ 73.68%] ···· \r\n               ============= ======== ========\r\n               --                   pct       \r\n               ------------- -----------------\r\n                constructor    True    False  \r\n               ============= ======== ========\r\n                 DataFrame    19.0ms   18.8ms \r\n                   Series     19.2ms   18.1ms \r\n               ============= ======== ========\r\n\r\n[ 73.83%] ··· Running stat_ops.SeriesMultiIndexOps.time_op                   ok\r\n[ 73.83%] ···· \r\n               ======== ======== ========\r\n                level      op            \r\n               -------- -------- --------\r\n                  0       mean    21.8ms \r\n                  0       sum     20.9ms \r\n                  0      median   24.5ms \r\n                  0       std     22.7ms \r\n                  0       skew    33.3ms \r\n                  0       kurt    32.7ms \r\n                  0       mad     462ms  \r\n                  0       prod    21.3ms \r\n                  0       sem     438ms  \r\n                  0       var     22.4ms \r\n                  1       mean    21.2ms \r\n                  1       sum     21.2ms \r\n                  1      median   24.7ms \r\n                  1       std     23.0ms \r\n                  1       skew    76.1ms \r\n                  1       kurt    78.1ms \r\n                  1       mad     567ms  \r\n                  1       prod    21.2ms \r\n                  1       sem     444ms  \r\n                  1       var     22.6ms \r\n                [0, 1]    mean    15.6ms \r\n                [0, 1]    sum     15.2ms \r\n                [0, 1]   median   19.1ms \r\n                [0, 1]    std     16.7ms \r\n                [0, 1]    skew    523ms  \r\n                [0, 1]    kurt    524ms  \r\n                [0, 1]    mad     1.61s  \r\n                [0, 1]    prod    15.2ms \r\n                [0, 1]    sem     435ms  \r\n                [0, 1]    var     16.6ms \r\n               ======== ======== ========\r\n\r\n[ 73.98%] ··· Running stat_ops.SeriesOps.time_op                             ok\r\n[ 73.98%] ···· \r\n               ======== ======= ======== ========\r\n               --                 use_bottleneck \r\n               ---------------- -----------------\r\n                  op     dtype    True    False  \r\n               ======== ======= ======== ========\r\n                 mean    float   398μs    2.07ms \r\n                 mean     int    399μs    2.20ms \r\n                 sum     float   2.00ms   2.01ms \r\n                 sum      int    2.11ms   2.20ms \r\n                median   float   2.24ms   6.27ms \r\n                median    int    1.47ms   6.37ms \r\n                 std     float   604μs    3.19ms \r\n                 std      int    1.05ms   3.90ms \r\n                 skew    float   4.81ms   4.84ms \r\n                 skew     int    5.37ms   5.57ms \r\n                 kurt    float   4.74ms   4.61ms \r\n                 kurt     int    5.14ms   5.23ms \r\n                 mad     float   426ms    437ms  \r\n                 mad      int    431ms    428ms  \r\n                 prod    float   1.92ms   1.98ms \r\n                 prod     int    1.05ms   1.04ms \r\n                 sem     float   1.55ms   6.71ms \r\n                 sem      int    2.74ms   8.11ms \r\n                 var     float   601μs    3.28ms \r\n                 var      int    947μs    3.77ms \r\n               ======== ======= ======== ========\r\n\r\n[ 74.14%] ··· Running strings.Contains.time_contains                         ok\r\n[ 74.14%] ···· \r\n               ======= ========\r\n                regex          \r\n               ------- --------\r\n                 True   105ms  \r\n                False   38.5ms \r\n               ======= ========\r\n\r\n[ 74.29%] ··· Running strings.Dummies.time_get_dummies                    7.78s\r\n[ 74.44%] ··· Running strings.Encode.time_encode_decode                   711μs\r\n[ 74.59%] ··· Running strings.Methods.time_cat                           24.1ms\r\n[ 74.74%] ··· Running strings.Methods.time_center                        85.5ms\r\n[ 74.89%] ··· Running strings.Methods.time_count                          121ms\r\n[ 75.04%] ··· Running strings.Methods.time_endswith                      67.9ms\r\n[ 75.19%] ··· Running strings.Methods.time_extract                        479ms\r\n[ 75.19%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/strings.py:26: FutureWarning: currently extract(expand=None) means expand=False (return Index/Series/DataFrame) but in a future version of pandas this will be changed to expand=True (return DataFrame)\r\n                self.s.str.extract('(\\\\w*)A(\\\\w*)')\r\n\r\n[ 75.34%] ··· Running strings.Methods.time_findall                        176ms\r\n[ 75.49%] ··· Running strings.Methods.time_get                           57.5ms\r\n[ 75.64%] ··· Running strings.Methods.time_len                           40.9ms\r\n[ 75.79%] ··· Running strings.Methods.time_lower                         56.7ms\r\n[ 75.94%] ··· Running strings.Methods.time_lstrip                        55.2ms\r\n[ 76.09%] ··· Running strings.Methods.time_match                          141ms\r\n[ 76.24%] ··· Running strings.Methods.time_pad                           83.0ms\r\n[ 76.39%] ··· Running strings.Methods.time_replace                       72.6ms\r\n[ 76.54%] ··· Running strings.Methods.time_rstrip                        60.1ms\r\n[ 76.69%] ··· Running strings.Methods.time_slice                         52.2ms\r\n[ 76.84%] ··· Running strings.Methods.time_startswith                    68.4ms\r\n[ 76.99%] ··· Running strings.Methods.time_strip                         57.2ms\r\n[ 77.14%] ··· Running strings.Methods.time_title                         59.1ms\r\n[ 77.29%] ··· Running strings.Methods.time_upper                         56.6ms\r\n[ 77.44%] ··· Running strings.Repeat.time_repeat                             ok\r\n[ 77.44%] ···· \r\n               ========= ========\r\n                repeats          \r\n               --------- --------\r\n                  int     81.9ms \r\n                 array    70.1ms \r\n               ========= ========\r\n\r\n[ 77.59%] ··· Running strings.Slice.time_vector_slice                     284ms\r\n[ 77.74%] ··· Running strings.Split.time_split                               ok\r\n[ 77.74%] ···· \r\n               ======== =======\r\n                expand         \r\n               -------- -------\r\n                 True    771ms \r\n                False    353ms \r\n               ======== =======\r\n\r\n[ 77.89%] ··· Running timedelta.DatetimeAccessor.time_dt_accessor         167μs\r\n[ 78.05%] ··· Running ...imeAccessor.time_timedelta_dt_accessor_days      2.17s\r\n[ 78.20%] ··· Running ...sor.time_timedelta_dt_accessor_microseconds      2.14s\r\n[ 78.35%] ··· Running ...ssor.time_timedelta_dt_accessor_nanoseconds      2.11s\r\n[ 78.50%] ··· Running ...Accessor.time_timedelta_dt_accessor_seconds      2.17s\r\n[ 78.65%] ··· Running ...a.TimedeltaConstructor.time_from_components     63.1μs\r\n[ 78.80%] ··· Running ...ltaConstructor.time_from_datetime_timedelta     35.5μs\r\n[ 78.95%] ··· Running timedelta.TimedeltaConstructor.time_from_int       31.7μs\r\n[ 79.10%] ··· Running ...a.TimedeltaConstructor.time_from_iso_format     failed\r\n[ 79.10%] ····· Traceback (most recent call last):\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 818, in <module>\r\n                    commands[mode](args)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 795, in main_run\r\n                    result = benchmark.do_run()\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 349, in do_run\r\n                    return self.run(*self._current_params)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 424, in run\r\n                    samples, number = self.benchmark_timing(timer, repeat, warmup_time, number=number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 471, in benchmark_timing\r\n                    timing = timer.timeit(number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 202, in timeit\r\n                    timing = self.inner(it, self.timer)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 100, in inner\r\n                    _func()\r\n                  File \"/home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timedelta.py\", line 32, in time_from_iso_format\r\n                    Timedelta('P4DT12H30M5S')\r\n                  File \"pandas/_libs/tslib.pyx\", line 2588, in pandas._libs.tslib.Timedelta.__new__\r\n                  File \"pandas/_libs/tslibs/timedeltas.pyx\", line 159, in pandas._libs.tslibs.timedeltas.parse_timedelta_string\r\n                  File \"pandas/_libs/tslibs/timedeltas.pyx\", line 296, in pandas._libs.tslibs.timedeltas.timedelta_from_spec\r\n                ValueError: invalid abbreviation: P\r\n\r\n[ 79.25%] ··· Running ...elta.TimedeltaConstructor.time_from_missing     18.9μs\r\n[ 79.40%] ··· Running ...TimedeltaConstructor.time_from_np_timedelta     27.3μs\r\n[ 79.55%] ··· Running ...delta.TimedeltaConstructor.time_from_string     41.3μs\r\n[ 79.70%] ··· Running timedelta.TimedeltaConstructor.time_from_unit      31.5μs\r\n[ 79.85%] ··· Running timedelta.TimedeltaOps.time_add_td_ts              21.0ms\r\n[ 80.00%] ··· Running ...lta.TimedeltaProperties.time_timedelta_days     10.7μs\r\n[ 80.15%] ··· Running ...deltaProperties.time_timedelta_microseconds     10.6μs\r\n[ 80.30%] ··· Running ...edeltaProperties.time_timedelta_nanoseconds     10.6μs\r\n[ 80.45%] ··· Running ....TimedeltaProperties.time_timedelta_seconds     10.9μs\r\n[ 80.60%] ··· Running timedelta.ToTimedelta.time_convert_coerce           399ms\r\n[ 80.75%] ··· Running timedelta.ToTimedelta.time_convert_ignore           397ms\r\n[ 80.90%] ··· Running timedelta.ToTimedelta.time_convert_int              497μs\r\n[ 81.05%] ··· Running timedelta.ToTimedelta.time_convert_string           156ms\r\n[ 81.20%] ··· Running ...lta.ToTimedelta.time_convert_string_seconds      143ms\r\n[ 81.35%] ··· Running timeseries.AsOf.time_asof                          14.3ms\r\n[ 81.50%] ··· Running timeseries.AsOf.time_asof_nan                      14.1ms\r\n[ 81.65%] ··· Running timeseries.AsOf.time_asof_nan_single               6.69ms\r\n[ 81.80%] ··· Running timeseries.AsOf.time_asof_single                    247μs\r\n[ 81.95%] ··· Running timeseries.AsOf.time_asof_single_early              224μs\r\n[ 82.11%] ··· Running timeseries.AsOfDataFrame.time_asof                  106ms\r\n[ 82.26%] ··· Running timeseries.AsOfDataFrame.time_asof_nan              123ms\r\n[ 82.41%] ··· Running timeseries.AsOfDataFrame.time_asof_nan_single      34.4ms\r\n[ 82.56%] ··· Running timeseries.AsOfDataFrame.time_asof_single          32.7ms\r\n[ 82.71%] ··· Running ...series.AsOfDataFrame.time_asof_single_early      564μs\r\n[ 82.86%] ··· Running timeseries.DatetimeAccessor.time_dt_accessor        143μs\r\n[ 83.01%] ··· Running ...DatetimeAccessor.time_dt_accessor_normalize     15.4ms\r\n[ 83.16%] ··· Running timeseries.DatetimeIndex.time_add_timedelta        5.03ms\r\n[ 83.31%] ··· Running timeseries.DatetimeIndex.time_dti_factorize        28.2ms\r\n[ 83.46%] ··· Running timeseries.DatetimeIndex.time_dti_time             18.6ms\r\n[ 83.61%] ··· Running timeseries.DatetimeIndex.time_dti_tz_factorize     27.4ms\r\n[ 83.76%] ··· Running timeseries.DatetimeIndex.time_infer_dst            4.82ms\r\n[ 83.76%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py:94: FutureWarning: the infer_dst=True keyword is deprecated, use ambiguous='infer' instead\r\n                self.index.tz_localize('US/Eastern', infer_dst=True)\r\n\r\n[ 83.91%] ··· Running ...ries.DatetimeIndex.time_infer_freq_business     19.5ms\r\n[ 84.06%] ··· Running timeseries.DatetimeIndex.time_infer_freq_daily     19.8ms\r\n[ 84.21%] ··· Running timeseries.DatetimeIndex.time_infer_freq_none      39.9ms\r\n[ 84.36%] ··· Running timeseries.DatetimeIndex.time_normalize            5.85ms\r\n[ 84.51%] ··· Running timeseries.DatetimeIndex.time_reset_index          1.27ms\r\n[ 84.66%] ··· Running timeseries.DatetimeIndex.time_reset_index_tz       1.57ms\r\n[ 84.81%] ··· Running ...atetimeIndex.time_timeseries_is_month_start     1.13ms\r\n[ 84.96%] ··· Running ...es.DatetimeIndex.time_timestamp_tzinfo_cons      120μs\r\n[ 85.11%] ··· Running timeseries.DatetimeIndex.time_to_date               498ms\r\n[ 85.26%] ··· Running timeseries.DatetimeIndex.time_to_pydatetime        62.8ms\r\n[ 85.41%] ··· Running timeseries.DatetimeIndex.time_unique                458μs\r\n[ 85.56%] ··· Running timeseries.Iteration.time_iter_datetimeindex        1.27s\r\n[ 85.71%] ··· Running ...s.Iteration.time_iter_datetimeindex_preexit     24.8ms\r\n[ 85.86%] ··· Running timeseries.Iteration.time_iter_periodindex          6.45s\r\n[ 86.02%] ··· Running ...ies.Iteration.time_iter_periodindex_preexit     66.2ms\r\n[ 86.17%] ··· Running timeseries.ResampleDataFrame.time_max_numpy        7.08ms\r\n[ 86.17%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py:166: FutureWarning: how in .resample() is deprecated\r\n                the new syntax is .resample(...)..apply(<func>)\r\n                  self.df.resample('1s', how=np.max)\r\n\r\n[ 86.32%] ··· Running timeseries.ResampleDataFrame.time_max_string       7.05ms\r\n[ 86.32%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py:169: FutureWarning: how in .resample() is deprecated\r\n                the new syntax is .resample(...).max()\r\n                  self.df.resample('1s', how='max')\r\n\r\n[ 86.47%] ··· Running timeseries.ResampleDataFrame.time_mean_numpy       6.62ms\r\n[ 86.47%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py:172: FutureWarning: how in .resample() is deprecated\r\n                the new syntax is .resample(...)..apply(<func>)\r\n                  self.df.resample('1s', how=np.mean)\r\n\r\n[ 86.62%] ··· Running timeseries.ResampleDataFrame.time_mean_string      6.60ms\r\n[ 86.62%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py:175: FutureWarning: how in .resample() is deprecated\r\n                the new syntax is .resample(...).mean()\r\n                  self.df.resample('1s', how='mean')\r\n\r\n[ 86.77%] ··· Running timeseries.ResampleDataFrame.time_min_numpy        7.02ms\r\n[ 86.77%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py:178: FutureWarning: how in .resample() is deprecated\r\n                the new syntax is .resample(...)..apply(<func>)\r\n                  self.df.resample('1s', how=np.min)\r\n\r\n[ 86.92%] ··· Running timeseries.ResampleDataFrame.time_min_string       7.10ms\r\n[ 86.92%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py:181: FutureWarning: how in .resample() is deprecated\r\n                the new syntax is .resample(...).min()\r\n                  self.df.resample('1s', how='min')\r\n\r\n[ 87.07%] ··· Running timeseries.ResampleSeries.time_1min_5min_mean      2.96ms\r\n[ 87.07%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py:210: FutureWarning: how in .resample() is deprecated\r\n                the new syntax is .resample(...).mean()\r\n                  self.ts2[:10000].resample('5min', how='mean')\r\n\r\n[ 87.22%] ··· Running timeseries.ResampleSeries.time_1min_5min_ohlc      3.25ms\r\n[ 87.22%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py:213: FutureWarning: how in .resample() is deprecated\r\n                the new syntax is .resample(...).ohlc()\r\n                  self.ts2[:10000].resample('5min', how='ohlc')\r\n\r\n[ 87.37%] ··· Running ....ResampleSeries.time_period_downsample_mean     29.3ms\r\n[ 87.37%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py:200: FutureWarning: how in .resample() is deprecated\r\n                the new syntax is .resample(...).mean()\r\n                  self.ts1.resample('D', how='mean')\r\n\r\n[ 87.52%] ··· Running ...ies.ResampleSeries.time_resample_datetime64     6.72ms\r\n[ 87.52%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py:207: FutureWarning: how in .resample() is deprecated\r\n                the new syntax is .resample(...).last()\r\n                  self.dt_ts.resample('1S', how='last')\r\n\r\n[ 87.67%] ··· Running ...sampleSeries.time_timestamp_downsample_mean     17.0ms\r\n[ 87.67%] ····· /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py:203: FutureWarning: how in .resample() is deprecated\r\n                the new syntax is .resample(...).mean()\r\n                  self.ts2.resample('D', how='mean')\r\n\r\n[ 87.82%] ··· Running timeseries.TimeDatetimeConverter.time_convert      12.1ms\r\n[ 87.97%] ··· Running timeseries.TimeSeries.time_add_irregular            443ms\r\n[ 88.12%] ··· Running timeseries.TimeSeries.time_large_lookup_value      6.15ms\r\n[ 88.27%] ··· Running ...series.TimeSeries.time_sort_index_monotonic     1.22ms\r\n[ 88.42%] ··· Running ...es.TimeSeries.time_sort_index_non_monotonic     18.5ms\r\n[ 88.57%] ··· Running ...s.TimeSeries.time_timeseries_slice_minutely      366μs\r\n[ 88.72%] ··· Running ....time_cache_false_with_dup_seconds_and_unit     failed\r\n[ 88.72%] ····· Traceback (most recent call last):\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 818, in <module>\r\n                    commands[mode](args)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 795, in main_run\r\n                    result = benchmark.do_run()\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 349, in do_run\r\n                    return self.run(*self._current_params)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 424, in run\r\n                    samples, number = self.benchmark_timing(timer, repeat, warmup_time, number=number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 471, in benchmark_timing\r\n                    timing = timer.timeit(number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 202, in timeit\r\n                    timing = self.inner(it, self.timer)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 100, in inner\r\n                    _func()\r\n                  File \"/home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py\", line 388, in time_cache_false_with_dup_seconds_and_unit\r\n                    to_datetime(self.dup_numeric_seconds, unit='s', cache=False)\r\n                TypeError: to_datetime() got an unexpected keyword argument 'cache'\r\n\r\n[ 88.87%] ··· Running ...time.time_cache_false_with_dup_string_dates     failed\r\n[ 88.87%] ····· Traceback (most recent call last):\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 818, in <module>\r\n                    commands[mode](args)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 795, in main_run\r\n                    result = benchmark.do_run()\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 349, in do_run\r\n                    return self.run(*self._current_params)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 424, in run\r\n                    samples, number = self.benchmark_timing(timer, repeat, warmup_time, number=number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 471, in benchmark_timing\r\n                    timing = timer.timeit(number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 202, in timeit\r\n                    timing = self.inner(it, self.timer)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 100, in inner\r\n                    _func()\r\n                  File \"/home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py\", line 394, in time_cache_false_with_dup_string_dates\r\n                    to_datetime(self.dup_string_dates, cache=False)\r\n                TypeError: to_datetime() got an unexpected keyword argument 'cache'\r\n\r\n[ 89.02%] ··· Running ...ache_false_with_dup_string_dates_and_format     failed\r\n[ 89.02%] ····· Traceback (most recent call last):\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 818, in <module>\r\n                    commands[mode](args)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 795, in main_run\r\n                    result = benchmark.do_run()\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 349, in do_run\r\n                    return self.run(*self._current_params)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 424, in run\r\n                    samples, number = self.benchmark_timing(timer, repeat, warmup_time, number=number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 471, in benchmark_timing\r\n                    timing = timer.timeit(number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 202, in timeit\r\n                    timing = self.inner(it, self.timer)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 100, in inner\r\n                    _func()\r\n                  File \"/home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py\", line 400, in time_cache_false_with_dup_string_dates_and_format\r\n                    to_datetime(self.dup_string_dates, format='%Y-%m-%d', cache=False)\r\n                TypeError: to_datetime() got an unexpected keyword argument 'cache'\r\n\r\n[ 89.17%] ··· Running ..._cache_false_with_dup_string_tzoffset_dates     failed\r\n[ 89.17%] ····· Traceback (most recent call last):\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 818, in <module>\r\n                    commands[mode](args)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 795, in main_run\r\n                    result = benchmark.do_run()\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 349, in do_run\r\n                    return self.run(*self._current_params)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 424, in run\r\n                    samples, number = self.benchmark_timing(timer, repeat, warmup_time, number=number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 471, in benchmark_timing\r\n                    timing = timer.timeit(number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 202, in timeit\r\n                    timing = self.inner(it, self.timer)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 100, in inner\r\n                    _func()\r\n                  File \"/home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py\", line 406, in time_cache_false_with_dup_string_tzoffset_dates\r\n                    to_datetime(self.dup_string_with_tz, cache=False)\r\n                TypeError: to_datetime() got an unexpected keyword argument 'cache'\r\n\r\n[ 89.32%] ··· Running ...me_cache_false_with_unique_seconds_and_unit     failed\r\n[ 89.32%] ····· Traceback (most recent call last):\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 818, in <module>\r\n                    commands[mode](args)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 795, in main_run\r\n                    result = benchmark.do_run()\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 349, in do_run\r\n                    return self.run(*self._current_params)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 424, in run\r\n                    samples, number = self.benchmark_timing(timer, repeat, warmup_time, number=number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 471, in benchmark_timing\r\n                    timing = timer.timeit(number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 202, in timeit\r\n                    timing = self.inner(it, self.timer)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 100, in inner\r\n                    _func()\r\n                  File \"/home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py\", line 382, in time_cache_false_with_unique_seconds_and_unit\r\n                    to_datetime(self.unique_numeric_seconds, unit='s', cache=False)\r\n                TypeError: to_datetime() got an unexpected keyword argument 'cache'\r\n\r\n[ 89.47%] ··· Running ...e.time_cache_true_with_dup_seconds_and_unit     failed\r\n[ 89.47%] ····· Traceback (most recent call last):\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 818, in <module>\r\n                    commands[mode](args)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 795, in main_run\r\n                    result = benchmark.do_run()\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 349, in do_run\r\n                    return self.run(*self._current_params)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 424, in run\r\n                    samples, number = self.benchmark_timing(timer, repeat, warmup_time, number=number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 471, in benchmark_timing\r\n                    timing = timer.timeit(number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 202, in timeit\r\n                    timing = self.inner(it, self.timer)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 100, in inner\r\n                    _func()\r\n                  File \"/home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py\", line 385, in time_cache_true_with_dup_seconds_and_unit\r\n                    to_datetime(self.dup_numeric_seconds, unit='s', cache=True)\r\n                TypeError: to_datetime() got an unexpected keyword argument 'cache'\r\n\r\n[ 89.62%] ··· Running ...etime.time_cache_true_with_dup_string_dates     failed\r\n[ 89.62%] ····· Traceback (most recent call last):\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 818, in <module>\r\n                    commands[mode](args)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 795, in main_run\r\n                    result = benchmark.do_run()\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 349, in do_run\r\n                    return self.run(*self._current_params)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 424, in run\r\n                    samples, number = self.benchmark_timing(timer, repeat, warmup_time, number=number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 471, in benchmark_timing\r\n                    timing = timer.timeit(number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 202, in timeit\r\n                    timing = self.inner(it, self.timer)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 100, in inner\r\n                    _func()\r\n                  File \"/home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py\", line 391, in time_cache_true_with_dup_string_dates\r\n                    to_datetime(self.dup_string_dates, cache=True)\r\n                TypeError: to_datetime() got an unexpected keyword argument 'cache'\r\n\r\n[ 89.77%] ··· Running ...cache_true_with_dup_string_dates_and_format     failed\r\n[ 89.77%] ····· Traceback (most recent call last):\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 818, in <module>\r\n                    commands[mode](args)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 795, in main_run\r\n                    result = benchmark.do_run()\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 349, in do_run\r\n                    return self.run(*self._current_params)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 424, in run\r\n                    samples, number = self.benchmark_timing(timer, repeat, warmup_time, number=number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 471, in benchmark_timing\r\n                    timing = timer.timeit(number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 202, in timeit\r\n                    timing = self.inner(it, self.timer)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 100, in inner\r\n                    _func()\r\n                  File \"/home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py\", line 397, in time_cache_true_with_dup_string_dates_and_format\r\n                    to_datetime(self.dup_string_dates, format='%Y-%m-%d', cache=True)\r\n                TypeError: to_datetime() got an unexpected keyword argument 'cache'\r\n\r\n[ 89.92%] ··· Running ...e_cache_true_with_dup_string_tzoffset_dates     failed\r\n[ 89.92%] ····· Traceback (most recent call last):\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 818, in <module>\r\n                    commands[mode](args)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 795, in main_run\r\n                    result = benchmark.do_run()\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 349, in do_run\r\n                    return self.run(*self._current_params)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 424, in run\r\n                    samples, number = self.benchmark_timing(timer, repeat, warmup_time, number=number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 471, in benchmark_timing\r\n                    timing = timer.timeit(number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 202, in timeit\r\n                    timing = self.inner(it, self.timer)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 100, in inner\r\n                    _func()\r\n                  File \"/home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py\", line 403, in time_cache_true_with_dup_string_tzoffset_dates\r\n                    to_datetime(self.dup_string_with_tz, cache=True)\r\n                TypeError: to_datetime() got an unexpected keyword argument 'cache'\r\n\r\n[ 90.08%] ··· Running ...ime_cache_true_with_unique_seconds_and_unit     failed\r\n[ 90.08%] ····· Traceback (most recent call last):\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 818, in <module>\r\n                    commands[mode](args)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 795, in main_run\r\n                    result = benchmark.do_run()\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 349, in do_run\r\n                    return self.run(*self._current_params)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 424, in run\r\n                    samples, number = self.benchmark_timing(timer, repeat, warmup_time, number=number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/site-packages/asv/benchmark.py\", line 471, in benchmark_timing\r\n                    timing = timer.timeit(number)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 202, in timeit\r\n                    timing = self.inner(it, self.timer)\r\n                  File \"/home/matt/anaconda/envs/pandas_dev/lib/python2.7/timeit.py\", line 100, in inner\r\n                    _func()\r\n                  File \"/home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timeseries.py\", line 379, in time_cache_true_with_unique_seconds_and_unit\r\n                    to_datetime(self.unique_numeric_seconds, unit='s', cache=True)\r\n                TypeError: to_datetime() got an unexpected keyword argument 'cache'\r\n\r\n[ 90.23%] ··· Running timeseries.ToDatetime.time_format_YYYYMMDD         14.6ms\r\n[ 90.38%] ··· Running timeseries.ToDatetime.time_format_exact             2.03s\r\n[ 90.53%] ··· Running timeseries.ToDatetime.time_format_no_exact          1.91s\r\n[ 90.68%] ··· Running timeseries.ToDatetime.time_iso8601                 9.82ms\r\n[ 90.83%] ··· Running timeseries.ToDatetime.time_iso8601_format          9.98ms\r\n[ 90.98%] ··· Running ...eries.ToDatetime.time_iso8601_format_no_sep     9.52ms\r\n[ 91.13%] ··· Running timeseries.ToDatetime.time_iso8601_nosep           9.66ms\r\n[ 91.28%] ··· Running ...ries.ToDatetime.time_iso8601_tz_spaceformat      620ms\r\n[ 91.43%] ··· Running ....TimestampAcrossDst.time_replace_across_dst     37.9μs\r\n[ 91.58%] ··· Running ...p.TimestampConstruction.time_parse_dateutil      432μs\r\n[ 91.73%] ··· Running ...estampConstruction.time_parse_iso8601_no_tz     14.6μs\r\n[ 91.88%] ··· Running ...TimestampConstruction.time_parse_iso8601_tz     49.7μs\r\n[ 92.03%] ··· Running timestamp.TimestampConstruction.time_parse_now     22.4μs\r\n[ 92.18%] ··· Running ...tamp.TimestampConstruction.time_parse_today     22.6μs\r\n[ 92.33%] ··· Running timestamp.TimestampOps.time_replace_None               ok\r\n[ 92.33%] ···· \r\n               ============ ========\r\n                    tz              \r\n               ------------ --------\r\n                   None      18.2μs \r\n                US/Eastern   39.0μs \r\n               ============ ========\r\n\r\n[ 92.48%] ··· Running timestamp.TimestampOps.time_replace_tz                 ok\r\n[ 92.48%] ···· \r\n               ============ ========\r\n                    tz              \r\n               ------------ --------\r\n                   None      46.8μs \r\n                US/Eastern   70.6μs \r\n               ============ ========\r\n\r\n[ 92.63%] ··· Running timestamp.TimestampOps.time_to_pydatetime              ok\r\n[ 92.63%] ···· \r\n               ============ ========\r\n                    tz              \r\n               ------------ --------\r\n                   None      12.4μs \r\n                US/Eastern   13.9μs \r\n               ============ ========\r\n\r\n[ 92.78%] ··· Running timestamp.TimestampProperties.time_dayofweek           ok\r\n[ 92.78%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   10.0μs \r\n                                     None                         B     11.4μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   10.1μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     11.2μs \r\n               ================================================ ====== ========\r\n\r\n[ 92.93%] ··· Running timestamp.TimestampProperties.time_dayofyear           ok\r\n[ 92.93%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   40.3μs \r\n                                     None                         B     44.4μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   39.9μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     45.5μs \r\n               ================================================ ====== ========\r\n\r\n[ 93.08%] ··· Running ...tamp.TimestampProperties.time_days_in_month         ok\r\n[ 93.08%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   41.6μs \r\n                                     None                         B     45.3μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   41.1μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     45.6μs \r\n               ================================================ ====== ========\r\n\r\n[ 93.23%] ··· Running timestamp.TimestampProperties.time_freqstr             ok\r\n[ 93.23%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   11.0μs \r\n                                     None                         B     13.3μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   11.2μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     13.2μs \r\n               ================================================ ====== ========\r\n\r\n[ 93.38%] ··· Running ...stamp.TimestampProperties.time_is_leap_year         ok\r\n[ 93.38%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   45.2μs \r\n                                     None                         B     51.2μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   43.2μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     50.5μs \r\n               ================================================ ====== ========\r\n\r\n[ 93.53%] ··· Running ...stamp.TimestampProperties.time_is_month_end         ok\r\n[ 93.53%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   42.2μs \r\n                                     None                         B     49.9μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   42.2μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     51.4μs \r\n               ================================================ ====== ========\r\n\r\n[ 93.68%] ··· Running ...amp.TimestampProperties.time_is_month_start         ok\r\n[ 93.68%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   41.9μs \r\n                                     None                         B     49.4μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   42.1μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     49.6μs \r\n               ================================================ ====== ========\r\n\r\n[ 93.83%] ··· Running ...amp.TimestampProperties.time_is_quarter_end         ok\r\n[ 93.83%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   43.3μs \r\n                                     None                         B     50.9μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   42.0μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     50.3μs \r\n               ================================================ ====== ========\r\n\r\n[ 93.98%] ··· Running ...p.TimestampProperties.time_is_quarter_start         ok\r\n[ 93.98%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   41.8μs \r\n                                     None                         B     49.6μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   42.3μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     50.0μs \r\n               ================================================ ====== ========\r\n\r\n[ 94.14%] ··· Running timestamp.TimestampProperties.time_is_year_end         ok\r\n[ 94.14%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   42.3μs \r\n                                     None                         B     50.9μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   43.0μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     49.9μs \r\n               ================================================ ====== ========\r\n\r\n[ 94.29%] ··· Running ...tamp.TimestampProperties.time_is_year_start         ok\r\n[ 94.29%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   42.8μs \r\n                                     None                         B     50.9μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   42.4μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     50.7μs \r\n               ================================================ ====== ========\r\n\r\n[ 94.44%] ··· Running timestamp.TimestampProperties.time_microsecond         ok\r\n[ 94.44%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   8.78μs \r\n                                     None                         B     9.44μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   9.03μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     9.95μs \r\n               ================================================ ====== ========\r\n\r\n[ 94.59%] ··· Running timestamp.TimestampProperties.time_offset              ok\r\n[ 94.59%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   14.9μs \r\n                                     None                         B     16.3μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   14.6μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     16.4μs \r\n               ================================================ ====== ========\r\n\r\n[ 94.59%] ····· \r\n                \r\n                For parameters: None, None\r\n                /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timestamp.py:40: FutureWarning: .offset is deprecated. Use .freq instead\r\n                  self.ts.offset\r\n                \r\n                For parameters: None, 'B'\r\n                /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timestamp.py:40: FutureWarning: .offset is deprecated. Use .freq instead\r\n                  self.ts.offset\r\n                \r\n                For parameters: <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>, None\r\n                /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timestamp.py:40: FutureWarning: .offset is deprecated. Use .freq instead\r\n                  self.ts.offset\r\n                \r\n                For parameters: <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>, 'B'\r\n                /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/timestamp.py:40: FutureWarning: .offset is deprecated. Use .freq instead\r\n                  self.ts.offset\r\n\r\n[ 94.74%] ··· Running timestamp.TimestampProperties.time_quarter             ok\r\n[ 94.74%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   40.3μs \r\n                                     None                         B     45.4μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   40.0μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     45.0μs \r\n               ================================================ ====== ========\r\n\r\n[ 94.89%] ··· Running timestamp.TimestampProperties.time_tz                  ok\r\n[ 94.89%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   9.69μs \r\n                                     None                         B     11.4μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   9.98μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     10.8μs \r\n               ================================================ ====== ========\r\n\r\n[ 95.04%] ··· Running timestamp.TimestampProperties.time_week                ok\r\n[ 95.04%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   40.2μs \r\n                                     None                         B     43.9μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   40.7μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     46.3μs \r\n               ================================================ ====== ========\r\n\r\n[ 95.19%] ··· Running ...stamp.TimestampProperties.time_weekday_name         ok\r\n[ 95.19%] ···· \r\n               ================================================ ====== ========\r\n                                      tz                         freq          \r\n               ------------------------------------------------ ------ --------\r\n                                     None                        None   11.9μs \r\n                                     None                         B     13.4μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>   None   11.8μs \r\n                <DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>    B     13.6μs \r\n               ================================================ ====== ========\r\n\r\n[ 95.19%] ··· Setting up /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/groupby.py:299\r\n[ 95.34%] ··· Running groupby.MultiColumn.time_col_select_lambda_sum      254ms\r\n[ 95.49%] ··· Running groupby.MultiColumn.time_col_select_numpy_sum      25.4ms\r\n[ 95.64%] ··· Running groupby.MultiColumn.time_cython_sum                29.2ms\r\n[ 95.79%] ··· Running groupby.MultiColumn.time_lambda_sum                 495ms\r\n[ 95.79%] ··· Setting up /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/multiindex_object.py:129\r\n[ 95.94%] ··· Running ...ject.Values.time_datetime_level_values_copy     25.3ms\r\n[ 96.09%] ··· Running ...ct.Values.time_datetime_level_values_sliced      540μs\r\n[ 96.09%] ··· Setting up /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/groupby.py:144\r\n[ 96.24%] ··· Running groupby.Nth.time_frame_nth                         4.68ms\r\n[ 96.39%] ··· Running groupby.Nth.time_frame_nth_any                     10.6ms\r\n[ 96.54%] ··· Running groupby.Nth.time_series_nth                        7.95ms\r\n[ 96.69%] ··· Running groupby.Nth.time_series_nth_any                    16.1ms\r\n[ 96.69%] ··· Setting up /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/indexing.py:245\r\n[ 96.84%] ··· Running indexing.MethodLookup.time_lookup_iloc             10.7μs\r\n[ 96.99%] ··· Running indexing.MethodLookup.time_lookup_ix               10.6μs\r\n[ 97.14%] ··· Running indexing.MethodLookup.time_lookup_loc              10.6μs\r\n[ 97.14%] ··· Setting up /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/groupby.py:29\r\n[ 97.29%] ··· Running groupby.Apply.time_copy_function_multi_col          2.54s\r\n[ 97.44%] ··· Running groupby.Apply.time_copy_overhead_single_col         967ms\r\n[ 97.59%] ··· Running groupby.Apply.time_scalar_function_multi_col       71.4ms\r\n[ 97.74%] ··· Running groupby.Apply.time_scalar_function_single_col      13.8ms\r\n[ 97.74%] ··· Setting up /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/groupby.py:225\r\n[ 97.89%] ··· Running groupby.CountInt.time_int_count                    6.41ms\r\n[ 98.05%] ··· Running groupby.CountInt.time_int_nunique                  16.4ms\r\n[ 98.05%] ··· Setting up /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/indexing.py:211\r\n[ 98.20%] ··· Running indexing.IntervalIndexing.time_getitem_list         241μs\r\n[ 98.35%] ··· Running indexing.IntervalIndexing.time_getitem_scalar       137μs\r\n[ 98.50%] ··· Running indexing.IntervalIndexing.time_loc_list             207μs\r\n[ 98.65%] ··· Running indexing.IntervalIndexing.time_loc_scalar           209μs\r\n[ 98.65%] ··· Setting up /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/inference.py:104\r\n[ 98.80%] ··· Running inference.MaybeConvertNumeric.time_convert          2.48s\r\n[ 98.80%] ··· Setting up /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/groupby.py:197\r\n[ 98.95%] ··· Running groupby.CountMultiDtype.time_multi_count           9.70ms\r\n[ 98.95%] ··· Setting up /home/matt/Projects/pandas-mroeschke/asv_bench/benchmarks/algorithms.py:93\r\n[ 99.10%] ··· Running algorithms.Hashing.time_frame                      59.8ms\r\n[ 99.25%] ··· Running algorithms.Hashing.time_series_categorical         17.0ms\r\n[ 99.40%] ··· Running algorithms.Hashing.time_series_dates               8.15ms\r\n[ 99.55%] ··· Running algorithms.Hashing.time_series_float               7.51ms\r\n[ 99.70%] ··· Running algorithms.Hashing.time_series_int                 8.35ms\r\n[ 99.85%] ··· Running algorithms.Hashing.time_series_string              33.8ms\r\n[100.00%] ··· Running algorithms.Hashing.time_series_timedeltas          8.01ms\r\n```"
  }
]
