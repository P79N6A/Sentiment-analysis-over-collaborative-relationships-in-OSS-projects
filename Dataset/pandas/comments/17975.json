[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/339213408",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17975#issuecomment-339213408",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17975",
    "id": 339213408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTIxMzQwOA==",
    "user": {
      "login": "liamim",
      "id": 4635721,
      "node_id": "MDQ6VXNlcjQ2MzU3MjE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4635721?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liamim",
      "html_url": "https://github.com/liamim",
      "followers_url": "https://api.github.com/users/liamim/followers",
      "following_url": "https://api.github.com/users/liamim/following{/other_user}",
      "gists_url": "https://api.github.com/users/liamim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liamim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liamim/subscriptions",
      "organizations_url": "https://api.github.com/users/liamim/orgs",
      "repos_url": "https://api.github.com/users/liamim/repos",
      "events_url": "https://api.github.com/users/liamim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liamim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-25T04:48:43Z",
    "updated_at": "2017-10-25T04:48:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interestingly, when adding a test for the patch, I noticed that stuffing that test document into a `StringIO` seems to work? lxml still fails, but the fallback on html5lib/bs4 rewinds properly.\r\n\r\nI'll investigate that further tomorrow."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340184138",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17975#issuecomment-340184138",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17975",
    "id": 340184138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDE4NDEzOA==",
    "user": {
      "login": "xflr6",
      "id": 6342379,
      "node_id": "MDQ6VXNlcjYzNDIzNzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6342379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xflr6",
      "html_url": "https://github.com/xflr6",
      "followers_url": "https://api.github.com/users/xflr6/followers",
      "following_url": "https://api.github.com/users/xflr6/following{/other_user}",
      "gists_url": "https://api.github.com/users/xflr6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xflr6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xflr6/subscriptions",
      "organizations_url": "https://api.github.com/users/xflr6/orgs",
      "repos_url": "https://api.github.com/users/xflr6/repos",
      "events_url": "https://api.github.com/users/xflr6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xflr6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T11:25:47Z",
    "updated_at": "2017-10-28T11:25:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Same issue: Cannot `read_html()` a webpage directly from an `urlopen()` result when `lxml` does not like it:\r\n```python\r\n>>> from urllib.request import urlopen\r\n>>> import pandas as pd\r\n>>> url = 'http://en.wikipedia.org/wiki/Matplotlib'\r\n>>> assert pd.read_html(urlopen(url), 'Advantages', 'bs4')  # works with bs4 alone\r\n>>> pd.read_html(urlopen(url), 'Advantages')\r\nTraceback (most recent call last):\r\n  File \"<pyshell#7>\", line 1, in <module>\r\n    pd.read_html(urlopen(url), 'Advantages')\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\pandas\\io\\html.py\", line 915, in read_html\r\n    keep_default_na=keep_default_na)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\pandas\\io\\html.py\", line 749, in _parse\r\n    raise_with_traceback(retained)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\pandas\\compat\\__init__.py\", line 367, in raise_with_traceback\r\n    raise exc.with_traceback(traceback)\r\nValueError: No text parsed from document: <http.client.HTTPResponse object at 0x0000000005621358>\r\n```\r\nNote that one cannot do `.seek(0)` on the `urlopen` return value (so the fix needs to be more complex).\r\n\r\nI think `lxml` does something slightly different with `StringIO`s. So here is a self-contained test case:\r\n```python\r\n>>> import pandas as pd\r\n>>> from mock import Mock\r\n>>> def mock_urlopen(data, url='http://spam'):\r\n        return Mock(**{'geturl.return_value': url, 'read.side_effect': [data, '', '']})\r\n\r\n>>> good = mock_urlopen('<table><tr><td>spam<br />eggs</td></tr></table>')\r\n>>> bad = mock_urlopen('<table><tr><td>spam<wbr />eggs</td></tr></table>')\r\n>>> assert pd.read_html(good)\r\n>>> assert pd.read_html(bad, flavor='bs4')\r\n>>> bad.reset_mock()\r\n>>> pd.read_html(bad)\r\nTraceback (most recent call last):\r\n...\r\nValueError: No text parsed from document: <Mock id='85948960'>\r\n>>> bad.mock_calls\r\n[call.geturl(),\r\n call.tell(),\r\n call.read(4000),\r\n call.decode('ascii', 'strict'),\r\n call.decode().decode('ascii', 'strict'),\r\n call.decode().decode().find(':'),\r\n call.read()]\r\n```\r\nThe second `.read()`-call is the one where `bs4` takes over and fails parsing the empty string."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340184808",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17975#issuecomment-340184808",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17975",
    "id": 340184808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDE4NDgwOA==",
    "user": {
      "login": "xflr6",
      "id": 6342379,
      "node_id": "MDQ6VXNlcjYzNDIzNzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6342379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xflr6",
      "html_url": "https://github.com/xflr6",
      "followers_url": "https://api.github.com/users/xflr6/followers",
      "following_url": "https://api.github.com/users/xflr6/following{/other_user}",
      "gists_url": "https://api.github.com/users/xflr6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xflr6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xflr6/subscriptions",
      "organizations_url": "https://api.github.com/users/xflr6/orgs",
      "repos_url": "https://api.github.com/users/xflr6/repos",
      "events_url": "https://api.github.com/users/xflr6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xflr6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T11:38:48Z",
    "updated_at": "2017-10-28T11:39:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Minimal amendment: `reset_mock()` does not rewind `read.side_effect` so here is the same with a fresh mock:\r\n```python\r\n>>> bad = mock_urlopen('<table><tr><td>spam<wbr />eggs</td></tr></table>')\r\n>>> pd.read_html(bad)\r\nTraceback (most recent call last):\r\n...\r\nValueError: No text parsed from document: <Mock id='50837656'>\r\n>>> bad.mock_calls\r\n[call.geturl(),\r\n call.tell(),\r\n call.read(4000),\r\n call.read(3952),\r\n call.decode('ascii', 'strict'),\r\n call.decode().decode('ascii', 'strict'),\r\n call.decode().decode().find(':'),\r\n call.read()]\r\n```\r\nAgain, the last `.read()`-call is from `bs4`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340203295",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17975#issuecomment-340203295",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17975",
    "id": 340203295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDIwMzI5NQ==",
    "user": {
      "login": "liamim",
      "id": 4635721,
      "node_id": "MDQ6VXNlcjQ2MzU3MjE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4635721?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liamim",
      "html_url": "https://github.com/liamim",
      "followers_url": "https://api.github.com/users/liamim/followers",
      "following_url": "https://api.github.com/users/liamim/following{/other_user}",
      "gists_url": "https://api.github.com/users/liamim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liamim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liamim/subscriptions",
      "organizations_url": "https://api.github.com/users/liamim/orgs",
      "repos_url": "https://api.github.com/users/liamim/repos",
      "events_url": "https://api.github.com/users/liamim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liamim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T16:33:14Z",
    "updated_at": "2017-10-28T16:33:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "The only way to rewind a urlopen is re-requesting it or buffering it, unfortunately. This becomes a _much_ more complex patch, then :frowning: "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340209208",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17975#issuecomment-340209208",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17975",
    "id": 340209208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDIwOTIwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T18:03:22Z",
    "updated_at": "2017-10-28T18:03:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "So i suppose that the try next parser should raise if we only have a filehandle (and not a path). would take that as a PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340210016",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17975#issuecomment-340210016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17975",
    "id": 340210016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDIxMDAxNg==",
    "user": {
      "login": "liamim",
      "id": 4635721,
      "node_id": "MDQ6VXNlcjQ2MzU3MjE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4635721?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liamim",
      "html_url": "https://github.com/liamim",
      "followers_url": "https://api.github.com/users/liamim/followers",
      "following_url": "https://api.github.com/users/liamim/following{/other_user}",
      "gists_url": "https://api.github.com/users/liamim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liamim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liamim/subscriptions",
      "organizations_url": "https://api.github.com/users/liamim/orgs",
      "repos_url": "https://api.github.com/users/liamim/repos",
      "events_url": "https://api.github.com/users/liamim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liamim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T18:17:03Z",
    "updated_at": "2017-10-28T18:17:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "We can seek for some IO handles, though. I don't see any reason not to add something like\r\n```py\r\nif hasattr(io, 'seek'):\r\n    io.seek(0)\r\n```\r\nand raise a warning if\r\n```py\r\nhasattr(io, 'read') and not hasattr(io, 'seek')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340210766",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17975#issuecomment-340210766",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17975",
    "id": 340210766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDIxMDc2Ng==",
    "user": {
      "login": "xflr6",
      "id": 6342379,
      "node_id": "MDQ6VXNlcjYzNDIzNzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6342379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xflr6",
      "html_url": "https://github.com/xflr6",
      "followers_url": "https://api.github.com/users/xflr6/followers",
      "following_url": "https://api.github.com/users/xflr6/following{/other_user}",
      "gists_url": "https://api.github.com/users/xflr6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xflr6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xflr6/subscriptions",
      "organizations_url": "https://api.github.com/users/xflr6/orgs",
      "repos_url": "https://api.github.com/users/xflr6/repos",
      "events_url": "https://api.github.com/users/xflr6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xflr6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T18:29:53Z",
    "updated_at": "2017-10-28T18:29:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sounds good to me. I think @jreback means that the `raise` (possibly after checking for `seek`) should occur in the branch after the first parser fails, so it makes the current behaviour more official/transparent (give a better error message).  The user can then select/try a different `flavor` (maybe the error message can hint at that) ."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340216083",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17975#issuecomment-340216083",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17975",
    "id": 340216083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDIxNjA4Mw==",
    "user": {
      "login": "liamim",
      "id": 4635721,
      "node_id": "MDQ6VXNlcjQ2MzU3MjE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4635721?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liamim",
      "html_url": "https://github.com/liamim",
      "followers_url": "https://api.github.com/users/liamim/followers",
      "following_url": "https://api.github.com/users/liamim/following{/other_user}",
      "gists_url": "https://api.github.com/users/liamim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liamim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liamim/subscriptions",
      "organizations_url": "https://api.github.com/users/liamim/orgs",
      "repos_url": "https://api.github.com/users/liamim/repos",
      "events_url": "https://api.github.com/users/liamim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liamim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T19:59:51Z",
    "updated_at": "2017-10-28T19:59:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "ah, you're talking about ditching the fallthrough to the next parser entirely?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340221351",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17975#issuecomment-340221351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17975",
    "id": 340221351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDIyMTM1MQ==",
    "user": {
      "login": "xflr6",
      "id": 6342379,
      "node_id": "MDQ6VXNlcjYzNDIzNzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6342379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xflr6",
      "html_url": "https://github.com/xflr6",
      "followers_url": "https://api.github.com/users/xflr6/followers",
      "following_url": "https://api.github.com/users/xflr6/following{/other_user}",
      "gists_url": "https://api.github.com/users/xflr6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xflr6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xflr6/subscriptions",
      "organizations_url": "https://api.github.com/users/xflr6/orgs",
      "repos_url": "https://api.github.com/users/xflr6/repos",
      "events_url": "https://api.github.com/users/xflr6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xflr6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T21:35:00Z",
    "updated_at": "2017-10-28T21:35:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I thought for io handles (possibly only non-seekable ones). Does not occur with file names, right?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340222877",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17975#issuecomment-340222877",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17975",
    "id": 340222877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDIyMjg3Nw==",
    "user": {
      "login": "liamim",
      "id": 4635721,
      "node_id": "MDQ6VXNlcjQ2MzU3MjE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4635721?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liamim",
      "html_url": "https://github.com/liamim",
      "followers_url": "https://api.github.com/users/liamim/followers",
      "following_url": "https://api.github.com/users/liamim/following{/other_user}",
      "gists_url": "https://api.github.com/users/liamim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liamim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liamim/subscriptions",
      "organizations_url": "https://api.github.com/users/liamim/orgs",
      "repos_url": "https://api.github.com/users/liamim/repos",
      "events_url": "https://api.github.com/users/liamim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liamim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T22:04:53Z",
    "updated_at": "2017-10-28T22:39:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yep, since _read() reopens the file for each parser if you're passing in filenames.\r\n\r\nOn Sat, Oct 28, 2017 at 4:35 PM, Sebastian Bank <notifications@github.com>\r\nwrote:\r\n\r\n> I thought for io handles (possibly only non-seekable ones). Does not occur\r\n> with file names, right?\r\n>\r\n> —\r\n> You are receiving this because you authored the thread.\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/pandas-dev/pandas/issues/17975#issuecomment-340221351>,\r\n> or mute the thread\r\n> <https://github.com/notifications/unsubscribe-auth/AEa8SQpni0IETbGKuerchH4awQd7JEV5ks5sw54QgaJpZM4QFbJ2>\r\n> .\r\n>\r\n"
  }
]
