[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/432585788",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23312#issuecomment-432585788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23312",
    "id": 432585788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjU4NTc4OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-24T09:34:16Z",
    "updated_at": "2018-10-24T09:34:16Z",
    "author_association": "MEMBER",
    "body": "And for index it is even worse:\r\n\r\n```\r\nIn [16]: idx = pd.Index([1, 2, 3])\r\n\r\nIn [17]: result = np.add.reduce(idx)\r\n\r\nIn [18]: result    # <-- repr is failing\r\n...\r\nTypeError: len() of unsized object\r\n\r\nIn [19]: type(result)\r\nOut[19]: pandas.core.indexes.numeric.Int64Index\r\n\r\nIn [20]: result.values\r\nOut[20]: array(6)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/432621772",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23312#issuecomment-432621772",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23312",
    "id": 432621772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjYyMTc3Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-24T11:40:44Z",
    "updated_at": "2018-10-24T11:40:44Z",
    "author_association": "MEMBER",
    "body": "@shoyer I thought to fix this first / separately before the `__array_ufunc__` PR, but, the behaviour here is a little bit undefined. \r\nI suppose that *in principle*, a ufunc.reduce returns an array (or an object of the same array-like) with a reduced dimension. But in pandas, we of couse don't have a concept of 0-dim objects or in general variable dim objects. So I assume returning a 0-dim array is fine here (or just a scalar?), but seems a bit strange to ask this of an ExtensionArray (there a scalar might make more sense if it's something that otherwise needs to be wrapped in a 0-dim object array?)."
  }
]
