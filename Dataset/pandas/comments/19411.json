[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/360847743",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19411#issuecomment-360847743",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19411",
    "id": 360847743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDg0Nzc0Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-26T17:20:33Z",
    "updated_at": "2018-01-26T17:20:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "From the docstring:\r\n\r\n```\r\ncheck_names : bool, default True\r\n    Whether to check the Index names attribute.\r\n```\r\n\r\nSo it checks if `left.index.names == right.index.names`. Same for `.columns`, so everything is correct I think.\r\n\r\nDo you have a usecase for ignoring the actual column labels themselves?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/360858052",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19411#issuecomment-360858052",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19411",
    "id": 360858052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDg1ODA1Mg==",
    "user": {
      "login": "willjbrown88",
      "id": 16388121,
      "node_id": "MDQ6VXNlcjE2Mzg4MTIx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16388121?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willjbrown88",
      "html_url": "https://github.com/willjbrown88",
      "followers_url": "https://api.github.com/users/willjbrown88/followers",
      "following_url": "https://api.github.com/users/willjbrown88/following{/other_user}",
      "gists_url": "https://api.github.com/users/willjbrown88/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willjbrown88/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willjbrown88/subscriptions",
      "organizations_url": "https://api.github.com/users/willjbrown88/orgs",
      "repos_url": "https://api.github.com/users/willjbrown88/repos",
      "events_url": "https://api.github.com/users/willjbrown88/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willjbrown88/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-26T18:00:24Z",
    "updated_at": "2018-01-26T18:04:44Z",
    "author_association": "NONE",
    "body": "Ah ok, I guess I'd assumed that as both:\r\n`AssertionError: DataFrame.index are different`\r\nand\r\n`AssertionError: DataFrame.columns are different`\r\nare possible returns from `assert_frame_equal`, either could differ if `check_names=False` was set.\r\n\r\n`check_names` to me implies both index names and column names are being checked, as they are, but also either can differ. Only index name can actually differ. Perhaps the docstring should clarify that column names are also checked, but cannot differ regardless of this parameter setting.\r\n\r\nI can't speak for it being a common use case but yes - I test if various data processing functions can handle df populated by reading from different format source files. The df get assigned column names using whatever columns names are provided by the file or are assigned by user input. My tests only know that the column order for the parts of the df I'm interested in checking should be the same in every case. So the data values, index values and column order of the df should match, but column names and index names don't have to. I could simply assign a temporary set of column names internally of course."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361760129",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19411#issuecomment-361760129",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19411",
    "id": 361760129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc2MDEyOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T22:44:09Z",
    "updated_at": "2018-01-30T22:44:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, the docstring could be improved. Both `df.index.names` and `df.columns.names` are checked.  That's still different from your original issue though, which was about the values.\r\n\r\n> I could simply assign a temporary set of column names internally of course.\r\n\r\nI'd recommend doing that. I don't think changing `assert_frame_equal` to ignore index / column labels is generally useful enough to warrant a parameter."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361901046",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19411#issuecomment-361901046",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19411",
    "id": 361901046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTkwMTA0Ng==",
    "user": {
      "login": "willjbrown88",
      "id": 16388121,
      "node_id": "MDQ6VXNlcjE2Mzg4MTIx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16388121?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willjbrown88",
      "html_url": "https://github.com/willjbrown88",
      "followers_url": "https://api.github.com/users/willjbrown88/followers",
      "following_url": "https://api.github.com/users/willjbrown88/following{/other_user}",
      "gists_url": "https://api.github.com/users/willjbrown88/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willjbrown88/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willjbrown88/subscriptions",
      "organizations_url": "https://api.github.com/users/willjbrown88/orgs",
      "repos_url": "https://api.github.com/users/willjbrown88/repos",
      "events_url": "https://api.github.com/users/willjbrown88/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willjbrown88/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T11:12:25Z",
    "updated_at": "2018-01-31T11:12:25Z",
    "author_association": "NONE",
    "body": "I've been a little unclear here still I think.\r\n\r\n> I don't think changing `assert_frame_equal` to ignore index / column labels is generally useful enough to warrant a parameter\r\n\r\nThis is exactly what `check_names` is for and is doing, but only for `df.index.names`. `check_names=False` allows for the case of `left.index.names != right.index.names` to pass `assert_frame_equal`.  My issue was that I assumed `check_names=False` would also pass `left.columns.names != right.columns.names`, as I was intending to use it.\r\n\r\nIf the latter isn't a common use, then I agree it's not worth changes. In that case, my vote would be to simply rename `check_names` to something like `check_index_names`, as that is exactly what it does, and all that bool setting applies to."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361913125",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19411#issuecomment-361913125",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19411",
    "id": 361913125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTkxMzEyNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T12:06:30Z",
    "updated_at": "2018-01-31T12:06:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@willjbrown88 \r\n\r\n```python\r\nIn [3]: pd.util.testing.assert_frame_equal(\r\n   ...:     pd.DataFrame(columns=pd.Index(['a', 'b'], name='c1')),\r\n   ...:     pd.DataFrame(columns=pd.Index(['a', 'b'], name='c2'))\r\n   ...: )\r\n---------------------------------------------------------------------------\r\nAssertionError                            Traceback (most recent call last)\r\n<ipython-input-3-653d160e6f54> in <module>()\r\n      1 pd.util.testing.assert_frame_equal(\r\n      2     pd.DataFrame(columns=pd.Index(['a', 'b'], name='c1')),\r\n----> 3     pd.DataFrame(columns=pd.Index(['a', 'b'], name='c2'))\r\n      4 )\r\n\r\n~/sandbox/pandas-ip/pandas/pandas/util/testing.py in assert_frame_equal(left, right, check_dtype, check_index_type, check_column_type, check_frame_type, check_less_precise, check_names, by_blocks, check_exact, check_datetimelike_compat, check_categorical, check_like, obj)\r\n   1285                        check_exact=check_exact,\r\n   1286                        check_categorical=check_categorical,\r\n-> 1287                        obj='{obj}.columns'.format(obj=obj))\r\n   1288\r\n   1289     # compare by blocks\r\n\r\n~/sandbox/pandas-ip/pandas/pandas/util/testing.py in assert_index_equal(left, right, exact, check_names, check_less_precise, check_exact, check_categorical, obj)\r\n    844     # metadata comparison\r\n    845     if check_names:\r\n--> 846         assert_attr_equal('names', left, right, obj=obj)\r\n    847     if isinstance(left, pd.PeriodIndex) or isinstance(right, pd.PeriodIndex):\r\n    848         assert_attr_equal('freq', left, right, obj=obj)\r\n\r\n~/sandbox/pandas-ip/pandas/pandas/util/testing.py in assert_attr_equal(attr, left, right, obj)\r\n    921     else:\r\n    922         msg = 'Attribute \"{attr}\" are different'.format(attr=attr)\r\n--> 923         raise_assert_detail(obj, msg, left_attr, right_attr)\r\n    924\r\n    925\r\n\r\n~/sandbox/pandas-ip/pandas/pandas/util/testing.py in raise_assert_detail(obj, message, left, right, diff)\r\n   1006         msg += \"\\n[diff]: {diff}\".format(diff=diff)\r\n   1007\r\n-> 1008     raise AssertionError(msg)\r\n   1009\r\n   1010\r\n\r\nAssertionError: DataFrame.columns are different\r\n\r\nAttribute \"names\" are different\r\n[left]:  ['c1']\r\n[right]: ['c2']\r\n\r\nIn [4]: pd.util.testing.assert_frame_equal(\r\n   ...:     pd.DataFrame(columns=pd.Index(['a', 'b'], name='c1')),\r\n   ...:     pd.DataFrame(columns=pd.Index(['a', 'b'], name='c2')),\r\n   ...:     check_names=False\r\n   ...: )\r\n```"
  }
]
