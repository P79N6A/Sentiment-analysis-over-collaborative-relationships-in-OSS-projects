[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/200310996",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12699#issuecomment-200310996",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12699",
    "id": 200310996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDMxMDk5Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T11:43:21Z",
    "updated_at": "2016-03-23T11:43:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref #10409 . where on a `merge` we are NOT retaining category types (as its possible).\n\nfor other dtypes we are a bit friendlier in `concat/merge` ops, in that we will upcast to `object` if incompatible types (e.g. concat of a `datetime64[ns]` and a `datetime64[ns, US/Eastern]` for example. \n\nI think that if the concat/merge dtypes match then we should preserve, otherwise cast to `object`. \n\nThe current rationale is that `category` serves 2 masters. 1) its a memory saver for duplicate entries, 2) is an actual factor/categorical type, where the set membership is important.\n\nSo I think would be ok to keep dtypes as appropriate and upcast if needed (only small change is needed in `core/categorical.py/_concat_compat`.\n\ncc @janschulz \n@sinhrks \n@jorisvandenbossche \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/200657942",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12699#issuecomment-200657942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12699",
    "id": 200657942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDY1Nzk0Mg==",
    "user": {
      "login": "chengguangnan",
      "id": 861069,
      "node_id": "MDQ6VXNlcjg2MTA2OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/861069?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chengguangnan",
      "html_url": "https://github.com/chengguangnan",
      "followers_url": "https://api.github.com/users/chengguangnan/followers",
      "following_url": "https://api.github.com/users/chengguangnan/following{/other_user}",
      "gists_url": "https://api.github.com/users/chengguangnan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chengguangnan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chengguangnan/subscriptions",
      "organizations_url": "https://api.github.com/users/chengguangnan/orgs",
      "repos_url": "https://api.github.com/users/chengguangnan/repos",
      "events_url": "https://api.github.com/users/chengguangnan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chengguangnan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-24T04:21:45Z",
    "updated_at": "2016-03-24T04:22:00Z",
    "author_association": "NONE",
    "body": "I'd love see this handled by pandas. Another thing about categorical data is calling `fillna('')` will throw an exception, I have to `cat.add_categories(['']).fillna('')` I feel that it should be handled automatically as well. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/200771544",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12699#issuecomment-200771544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12699",
    "id": 200771544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDc3MTU0NA==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-24T10:11:34Z",
    "updated_at": "2016-03-24T10:31:15Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  I have to cat.add_categories(['']).fillna('') I feel that it should be handled automatically as well.\n\nNo, please no: this is only correct for your use of a categorical, and is wrong for things like objects, integers and so on. It is also wrong when the categorical is ordered (NA is \"outside the order\", but `\"\"` would be included, but where? Is it `\"A\" < \"B\" < \"\"` or `\"\" < \"A\" < \"B\"`). It's also arbitrary because what if I want my fill value to be `\"--\"`? \n\nIndividual categoricals are alike to `int`, `str` or specific objects (or specific dtypes), in the same sense that a categorical has a special range of possible values (like int, which has a min and max int), maybe an order (like implicitly for int and explicitly for your own objects if you implement the right methods). You can't add an `A` to an array of ints without changing the array to object. The same should happen for categoricals: if you have a categorical `A < B < C` and add a `D`, it should either fail or change to an object array.\n\nSee https://github.com/pydata/pandas/issues/8640 for a `Memory saving string type`, which would not have this constraints...\n\n> So I think would be ok to keep dtypes as appropriate and upcast if needed (only small change is needed in core/categorical.py/_concat_compat.\n\nMy vote would go to \"fail\" because \"explicit is better than implicit\": I've seen too many (dict) lookups fail because of int/float conversations when a NA is included in an int column and in this case it even has the memory penalty. On the other hand it would be inconsistent with the rest of pandas which does upcasting... \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/212617100",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12699#issuecomment-212617100",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12699",
    "id": 212617100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjYxNzEwMA==",
    "user": {
      "login": "tdhopper",
      "id": 611122,
      "node_id": "MDQ6VXNlcjYxMTEyMg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/611122?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdhopper",
      "html_url": "https://github.com/tdhopper",
      "followers_url": "https://api.github.com/users/tdhopper/followers",
      "following_url": "https://api.github.com/users/tdhopper/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdhopper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdhopper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdhopper/subscriptions",
      "organizations_url": "https://api.github.com/users/tdhopper/orgs",
      "repos_url": "https://api.github.com/users/tdhopper/repos",
      "events_url": "https://api.github.com/users/tdhopper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdhopper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T21:35:29Z",
    "updated_at": "2016-04-20T21:35:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "For those who need to concatenate now, here's a quick example of how it could be done (in Python 3): https://gist.github.com/tdhopper/91f03250892c12c6e0d35ca6d2ade1ca\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/212644309",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12699#issuecomment-212644309",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12699",
    "id": 212644309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjY0NDMwOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T22:56:36Z",
    "updated_at": "2016-04-20T22:56:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tdhopper nice example. In reality the best way to do this (before I fix this bug here) is to coerce to `object`, then recategorize the result. Its slightly complicated if you want to maintain the same factorization after though, this is where you would do something like [this](http://stackoverflow.com/questions/29709918/pandas-and-category-replacement)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/212898687",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12699#issuecomment-212898687",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12699",
    "id": 212898687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjg5ODY4Nw==",
    "user": {
      "login": "tdhopper",
      "id": 611122,
      "node_id": "MDQ6VXNlcjYxMTEyMg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/611122?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdhopper",
      "html_url": "https://github.com/tdhopper",
      "followers_url": "https://api.github.com/users/tdhopper/followers",
      "following_url": "https://api.github.com/users/tdhopper/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdhopper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdhopper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdhopper/subscriptions",
      "organizations_url": "https://api.github.com/users/tdhopper/orgs",
      "repos_url": "https://api.github.com/users/tdhopper/repos",
      "events_url": "https://api.github.com/users/tdhopper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdhopper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-21T12:36:01Z",
    "updated_at": "2016-04-21T12:36:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Should've explained that my complete dataframe is so big that I can't convert to objects without running out of ram.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/212899747",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12699#issuecomment-212899747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12699",
    "id": 212899747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjg5OTc0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-21T12:38:18Z",
    "updated_at": "2016-04-21T12:38:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Then you can do it iteratively, e.g. chunk it, concat, convert back to categoricals. kind of like an in-memory with an on-disk merged. `dask` can do these kinds of things pretty easily FYI. (doing 2 on-disk merges is quite a bit harder though).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225357505",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12699#issuecomment-225357505",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12699",
    "id": 225357505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTM1NzUwNQ==",
    "user": {
      "login": "benitocm",
      "id": 9557980,
      "node_id": "MDQ6VXNlcjk1NTc5ODA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9557980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benitocm",
      "html_url": "https://github.com/benitocm",
      "followers_url": "https://api.github.com/users/benitocm/followers",
      "following_url": "https://api.github.com/users/benitocm/following{/other_user}",
      "gists_url": "https://api.github.com/users/benitocm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benitocm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benitocm/subscriptions",
      "organizations_url": "https://api.github.com/users/benitocm/orgs",
      "repos_url": "https://api.github.com/users/benitocm/repos",
      "events_url": "https://api.github.com/users/benitocm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benitocm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-11T12:17:58Z",
    "updated_at": "2016-06-11T12:17:58Z",
    "author_association": "NONE",
    "body": "Please Jeff, could you elaborate a bit more about your last comment?\n\nI would need to concat In disk and not loosing categorías\n\nThx\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225357601",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12699#issuecomment-225357601",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12699",
    "id": 225357601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTM1NzYwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-11T12:19:42Z",
    "updated_at": "2016-06-11T12:19:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually this is closed by #13361 \n"
  }
]
