[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/265131387",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14792#issuecomment-265131387",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14792",
    "id": 265131387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTEzMTM4Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T11:51:19Z",
    "updated_at": "2016-12-06T11:51:19Z",
    "author_association": "MEMBER",
    "body": "@rubennj Thanks for the report! (I simplified the example a little bit)\r\n\r\ncc @gfyoung "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/265651942",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14792#issuecomment-265651942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14792",
    "id": 265651942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTY1MTk0Mg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-08T04:45:16Z",
    "updated_at": "2016-12-08T04:45:25Z",
    "author_association": "MEMBER",
    "body": "@rubennj : Really weird bug.  We have tests for `parse_dates` and `usecols` <a href=\"https://github.com/pandas-dev/pandas/blob/2466ecbb717d8cdfd30cc20d5d22e5e095d9a14d/pandas/io/tests/parser/usecols.py#L179-L253\">here</a>.  However, we are evidently dealing with fewer columns than your example does.  Quick patch seems to be passing in `engine='python'`, though why that should make a difference bewilders me."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/269115098",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14792#issuecomment-269115098",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14792",
    "id": 269115098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTExNTA5OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-25T09:04:33Z",
    "updated_at": "2016-12-25T09:11:01Z",
    "author_association": "MEMBER",
    "body": "Finally got some time to look at this, and your statement about it happening at random was the key.  We unfortunately have flaky behavior on the C engine side.  When we determine which columns to not convert because they're being used for `datetime` conversions and `usecols` is also passed in, the indexing in `parse_dates` is used with respect to `usecols`, except that how we do it is unstable.\r\n\r\nFirst, we initialize `self.usecols` to be a set, which you can see <a href=\"https://github.com/pandas-dev/pandas/blob/aba7d255a165bbc221be106839c59a876655c0c2/pandas/parser.pyx#L444\">here</a>.  When we proceed to index into `usecols` for `parse_dates`, we first convert to `list`, as seen <a href=\"https://github.com/pandas-dev/pandas/blob/aba7d255a165bbc221be106839c59a876655c0c2/pandas/io/parsers.py#L1557\">here</a>.  That is the flaky part, for if you run this command in the terminal:\r\n~~~\r\npython -c \"print(list(set(list('abcdefghij'))))\"\r\n~~~\r\nyou see you will get different results.\r\n\r\nThe reason why the Python engine does not see this issue is because it prunes columns early on and iterates over the column names, which is a `list`.  Hence, it is robust against this flaky `set` behavior."
  }
]
