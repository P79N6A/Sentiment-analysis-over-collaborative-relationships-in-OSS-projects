[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413419277",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-413419277",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 413419277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzQxOTI3Nw==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T04:07:12Z",
    "updated_at": "2018-08-16T04:07:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm having some trouble finding a relevant benchmark for `corrwith` (a `grep` on the benchmarks folder returns no hits).  Should one be added to the `Correlation` class in `stats_ops.py`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413423523",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-413423523",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 413423523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzQyMzUyMw==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T04:36:55Z",
    "updated_at": "2018-08-16T04:36:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is one I put together which seems to suggest around a 33-50% speed-up with the new implementation.\r\n\r\n```python\r\nimport numpy as np\r\nfrom pandas import DataFrame, Series\r\n\r\nnp.random.seed(2357)\r\n\r\ndef corrwith_old(df1, df2, axis=0, drop=False):\r\n    axis = df1._get_axis_number(axis)\r\n    this = df1._get_numeric_data()\r\n\r\n    if isinstance(df2, Series):\r\n        return this.apply(df2.corr, axis=axis)\r\n\r\n    df2 = df2._get_numeric_data()\r\n\r\n    left, right = this.align(df2, join='inner', copy=False)\r\n\r\n    # mask missing values\r\n    left = left + right * 0\r\n    right = right + left * 0\r\n\r\n    if axis == 1:\r\n        left = left.T\r\n        right = right.T\r\n\r\n    # demeaned data\r\n    ldem = left - left.mean()\r\n    rdem = right - right.mean()\r\n\r\n    num = (ldem * rdem).sum()\r\n    dom = (left.count() - 1) * left.std() * right.std()\r\n\r\n    correl = num / dom\r\n\r\n    if not drop:\r\n        raxis = 1 if axis == 0 else 0\r\n        result_index = this._get_axis(raxis).union(df2._get_axis(raxis))\r\n        correl = correl.reindex(result_index)\r\n\r\n    return correl\r\n\r\n\r\ndef corrwith_new(df1, df2, axis=0, drop=False, method='pearson'):\r\n    if method not in ['pearson', 'spearman', 'kendall']:\r\n        raise ValueError(\"method must be either 'pearson', \"\r\n                         \"'spearman', or 'kendall', '{method}' \"\r\n                         \"was supplied\".format(method=method))\r\n\r\n    axis = df1._get_axis_number(axis)\r\n    this = df1._get_numeric_data()\r\n\r\n    if isinstance(df2, Series):\r\n        return this.apply(lambda x: df2.corr(x, method=method),\r\n                          axis=axis)\r\n\r\n    df2 = df2._get_numeric_data()\r\n    left, right = this.align(df2, join='inner', copy=False)\r\n\r\n    if axis == 1:\r\n        left = left.T\r\n        right = right.T\r\n\r\n    correl = (left.apply(lambda x:\r\n                         x.corr(right[x.name], method=method)))\r\n\r\n    if drop:\r\n        correl.dropna(inplace=True)\r\n\r\n    return correl\r\n\r\n\r\ndata1 = DataFrame(np.random.normal(size=(10**6, 10)))\r\ndata2 = DataFrame(np.random.normal(size=(10**6, 10)))\r\n\r\n%timeit corrwith_old(data1, data2)\r\n%timeit corrwith_new(data1, data2)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413480356",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-413480356",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 413480356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzQ4MDM1Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T09:17:24Z",
    "updated_at": "2018-08-16T09:17:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "can u add this as an asv\r\n\r\nin particular i suspect you method will slow down when used with a larger number of columns \r\n\r\nso pls show that as well"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413530422",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-413530422",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 413530422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzUzMDQyMg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-08-16T12:35:27Z",
    "updated_at": "2018-12-30T23:45:23Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22375?src=pr&el=h1) Report\n> Merging [#22375](https://codecov.io/gh/pandas-dev/pandas/pull/22375?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/aeff38d3301d4d31650f6624304259d0dfdbd69b?src=pr&el=desc) will **decrease** coverage by `60.42%`.\n> The diff coverage is `0%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/22375/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/22375?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master   #22375       +/-   ##\n===========================================\n- Coverage   92.31%   31.89%   -60.43%     \n===========================================\n  Files         166      166               \n  Lines       52335    52429       +94     \n===========================================\n- Hits        48313    16722    -31591     \n- Misses       4022    35707    +31685\n```\n\n| Flag | Coverage Î” | |\n|---|---|---|\n| #multiple | `30.28% <0%> (-60.45%)` | :arrow_down: |\n| #single | `31.89% <0%> (-11.16%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/22375?src=pr&el=tree) | Coverage Î” | |\n|---|---|---|\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/22375/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `27.82% <0%> (-69.1%)` | :arrow_down: |\n| [pandas/io/formats/latex.py](https://codecov.io/gh/pandas-dev/pandas/pull/22375/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvbGF0ZXgucHk=) | `0% <0%> (-100%)` | :arrow_down: |\n| [pandas/core/categorical.py](https://codecov.io/gh/pandas-dev/pandas/pull/22375/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvY2F0ZWdvcmljYWwucHk=) | `0% <0%> (-100%)` | :arrow_down: |\n| [pandas/io/sas/sas\\_constants.py](https://codecov.io/gh/pandas-dev/pandas/pull/22375/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL3Nhcy9zYXNfY29uc3RhbnRzLnB5) | `0% <0%> (-100%)` | :arrow_down: |\n| [pandas/tseries/plotting.py](https://codecov.io/gh/pandas-dev/pandas/pull/22375/diff?src=pr&el=tree#diff-cGFuZGFzL3RzZXJpZXMvcGxvdHRpbmcucHk=) | `0% <0%> (-100%)` | :arrow_down: |\n| [pandas/tseries/converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/22375/diff?src=pr&el=tree#diff-cGFuZGFzL3RzZXJpZXMvY29udmVydGVyLnB5) | `0% <0%> (-100%)` | :arrow_down: |\n| [pandas/io/formats/html.py](https://codecov.io/gh/pandas-dev/pandas/pull/22375/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvaHRtbC5weQ==) | `0% <0%> (-98.65%)` | :arrow_down: |\n| [pandas/core/groupby/categorical.py](https://codecov.io/gh/pandas-dev/pandas/pull/22375/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ3JvdXBieS9jYXRlZ29yaWNhbC5weQ==) | `0% <0%> (-95.46%)` | :arrow_down: |\n| [pandas/core/reshape/reshape.py](https://codecov.io/gh/pandas-dev/pandas/pull/22375/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS9yZXNoYXBlLnB5) | `8.06% <0%> (-91.51%)` | :arrow_down: |\n| [pandas/io/sas/sas7bdat.py](https://codecov.io/gh/pandas-dev/pandas/pull/22375/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL3Nhcy9zYXM3YmRhdC5weQ==) | `0% <0%> (-91.17%)` | :arrow_down: |\n| ... and [127 more](https://codecov.io/gh/pandas-dev/pandas/pull/22375/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22375?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Î” = absolute <relative> (impact)`, `Ã¸ = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22375?src=pr&el=footer). Last update [aeff38d...870d1a3](https://codecov.io/gh/pandas-dev/pandas/pull/22375?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413531567",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-413531567",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 413531567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzUzMTU2Nw==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T12:40:09Z",
    "updated_at": "2018-08-16T12:40:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've added the new benchmark function `time_corrwith` to `stats_ops.py` within the `Correlation` class.  I'll try to run the benchmark locally (although I botched the setup of `asv` on my main computer and it seems to be broken)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413606271",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-413606271",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 413606271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzYwNjI3MQ==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T16:31:34Z",
    "updated_at": "2018-08-16T19:57:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I think your suspicion may have been accurate regarding the dimension of the inputs.  In any case, for the tests it looks like there's an issue with `scipy` during the travis build.  Am I missing an import somewhere perhaps?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413634916",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-413634916",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 413634916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzYzNDkxNg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T18:07:00Z",
    "updated_at": "2018-08-16T18:07:00Z",
    "author_association": "MEMBER",
    "body": "@dsaxton we test quite a few different configurations, not all of which have SciPy installed. If your tests depend on that package you should use the `skip_if_no_scipy` decorate which you'll see used in other places in that same module"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413692692",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-413692692",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 413692692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzY5MjY5Mg==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T21:37:56Z",
    "updated_at": "2018-08-16T21:37:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback If a certain benchmark is actually part of the PR, what would you say is the most straightforward way to show that there isn't a degradation in performance?  Here the `time_corrwith` function will not work for the current implementation because it uses all three correlation types.  I suppose it could temporarily be modified to look only at Pearson?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413692905",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-413692905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 413692905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzY5MjkwNQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T21:38:56Z",
    "updated_at": "2018-08-16T21:38:56Z",
    "author_association": "MEMBER",
    "body": "You should have for all three. The two new ones will fail since they don't exist on master but that's OK - still sets a baseline going forward and we can still get insights out of the Pearson benchmark"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413695810",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-413695810",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 413695810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzY5NTgxMA==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T21:51:53Z",
    "updated_at": "2018-08-16T21:51:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "![screen shot 2018-08-16 at 4 31 22 pm](https://user-images.githubusercontent.com/2658661/44236661-643f9680-a173-11e8-941e-9ddb8ffd4447.png)\r\n\r\nHere are the results I get running the `stat_ops.Correlation` benchmarks (all `DataFrames` involved are comprised of 1000 x 30 Gaussian arrays).  The Pearson calculation somehow took longer than that of `DataFrame.corr`, even though the latter should actually be doing more work since it computes the full 30 x 30 correlation matrix.  I'll need to run it on the current `corrwith` to see how that performs."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413720150",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-413720150",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 413720150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzcyMDE1MA==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-17T00:08:15Z",
    "updated_at": "2018-08-17T00:08:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I modified the body of the function to mimic how the current calculation is being done in the special case where `method=pearson` (in the event that there was somehow an overhead associated with repeatedly calling `Series.corr`) and I saw essentially the same performance as before (shown below).  My guess then is that `DataFrame.corr` gets its speed from `nancorr` within `pandas._libs.algos`.  Could using functions from `algos` inside `corrwith` as well make sense?\r\n\r\n```python\r\n        if method in ['spearman', 'kendall']:\r\n            correl = (left.apply(lambda x:\r\n                                 x.corr(right[x.name], method=method)))\r\n        else:\r\n            correl = (((right - right.mean()) * (left - left.mean())).mean()\r\n                      / right.std() / left.std())\r\n```\r\n\r\n<img width=\"448\" alt=\"screen shot 2018-08-16 at 6 52 16 pm\" src=\"https://user-images.githubusercontent.com/2658661/44240919-6828e400-a186-11e8-9e75-42799f03273b.png\">\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413821834",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-413821834",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 413821834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzgyMTgzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-17T10:14:38Z",
    "updated_at": "2018-08-17T10:14:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "don't post pictures of the asv's just copy-paste the text pls."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413874479",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-413874479",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 413874479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzg3NDQ3OQ==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-17T13:58:04Z",
    "updated_at": "2018-08-17T13:58:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "`asv` results for the `Correlation` class (`DataFrames` are built from `np.random.randn(1000, 30)`):\r\n\r\n```\r\n> asv continuous -f 1.1 origin/corrwith-dev HEAD -b stat_ops.Correlation\r\nÂ· Creating environments\r\nÂ· Discovering benchmarks\r\nÂ·Â· Uninstalling from conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt.\r\nÂ·Â· Building a511a498 for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt........................................\r\nÂ·Â· Installing into conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt..\r\nÂ· Running 6 total benchmarks (2 commits * 1 environments * 3 benchmarks)\r\n[  0.00%] Â· For pandas commit hash a511a498:\r\n[  0.00%] Â·Â· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt...\r\n[  0.00%] Â·Â· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[  0.00%] Â·Â·Â· Running (stat_ops.Correlation.time_corr--)...\r\n[ 16.67%] Â·Â·Â· stat_ops.Correlation.time_corr                                                                                         ok\r\n[ 16.67%] Â·Â·Â· ========== =============\r\n                method                \r\n              ---------- -------------\r\n               spearman     93.6Â±2ms  \r\n               kendall      219Â±4ms   \r\n               pearson    2.14Â±0.09ms \r\n              ========== =============\r\n\r\n[ 33.33%] Â·Â·Â· stat_ops.Correlation.time_corrwith_cols                                                                                ok\r\n[ 33.33%] Â·Â·Â· ========== ============\r\n                method               \r\n              ---------- ------------\r\n               spearman    51.8Â±1ms  \r\n               kendall     20.6Â±1ms  \r\n               pearson    17.0Â±0.7ms \r\n              ========== ============\r\n\r\n[ 50.00%] Â·Â·Â· stat_ops.Correlation.time_corrwith_rows                                                                                ok\r\n[ 50.00%] Â·Â·Â· ========== ==========\r\n                method             \r\n              ---------- ----------\r\n               spearman   758Â±30ms \r\n               kendall    493Â±7ms  \r\n               pearson    258Â±7ms  \r\n              ========== ==========\r\n\r\n[ 50.00%] Â· For pandas commit hash a511a498:\r\n[ 50.00%] Â·Â· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt...\r\n[ 50.00%] Â·Â· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[ 50.00%] Â·Â·Â· Running (stat_ops.Correlation.time_corr--)...\r\n[ 66.67%] Â·Â·Â· stat_ops.Correlation.time_corr                                                                                         ok\r\n[ 66.67%] Â·Â·Â· ========== =============\r\n                method                \r\n              ---------- -------------\r\n               spearman     101Â±6ms   \r\n               kendall      226Â±9ms   \r\n               pearson    2.16Â±0.03ms \r\n              ========== =============\r\n\r\n[ 83.33%] Â·Â·Â· stat_ops.Correlation.time_corrwith_cols                                                                                ok\r\n[ 83.33%] Â·Â·Â· ========== ============\r\n                method               \r\n              ---------- ------------\r\n               spearman    52.1Â±4ms  \r\n               kendall     21.1Â±2ms  \r\n               pearson    16.5Â±0.6ms \r\n              ========== ============\r\n\r\n[100.00%] Â·Â·Â· stat_ops.Correlation.time_corrwith_rows                                                                                ok\r\n[100.00%] Â·Â·Â· ========== ==========\r\n                method             \r\n              ---------- ----------\r\n               spearman   752Â±20ms \r\n               kendall    490Â±4ms  \r\n               pearson    266Â±3ms  \r\n              ========== ==========\r\n\r\n\r\nBENCHMARKS NOT SIGNIFICANTLY CHANGED.\r\n> \r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415403812",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-415403812",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 415403812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQwMzgxMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T12:54:50Z",
    "updated_at": "2018-08-23T12:54:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Duplicate column names doesn't necessarily mean duplicate values.\n\nWe handle this correctly on master, so you should be able to add a test on\nmaster that passes, and ensure it still passes on your branch.\n\nOn Thu, Aug 23, 2018 at 7:49 AM Daniel Saxton <notifications@github.com>\nwrote:\n\n> *@dsaxton* commented on this pull request.\n> ------------------------------\n>\n> In pandas/core/frame.py\n> <https://github.com/pandas-dev/pandas/pull/22375#discussion_r212295410>:\n>\n> >          if axis == 1:\n>              left = left.T\n>              right = right.T\n>\n> -        # demeaned data\n> -        ldem = left - left.mean()\n> -        rdem = right - right.mean()\n> -\n> -        num = (ldem * rdem).sum()\n> -        dom = (left.count() - 1) * left.std() * right.std()\n> +        correl = (left.apply(lambda x:\n> +                             x.corr(right[x.name], method=method)))\n>\n> I'll test that out. What would you say the expected behavior should be in\n> this case? Would it make sense to first drop duplicate columns from self\n> and other?\n>\n> â€”\n> You are receiving this because your review was requested.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/22375#discussion_r212295410>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIoYTVuSsxAk89rEjHQ6FBOjIfF1aks5uTqTAgaJpZM4V_AKR>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415605955",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-415605955",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 415605955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTYwNTk1NQ==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T23:35:25Z",
    "updated_at": "2018-08-23T23:37:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger I just pushed some changes that include the above (`zip` / `map` instead of `apply`, more clarity in the `whatsnew`), and also added a relatively simple test to check if the method can handle duplicate columns (below).  I may have mauled the `git` history a bit with all the merging, so a `rebase` might be needed.\r\n\r\nRegarding the test, I am creating a `DataFrame` with three columns equal to the integers `0, 1, ... , 9`, then creating another `DataFrame` which adds an additional column of the same form with a duplicate column name.  The result of `corrwith` should be a `Series` of four ones (and should not generate an error).  Please let me know if there's a more straightforward way to simply check that the method doesn't err out.\r\n\r\n```python\r\n    def test_corrwith_dup_cols(self):\r\n        # GH 21925\r\n        df1 = pd.DataFrame(np.vstack([np.arange(10)] * 3).T)\r\n        df2 = df1.copy()\r\n        df2 = pd.concat((df2, df2[0]), axis=1)\r\n\r\n        result = df1.corrwith(df2).values\r\n        expected = np.ones(4)\r\n        tm.assert_almost_equal(result, expected)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418354122",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-418354122",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 418354122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODM1NDEyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T12:48:54Z",
    "updated_at": "2018-09-04T12:48:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you rebase"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418786594",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-418786594",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 418786594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODc4NjU5NA==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T16:03:40Z",
    "updated_at": "2018-12-28T02:42:14Z",
    "author_association": "NONE",
    "body": "Hello @dsaxton! Thanks for updating the PR.\n\n\n\n\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on December 28, 2018 at 02:42 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/422416992",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-422416992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 422416992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjQxNjk5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T14:31:07Z",
    "updated_at": "2018-09-18T14:31:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "see #22684, a nice alternative"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/422419906",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-422419906",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 422419906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjQxOTkwNg==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T14:38:12Z",
    "updated_at": "2018-09-18T14:38:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback  Should this PR still be implemented, or does #22684 make it obsolete?  (Since #22684 seems to be changing the implementation of `corr`, does it make sense to extend it to `corrwith`?)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/422998663",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-422998663",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 422998663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjk5ODY2Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-20T00:17:02Z",
    "updated_at": "2018-09-20T00:17:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls look at the contributing docs on running the performance suite\r\n\r\nthe new impl does not scale with the number of columns - pls show this"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423755018",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-423755018",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 423755018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzc1NTAxOA==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-22T16:14:23Z",
    "updated_at": "2018-09-22T16:14:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you're correct that the proposed implementation is not scaling.  Could it be due to `zip` and `map` not being as efficient as pure `numpy`?\r\n\r\n```\r\nDaniels-MacBook-Pro:asv_bench dsaxton$ asv continuous -f 1.1 upstream/master corrwith-dev -b stat_ops.Correlation\r\nÂ· Creating environments\r\nÂ· Discovering benchmarks\r\nÂ·Â· Uninstalling from conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt.\r\nÂ·Â· Installing into conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt..\r\nÂ· Running 8 total benchmarks (2 commits * 1 environments * 4 benchmarks)\r\n[  0.00%] Â· For pandas commit hash e19b3f62:\r\n[  0.00%] Â·Â· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt...\r\n[  0.00%] Â·Â· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[  0.00%] Â·Â·Â· Running (stat_ops.Correlation.time_corr--)....\r\n[ 12.50%] Â·Â·Â· stat_ops.Correlation.time_corr                                                                                                                         ok\r\n[ 12.50%] Â·Â·Â· ========== ============\r\n                method               \r\n              ---------- ------------\r\n               spearman    93.5Â±4ms  \r\n               kendall     206Â±20ms  \r\n               pearson    1.95Â±0.2ms \r\n              ========== ============\r\n\r\n[ 25.00%] Â·Â·Â· stat_ops.Correlation.time_corrwith                                                                                                                     ok\r\n[ 25.00%] Â·Â·Â· ========== ==========\r\n                method             \r\n              ---------- ----------\r\n               spearman   39.6Â±5ms \r\n               kendall    35.0Â±2ms \r\n               pearson    35.9Â±3ms \r\n              ========== ==========\r\n\r\n[ 37.50%] Â·Â·Â· stat_ops.Correlation.time_corrwith_cols                                                                                                                ok\r\n[ 37.50%] Â·Â·Â· ========== ==========\r\n                method             \r\n              ---------- ----------\r\n               spearman   115Â±6ms  \r\n               kendall    19.5Â±1ms \r\n               pearson    36.4Â±2ms \r\n              ========== ==========\r\n\r\n[ 50.00%] Â·Â·Â· stat_ops.Correlation.time_corrwith_rows                                                                                                                ok\r\n[ 50.00%] Â·Â·Â· ========== ==========\r\n                method             \r\n              ---------- ----------\r\n               spearman   731Â±20ms \r\n               kendall    458Â±30ms \r\n               pearson    237Â±7ms  \r\n              ========== ==========\r\n\r\n[ 50.00%] Â· For pandas commit hash 1a12c41d:\r\n[ 50.00%] Â·Â· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt...\r\n[ 50.00%] Â·Â· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[ 50.00%] Â·Â·Â· Running (stat_ops.Correlation.time_corr--)....\r\n[ 62.50%] Â·Â·Â· stat_ops.Correlation.time_corr                                                                                                                         ok\r\n[ 62.50%] Â·Â·Â· ========== =============\r\n                method                \r\n              ---------- -------------\r\n               spearman     85.9Â±5ms  \r\n               kendall      200Â±4ms   \r\n               pearson    2.03Â±0.07ms \r\n              ========== =============\r\n\r\n[ 75.00%] Â·Â·Â· stat_ops.Correlation.time_corrwith                                                                                                                     ok\r\n[ 75.00%] Â·Â·Â· ========== ============\r\n                method               \r\n              ---------- ------------\r\n               spearman   19.8Â±0.5ms \r\n               kendall    19.4Â±0.3ms \r\n               pearson    19.6Â±0.5ms \r\n              ========== ============\r\n\r\n[ 87.50%] Â·Â·Â· stat_ops.Correlation.time_corrwith_cols                                                                                                            failed\r\n[ 87.50%] Â·Â·Â· ========== ========\r\n                method           \r\n              ---------- --------\r\n               spearman   failed \r\n               kendall    failed \r\n               pearson    failed \r\n              ========== ========\r\n\r\n[100.00%] Â·Â·Â· stat_ops.Correlation.time_corrwith_rows                                                                                                            failed\r\n[100.00%] Â·Â·Â· ========== ========\r\n                method           \r\n              ---------- --------\r\n               spearman   failed \r\n               kendall    failed \r\n               pearson    failed \r\n              ========== ========\r\n\r\n       before           after         ratio\r\n     [1a12c41d]       [e19b3f62]\r\n+      19.8Â±0.5ms         39.6Â±5ms     2.00  stat_ops.Correlation.time_corrwith('spearman')\r\n+      19.6Â±0.5ms         35.9Â±3ms     1.83  stat_ops.Correlation.time_corrwith('pearson')\r\n+      19.4Â±0.3ms         35.0Â±2ms     1.80  stat_ops.Correlation.time_corrwith('kendall')\r\n\r\nSOME BENCHMARKS HAVE CHANGED SIGNIFICANTLY.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423755382",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-423755382",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 423755382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzc1NTM4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-22T16:19:31Z",
    "updated_at": "2018-09-22T16:19:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "numpy is using a fully vectorizer soln\r\n\r\nyour impl is basically linear in the number of columns and thus doesnâ€™t scale "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423758522",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-423758522",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 423758522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzc1ODUyMg==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-22T17:05:22Z",
    "updated_at": "2018-09-22T17:05:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Got it, I will work on a numpy replacement for map"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423758846",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-423758846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 423758846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzc1ODg0Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-22T17:09:55Z",
    "updated_at": "2018-09-22T17:09:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "nothing to do with map\r\n\r\nthe issue is a column by column impl is simply not scalable, thatâ€™s why it was written like this to begin with"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423855617",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-423855617",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 423855617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzg1NTYxNw==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-23T23:20:54Z",
    "updated_at": "2018-09-23T23:20:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I will likely need to look into how `DataFrame.corr` is able to efficiently implement the other correlation types in that case."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427999464",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-427999464",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 427999464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzk5OTQ2NA==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-08T22:29:10Z",
    "updated_at": "2018-10-08T22:29:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback In the latest commit I'm retaining the current implementation of the Pearson calculation so there should be no difference in performance for this case, and only using the new approach for other correlation types. (While perhaps not perfectly scalable yet, I figure it will be a reasonable first effort.)  Also now that #22684 has been merged a nice side effect of this PR would be that `corrwith` can accept callable methods as well."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437717359",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-437717359",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 437717359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzcxNzM1OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-11T23:51:34Z",
    "updated_at": "2018-11-11T23:51:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you merge master and see if you can get this to pass"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438114685",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-438114685",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 438114685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODExNDY4NQ==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-13T03:06:49Z",
    "updated_at": "2018-11-13T03:06:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Just tried a rebase.  IIRC, one of the tests will likely fail because it was testing if `corrwith` works for DataFrames with duplicate columns but it was actually failing on master."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439428422",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-439428422",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 439428422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQyODQyMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T15:27:22Z",
    "updated_at": "2018-11-16T15:27:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Still failing / merge conflict.\r\n\r\n> IIRC, one of the tests will likely fail because it was testing if corrwith works for DataFrames with duplicate columns but it was actually failing on master.\r\n\r\nDoes that test need to be xfailed?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439709450",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22375#issuecomment-439709450",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22375",
    "id": 439709450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTcwOTQ1MA==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-18T17:19:29Z",
    "updated_at": "2018-11-18T17:19:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger I added a commit with a merge (should I have rebased?  It seems many unrelated changes were added to the commit), a few fixes (the test failure was apparently caused by accidentally taking a transpose twice, and there was some error-catching code that wasn't accounting for callable methods) and an xfail added to the duplicate columns test"
  }
]
