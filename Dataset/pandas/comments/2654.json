[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11964722",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2654#issuecomment-11964722",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2654",
    "id": 11964722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTY0NzIy",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-07T18:47:40Z",
    "updated_at": "2013-01-07T18:47:40Z",
    "author_association": "MEMBER",
    "body": "This feels buggy or at minimum not intuitive to me. I think it's just an edge case that's not addressed in the test suite. I'll have a look\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25000390",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2654#issuecomment-25000390",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2654",
    "id": 25000390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDAwMzkw",
    "user": {
      "login": "JamesRamm",
      "id": 2784823,
      "node_id": "MDQ6VXNlcjI3ODQ4MjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2784823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JamesRamm",
      "html_url": "https://github.com/JamesRamm",
      "followers_url": "https://api.github.com/users/JamesRamm/followers",
      "following_url": "https://api.github.com/users/JamesRamm/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamesRamm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JamesRamm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamesRamm/subscriptions",
      "organizations_url": "https://api.github.com/users/JamesRamm/orgs",
      "repos_url": "https://api.github.com/users/JamesRamm/repos",
      "events_url": "https://api.github.com/users/JamesRamm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JamesRamm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T13:01:02Z",
    "updated_at": "2013-09-24T13:01:02Z",
    "author_association": "NONE",
    "body": "Hi\nNew to github so apologies if I'm out of place here. The issue has been closed, but the fix does not return expected behaviour?\n\nWhen using use_cols with an implicit index column, the index column is now ignored and pandas returns it's own indexing (0, 1, 2, 3 etc). There is no way to specify that the index column should be used, as it doesn't have a header...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25011963",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2654#issuecomment-25011963",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2654",
    "id": 25011963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDExOTYz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T14:56:37Z",
    "updated_at": "2013-09-24T14:56:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls provide an explicity example (on a new issue) that shows your result\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334829423",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2654#issuecomment-334829423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2654",
    "id": 334829423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDgyOTQyMw==",
    "user": {
      "login": "laserson",
      "id": 118141,
      "node_id": "MDQ6VXNlcjExODE0MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/118141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laserson",
      "html_url": "https://github.com/laserson",
      "followers_url": "https://api.github.com/users/laserson/followers",
      "following_url": "https://api.github.com/users/laserson/following{/other_user}",
      "gists_url": "https://api.github.com/users/laserson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laserson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laserson/subscriptions",
      "organizations_url": "https://api.github.com/users/laserson/orgs",
      "repos_url": "https://api.github.com/users/laserson/repos",
      "events_url": "https://api.github.com/users/laserson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laserson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-06T18:06:40Z",
    "updated_at": "2017-10-06T18:06:40Z",
    "author_association": "NONE",
    "body": "Here is a related problem where `read_csv` in combination with `index_col` and `usecols` is broken:\r\n\r\nThese commands works fine\r\n\r\n```python\r\n>>> data = 'a,b,c\\napple,bat,5.7\\norange,cow,10'\r\n        a    b     c\r\n0   apple  bat   5.7\r\n1  orange  cow  10.0\r\n\r\n>>> pd.read_csv(StringIO(data), index_col=[0, 1])\r\n               c\r\na      b        \r\napple  bat   5.7\r\norange cow  10.0\r\n\r\n>>> pd.read_csv(StringIO(data), usecols=[2])\r\n      c\r\n0   5.7\r\n1  10.0\r\n```\r\n\r\nBut combining `index_col` and `usecols` breaks\r\n\r\n```python\r\n>>> pd.read_csv(StringIO(data), index_col=[0, 1], usecols=[2])\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-95-c02d1a70fe51> in <module>()\r\n----> 1 pd.read_csv(StringIO(data), index_col=[0, 1], usecols=[2])\r\n\r\n~/miniconda3/lib/python3.6/site-packages/pandas/io/parsers.py in parser_f(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, escapechar, comment, encoding, dialect, tupleize_cols, error_bad_lines, warn_bad_lines, skipfooter, skip_footer, doublequote, delim_whitespace, as_recarray, compact_ints, use_unsigned, low_memory, buffer_lines, memory_map, float_precision)\r\n    653                     skip_blank_lines=skip_blank_lines)\r\n    654 \r\n--> 655         return _read(filepath_or_buffer, kwds)\r\n    656 \r\n    657     parser_f.__name__ = name\r\n\r\n~/miniconda3/lib/python3.6/site-packages/pandas/io/parsers.py in _read(filepath_or_buffer, kwds)\r\n    403 \r\n    404     # Create the parser.\r\n--> 405     parser = TextFileReader(filepath_or_buffer, **kwds)\r\n    406 \r\n    407     if chunksize or iterator:\r\n\r\n~/miniconda3/lib/python3.6/site-packages/pandas/io/parsers.py in __init__(self, f, engine, **kwds)\r\n    762             self.options['has_index_names'] = kwds['has_index_names']\r\n    763 \r\n--> 764         self._make_engine(self.engine)\r\n    765 \r\n    766     def close(self):\r\n\r\n~/miniconda3/lib/python3.6/site-packages/pandas/io/parsers.py in _make_engine(self, engine)\r\n    983     def _make_engine(self, engine='c'):\r\n    984         if engine == 'c':\r\n--> 985             self._engine = CParserWrapper(self.f, **self.options)\r\n    986         else:\r\n    987             if engine == 'python':\r\n\r\n~/miniconda3/lib/python3.6/site-packages/pandas/io/parsers.py in __init__(self, src, **kwds)\r\n   1668                 (index_names, self.names,\r\n   1669                  self.index_col) = _clean_index_names(self.names,\r\n-> 1670                                                       self.index_col)\r\n   1671 \r\n   1672                 if self.index_names is None:\r\n\r\n~/miniconda3/lib/python3.6/site-packages/pandas/io/parsers.py in _clean_index_names(columns, index_col)\r\n   3081                     break\r\n   3082         else:\r\n-> 3083             name = cp_cols[c]\r\n   3084             columns.remove(name)\r\n   3085             index_names.append(name)\r\n\r\nIndexError: list index out of range\r\n```\r\n\r\nSame is true if I do `usecols=[0]`, `usecols=[1]`, or `usecols=['c']`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334844253",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2654#issuecomment-334844253",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2654",
    "id": 334844253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDg0NDI1Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-06T19:09:04Z",
    "updated_at": "2017-10-06T19:09:29Z",
    "author_association": "MEMBER",
    "body": "That's not a bug.  `index_cols` is relative to `usecols`.  In this, you only have one column that you want to extract from the CSV, but you want two columns for the index."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334847923",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2654#issuecomment-334847923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2654",
    "id": 334847923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDg0NzkyMw==",
    "user": {
      "login": "laserson",
      "id": 118141,
      "node_id": "MDQ6VXNlcjExODE0MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/118141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laserson",
      "html_url": "https://github.com/laserson",
      "followers_url": "https://api.github.com/users/laserson/followers",
      "following_url": "https://api.github.com/users/laserson/following{/other_user}",
      "gists_url": "https://api.github.com/users/laserson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laserson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laserson/subscriptions",
      "organizations_url": "https://api.github.com/users/laserson/orgs",
      "repos_url": "https://api.github.com/users/laserson/repos",
      "events_url": "https://api.github.com/users/laserson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laserson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-06T19:25:46Z",
    "updated_at": "2017-10-06T19:26:02Z",
    "author_association": "NONE",
    "body": "I see.  Could be worth clarifying in the docstring.  Thanks!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334855000",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2654#issuecomment-334855000",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2654",
    "id": 334855000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDg1NTAwMA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-06T19:57:35Z",
    "updated_at": "2017-10-06T19:57:35Z",
    "author_association": "MEMBER",
    "body": "Exactly.  That's part of what I was proposing you do in #9098."
  }
]
