[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/284155377",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15562#issuecomment-284155377",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15562",
    "id": 284155377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE1NTM3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T14:39:52Z",
    "updated_at": "2017-03-04T14:39:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "What you are doing completely non-performant and way less readable than this idiomatic.\r\n```\r\nIn [31]: df.groupby('clientid').min()\r\nOut[31]: \r\n           datetime  time_delta_zero\r\nclientid                            \r\nA        2017-02-01           0 days\r\nB        2017-02-01           0 days\r\nC        2017-02-01           0 days\r\n\r\n```\r\n\r\nI'll mark it as a bug, though, its shouldn't error (as you are giving back a series; the inference logic is already quite complex).\r\n\r\nwelcome for a PR to fix though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/284457201",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15562#issuecomment-284457201",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15562",
    "id": 284457201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDQ1NzIwMQ==",
    "user": {
      "login": "field-cady",
      "id": 438152,
      "node_id": "MDQ6VXNlcjQzODE1Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/438152?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/field-cady",
      "html_url": "https://github.com/field-cady",
      "followers_url": "https://api.github.com/users/field-cady/followers",
      "following_url": "https://api.github.com/users/field-cady/following{/other_user}",
      "gists_url": "https://api.github.com/users/field-cady/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/field-cady/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/field-cady/subscriptions",
      "organizations_url": "https://api.github.com/users/field-cady/orgs",
      "repos_url": "https://api.github.com/users/field-cady/repos",
      "events_url": "https://api.github.com/users/field-cady/events{/privacy}",
      "received_events_url": "https://api.github.com/users/field-cady/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-06T16:50:29Z",
    "updated_at": "2017-03-06T16:50:29Z",
    "author_association": "NONE",
    "body": "Oh yes, this is definitely horrible pandas code to write!  It's a simplified example from a much more complex script doing things more complicated than min().\r\n\r\nI found a work-around where I return a DataFrame from the applied function rather than a Series."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/284459068",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15562#issuecomment-284459068",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15562",
    "id": 284459068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDQ1OTA2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-06T16:56:17Z",
    "updated_at": "2017-03-06T16:56:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@field-cady my point is you can compute ``.min()`` or other functions via ``.apply``. don't compute them all at once, simply do:\r\n\r\n```\r\nresult = df.groupby(...).agg(['min', my_really_hard_to_compute_function])\r\n```\r\n\r\nor you can be even more specific via\r\n\r\n```\r\nresult1 = df.groupby(..).this_column.agg(....)\r\nresult2 = df.groupby(..).that_column.agg(...)\r\nresult = pd.concat([result1, result2], axis=1)\r\n```\r\n\r\nis also quite idiomatic / readable."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287033794",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15562#issuecomment-287033794",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15562",
    "id": 287033794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzAzMzc5NA==",
    "user": {
      "login": "PnPie",
      "id": 7472431,
      "node_id": "MDQ6VXNlcjc0NzI0MzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7472431?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PnPie",
      "html_url": "https://github.com/PnPie",
      "followers_url": "https://api.github.com/users/PnPie/followers",
      "following_url": "https://api.github.com/users/PnPie/following{/other_user}",
      "gists_url": "https://api.github.com/users/PnPie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PnPie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PnPie/subscriptions",
      "organizations_url": "https://api.github.com/users/PnPie/orgs",
      "repos_url": "https://api.github.com/users/PnPie/repos",
      "events_url": "https://api.github.com/users/PnPie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PnPie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T11:47:05Z",
    "updated_at": "2017-03-16T11:47:05Z",
    "author_association": "NONE",
    "body": "It seems that the error comes from the creation of `DataFrame` with n-dimension `timedelta/datetime` values, pandas extracts and flattens the embedded n-dimensional array here:\r\nhttps://github.com/pandas-dev/pandas/blob/master/pandas/core/frame.py#L469-L473\r\n\r\nEx. Here we our initial `values` is an 2-dimensional array like\r\n`[[datetime.timedelta(0), datetime.timedelta(0), datetime.timedelta(0)], [datetime.datetime(2017, 3, 16), datetime.datetime(2017, 3, 16), datetime.datetime(2017, 3, 16)]]`\r\nand it was flattened to an 1-dimensional array:\r\n`[datetime.timedelta(0), datetime.timedelta(0), datetime.timedelta(0), datetime.datetime(2017, 3, 16), datetime.datetime(2017, 3, 16), datetime.datetime(2017, 3, 16)]`\r\nI didn't get well that why we want to extract datetime like array here ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287040149",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15562#issuecomment-287040149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15562",
    "id": 287040149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzA0MDE0OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T12:19:02Z",
    "updated_at": "2017-03-16T12:19:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "so the purpose is to infer from a bunch of objects whether they are datetimelikes (e.g. datetime, datetime w/tz or timedeltas). This goes thru some logic to see if its possible, then tries to convert, backing aways if things are not fully convertible (IOW there are mixed non-same types things that are not NaNs/NaT's). IOW you will get a datetime64[ns] or datetime64[tz-aware] or timedelta64[ns] or back what you started.\r\n\r\nThe only thing is I think I originally made this work regardless of the passed in shape (see the ravel). This is wrong, it should preserve the shape and return a list of array-like if ndim > 1 or array-like if ndim == 1 . array-like are the converted objects or original array if you cannot convert successfully.\r\n\r\nSo this would fix this issue (and another one, ill find the reference). happy to have you put up a patch!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287044496",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15562#issuecomment-287044496",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15562",
    "id": 287044496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzA0NDQ5Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T12:39:08Z",
    "updated_at": "2017-03-16T12:39:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@PnPie this is the same cause as this: https://github.com/pandas-dev/pandas/issues/13287"
  }
]
