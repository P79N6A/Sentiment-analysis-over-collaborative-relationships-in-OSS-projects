[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/172562506",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12078#issuecomment-172562506",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12078",
    "id": 172562506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjU2MjUwNg==",
    "user": {
      "login": "nbonnotte",
      "id": 9929982,
      "node_id": "MDQ6VXNlcjk5Mjk5ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9929982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbonnotte",
      "html_url": "https://github.com/nbonnotte",
      "followers_url": "https://api.github.com/users/nbonnotte/followers",
      "following_url": "https://api.github.com/users/nbonnotte/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbonnotte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbonnotte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbonnotte/subscriptions",
      "organizations_url": "https://api.github.com/users/nbonnotte/orgs",
      "repos_url": "https://api.github.com/users/nbonnotte/repos",
      "events_url": "https://api.github.com/users/nbonnotte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbonnotte/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-18T15:33:16Z",
    "updated_at": "2016-01-18T15:33:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm a bit confused.\n\nAs I have understood the API, here `.drop` should not work, because `'a'` is not a column, and we should just have a more meaningful error message. If I wanted to remove the columns whose first level is `'a'`, I should do `df.drop('a', axis=1, level=0)`. Right?\n\nOn the other hand, if we consider\n\n```\nIn [4]: dg = pd.DataFrame([[1,3,4]],columns=pd.MultiIndex.from_tuples([('a',''),('b1','c1'),('b2','c2')],names=['b','c']))\n\nIn [5]: dg\nOut[5]: \nb  a b1 b2\nc    c1 c2\n0  1  3  4\n```\n\nthen `dg` and `df` are equivalent:\n\n```\nIn [7]: from pandas.util.testing import assert_frame_equal\n\nIn [8]: assert_frame_equal(df, dg) or \"No error raised\"\nOut[8]: 'No error raised'\n```\n\nbut\n\n```\nIn [14]: dg.drop('a', axis=1)\nOut[14]: \nb b1 b2\nc c1 c2\n0  3  4\n```\n\nHere is what happens:\n- In `MultiIndex.drop` (see  [here](https://github.com/pydata/pandas/blob/fab291b306ebf8b89d094379c99bd1b2a2b601b9/pandas/core/index.py#L5694)), in the  `try... except ...` the `ValueError` is raised because `labels ['a'] not contained in axis`, which is correct.\n- Then we go on, to `loc = self.get_loc(label)`, with here `label='a'`\n- In `MultiIndex.get_loc`, since the key `'a'` is not a tuple, the parameter `level=0` is automagically added (see [here](https://github.com/pydata/pandas/blob/fab291b306ebf8b89d094379c99bd1b2a2b601b9/pandas/core/index.py#L6136-L6138))\n\nDoes that mean that, in the API as it should be, in `.drop` the parameter `level=0` was intended to be superfluous? That is, `df.drop('a', axis=1)` should be equivalent to `df.drop('a', axis=1, level=0)` ?\n\nWhat should I do in my pull request?\n\nAs as side note, the reason why `.drop` fails for the first example `df` and not for the second example `dg` comes later: for the former, `.get_loc` returns a boolean mask, and the latter returns a slice, but `.drop` forgets to handle boolean mask (see [those lines](https://github.com/pydata/pandas/blob/fab291b306ebf8b89d094379c99bd1b2a2b601b9/pandas/core/index.py#L5728-L5731))\n\nAlso, I feel the need to say that I'm sorry if it seems that I am insisting a bit on those issues about `.drop`. I just like to understand things, and I'm confused about what the code pretends to be doing, what it should in theory do, and what it actually does. I guess that's bound to happen on such a complex project, and I'd be glad to help in any direction I can.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/172836561",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12078#issuecomment-172836561",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12078",
    "id": 172836561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjgzNjU2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T12:27:04Z",
    "updated_at": "2016-01-19T12:27:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [1]: dg = pd.DataFrame([[1,3,4]],columns=pd.MultiIndex.from_tuples([('a',''),('b1','c1'),('b2','c2')],names=['b','c']))\n\nIn [6]: dg.columns.is_lexsorted()\nOut[6]: True\n\nIn [7]: df = pd.DataFrame(columns=['a','b','c','d'], data=[[1,'b1','c1',3], [1,'b2','c2',4]])\n\nIn [8]: df = df.pivot_table(index='a', columns=['b','c'], values='d').reset_index()\nIn [9]: df.columns.is_lexsorted()\nOut[9]: False\n```\n\nThe difference is that when the columns are not lexsorted this doesn't work, and the error message is incorrectly propogated, and an incorrect path is taken showing an error message which doesn't make sense. So you need to see where the difference is and what is happening to the exceptions.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/172869309",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12078#issuecomment-172869309",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12078",
    "id": 172869309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mjg2OTMwOQ==",
    "user": {
      "login": "nbonnotte",
      "id": 9929982,
      "node_id": "MDQ6VXNlcjk5Mjk5ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9929982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbonnotte",
      "html_url": "https://github.com/nbonnotte",
      "followers_url": "https://api.github.com/users/nbonnotte/followers",
      "following_url": "https://api.github.com/users/nbonnotte/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbonnotte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbonnotte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbonnotte/subscriptions",
      "organizations_url": "https://api.github.com/users/nbonnotte/orgs",
      "repos_url": "https://api.github.com/users/nbonnotte/repos",
      "events_url": "https://api.github.com/users/nbonnotte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbonnotte/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T14:26:20Z",
    "updated_at": "2016-01-25T16:53:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oki doki, I'll do that ^^\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/175615458",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12078#issuecomment-175615458",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12078",
    "id": 175615458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTYxNTQ1OA==",
    "user": {
      "login": "nbonnotte",
      "id": 9929982,
      "node_id": "MDQ6VXNlcjk5Mjk5ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9929982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbonnotte",
      "html_url": "https://github.com/nbonnotte",
      "followers_url": "https://api.github.com/users/nbonnotte/followers",
      "following_url": "https://api.github.com/users/nbonnotte/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbonnotte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbonnotte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbonnotte/subscriptions",
      "organizations_url": "https://api.github.com/users/nbonnotte/orgs",
      "repos_url": "https://api.github.com/users/nbonnotte/repos",
      "events_url": "https://api.github.com/users/nbonnotte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbonnotte/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-27T13:10:26Z",
    "updated_at": "2016-01-27T13:10:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I couldn't find any other exception that would be raised but incorrectly propagated. Except the one that shows up, of course.\n\nAnd this exception is raised for the reason I gave: \n- when the multi-index is lexsorted, `.get_loc()` returns a slice\n- when it is not, it returns a boolean mask, but what comes next in `MultiIndex.drop` cant' handle that (see [those lines](https://github.com/pydata/pandas/blob/fab291b306ebf8b89d094379c99bd1b2a2b601b9/pandas/core/index.py#L5727-L5731))\n\n```\nIn [2]: ref = pd.MultiIndex.from_tuples([('a',''),('b1','c1'),('b2','c2')],names=['b','c'])\n\nIn [3]: pbm = pd.DataFrame(columns=['a','b','c','d'], data=[[1,'b1','c1',3], [1,'b2','c2',4]]).pivot_table(index='a', columns=['b','c'], values='d').reset_index().columns\n\nIn [6]: ref.is_lexsorted()\nOut[6]: True\n\nIn [7]: pbm.is_lexsorted()\nOut[7]: False\n\nIn [8]: ref.drop('a')\nOut[8]: \nMultiIndex(levels=[[u'a', u'b1', u'b2'], [u'', u'c1', u'c2']],\n           labels=[[1, 2], [1, 2]],\n           names=[u'b', u'c'])\n\nIn [9]: pbm.drop('a')\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-9-fcb8cd09713a> in <module>()\n----> 1 pbm.drop('a')\n\n/home/nicolas/Git/pandas/pandas/indexes/multi.py in drop(self, labels, level, errors)\n   1091                     inds.append(loc)\n   1092                 else:\n-> 1093                     inds.extend(lrange(loc.start, loc.stop))\n   1094             except KeyError as e:\n   1095                 if errors != 'ignore':\n\nAttributeError: 'numpy.ndarray' object has no attribute 'start'\n\nIn [10]: ref.get_loc('a')\nOut[10]: slice(0, 1, None)\n\nIn [11]: pbm.get_loc('a')\nOut[11]: array([ True, False, False], dtype=bool)\n\nIn [12]: ref.get_loc('a').start\nOut[12]: 0\n\nIn [13]: pbm.get_loc('a').start\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-13-2a974e7413c7> in <module>()\n----> 1 pbm.get_loc('a').start\n\nAttributeError: 'numpy.ndarray' object has no attribute 'start'\n```\n\nBut maybe I'm just not looking at the right place. Am I missing something?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/175620412",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12078#issuecomment-175620412",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12078",
    "id": 175620412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTYyMDQxMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-27T13:18:27Z",
    "updated_at": "2016-01-27T13:18:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeh, prob just not correctly implemented.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/175647663",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12078#issuecomment-175647663",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12078",
    "id": 175647663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTY0NzY2Mw==",
    "user": {
      "login": "nbonnotte",
      "id": 9929982,
      "node_id": "MDQ6VXNlcjk5Mjk5ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9929982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbonnotte",
      "html_url": "https://github.com/nbonnotte",
      "followers_url": "https://api.github.com/users/nbonnotte/followers",
      "following_url": "https://api.github.com/users/nbonnotte/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbonnotte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbonnotte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbonnotte/subscriptions",
      "organizations_url": "https://api.github.com/users/nbonnotte/orgs",
      "repos_url": "https://api.github.com/users/nbonnotte/repos",
      "events_url": "https://api.github.com/users/nbonnotte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbonnotte/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-27T14:07:26Z",
    "updated_at": "2016-01-27T14:07:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can I correct the implementation, so that `.drop` works for a non lexsorted multi-index in the same way as for a lexsorted one? :D\n\n```\nIn [2]: ref = pd.MultiIndex.from_tuples([('a',''),('b1','c1'),('b2','c2')],names=['b','c'])\n\nIn [3]: pbm = pd.DataFrame(columns=['a','b','c','d'], data=[[1,'b1','c1',3], [1,'b2','c2',4]]).pivot_table(index='a', columns=['b','c'], values='d').reset_index().columns\n\nIn [4]: ref.is_lexsort\nref.is_lexsorted            ref.is_lexsorted_for_tuple  \n\nIn [4]: ref.is_lexsorted()\nOut[4]: True\n\nIn [5]: pbm.is_lex\npbm.is_lexsorted            pbm.is_lexsorted_for_tuple  \n\nIn [5]: pbm.is_lexsorted()\nOut[5]: False\n\nIn [6]: ref.values\nOut[6]: array([('a', ''), ('b1', 'c1'), ('b2', 'c2')], dtype=object)\n\nIn [7]: pbm.values\nOut[7]: array([('a', ''), ('b1', 'c1'), ('b2', 'c2')], dtype=object)\n\nIn [8]: ref.drop('a')\nOut[8]: \nMultiIndex(levels=[[u'a', u'b1', u'b2'], [u'', u'c1', u'c2']],\n           labels=[[1, 2], [1, 2]],\n           names=[u'b', u'c'])\n```\n\nBeware that this simple correction might change the API of both `.drop` or `.groupby`, as we discussed in the pull request #11717 :innocent: \n\nSo perhaps a safer option would be to first have `ref.drop('a')` raise a `KeyError` or `ValueError` because `'a'` is not a correct value, the proper way being `ref.drop('a', level=0)`? And then correct the implementation.\n\nLet me know what I can do.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/175651782",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12078#issuecomment-175651782",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12078",
    "id": 175651782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTY1MTc4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-27T14:13:53Z",
    "updated_at": "2016-01-27T14:13:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think `.drop` on a DataFrame is find (your example is not that). you can simply lexsort the pivot table I think.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/175653405",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12078#issuecomment-175653405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12078",
    "id": 175653405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTY1MzQwNQ==",
    "user": {
      "login": "nbonnotte",
      "id": 9929982,
      "node_id": "MDQ6VXNlcjk5Mjk5ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9929982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbonnotte",
      "html_url": "https://github.com/nbonnotte",
      "followers_url": "https://api.github.com/users/nbonnotte/followers",
      "following_url": "https://api.github.com/users/nbonnotte/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbonnotte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbonnotte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbonnotte/subscriptions",
      "organizations_url": "https://api.github.com/users/nbonnotte/orgs",
      "repos_url": "https://api.github.com/users/nbonnotte/repos",
      "events_url": "https://api.github.com/users/nbonnotte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbonnotte/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-27T14:20:37Z",
    "updated_at": "2016-01-27T14:20:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "The problem with the DataFrame arises because of the problem with the MultiIndex, as shown in my examples.\n\nWhat can I do to remove the obscur error message?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/175656267",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12078#issuecomment-175656267",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12078",
    "id": 175656267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTY1NjI2Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-27T14:30:03Z",
    "updated_at": "2016-01-27T14:30:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "ahh, yes, see if you can\n\n`tm.assert_index_equal(pbm.drop('a'), ref.drop('a'))`\n\nthough you _may_ want to output a `PerformanceWarning` for `pbm.drop('a')`\n\nyou'll have to look and see how its used elsewhere.\n"
  }
]
