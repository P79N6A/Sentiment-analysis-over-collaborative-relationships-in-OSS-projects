[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39748694",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6833#issuecomment-39748694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6833",
    "id": 39748694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzQ4Njk0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-07T16:00:10Z",
    "updated_at": "2014-04-07T16:02:14Z",
    "author_association": "MEMBER",
    "body": "I think this would be better if it returned this:\n\n``` python\n{'df': {'foo1': store.select('foo1'), 'foo2': store.select('foo2')}}\n```\n\nor \n\n``` python\n{'foo1': store.select('foo1'), 'foo2': store.select('foo2')}\n```\n\nUsers can do the concat afterwards if they want to. This shouldn't assume that the frames are the same shape, dtype etc. For example, I have different metrics related to one \"thing\" all under one key, like\n\n```\neeg/blocked\neeg/filtered\neye/blocked\neye/samples\neye/events\n```\n\nI don't want to concatenate the result but I often want to get just the `eye` or just the `eeg` datasets. This could even be a context manager where the context is the node. Something like:\n\n``` python\nwith store.get_group('df') as group:\n    foo1 = group['foo1']\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39749625",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6833#issuecomment-39749625",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6833",
    "id": 39749625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzQ5NjI1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-07T16:08:13Z",
    "updated_at": "2014-04-07T16:08:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "the issue I have with this is that its tricky to pass a `where` to this as you can't assume anything about the tables. I like the returning a dict though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39825843",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6833#issuecomment-39825843",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6833",
    "id": 39825843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODI1ODQz",
    "user": {
      "login": "VGonPa",
      "id": 769613,
      "node_id": "MDQ6VXNlcjc2OTYxMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/769613?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VGonPa",
      "html_url": "https://github.com/VGonPa",
      "followers_url": "https://api.github.com/users/VGonPa/followers",
      "following_url": "https://api.github.com/users/VGonPa/following{/other_user}",
      "gists_url": "https://api.github.com/users/VGonPa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VGonPa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VGonPa/subscriptions",
      "organizations_url": "https://api.github.com/users/VGonPa/orgs",
      "repos_url": "https://api.github.com/users/VGonPa/repos",
      "events_url": "https://api.github.com/users/VGonPa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VGonPa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-08T08:58:38Z",
    "updated_at": "2014-04-08T08:58:38Z",
    "author_association": "NONE",
    "body": "I like the idea of returning a dict as well.\n\nWhat about something like this?:\n\n```\ndef get_group(self, group_name):\n    return {node._v_name: self.select(node._v_pathname) for node in store.get_node(group_name) }\n```\n"
  }
]
