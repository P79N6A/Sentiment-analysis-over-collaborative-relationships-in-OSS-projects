[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/310865731",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16768#issuecomment-310865731",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16768",
    "id": 310865731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg2NTczMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-24T21:03:50Z",
    "updated_at": "2017-06-24T21:03:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "show a usecase that is not possible currently "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/310866647",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16768#issuecomment-310866647",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16768",
    "id": 310866647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg2NjY0Nw==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-24T21:22:21Z",
    "updated_at": "2017-06-24T21:22:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's more about simplifying than making something possible. So:\r\n\r\n* ``is_dtype_subclass(obj, np.integer)`` -> ``is_integer_dtype(obj)``\r\n* ``is_dtype_subclass(obj, np.number)`` -> ``is_numeric_dtype(obj)`` \r\n* etc\r\n\r\nThat is, having one function is simpler than having several functions. (I'm aware that there are some corner cases I'm not covering ATM, but that can be handled).\r\n\r\nAdditionally, I'm thinking it could allow adding a type checking method on Dataframes/Series (e.g. ``ser.dtype.is_subclass(np.number)`` and ``df.dtype.is_subclass(np.number)``)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/311620128",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16768#issuecomment-311620128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16768",
    "id": 311620128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTYyMDEyOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-28T10:24:52Z",
    "updated_at": "2017-06-28T10:24:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@topper-123 this would require the user of this function to peer *even more* into the type abstractions (IOW they *have* to know ``np.number`` and not to mention know about categories, dtypes and such).\r\n\r\nand still not sure this is entirely useful. I think the explicit functions make clear the intentions.\r\n\r\n> Additionally, I'm thinking it could allow adding a type checking method on Dataframes/Series (e.g. ser.dtype.is_subclass(np.number) and df.dtype.is_subclass(np.number)).\r\n\r\nthis is the point of ``.select_dtypes()``\r\n\r\nwe cannot ATM add a method to a dtype object as pandas only *partially* controls them (IOW the extension types). This is the point of pandas2 where all of the dtypes *will* be owned by libpandas and hence will operate rationally."
  }
]
