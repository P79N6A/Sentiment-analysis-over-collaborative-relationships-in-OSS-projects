[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275750487",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15244#issuecomment-275750487",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15244",
    "id": 275750487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc1MDQ4Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-27T19:20:37Z",
    "updated_at": "2017-01-27T19:20:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\ndef f(x):\r\n    df = x[x.amount < 20]\r\n    return df.groupby(df.id).amount.count()\r\n```\r\n\r\nin your original function, you are passing ``x.id`` which certainly can change as the filtered frame will be new, but the grouping index is the original. That is very unsafe in general (though pandas may take it)\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275750846",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15244#issuecomment-275750846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15244",
    "id": 275750846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc1MDg0Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-27T19:22:06Z",
    "updated_at": "2017-01-27T19:22:06Z",
    "author_association": "MEMBER",
    "body": "I can't seem to reproduce it on my machine.\r\n\r\nHowever, you are passing a grouper with a different shape. I actually didn't know that pandas is aligning the grouper. You can also pass the string: `df.groupby('id').amount.count()`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275751092",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15244#issuecomment-275751092",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15244",
    "id": 275751092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc1MTA5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-27T19:23:12Z",
    "updated_at": "2017-01-27T19:23:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think @jorisvandenbossche has it right.\r\n\r\n``.groupby`` is aligning the group-and (``x.id``). So this 'works', but I suspect this is in general an unsafe operation (from a thread point of view).\r\n\r\nIf you dont't align then this will be ok I think (IOW, if you pass in the group-and from the same frame).\r\n\r\ncertainly no guarantees :<"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275755488",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15244#issuecomment-275755488",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15244",
    "id": 275755488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc1NTQ4OA==",
    "user": {
      "login": "jcrist",
      "id": 2783717,
      "node_id": "MDQ6VXNlcjI3ODM3MTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2783717?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcrist",
      "html_url": "https://github.com/jcrist",
      "followers_url": "https://api.github.com/users/jcrist/followers",
      "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
      "organizations_url": "https://api.github.com/users/jcrist/orgs",
      "repos_url": "https://api.github.com/users/jcrist/repos",
      "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcrist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-27T19:41:13Z",
    "updated_at": "2017-01-27T19:41:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, I think this is why this didn't show up until now - I didn't know pandas supported unaligned indices passed to groupby. Showed up in a user bug https://github.com/dask/dask/issues/1876.\r\n\r\nI can fix this in dask by manually aligning beforehand, but the threadsafe issue still stands. Out of curiousity, why does this fail only on the first call? Some index structure being built up and then cached on later calls?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275755561",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15244#issuecomment-275755561",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15244",
    "id": 275755561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc1NTU2MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-27T19:41:34Z",
    "updated_at": "2017-01-27T19:41:34Z",
    "author_association": "MEMBER",
    "body": "The passed series (`df.id`) gets reindexed (https://github.com/pandas-dev/pandas/blob/ba057443d1b69bb3735a4b18a18e4e4897231867/pandas/core/groupby.py#L2580), but that still shouldn't modify the original object?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275755935",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15244#issuecomment-275755935",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15244",
    "id": 275755935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc1NTkzNQ==",
    "user": {
      "login": "jcrist",
      "id": 2783717,
      "node_id": "MDQ6VXNlcjI3ODM3MTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2783717?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcrist",
      "html_url": "https://github.com/jcrist",
      "followers_url": "https://api.github.com/users/jcrist/followers",
      "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
      "organizations_url": "https://api.github.com/users/jcrist/orgs",
      "repos_url": "https://api.github.com/users/jcrist/repos",
      "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcrist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-27T19:43:09Z",
    "updated_at": "2017-01-27T19:43:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmmm, well something is getting modified, as it only fails the first time."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275762738",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15244#issuecomment-275762738",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15244",
    "id": 275762738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc2MjczOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-27T20:12:35Z",
    "updated_at": "2017-01-27T20:12:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "its *shouldn't* ever modify the original object, only the groupby object itself has state, but that *could* be the problem. IOW, this is a cached_property, which I suppose could be interrupted and if the groupby object is shared......"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275765156",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15244#issuecomment-275765156",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15244",
    "id": 275765156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc2NTE1Ng==",
    "user": {
      "login": "jcrist",
      "id": 2783717,
      "node_id": "MDQ6VXNlcjI3ODM3MTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2783717?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcrist",
      "html_url": "https://github.com/jcrist",
      "followers_url": "https://api.github.com/users/jcrist/followers",
      "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
      "organizations_url": "https://api.github.com/users/jcrist/orgs",
      "repos_url": "https://api.github.com/users/jcrist/repos",
      "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcrist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-27T20:23:10Z",
    "updated_at": "2017-01-27T20:23:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "This fails in the code above though, where only the original frame is shared (neither the groupby or the filtered frame is shared). But `df.id` is the same object for all calls - could that be modified by the reindex? Or am I misunderstanding what's being cached here?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275770868",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15244#issuecomment-275770868",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15244",
    "id": 275770868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc3MDg2OA==",
    "user": {
      "login": "jcrist",
      "id": 2783717,
      "node_id": "MDQ6VXNlcjI3ODM3MTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2783717?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcrist",
      "html_url": "https://github.com/jcrist",
      "followers_url": "https://api.github.com/users/jcrist/followers",
      "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
      "organizations_url": "https://api.github.com/users/jcrist/orgs",
      "repos_url": "https://api.github.com/users/jcrist/repos",
      "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcrist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-27T20:49:16Z",
    "updated_at": "2017-01-27T20:49:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "This seems to only fail if the index is longer than the grouped frame. Swapping the filter onto the index passes every time (not that this is recommended):\r\n\r\n```python\r\ndef f(x):\r\n    return x.groupby(x[x.amount < 20].id).amount.count()\r\n```"
  }
]
