[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18915506",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3752#issuecomment-18915506",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3752",
    "id": 18915506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTE1NTA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T15:09:30Z",
    "updated_at": "2013-06-04T15:09:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is a 'side' effect of pandas trying to coerce the output of groupby back to the same data type as the input (if possible); since you are using a user defined function, it is impossible to disambuigate this case.\n\nYou are after all grouping on a boolean column. I agree this is a somewhat degenerate case, and I suppose we maybe should not coerce on a boolean column at all (in a groupby). \n\nCan you give me some more context on what you are trying to do?\n\nIs the following is what you are after?\n\n```\nIn [15]: DataFrame.from_records([(0, False)], columns=['0', 'bool']).groupby(['0']).count()\nOut[15]: \n   0  bool\n0         \n0  1     1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18926544",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3752#issuecomment-18926544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3752",
    "id": 18926544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTI2NTQ0",
    "user": {
      "login": "cameronhatfield",
      "id": 1126872,
      "node_id": "MDQ6VXNlcjExMjY4NzI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1126872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameronhatfield",
      "html_url": "https://github.com/cameronhatfield",
      "followers_url": "https://api.github.com/users/cameronhatfield/followers",
      "following_url": "https://api.github.com/users/cameronhatfield/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameronhatfield/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameronhatfield/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameronhatfield/subscriptions",
      "organizations_url": "https://api.github.com/users/cameronhatfield/orgs",
      "repos_url": "https://api.github.com/users/cameronhatfield/repos",
      "events_url": "https://api.github.com/users/cameronhatfield/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameronhatfield/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T17:48:17Z",
    "updated_at": "2013-06-04T18:13:38Z",
    "author_association": "NONE",
    "body": "The main issue I am running into is that I am doing multiple aggregations, which is similar to the following (Note: I did not compile or run this. If you want me to make sure this is a working example, let me know):\n\n``` python\nMyInputTuple = namedtuple('MyInputTuple', 'attr_0, attr_1, attr_2, success, value_average')\ndata_frame = DataFrame.from_records([MyInputTuple(0, 1, 2, True, 4.7)], columns=MyInputTuple._fields)\nresult = data_frame.groupby(['attr_0', 'attr_1', 'attr_2'], as_index=False)\n    .agg(OrderedDict([\n        ('success', OrderedDict([\n             ('num_tests', Series.count),\n              'num_failed', lambda x: x.count() - np.count_nonzero(x))\n             )),\n        ('value_average', OrderedDict([\n             ('min', np.min),\n             ('max', np.max),\n             ('avg', np.mean)\n             ])),\n       ]))\n\nMyOutputTuple = namedtuple('MyOutputTuple', 'attr_1, attr_2, num_tests, num_failed, min_value_avg, max_value_avg, avg_value_avg')\n\nfor row in result.itertuples():\n    attr_1 = row[1]\n    output_tuple = row[2:]\n    yield attr_1, MyOutputTuple._make(output_tuple)\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18927380",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3752#issuecomment-18927380",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3752",
    "id": 18927380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTI3Mzgw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T18:00:49Z",
    "updated_at": "2013-06-04T18:00:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would just `data_frame['success'] = data_frame['success'].astype(int)` before you start\n\nor you could easily handle this in a single function, e.g.\n\n```\ndef function(grp):\n    do whatever here\ndata_frame.groupby(.....).agg(function)\n```\n\neasier to read/understand too, my 2c\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41725271",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3752#issuecomment-41725271",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3752",
    "id": 41725271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzI1Mjcx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-29T20:05:59Z",
    "updated_at": "2014-04-29T20:05:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing in favor of #7001\n"
  }
]
