[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292224674",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292224674",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292224674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjIyNDY3NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T16:11:38Z",
    "updated_at": "2017-04-06T16:11:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\ndummy_na : bool, default False\r\n    Add a column to indicate NaNs, if False NaNs are ignored.\r\n```\r\n\r\n```\r\nIn [1]: s = Series(['a', 'b', 'c', np.nan])\r\n\r\nIn [2]: pd.get_dummies(s)\r\nOut[2]: \r\n   a  b  c\r\n0  1  0  0\r\n1  0  1  0\r\n2  0  0  1\r\n3  0  0  0\r\n\r\nIn [3]: pd.get_dummies(s, dummy_na=True)\r\nOut[3]: \r\n   a  b  c  NaN\r\n0  1  0  0    0\r\n1  0  1  0    0\r\n2  0  0  1    0\r\n3  0  0  0    1\r\n\r\n```\r\n\r\nI think this is pretty clear."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292238093",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292238093",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292238093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjIzODA5Mw==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T16:59:32Z",
    "updated_at": "2017-04-06T16:59:32Z",
    "author_association": "NONE",
    "body": "Nope. I am well aware of the dummy_na option, as I stated above in my description. This bug is when this option is not used."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292240054",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292240054",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292240054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI0MDA1NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T17:05:35Z",
    "updated_at": "2017-04-06T17:05:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "> This bug is when this option is not used.\r\n\r\nI wouldn't call it a bug though, it's behaving as intended and documented (whether or not that intention is \"correct\").\r\n\r\nDo you have an example use-case where you want the NaNs to propagate? I've only ever used `get_dummies` as a pre-processing step for fitting a model, so I've already handled NaNs, or want the `dummy_na=True` behavior."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292244715",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292244715",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292244715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI0NDcxNQ==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T17:19:27Z",
    "updated_at": "2017-04-06T17:19:27Z",
    "author_association": "NONE",
    "body": "I am happy with calling it an API change rather than a bug! :) \r\n\r\nI would say two things:\r\n1. The way the API is defined for `get_dummies` is not logically consistent with how `NaN` is used in basically all other parts of the pandas API. Internal and logical consistency of the pandas API is certainly enough of a reason in and of itself to motivate the change. There does not have to be a use case to desire API consistency. In fact, it is usually the opposite. There generally there has to be a compelling use case to demand API *inconsistency*.\r\n\r\n2. The example I am thinking of is working on modeling problems where you want to explicitly handle missing labels in some way that does not involve using an extra dummy column or setting them to all zeros. This could include multilabel classification with some missing labels where you would not discard examples with incomplete label sets.\r\n\r\nRight now, to do this, you have to force pandas to create the dummy column and then do the replacement afterwards. This is, of course, not a big deal. However, as stated in 1) above, the purity of the API is a much better motivation for this change. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292246230",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292246230",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292246230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI0NjIzMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T17:23:49Z",
    "updated_at": "2017-04-06T17:23:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "how does scikit-learn handle missing values in ``LabelEncoder``? (e.g. what is the policy)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292248711",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292248711",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292248711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI0ODcxMQ==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T17:30:53Z",
    "updated_at": "2017-04-06T17:30:53Z",
    "author_association": "NONE",
    "body": "@jreback IMO, this is a separate issue that is not terribly pertinent to pandas API purity. \r\n\r\nIn any case, the standard label encoder throws a `TypeError`.  Scikit-learn does have facilities for handling missing labels. See the label propagation routines [here](http://scikit-learn.org/stable/modules/generated/sklearn.semi_supervised.LabelPropagation.html#sklearn.semi_supervised.LabelPropagation.fit). They use -1 to mark missing labels under the assumption that all labels have to be non-negative integers. \r\n\r\nIn principle, the `LabelEncoder` could do the same thing, but given that support for multi-label classification is somewhat case-by-case, I think that throwing an error is probably better. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292249628",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292249628",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292249628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI0OTYyOA==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T17:33:46Z",
    "updated_at": "2017-04-06T17:34:01Z",
    "author_association": "NONE",
    "body": "I don't know if scikit-learn has an official policy for missing labels per se. However, pandas **does** have a policy for missing things IIUIC. Put in `np.nan`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292250037",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292250037",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292250037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI1MDAzNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T17:35:03Z",
    "updated_at": "2017-04-06T17:35:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would expanding `dummy_na` to take `True / False / 'keep'` (or propagate) work? With the third option being your desired output? I don't think this is worth breaking API for, but your use-case seems worth supporting."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292250742",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292250742",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292250742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI1MDc0Mg==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T17:37:28Z",
    "updated_at": "2017-04-06T17:37:28Z",
    "author_association": "NONE",
    "body": "Sure that would work! I do feel the need to point out that this change would *fix*, not break the API, but this is all semantics."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292251244",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292251244",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292251244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI1MTI0NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T17:39:24Z",
    "updated_at": "2017-04-06T17:39:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, if you could submit a PR allowing `dummy_na` to take a third value. Thanks."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292257932",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292257932",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292257932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI1NzkzMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T18:02:40Z",
    "updated_at": "2017-04-06T18:02:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@beckermr sure its pertinent. We don't generally want to have a completely opposite policy to downstream (assuming it makes sense)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292339124",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292339124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292339124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjMzOTEyNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T22:10:56Z",
    "updated_at": "2017-04-06T22:10:56Z",
    "author_association": "MEMBER",
    "body": "> There generally there has to be a compelling use case to demand API *inconsistency.*\r\n\r\nThe fact that `pd.get_dummies` is used a lot as preprocessing before scikit-learn (or other modelling tools), and such tools typically don't want NaNs, is IMO a good reason for the API"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292340642",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292340642",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292340642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjM0MDY0Mg==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T22:18:30Z",
    "updated_at": "2017-04-06T22:18:30Z",
    "author_association": "NONE",
    "body": "The current API makes too many assumptions. Right now, the current API asserts that if a label is missing, it is NONE of the labels you have. This cannot possibly be true in all cases. \r\n\r\nInstead, if NaNs were always propagated by default (even if an additional missing label column is added) then users would be required to reason about why their labels are missing and how they should fill nulls. \r\n\r\nFor example, if labels are missing at random and the rest of the data is representative, then filling the missing one hot encoded rows with the fraction of each label would be a pretty good way to fill nulls. \r\n\r\nOf course pandas should not do this either since it should not be making assumptions about the input data. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292341677",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292341677",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292341677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjM0MTY3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T22:23:26Z",
    "updated_at": "2017-04-06T22:23:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "acutally this flag should be ``dropna=True`` for compat with the rest of pandas (we can of course discuss changing it).\r\n\r\nIn fact, you could make it ``dropna=None`` as a default, then it would be easy to change."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292341864",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292341864",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292341864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjM0MTg2NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T22:24:17Z",
    "updated_at": "2017-04-06T22:24:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "so a natural operation would be:\r\n\r\n```\r\ndf = ......\r\npd.get_dummies(df[column], dropna=False).fillna(-1)\r\n```\r\n\r\nis quite idiomatic."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292342586",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292342586",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292342586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjM0MjU4Ng==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T22:27:03Z",
    "updated_at": "2017-04-06T22:27:03Z",
    "author_association": "NONE",
    "body": "Hmmm dropna? The rows for the missing examples are not dropped, they are just all set to zero right now. \r\n\r\nThe closest thing I know of is fillna with values or something. \r\n\r\nHappy to change it ofc. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292355328",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292355328",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292355328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjM1NTMyOA==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T23:08:27Z",
    "updated_at": "2017-04-06T23:11:00Z",
    "author_association": "NONE",
    "body": "~~I found some example of dropna in the code base finally. This is very good suggestion. Let's go with that.~~"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292355838",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15923#issuecomment-292355838",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15923",
    "id": 292355838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjM1NTgzOA==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T23:10:16Z",
    "updated_at": "2017-04-06T23:10:16Z",
    "author_association": "NONE",
    "body": "Unfortunately this would have the weird side effect that some people would expect dropna=True to actually drop rows, which is weird for this transformation. \r\n\r\nI think this fact illustrates the way the current API is actually inconsistent.\r\n\r\nLet me know what you all would like to do."
  }
]
