[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/409452645",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22151#issuecomment-409452645",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22151",
    "id": 409452645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTQ1MjY0NQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T05:19:53Z",
    "updated_at": "2018-08-01T05:19:53Z",
    "author_association": "MEMBER",
    "body": "Does seem strange, though I'm fairly certain the preferred method of slicing here is:\r\n\r\n```python\r\ndf.loc[('2011', '01'), :]\r\n```\r\n\r\nwhich works. The docs are pretty explicit about need to [specify both axes](https://pandas.pydata.org/pandas-docs/stable/advanced.html#using-slicers).\r\n\r\nThat said there's likely a bug hidden here somewhere - investigation and PRs are always welcome.\r\n\r\ncc @toobaz "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/409457727",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22151#issuecomment-409457727",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22151",
    "id": 409457727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTQ1NzcyNw==",
    "user": {
      "login": "bfollinprm",
      "id": 6173196,
      "node_id": "MDQ6VXNlcjYxNzMxOTY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6173196?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfollinprm",
      "html_url": "https://github.com/bfollinprm",
      "followers_url": "https://api.github.com/users/bfollinprm/followers",
      "following_url": "https://api.github.com/users/bfollinprm/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfollinprm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfollinprm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfollinprm/subscriptions",
      "organizations_url": "https://api.github.com/users/bfollinprm/orgs",
      "repos_url": "https://api.github.com/users/bfollinprm/repos",
      "events_url": "https://api.github.com/users/bfollinprm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfollinprm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T05:54:15Z",
    "updated_at": "2018-08-01T06:46:30Z",
    "author_association": "NONE",
    "body": "The construction `df.loc[('2011', '01'), :]` is equivalent to `df.loc[('2011', '01')]`, which works but returns a \"series\"-like object, e.g. it has lost the index information. This is not quite equivalent to what `.loc[[idx]]` returns, e.g. `df.loc[[('2011', '01')],:]` returns the same ValueError. I'll update the description to include the column axis placeholder.\r\n\r\nThe solution is pretty simple actually (at least to get back to 0.22.0's functionality), in [pandas.core.indexes/multi.py](https://github.com/pandas-dev/pandas/blob/master/pandas/core/indexes/multi.py#L77) the size offset needs masked by the missing element in the tuple(s). For the example above, replacing line 77 with\r\n\r\n```\r\nif len(codes.shape) > 1:\r\n    # Check if querying multi-index, and reduce\r\n    offsets = self.offsets[codes.shape[1])\r\nelse:\r\n    offsets = self.offsets\r\n    codes <== offsets\r\n```\r\nis sufficient (of course, a similar change should propagate to the PyInt-version of the same class).\r\n\r\nI would raise as a PR, but work has strict rules around contributions to open source, and I've already tried unsuccessfully to get permission to contribute to pandas."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/409604989",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22151#issuecomment-409604989",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22151",
    "id": 409604989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTYwNDk4OQ==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T14:57:59Z",
    "updated_at": "2018-08-01T14:57:59Z",
    "author_association": "MEMBER",
    "body": "@bfollinprm Thanks for the report. I definitely agree this should work.\r\n\r\nI don't think the proposed fix is optimal however. ``_codes_to_int`` expects only complete combinations of codes, and I think it should not need to be more complicated than this. After all, when ``nlevels == 1``, or when you run the [example](https://github.com/pandas-dev/pandas/issues/22151#issuecomment-409452645) by @WillAyd , it works correctly - and the operations the engine does should be exactly the same. So this can and should be fixed somewhere else."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/409829704",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22151#issuecomment-409829704",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22151",
    "id": 409829704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTgyOTcwNA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-02T07:13:27Z",
    "updated_at": "2018-08-02T07:13:27Z",
    "author_association": "MEMBER",
    "body": "> After all, when nlevels == 1, or when you run the example by @WillAyd , it works correctly\r\n\r\nCorrecting myself: ``nlevels == 1`` does _not_ work correctly:\r\n\r\n```\r\nimport pandas as pd\r\ntuples = [\r\n    ('2011', '01'),\r\n    ('2011', '01'),\r\n    ('2011', '02'),\r\n    ('2011', '02'),\r\n    ('2012', '01'),\r\n    ('2012', '01'),\r\n    ('2012', '02'),\r\n    ('2012', '02'),    \r\n]\r\nindex = pd.MultiIndex.from_tuples(tuples)\r\ndf = pd.DataFrame({'a': list(range(8))}, index = index)\r\ndf.loc[[('2011', )], ] # raises ValueError\r\n```\r\n\r\n... but the example by @WillAyd does, so my argument should still stand."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410003947",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22151#issuecomment-410003947",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22151",
    "id": 410003947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDAwMzk0Nw==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-02T17:22:03Z",
    "updated_at": "2018-08-02T17:22:03Z",
    "author_association": "MEMBER",
    "body": "@bfollinprm did your example _really_ work with 0.22.0? With 0.19.2, I get\r\n```\r\nIn [2]: df.loc[[('2011', '01')], :]\r\nOut[2]: \r\n          a\r\n2011 01 NaN\r\n```\r\n... which is certainly not the desired behavior."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410162242",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22151#issuecomment-410162242",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22151",
    "id": 410162242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDE2MjI0Mg==",
    "user": {
      "login": "bfollinprm",
      "id": 6173196,
      "node_id": "MDQ6VXNlcjYxNzMxOTY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6173196?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfollinprm",
      "html_url": "https://github.com/bfollinprm",
      "followers_url": "https://api.github.com/users/bfollinprm/followers",
      "following_url": "https://api.github.com/users/bfollinprm/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfollinprm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfollinprm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfollinprm/subscriptions",
      "organizations_url": "https://api.github.com/users/bfollinprm/orgs",
      "repos_url": "https://api.github.com/users/bfollinprm/repos",
      "events_url": "https://api.github.com/users/bfollinprm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfollinprm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T06:52:37Z",
    "updated_at": "2018-08-03T07:08:31Z",
    "author_association": "NONE",
    "body": "Ah, you are right, this was buggy before--it gave the wrong result, but was silent about it.\r\n\r\nI didn't notice because the test code that was checking this was looping over all tuple lengths, but was only checking the values of the length 1 and length `index` queries. So I guess `ValueError` is an improvement, but I'm still of the opinion this should work.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410164612",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22151#issuecomment-410164612",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22151",
    "id": 410164612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDE2NDYxMg==",
    "user": {
      "login": "bfollinprm",
      "id": 6173196,
      "node_id": "MDQ6VXNlcjYxNzMxOTY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6173196?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfollinprm",
      "html_url": "https://github.com/bfollinprm",
      "followers_url": "https://api.github.com/users/bfollinprm/followers",
      "following_url": "https://api.github.com/users/bfollinprm/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfollinprm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfollinprm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfollinprm/subscriptions",
      "organizations_url": "https://api.github.com/users/bfollinprm/orgs",
      "repos_url": "https://api.github.com/users/bfollinprm/repos",
      "events_url": "https://api.github.com/users/bfollinprm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfollinprm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T07:04:27Z",
    "updated_at": "2018-08-03T07:05:32Z",
    "author_association": "NONE",
    "body": "The problem with the other signatures, e.g. @WillAyd's`df.loc[('2011', '01'), :]`, is that it returns a series and does not generalize to e.g. a list of indexes.\r\n\r\nThe following seems to give what I want:\r\n\r\n```\r\ntarget_indexes = [('2011', '02'), ('2011', '01')]\r\ntarget_to_position = df.index.get_locs(list(zip(*target_indexes)))\r\ndf.iloc[target_to_position]\r\n```\r\nSo there definitely is a way, but that's ugly."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410178732",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22151#issuecomment-410178732",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22151",
    "id": 410178732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDE3ODczMg==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T08:07:29Z",
    "updated_at": "2018-08-03T08:07:29Z",
    "author_association": "MEMBER",
    "body": "> The problem with the other signatures, e.g. @WillAyd'sdf.loc[('2011', '01'), :], is that it returns a series and does not generalize to e.g. a list of indexes.\r\n\r\nSure, I agree, my comment was only concerning the implementation. Since the current engine _can_ be used for the desired lookup, the problem is not there.\r\n\r\n> The following seems to give what I want:\r\n\r\nPlease correct me if I'm wrong, but given ``target_indexes = [('2011', '01'), ('2012', '02')]``, your snippet will also return ``('2011', '02', 1)``, which is not what you desire, and certainly not what ``df.loc[target_indexes, :]`` should return.\r\n\r\nThis said, I think the solution will be something similar to your snippet, the main difficulty being that it needs to account for both lists and dataframes to be returned by ``get_loc`` or similar, see #9519 ."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410315705",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22151#issuecomment-410315705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22151",
    "id": 410315705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDMxNTcwNQ==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T17:02:41Z",
    "updated_at": "2018-08-03T17:02:41Z",
    "author_association": "MEMBER",
    "body": "Duplicate of #16083 , @bfollinprm feel free to add there any further comment"
  }
]
