[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/167000386",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-167000386",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 167000386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzAwMDM4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-23T22:11:44Z",
    "updated_at": "2015-12-23T22:11:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @jorisvandenbossche @shoyer @sinhrks \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/167883643",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-167883643",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 167883643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzg4MzY0Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-29T21:42:05Z",
    "updated_at": "2015-12-29T21:42:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer if you can review when you have a chance. as you had a number of comments on the original.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/167920599",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-167920599",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 167920599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzkyMDU5OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-30T02:29:03Z",
    "updated_at": "2015-12-30T02:29:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer all fixed up\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168202533",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-168202533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 168202533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODIwMjUzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-31T14:17:22Z",
    "updated_at": "2015-12-31T14:17:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer ok updated.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168354581",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-168354581",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 168354581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODM1NDU4MQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-02T01:25:49Z",
    "updated_at": "2016-01-02T01:25:49Z",
    "author_association": "MEMBER",
    "body": "There are two aspects of the current design that I (still) don't like:\n- The `RangeIndex` constructor is flexible enough that it accepts `range` and `RangeIndex` arguments as the `start` argument. This seems too flexible to me. I would prefer a stricter approach that requires using an explicit constructor rather than overloading the meaning of `start`.\n- Sometimes, the `RangeIndex` constructor can create different types of indexes (e.g., if `dtype=object`). I don't see any good reason to allow this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168354710",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-168354710",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 168354710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODM1NDcxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-02T01:31:01Z",
    "updated_at": "2016-01-02T01:31:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "It can't actually create an `object` dtype `RangeIndex`, merely returning a regular `Index` that HAS `object` dtype. This really was for compat. Though its prob useless. ok I'll take though out.\n\nYour first point I think makes usage just that much more confusing. As a user I would expect:\n\n`Index(xrange(5))` to give me a `RangeIndex`, seems very natural and not a stretch to do this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168354733",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-168354733",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 168354733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODM1NDczMw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-02T01:32:07Z",
    "updated_at": "2016-01-02T01:32:07Z",
    "author_association": "MEMBER",
    "body": "> Index(xrange(5)) to give me a RangeIndex, seems very natural and not a stretch to do this.\n\nYes, this should work. But `RangeIndex(xrange(5))` should not.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168354793",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-168354793",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 168354793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODM1NDc5Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-02T01:34:13Z",
    "updated_at": "2016-01-02T01:34:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm, I also don't see why that should be special cased NOT to work. Its a valid constructor.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168354918",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-168354918",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 168354918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODM1NDkxOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-02T01:39:48Z",
    "updated_at": "2016-01-02T01:39:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer https://github.com/jreback/pandas/commit/3a53067b2a8c1cb943915010a28a5c619d515b82\n\nbut this makes this a bit specially cased, though:\n\nThis just silenty ignores.....hmm\n\n```\nIn [2]: pd.Int64Index([1,2,3],dtype=object)\nOut[2]: Int64Index([1, 2, 3], dtype='int64')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168981827",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-168981827",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 168981827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODk4MTgyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-05T11:59:58Z",
    "updated_at": "2016-01-05T11:59:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer @jorisvandenbossche \n\nfinal comments?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168982653",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-168982653",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 168982653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODk4MjY1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-05T12:05:27Z",
    "updated_at": "2016-01-05T12:05:27Z",
    "author_association": "MEMBER",
    "body": "Will try to look at this in the coming days as well. In any case, some more documentation will be needed I think (now it is not mentioned in the main docs, only in whatsnew)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168983691",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-168983691",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 168983691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODk4MzY5MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-05T12:10:35Z",
    "updated_at": "2016-01-05T12:10:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche that is on purpose. This is a complete replacement for `Int64Index` (which we don't document either, not that that is an excuse!).\n\nI think adding to API.rst is ok (for all index-types). We only touch briefly on `Float64Index`, `CategoricalIndex` in main docs as these have special indexing behavior.\n\nAgain I think that all of these _should_ be more fully documented. I'll add an issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168984440",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-168984440",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 168984440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODk4NDQ0MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-05T12:16:01Z",
    "updated_at": "2016-01-05T12:16:01Z",
    "author_association": "MEMBER",
    "body": "But then maybe adding a short section in advanced indexing (http://pandas-docs.github.io/pandas-docs-travis/advanced.html) like FloatIndex has there a section as well. Can largely be the same text as what is now in the whatsnew, but then instead of showing the difference between old and new behaviour, show the difference between explicitely making int64index vs default rangeindex. \nI would also add a small explanation on when this gets converted to a Int64Index\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168984581",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-168984581",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 168984581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODk4NDU4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-05T12:17:08Z",
    "updated_at": "2016-01-05T12:17:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep, just created #11962  for all of this \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170039789",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170039789",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170039789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDAzOTc4OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T16:01:04Z",
    "updated_at": "2016-01-08T16:01:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "any final comments?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170087206",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170087206",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170087206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDA4NzIwNg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T18:44:43Z",
    "updated_at": "2016-01-08T18:45:07Z",
    "author_association": "MEMBER",
    "body": "@jreback I'm still :-1: on this stuff in the `RangeIndex` constructor!\n\n``` python\n        # RangeIndex\n        if isinstance(start, RangeIndex):\n\n            if not copy:\n                return start\n            if name is None:\n                name = getattr(start, 'name', None)\n            start, stop, step = start.start, start.stop, start.step\n\n        # range\n        elif isinstance(start, range):\n\n            # seems we only have indexing ops to infer\n            # rather than direct accessors\n            if len(start) > 1:\n                step = start[1] - start[0]\n                stop = start[-1] + step\n                start = start[0]\n            elif len(start):\n                start = start[0]\n                stop = start + 1\n                step = 1\n            else:\n                start = stop = 0\n                step = 1\n\n        # pass thru to main constructor\n        elif isinstance(start, (Index, np.ndarray, ABCSeries)):\n            return Index(start, dtype=stop, copy=step, name=name, **kwargs)\n```\n\nSee my bulleted concerns about too much flexibility in the constructor above. Any other opinions here?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170087788",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170087788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170087788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDA4Nzc4OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T18:46:34Z",
    "updated_at": "2016-01-08T18:46:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I’m only about halfway through reviewing. I’ll have some more time to play with it tomorrow.\n\n-Tom\n\n> On Jan 8, 2016, at 12:44 PM, Stephan Hoyer notifications@github.com wrote:\n> \n> @jreback https://github.com/jreback I'm still  on this stuff in the RangeIndex constructor!\n> \n> ```\n>     # RangeIndex\n>     if isinstance(start, RangeIndex):\n> \n>         if not copy:\n>             return start\n>         if name is None:\n>             name = getattr(start, 'name', None)\n>         start, stop, step = start.start, start.stop, start.step\n> \n>     # range\n>     elif isinstance(start, range):\n> \n>         # seems we only have indexing ops to infer\n>         # rather than direct accessors\n>         if len(start) > 1:\n>             step = start[1] - start[0]\n>             stop = start[-1] + step\n>             start = start[0]\n>         elif len(start):\n>             start = start[0]\n>             stop = start + 1\n>             step = 1\n>         else:\n>             start = stop = 0\n>             step = 1\n> \n>     # pass thru to main constructor\n>     elif isinstance(start, (Index, np.ndarray, ABCSeries)):\n>         return Index(start, dtype=stop, copy=step, name=name, **kwargs)\n> ```\n> \n> See my bulleted concerns above. Any other opinions here?\n> \n> —\n> Reply to this email directly or view it on GitHub https://github.com/pydata/pandas/pull/11892#issuecomment-170087206.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170088211",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170088211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170088211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDA4ODIxMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T18:48:23Z",
    "updated_at": "2016-01-08T18:49:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer I get your comments. But this fits the existing API. I _could_ make a `RangeIndex.from_range(...)`, and simply call it here. this is very natural to do.\n\nare you arguing again accepting a `RangeIndex` in the `RangeIndex` constructor itself????\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170096142",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170096142",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170096142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDA5NjE0Mg==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T19:11:16Z",
    "updated_at": "2016-01-08T19:11:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think there may some benefit in making `list` works where `xrange` is accepted.  I'd expect, in P2, `RangeIndex(xrange(10))` and `RangeIndex(range(10))` to be the same, although the lazy version is  probably preferred.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170101081",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170101081",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170101081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDEwMTA4MQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T19:33:10Z",
    "updated_at": "2016-01-08T19:33:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Instead of the current main constructor (start, stop, & step), it could be a `Range` object. Then accepting a `RangeIndex` or list becomes less awkward.\nAnd you could have `RangeIndex.from_attributes(start, stop, step)` for the current construction\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170101764",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170101764",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170101764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDEwMTc2NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T19:36:22Z",
    "updated_at": "2016-01-08T19:36:22Z",
    "author_association": "MEMBER",
    "body": "A little bit usage feedback:\n- I find it a bit strange that list and array are handled differently:\n  \n  ```\n  In [17]: pd.RangeIndex([1,2,3])\n  TypeError: RangeIndex(...) must be called with integers, [1, 2, 3] was passed fo\n  r start\n  \n  In [18]: pd.RangeIndex(np.array([1,2,3]))\n  Out[18]: Int64Index([1, 2, 3], dtype='int64')\n  ```\n\nThis touches the point of @shoyer I think (the last part of the constructor code he mentioned) \n@jreback What is the reason that `Index, np.ndarray, ABCSeries` are passed through to the main constructor? \nAn example that not all other index objects are that flexible:\n\n```\nIn [58]: pd.Float64Index(np.array(['a', 'b']))\nTypeError: String dtype not supported, you may need to explicitly cast to a numeric type\n\nIn [59]: pd.RangeIndex(np.array(['a', 'b']))\nOut[59]: Index([u'a', u'b'], dtype='object')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170107371",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170107371",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170107371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDEwNzM3MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T19:58:03Z",
    "updated_at": "2016-01-08T19:58:03Z",
    "author_association": "MEMBER",
    "body": "One more comment on the `start`, `stop`, `step` attributes: I was wondering if it is a good idea to make these public. \nBecause, if somebody starts using these attributes, depending on the operations you do they will suddenly be not available anymore on the index and raise a ValueError, as you will not always notice when the RangeIndex gets converted to a Int64Index.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170111721",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170111721",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170111721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDExMTcyMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T20:14:05Z",
    "updated_at": "2016-01-08T20:14:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I _could_ hide the `start,stop,step` (as they are on `xrange`), though its kind of annoying (as a user of the object :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170112934",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170112934",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170112934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDExMjkzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T20:19:55Z",
    "updated_at": "2016-01-08T20:19:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "so @MaximilianR brings up a good point.\n\nI _could_ take a list-like of integers and if its monotonic & equal-stepped (easy test, but not completely for free). make it into a `RangeIndex`. I think this would clear up some of the API.\n\nThen `TypeError` or `ValueError` on non-supported (rather than deferring to `Index`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170117443",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170117443",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170117443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDExNzQ0Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T20:37:00Z",
    "updated_at": "2016-01-08T20:37:00Z",
    "author_association": "MEMBER",
    "body": "> I could take a list-like of integers and if its monotonic & equal-stepped (easy test, but not completely for free). make it into a RangeIndex. I think this would clear up some of the API.\n> Then TypeError or ValueError on non-supported (rather than deferring to Index)\n\nBut it would also make the constructor even more complex. What is the reason for not raising an Error in all these cases? Convenience for creating it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170117570",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170117570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170117570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDExNzU3MA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T20:37:22Z",
    "updated_at": "2016-01-08T20:37:22Z",
    "author_association": "MEMBER",
    "body": "I would like a stricter API -- one constructor for converting a `range` object and another for handling `start`/`stop`/`step`. It is not especially important to me which is which (so we could use @MaximilianR's alternative), but I think there is a good case to make the `RangeIndex` constructor handle `start`/`stop`/`step` because the generic `Index` constructor can already convert `range` objects.\n\nI am would lean against converting lists, even if we have a dedicated constructor for this path. It's not hard to type `xrange` via `range` on Python 2. It just makes things more complex than necessary.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170119364",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170119364",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170119364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDExOTM2NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T20:45:16Z",
    "updated_at": "2016-01-08T20:45:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm in agreement with @shoyer. And one more point in favor of `start/stop/step` as the main constructor: it would seem weird for a `range*` function/constructor to have a different signature than `(x)range / arange`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170119731",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170119731",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170119731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDExOTczMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T20:47:19Z",
    "updated_at": "2016-01-08T20:47:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "so what is the argument against allowing `start` be range (as we are currently doing). This is just an overloaded constructor, seems quite natural to me. Having to use a different factory doesn't gain you anything.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170121499",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170121499",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170121499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDEyMTQ5OQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T20:55:48Z",
    "updated_at": "2016-01-08T20:55:48Z",
    "author_association": "MEMBER",
    "body": "> so what is the argument against allowing start be range (as we are currently doing). This is just an overloaded constructor, seems quite natural to me. Having to use a different factory doesn't gain you anything.\n\nIt forces you to be explicit and code in a way that is more amenable to static analysis. These are both good things.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170122120",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11892#issuecomment-170122120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11892",
    "id": 170122120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDEyMjEyMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T20:58:40Z",
    "updated_at": "2016-01-08T20:58:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> It forces you to be explicit and code in a way that is more amenable to static analysis. These are both good things.\n\nnot true of pandas in general. This should be a conscious decision to break from the existing API flexibility. IMHO this quite in-line with the current functionaility.\n\nI don't see any reason NOT to allow this.\n"
  }
]
