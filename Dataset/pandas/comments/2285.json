[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11415374",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-11415374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 11415374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDE1Mzc0",
    "user": {
      "login": "paulproteus",
      "id": 25457,
      "node_id": "MDQ6VXNlcjI1NDU3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulproteus",
      "html_url": "https://github.com/paulproteus",
      "followers_url": "https://api.github.com/users/paulproteus/followers",
      "following_url": "https://api.github.com/users/paulproteus/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulproteus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulproteus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulproteus/subscriptions",
      "organizations_url": "https://api.github.com/users/paulproteus/orgs",
      "repos_url": "https://api.github.com/users/paulproteus/repos",
      "events_url": "https://api.github.com/users/paulproteus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulproteus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-16T08:04:20Z",
    "updated_at": "2012-12-16T08:04:20Z",
    "author_association": "NONE",
    "body": "It seems to me this would be a good ticket for a first-time contributor who is familiar with (or willing to learn about) regular expressions.\n\nYou could model your test case after the code at the Stack Overflow post that @changhiskhan linked to here.\n\nYou would presumably be modifying \"class DataFrame\" in pandas/core/frame.py by adding a method to it.\n\nIf it makes things more convenient, presumably your new method could insist that the regular expression that comes has already been compiled with re.compile, so that your function does not have to compile it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16296968",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-16296968",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 16296968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Mjk2OTY4",
    "user": {
      "login": "louist87",
      "id": 1422682,
      "node_id": "MDQ6VXNlcjE0MjI2ODI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1422682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/louist87",
      "html_url": "https://github.com/louist87",
      "followers_url": "https://api.github.com/users/louist87/followers",
      "following_url": "https://api.github.com/users/louist87/following{/other_user}",
      "gists_url": "https://api.github.com/users/louist87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/louist87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/louist87/subscriptions",
      "organizations_url": "https://api.github.com/users/louist87/orgs",
      "repos_url": "https://api.github.com/users/louist87/repos",
      "events_url": "https://api.github.com/users/louist87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/louist87/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-12T14:49:04Z",
    "updated_at": "2013-04-12T14:49:04Z",
    "author_association": "NONE",
    "body": "I would also be in favor of such a feature provided we can also pass exact matches as literals.  I have eyetracker data in ASCII file format in which missing values are indicated with the `'.'` string.\n\nI suggest `castna` as a method name since we're recasting certain values as another type.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16297317",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-16297317",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 16297317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Mjk3MzE3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-12T14:54:46Z",
    "updated_at": "2013-04-12T14:54:46Z",
    "author_association": "NONE",
    "body": "possibly https://github.com/pydata/pandas/pull/3276 would half do the job.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17728483",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17728483",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17728483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzI4NDgz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T15:56:03Z",
    "updated_at": "2013-05-10T15:56:03Z",
    "author_association": "MEMBER",
    "body": "I would be happy to implement this.\n\n@paulproteus regex compiles are so fast (a string of length 1000 compiles in < 1 us) that it's not really an issue, plus you can get the string via the `pattern` attr on the compiled regex.\n\n@louist87 A regular expression consisting of no metacharacters (escape metacharacters to match them) does exactly that. I think `castna` is a little misleading since `replace` works on non-NA values, probably accepting a regex in the `to_replace` argument is better.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17729287",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17729287",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17729287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzI5Mjg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T16:10:27Z",
    "updated_at": "2013-05-10T16:10:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud FYI replace exists in core/series and in the core/internals (right now)\nand do the same thing \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17730265",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17730265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17730265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzMwMjY1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T16:29:01Z",
    "updated_at": "2013-05-10T16:29:01Z",
    "author_association": "MEMBER",
    "body": "@jreback maybe better to wait until series-as-ndframe is merged before working on this? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17730387",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17730387",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17730387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzMwMzg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T16:31:25Z",
    "updated_at": "2013-05-10T16:32:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud up 2 you....series-as-ndframe is coming in 0.12 ...why don't you add to the core/internals/Block/replace....that way no wasted code.....(and do for 0.12),\n\nand if I recall...I didn't fix replace in series yet anyhow......so go ahead and do if you would like...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17731774",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17731774",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17731774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzMxNzc0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T16:58:12Z",
    "updated_at": "2013-05-10T16:58:12Z",
    "author_association": "MEMBER",
    "body": "Ok. Cool. This should only work on strings correct? For example passing the numeric token regexes from the tokenize module will not match anything unless that number is actually a string. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17732380",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17732380",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17732380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzMyMzgw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T17:10:01Z",
    "updated_at": "2013-05-10T17:10:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud I think it has to be a valid re.compileable expression (which i think stringifies)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17732466",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17732466",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17732466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzMyNDY2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T17:11:32Z",
    "updated_at": "2013-05-10T17:11:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually.....are we adding an argument for this? e.g. `regex=` otherwise how to determine when you want an actual replacement (as opposed to a re replacement)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17735236",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17735236",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17735236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzM1MjM2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T18:03:03Z",
    "updated_at": "2013-05-10T18:08:55Z",
    "author_association": "MEMBER",
    "body": "@jreback Ok hold on, I think I may be confused about something. Do we want to be able to pass a `dict`/`list` of regexes to essentially \"vectorize\" `re.sub`? In that case, another arg is prob the way 2 go. Or some `try..except` mania. That could be wrong, though. I haven't thought about it completely yet.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17735803",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17735803",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17735803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzM1ODAz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T18:13:48Z",
    "updated_at": "2013-05-10T18:13:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "my understanding may be wrong but isn't this something like\n\nreplace_expr -> value ?\nhow do u distinguish the replace_expr from a straight string \nor would u always do that?\n\nso 'foo' is and exact match but 'foo*' is the re\n\nI guess u could always do re matching\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17735908",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17735908",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17735908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzM1OTA4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T18:15:45Z",
    "updated_at": "2013-05-10T18:15:45Z",
    "author_association": "MEMBER",
    "body": "Always re matching was my thinking since straight strings are just special cases of regexes (in the most formal sense). Of course, once I actually start working on this things may change.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17735966",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17735966",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17735966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzM1OTY2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T18:16:35Z",
    "updated_at": "2013-05-10T18:16:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would make a dict/list always exact match (like now)\n\nI see the problem, if I pass the number 2 what do u match on the string 2?\nor match numbers == 2 ?\n\nyou could handle it by dtype\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17736398",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17736398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17736398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzM2Mzk4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T18:23:59Z",
    "updated_at": "2013-05-10T18:23:59Z",
    "author_association": "MEMBER",
    "body": "Right that was my orig. concern. Do we want regexes as replacement values as well? For example, I think the following is intuitive\n\n(ascii eyelink example from @louist87)\n\n``` python\ndf.replace({r'^\\s*\\.\\s*$': NaN})\n```\n\nBut what if the user wants to replace a `str` value based on the matched re? E.g.,\n\n``` python\ndf.replace({r'\\s*(\\w{2})(\\w{2})\\s*': r'\\1\\2'})\n```\n\nAdditionally, how should the empty match case be handled (this could come for free from pandas' convenient `None` handling)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17737811",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17737811",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17737811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzM3ODEx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T18:49:25Z",
    "updated_at": "2013-05-10T18:49:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "this makes sense (and if you can conditionally handle via different block dtypes), e.g. a re is only valid for ObjectBlocks, whereas you would only allow numeric replacements via Int/Float Block types (maybe punt Series replace for now as this gets tricky)\n\nYou can prob leave the Block.replace alone and just right a new one for the ObjectBlock (though you CAN putmask btw, if you know the values to replace)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17738432",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17738432",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17738432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzM4NDMy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T19:00:29Z",
    "updated_at": "2013-05-10T19:01:56Z",
    "author_association": "MEMBER",
    "body": "ok. will do. i had already started looking at object block replace :) since that sidesteps the issue of re's matching numeric types. well not sidesteps...but makes it easier\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17770278",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17770278",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17770278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzcwMjc4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T00:42:53Z",
    "updated_at": "2013-05-12T00:42:53Z",
    "author_association": "MEMBER",
    "body": "@jreback Are the keys of `df.blocks` subject to change?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17770339",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17770339",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17770339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzcwMzM5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T00:49:05Z",
    "updated_at": "2013-05-12T00:49:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "what do u mean?\n\nhow r u using it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17770349",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17770349",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17770349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzcwMzQ5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T00:50:01Z",
    "updated_at": "2013-05-12T00:50:01Z",
    "author_association": "MEMBER",
    "body": "sorry. nvm. preemptive.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17772893",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17772893",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17772893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzcyODkz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T05:24:29Z",
    "updated_at": "2013-05-12T05:37:10Z",
    "author_association": "MEMBER",
    "body": "Do we want to be able to match regexs on the columns similar to `df.filter`? If no, I can submit this pr tmrw. E.g.,\n\n``` python\ndf.replace({'\\w+\\.\\w+': nan}, {'\\w+\\.\\w+': 1})\n```\n\nI think this is probably a bad idea, after typing that out. However, something like\n\n``` python\ndf.replace({'\\w+\\.\\w+': {'to_replace_regex': nan}}) \n```\n\nwould be cool I think. This would mean get all the columns with names matching the first level of regexs then within those columns replace the values matching each inner dict's regexs. However, this will obviously take more time.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17776519",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17776519",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17776519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Nzc2NTE5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T11:32:59Z",
    "updated_at": "2013-05-12T11:32:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would not add the column matching, too much magic\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17783944",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17783944",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17783944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzgzOTQ0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T19:38:23Z",
    "updated_at": "2013-05-12T19:38:23Z",
    "author_association": "MEMBER",
    "body": "@jreback Can u give a description of what the **single `dict`** `replace` method is supposed to do?  For example, I could see that\n\n``` python\ndf.replace({'a': 'b'})\n```\n\nwill replace all occurrences of `'a'` with `'b'` _or_ it could raise an exception saying something about ambiguity and that you need to provide the `value` argument. For a `Series` with the same argument (`{'a': 'b'}`), the former is what's happening, which makes sense because there's no notion of columns in a `Series`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17784855",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17784855",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17784855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Nzg0ODU1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T20:35:51Z",
    "updated_at": "2013-05-12T20:37:03Z",
    "author_association": "MEMBER",
    "body": "I have another question. Hope this isn't too annoying. When should one use `make_block` as opposed to just copying the block and setting the `values` attribute (copying being dependent on the value of a possible `inplace` parameter)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17785199",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17785199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17785199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Nzg1MTk5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T20:57:40Z",
    "updated_at": "2013-05-12T20:57:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "almost always use make_block\n\nif u want to be a specific dtype pass the klass arg\notherwise it will be inferred (eg u don't know whether say you would have int or float\nso let it infer int)\n\nVery rarely do i set the values directly\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17785479",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17785479",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17785479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Nzg1NDc5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T21:14:41Z",
    "updated_at": "2013-05-12T21:15:08Z",
    "author_association": "MEMBER",
    "body": "FYI there is a possible back compat issue here with my implementation, since every string is now treated as a regex. For example, `df.replace('.', 'a')` will match _any_ character and replace it with `'a'`. Is this a huge problem? A way around it is to provide an argument that tells the method to interpret the string as a regex. @jreback had suggested this earlier.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17785709",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17785709",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17785709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Nzg1NzA5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T21:29:01Z",
    "updated_at": "2013-05-12T21:29:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think u could do a minimal validation and reject too general regexes\neg just a few where u raise ( or warn) or just document it, maybe is good enough\n\nunless u want to do string exact matching by default\nand maybe use /r'regex' to signal regexes?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17785761",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17785761",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17785761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Nzg1NzYx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T21:32:53Z",
    "updated_at": "2013-05-12T21:34:02Z",
    "author_association": "MEMBER",
    "body": "i think a `regex=True` argument and default to exact matching is probably the way to go for back compat.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17785933",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17785933",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17785933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Nzg1OTMz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T21:43:23Z",
    "updated_at": "2013-05-12T21:43:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes that sounds right\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17786742",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2285#issuecomment-17786742",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2285",
    "id": 17786742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Nzg2NzQy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T22:40:53Z",
    "updated_at": "2013-05-12T22:40:53Z",
    "author_association": "MEMBER",
    "body": "the docs for replace are going to be kind of a beast since there are so many ways to slice and dice here...\n"
  }
]
