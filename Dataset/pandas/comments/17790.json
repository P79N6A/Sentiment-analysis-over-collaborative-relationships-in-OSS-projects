[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334316031",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17790#issuecomment-334316031",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17790",
    "id": 334316031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDMxNjAzMQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T23:14:25Z",
    "updated_at": "2017-10-04T23:14:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "This would be great! This could potentially be a very small wrapper around a Turbodbc -> Arrow -> Pandas, if each of those paths already exist?\r\n\r\n(and Turbodbc doesn't have the same level of support as SQLAlchemy, so we'd need to keep that an option)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334319023",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17790#issuecomment-334319023",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17790",
    "id": 334319023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDMxOTAyMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T23:34:11Z",
    "updated_at": "2017-10-04T23:35:16Z",
    "author_association": "MEMBER",
    "body": "I actually just played with this last weekend, trying to get some idea of potential speed-up (as I am very enthusiastic about the potential!). \r\nA *very* basic implementation is just:\r\n\r\n```\r\ndef read_sql_turbo(query, conn):\r\n    cursor = conn.cursor()\r\n    cursor.execute(query)\r\n    res = cursor.fetchallarrow().to_pandas()\r\n    cursor.close()\r\n    return res\r\n```\r\n\r\nSo it would certainly be not that hard to add something (more expanded) like that as an optional engine. The nice thing is that arrow can take care of interpreting the data types (database types <-> pandas types), which is what we otherwise use sqlalchemy for.\r\n\r\nThe only downsides I noticed during my playing around (which are not necessarily reasons not to add this, as long as it is optional):\r\n\r\n- odbc drivers can actually be quite hard to install and configure (even on linux)\r\n- for postgres it does not really give a speedup (as also noted in there docs: http://turbodbc.readthedocs.io/en/latest/pages/databases/postgresql.html, and it's what I also saw in my own dummy benchmark)\r\n\r\n\r\nSide note: our current sql i/o functions are indeed using sqlalchemy, and can indeed by quite slow, but as far as I know this is not due to using sqlalchemy (because we are only using sqlalchemy core, not orm, which gives little overhead), but mainly due to slow actual database drivers (or config settings)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334322878",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17790#issuecomment-334322878",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17790",
    "id": 334322878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDMyMjg3OA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-05T00:01:14Z",
    "updated_at": "2017-10-05T00:01:14Z",
    "author_association": "MEMBER",
    "body": "In case it's interesting, I would like to build a native sqlite3->arrow reader, which should yield a pretty major speedup for the sqlite use case. Same for libpq. ODBC turns out to be a pretty heavy middleware -- vendors who have ODBC as the _only_ way to push data in and out have optimized things a lot, whereas postgres/sqlite have not (downside of OSS at times, I guess)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334385037",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17790#issuecomment-334385037",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17790",
    "id": 334385037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDM4NTAzNw==",
    "user": {
      "login": "MathMagique",
      "id": 8329826,
      "node_id": "MDQ6VXNlcjgzMjk4MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8329826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MathMagique",
      "html_url": "https://github.com/MathMagique",
      "followers_url": "https://api.github.com/users/MathMagique/followers",
      "following_url": "https://api.github.com/users/MathMagique/following{/other_user}",
      "gists_url": "https://api.github.com/users/MathMagique/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MathMagique/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MathMagique/subscriptions",
      "organizations_url": "https://api.github.com/users/MathMagique/orgs",
      "repos_url": "https://api.github.com/users/MathMagique/repos",
      "events_url": "https://api.github.com/users/MathMagique/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MathMagique/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-05T07:44:38Z",
    "updated_at": "2017-10-05T07:44:38Z",
    "author_association": "NONE",
    "body": "I never would have dared to open an issue like this ;-). I agree that the feature needs to be optional, seeing that ODBC is a mouthful to set up initially and ODBC driver performance varies heavily from implementation to implementation. Enforcing turbodbc would be unacceptable."
  }
]
