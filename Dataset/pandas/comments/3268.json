[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16020981",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-16020981",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 16020981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDIwOTgx",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-07T18:53:09Z",
    "updated_at": "2013-04-07T18:53:09Z",
    "author_association": "MEMBER",
    "body": "Much agreed and this would lead to a lot of code simplification in places. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16022016",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-16022016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 16022016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDIyMDE2",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-07T19:38:27Z",
    "updated_at": "2013-04-07T19:38:27Z",
    "author_association": "NONE",
    "body": "Great, glad you think so. Do you think this should be done as new stub methods \non Index, or should there really be a deeper unification of Index into MultiIndex at\nthe code level?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16023595",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-16023595",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 16023595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDIzNTk1",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-07T20:45:59Z",
    "updated_at": "2013-04-07T20:45:59Z",
    "author_association": "MEMBER",
    "body": "It would be great to do at a deeper level. Maybe needs to wait until after Index is made \"not an ndarray\" and we push the code to Cython. To do that we first need to fix the serialization / \"pickle problem\". \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24873045",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-24873045",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 24873045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODczMDQ1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T23:59:29Z",
    "updated_at": "2013-09-21T23:59:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner want to assign yourself?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24873219",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-24873219",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 24873219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODczMjE5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T00:08:56Z",
    "updated_at": "2013-09-22T00:08:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure. @wesm (or others) what do you mean by \"Maybe needs to wait until after Index is made 'not an ndarray' and we push code to Cython\"? Block Manager is still fundamentally using ndarray right?  If we're just thinking that the ndarray becomes the equivalent of the `_data` attribute of NDFrame, then I understand.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24873375",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-24873375",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 24873375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODczMzc1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T00:22:25Z",
    "updated_at": "2013-09-22T00:22:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner \n\nright now `Index` subclasses `FrozenNDarray` which is an `ndarray` subclass. The idea would be to do a has-a,similar to what we did with `Series`. So make the `Index` have an attribute, prob `_data` which holds the data. Would need to add _some_ compat methods and delegate other methods to `_data`.\n\nThe pickle problem is _solved_ same way as solved the `Series` problem (via `pickle_compat.py`, where we fake the read back class if needed and just recreate in the new scheme).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24873553",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-24873553",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 24873553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODczNTUz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T00:40:35Z",
    "updated_at": "2013-09-22T00:40:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback okay, that makes sense.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24873681",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-24873681",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 24873681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODczNjgx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T00:51:06Z",
    "updated_at": "2013-10-02T01:56:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just running through this in my head - is this what you'd expect @y-p or others?\n\n### Handling Levels and Labels\n\nAre you thinking that the outputted levels and labels are supposed to be equivalent? (given that MI levels appear to be sorted and labels are 0-indexed)?\n\n``` python\n>>> arr = [2, 3, 2, 7]\n>>> ind = Index(arr)\n>>> mi = MultiIndex.from_arrays([arr, [1, 1, 1, 1]])\n>>> assert all(mi.levels[0] == ind.levels[0])\n>>> assert all(mi.labels[0] == ind.labels[0])\n```\n\n``` python\n>>> ind = Index(list('abcde'))\n>>> ind.levels\n[['a', 'b', 'c', 'd', 'e']]\n>>> ind.labels\n[[0, 1, 2, 3, 4, 5]]\n```\n\nThis particularly applies when you have duplicates.\n\n``` python\n>>> ind = Index(list('abcaadec'))\n>>> ind.levels\n[['a', 'b', 'c', 'd', 'e']]\n>>> ind.labels\n[[0, 1, 2, 0, 0, 3, 4, 2]]\n```\n\nand for Int64Index, levels and labels may be the same\n\n``` python\n>>> ind = Index(range(10))\n>>> ind.levels\n[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]\n>>> ind.labels\n[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]\n```\n\nbut again, ambiguity with duplicates and ordering\n\n``` python\n>>> ind = Index([10, 0, 1, 2])\n>>> ind.levels\n[[0, 1, 2, 10]]\n>>> ind.labels\n[[3, 0, 1, 2]]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24873695",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-24873695",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 24873695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODczNjk1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T00:52:58Z",
    "updated_at": "2013-09-22T00:52:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner \nI would move this to the top of this issue (easier to see).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24873932",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-24873932",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 24873932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODczOTMy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T01:13:32Z",
    "updated_at": "2013-09-22T01:13:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I will, but can you tell me whether I'm right about how this should work? :P\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24874017",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-24874017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 24874017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODc0MDE3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T01:20:18Z",
    "updated_at": "2013-09-22T01:20:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think easiest way to do this would be to copy all/bunch of multi-index tests and just substitue an Index there to see what happens/breaks. the idea would be that from a duck perspective it would walk the same as far as methods go\n\n(which I think you have enumerated)\n\nI think levels/labels are wrong on an Index now, in that levels should be treated as if it has 1 level (but not the case now)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24874887",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-24874887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 24874887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODc0ODg3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T02:44:14Z",
    "updated_at": "2013-09-22T02:44:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback right, but question is about sorting... probably the stopgap solution is to roundtrip through MultiIndex constructor when `levels` and `labels` are asked for.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24880163",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-24880163",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 24880163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODgwMTYz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T11:14:23Z",
    "updated_at": "2013-09-22T11:14:23Z",
    "author_association": "NONE",
    "body": "what jeff said.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24882889",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-24882889",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 24882889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODgyODg5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T14:19:09Z",
    "updated_at": "2013-09-22T14:19:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner \n\nsorting doesn't matter with a single level, but IIRC the lexsort_depth checks take this into account\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26152675",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-26152675",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 26152675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTUyNjc1",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-11T16:51:33Z",
    "updated_at": "2013-10-11T16:51:33Z",
    "author_association": "MEMBER",
    "body": "I have long been of the opinion that Index and friends should not be ndarray subclasses (in particular: MultiIndex currently has a dummy empty array inside, that is a bad smell). I don't know if now is the right time to fix that fundamental design (ndarray subclass) but it might be soonish since Series is now no longer an ndarray.\n\nThe \"engine\" classes that are used internally in the Index classes could be easily consolidated to produce simplified Cython-implemented index classes that don't have the auxiliary engine objects and this would improve performance at a micro level overall (adding up to larger gains, hopefully) and simplify things considerably.\n\nStep 1 is having a consistent API between Index and MultiIndex as you guys have spelled out, but pushing much or all of the index code down into Cython (and consolidating the engine classes) would be a nice next step. I had planned to do this myself but ran out of bandwidth due to the running-a-startup thing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26174533",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-26174533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 26174533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTc0NTMz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-11T21:10:52Z",
    "updated_at": "2013-10-11T21:10:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@wesm - I'm 50-75% of the way through changing Index from ndarray subclass\nto object subclass with some delegation to ndarray. I was planning to unify\nthe API at the same time (since it'll be trivial at this point).  I was\nthinking that it would make sense to have MI integer levels be represented\nas a 2d array under the hood (easy to keep the public API with levels and\nlabels the same) - I think it would make more sense and seems like it would\nbe more straightforward when slicing on levels (slice of the MI only has to\nslice one ndarray, using xs to only look at one level means selecting a\nsubset of columns, stack/unstack also is more straightforward), though I'm\ndefinitely not as much of an expert on numpy as you and many of the other\ncore devs.\n\nAnyways, I will absolutely cede this to you if you want; otherwise this can\nbe a starting point (particularly in terms of ID'ing which points expect\nndarray vs. able to handle Index) in Python and then Cythonizing it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26187516",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-26187516",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 26187516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTg3NTE2",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-12T01:27:21Z",
    "updated_at": "2013-10-12T01:27:21Z",
    "author_association": "MEMBER",
    "body": "Okay that's excellent, glad to hear you're working on that. The other refactoring I wanted to make was to eliminate the creation of simple `range(i, j)` indexes (and therefore save a ton of memory). I got about 1 hour into doing that about a year ago (https://github.com/pydata/pandas/tree/range-index) and ran out of steam; it would be simpler to trash that work (look at it though, maybe!) and start over given that we're 4000 commits deeper into pandas development. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26187912",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-26187912",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 26187912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTg3OTEy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-12T01:39:02Z",
    "updated_at": "2013-10-12T01:39:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@wesm yeah I saw that - looked interesting - I'd imagine it would make lookups, slicing, etc. just some arithmetic, which is interesting.  I think once we've nailed down the Index interface, it should be pretty easy to do.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26187960",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-26187960",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 26187960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTg3OTYw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-12T01:40:28Z",
    "updated_at": "2013-10-12T01:40:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "related #939\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26187992",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-26187992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 26187992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTg3OTky",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-12T01:41:24Z",
    "updated_at": "2013-10-12T01:41:24Z",
    "author_association": "MEMBER",
    "body": "yeah. it will definitely yield speed and memory improvements throughout the codebase. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30198736",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-30198736",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 30198736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTk4NzM2",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-10T04:28:13Z",
    "updated_at": "2013-12-10T04:28:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner What's the current story with range index? #2420\n\nre. from_tuples, from_array, I wonder if an orient kwarg in the constructor would make more sense (same for MI).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30199544",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-30199544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 30199544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTk5NTQ0",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-10T04:52:20Z",
    "updated_at": "2013-12-10T04:52:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm working on it (was interviewing for the past two weeks+ so I basically\ndropped off the face of the earth) and I have some of the easy parts done.\n\nWhat do you mean by \"orient kwarg\"?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30200598",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-30200598",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 30200598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjAwNTk4",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-10T05:23:58Z",
    "updated_at": "2013-12-10T05:23:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "coool, was just checking to see if you wanted a hand.\n\nI meant like read_json and DataFrame.from_dict do, not sure if I take that back or not: it bugs me that MI constructor requires you to choose from (I think) confusing array/tuple, think orient is more descriptive/inline with others.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51462676",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-51462676",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 51462676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDYyNjc2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T12:05:11Z",
    "updated_at": "2014-08-07T12:05:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "after #7891 \ncc @immerrr\n\nsee @wesm comments above if you are interested in applying any of the micro optimizations\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/62372694",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-62372694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 62372694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzcyNjk0",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-10T11:35:25Z",
    "updated_at": "2014-11-10T11:52:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "How about adding `searchsorted` to the API?\n\n_UPD: and making it also work for `is_monotonical_decreasing`_\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/62375391",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-62375391",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 62375391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzc1Mzkx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-10T12:05:01Z",
    "updated_at": "2014-11-10T12:05:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@immerrr updated. Interesting in checking some of these off (what can do is do PR's and call this the master issue) ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/62382214",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-62382214",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 62382214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzgyMjE0",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-10T13:14:23Z",
    "updated_at": "2014-11-10T13:14:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yup, I'll keep this issue in mind when choosing the next direction.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346432144",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-346432144",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 346432144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQzMjE0NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T18:13:30Z",
    "updated_at": "2017-11-22T18:13:30Z",
    "author_association": "MEMBER",
    "body": "Some of these are pretty straightforward to implement.  If a `levels` property is added to `Index` that just returns `[self]`, then the following `MultiIndex` methods/properties are immediately valid in `Index`: `nlevels`, `levshape`, `_inferred_type_levels`, `_have_mixed_levels`, `_get_names`, `_reference_duplicate_name`, `equal_levels`.\r\n\r\nA few others can be patched with only minor ugliness: `from_product`, `reorder_levels`, `lexsort_depth`, `swaplevel`, `is_lexsorted`.\r\n\r\nTo go much further than that requires a `labels` attribute (or per #14443 transition to `codes` to match `CategoricalIndex`).  Maybe lazily categorize Index under the hood?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/357925936",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-357925936",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 357925936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzkyNTkzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T11:00:31Z",
    "updated_at": "2018-01-16T11:00:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Add in ``.levels`` to ``Index`` breaks a couple of easy-to-fix issues in pandas test suite, mainly checks like\r\n\r\n```\r\nif hasattr(idx, 'levels'):\r\n    # is a MI\r\n```\r\n\r\nshould change to\r\n```\r\nif idx.nlevels > 1:\r\n    # is a MI\r\n```\r\n\r\npatch\r\n\r\n```\r\ndiff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py\r\nindex a5949c62a..23279e3da 100644\r\n--- a/pandas/core/indexes/base.py\r\n+++ b/pandas/core/indexes/base.py\r\n@@ -1108,6 +1108,10 @@ class Index(IndexOpsMixin, PandasObject):\r\n     def nlevels(self):\r\n         return 1\r\n \r\n+    @property\r\n+    def levels(self):\r\n+        return [self]\r\n+\r\n     def _get_names(self):\r\n         return FrozenList((self.name, ))\r\n \r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450744996",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3268#issuecomment-450744996",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3268",
    "id": 450744996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDc0NDk5Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-01T17:30:08Z",
    "updated_at": "2019-01-01T17:30:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is mostly done. should open specific issues for non compliance here."
  }
]
