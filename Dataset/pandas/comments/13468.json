[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/226638637",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13468#issuecomment-226638637",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13468",
    "id": 226638637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjYzODYzNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-16T23:03:38Z",
    "updated_at": "2016-06-16T23:03:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "see discussion https://github.com/pydata/pandas/issues/13236\n\nshould be the same (eg Python types)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/328844029",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13468#issuecomment-328844029",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13468",
    "id": 328844029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg0NDAyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-12T12:54:23Z",
    "updated_at": "2017-09-12T12:54:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "so after #17491 \r\n[269] is also float.\r\n\r\nI think we could actually/should fix [260], but that's another item."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/328893837",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13468#issuecomment-328893837",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13468",
    "id": 328893837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg5MzgzNw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-12T15:43:47Z",
    "updated_at": "2017-09-12T15:43:47Z",
    "author_association": "MEMBER",
    "body": "Yes, I think this can actually be closed now, apart from a doc update to iterrows / itertuples to make it clear that it boxes to python / custom pandas types."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/328900627",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13468#issuecomment-328900627",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13468",
    "id": 328900627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODkwMDYyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-12T16:05:08Z",
    "updated_at": "2017-09-12T16:05:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "i think ok to keep open for now\r\n\r\nI want to fix the scalar getting as well (will reirose for that)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383631157",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13468#issuecomment-383631157",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13468",
    "id": 383631157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzYzMTE1Nw==",
    "user": {
      "login": "mitar",
      "id": 585279,
      "node_id": "MDQ6VXNlcjU4NTI3OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/585279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mitar",
      "html_url": "https://github.com/mitar",
      "followers_url": "https://api.github.com/users/mitar/followers",
      "following_url": "https://api.github.com/users/mitar/following{/other_user}",
      "gists_url": "https://api.github.com/users/mitar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mitar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mitar/subscriptions",
      "organizations_url": "https://api.github.com/users/mitar/orgs",
      "repos_url": "https://api.github.com/users/mitar/repos",
      "events_url": "https://api.github.com/users/mitar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mitar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-23T16:08:27Z",
    "updated_at": "2018-04-23T16:08:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "To fix `[260]` you can call `item` on the underlying numpy arrays the same as I am doing in #20796. So this seems to do the same thing as `tolist` does on whole array. So you could call `item` for each cell in a row, when constructing the result for `df.iloc[0]`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383634755",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13468#issuecomment-383634755",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13468",
    "id": 383634755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzYzNDc1NQ==",
    "user": {
      "login": "mitar",
      "id": 585279,
      "node_id": "MDQ6VXNlcjU4NTI3OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/585279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mitar",
      "html_url": "https://github.com/mitar",
      "followers_url": "https://api.github.com/users/mitar/followers",
      "following_url": "https://api.github.com/users/mitar/following{/other_user}",
      "gists_url": "https://api.github.com/users/mitar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mitar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mitar/subscriptions",
      "organizations_url": "https://api.github.com/users/mitar/orgs",
      "repos_url": "https://api.github.com/users/mitar/repos",
      "events_url": "https://api.github.com/users/mitar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mitar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-23T16:18:47Z",
    "updated_at": "2018-04-23T16:18:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is something strange going on here. Taking an example [from documentation](http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.iterrows.html):\r\n\r\n```\r\n>>> df = pd.DataFrame([[1, 1.5]], columns=['int', 'float'])\r\n>>> row = next(df.iterrows())[1]\r\n>>> row\r\nint      1.0\r\nfloat    1.5\r\nName: 0, dtype: float64\r\n>>> print(row['int'].dtype)\r\nfloat64\r\n```\r\n\r\nBut:\r\n\r\n```\r\n>>> df = pd.DataFrame([[1, 1.5, 'a']], columns=['int', 'float', 'str'])\r\n>>> row = next(df.iterrows())[1]\r\n>>> row\r\nint        1\r\nfloat    1.5\r\nstr        a\r\nName: 0, dtype: object\r\n>>> print(row['int'].dtype)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'int' object has no attribute 'dtype'\r\n```\r\n\r\nSo it seems conversion to Python types happens only if there is some `object` dtype present. Otherwise we get (and keep) numpy types, only upcast to a common dtype."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/387477516",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13468#issuecomment-387477516",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13468",
    "id": 387477516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzQ3NzUxNg==",
    "user": {
      "login": "bscheetz",
      "id": 8943045,
      "node_id": "MDQ6VXNlcjg5NDMwNDU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8943045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bscheetz",
      "html_url": "https://github.com/bscheetz",
      "followers_url": "https://api.github.com/users/bscheetz/followers",
      "following_url": "https://api.github.com/users/bscheetz/following{/other_user}",
      "gists_url": "https://api.github.com/users/bscheetz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bscheetz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bscheetz/subscriptions",
      "organizations_url": "https://api.github.com/users/bscheetz/orgs",
      "repos_url": "https://api.github.com/users/bscheetz/repos",
      "events_url": "https://api.github.com/users/bscheetz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bscheetz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T17:21:28Z",
    "updated_at": "2018-05-08T17:21:28Z",
    "author_association": "NONE",
    "body": "@jreback In the first example posted by @mitar, python type int should be returned because we're iterating, correct?\r\n\r\nIt also sounds like we want to fix the type returned by `iloc` - should return python type int but instead returns numpy.int64 "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/388310199",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13468#issuecomment-388310199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13468",
    "id": 388310199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODMxMDE5OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-11T09:20:07Z",
    "updated_at": "2018-05-11T09:20:07Z",
    "author_association": "MEMBER",
    "body": "> @jreback In the first example posted by @mitar, python type int should be returned because we're iterating, correct?\r\n\r\nI don't think so, as in that example there are only numeric dtypes, so it makes sense to keep the row / Series as float dtype. \r\nAnd if we do that, this boils down to the fact that accessing a single element from a numerical Series gives a numpy scalar type (`type(pd.Series([1.0, 2.0])[0]) == np.float64`)\r\n\r\nI agree it is a bit confusing that it depends on whether there is a string column or not. But I think the dtype of the resulting Series of float vs object makes sense."
  }
]
