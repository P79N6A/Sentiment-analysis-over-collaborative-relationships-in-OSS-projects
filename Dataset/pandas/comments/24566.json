[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450962336",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24566#issuecomment-450962336",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24566",
    "id": 450962336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDk2MjMzNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T19:37:32Z",
    "updated_at": "2019-01-02T19:39:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd probably support this, but would need to think things through a bit more :) The different meaning of freq between period and timedelta / datetime is quite confusing.\r\n\r\nAdditionally\r\n\r\n1. There's a (perhaps surprising) performance penalty to specifying `freq` when *creating* the new array. It's hard to say in the abstract whether downstream operations would benefit from it.\r\n2. It's hard to know when operations should invalidate / re-infer the freq (https://github.com/pandas-dev/pandas/issues/24555)\r\n\r\nThinking more though, those apply equally to the index classes, and I suppose that freq would not be deprecated there (nor would we want to?)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451137472",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24566#issuecomment-451137472",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24566",
    "id": 451137472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTEzNzQ3Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-03T13:05:44Z",
    "updated_at": "2019-01-03T13:05:44Z",
    "author_association": "MEMBER",
    "body": "The idea would be that `freq` is then a cached attribute on DatetimeIndex/TimedeltaIndex, just like it has other cached attributes (`is_unique`, ..) ?\r\n\r\nSome use cases of `freq` is in timeseries are resampling operations and plotting. For both of these, it would be useful to cache the freq to avoid recomputing it (but also a way to never have to compute it, if a regular DatetimeIndex is created)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451138162",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24566#issuecomment-451138162",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24566",
    "id": 451138162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTEzODE2Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-03T13:08:47Z",
    "updated_at": "2019-01-03T13:08:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "In theory, I suppose it could be cached on DatetimeArray/TimedeltaArray as well? I believe that `__setitem__` is the only method that mutates inplace, and we already invalidate the freq there."
  }
]
