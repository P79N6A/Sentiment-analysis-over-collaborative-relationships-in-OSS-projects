[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250133745",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14314#issuecomment-250133745",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14314",
    "id": 250133745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDEzMzc0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T10:47:14Z",
    "updated_at": "2016-09-28T10:47:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "your link is broken. pls post a reproducible example with `pd.show_versions()`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250141943",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14314#issuecomment-250141943",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14314",
    "id": 250141943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDE0MTk0Mw==",
    "user": {
      "login": "stockersky",
      "id": 22478549,
      "node_id": "MDQ6VXNlcjIyNDc4NTQ5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/22478549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stockersky",
      "html_url": "https://github.com/stockersky",
      "followers_url": "https://api.github.com/users/stockersky/followers",
      "following_url": "https://api.github.com/users/stockersky/following{/other_user}",
      "gists_url": "https://api.github.com/users/stockersky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stockersky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stockersky/subscriptions",
      "organizations_url": "https://api.github.com/users/stockersky/orgs",
      "repos_url": "https://api.github.com/users/stockersky/repos",
      "events_url": "https://api.github.com/users/stockersky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stockersky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T11:32:59Z",
    "updated_at": "2016-09-28T11:32:59Z",
    "author_association": "NONE",
    "body": "Link is fixed and version information is appended to my first post.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250153594",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14314#issuecomment-250153594",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14314",
    "id": 250153594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDE1MzU5NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T12:33:34Z",
    "updated_at": "2016-09-28T12:33:34Z",
    "author_association": "MEMBER",
    "body": "`read_sql_query` just gets result sets back, without any column type information. If you use the `read_sql_table` functions, there it uses the column type information through SQLAlchemy. \n\nHowever, I would think pandas should be able to handle the missing values. Because something like this happens:\n\n```\nIn [6]: records = [(1, datetime.datetime(2012,1,1,9)), (2, None)]\n\nIn [7]: pd.DataFrame.from_records(records)\nOut[7]: \n   0                   1\n0  1 2012-01-01 09:00:00\n1  2                 NaT\n\nIn [8]: pd.DataFrame.from_records(records).dtypes\nOut[8]: \n0             int64\n1    datetime64[ns]\ndtype: object\n```\n\nWould have to dig further to see why you are getting object dtype when there are missing values.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250450080",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14314#issuecomment-250450080",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14314",
    "id": 250450080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDQ1MDA4MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T12:18:28Z",
    "updated_at": "2016-09-29T12:19:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Better example from https://github.com/pydata/pandas/issues/14319 (not datetime, but same general issue of `read_sql_query` getting type info from the database):\n\n``` python\nfrom sqlalchemy import create_engine\nimport pandas as pd\n\nengine = create_engine('sqlite://')\nconn = engine.connect()\nconn.execute(\"create table test (a float)\")\nfor _ in range(5):\n    conn.execute(\"insert into test values (NULL)\")\n\ndf = pd.read_sql_query(\"select * from test\", engine, coerce_float=True)\nprint(df.a)\n```\n\n```\nIn [10]: df.a\nOut[10]:\n0    None\n1    None\n2    None\n3    None\n4    None\nName: a, dtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250526916",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14314#issuecomment-250526916",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14314",
    "id": 250526916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDUyNjkxNg==",
    "user": {
      "login": "stockersky",
      "id": 22478549,
      "node_id": "MDQ6VXNlcjIyNDc4NTQ5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/22478549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stockersky",
      "html_url": "https://github.com/stockersky",
      "followers_url": "https://api.github.com/users/stockersky/followers",
      "following_url": "https://api.github.com/users/stockersky/following{/other_user}",
      "gists_url": "https://api.github.com/users/stockersky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stockersky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stockersky/subscriptions",
      "organizations_url": "https://api.github.com/users/stockersky/orgs",
      "repos_url": "https://api.github.com/users/stockersky/repos",
      "events_url": "https://api.github.com/users/stockersky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stockersky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T16:57:31Z",
    "updated_at": "2016-09-29T17:01:03Z",
    "author_association": "NONE",
    "body": "Here is an example with integers being detected as float while querying the oracle database :\n\nOracle clearly describe the 'THA_ID', 'TYA_ID', 'DOA_ID'  fields being an integer :\n\n```\nNom                           NULL     Type          \n----------------------------- -------- ------------- \nACP_ID                        NOT NULL NUMBER(10)    \nPAR_ID                        NOT NULL NUMBER(10)    \nTHA_ID                                 NUMBER(10)    \nTYA_ID                                 NUMBER(10) \nDOA_ID                                 NUMBER(10) \n```\n\n```\nrequete = 'select * from ACTION_PARTENAIRE where rownum < 100'\ndf = pd.read_sql_query(requete, engine)\n\ndf.dtypes\n\nacp_id                                    int64\npar_id                                    int64\ntha_id                                  float64\ntya_id                                  float64\ndoa_id                                  float64\n\n\n```\n\nThose fields don't have a NOT NULL constraint...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250545168",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14314#issuecomment-250545168",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14314",
    "id": 250545168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDU0NTE2OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T18:05:38Z",
    "updated_at": "2016-09-29T18:05:38Z",
    "author_association": "MEMBER",
    "body": "@Stockersky The dtype in pandas does not depend on the column types in the sql database when using `read_sql_query`. That you get float64 dtype, that will probably mean that those columns actually _do_ contain missing values. And since pandas cannot represent missing values in integer column, you get a float column.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250555712",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14314#issuecomment-250555712",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14314",
    "id": 250555712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDU1NTcxMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T18:44:31Z",
    "updated_at": "2016-09-29T18:44:31Z",
    "author_association": "MEMBER",
    "body": "@Stockersky Here is an example where I show that a missing value in a datetime column does not necessarily lead to a change in the dtype of the resulting dataframe: http://nbviewer.jupyter.org/gist/jorisvandenbossche/ef55675d25296d741726a20adf85211f \nCan you give a bit more information about your case to see what it goes wrong? Does a simple example like the above also fail for you?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250756264",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14314#issuecomment-250756264",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14314",
    "id": 250756264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDc1NjI2NA==",
    "user": {
      "login": "stockersky",
      "id": 22478549,
      "node_id": "MDQ6VXNlcjIyNDc4NTQ5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/22478549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stockersky",
      "html_url": "https://github.com/stockersky",
      "followers_url": "https://api.github.com/users/stockersky/followers",
      "following_url": "https://api.github.com/users/stockersky/following{/other_user}",
      "gists_url": "https://api.github.com/users/stockersky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stockersky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stockersky/subscriptions",
      "organizations_url": "https://api.github.com/users/stockersky/orgs",
      "repos_url": "https://api.github.com/users/stockersky/repos",
      "events_url": "https://api.github.com/users/stockersky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stockersky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T14:19:04Z",
    "updated_at": "2016-09-30T17:09:03Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche Thanks for spending time on this issue.\n\nAbout the  missing value in a datetime column, I have run some more tests and found an interesting behaviour : \n- if the **first two** records have the same field with missing value : pandas detects datetime type correctly,\n- if the **first three** records have the same field with missing value : pandas fails to detect datetime type.\n\nexample : \n\nthis succeeds (type is np.datetime64) : \n\n```\n    doi_date_decision\n0   None\n1   None\n2   2013-09-11 00:00:00\n3   2013-09-11 00:00:00\n```\n\nthis fails (type is object) : \n\n```\n    doi_date_decision\n0   None\n1   None\n2   None\n3   2013-09-11 00:00:00\n```\n\nIt seems like pandas pickups a sample of the result (first three records?) to set types....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/265780933",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14314#issuecomment-265780933",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14314",
    "id": 265780933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTc4MDkzMw==",
    "user": {
      "login": "stockersky",
      "id": 22478549,
      "node_id": "MDQ6VXNlcjIyNDc4NTQ5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/22478549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stockersky",
      "html_url": "https://github.com/stockersky",
      "followers_url": "https://api.github.com/users/stockersky/followers",
      "following_url": "https://api.github.com/users/stockersky/following{/other_user}",
      "gists_url": "https://api.github.com/users/stockersky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stockersky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stockersky/subscriptions",
      "organizations_url": "https://api.github.com/users/stockersky/orgs",
      "repos_url": "https://api.github.com/users/stockersky/repos",
      "events_url": "https://api.github.com/users/stockersky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stockersky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-08T16:15:55Z",
    "updated_at": "2016-12-08T16:19:00Z",
    "author_association": "NONE",
    "body": "I confirm with a exemple : if you have more than 2 missing values at the beginning of your dataframe column, then Pandas miss type detection.\r\n\r\nHere is a gist based on the one proposed by @jorisvandenbossche showing this behaviour :\r\nhttp://nbviewer.jupyter.org/gist/Stockersky/555760946ebf7fe04c879d6083f84de6\r\n\r\nOnly two missing values: type detection works. But one more missing value and it fails..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/267309098",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14314#issuecomment-267309098",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14314",
    "id": 267309098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzMwOTA5OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-15T11:47:36Z",
    "updated_at": "2016-12-15T11:47:36Z",
    "author_association": "MEMBER",
    "body": "@Stockersky That observation indeed seems correct. Also without using the sql code, you see the same:\r\n\r\n```\r\nIn [10]: records1 = [(1, None), (2, None), (3, datetime.datetime(2012,1,1,9))]\r\n\r\nIn [11]: pd.DataFrame.from_records(records1)\r\nOut[11]: \r\n   0                   1\r\n0  1                 NaT\r\n1  2                 NaT\r\n2  3 2012-01-01 09:00:00\r\n\r\nIn [12]: pd.DataFrame.from_records(records1).dtypes\r\nOut[12]: \r\n0             int64\r\n1    datetime64[ns]\r\ndtype: object\r\n\r\nIn [13]: records2 = [(1, None), (2, None), (3, None), (4, datetime.datetime(2012,1,1,9))]\r\n\r\nIn [14]: pd.DataFrame.from_records(records2)\r\nOut[14]: \r\n   0                    1\r\n0  1                 None\r\n1  2                 None\r\n2  3                 None\r\n3  4  2012-01-01 09:00:00\r\n\r\nIn [15]: pd.DataFrame.from_records(records2).dtypes\r\nOut[15]: \r\n0     int64\r\n1    object\r\ndtype: object\r\n\r\nIn [16]: pd.DataFrame(records2).dtypes\r\nOut[16]: \r\n0     int64\r\n1    object\r\ndtype: object\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/267321556",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14314#issuecomment-267321556",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14314",
    "id": 267321556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzMyMTU1Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-15T12:59:06Z",
    "updated_at": "2016-12-15T12:59:06Z",
    "author_association": "MEMBER",
    "body": "The underlying code does indeed check the first 3 items: https://github.com/pandas-dev/pandas/blob/49e3137a0dbb4458e98d3e94d76b80ec8a390793/pandas/types/cast.py#L742\r\n\r\n@jreback Are there ways to workaround this? Or settle with the fact that the user can do the conversion to datetime manually after he/she gets the result?"
  }
]
