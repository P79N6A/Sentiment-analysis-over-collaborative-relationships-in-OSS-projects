[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20797831",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-20797831",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 20797831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzk3ODMx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-11T08:40:47Z",
    "updated_at": "2013-07-11T08:40:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc #2754  @danielballan @jreback \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20808301",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-20808301",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 20808301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODA4MzAx",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-11T12:47:06Z",
    "updated_at": "2013-07-11T12:47:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@simomo Can you include a test demonstrating expected behavior? See pandas/io/tests/test_sql.py for examples.\n\nAlso, of course including `None` requires the `object` dtype. Does this come with a performance cost? @jreback?\n\n```\nIn [30]: frame\nOut[30]: \n   0         1\n0  2       NaN\n1  3 -1.029046\n\nIn [31]: frame.dtypes\nOut[31]: \n0      int64\n1    float64\ndtype: object\n\nIn [32]: frame.where(pd.notnull(frame), None).dtypes\nOut[32]: \n0     int64\n1    object\ndtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20809578",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-20809578",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 20809578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODA5NTc4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-11T13:10:40Z",
    "updated_at": "2013-07-11T13:10:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is quite complicated and shouldn't be done this way. The main issue is different reprs for datetime/non-datetime. There are better ways of doing this (these are internal routines), e.g. see `core/format.py/CSVFormatter/_save_chunk`. This has to do with how things are converted/passed to SQL, e.g. whether they need to be stringfied or not.\n\nYou are going to need to segregate by block type, then convert or (not-convert) as needed, substituting appropriate 'null' sentinals (which might be different for different flavors?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20811399",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-20811399",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 20811399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODExMzk5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-11T13:34:10Z",
    "updated_at": "2013-07-11T13:34:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Why is it necessary to have different sentinals for NaN and NaT?\n\n(I agree this should be done on write/like _save_chunk...)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20811522",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-20811522",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 20811522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODExNTIy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-11T13:36:13Z",
    "updated_at": "2013-07-11T13:36:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Its not _necessary_ per se, but I suspect that the different SQL have different sentials (if `None` works for everything then great)....\n\nfor perf though...this may need to be optimized\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20811961",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-20811961",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 20811961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODExOTYx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-11T13:43:07Z",
    "updated_at": "2013-07-11T13:43:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Idea being to abstract problem of None to SQLAlchemy, assuming it Just Works<sup>TM</sup>. Which I thought was kind of the point of it... \n\nYeah, perf could be an issue - in which case we'll end up writing a load of platform specific stuff? :s\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20812130",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-20812130",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 20812130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODEyMTMw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-11T13:45:33Z",
    "updated_at": "2013-07-11T13:45:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not sure what perf diff will be, just have to profile it. You might simply want to something like:\n\n```\nvalues = df.values.astype(object)\nvalues[pd.isnull(df)] = None\n```\n\nprob should work and be pretty fast (not 100% sure what this will do to dates though)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20812163",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-20812163",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 20812163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODEyMTYz",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-11T13:46:07Z",
    "updated_at": "2013-07-11T13:46:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://stackoverflow.com/questions/5401455/is-there-a-database-independent-way-with-sqlalchemy-to-query-filtered-by-none\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20812469",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-20812469",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 20812469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODEyNDY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-11T13:50:48Z",
    "updated_at": "2013-07-11T13:50:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you are going to have to do specific backend specific conversions (mostly on NaN/None, but also datetimes). IIRC mysql stores dates as strings? though some of this may be converted from datestimes\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20812681",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-20812681",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 20812681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODEyNjgx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-11T13:54:18Z",
    "updated_at": "2013-07-11T13:54:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@danielballan do we care how it's stored... provided the roundtrip works (and probably also that the dtype is sensible) is all good...?\n\nDo we need to know in order to query (for None)? Can't SQLAlchemy compile your query in a clever way (worrying about the platform specific bit), maybe I've got it totally wrong?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20813577",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-20813577",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 20813577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODEzNTc3",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-11T14:07:24Z",
    "updated_at": "2013-07-11T14:07:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "No, I don't think we care. The second comment on the SO question is troubling, or at least confusing to me. I think all flavors of SQL just have NULL, and we'll want those to ultimately come out as np.nan. Certainty not 'NaN'.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20814057",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-20814057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 20814057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODE0MDU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-11T14:14:11Z",
    "updated_at": "2013-07-11T14:14:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@danielballan you will for sure need to do type conversions on the readback, e.g. make sure dates are correct (you can just use `convert_objects(convert_dates='coerce')`\n\nyou also may want to do `convert_objects(convert_numeric=True)` on the numeric columns (may only be necessary depending on how results are returned)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21295286",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-21295286",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 21295286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjk1Mjg2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-20T15:32:12Z",
    "updated_at": "2013-07-20T15:32:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "related to #4163\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24284970",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-24284970",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 24284970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjg0OTcw",
    "user": {
      "login": "stared",
      "id": 1001610,
      "node_id": "MDQ6VXNlcjEwMDE2MTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1001610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stared",
      "html_url": "https://github.com/stared",
      "followers_url": "https://api.github.com/users/stared/followers",
      "following_url": "https://api.github.com/users/stared/following{/other_user}",
      "gists_url": "https://api.github.com/users/stared/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stared/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stared/subscriptions",
      "organizations_url": "https://api.github.com/users/stared/orgs",
      "repos_url": "https://api.github.com/users/stared/repos",
      "events_url": "https://api.github.com/users/stared/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stared/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-11T23:39:56Z",
    "updated_at": "2013-09-12T00:09:59Z",
    "author_association": "NONE",
    "body": "Filling NaN with None:\n\n```\ndf['col1'].fillna(None)\n```\n\nproduces an error:\n\n```\nValueError: must specify a fill method or value\n```\n\nIs it the same bug as reported in this thread?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24285245",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-24285245",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 24285245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjg1MjQ1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-11T23:46:34Z",
    "updated_at": "2013-09-11T23:46:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@stared what are you trying to do?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24286142",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-24286142",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 24286142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjg2MTQy",
    "user": {
      "login": "stared",
      "id": 1001610,
      "node_id": "MDQ6VXNlcjEwMDE2MTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1001610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stared",
      "html_url": "https://github.com/stared",
      "followers_url": "https://api.github.com/users/stared/followers",
      "following_url": "https://api.github.com/users/stared/following{/other_user}",
      "gists_url": "https://api.github.com/users/stared/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stared/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stared/subscriptions",
      "organizations_url": "https://api.github.com/users/stared/orgs",
      "repos_url": "https://api.github.com/users/stared/repos",
      "events_url": "https://api.github.com/users/stared/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stared/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T00:09:35Z",
    "updated_at": "2013-09-12T00:10:40Z",
    "author_association": "NONE",
    "body": "@jreback Convert `np.nan` fields to `None` values (for `dtype=object`, of course).\n\nAt the same time I _can_ do (i.e. there is no error):\n\n```\ndf['col1'].apply(lambda x: None if pd.isnull(x) else x)\n```\n\nwhich seems to be equivalent to:\n\n```\ndf['col1'].fillna(None)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24286291",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-24286291",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 24286291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjg2Mjkx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T00:12:50Z",
    "updated_at": "2013-09-12T00:12:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@stared \n\nwell aside fro the apply be MUCH slower, fillna also does dtype infererence.\n\nI meant what is your purpose in doing this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24286628",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-24286628",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 24286628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjg2NjI4",
    "user": {
      "login": "stared",
      "id": 1001610,
      "node_id": "MDQ6VXNlcjEwMDE2MTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1001610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stared",
      "html_url": "https://github.com/stared",
      "followers_url": "https://api.github.com/users/stared/followers",
      "following_url": "https://api.github.com/users/stared/following{/other_user}",
      "gists_url": "https://api.github.com/users/stared/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stared/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stared/subscriptions",
      "organizations_url": "https://api.github.com/users/stared/orgs",
      "repos_url": "https://api.github.com/users/stared/repos",
      "events_url": "https://api.github.com/users/stared/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stared/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T00:21:52Z",
    "updated_at": "2013-09-12T00:21:52Z",
    "author_association": "NONE",
    "body": "@jreback I am performing an outer join of two tables, so I am getting `np.nan`s.\nLater I am using this data to interact with MongoDB and I want to have `None` for missing fields. (I don't want to make conversions each time when I read from or write to the database.)\n\nBTW: Why `apply` is much slower? Or, in general, for mapping columns what should be used? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24286744",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-24286744",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 24286744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjg2NzQ0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T00:24:33Z",
    "updated_at": "2013-09-12T00:24:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "ahh...then this is the _same_ issue (has to do with exporting `np.nan` -> `None`, or the appropriate if say its `NaT`)\n\nwell, `apply` is not vectorized so you should do that if at all possible; fillna is cython based so pretty fast.\n\n`apply` is very general though\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24286794",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-24286794",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 24286794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjg2Nzk0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T00:25:37Z",
    "updated_at": "2013-09-12T00:26:09Z",
    "author_association": "MEMBER",
    "body": "@stared `apply` will be much slower than most (all?) ops that are built into `pandas` already. E.g., `fillna` does a specific thing so it doesn't need to accept an arbitrary Python function like `apply` does. It is there free to use whatever `numpy` and maybe Cython is available to do its job. `apply` must be very general and slow it is going to be slow.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25307085",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4200#issuecomment-25307085",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4200",
    "id": 25307085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzA3MDg1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-28T19:45:25Z",
    "updated_at": "2013-09-28T19:45:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd I believe you are going to do this as part of big SQL refactor (and its already linked), so closing\n"
  }
]
