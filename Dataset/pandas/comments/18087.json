[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341634964",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-341634964",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 341634964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTYzNDk2NA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-03T07:15:58Z",
    "updated_at": "2017-11-03T07:15:58Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=h1) Report\n> Merging [#18087](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/b4375bde87afdc037056ff90e4f93b606c76e140?src=pr&el=desc) will **decrease** coverage by `0.04%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18087/graphs/tree.svg?height=150&width=650&token=eZ4WkYLtcO&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18087      +/-   ##\n==========================================\n- Coverage   91.27%   91.23%   -0.05%     \n==========================================\n  Files         163      163              \n  Lines       50120    50120              \n==========================================\n- Hits        45749    45728      -21     \n- Misses       4371     4392      +21\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.04% <ø> (-0.03%)` | :arrow_down: |\n| #single | `40.32% <ø> (-0.06%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `100% <ø> (ø)` | :arrow_up: |\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `25% <0%> (-58.34%)` | :arrow_down: |\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `63.38% <0%> (-1.82%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.75% <0%> (-0.1%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=footer). Last update [b4375bd...ac69b46](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341634979",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-341634979",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 341634979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTYzNDk3OQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-03T07:16:06Z",
    "updated_at": "2017-11-15T05:57:15Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=h1) Report\n> Merging [#18087](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/148ed63f9287cc55f7a2802da300b717d01cabe6?src=pr&el=desc) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18087/graphs/tree.svg?height=150&width=650&token=eZ4WkYLtcO&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18087      +/-   ##\n==========================================\n- Coverage    91.4%   91.38%   -0.02%     \n==========================================\n  Files         164      164              \n  Lines       49880    49880              \n==========================================\n- Hits        45592    45583       -9     \n- Misses       4288     4297       +9\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.19% <ø> (ø)` | :arrow_up: |\n| #single | `39.42% <ø> (-0.07%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `25% <0%> (-58.34%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.8% <0%> (-0.1%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=footer). Last update [148ed63...85ba491](https://codecov.io/gh/pandas-dev/pandas/pull/18087?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/342153123",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-342153123",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 342153123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjE1MzEyMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-06T13:47:39Z",
    "updated_at": "2017-11-06T13:47:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @jorisvandenbossche @TomAugspurger "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343529773",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-343529773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 343529773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzUyOTc3Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T17:04:57Z",
    "updated_at": "2017-11-10T17:04:57Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche @TomAugspurger : Any thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343944333",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-343944333",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 343944333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzk0NDMzMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T14:58:01Z",
    "updated_at": "2017-11-13T14:58:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, this seems good."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343951848",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-343951848",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 343951848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzk1MTg0OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T15:21:19Z",
    "updated_at": "2017-11-13T15:21:19Z",
    "author_association": "MEMBER",
    "body": "Is there a reason we can't use `assert not s.equals(s2)` ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343979900",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-343979900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 343979900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzk3OTkwMA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T16:43:51Z",
    "updated_at": "2017-11-13T16:43:51Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : Hmm...that's a good point.  How comprehensive is it vs. `tm.assert_series_equal` ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343980145",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-343980145",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 343980145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzk4MDE0NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T16:44:36Z",
    "updated_at": "2017-11-13T16:44:55Z",
    "author_association": "MEMBER",
    "body": "In any case, I'm still in favor of using the method I have developed in cases where our equality checking isn't as strict (e.g. `check_dtype=False`)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343996839",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-343996839",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 343996839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzk5NjgzOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T17:36:55Z",
    "updated_at": "2017-11-13T17:36:55Z",
    "author_association": "MEMBER",
    "body": "`equals` only looks if the data are equal, not the attributes (eg not the Series name), so it less strict than `assert_series_equal`. \r\nBut I don't think that this is a problem in this case. As because if a different name is the reason you want `assert_series_equal` to fail, you shouldn't use this, but just explicitly assert that the names are not equal.\r\n\r\nSo personally I don't find that an argument to have `assert_not(assert_series_equal(..))` (but there might be other arguments)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344063169",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344063169",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344063169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDA2MzE2OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T21:24:35Z",
    "updated_at": "2017-11-13T21:24:45Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : Fair point.  This function is meant to be catch-all for any of our in-house `assert_*` functions, and initially it was meant to address our not having a counter-part for `assert_numpy_array_equal`.\r\n\r\nThat being said, `assert_not(assert_series_equal(...))` could indeed be simplified as you suggested, and I can make that change later today."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344258434",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344258434",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344258434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDI1ODQzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T13:28:04Z",
    "updated_at": "2017-11-14T13:28:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "lgtm. @jorisvandenbossche ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344282296",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344282296",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344282296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDI4MjI5Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T14:50:34Z",
    "updated_at": "2017-11-14T14:50:34Z",
    "author_association": "MEMBER",
    "body": "I am still not sure adding an `assert_not` to our own testing addons is worth it for the current single use case (and even for that one, I personally find `assert not np.array_equal(df.values, b_c)` much more natural to read than `tm.assert_not(tm.assert_numpy_array_equal, df.values, b_c)`)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344311688",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344311688",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344311688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxMTY4OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T16:19:23Z",
    "updated_at": "2017-11-14T16:20:30Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : The whole point is not to use `np.array_equal` in the first place, as our testing methods with `assert_numpy_array_equal` are richer.  This was a more generalized solution rather than writing a one-off solution of `assert_not_numpy_array_equal`.\r\n\r\nIn any case, it just so happened that `Series` equality checking was sufficient in many of the cases where we were using `np.array_equal`, but this construct that I created can be used for those cases (albeit not so frequent) where we might want to check that a certain `assert` should fail."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344313471",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344313471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344313471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxMzQ3MQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T16:24:44Z",
    "updated_at": "2017-11-14T16:24:53Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : If you haven't done so already, have a look at #18047, where this whole discussion started around `array_equal`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344329420",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344329420",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344329420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDMyOTQyMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T17:11:56Z",
    "updated_at": "2017-11-14T17:11:56Z",
    "author_association": "MEMBER",
    "body": "I didn't see that, but that issue does not seem to give a reasoning for the need to remove array_equal? \r\nAnd if that is the goal, I would use np.allclose"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344365483",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344365483",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344365483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDM2NTQ4Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T19:12:14Z",
    "updated_at": "2017-11-14T19:12:14Z",
    "author_association": "MEMBER",
    "body": "> I didn't see that, but that issue does not seem to give a reasoning for the need to remove array_equal?\r\n\r\nI think the idea (and @jreback feel free to jump in) is that we were avoiding explicitly using the `numpy` API for our testing purposes and only using in-house comparisons during testing.  That's the emphasis that I have seen (and received feedback on over the course of previous PR's).\r\n\r\nAs written, `np.array_equal` works to get the tests passing, but we would rather check with a different function than that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344385786",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344385786",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344385786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDM4NTc4Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T20:21:37Z",
    "updated_at": "2017-11-14T20:21:37Z",
    "author_association": "MEMBER",
    "body": "I am not sure if that is the general direction, eg with the move to pytest we actually moved a bit more away from our in-house testing functionality (and you did some of those PRs to replace in-house methods with standard pytest functionality). \r\nSo I don't see why we are adding here new in-house functionality to maintain while there is a perfectly sensible solution with standard tools of numpy and pytest (unless there is a clear benefit of an in-house method, which is sometimes the case, but I don't see that here) "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344389251",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344389251",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344389251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDM4OTI1MQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T20:33:49Z",
    "updated_at": "2017-11-14T20:33:49Z",
    "author_association": "MEMBER",
    "body": "I'm fine with incorporating `pytest` tools in-place of in-house.  However, `numpy` tools in-place of in-house, not so much.  More often than not, we can use something better than `array_equal` when testing, as you can see in this PR and the one preceding it.\r\n\r\nSo if you have a suggestion for writing this in `pytest` idiom, I'm all for it.  However, if we can't, then I'd rather do this in-house than rely on `numpy` tools."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344391581",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344391581",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344391581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDM5MTU4MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T20:41:51Z",
    "updated_at": "2017-11-14T20:41:51Z",
    "author_association": "MEMBER",
    "body": "> More often than not, we can use something better than array_equal when testing, as you can see in this PR and the one preceding it.\r\n\r\nCan you then be more specific? What is 'bad' about array_equal in this specific use case?\r\n\r\n> So if you have a suggestion for writing this in pytest idiom, I'm all for it. However, if we can't, then I'd rather do this in-house than rely on numpy tools.\r\n\r\nI think `assert not np.array_equal(..)` or `assert not np.allclose(..)` is a perfect pytest idiom"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344399469",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344399469",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344399469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDM5OTQ2OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T21:10:08Z",
    "updated_at": "2017-11-14T21:10:27Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : In this specific case, I'll give it to you that we actually don't need this paradigm at all, as the shape of the arrays are completely different (just ran through the test manually), making this `array_equal` check kind of ridiculous.\r\n\r\nSo in that case, no need to implement `assert_not` for this PR, and we can table that discussion for another time if need be.\r\n\r\nThat being said, `array_equal`, similar to `Series.equal` only checks values and shape, but not `dtype`, which is what `assert_numpy_array_equal` does."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344401114",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344401114",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344401114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDQwMTExNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T21:16:10Z",
    "updated_at": "2017-11-14T21:16:22Z",
    "author_association": "MEMBER",
    "body": "> That being said, array_equal, similar to Series.equal only checks values and shape, but not dtype, which is what assert_numpy_array_equal does.\r\n\r\nYes, but as I said above, IMO if the reason that you want assert_series/numpy_array_equal to fail is not because the values differ but because the dtype (or name, ..) differs, I find `assert_not(assert_...())` very obscure and I think we should explicitly test that attribute."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344401578",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344401578",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344401578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDQwMTU3OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T21:17:56Z",
    "updated_at": "2017-11-14T21:17:56Z",
    "author_association": "MEMBER",
    "body": "So my reasoning: either the values differ -> simply use `.equals` / `array_equal`, or either the values are equal but the dtype, name, ... differ -> test that explicitly"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344664004",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344664004",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344664004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDY2NDAwNA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T17:19:25Z",
    "updated_at": "2017-11-15T17:19:25Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : I just renamed the PR to just remove instances of \"array_equal\" from tests.  Everything is green, so PTAL."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344774286",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344774286",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344774286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDc3NDI4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T00:23:57Z",
    "updated_at": "2017-11-16T00:23:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @gfyoung "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344774507",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344774507",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344774507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDc3NDUwNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T00:24:55Z",
    "updated_at": "2017-11-16T00:24:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "just for edification. we don't like ``np.array_equal`` because it doesn't work with NaNs; this is why we have ``array_equivalent``, which is you can use as well in tests."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344815997",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344815997",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344815997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDgxNTk5Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T04:57:11Z",
    "updated_at": "2017-11-16T04:57:11Z",
    "author_association": "MEMBER",
    "body": "> this is why we have array_equivalent\r\n\r\nAll this time, and I didn't know that existed. 😄  Should mention that from now on in case we have this situation down the road."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344846885",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18087#issuecomment-344846885",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18087",
    "id": 344846885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDg0Njg4NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T08:12:39Z",
    "updated_at": "2017-11-16T08:12:39Z",
    "author_association": "MEMBER",
    "body": "Thanks @gfyoung \r\n\r\n> we don't like np.array_equal because it doesn't work with NaNs; this is why we have array_equivalent, which is you can use as well in tests.\r\n\r\nand on the numpy side, I think `allclose` is the 'replacement' for array_equal that also can handle NaNs"
  }
]
