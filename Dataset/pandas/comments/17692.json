[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332451566",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17692#issuecomment-332451566",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17692",
    "id": 332451566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjQ1MTU2Ng==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-27T08:39:59Z",
    "updated_at": "2017-09-27T08:39:59Z",
    "author_association": "MEMBER",
    "body": "Another point of reference is `Interval`, which uses lexicographic ordering on `(start, stop, closed)`:\r\nhttps://github.com/pandas-dev/pandas/blob/d3be81ad595c5338781bed9963c729a9702e6611/pandas/_libs/interval.pyx#L91-L94\r\n\r\nSo if we care about ordering periods with different frequencies, this would be a reasonable choice. On the other hand, if we don't have use cases for this, from a usability perspective it is probably better to stick with refusing to order potentially overlapping periods.\r\n\r\n> Then we treat datetime and Timestamp objects as analogous to zero-duration periods.\r\n\r\nSo `period < timestamp` would effectively compare `period.start_time < timestamp`? I suppose we *could* argue that this is consistent, but here I really don't think it's a good idea. It's better to force users to be explicit about what they want rather than allow them to make mistaken assumptions (`period.end_time < timestamp` is at least as plausible)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332496574",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17692#issuecomment-332496574",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17692",
    "id": 332496574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjQ5NjU3NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-27T11:52:05Z",
    "updated_at": "2017-09-27T11:52:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah in an ideal work we would actually *use* an Interval to back a Period. Yes we should clarify the semantics here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332553120",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17692#issuecomment-332553120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17692",
    "id": 332553120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjU1MzEyMA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-27T15:07:37Z",
    "updated_at": "2017-09-27T15:07:37Z",
    "author_association": "MEMBER",
    "body": "> So period < timestamp would effectively compare period.start_time < timestamp? I suppose we could argue that this is consistent, but here I really don't think it's a good idea\r\n\r\nYah, it's sub-optimal.  The question becomes if we want to implement the unambiguous cases and continue raising for ambiguous ones vs leave existing behavior.  Even for cases with overlap `__eq__` and `__ne__` should usually be unambiguous.\r\n\r\n> On the other hand, if we don't have use cases for this, from a usability perspective it is probably better to stick with refusing to order potentially overlapping periods.\r\n\r\nFrom #17112, `set_index` uses comparisons under the hood:\r\n\r\n```\r\nindex = pd.Index(['PCE']*2, name='Variable')\r\ndata = [\r\n\tpd.Period('2018Q1'),\r\n\tpd.Period('2021', freq='A'),\r\n\t]\r\nser = pd.Series(data, index=index, name='Period')\r\nser.to_frame().set_index('Period', append=True)\r\n```\r\nIn py2 raises `NotImplementedError: > 1 ndim Categorical are not supported at this time` and in py3 raises `SystemError: <built-in function isinstance> returned a result with an error set`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/333405197",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17692#issuecomment-333405197",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17692",
    "id": 333405197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzQwNTE5Nw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-01T20:41:56Z",
    "updated_at": "2017-10-01T20:41:56Z",
    "author_association": "MEMBER",
    "body": "Doesn't look like there's a lot of enthusiasm for this.  One more shot with a less ambitious fix: just define `__ne__` and `__eq__` to evaluate unequal instead of raising."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345907902",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17692#issuecomment-345907902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17692",
    "id": 345907902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTkwNzkwMg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-21T03:43:17Z",
    "updated_at": "2017-11-21T03:43:17Z",
    "author_association": "MEMBER",
    "body": "Lack of consensus, closing."
  }
]
