[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43544424",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7177#issuecomment-43544424",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7177",
    "id": 43544424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTQ0NDI0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-19T19:17:00Z",
    "updated_at": "2014-05-19T19:17:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "dupe of #7169\nwould love to have u work on it!\n\npy3.4 build already has 2.02 (and so fails)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44073812",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7177#issuecomment-44073812",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7177",
    "id": 44073812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDczODEy",
    "user": {
      "login": "neirbowj",
      "id": 1879063,
      "node_id": "MDQ6VXNlcjE4NzkwNjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1879063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/neirbowj",
      "html_url": "https://github.com/neirbowj",
      "followers_url": "https://api.github.com/users/neirbowj/followers",
      "following_url": "https://api.github.com/users/neirbowj/following{/other_user}",
      "gists_url": "https://api.github.com/users/neirbowj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/neirbowj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neirbowj/subscriptions",
      "organizations_url": "https://api.github.com/users/neirbowj/orgs",
      "repos_url": "https://api.github.com/users/neirbowj/repos",
      "events_url": "https://api.github.com/users/neirbowj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/neirbowj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-24T01:18:21Z",
    "updated_at": "2014-05-24T01:18:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you re-open this issue and reassign it to the 0.14.1 milestone?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45631387",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7177#issuecomment-45631387",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7177",
    "id": 45631387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjMxMzg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-10T15:43:11Z",
    "updated_at": "2014-06-10T15:43:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "any thoughts on this? (getting it to work with >= 2.0)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45643557",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7177#issuecomment-45643557",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7177",
    "id": 45643557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjQzNTU3",
    "user": {
      "login": "neirbowj",
      "id": 1879063,
      "node_id": "MDQ6VXNlcjE4NzkwNjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1879063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/neirbowj",
      "html_url": "https://github.com/neirbowj",
      "followers_url": "https://api.github.com/users/neirbowj/followers",
      "following_url": "https://api.github.com/users/neirbowj/following{/other_user}",
      "gists_url": "https://api.github.com/users/neirbowj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/neirbowj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neirbowj/subscriptions",
      "organizations_url": "https://api.github.com/users/neirbowj/orgs",
      "repos_url": "https://api.github.com/users/neirbowj/repos",
      "events_url": "https://api.github.com/users/neirbowj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/neirbowj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-10T17:14:29Z",
    "updated_at": "2014-06-10T17:14:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've been spending my pandas time allocation on [this](https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=190850).\n\nMy thoughts, in case anybody else is driven to work on this before I can get to it, are as follows (caveat: I haven't thought about this for a couple weeks, so my recollection about some of these details may betray me).\n\nThere appear to be two main pieces to this feature. One is simply the conversion of a style dict to a native openpyxl `Style` object. This should be fairly rote, and by implementing to the new-style `Style` protocol, which is the only option in v2, backwards compatibility with v1 will be quite tractable, because it offers both old- and new-style protocols for forwards compatibility.\n\nThere are some differences in the structure of the `Style` class from v1 to v2, which pandas will have to handle. My preference would be to try, but not very hard, to map whatever style information the user passes onto the underlying representation, and to attach commentary about the openpyxl limitations we know of to whatever exceptions bubble up. However, I don't know how people tend to use this, and I haven't yet found a clear spec in the pandas docs for an engine-agnostic, user-facing style API (maybe there isn't and shouldn't be one).\n\nThe other main piece is the merge behavior. I've had more trouble wrapping my head around how this should work. The new-style `Style` class has a `copy` method that accepts coarse substitutions. For example, conceptually if not correct syntactically, consider this snippet.\n\n```\nfrom openpyxl.style import *\ns1 = Style(font=Font(name='Helvetica'), color=Color(rgb='00FF0000'))\ns2 = s1.copy(font=Font(sz=12))\n```\n\n`s2` will get the red `Color` object from `s1` but its `font` attribute will have been overridden with a completely new `Font` object that has the default face, `'Calibri'`, at a non-default size, 12 pt. Make sense?\n\nI think this is a fine set of semantics to adopt for the internal style merging behavior of pandas, because it keeps the padding between the user and the engine implementation thin. I'm not sure what that implies for the openpyxl v1 case. At the least, it may be convenient to model a compatibility shim as a backport of the `copy` method applied to v1 `Style` objects.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46764765",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7177#issuecomment-46764765",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7177",
    "id": 46764765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzY0NzY1",
    "user": {
      "login": "neirbowj",
      "id": 1879063,
      "node_id": "MDQ6VXNlcjE4NzkwNjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1879063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/neirbowj",
      "html_url": "https://github.com/neirbowj",
      "followers_url": "https://api.github.com/users/neirbowj/followers",
      "following_url": "https://api.github.com/users/neirbowj/following{/other_user}",
      "gists_url": "https://api.github.com/users/neirbowj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/neirbowj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neirbowj/subscriptions",
      "organizations_url": "https://api.github.com/users/neirbowj/orgs",
      "repos_url": "https://api.github.com/users/neirbowj/repos",
      "events_url": "https://api.github.com/users/neirbowj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/neirbowj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-21T21:05:48Z",
    "updated_at": "2014-06-21T21:05:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "It occurred to me belatedly to wonder, since I have never used `pandas.io.excel` or its main consumer, the `to_excel` method, whether the styling capability of `ExcelWriter` is really intended to be user facing? The [documentation](https://github.com/pydata/pandas/blob/master/doc/source/io.rst#excel-files) does not mention it, though the [docstring for the `ExcelWriter.write_cells` method](https://github.com/pydata/pandas/blob/v0.14.0/pandas/io/excel.py#L448-L459) clearly indicates acceptance of formatted (i.e. styled) cells. In what follows, I will be assuming that this is supposed to be a user-facing capability that is simply not yet documented as such. If it isn't, please say so because it might provide some useful wiggle room to address the other areas where I'm getting stuck.\n\nThe other thing I finally realized I didn't really know for sure, and need to, is whether the style dict those formatted cells carry around is required to be engine-agnostic, or if it can vary from engine to engine. I guessed that the intention was the former, and the uniformity of the usage examples --- [the only internal user in `pandas.core.format`](https://github.com/pydata/pandas/blob/v0.14.0/pandas/core/format.py#L1450-L1455) and the applicable test cases for the [openpyxl](https://github.com/pydata/pandas/blob/v0.14.0/pandas/io/tests/test_excel.py#L1102-L1127) and [xlwt](https://github.com/pydata/pandas/blob/v0.14.0/pandas/io/tests/test_excel.py#L1135-L1154) engines --- seem to substantiate my guess. However, the style dicts in the test cases are insufficient for me to tell what I should write if I were to write a style dict spec/doc in the spirit of earlier authors. For example, I can tell that the spec has to allow the font to be set to bold or not, but I cannot tell whether font colors are to be supported, and, if so, how they are to be encoded.\n\nIf it were up to me, I think I would choose a very limited subset of all possible styling available in the underlying Excel, and call that the engine-agnostic, `pandas` dialect. By making the subset small and simple, the task gets easier of mapping it onto the supported versions of the existing engine libraries and any future versions or new engines. As I said, I don't know how users tend to use `pandas.io.excel` so I'm basing this judgement on the notion that somebody who doesn't wish to specify a particular engine, probably won't wish to specify a great deal of formatting information either, if any.\n\nTo accommodate users who _do_ want to exert a great deal of control over cell styling, an additional, separable feature could be to teach `ExcelWriter.write_cells` to accept cells that come with attached style objects that are native to the selected engine. That is, if you want access to the full styling capability of the underlying library, then you have to build the style objects yourself instead of describing them to `pandas` as dicts.\n\nA related question. Does pandas have some sort of policy, roadmap, or procedure for determining version support? That is, how will we know when we can drop support for the old version of openpyxl?\n\nI welcome discussion or even just direction.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46765660",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7177#issuecomment-46765660",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7177",
    "id": 46765660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzY1NjYw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-21T21:44:46Z",
    "updated_at": "2014-06-21T21:44:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "to your last points\n\nwe try maintain support for as long as possible with dep libraries until it becomes too painful :) \n\nif it's easy enough then no biggie\n\nopenpyxl 1.6 I think is the min version but only. 1 year old I think\n\nit's becoming pretty easy IMHO to upgrade individual deps easily\n\nso if their is a recommendation to drop support for something we can discuss\n\nnote that pandas does still supports numpy 1.6.1 (and this is painful!)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46765895",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7177#issuecomment-46765895",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7177",
    "id": 46765895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzY1ODk1",
    "user": {
      "login": "neirbowj",
      "id": 1879063,
      "node_id": "MDQ6VXNlcjE4NzkwNjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1879063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/neirbowj",
      "html_url": "https://github.com/neirbowj",
      "followers_url": "https://api.github.com/users/neirbowj/followers",
      "following_url": "https://api.github.com/users/neirbowj/following{/other_user}",
      "gists_url": "https://api.github.com/users/neirbowj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/neirbowj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neirbowj/subscriptions",
      "organizations_url": "https://api.github.com/users/neirbowj/orgs",
      "repos_url": "https://api.github.com/users/neirbowj/repos",
      "events_url": "https://api.github.com/users/neirbowj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/neirbowj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-21T21:56:28Z",
    "updated_at": "2014-06-21T21:56:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I'm not suggesting that we drop support for anything at the moment. I'm just trying to get a sense of how long the life of an openpyxl v1/v2 compatibility shim might be.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46765985",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7177#issuecomment-46765985",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7177",
    "id": 46765985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzY1OTg1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-21T22:00:46Z",
    "updated_at": "2014-06-21T22:00:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "one way to do this might be to make a openpyxl_v2 engine (and then depending on the installation choose one or the other) \nthat way u can rebuild the API as needed\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46767417",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7177#issuecomment-46767417",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7177",
    "id": 46767417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzY3NDE3",
    "user": {
      "login": "neirbowj",
      "id": 1879063,
      "node_id": "MDQ6VXNlcjE4NzkwNjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1879063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/neirbowj",
      "html_url": "https://github.com/neirbowj",
      "followers_url": "https://api.github.com/users/neirbowj/followers",
      "following_url": "https://api.github.com/users/neirbowj/following{/other_user}",
      "gists_url": "https://api.github.com/users/neirbowj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/neirbowj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neirbowj/subscriptions",
      "organizations_url": "https://api.github.com/users/neirbowj/orgs",
      "repos_url": "https://api.github.com/users/neirbowj/repos",
      "events_url": "https://api.github.com/users/neirbowj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/neirbowj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-21T23:10:42Z",
    "updated_at": "2014-06-21T23:10:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, that's a good point. Splitting the implementation at the engine level would probably be better. I still think that we need a spec and documentation for the style dict, both of which would be informed by whether it is intended for internal use only, or is an external feature that we also use internally.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47058718",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7177#issuecomment-47058718",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7177",
    "id": 47058718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDU4NzE4",
    "user": {
      "login": "neirbowj",
      "id": 1879063,
      "node_id": "MDQ6VXNlcjE4NzkwNjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1879063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/neirbowj",
      "html_url": "https://github.com/neirbowj",
      "followers_url": "https://api.github.com/users/neirbowj/followers",
      "following_url": "https://api.github.com/users/neirbowj/following{/other_user}",
      "gists_url": "https://api.github.com/users/neirbowj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/neirbowj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neirbowj/subscriptions",
      "organizations_url": "https://api.github.com/users/neirbowj/orgs",
      "repos_url": "https://api.github.com/users/neirbowj/repos",
      "events_url": "https://api.github.com/users/neirbowj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/neirbowj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-25T04:09:40Z",
    "updated_at": "2014-06-25T04:09:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "The PR I just posted still has some rough edges (see, for example, `pandas.io.excel._Openpyxl2Writer._convert_to_fill`), but should give us a leg up on this issue.\n\nI find that openpyxl is maddeningly full of corner cases and reasons why I can't do something simple and uniform. If anybody sees a missed opportunity to refactor and consolidate this code, I welcome suggestions or even alternative PRs.\n"
  }
]
