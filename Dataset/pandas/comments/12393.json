[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186209344",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186209344",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186209344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjIwOTM0NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T13:18:10Z",
    "updated_at": "2016-02-19T13:18:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you show an example, the following is works. I agree certainly could update the documentation (with some examples and such)\n\n```\nIn [8]: df = DataFrame({'A' : [np.nan]})\n\nIn [9]: df.empty\nOut[9]: False\n\nIn [10]: df.dropna().empty\nOut[10]: True\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186243894",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186243894",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186243894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI0Mzg5NA==",
    "user": {
      "login": "phil20686",
      "id": 6398777,
      "node_id": "MDQ6VXNlcjYzOTg3Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6398777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phil20686",
      "html_url": "https://github.com/phil20686",
      "followers_url": "https://api.github.com/users/phil20686/followers",
      "following_url": "https://api.github.com/users/phil20686/following{/other_user}",
      "gists_url": "https://api.github.com/users/phil20686/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phil20686/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phil20686/subscriptions",
      "organizations_url": "https://api.github.com/users/phil20686/orgs",
      "repos_url": "https://api.github.com/users/phil20686/repos",
      "events_url": "https://api.github.com/users/phil20686/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phil20686/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T14:52:35Z",
    "updated_at": "2016-02-19T14:52:35Z",
    "author_association": "NONE",
    "body": "That is exactly the behavior I was questioning, I think out[9] should be True. It seems to me that a dataframe containing nothing by na cells is \"empty\" according to most definitions.....\n\nPhil\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186244258",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186244258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186244258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI0NDI1OA==",
    "user": {
      "login": "phil20686",
      "id": 6398777,
      "node_id": "MDQ6VXNlcjYzOTg3Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6398777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phil20686",
      "html_url": "https://github.com/phil20686",
      "followers_url": "https://api.github.com/users/phil20686/followers",
      "following_url": "https://api.github.com/users/phil20686/following{/other_user}",
      "gists_url": "https://api.github.com/users/phil20686/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phil20686/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phil20686/subscriptions",
      "organizations_url": "https://api.github.com/users/phil20686/orgs",
      "repos_url": "https://api.github.com/users/phil20686/repos",
      "events_url": "https://api.github.com/users/phil20686/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phil20686/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T14:53:55Z",
    "updated_at": "2016-02-19T14:53:55Z",
    "author_association": "NONE",
    "body": "_I_ certainly expected that df.empty would be true if a data frame contained nothing but na cells.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186244775",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186244775",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186244775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI0NDc3NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T14:56:03Z",
    "updated_at": "2016-02-19T14:56:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "no, that is not a normal definition of empty which is 0-len. nulls are real values which are placeholders. The key here is that you actually have a valid index. Changing this would involve the definition dependent on the data itself which is not a good thing. welcome to have a doc update with some examples though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186250511",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186250511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186250511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI1MDUxMQ==",
    "user": {
      "login": "phil20686",
      "id": 6398777,
      "node_id": "MDQ6VXNlcjYzOTg3Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6398777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phil20686",
      "html_url": "https://github.com/phil20686",
      "followers_url": "https://api.github.com/users/phil20686/followers",
      "following_url": "https://api.github.com/users/phil20686/following{/other_user}",
      "gists_url": "https://api.github.com/users/phil20686/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phil20686/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phil20686/subscriptions",
      "organizations_url": "https://api.github.com/users/phil20686/orgs",
      "repos_url": "https://api.github.com/users/phil20686/repos",
      "events_url": "https://api.github.com/users/phil20686/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phil20686/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T15:05:44Z",
    "updated_at": "2016-02-19T15:05:44Z",
    "author_association": "NONE",
    "body": "Well its certainly not the case that df.empty is the same as len(df.index==0) e.g. \n\n```\ndf = pd.DataFrame([], index=[0,1,2])\nprint df.empty #True\nprint len(df.index==0) #False\n```\n\nAlso\n\n```\ndf = pd.DataFrame([], index=[0,1,2], columns=['A','B'])\ndf.empty #False\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186250827",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186250827",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186250827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI1MDgyNw==",
    "user": {
      "login": "phil20686",
      "id": 6398777,
      "node_id": "MDQ6VXNlcjYzOTg3Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6398777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phil20686",
      "html_url": "https://github.com/phil20686",
      "followers_url": "https://api.github.com/users/phil20686/followers",
      "following_url": "https://api.github.com/users/phil20686/following{/other_user}",
      "gists_url": "https://api.github.com/users/phil20686/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phil20686/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phil20686/subscriptions",
      "organizations_url": "https://api.github.com/users/phil20686/orgs",
      "repos_url": "https://api.github.com/users/phil20686/repos",
      "events_url": "https://api.github.com/users/phil20686/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phil20686/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T15:06:17Z",
    "updated_at": "2016-02-19T15:06:17Z",
    "author_association": "NONE",
    "body": "So not only do I dispute that len=0 is the semantic definition of empty, that doesn't appear to be the implementation anyway.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186252549",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186252549",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186252549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI1MjU0OQ==",
    "user": {
      "login": "phil20686",
      "id": 6398777,
      "node_id": "MDQ6VXNlcjYzOTg3Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6398777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phil20686",
      "html_url": "https://github.com/phil20686",
      "followers_url": "https://api.github.com/users/phil20686/followers",
      "following_url": "https://api.github.com/users/phil20686/following{/other_user}",
      "gists_url": "https://api.github.com/users/phil20686/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phil20686/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phil20686/subscriptions",
      "organizations_url": "https://api.github.com/users/phil20686/orgs",
      "repos_url": "https://api.github.com/users/phil20686/repos",
      "events_url": "https://api.github.com/users/phil20686/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phil20686/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T15:09:27Z",
    "updated_at": "2016-02-19T15:09:27Z",
    "author_association": "NONE",
    "body": "Also stuff like: \n\n```\ndf = pd.DataFrame([], index=[0,1,2], columns=['A','B'])\ndf.set_value(1, 'A', 17)\ndf['B'].empty # False\n```\n\nwhich just seems plain wrong. If I have a column that I have never added any data to, it should not return false when asked if its empty. I guess under the hood when you specify an index and columns it autofills the dataframe somehow, and that results in this behaviour, but the definition of empty should really play nicely with the default dataframe constructor in these examples imo. Else its just confusing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186255065",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186255065",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186255065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI1NTA2NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T15:14:38Z",
    "updated_at": "2016-02-19T15:14:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "its very simple. its empty only if all axes are len 0\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186255176",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186255176",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186255176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI1NTE3Ng==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T15:15:04Z",
    "updated_at": "2016-02-19T15:15:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "It sounds like you're looking for some other collection of `Series`. A `DataFrame` is a tabular collection, and it makes sense to look at the shape. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186260263",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186260263",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186260263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI2MDI2Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T15:29:27Z",
    "updated_at": "2016-02-19T15:29:27Z",
    "author_association": "MEMBER",
    "body": "@phil20686 You can eg use:\n\n```\nIn [15]: df['B'].isnull().all()\nOut[15]: True\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186263649",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186263649",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186263649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI2MzY0OQ==",
    "user": {
      "login": "phil20686",
      "id": 6398777,
      "node_id": "MDQ6VXNlcjYzOTg3Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6398777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phil20686",
      "html_url": "https://github.com/phil20686",
      "followers_url": "https://api.github.com/users/phil20686/followers",
      "following_url": "https://api.github.com/users/phil20686/following{/other_user}",
      "gists_url": "https://api.github.com/users/phil20686/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phil20686/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phil20686/subscriptions",
      "organizations_url": "https://api.github.com/users/phil20686/orgs",
      "repos_url": "https://api.github.com/users/phil20686/repos",
      "events_url": "https://api.github.com/users/phil20686/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phil20686/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T15:39:10Z",
    "updated_at": "2016-02-19T15:40:28Z",
    "author_association": "NONE",
    "body": "@jrebeck my example shows that that is not the implemented behavior:\n\n```\ndf = pd.DataFrame([], index=[0,1,2])\nprint df.empty #True \nsum(df.shape) == 0 #false\ndf = pd.DataFrame([], columns=['A','B'])\nprint df.empty # True\nsum(df.shape) == 0 #false\n```\n\nI really find it super weird that pre-allocation should result in empty=False, e.g. if you concatenate an empty series with a non empty dataframe it will get preallocated and then extracting it means empty has changed from True to False. This seems very strange to me, in some abstract sense series C is the same object, but merely moving it around has changed its properties.\n\n```\ndf = pd.DataFrame([], index=[0,1,2], columns=['A','B'])\ndf.set_value(1, 'A', 17)\nseries = pd.Series(name=\"C\")\nprint series.empty\ndf2 = pd.concat([df,series], axis=1)\nprint df2[\"C\"].empty\n```\n\nAnyway, my main point is that this behavior should be documented, because its quite counter-intuitive, not to argue about definitions of empty.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186268147",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186268147",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186268147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI2ODE0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T15:47:03Z",
    "updated_at": "2016-02-19T15:47:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@phil20686 every one of those results is correct, what exactly is counter intuitive here?\n\nthere isn't any 'pre-allocation' at all. You have indices. If the indicies are 0 in any way (could be 1 dim or not) then you are empty, otherwise you are not.\n\nWhat exactly are you using `.empty`? To be honest I have rarely needed this. Most operations in pandas just work regardless if things are empty or not. I think the docs are fairly clear on [this](http://pandas.pydata.org/pandas-docs/stable/basics.html#boolean-reductions).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186277547",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186277547",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186277547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI3NzU0Nw==",
    "user": {
      "login": "phil20686",
      "id": 6398777,
      "node_id": "MDQ6VXNlcjYzOTg3Nzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6398777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phil20686",
      "html_url": "https://github.com/phil20686",
      "followers_url": "https://api.github.com/users/phil20686/followers",
      "following_url": "https://api.github.com/users/phil20686/following{/other_user}",
      "gists_url": "https://api.github.com/users/phil20686/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phil20686/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phil20686/subscriptions",
      "organizations_url": "https://api.github.com/users/phil20686/orgs",
      "repos_url": "https://api.github.com/users/phil20686/repos",
      "events_url": "https://api.github.com/users/phil20686/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phil20686/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T16:04:00Z",
    "updated_at": "2016-02-19T16:04:00Z",
    "author_association": "NONE",
    "body": "Um. I had a series that had .empty = True, I concat it with a dataframe, and then I extract the series, and then magically .empty=False? Even though at no time has the user added data to it?\n\nSimilarly, you can create a dataframe with either an index or columns but no values and its \"empty\", but if it has both and no values its \"non-empty\". \n\nYou don't think that is counter intuitive behavior? \n\nAnyway, I think most people would assume that empty == contains no data. That clearly isn't the case as it looks like its the same as \n\n```\nnot any(df.shape)\n```\n\nAnyway, my main point was that the documentation of Dataframe.empty should note these behaviors. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186283700",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186283700",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186283700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI4MzcwMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T16:17:42Z",
    "updated_at": "2016-02-19T16:17:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@phil20686 one of the highlites of pandas is that it aligns data. When you put in a series it was empty, however, the concat realigned the Series to the other values in the DataFrame\n\n```\nIn [19]: df2\nOut[19]: \n     A    B   C\n0  NaN  NaN NaN\n1   17  NaN NaN\n2  NaN  NaN NaN\n\nIn [20]: df2.columns\nOut[20]: Index([u'A', u'B', u'C'], dtype='object')\n\nIn [21]: df2['C']\nOut[21]: \n0   NaN\n1   NaN\n2   NaN\nName: C, dtype: float64\n```\n\nthen [21] is clearly NOT empty; yes it is all null. Which is a MUCH more common operation. `.empty` is a very blunt instrument and not really used much in practice for this very reason. It is correct as far as it goes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186459455",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-186459455",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 186459455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjQ1OTQ1NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T23:55:13Z",
    "updated_at": "2016-02-19T23:55:13Z",
    "author_association": "MEMBER",
    "body": "@phil20686 In trying to clear some things up, I think we have to make a distinction between two points:\n- The definition of `empty` is clear**: it returns True if the length of one or all of the axes is 0 (you could see it as \"len(index) x len(columns) == 0\" for a dataframe). It is by defintion _not_ about having all NaNs or not. It is quite possible you find this not the best definition, but taking this definition as a starting point, all the return values in the examples you showed are consistent and as expected.\n- What _is_ maybe more surprising in some cases, leading to the unintuitive behaviour you described, is the way pandas fills Series/DataFrames with NaNs (and once filled with NaNs, it is not empty anymore). Pandas will fill a DataFrame with NaNs once it has both an index and columns. And there are indeed operation (eg concat) where index/columns can be added, leading to filling with NaNs. \n\nI just want to point out that I think the confusion you get has another root cause than the `empty` method. \nAnd the current `empty` method is just not the method you are looking for I think. It would be more something like `allnan` or `allnull`, which you can obtain with `isnull().all()`\n\n** _I don't say it is 'clear' in the docs, I mean in implementation_\n\nBut indeed, the docs of empty can certainly point that out. Do you want to do a PR to specify that this is not about NaNs ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/188425250",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12393#issuecomment-188425250",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12393",
    "id": 188425250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODQyNTI1MA==",
    "user": {
      "login": "MasonGallo",
      "id": 4913951,
      "node_id": "MDQ6VXNlcjQ5MTM5NTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4913951?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MasonGallo",
      "html_url": "https://github.com/MasonGallo",
      "followers_url": "https://api.github.com/users/MasonGallo/followers",
      "following_url": "https://api.github.com/users/MasonGallo/following{/other_user}",
      "gists_url": "https://api.github.com/users/MasonGallo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MasonGallo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MasonGallo/subscriptions",
      "organizations_url": "https://api.github.com/users/MasonGallo/orgs",
      "repos_url": "https://api.github.com/users/MasonGallo/repos",
      "events_url": "https://api.github.com/users/MasonGallo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MasonGallo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-24T19:45:54Z",
    "updated_at": "2016-02-24T19:45:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree that the docs of empty could point this out (I actually had a student just ask me about this). Since it's been a few days, I can do a quick PR.\n"
  }
]
