[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428286580",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23061#issuecomment-428286580",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23061",
    "id": 428286580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODI4NjU4MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-09T17:49:30Z",
    "updated_at": "2018-10-09T17:49:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, changing these `is_*` in the past have led to us breaking user-code. I don't think it's possible to have a high-level `is_list_like` that does the right thing in for every use case."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428345640",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23061#issuecomment-428345640",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23061",
    "id": 428345640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODM0NTY0MA==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-09T20:47:10Z",
    "updated_at": "2018-10-09T20:47:10Z",
    "author_association": "MEMBER",
    "body": "I imagine this issue extends beyond just `set`, e.g. `dict` is considered list-like too:\r\n```python\r\nIn [2]: d = dict(zip('xyz', [10, 20, 30]))\r\n\r\nIn [3]: d\r\nOut[3]: {'x': 10, 'y': 20, 'z': 30}\r\n\r\nIn [4]: is_list_like(d)\r\nOut[4]: True\r\n\r\nIn [5]: s = pd.Series(list('abc'))\r\n\r\nIn [6]: s.str.cat(d)\r\nOut[6]:\r\n0    ax\r\n1    by\r\n2    cz\r\ndtype: object\r\n```\r\nQuickly reading over the associated issues, it looks like what you want is to basically place an additional restriction on `is_list_like` so unordered objects return `False`?  Given that `is_list_like` relies on [`collections.abc.Iterable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Iterable), it seems like such a change would cut out a significant number of things that were previously considered list-like, and to @TomAugspurger's point, would lead to breaking user code.  I wouldn't be opposed to adding a function along the lines of `is_ordered_list_like` though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428358752",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23061#issuecomment-428358752",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23061",
    "id": 428358752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODM1ODc1Mg==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-09T21:27:20Z",
    "updated_at": "2018-10-09T21:41:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jschendel \r\n\r\n`dict` is ordered from 3.6 onwards, but in any case, it could be included in the path I've now chosen to pursue for a first PR:\r\n* add a `strict`-kwarg to `is_list_like`, which defaults to `False` (raising `FutureWarning` if not passed), in which case the behaviour is unchanged. For `strict=True`, sets are excluded.\r\n* this has the advantage that it can't break things."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428362551",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23061#issuecomment-428362551",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23061",
    "id": 428362551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODM2MjU1MQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-09T21:40:27Z",
    "updated_at": "2018-10-09T21:40:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added a first draft of a PR in #23065. Happy to add `dict` (with `PY35`) to the list of excluded types for `strict=True`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428362965",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23061#issuecomment-428362965",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23061",
    "id": 428362965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODM2Mjk2NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-09T21:41:55Z",
    "updated_at": "2018-10-09T21:41:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think that's a good idea. In the past changing these have led to surprising breaks in user code. These checks are used all over pandas, so it's hard to predict the ramifications of changing one.\r\n\r\nIf a user has a set-like object, then what would they do when they see that warning cropping up from their object?\r\n\r\nI think if the caller needs to know that the collection is ordered, then they should assert that independently."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428371160",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23061#issuecomment-428371160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23061",
    "id": 428371160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODM3MTE2MA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-09T22:12:26Z",
    "updated_at": "2018-10-09T22:12:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger \r\n* It's not a breaking change\r\n* I've hunted down all the places where it's used internally\r\n* No tests break\r\n\r\n> If a user has a set-like object, then what would they do when they see that warning cropping up from their object?\r\n\r\nThey're not gonna see it from pandas, unless they `from pandas.core.dtypes.common import is_list_like`. And then, the warning tells them that sets will not be considered list-like in the future unless `strict=False` is specified. Can't see how this is ambiguous...?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/432100537",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23061#issuecomment-432100537",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23061",
    "id": 432100537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjEwMDUzNw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T05:42:44Z",
    "updated_at": "2018-10-23T05:43:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @gfyoung @WillAyd  this issue has been closed by #23065."
  }
]
