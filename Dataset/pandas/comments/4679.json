[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23299139",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23299139",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23299139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjk5MTM5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T22:08:30Z",
    "updated_at": "2013-08-26T22:08:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://pandas.pydata.org/pandas-docs/dev/io.html#reading-columns-with-a-multiindex\n\n(but for csv), and ths _might/probably_ needs special handling for excel\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23299556",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23299556",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23299556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjk5NTU2",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T22:15:26Z",
    "updated_at": "2013-08-26T22:15:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "only special handling would be converting merged cells into repeated entries like csv, so this is relatively minor.\n\nI.e. \n\n```\n____________________\n| bar    |   baz    |\n| A | B  | C | D | E|\n|___________________|\n```\n\njust needs to change to something like\n\n``` python\n[['bar', 'bar', 'baz', 'baz', 'baz'], ['A', 'B', 'C', 'D', 'E']]\n```\n\nunder the hood\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23299611",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23299611",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23299611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjk5NjEx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T22:16:15Z",
    "updated_at": "2013-08-26T22:16:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "so, really, a function that takes in merged cell and splits it into individual cells all with the same value would be sufficient to take advantage of csv's existing behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23299733",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23299733",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23299733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjk5NzMz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T22:18:33Z",
    "updated_at": "2013-08-26T22:18:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner I think that is right, in your example `header=[0,1]` if it produces the output you put then should parse to a mi\n\nrelated is the reverse (in `to_excel`); again exists in `to_csv`, but would need porting (then could round-trip)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23299747",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23299747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23299747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjk5NzQ3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T22:18:43Z",
    "updated_at": "2013-08-26T22:18:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cancan101 interested in implementing this? just a minor modification of your `get_effective_cell` function.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23300184",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23300184",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23300184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzAwMTg0",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T22:25:51Z",
    "updated_at": "2013-08-26T22:25:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can take a look at this. I am equally interested in solving this for HTML files, for example: http://www.sec.gov/Archives/edgar/data/47217/000104746913006802/a2215416z10-q.htm#CCSCI\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23300885",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23300885",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23300885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzAwODg1",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T22:39:14Z",
    "updated_at": "2013-08-26T22:39:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, that's basically the same thing, you just want to end up with the following arrays.\n\n``` python\n>>> data = [\n    ['Three months ended April 30','Three months ended April 30',\n     'Six months ended April 30', 'Six months ended April 30'],\n    ['2013', '2012', '2013', '2012']\n]\n>>> MultiIndex.from_arrays(data)\nMultiIndex\n[(u'Three months ended April 30', u'2013'), (u'Three months ended April 30', u'2012'), (u'Six months ended April 30', u'2013'), (u'Six months ended April 30', u'2012')]\n```\n\nSo if you have something like:\n\n```\n<td colspan=2>Span2</td>\n```\n\nYou want to convert that into 2 cells with text 'Span2'\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23301070",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23301070",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23301070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzAxMDcw",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T22:42:28Z",
    "updated_at": "2013-08-26T22:45:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Exactly. I am going to create a similar issues to this one for HTML. FWIW, It would be great to merge the IO backends  so that functionality like this can be shared. See: #4682. Shoot closing the other issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23301243",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23301243",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23301243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzAxMjQz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T22:46:00Z",
    "updated_at": "2013-08-26T22:46:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cancan101 well, I believe they mostly are, they just pass to a TextReader which does the majority of the work. (so, for example, the ExcelFile reader has to do some magic to convert all the values to a list of lists that can be passed to text reader).  I think you could do both of these in the same issue and then refactor the multiindex creation methods from read_csv out for something they can all use - check out code around here for how it works under the hood (I think):\n\nhttps://github.com/pydata/pandas/blob/master/pandas/io/parsers.py#L703\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23301342",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23301342",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23301342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzAxMzQy",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T22:47:50Z",
    "updated_at": "2013-08-26T22:47:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe that I looked at the parsers backends and that some, but not all, of the parsers use `TextReader`. I believe that HTML parser does not use TextReader \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23301839",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23301839",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23301839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzAxODM5",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T22:58:43Z",
    "updated_at": "2013-08-26T22:58:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Now comes the other reason for improving the ExcelParser and/or the HTML parser: parsing hierarchical row indexes. A good example of this would be (different link from above): http://www.sec.gov/Archives/edgar/data/47217/000104746913006802/a2215416z10-q.htm#CCSE. \n\nThis table has 4 major sections (they can be identified as lines with no other data):\n1. Net revenue:\n2. Costs and expenses:\n3. Net earnings per share:\n4. Weighted-average shares used to compute net earnings per share:\n\nWithin the first of those sections are a number of lines items and a section total.\n\nA good feature of the parser would be to extract this structure from the table. Obviously this is non-trivial.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23303238",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23303238",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23303238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzAzMjM4",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T23:31:42Z",
    "updated_at": "2013-08-26T23:31:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cancan101 hierarchical row indexes are almost the same thing as hierarchical columns - the goal is to turn the input into something similar to what [csv takes for hierarchical indexes](http://pandas.pydata.org/pandas-docs/dev/io.html#reading-columns-with-a-multiindex). You just need to convert rowspan/horizontally-merged cells into repeated horizontal cells.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23303362",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23303362",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23303362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzAzMzYy",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T23:34:26Z",
    "updated_at": "2013-08-26T23:34:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner That is not actually the issue here. In this case there is no explicit indication in the table itself that the rows should be grouped in a certain manner. For example there is no rowspan / merged cell. In this case the user would need to supply some additional information: for example to treat the heading in an empty row as a new level in the hierarchy,\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23304480",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23304480",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23304480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzA0NDgw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-27T00:01:20Z",
    "updated_at": "2013-08-27T00:01:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cancan101 that's probably outside the scope of what the pandas parser could do [if it's that complicated, user probably should handle the cleaning after that] - I'd suggest going for a very simple implementation to start out with (i.e., take colspan or merge length --> convert it to individual cells --> use read_csv's existing functionality to get a multiindex going) then after you have that working, you can consider what else makes sense to add.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23304603",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23304603",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23304603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzA0NjAz",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-27T00:04:41Z",
    "updated_at": "2013-08-27T00:05:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner The above is unrelated to the hierarchical columns. That would be another issues. The simplest option might be split the table on those empty lines. For example have some options for the above link to split out 3 tables rather than one. Alternatively the user could attempt to detect this himself this given that that row will have a lot of nans for values.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23305632",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23305632",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23305632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzA1NjMy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-27T00:31:49Z",
    "updated_at": "2013-08-27T00:31:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cancan101 can you try passing a list to header and see if it converts to mi? it may work already.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23349903",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23349903",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23349903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQ5OTAz",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-27T16:22:09Z",
    "updated_at": "2013-08-27T16:22:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jratner I will take a look. A pre-requisite of dealing with merged cells in Excel is my PR #4439. It likely needs cleaning up.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23368407",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23368407",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23368407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzY4NDA3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-27T20:35:03Z",
    "updated_at": "2013-08-27T20:35:03Z",
    "author_association": "MEMBER",
    "body": "@cancan101 `read_html` _does_ parse `header=[a list of integers]` into a `MultiIndex`:\n\n```\nIn [16]: url = 'http://www.fdic.gov/bank/individual/failed/banklist.html'\n\nIn [17]: df = read_html(url,header=[0,1])[0]\n\nIn [18]: type(df.columns)\nOut[18]: pandas.core.index.MultiIndex\n\nIn [21]: df\nOut[21]:\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 510 entries, 2 to 511\nData columns (total 7 columns):\n(Sunrise Bank of Arizona, Community South Bank)                 510  non-null values\n(Phoenix, Parsons)                                              510  non-null values\n(AZ, TN)                                                        510  non-null values\n(34707, 19849)                                                  510  non-null values\n(First Fidelity Bank, National Association, CB&S Bank, Inc.)    510  non-null values\n(2013-08-23 00:00:00, 2013-08-23 00:00:00)                      510  non-null values\n(2013-08-27 00:00:00, 2013-08-27 00:00:00)                      510  non-null values\ndtypes: datetime64[ns](2), int64(1), object(4)\n```\n\nIf there's a more specific issue that you've come across, please create a new one just for that. I (and I think the other devs) would prefer to keep the IO backends' issues separate from each other.\n\nHere are the issues:\n1. Refactor `read_html` to use `TextParser`\n2. Excel merging cells etc.\n3. Support the use of `colspan` to create a `MultiIndex` for `read_html`.\n\n(1 should be done before 3)\n\nI'll create 1, 3 is #4683, and I think you should create 2 since you've got the clearest idea of what the issue is :smile:.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23387516",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23387516",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23387516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzg3NTE2",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T03:28:15Z",
    "updated_at": "2013-08-28T03:28:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud That page is an interesting example. Why is this not the first row of the header:\n\n```\nBank Name   City    ST  CERT    Acquiring Institution   Closing Date    Updated Date\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23410759",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23410759",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23410759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDEwNzU5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T12:38:58Z",
    "updated_at": "2013-08-28T12:38:58Z",
    "author_association": "MEMBER",
    "body": "@cancan101 That _is_ the first row of the header if you don't pass in the `header` argument. The header is not counted as part of the data, currently. This is a bug, or at least an inconsistency. This will be fixed in the refactor of `read_html` to use `TextParser`:\n\n```\nIn [9]: url = 'http://www.fdic.gov/bank/individual/failed/banklist.html'\n\nIn [10]: df = read_html(url, header=[0, 1])[0]\n\nIn [11]: df\nOut[11]:\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 510 entries, 0 to 509\nData columns (total 7 columns):\n(Bank Name, Sunrise Bank of Arizona)                                  510  non-null values\n(City, Phoenix)                                                       510  non-null values\n(ST, AZ)                                                              510  non-null values\n(CERT, 34707)                                                         510  non-null values\n(Acquiring Institution, First Fidelity Bank, National Association)    510  non-null values\n(Closing Date, August 23, 2013)                                       510  non-null values\n(Updated Date, August 27, 2013)                                       510  non-null values\ndtypes: datetime64[ns](2), int64(1), object(4)\n\nIn [12]: df = read_html(url)[0]\n\nIn [13]: df\nOut[13]:\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 512 entries, 0 to 511\nData columns (total 7 columns):\nBank Name                512  non-null values\nCity                     512  non-null values\nST                       512  non-null values\nCERT                     512  non-null values\nAcquiring Institution    512  non-null values\nClosing Date             512  non-null values\nUpdated Date             512  non-null values\ndtypes: datetime64[ns](2), int64(1), object(4)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23411267",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23411267",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23411267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDExMjY3",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T12:48:36Z",
    "updated_at": "2013-08-28T12:48:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud I am not sure if this feature make sense: auto detecting the number of header rows based upon the table's use of `hr` or `thead`. For example passing: `header=\"auto\"`. While not all tables use these tags, it would be helpful to use them when they exist.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23411801",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23411801",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23411801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDExODAx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T12:58:41Z",
    "updated_at": "2013-08-28T12:58:41Z",
    "author_association": "MEMBER",
    "body": "@cancan101 Right. There's a couple of things you should know, just so that you understand why/how the header parsing is happening. There's no dependence on `thead` elements. The parse is structured so that a `tuple` of `list`s of elements is returned from all the HTML parsers, i.e.,\n\n``` python\nheader, body, footer = data\n```\n\nSince I have control over where I place the `header` `list`, it can be the first row of the `DataFrame` instance, which conveniently is the default `header` keyword argument to `TextParser` and I believe all of the other IO functions with a `header` parameter.\n\nYou're right that not all tables use the `thead` element, however I've found that many do; much more so than, say, the `caption` element, and especially in cases where tables are used as data tables (as opposed to being used to style the page).\n\nSo, it's not that the _number_ of header rows is detected. One thing that there _isn't_ a test case for is multiple header rows, which is partially what some of these issues are about.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23412252",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23412252",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23412252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDEyMjUy",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T13:07:06Z",
    "updated_at": "2013-08-28T13:07:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud I also believe that some tables use `th` without using `thead`. I am not sure if the converse is true: using `td`s withing a `thead`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23412831",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23412831",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23412831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDEyODMx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T13:16:20Z",
    "updated_at": "2013-08-28T13:16:20Z",
    "author_association": "MEMBER",
    "body": "@cancan101 Yes, that case is covered. `th` and `thead` are both parsed as headers cells. `td` within a `thead`/`th` should be okay. If it isn't please open an issue and I'll take a look.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23413558",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23413558",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23413558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDEzNTU4",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T13:27:14Z",
    "updated_at": "2013-08-28T13:27:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud Should this ticket serve as item 2 above? Or should I open a new ticket?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23414124",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23414124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23414124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDE0MTI0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T13:35:08Z",
    "updated_at": "2013-08-28T13:35:08Z",
    "author_association": "MEMBER",
    "body": "Neither. The title of this issue indicates that you think Excel file reading should be able to handle a list passed to `header` and create a `MultiIndex` based on that `list`. That's different than the merging cells issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23432460",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23432460",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23432460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDMyNDYw",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T17:28:55Z",
    "updated_at": "2013-08-28T17:29:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud I should probably provide an [example Excel file](http://services.corporate-ir.net/SEC/Document.Service?id=P3VybD1hSFIwY0RvdkwyRndhUzUwWlc1cmQybDZZWEprTG1OdmJTOWtiM2R1Ykc5aFpDNXdhSEEvWVdOMGFXOXVQVmhNVXlacGNHRm5aVDA0T1RVeE16STBKbk4xWW5OcFpEMDFOdz09JnR5cGU9MSZmbj1TYWxlc2ZvcmNlLnhscw==). See the sheet labeled \"Condensed Consolidated Statemen\"\nAt this point I am trying to figure out what feature are missing from the current `ExcelParser` to allow parsing of that table.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23433187",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23433187",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23433187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDMzMTg3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T17:39:29Z",
    "updated_at": "2013-08-28T17:39:29Z",
    "author_association": "MEMBER",
    "body": "@cancan101 Can you save that in an Excel format that is compatible with Google Drive? I don't have Excel.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23433527",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23433527",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23433527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDMzNTI3",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T17:44:02Z",
    "updated_at": "2013-08-28T17:44:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud What is the best way to share the xls file?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23434314",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4679#issuecomment-23434314",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4679",
    "id": 23434314,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDM0MzE0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T17:54:59Z",
    "updated_at": "2013-08-28T17:54:59Z",
    "author_association": "MEMBER",
    "body": "Can you save it as `the_file.xlsx` and then post a public dropbox link or google drive link?\n"
  }
]
