[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157691996",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11565#issuecomment-157691996",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11565",
    "id": 157691996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzY5MTk5Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T12:10:51Z",
    "updated_at": "2015-11-18T12:10:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeh, I think this is  an api inconsistency. we _should_ make this work I think for `df.a < 0` as it works for everything else, and raising an error is not useful here.\n\nNote that we _do_ have code to do this comparision even in py3, see `core/algorithms.py/factorize` so I think that could be incorporated into the comparison routines (in ops.py)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158292167",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11565#issuecomment-158292167",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11565",
    "id": 158292167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODI5MjE2Nw==",
    "user": {
      "login": "mattayes",
      "id": 8622473,
      "node_id": "MDQ6VXNlcjg2MjI0NzM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8622473?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattayes",
      "html_url": "https://github.com/mattayes",
      "followers_url": "https://api.github.com/users/mattayes/followers",
      "following_url": "https://api.github.com/users/mattayes/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattayes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattayes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattayes/subscriptions",
      "organizations_url": "https://api.github.com/users/mattayes/orgs",
      "repos_url": "https://api.github.com/users/mattayes/repos",
      "events_url": "https://api.github.com/users/mattayes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattayes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T06:06:24Z",
    "updated_at": "2015-11-20T06:06:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, really? I think the error is helpful for Series. What I find problematic is that strings always return `True` on a DataFrame-wide comparison. I'd expect `None` or at the very least `False`.\n\nWhat I originally wanted to do was replace all negative values in the DataFrame with `np.nan` and then `df.dropna()`. Under this structure I can't, because the strings will be replaced as well, leaving me with a rather empty DataFrame. Of course, if I wanted to replace all the positive values `I still couldn't!\n\nThoughts?\n"
  }
]
