[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3546909",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-3546909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 3546909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDY5MDk=",
    "user": {
      "login": "aman-thakral",
      "id": 617870,
      "node_id": "MDQ6VXNlcjYxNzg3MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/617870?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aman-thakral",
      "html_url": "https://github.com/aman-thakral",
      "followers_url": "https://api.github.com/users/aman-thakral/followers",
      "following_url": "https://api.github.com/users/aman-thakral/following{/other_user}",
      "gists_url": "https://api.github.com/users/aman-thakral/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aman-thakral/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aman-thakral/subscriptions",
      "organizations_url": "https://api.github.com/users/aman-thakral/orgs",
      "repos_url": "https://api.github.com/users/aman-thakral/repos",
      "events_url": "https://api.github.com/users/aman-thakral/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aman-thakral/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-18T15:02:05Z",
    "updated_at": "2012-01-18T15:02:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I actually need to do this for a current project I'm working on.  I'll get started on tackling this if it is open issue.   I will probably be using the gviz api as reference (http://code.google.com/p/google-visualization-python/). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3547089",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-3547089",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 3547089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDcwODk=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-18T15:14:05Z",
    "updated_at": "2012-01-18T15:14:05Z",
    "author_association": "MEMBER",
    "body": "By all means go right ahead. @mikedewar may also be interested for his project https://github.com/mikedewar/D3py\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3547703",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-3547703",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 3547703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDc3MDM=",
    "user": {
      "login": "mikedewar",
      "id": 149211,
      "node_id": "MDQ6VXNlcjE0OTIxMQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/149211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikedewar",
      "html_url": "https://github.com/mikedewar",
      "followers_url": "https://api.github.com/users/mikedewar/followers",
      "following_url": "https://api.github.com/users/mikedewar/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikedewar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikedewar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikedewar/subscriptions",
      "organizations_url": "https://api.github.com/users/mikedewar/orgs",
      "repos_url": "https://api.github.com/users/mikedewar/repos",
      "events_url": "https://api.github.com/users/mikedewar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikedewar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-18T15:42:54Z",
    "updated_at": "2012-01-18T15:42:54Z",
    "author_association": "NONE",
    "body": "Would be happy to see this exist! In fact I made a gist a while ago to do it: \n\nhttps://gist.github.com/1486027\n\nPlease feel free to use as a starting point! Probably could do with a bit more consideration in terms of multiple levels of keys and other stuff about data frames that I don't know about yet.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3553064",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-3553064",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 3553064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTMwNjQ=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-18T21:02:14Z",
    "updated_at": "2012-01-18T21:02:14Z",
    "author_association": "MEMBER",
    "body": "Now if we want to be truly hardcore (and why wouldn't we be?) we should fork UltraJSON and make it DataFrame-specific to get the best performance\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3553351",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-3553351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 3553351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTMzNTE=",
    "user": {
      "login": "aman-thakral",
      "id": 617870,
      "node_id": "MDQ6VXNlcjYxNzg3MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/617870?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aman-thakral",
      "html_url": "https://github.com/aman-thakral",
      "followers_url": "https://api.github.com/users/aman-thakral/followers",
      "following_url": "https://api.github.com/users/aman-thakral/following{/other_user}",
      "gists_url": "https://api.github.com/users/aman-thakral/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aman-thakral/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aman-thakral/subscriptions",
      "organizations_url": "https://api.github.com/users/aman-thakral/orgs",
      "repos_url": "https://api.github.com/users/aman-thakral/repos",
      "events_url": "https://api.github.com/users/aman-thakral/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aman-thakral/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-18T21:22:22Z",
    "updated_at": "2012-01-18T21:22:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "An interesting idea.  I'll have to examine the code, although my experience with C is somewhat limited.   I may need to do some serious review, but it will be excellent practice nonetheless.  Also, I had a look at the google-visualization-python api and I like the use of a \"table description\" that you can pass it to define the desired structure of the json string.  This provides a great deal of flexibility that would be really useful, and would make using the string in something like google charts really easy.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4691745",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-4691745",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 4691745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTE3NDU=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-26T10:56:06Z",
    "updated_at": "2012-03-26T10:56:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi all,\n\nI've done some preliminary work in this direction. In my fork of usjon I've added some basic support for numpy. Right now it just handles some of the basic numpy scalars and 1D arrays. The implementation isn't perfect (I'm a bit concerned with casting everything) but it seems to work ok. The goal is to eventually add support for numpy N-dimensional arrays (possibly with a max limit on N) and pandas data types, specifically Series and DataFrame.\n\nIt's my first time dealing with the Python and Numpy C-APIs so any comments are welcome!\n\nhttps://github.com/Komnomnomnom/ultrajson/commit/511ec035957817fb309577bafe267bc2b771f547\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4766765",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-4766765",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 4766765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjY3NjU=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-28T15:00:40Z",
    "updated_at": "2012-03-28T15:00:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Encoding support for DataFrame, Series and Index is now committed, as well as proper support for encoding numpy arrays. Still not sure how to properly handle decoding, right now I'm just passing the decoded dict / list to the relevant data-type's constructor. \n\nI decided to encode the DataFrame index and column labels separately (it suits my purposes and I think it's more efficient to work on the underlying numpy arrays). So you end up with something like:\n\n``` python\n>>> df = DataFrame([[1,2,3], [4,5,6]], columns=['x', 'y', 'z'], index=['a', 'b'])\n>>> ujson.encode(df)\n'{\"columns\":[\"x\",\"y\",\"z\"],\"index\":[\"a\",\"b\"],\"data\":[[1,2,3],[4,5,6]]}'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4767656",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-4767656",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 4767656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njc2NTY=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-28T15:34:57Z",
    "updated_at": "2012-03-28T15:34:57Z",
    "author_association": "MEMBER",
    "body": "I think what's needed for @mikedewar's needs and others would be:\n\n```\n'[{\"a\":1,\"b\":2,\"c\":3}, {\"a\":4,\"b\":5,\"c\":6}]'\n```\n\nwhen you deserialize that and pass it to DataFrame, you get back the same DataFrame:\n\n```\nIn [3]: DataFrame(json.loads('[{\"a\":1,\"b\":2,\"c\":3}, {\"a\":4,\"b\":5,\"c\":6}]'))\nOut[3]: \n   a  b  c\n0  1  2  3\n1  4  5  6\n```\n\nHowever, this doesn't give you the row index, but that's not a big deal for the particular use case (feeding a DataFrame into d3 or something else)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4768002",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-4768002",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 4768002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjgwMDI=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-28T15:50:24Z",
    "updated_at": "2012-03-28T15:50:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I was initially going to match the output of the `to_dict()` method but preferred the output above for my purposes. Note you can still recreate the `DataFrame` using:\n\n``` python\n>>> DataFrame(**ujson.loads('{\"columns\":[\"x\",\"y\",\"z\"],\"index\":[\"a\",\"b\"],\"data\":[[1,2,3],[4,5,6]]}'))\n   x  y  z\na  1  2  3\nb  4  5  6\n```\n\nThat said I don't think it would be too difficult to add an option to produce output like you mentioned. How about a `labelled` option where the output would be identical to the `to_dict()` method. e.g.\n\n``` python\n>>> df = DataFrame([[1,2,3], [4,5,6]], columns=['x', 'y', 'z'], index=['a', 'b'])\n>>> ujson.dumps(df, labelled=True)\n'{\"x\":{\"a\":1,\"b\":4},\"y\":{\"a\":2,\"b\":5},\"z\":{\"a\":3,\"b\":6}}'\n```\n\nOr is it absolutely necessary to suppress the index labels?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4784881",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-4784881",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 4784881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODQ4ODE=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-28T20:09:42Z",
    "updated_at": "2012-03-28T20:09:42Z",
    "author_association": "MEMBER",
    "body": "I'm thinking it might be preferable to ship the relevant ultrajson code in pandas and use it to implement `Series.to_json` and `DataFrame.to_json`. But having multiple output options makes sense, including the \"records format\" where the index is ignored, or could be put in each JSON object in the list\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4786653",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-4786653",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 4786653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODY2NTM=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-28T20:35:33Z",
    "updated_at": "2012-03-28T20:35:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed, it would make sense for it to be included in pandas.\n\nI think all the ujson code is required (as it will still have to deal with basic types), albeit tailored for numpy and pandas types. I can fork and attempt to introduce it into pandas if you point me in the right direction. Ujson is composed of several different c files, I'm not sure where to put them and how to include them in the build process.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4787042",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-4787042",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 4787042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODcwNDI=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-28T20:40:52Z",
    "updated_at": "2012-03-28T20:40:52Z",
    "author_association": "MEMBER",
    "body": "You would want to put it in a subdirectory of pandas/src and co-opt the extension configuration from the UltraJSON `setup.py` file\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5495540",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-5495540",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 5495540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTU1NDA=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-03T19:03:48Z",
    "updated_at": "2012-05-03T19:03:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've finally got around to revisiting this. I've added support to my fork of ujson for different output formats when encoding pandas data types:\n\n``` python\nIn [4]: df = DataFrame([[1,2,3], [4,5,6]], index=['a', 'b'], columns=['x', 'y', 'z']) \n\nIn [5]: ujson.encode(df, format=\"headers\")\nOut[5]: '{\"columns\":[\"x\",\"y\",\"z\"],\"index\":[\"a\",\"b\"],\"data\":[[1,2,3],[4,5,6]]}'\n\nIn [6]: ujson.encode(df, format=\"records\")\nOut[6]: '[{\"x\":1,\"y\":2,\"z\":3},{\"x\":4,\"y\":5,\"z\":6}]'\n\nIn [7]: ujson.encode(df, format=\"indexed\")\nOut[7]: '{\"a\":{\"x\":1,\"y\":2,\"z\":3},\"b\":{\"x\":4,\"y\":5,\"z\":6}}'\n\nIn [8]: ujson.encode(df, format=\"column_indexed\")\nOut[8]: '{\"x\":{\"a\":1,\"b\":4},\"y\":{\"a\":2,\"b\":5},\"z\":{\"a\":3,\"b\":6}}'\n```\n\nIf `format` isn't specified encoding defaults to the `column_indexed` format as it matches the output of `to_dict()` and it can be given straight to the `DataFrame` constructor. All of the encoding / iteration is performed in ujson in C.\n\nI've added similar support for Series and Index (although some of the formats don't suit them it tries to handle them sensibly)\n\n``` python\n\nIn [9]: s = Series([10, 20, 30, 40, 50, 60], name=\"myseries\", index=[6,7,8,9,10,15])\n\nIn [10]: ujson.encode(s, format=\"headers\")\nOut[10]: '{\"name\":\"myseries\",\"index\":[6,7,8,9,10,15],\"data\":[10,20,30,40,50,60]}'\n\nIn [11]: ujson.encode(s, format=\"records\")\nOut[11]: '[10,20,30,40,50,60]'\n\nIn [12]: ujson.encode(s, format=\"indexed\")\nOut[12]: '{\"6\":10,\"7\":20,\"8\":30,\"9\":40,\"10\":50,\"15\":60}'\n\nIn [13]: ujson.encode(s, format=\"column_indexed\")\nOut[13]: '{\"6\":10,\"7\":20,\"8\":30,\"9\":40,\"10\":50,\"15\":60}'\n\nIn [14]: i = Index([23, 45, 18, 98, 43, 11], name=\"myindex\")\n\nIn [15]: ujson.encode(i, format=\"headers\")\nOut[15]: '{\"name\":\"myindex\",\"data\":[23,45,18,98,43,11]}'\n\nIn [16]: ujson.encode(i, format=\"records\")\nOut[16]: '[23,45,18,98,43,11]'\n\nIn [17]: ujson.encode(i, format=\"indexed\")\nOut[17]: '[23,45,18,98,43,11]'\n\nIn [18]: ujson.encode(i, format=\"column_indexed\")\nOut[18]: '[23,45,18,98,43,11]'\n```\n\nMy next step is to integrate this into pandas but I'd welcome any comments. Are there values for the `format` argument that would fit better with existing pandas code?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5495662",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-5495662",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 5495662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTU2NjI=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-03T19:08:56Z",
    "updated_at": "2012-05-03T19:08:56Z",
    "author_association": "MEMBER",
    "body": "Hm, I'll think about the API. What you propose looks pretty good and you could just go for that for now, adding a `to_json` method to Series and DataFrame. It think would make sense to ship a pared down version of ujson in pandas (and have lots of tests, of course). Could put the source code in pandas.io or somewhere like that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5495926",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-5495926",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 5495926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTU5MjY=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-03T19:19:33Z",
    "updated_at": "2012-05-03T19:19:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "ujson is pure C, no python file except for setup.py and some test classes. I think all of it is required though (apart from its test code and metafiles) so it can properly handle whatever type happens to be in the DataFrame etc.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5496158",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-5496158",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 5496158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTYxNTg=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-03T19:27:41Z",
    "updated_at": "2012-05-03T19:27:41Z",
    "author_association": "MEMBER",
    "body": "Right, so you would just need to set it up to build as a submodule inside pandas and wire it up with the new object instance methods, and write appropriate tests. If you do some of the heavy lifting to set this up and make a pull request I can integrate and round things out in a few weeks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5647373",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-5647373",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 5647373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDczNzM=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-11T09:51:07Z",
    "updated_at": "2012-05-11T09:51:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi Wes,\n\nI've improved the performance a bit and made some other tweaks and improvements, most notably I've added support for direct decoding to numpy arrays which gets rid of the list to numpy array conversion step.\n\nI've updated the README on my fork with more information and some simple benchmarks, https://github.com/Komnomnomnom/ultrajson. Although there were a couple of surprises I'm pretty happy with the overall performance.\n\nIntegrating with pandas and the pandas build was a lot more straightforward than I expected. I should send through a pull request later on today (I'll attach it to this issue if I can).\n\nOh and I've changed the format argument to 'orient', seems to fit better with other DataFrame methods and format clashes with a Python built-in. I also added the 'values' format which only encodes the DataFrame values array, ignoring column and index labels.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5939216",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-5939216",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 5939216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzkyMTY=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-25T20:10:19Z",
    "updated_at": "2012-05-25T20:10:19Z",
    "author_association": "MEMBER",
    "body": "Addressed by #1263, #1309\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/7786674",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-7786674",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 7786674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODY2NzQ=",
    "user": {
      "login": "PhE",
      "id": 1107924,
      "node_id": "MDQ6VXNlcjExMDc5MjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1107924?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PhE",
      "html_url": "https://github.com/PhE",
      "followers_url": "https://api.github.com/users/PhE/followers",
      "following_url": "https://api.github.com/users/PhE/following{/other_user}",
      "gists_url": "https://api.github.com/users/PhE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PhE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PhE/subscriptions",
      "organizations_url": "https://api.github.com/users/PhE/orgs",
      "repos_url": "https://api.github.com/users/PhE/repos",
      "events_url": "https://api.github.com/users/PhE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PhE/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-16T14:18:15Z",
    "updated_at": "2012-08-16T14:18:15Z",
    "author_association": "NONE",
    "body": "All issues related to DataFrame.to_json() seems closed, but on version 0.8.1 there is not DataFrame.to_json() method.\nIs this feature released ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/7786776",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-7786776",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 7786776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODY3NzY=",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-16T14:21:56Z",
    "updated_at": "2012-08-16T14:21:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's not part of pandas for now due to issues with MinGW. It's in a\nseparate project for now and we will revisit this issue when we can.\nThanks.\nOn Aug 16, 2012 10:18 AM, \"Philippe Entzmann\" notifications@github.com\nwrote:\n\n> All issues related to DataFrame.to_json() seems closed, but on version\n> 0.8.1 there is not DataFrame.to_json() method.\n> Is this feature released ?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/631#issuecomment-7786674.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/7787250",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-7787250",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 7787250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODcyNTA=",
    "user": {
      "login": "PhE",
      "id": 1107924,
      "node_id": "MDQ6VXNlcjExMDc5MjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1107924?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PhE",
      "html_url": "https://github.com/PhE",
      "followers_url": "https://api.github.com/users/PhE/followers",
      "following_url": "https://api.github.com/users/PhE/following{/other_user}",
      "gists_url": "https://api.github.com/users/PhE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PhE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PhE/subscriptions",
      "organizations_url": "https://api.github.com/users/PhE/orgs",
      "repos_url": "https://api.github.com/users/PhE/repos",
      "events_url": "https://api.github.com/users/PhE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PhE/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-16T14:38:08Z",
    "updated_at": "2012-08-16T14:38:08Z",
    "author_association": "NONE",
    "body": "MinGW issues are Windows related, I suppose.\nI'm on Linux, can you point me to the project/branch ? (I am not a git/github master)\nThanks.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/7840846",
    "html_url": "https://github.com/pandas-dev/pandas/issues/631#issuecomment-7840846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/631",
    "id": 7840846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDA4NDY=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-18T01:58:39Z",
    "updated_at": "2012-08-18T01:58:39Z",
    "author_association": "MEMBER",
    "body": "it's pydata/pandasjson\n"
  }
]
