[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/199240915",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12679#issuecomment-199240915",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12679",
    "id": 199240915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTI0MDkxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-21T11:57:20Z",
    "updated_at": "2016-03-21T11:57:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "`.value_counts()` returns sorted by the values by default, otherwise its in an arbitrary ordering. If you want to preserve orderings while counting, you could do something like this.\n\n```\nIn [16]: df[0].groupby(df[0], sort=False).count()\nOut[16]: \n0\nh2      8\nh3      8\nh4      8\nhd2     7\nE4      8\nE6      8\nct1     6\nct2     6\nct3     6\nART1    2\nART2    2\nDGT1    2\nDGT2    2\nEST1    2\nEST2    2\nf1      2\nf2      2\nf3      2\nf4      2\nf5      2\ns1      2\ns2      2\ns3      2\ns4      2\ns5      2\ndtype: int64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/199246663",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12679#issuecomment-199246663",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12679",
    "id": 199246663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTI0NjY2Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-21T12:15:06Z",
    "updated_at": "2016-03-21T12:15:06Z",
    "author_association": "MEMBER",
    "body": "@jreback `value_counts` has a `sort` argument, which the OP used. Shouldn't this give the same result as your groupby approach ? (in any case, otherwise it is a very confusing argument)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/199251661",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12679#issuecomment-199251661",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12679",
    "id": 199251661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTI1MTY2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-21T12:29:47Z",
    "updated_at": "2016-03-21T12:29:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "no this is an arbitrary order, subject to how the hashtable works. Its not a guarantee or ANY kind of ordering. Typically this routine sorts by biggest values, and that is almost always what you want.\n\nI think this _could_ do what you want (e.g. original ordering)\n\n```\nIn [4]: df[0].value_counts(sort=False).reindex(pd.unique(df[0]))\nOut[4]: \nh2      8\nh3      8\nh4      8\nhd2     7\nE4      8\nE6      8\nct1     6\nct2     6\nct3     6\nART1    2\nART2    2\nDGT1    2\nDGT2    2\nEST1    2\nEST2    2\nf1      2\nf2      2\nf3      2\nf4      2\nf5      2\ns1      2\ns2      2\ns3      2\ns4      2\ns5      2\nName: 0, dtype: int64\n```\n\nyeah, I would say we could change this to have `sort=False` mean original ordering. I don't know if this would actually break anything (and done internally this isn't very costly as the uniques are already known).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/199256544",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12679#issuecomment-199256544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12679",
    "id": 199256544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTI1NjU0NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-21T12:45:32Z",
    "updated_at": "2016-03-21T12:45:32Z",
    "author_association": "MEMBER",
    "body": ">  I would say we could change this to have sort=False mean original ordering\n\n+1\n\nHave the order being dependent on the internals of the hashtable (and so also dependent of the dtype of your data) seems not very useful as an actual return value for `sort=False`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/199264706",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12679#issuecomment-199264706",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12679",
    "id": 199264706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTI2NDcwNg==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-21T13:08:11Z",
    "updated_at": "2016-03-21T13:08:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "For anyone looking to tackle this, IIRC there isn't a lot of code sharing between `Series.value_counts` and `GroupBy.value_counts`, so the latter needs to be updated as well.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250068492",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12679#issuecomment-250068492",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12679",
    "id": 250068492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDA2ODQ5Mg==",
    "user": {
      "login": "OXPHOS",
      "id": 8815664,
      "node_id": "MDQ6VXNlcjg4MTU2NjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8815664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OXPHOS",
      "html_url": "https://github.com/OXPHOS",
      "followers_url": "https://api.github.com/users/OXPHOS/followers",
      "following_url": "https://api.github.com/users/OXPHOS/following{/other_user}",
      "gists_url": "https://api.github.com/users/OXPHOS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OXPHOS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OXPHOS/subscriptions",
      "organizations_url": "https://api.github.com/users/OXPHOS/orgs",
      "repos_url": "https://api.github.com/users/OXPHOS/repos",
      "events_url": "https://api.github.com/users/OXPHOS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OXPHOS/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T04:24:55Z",
    "updated_at": "2016-09-28T04:24:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "The order is changed from `pandas/hashtable.pyx.build_count_table_object()`. Resizing of the `pymap` moves the entries by hashing values. The best solution I can think of is adding an index list to save the original order of the input:\n\n```\n    index_list = []\n    for value in values:\n        if value is not in index_list:\n            index_list.append(value)\n```\n\nand map the result to new lists from the order of the index list:\n\n```\n    ...\n    kh_destroy_pymap(table)\n\n    result_dict = dict(zip(result_keys, result_counts))\n    result_ordered_keys = index_list\n    result_ordered_counts = list[]\n    for key in result_ordered_keys:\n        result_ordered_counts.append(result_dict[key])\n\n    return result_ordered_keys, result_ordered_counts\n```\n\nI am not sure whether it's worth to change or whether there's better way to solve the problem.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305314607",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12679#issuecomment-305314607",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12679",
    "id": 305314607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTMxNDYwNw==",
    "user": {
      "login": "jstray",
      "id": 1028628,
      "node_id": "MDQ6VXNlcjEwMjg2Mjg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1028628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstray",
      "html_url": "https://github.com/jstray",
      "followers_url": "https://api.github.com/users/jstray/followers",
      "following_url": "https://api.github.com/users/jstray/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstray/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstray/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstray/subscriptions",
      "organizations_url": "https://api.github.com/users/jstray/orgs",
      "repos_url": "https://api.github.com/users/jstray/repos",
      "events_url": "https://api.github.com/users/jstray/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstray/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T20:55:27Z",
    "updated_at": "2017-05-31T20:55:27Z",
    "author_association": "NONE",
    "body": "+1 for maintaining the original order"
  }
]
