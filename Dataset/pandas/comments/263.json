[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2470459",
    "html_url": "https://github.com/pandas-dev/pandas/issues/263#issuecomment-2470459",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/263",
    "id": 2470459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzA0NTk=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T15:55:56Z",
    "updated_at": "2011-10-20T15:55:56Z",
    "author_association": "MEMBER",
    "body": "Hm, that's a bit ill-defined, isn't it (having no levels vs. length 0 levels which is what `Index([])` does)? This is not problem for example:\n\n`MultiIndex([[]], [[]])`\n\nCould you show how it leads to problems in set operations?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2470817",
    "html_url": "https://github.com/pandas-dev/pandas/issues/263#issuecomment-2470817",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/263",
    "id": 2470817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzA4MTc=",
    "user": {
      "login": "asqui",
      "id": 174182,
      "node_id": "MDQ6VXNlcjE3NDE4Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/174182?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asqui",
      "html_url": "https://github.com/asqui",
      "followers_url": "https://api.github.com/users/asqui/followers",
      "following_url": "https://api.github.com/users/asqui/following{/other_user}",
      "gists_url": "https://api.github.com/users/asqui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asqui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asqui/subscriptions",
      "organizations_url": "https://api.github.com/users/asqui/orgs",
      "repos_url": "https://api.github.com/users/asqui/repos",
      "events_url": "https://api.github.com/users/asqui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asqui/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T16:25:17Z",
    "updated_at": "2011-10-20T16:27:31Z",
    "author_association": "NONE",
    "body": "`MultiIndex([[]], [[]])` doesn't fail immediately, but it also doesn't quite \"work\", because `MultiIndex.__new__` cleverly turns that into a regular empty index, rather than an empty `MultiIndex` -- the result is `Index([], dtype=object)`\n\nThe only problem with set operations is with the patch which I submitted adding `MultiIndex.diff`, since difference is the only set operation that can result in an empty index. I'm just trying to fix that up, because `some_multiindex.diff(some_multiindex)` needs to result in an empty MultiIndex.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2471582",
    "html_url": "https://github.com/pandas-dev/pandas/issues/263#issuecomment-2471582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/263",
    "id": 2471582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzE1ODI=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T17:24:51Z",
    "updated_at": "2011-10-20T17:24:51Z",
    "author_association": "MEMBER",
    "body": "I got it. I'll take a look later today or early tomorrow and sort out a resolution, there may indeed be an upstream problem.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2477726",
    "html_url": "https://github.com/pandas-dev/pandas/issues/263#issuecomment-2477726",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/263",
    "id": 2477726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzc3MjY=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-21T04:48:45Z",
    "updated_at": "2011-10-21T04:48:45Z",
    "author_association": "MEMBER",
    "body": "I think this is resolved in my commit earlier tonight. So this works fine now:\n\n```\nIn [2]: index\nOut[2]: \nMultiIndex([('foo', 'one'), ('foo', 'two'), ('foo', 'three'), ('bar', 'one'),\n       ('bar', 'two'), ('baz', 'two'), ('baz', 'three'), ('qux', 'one'),\n       ('qux', 'two'), ('qux', 'three')], dtype=object)\n\nIn [3]: index - index\nOut[3]: MultiIndex([], dtype=object)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2481973",
    "html_url": "https://github.com/pandas-dev/pandas/issues/263#issuecomment-2481973",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/263",
    "id": 2481973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODE5NzM=",
    "user": {
      "login": "asqui",
      "id": 174182,
      "node_id": "MDQ6VXNlcjE3NDE4Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/174182?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asqui",
      "html_url": "https://github.com/asqui",
      "followers_url": "https://api.github.com/users/asqui/followers",
      "following_url": "https://api.github.com/users/asqui/following{/other_user}",
      "gists_url": "https://api.github.com/users/asqui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asqui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asqui/subscriptions",
      "organizations_url": "https://api.github.com/users/asqui/orgs",
      "repos_url": "https://api.github.com/users/asqui/repos",
      "events_url": "https://api.github.com/users/asqui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asqui/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-21T14:36:31Z",
    "updated_at": "2011-10-21T14:36:31Z",
    "author_association": "NONE",
    "body": "Not quite. I think the MultiIndex constructor should permit construction of an empty MultiIndex.\n\nTry this:\n\n```\nIn [80]: index\nOut[80]:\nMultiIndex([('foo', 'one'), ('foo', 'two'), ('foo', 'three'), ('bar', 'one'),\n       ('bar', 'two'), ('baz', 'two'), ('baz', 'three'), ('qux', 'one'),\n       ('qux', 'two'), ('qux', 'three')], dtype=object)\n\nIn [81]: index - index.sortlevel(0)[0]\n---------------------------------------------------------------------------\nException                                 Traceback (most recent call last)\nC:\\Users\\dfortunov\\<ipython-input-81-62c2391d25ca> in <module>()\n----> 1 index - index.sortlevel(0)[0]\n\nC:\\VirtualEnvs\\mss.dev\\lib\\site-packages\\pandas-0.5.0.dev20111021_a8c38b1-py2.6-win32.egg\\pandas\\core\\index.pyc in __sub\n__(self, other)\n    261\n    262     def __sub__(self, other):\n--> 263         return self.diff(other)\n    264\n    265     def __and__(self, other):\n\nC:\\VirtualEnvs\\mss.dev\\lib\\site-packages\\pandas-0.5.0.dev20111021_a8c38b1-py2.6-win32.egg\\pandas\\core\\index.pyc in diff(\nself, other)\n   1537         difference = sorted(set(self.values) - set(other.values))\n   1538         return MultiIndex.from_tuples(difference, sortorder=0,\n-> 1539                                       names=self.names)\n   1540\n   1541     def _assert_can_do_setop(self, other):\n\nC:\\VirtualEnvs\\mss.dev\\lib\\site-packages\\pandas-0.5.0.dev20111021_a8c38b1-py2.6-win32.egg\\pandas\\core\\index.pyc in from_\ntuples(cls, tuples, sortorder, names)\n   1002         arrays = zip(*tuples)\n   1003         return MultiIndex.from_arrays(arrays, sortorder=sortorder,\n-> 1004                                       names=names)\n   1005\n   1006     @property\n\nC:\\VirtualEnvs\\mss.dev\\lib\\site-packages\\pandas-0.5.0.dev20111021_a8c38b1-py2.6-win32.egg\\pandas\\core\\index.pyc in from_\narrays(cls, arrays, sortorder, names)\n    983\n    984         return MultiIndex(levels=levels, labels=labels, sortorder=sortorder,\n--> 985                           names=names)\n    986\n    987     @classmethod\n\nC:\\VirtualEnvs\\mss.dev\\lib\\site-packages\\pandas-0.5.0.dev20111021_a8c38b1-py2.6-win32.egg\\pandas\\core\\index.pyc in __new\n__(cls, levels, labels, sortorder, names)\n    840         assert(len(levels) == len(labels))\n    841         if len(levels) == 0:\n--> 842             raise Exception('Must pass non-zero number of levels/labels')\n    843\n    844         if len(levels) == 1:\n\nException: Must pass non-zero number of levels/labels\n```\n\nThe different sort order means it fails the equality trap in `MultiIndex.diff` (which would normally creates an empty index with the sneaky `self[:0]`, trick rather than creating one directly) and then goes on to pass the empty difference set to `MultiIndex.from_tuples()` which fails.\n\n---\n\n**Sidenote 1**: Are the repr outputs of MultiIndex supposed to be round-trippable? Python docs suggest that this should be the case for `__repr__` (but not `__str__`) however I couldn't construct the example MultiIndex from your previous comment by simply pasting that in.\n\n**Sidenote 2**: `MultiIndex.sortlevel()` docs are out of date -- they say it only returns the sorted index but in fact it returns a tuple containing the sorted index and an index array.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2482795",
    "html_url": "https://github.com/pandas-dev/pandas/issues/263#issuecomment-2482795",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/263",
    "id": 2482795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI3OTU=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-21T15:46:07Z",
    "updated_at": "2011-10-21T15:46:07Z",
    "author_association": "MEMBER",
    "body": "You're right, I was being lazy, this is the way to create an empty index (also only passing on the level names if they're the same...will write a test for this):\n\n```\n        if self.equals(other):\n            names = self.names if self.names == other.names else other.names\n            return MultiIndex(levels=[[]]*self.nlevels,\n                              labels=[[]]*self.nlevels,\n                              names=names)\n```\n\nhere's the commit\nhttps://github.com/wesm/pandas/commit/1b30cfc4244206e411de2e5c3734c6d6f6164bbe\n\nSidenote 1: round-trippable `__repr__` isn't that common in science.\nsidenote 2: pull request pls? =P\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2483042",
    "html_url": "https://github.com/pandas-dev/pandas/issues/263#issuecomment-2483042",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/263",
    "id": 2483042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODMwNDI=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-21T16:06:39Z",
    "updated_at": "2011-10-21T16:06:39Z",
    "author_association": "MEMBER",
    "body": "There's a separate bug in the function which is that you should not pass an empty list to `from_tuples` because it's can't infer the correct number of levels\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2483084",
    "html_url": "https://github.com/pandas-dev/pandas/issues/263#issuecomment-2483084",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/263",
    "id": 2483084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODMwODQ=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-21T16:10:38Z",
    "updated_at": "2011-10-21T16:10:38Z",
    "author_association": "MEMBER",
    "body": "https://github.com/wesm/pandas/commit/20ae0eda38971e92f9f90d19eb8e41e8c7e7ba9d\nhttps://github.com/wesm/pandas/commit/b82a93fa5b8245e460e80338f287398c8e90d6af\n"
  }
]
