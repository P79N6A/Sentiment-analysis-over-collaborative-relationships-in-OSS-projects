[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/246565939",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14209#issuecomment-246565939",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14209",
    "id": 246565939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjU2NTkzOQ==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-13T03:50:04Z",
    "updated_at": "2016-09-13T03:50:04Z",
    "author_association": "MEMBER",
    "body": "I'm neutral to negative on this type of solution until we do a more thorough analysis of what kind of deferred expression API we might want in pandas. I feel like it might want to wait for pandas 2.0 to have time to incubate and see some hardening through use.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/246568863",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14209#issuecomment-246568863",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14209",
    "id": 246568863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjU2ODg2Mw==",
    "user": {
      "login": "codecov-io",
      "id": 8655789,
      "node_id": "MDQ6VXNlcjg2NTU3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8655789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov-io",
      "html_url": "https://github.com/codecov-io",
      "followers_url": "https://api.github.com/users/codecov-io/followers",
      "following_url": "https://api.github.com/users/codecov-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov-io/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov-io/orgs",
      "repos_url": "https://api.github.com/users/codecov-io/repos",
      "events_url": "https://api.github.com/users/codecov-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-13T04:14:34Z",
    "updated_at": "2016-09-13T04:14:34Z",
    "author_association": "NONE",
    "body": "## [Current coverage](https://codecov.io/gh/pydata/pandas/pull/14209?src=pr) is 85.21% (diff: 72.72%)\n\n> Merging [#14209](https://codecov.io/gh/pydata/pandas/pull/14209?src=pr) into [master](https://codecov.io/gh/pydata/pandas/branch/master?src=pr) will decrease coverage by **0.02%**\n\n``` diff\n@@             master     #14209   diff @@\n==========================================\n  Files           140        141     +1   \n  Lines         50563      50684   +121   \n  Methods           0          0          \n  Messages          0          0          \n  Branches          0          0          \n==========================================\n+ Hits          43103      43191    +88   \n- Misses         7460       7493    +33   \n  Partials          0          0          \n```\n\n> Powered by [Codecov](https://codecov.io?src=pr). Last update [461e0e9...3c50338](https://codecov.io/gh/pydata/pandas/compare/461e0e9fba67b1f5cbe6ac5bd1db0272042777ee...3c503382931c36e13d261d4046b060b970083220?src=pr)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/246644682",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14209#issuecomment-246644682",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14209",
    "id": 246644682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjY0NDY4Mg==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-13T10:50:03Z",
    "updated_at": "2016-09-13T12:38:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's reasonable, and I'm not sure myself it should be in pandas.  That said, a couple points.  First, if this were included, I'd definitely mark it opt-in, experimental, etc.\n\nSecond, I don't see this as a delayed API solution, just a smoothover for a particular, existing use. The deferred pieces already exist in pandas, this just provides an arguably nicer way to express it.  e.g., you can already do:\n\n```\n   (pd.read_csv(...)\n    .assign(a=lambda x: x.b + 1,\n            c=lambda x: x.c - 2)\n    [lambda x: x.a > 100])\n```\n\nWhere the `X` allows this.\n\n```\n   (pd.read_csv(...)\n    .assign(a=X.b + 1\n            c=X.c - 2)\n    [X.a > 100]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248002767",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14209#issuecomment-248002767",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14209",
    "id": 248002767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODAwMjc2Nw==",
    "user": {
      "login": "bkandel",
      "id": 606089,
      "node_id": "MDQ6VXNlcjYwNjA4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/606089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkandel",
      "html_url": "https://github.com/bkandel",
      "followers_url": "https://api.github.com/users/bkandel/followers",
      "following_url": "https://api.github.com/users/bkandel/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkandel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkandel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkandel/subscriptions",
      "organizations_url": "https://api.github.com/users/bkandel/orgs",
      "repos_url": "https://api.github.com/users/bkandel/repos",
      "events_url": "https://api.github.com/users/bkandel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkandel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-19T14:06:28Z",
    "updated_at": "2016-09-19T14:06:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "What's the intended relationship between `X` and the `.query` method on dataframes? I.e. you can already do `df.query(\"a > 1\")` or `df.query(\"exp(a) > 3\")`. To my eyes, the `query` syntax is less opaque than the \"magic X\" syntax, which looks to the uninitiated like a dataframe that has not been created.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248005401",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14209#issuecomment-248005401",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14209",
    "id": 248005401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODAwNTQwMQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-19T14:15:38Z",
    "updated_at": "2016-09-19T14:15:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Technically this a bit more flexible because it could handle column names that aren't valid python names (e.g. `.query` can't handle `df[X['col with spaces'] == 5]`, but basically this is just an alternative to avoid coding in strings.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257156214",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14209#issuecomment-257156214",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14209",
    "id": 257156214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzE1NjIxNA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-30T14:59:50Z",
    "updated_at": "2016-10-30T14:59:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm going to close this for now - I still do think something like the `X` would be helpful for usability, but adding a 4th way to do something probably isn't the answer, especially given the 2.0 work.\n"
  }
]
