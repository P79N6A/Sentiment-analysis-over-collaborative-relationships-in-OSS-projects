[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33088291",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6043#issuecomment-33088291",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6043",
    "id": 33088291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDg4Mjkx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-23T01:18:23Z",
    "updated_at": "2014-01-23T01:18:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cyrusmaher I fixed this, but keep in mind that storing anything object-like a list (or you can see my example, I created an object that is really a wrapped scalar). is very inefficient as the resultant dtype is object. You are basically losing all of the power of vectorized computation.\n\nFurthermore you can only do very limited setting operations, e.g. only set via a single indexer, anything else won't work.\n\nYou should look at using Panels / Multi-indexed frames or multiple structures (e.g. frames) to avoid using lists at all costs.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33104776",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6043#issuecomment-33104776",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6043",
    "id": 33104776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTA0Nzc2",
    "user": {
      "login": "cyrusmaher",
      "id": 5199408,
      "node_id": "MDQ6VXNlcjUxOTk0MDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5199408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cyrusmaher",
      "html_url": "https://github.com/cyrusmaher",
      "followers_url": "https://api.github.com/users/cyrusmaher/followers",
      "following_url": "https://api.github.com/users/cyrusmaher/following{/other_user}",
      "gists_url": "https://api.github.com/users/cyrusmaher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cyrusmaher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cyrusmaher/subscriptions",
      "organizations_url": "https://api.github.com/users/cyrusmaher/orgs",
      "repos_url": "https://api.github.com/users/cyrusmaher/repos",
      "events_url": "https://api.github.com/users/cyrusmaher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cyrusmaher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-23T08:20:10Z",
    "updated_at": "2014-01-23T08:20:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you! For what I'm working on, the lists (really np arrays) are all of\ndifferent sizes and all operations are elementwise. The dataframe indexing\nis useful and applymap is nice too. Thanks again for your hard work!\n\nOn Jan 22, 2014, at 5:18 PM, jreback notifications@github.com wrote:\n\n@cyrusmaher https://github.com/cyrusmaher I fixed this, but keep in mind\nthat storing anything object-like a list (or you can see my example, I\ncreated an object that is really a wrapped scalar). is very inefficient as\nthe resultant dtype is object. You are basically losing all of the power of\nvectorized computation.\n\nFurthermore you can only do very limited setting operations, e.g. only set\nvia a single indexer, anything else won't work.\n\nYou should look at using Panels / Multi-indexed frames or multiple\nstructures (e.g. frames) to avoid using lists at all costs.\n\nâ€”\nReply to this email directly or view it on\nGitHubhttps://github.com/pydata/pandas/issues/6043#issuecomment-33088291\n.\n"
  }
]
