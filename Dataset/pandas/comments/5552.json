[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/28859342",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5552#issuecomment-28859342",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5552",
    "id": 28859342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODU5MzQy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T02:39:19Z",
    "updated_at": "2013-11-20T02:39:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe I just don't understand what nth does, not always empty.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/28859705",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5552#issuecomment-28859705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5552",
    "id": 28859705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODU5NzA1",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T02:49:12Z",
    "updated_at": "2013-11-20T02:49:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd Maybe `nth` on a `DataFrame` should take the column as an argument and then it would then solve #5503\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/28864325",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5552#issuecomment-28864325",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5552",
    "id": 28864325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODY0MzI1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T05:13:35Z",
    "updated_at": "2013-11-20T05:13:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's also really slow: http://stackoverflow.com/a/20087789/1240268\n\nI'm of the opinion that nth should take the nth, regardless of NaN, or take kwarg for NaN-ness. Need to think through the logic of what it is doing atm (it's only small!)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/28865139",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5552#issuecomment-28865139",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5552",
    "id": 28865139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODY1MTM5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T05:41:51Z",
    "updated_at": "2013-11-20T05:41:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "For convenience the current impl is:\n\n```\ndef nth(self, n):\n    def picker(arr):\n        arr = arr[notnull(arr)]\n        if len(arr) >= n + 1:\n            return arr.iget(n)\n        else:\n            return np.nan\n    return self.agg(picker)\n```\n\nWith a frame the `arr = arr[notnull(arr)]` does nothing, I really don't understand how the next bit even works since iget is not a DataFrame method....!\n\nI like the idea of a kwarg to describe this, grr to current behaviour: Series/DataFrame being inconsistent. Not sure how we should play this.\n\n...in any case we should use cumcount, much faster.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/28865685",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5552#issuecomment-28865685",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5552",
    "id": 28865685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODY1Njg1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T05:57:06Z",
    "updated_at": "2013-11-20T05:57:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Other possibility is plonk/override this into Series Groupby \"as is*\", but have it in Groupby the just take the nth row regardless of NaN, at least for now.\n\nAlso atm this is not that great, as it NaNs for groups smaller than n.\n\n\\* but using cumcount.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36779297",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5552#issuecomment-36779297",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5552",
    "id": 36779297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzc5Mjk3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T18:58:23Z",
    "updated_at": "2014-03-05T18:58:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any thoughts on this @jreback @TomAugspurger?\n\nShould we somehow depreciate old Series behaviour (of getting nth non-null result, I think this may be something that R does which is why we do it...)? Not sure on way forward.\n\nI still don't understand how this even works on a DataFrame... cumcount impl much easier (confusing to be different to Series though it already is).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36784773",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5552#issuecomment-36784773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5552",
    "id": 36784773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg0Nzcz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T19:45:49Z",
    "updated_at": "2014-03-05T19:45:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think u should break the API and have a na='drop' (but default to na=None), meaning don't remove Nan's \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36785319",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5552#issuecomment-36785319",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5552",
    "id": 36785319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg1MzE5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T19:50:25Z",
    "updated_at": "2014-03-05T19:50:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should we have something similar for DataFrames? Could be drop_na (think this is inline with other args), You think this arg should only be for Series or hack something which will work for Dataframes too?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36785505",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5552#issuecomment-36785505",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5552",
    "id": 36785505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg1NTA1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T19:52:10Z",
    "updated_at": "2014-03-05T19:52:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think for frames u could do any/all\nequivalent of doing a dropna beforehand and just default o None ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36785762",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5552#issuecomment-36785762",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5552",
    "id": 36785762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg1NzYy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T19:54:18Z",
    "updated_at": "2014-03-05T19:54:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure, I think that's not so bad. I will remember to use `_selected_obj` :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36821364",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5552#issuecomment-36821364",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5552",
    "id": 36821364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODIxMzY0",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-06T03:23:04Z",
    "updated_at": "2014-03-06T03:23:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure on the API for this to the old behaviour (i.e. not just filtering), for one thing there are two NaNs:\n- NaNs because there are no more results in the group.\n- NaNs values from the actual DataFrame/Series.\n\nFor another these are two very different results, you only get the groupby's by info if you use the old method.\n\nI still think should change... just not sure on API for it.\n\n```\nIn [11]: s = pd.Series([1, 2, 3, 1, np.nan])\n\nIn [12]: s.groupby([1, 2, 3, 1, 2]).nth(1)  # the NaN has meaning here (it was missing in s)\nOut[12]:\n3     1\n4   NaN\ndtype: float64\n\ns.groupby([1, 2, 3, 1, 2]).nth(1)  # old, has index from by, the NaN means group not that big (with dropped nas), observe that index is from by\n1     1\n2   NaN\n3   NaN\ndtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36953597",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5552#issuecomment-36953597",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5552",
    "id": 36953597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTUzNTk3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T00:02:50Z",
    "updated_at": "2014-03-07T00:02:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "travis is now happy...so go ahead at your leisure\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36957663",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5552#issuecomment-36957663",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5552",
    "id": 36957663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTU3NjYz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T01:06:35Z",
    "updated_at": "2014-03-07T01:07:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback still unsure about the API, any thoughts. I guess the old behaviour is an R thing?\n\nI guess it's annoying that these are two very different things:\n\na. filter frame and series to take just the nth rows. result is subframe/series.\nb. what it's doing before (at least in the series case, for dataframe it currently doesn't work*), which is grab the nth non-null for each group or NaN if not there, and index but the groupby by. result is not sub frame/series.\n\n\\* amusingly I think the iget call I was confused about raises but is caught so get NaN\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37026731",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5552#issuecomment-37026731",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5552",
    "id": 37026731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDI2NzMx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T14:09:28Z",
    "updated_at": "2014-03-07T14:09:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you need to support both cases, but make default a)\n\n`df.groupby(...).nth(5,drop_na=False)`\n\nso `drop_na=False` is a), `drop_na=True` is b)\n"
  }
]
