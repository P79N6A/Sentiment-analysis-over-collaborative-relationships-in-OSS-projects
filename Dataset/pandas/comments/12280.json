[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182374293",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12280#issuecomment-182374293",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12280",
    "id": 182374293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjM3NDI5Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T13:31:24Z",
    "updated_at": "2016-02-10T13:31:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Your specific case might be hard since `pd.pivot_table` is a top-level function, so pretty much anything could go into those arguments.\n\nOTOH something like `pd.DataFrame.pivot_table` might benefit from a richer tab complete protocol since the suggestions for `DataFrame.piviot_table(index=...)` could come from `self.index`. I've looked a bit into  what IPython can offer here, but haven't found much. Would be curious to see if you find anything.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182387221",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12280#issuecomment-182387221",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12280",
    "id": 182387221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjM4NzIyMQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T13:59:18Z",
    "updated_at": "2016-02-10T13:59:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "There isn't a hook in IPython for selecting completions specially based on the function or kwarg being completed-for. But for completing _on_ objects, `__dir__` is used, so your Columns workaround can at least avoid its thread:\n\n``` python\nclass Columns:\n    def __init__(self, df):\n        self._df = df\n\n    def __dir__(self):\n        return self._df.columns.tolist()\n\n    def __getattr__(self, key):\n        if key not in self._df.columns:\n            raise AttributeError(key)\n        return key\n```\n\nEven if there were a way for `pivot_table` to say \"look at column names of DataFrames\", where to find those data frames would be the next hurdle. If it were a method, there's more hope that custom kwarg-complete hook could help, but that doesn't exist, yet.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182409674",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12280#issuecomment-182409674",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12280",
    "id": 182409674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjQwOTY3NA==",
    "user": {
      "login": "rsdenijs",
      "id": 3237939,
      "node_id": "MDQ6VXNlcjMyMzc5Mzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3237939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsdenijs",
      "html_url": "https://github.com/rsdenijs",
      "followers_url": "https://api.github.com/users/rsdenijs/followers",
      "following_url": "https://api.github.com/users/rsdenijs/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsdenijs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsdenijs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsdenijs/subscriptions",
      "organizations_url": "https://api.github.com/users/rsdenijs/orgs",
      "repos_url": "https://api.github.com/users/rsdenijs/repos",
      "events_url": "https://api.github.com/users/rsdenijs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsdenijs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T15:00:15Z",
    "updated_at": "2016-02-10T15:00:15Z",
    "author_association": "NONE",
    "body": "@minrk  thanks for getting rid of the thread ;). \nSo shouldnt `df.pivot_table` as @TomAugspurger  mentions be able to use the autocompletion? Or is it not possible because  `pivot_table` is a method and not an object itself?\n\nAnother workaround is pd.pivot_table(index=df.COL1.name... etc) but it is longer and requires 2 tab completions\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182411841",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12280#issuecomment-182411841",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12280",
    "id": 182411841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjQxMTg0MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T15:04:54Z",
    "updated_at": "2016-02-10T15:07:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right now tab completion on the arguments to a function look up objects in the global namespace (plus maybe some other things like paths?). Since the index labels aren't in the namespace they aren't available for tab completion.\n\nIn principle letting the method say \"Hey, I know the argument to `index=` should come from `self.index`\" is possible, but would require (I'm guessing) a lot of work on the Jupyter and IPython kernel side to put the right hooks in place. And then it'd be up to pandas to add the correct annotations for what possible arguments are (thinking more about this, I'm not sure what this would look like).\n\nEither way, I think we'll close this for now, but if IPython makes somehting like this possible we'll revisit.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182437933",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12280#issuecomment-182437933",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12280",
    "id": 182437933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjQzNzkzMw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T15:47:09Z",
    "updated_at": "2016-02-10T15:47:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "> but would require (I'm guessing) a lot of work on the Jupyter and IPython kernel side\n\nNot necessarily a lot, but some. We already find the callable in order to get completion on the keywords:\n\n``` python\ndf.pivot_table(ind<tab> -> df.pivot_table(index=)\n```\n\nwhich means we should already have a handle on the method and the key. So what's missing is a hook for \"I know I'm completing a kwarg _value_, ask the callable what it should be.\" I'm not sure what would be a sensible way to ask that question, though. The obvious choice is a `_ip_complete_kwarg_(keyword)` method on the callable, but that would be a method on the _pivot_table method_, which is pretty weird.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182443095",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12280#issuecomment-182443095",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12280",
    "id": 182443095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjQ0MzA5NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T15:55:19Z",
    "updated_at": "2016-02-10T15:57:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's where my mind was going, or some kind of decorator that attaches the relevant completion method to the original method.\n\n``` pytohn\n@_ipy_complete_kwarg(index, options=lambda self: self.index.tolist())\n@_ipy_complete_kwarg(columns, options=lambda self: self.columns.tolist())\ndef pivot_table(self, index, ...):\n   ...\n```\n\nAdding those to a codebsae would be fun :)\n\nAnyway, something like this would be _nice_ for libraries like pandas that are used interactively, but IMO it's not essential.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182458314",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12280#issuecomment-182458314",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12280",
    "id": 182458314,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjQ1ODMxNA==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T16:22:31Z",
    "updated_at": "2016-02-10T16:22:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "One option in this case - less flexible, but much less code - define a method on `index`, so `df.method(index= <tab>` calls in to `df.index` for a list of options. That could be defined on any attribute of `df`; i.e. `df.method(foo= <tab>` calls `df.foo. _ipy_complete_kwarg()` or the like. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182463824",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12280#issuecomment-182463824",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12280",
    "id": 182463824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjQ2MzgyNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T16:31:11Z",
    "updated_at": "2016-02-10T16:31:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "One issue with that is something like `DataFrame.rename(index=...)` has a different set of allowed arguments then `DataFrame.pivot_table(index=...)`. Tricky problem.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182479221",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12280#issuecomment-182479221",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12280",
    "id": 182479221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjQ3OTIyMQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T16:58:23Z",
    "updated_at": "2016-02-10T16:58:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "> One issue with that is something like DataFrame.rename(index=...) has a different set of allowed arguments then DataFrame.pivot_table(index=...). Tricky problem.\n\nAh, good point.\n\nType annotations could help here...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182484050",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12280#issuecomment-182484050",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12280",
    "id": 182484050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjQ4NDA1MA==",
    "user": {
      "login": "rsdenijs",
      "id": 3237939,
      "node_id": "MDQ6VXNlcjMyMzc5Mzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3237939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsdenijs",
      "html_url": "https://github.com/rsdenijs",
      "followers_url": "https://api.github.com/users/rsdenijs/followers",
      "following_url": "https://api.github.com/users/rsdenijs/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsdenijs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsdenijs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsdenijs/subscriptions",
      "organizations_url": "https://api.github.com/users/rsdenijs/orgs",
      "repos_url": "https://api.github.com/users/rsdenijs/repos",
      "events_url": "https://api.github.com/users/rsdenijs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsdenijs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T17:07:12Z",
    "updated_at": "2016-02-10T17:07:39Z",
    "author_association": "NONE",
    "body": "> Adding those to a codebsae would be fun :)\n\nCant this be something run only on interactive mode? Monkeypatch? ^^\n\nBtw`@_ipy_complete_kwarg(index, options=lambda self: self.index.tolist())` seems wrong to me, as i can put any column in the index, not the values of the index. \n"
  }
]
