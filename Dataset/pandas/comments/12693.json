[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/199996340",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12693#issuecomment-199996340",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12693",
    "id": 199996340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTk5NjM0MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-22T20:05:49Z",
    "updated_at": "2016-03-22T20:05:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess. you are using a list-like value INSIDE a cell of a frame. This is quite inefficient and not generally supported. pull-requests accepts to fix in any event.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447117702",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12693#issuecomment-447117702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12693",
    "id": 447117702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzExNzcwMg==",
    "user": {
      "login": "kokes",
      "id": 8451755,
      "node_id": "MDQ6VXNlcjg0NTE3NTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8451755?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kokes",
      "html_url": "https://github.com/kokes",
      "followers_url": "https://api.github.com/users/kokes/followers",
      "following_url": "https://api.github.com/users/kokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/kokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kokes/subscriptions",
      "organizations_url": "https://api.github.com/users/kokes/orgs",
      "repos_url": "https://api.github.com/users/kokes/repos",
      "events_url": "https://api.github.com/users/kokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T20:56:08Z",
    "updated_at": "2018-12-13T20:56:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Current pandas gives a slightly different TypeError (`TypeError: unhashable type: 'set'`), which does get to the point - how would you deduplicate sets or lists? Unlike tuples and primitive types, these are not hashable (sets could be converted to frozensets, which are hashable), so you have to come up with a deduplication strategy.\r\n\r\nIn any case, since you're dealing with an object dtype, there is no guarantee that the next row won't contain a set or a list, so this deduplication gets only worse from then on. So pandas treats each value as a separate one and processes them as long as they are hashable. Just try a column with three tuples, it will work, then change the last one to be a set and it will fail on that very value.\r\n\r\nSo, I'm not sure there's a solid implementation that would work here given the lack of hashability in lists, there could potentially be a fix for sets, which would be converted to frozensets upon hash map insertion, but that does seem hacky and arbitrary."
  }
]
