[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292412142",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-292412142",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 292412142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQxMjE0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T02:56:16Z",
    "updated_at": "2017-04-07T02:56:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @jorisvandenbossche @shoyer @wesm @TomAugspurger "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292418809",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-292418809",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 292418809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQxODgwOQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-04-07T03:25:10Z",
    "updated_at": "2017-04-13T10:18:59Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15931?src=pr&el=h1) Report\n> Merging [#15931](https://codecov.io/gh/pandas-dev/pandas/pull/15931?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/7b8a6b1bc22f6fc0023c02ac8301e07b4ab80417?src=pr&el=desc) will **decrease** coverage by `0.02%`.\n> The diff coverage is `73.33%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/15931/graphs/tree.svg?width=650&height=150&src=pr&token=eZ4WkYLtcO)](https://codecov.io/gh/pandas-dev/pandas/pull/15931?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #15931      +/-   ##\n==========================================\n- Coverage   91.03%      91%   -0.03%     \n==========================================\n  Files         145      145              \n  Lines       49587    49636      +49     \n==========================================\n+ Hits        45141    45171      +30     \n- Misses       4446     4465      +19\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `88.77% <73.33%> (-0.03%)` | :arrow_down: |\n| #single | `40.53% <5.33%> (-0.04%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/15931?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/groupby.py](https://codecov.io/gh/pandas-dev/pandas/pull/15931?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ3JvdXBieS5weQ==) | `95.54% <100%> (ø)` | :arrow_up: |\n| [pandas/types/cast.py](https://codecov.io/gh/pandas-dev/pandas/pull/15931?src=pr&el=tree#diff-cGFuZGFzL3R5cGVzL2Nhc3QucHk=) | `85.11% <20%> (-0.63%)` | :arrow_down: |\n| [pandas/core/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/15931?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYmFzZS5weQ==) | `92.32% <71.42%> (-3.19%)` | :arrow_down: |\n| [pandas/core/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/15931?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvY29tbW9uLnB5) | `91.03% <0%> (+0.34%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15931?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15931?src=pr&el=footer). Last update [7b8a6b1...ff1a5f6](https://codecov.io/gh/pandas-dev/pandas/pull/15931?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292786912",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-292786912",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 292786912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjc4NjkxMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-09T13:48:07Z",
    "updated_at": "2017-04-09T13:48:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche @chris-b1 @shoyer thoughts (chris this was talked about at the meeting, to try to reduce the number of cases that we would handle). The idea is that we go ahead with this deprecation, then merge ``.agg`` (which will also have the same deprecation; or maybe I can just raise as that's new things, but that is after anyhow)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292788618",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-292788618",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 292788618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjc4ODYxOA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-09T14:18:39Z",
    "updated_at": "2017-04-09T14:18:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "This seems like a reasonable deprecation, the current behavior is probably too overloaded and hard to think about.\r\n\r\nMight put the recommended way in the deprecation message?  Would also be nice to have #4160 in 0.20, so the DataFrame case is more consistent.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292789593",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-292789593",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 292789593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjc4OTU5Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-09T14:35:45Z",
    "updated_at": "2017-04-09T14:35:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes going to try to fix #4160 before the release as well."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293535869",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-293535869",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 293535869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzUzNTg2OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T10:22:39Z",
    "updated_at": "2017-04-12T10:22:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche @TomAugspurger @chris-b1 @shoyer if you'd have a look. going to merge later today."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293728447",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-293728447",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 293728447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzcyODQ0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T22:45:03Z",
    "updated_at": "2017-04-12T22:45:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok docs are updated. note that in the post-PR #14668 I already rewrote a lot of the docs (and links) for agg/transform."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293850473",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-293850473",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 293850473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mzg1MDQ3Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T10:18:07Z",
    "updated_at": "2017-04-13T10:18:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "merging, will fix up any additional comments in #14668 "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/308031123",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-308031123",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 308031123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODAzMTEyMw==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-13T07:27:33Z",
    "updated_at": "2017-06-13T08:10:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, sorry for digging this up, but even if I understand the rationale for the deprecation, and after reading the What's New and the documentation, I still don't see how to replace the following use case.\r\n\r\n(The documentation is only covering the simple case where one either _apply exactly one aggregator per column_, or _the same set of aggregators over all columns_, but not when different sets of aggregator are applied to different columns):\r\n\r\nInput Dataframe:\r\n```\r\nmydf = pd.DataFrame(\r\n    {\r\n        'cat': ['A', 'A', 'A', 'B', 'B', 'C'],\r\n        'energy': [1.8, 1.95, 2.04, 1.25, 1.6, 1.01],\r\n        'distance': [1.2, 1.5, 1.74, 0.82, 1.01, 0.6]\r\n    },\r\n    index=range(6))\r\n```\r\n```\r\n  cat  distance  energy\r\n0   A      1.20    1.80\r\n1   A      1.50    1.95\r\n2   A      1.74    2.04\r\n3   B      0.82    1.25\r\n4   B      1.01    1.60\r\n5   C      0.60    1.01\r\n```\r\n\r\nCool aggregation and rename in one step (but DEPRECATED):\r\n\r\n```\r\nmydf_agg = mydf.groupby('cat').agg({\r\n    'energy': {'energy_sum': 'sum'},\r\n    'distance': {\r\n        'distance_sum': 'sum',\r\n        'distance_mean': 'mean',\r\n    },\r\n})\r\n```\r\n\r\nResulting in a MultiIndex columns\r\n\r\n```\r\n        energy     distance              \r\n    energy_sum distance_sum distance_mean\r\ncat                                      \r\nA         5.79         4.44         1.480\r\nB         2.85         1.83         0.915\r\nC         1.01         0.60         0.600\r\n```\r\n\r\nJust have to drop the upper level to get to my resulting dataframe with the renamed columns:\r\n\r\n```\r\nmydf_agg.columns = mydf_agg.columns.droplevel(level=0)\r\n```\r\n\r\n```\r\n     energy_sum  distance_sum  distance_mean\r\ncat                                         \r\nA          5.79          4.44          1.480\r\nB          2.85          1.83          0.915\r\nC          1.01          0.60          0.600\r\n```\r\n\r\nOf course this is a toy example, in a typical usecase there can be many more columns/aggregator functions.\r\n\r\nSo my question is: could you provide an example of the currently recommended way to achieve the exact same result (last Dataframe) **in the case where different sets of aggregator are applied to different columns**."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/308034307",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-308034307",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 308034307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODAzNDMwNw==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-13T07:42:20Z",
    "updated_at": "2017-06-13T07:42:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh i see that that was originally documented, but subsequently simplified:\r\nhttps://github.com/pandas-dev/pandas/pull/15931/commits/ff1a5f66fe4f7a225945e5a12c2b8063e163f954#diff-52364fb643114f3349390ad6bcf24d8fL521\r\n\r\nHowever by trying this approach, I'm still blocked:\r\n\r\n```\r\nmydf_agg2 = mydf.groupby('cat').agg({\r\n    'energy': 'sum',\r\n    'distance': ['sum', 'mean'],\r\n})\r\n\r\n    energy distance       \r\n       sum      sum   mean\r\ncat                       \r\nA     5.79     4.44  1.480\r\nB     2.85     1.83  0.915\r\nC     1.01     0.60  0.600\r\n```\r\n\r\nBut then, how can I rename with a mapping of (`level0 + level1 --> final_name`) like this:\r\n\r\n```\r\n{\r\n    'energy.sum': 'energy_sum',\r\n    'distance.sum': 'distance_sum',\r\n    'distance.mean': 'distance_mean',\r\n}\r\n```\r\n\r\nOr even better, by using some kind of callable like this:\r\n\r\n```\r\ndef rename_mapping(level0, level1):\r\n    return level0 + '_' + level1\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/308039080",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-308039080",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 308039080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODAzOTA4MA==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-13T08:03:11Z",
    "updated_at": "2017-06-13T08:03:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry for the spam (this is the last one) but I just found an interesting discussion and solutions here: https://stackoverflow.com/questions/19078325/naming-returned-columns-in-pandas-aggregate-function (don't look at the accepted answer)\r\n\r\nIn particular, the missing piece of information for me was the existence of the `df.columns.ravel()` method.\r\n\r\n```\r\nnewidx = []\r\nfor (n1,n2) in mydf_agg.columns.ravel():\r\n    newidx.append(\"%s_%s\" % (n1,n2))\r\nmydf_agg.columns=newidx\r\n```\r\n\r\nMore generally I think this is good to leave a link to this stackoverflow thread here, since after seeing the deprecation message, this GitHub pull request is one of the first place where to look for solutions (after the docs and what's new).\r\n\r\nMaybe some of [Joel Ostblom's answer](https://stackoverflow.com/a/43897124/862188) and/or of [Gadi Oron's answer](https://stackoverflow.com/a/40702938/862188) could make their way into the docs as an example for all of us that relied previously on this relabeling functionality with .agg() ?\r\n\r\nIn particular, with this deprecation, the use of lambda functions in .agg() is directly impacted (cf Joel Ostblom's answer above) and could warrant a notice in the docs."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/308074750",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-308074750",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 308074750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODA3NDc1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-13T10:28:54Z",
    "updated_at": "2017-06-13T10:28:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zertrin if you want to show a more extended / complex example in the docs that would be great. push up a PR and will comment."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/335882143",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-335882143",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 335882143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTg4MjE0Mw==",
    "user": {
      "login": "garfieldthecat",
      "id": 20935452,
      "node_id": "MDQ6VXNlcjIwOTM1NDUy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20935452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garfieldthecat",
      "html_url": "https://github.com/garfieldthecat",
      "followers_url": "https://api.github.com/users/garfieldthecat/followers",
      "following_url": "https://api.github.com/users/garfieldthecat/following{/other_user}",
      "gists_url": "https://api.github.com/users/garfieldthecat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garfieldthecat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garfieldthecat/subscriptions",
      "organizations_url": "https://api.github.com/users/garfieldthecat/orgs",
      "repos_url": "https://api.github.com/users/garfieldthecat/repos",
      "events_url": "https://api.github.com/users/garfieldthecat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garfieldthecat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-11T17:16:20Z",
    "updated_at": "2017-10-11T17:16:20Z",
    "author_association": "NONE",
    "body": "Please, please, pretty please, do NOT deprecate this. Not only is removing backward compatibility always an issue, and one of the key obstacles in the adoption of Python for data science - it makes it way more cumbersome to run what should be extremely banal, i.e. a groupby where different aggregate functions are applied to different columns (sum of x, avg of x, min of y, etc), and where you have the explicit need to rename the resulting field (e.g. sum_x won't do). **The way you are going, you are forcing people to rename fields manually after the groupby - surely this is as non-pythonic as it gets?**\r\n\r\nI do not understand in what way removing this feature would possibly clean anything up, or make anything clearer. How would you answer this question now? https://stackoverflow.com/questions/32374620/python-pandas-applying-different-aggregate-functions-to-different-columns\r\n\r\nHow would you recommend rewriting this very simple and IMHO pythonically elegant line of code?\r\n\r\n```\r\ndf.groupby('qtr').agg({\"realgdp\": {\"mean_gdp\": \"Mean GDP\", \"std_gdp\": \"STD of GDP\"},\r\n                                \"unemp\": {\"mean_unemp\": \"Mean unemployment\"}})\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/335886716",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-335886716",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 335886716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTg4NjcxNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-11T17:31:18Z",
    "updated_at": "2017-10-11T17:31:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I assume you meant\r\n\r\n```python\r\nIn [21]: df.groupby('qtr').agg({\"realgdp\": {\"mean_gdp\": \"mean\", \"std_gdp\": \"std\"},\r\n    ...:                        \"unemp\": {\"mean_unemp\": \"mean\"}})\r\n    ...:\r\n/Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/groupby.py:4139: FutureWarning: using a dict with renaming is deprecated and will be removed in a future version\r\n  return super(DataFrameGroupBy, self).aggregate(arg, *args, **kwargs)\r\nOut[21]:\r\n     realgdp                  unemp\r\n    mean_gdp     std_gdp mean_unemp\r\nqtr\r\n1     1692.0  115.258405       4.95\r\n2     1658.8         NaN       5.60\r\n3     1723.0         NaN       4.60\r\n4     1753.9         NaN       4.20\r\n\r\n```\r\n\r\nThe recommendation in the whatsnew gets you most of the way there:\r\n\r\n```python\r\nIn [30]: r = df.groupby(\"qtr\").agg({\"realgdp\": ['mean', 'std'], \"unemp\": ['mean']})\r\n\r\nIn [32]: r\r\nOut[32]:\r\n    realgdp             unemp\r\n       mean         std  mean\r\nqtr\r\n1    1692.0  115.258405  4.95\r\n2    1658.8         NaN  5.60\r\n3    1723.0         NaN  4.60\r\n4    1753.9         NaN  4.20\r\n\r\n```\r\n\r\nDoes that work for you? At this point I typically get rid of the MI in the columns, since I find them awkward to work with."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/335896170",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-335896170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 335896170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTg5NjE3MA==",
    "user": {
      "login": "garfieldthecat",
      "id": 20935452,
      "node_id": "MDQ6VXNlcjIwOTM1NDUy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20935452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garfieldthecat",
      "html_url": "https://github.com/garfieldthecat",
      "followers_url": "https://api.github.com/users/garfieldthecat/followers",
      "following_url": "https://api.github.com/users/garfieldthecat/following{/other_user}",
      "gists_url": "https://api.github.com/users/garfieldthecat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garfieldthecat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garfieldthecat/subscriptions",
      "organizations_url": "https://api.github.com/users/garfieldthecat/orgs",
      "repos_url": "https://api.github.com/users/garfieldthecat/repos",
      "events_url": "https://api.github.com/users/garfieldthecat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garfieldthecat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-11T17:59:41Z",
    "updated_at": "2017-10-11T17:59:41Z",
    "author_association": "NONE",
    "body": "How would you recommend renaming the columns?\r\nIf I just do columns.droplevel(0), I end up with multiple columns sharing the same name, as the same aggregate function applies to multiple columns.\r\nI could do something like\r\n` r.columns = [' '.join(col).strip() for col in r.columns.values]`\r\n\r\nso that the fields become: [ \"x sum\", \"x min\", \"y sum\"] etc. (or whatever the aggregate functions were)\r\nand take it from here, but it is still longer and more cumbersome that my previous approach.\r\n\r\n**Can someone please, please, please remind me why this is being deprecated?\r\n\r\nI see the downsides, I do not see any upside!**\r\n\r\nRemoving backward compatibility should always be a last resort. Doing so when the new approach becomes way longer and more convoluted, well, it just beggars belief!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336008846",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-336008846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 336008846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjAwODg0Ng==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T03:13:51Z",
    "updated_at": "2017-10-12T14:29:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "> At this point I typically get rid of the MI in the columns, since I find them awkward to work with.\r\n\r\nYeah, this is one of issue with this change: it makes something trivially simple to do before **much** harder to do now. Especially when applying the same aggregate over many columns, you can't just drop the first level of the MI.\r\n\r\nIn summary, this is what this changes results in:\r\n\r\n### Before: \r\n\r\nstraightforward, quite easy to understand, flexible (I have the choice for the name of the columns)\r\n\r\n```\r\nmydf_agg = mydf.groupby('cat').agg({\r\n    'energy': {'total_energy': 'sum'},\r\n    'distance': {\r\n        'total_distance': 'sum',\r\n        'average_distance': 'mean',\r\n    },\r\n})\r\n# get rid of the first MultiIndex level in a pretty straightforward way\r\nmydf_agg.columns = mydf_agg.columns.droplevel(level=0)\r\n```\r\n\r\nResult:\r\n\r\n```\r\n    total_energy total_distance average_distance\r\ncat\r\nA           5.79           4.44            1.480\r\nB           2.85           1.83            0.915\r\nC           1.01           0.60            0.600\r\n```\r\n\r\n### After:\r\n\r\nNo way of really customizing the column names after aggregation, the best we can get is some combination of original column name and aggregate function's name:\r\n\r\n```\r\nmydf_agg2 = mydf.groupby('cat').agg({\r\n    'energy': 'sum',\r\n    'distance': ['sum', 'mean'],\r\n})\r\nmydf_agg2.columns = ['_'.join(col) for col in mydf_agg2.columns]\r\n```\r\n\r\nResult:\r\n\r\n```\r\n     energy_sum  distance_sum  distance_mean\r\ncat\r\nA          5.79          4.44          1.480\r\nB          2.85          1.83          0.915\r\nC          1.01          0.60          0.600\r\n```\r\n\r\nNote that I couldn't really choose the name of the resulting columns.... If I want to, I need to find another way of replacing the name. Like a mapping like this (which is annoying to write):\r\n\r\n```\r\nmydf_agg2.rename({\"energy_sum\": \"total_energy\", \"distance_sum\": \"total_distance\", \"distance_mean\": \"average_distance\"}, inplace=True)\r\n```\r\n\r\nNow we finally get the same result as before, just in a longer and more complicated way...\r\n\r\n--- \r\n\r\nAnd another annoying issue with this change: when using _custom aggregation callables_: \r\n\r\n* Before there's no issue since I could specify the destination's column name myself. \r\n* Now I can't do it that easily since the destination column name is based on the aggregate callable's name and I need to make sure that my custom aggregation callable has a `__name__` attribute... Which isn't necessary the case with partial or lambda functions for example."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336092107",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-336092107",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 336092107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjA5MjEwNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T10:47:35Z",
    "updated_at": "2017-10-12T10:47:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Can someone please, please, please remind me why this is being deprecated?\r\n\r\n> I see the downsides, I do not see any upside!\r\n\r\nI'm assuming you saw the release note with the deprecation? A nested dictionary meant we had two behaviors for the renaming, either selecting columns, or assigning names.\r\n\r\nThanks for the thoughtful writeup @zertrin. It sounds like the main difficulty is with the renaming. Would something like\r\n\r\n```python\r\nmydf.groupby('cat').agg({\r\n    'energy': 'sum',\r\n    'distance': ['sum', 'mean'],\r\n}).collapse_levels(columns=\"_\")  # [-'.join(col) for col in df.columns]\r\n```\r\n\r\nWork for you? That's when the \"default\"  names are OK. For non-default names, maybe something like\r\n\r\n```python\r\nmydf.groupby('cat').agg({\r\n    ...\r\n}).relabel(columns=['c1', 'c2', 'c3'])\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336093588",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-336093588",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 336093588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjA5MzU4OA==",
    "user": {
      "login": "garfieldthecat",
      "id": 20935452,
      "node_id": "MDQ6VXNlcjIwOTM1NDUy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20935452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garfieldthecat",
      "html_url": "https://github.com/garfieldthecat",
      "followers_url": "https://api.github.com/users/garfieldthecat/followers",
      "following_url": "https://api.github.com/users/garfieldthecat/following{/other_user}",
      "gists_url": "https://api.github.com/users/garfieldthecat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garfieldthecat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garfieldthecat/subscriptions",
      "organizations_url": "https://api.github.com/users/garfieldthecat/orgs",
      "repos_url": "https://api.github.com/users/garfieldthecat/repos",
      "events_url": "https://api.github.com/users/garfieldthecat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garfieldthecat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T10:55:24Z",
    "updated_at": "2017-10-12T10:55:24Z",
    "author_association": "NONE",
    "body": "> I'm assuming you saw the release note with the deprecation? A nested dictionary meant we had two >behaviors for the renaming, either selecting columns, or assigning names.\r\n\r\nDo you mean these notes? https://github.com/pandas-dev/pandas/pull/14668\r\nI read them but I'm not sure I understood the reason. Could you maybe try to re-explain?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336115060",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-336115060",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 336115060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjExNTA2MA==",
    "user": {
      "login": "garfieldthecat",
      "id": 20935452,
      "node_id": "MDQ6VXNlcjIwOTM1NDUy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20935452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garfieldthecat",
      "html_url": "https://github.com/garfieldthecat",
      "followers_url": "https://api.github.com/users/garfieldthecat/followers",
      "following_url": "https://api.github.com/users/garfieldthecat/following{/other_user}",
      "gists_url": "https://api.github.com/users/garfieldthecat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garfieldthecat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garfieldthecat/subscriptions",
      "organizations_url": "https://api.github.com/users/garfieldthecat/orgs",
      "repos_url": "https://api.github.com/users/garfieldthecat/repos",
      "events_url": "https://api.github.com/users/garfieldthecat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garfieldthecat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T12:23:03Z",
    "updated_at": "2017-10-12T12:23:03Z",
    "author_association": "NONE",
    "body": "Also, another problem with renaming is if you use more than one lambda function on the same column, e.g. to calculate the % of both sum(x) and count(x). In this case, you'd end up with multiple columns having the same name: \"x_lambda\". Quite a mess! You could rename the columns based on their position rather than their names, but it's extremely cumbersome and un-pythonic. All of this would, of course, be avoided by not deprecating. \r\nOr is there maybe a better way I am missing?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336139085",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-336139085",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 336139085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjEzOTA4NQ==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T13:35:39Z",
    "updated_at": "2017-10-12T13:35:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger Thanks for proposing alternatives, however these miss to tackle the real issue.\r\n\r\nThe problem is not whether or not it is possible to do the renaming and how. The answer to that is yes it's possible and your proposed solutions do not bring more value than the other example above (like assigning directly to `mydf.columns`), except the burden of adding two more methods to the already long list of methods of the DataFrame class.\r\n\r\n**The real issue is that this change forces us to separate the place where the renaming is defined from the definition of the corresponding aggregate function.**\r\n\r\nSemantically this is really annoying, because now we have to keep track of two lists and keep them in sync when we want to add another aggregate column. We must track down in which order the new aggregate column will land and where in the renaming list to update after adding one more aggregate function...\r\n\r\nSo in a nutshell: \r\n* Before, column renaming and the definition of the operation were together, so they are _naturally_ in sync. \r\n* Now, first you define the aggregate callable, and _afterward_ you have to rename and be very careful about the resulting column order.\r\n\r\n---\r\n\r\nAnd no one has even begun to address the issue of using **custom aggregates**. Because these custom callables may have the same `__name__` attribute and this results in an exception (partial functions inherit the name of the parent function, and one cannot define it at creation, and all lambda functions are named `<lambda>` and this is worse because afaik there's no way to define the name of a lambda).\r\n\r\nThus this is a backward incompatible change, and this one has no easy workaround. (there exists tricky workarounds to add the `__name__` attribute)\r\n\r\nSlightly extended example from above with lambda and partial:\r\n\r\n_(please note, this is a crafted example for the purpose of demonstrating the problem, but all of the demonstrated issues here did bite me in real life since the change)_\r\n\r\n### Before:\r\n\r\neasy and works as expected\r\n\r\n```python\r\nimport numpy as np\r\nimport statsmodels.robust as smrb\r\n\r\npercentile17 = lambda x: np.percentile(x, 17)\r\nmad_c1 = partial(smrb.mad, c=1)\r\n\r\nmydf_agg = mydf.groupby('cat').agg({\r\n    'energy': {\r\n        'total_energy': 'sum',\r\n        'energy_p98': lambda x: np.percentile(x, 98),\r\n        'energy_p17': percentile17,\r\n    },\r\n    'distance': {\r\n        'total_distance': 'sum',\r\n        'average_distance': 'mean',\r\n        'distance_mad': smrb.mad,\r\n        'distance_mad_c1': mad_c1,\r\n    },\r\n})\r\n```\r\n\r\nresults in\r\n\r\n```\r\n          energy                             distance\r\n    total_energy energy_p98 energy_p17 total_distance average_distance distance_mad distance_mad_c1\r\ncat\r\nA           5.79     2.0364     1.8510           4.44            1.480     0.355825           0.240\r\nB           2.85     1.5930     1.3095           1.83            0.915     0.140847           0.095\r\nC           1.01     1.0100     1.0100           0.60            0.600     0.000000           0.000\r\n```\r\n\r\nand all is left is:\r\n\r\n```python\r\n# get rid of the first MultiIndex level in a pretty straightforward way\r\nmydf_agg.columns = mydf_agg.columns.droplevel(level=0)\r\n```\r\n\r\n### After\r\n\r\n```python\r\nimport numpy as np\r\nimport statsmodels.robust as smrb\r\n\r\npercentile17 = lambda x: np.percentile(x, 17)\r\nmad_c1 = partial(smrb.mad, c=1)\r\n\r\nmydf_agg = mydf.groupby('cat').agg({\r\n    'energy': [\r\n    \t'sum',\r\n    \tlambda x: np.percentile(x, 98),\r\n    \tpercentile17\r\n    ],\r\n    'distance': [\r\n    \t'sum',\r\n    \t'mean',\r\n    \tsmrb.mad,\r\n    \tmad_c1\r\n    ],\r\n})\r\n```\r\n\r\nThe above breaks because the lambda functions will all result in columns named `<lambda>` which results in\r\n\r\n    SpecificationError: Function names must be unique, found multiple named <lambda>\r\n\r\n**Backward incompatible regression: one cannot apply two different lambdas to the same original column anymore.**\r\n\r\nIf one removes the `lambda x: np.percentile(x, 98)` from above, we get the same issue with the partial function which inherits the function name from the original function:\r\n\r\n    SpecificationError: Function names must be unique, found multiple named mad\r\n\r\nFinally, after overwriting the `__name__` attribute of the partial (`mad_c1.__name__ = 'mad_c1'`) we get:\r\n\r\n```\r\n    energy          distance\r\n       sum <lambda>      sum   mean       mad mad_c1\r\ncat\r\nA     5.79   1.8510     4.44  1.480  0.355825  0.240\r\nB     2.85   1.3095     1.83  0.915  0.140847  0.095\r\nC     1.01   1.0100     0.60  0.600  0.000000  0.000\r\n```\r\n\r\nwith still the renaming to deal with."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341315913",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-341315913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 341315913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTMxNTkxMw==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T04:39:33Z",
    "updated_at": "2017-11-02T04:39:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger @jreback do we need to open a separate issue to get this deprecation being reconsidered with all the new facts summarized above that were not initially considered when deciding this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341322745",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-341322745",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 341322745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTMyMjc0NQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T05:38:14Z",
    "updated_at": "2017-11-02T05:38:14Z",
    "author_association": "MEMBER",
    "body": "If you feel strongly about this, then yes, a new issue would be appropriate. I agree that this API is not as expressive as what we had before, but the behavior we had before for `.agg()` was inconsistent and could not be explained with a simple set of rules. Please read the full discussion on #14668 for context.\r\n\r\nI would be interested to see proposals for alternative APIs that solve your use-case without the full complexity of the deprecated `GroupBy.agg()` API. For example, one solution might be to handle the deprecated behavior (dict-of-dict) with a new dedicated method."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341385364",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-341385364",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 341385364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTM4NTM2NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T10:53:13Z",
    "updated_at": "2017-11-02T10:53:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "But yes, please open a new issue for discussion so that this isn't buried.\n\nOn Thu, Nov 2, 2017 at 12:38 AM, Stephan Hoyer <notifications@github.com>\nwrote:\n\n> If you feel strongly about this, then yes, a new issue would be\n> appropriate. I agree that this API is not as expressive as what we had\n> before, but the behavior we had before for .agg() was inconsistent and\n> could not be explained with a simple set of rules. Please read the full\n> discussion on #14668 <https://github.com/pandas-dev/pandas/pull/14668>\n> for context.\n>\n> I would be interested to see proposals for alternative APIs that solve\n> your use-case without the full complexity of the deprecated GroupBy.agg()\n> API. For example, one solution might be to handle the deprecated behavior\n> (dict-of-dict) with a new dedicated method.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/15931#issuecomment-341322745>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHInnCQicjV9USJ3E3nmQ5obvMqhEYks5syVVKgaJpZM4M2ZQ4>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344101246",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-344101246",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 344101246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDEwMTI0Ng==",
    "user": {
      "login": "jaron-hivery",
      "id": 18523588,
      "node_id": "MDQ6VXNlcjE4NTIzNTg4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/18523588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaron-hivery",
      "html_url": "https://github.com/jaron-hivery",
      "followers_url": "https://api.github.com/users/jaron-hivery/followers",
      "following_url": "https://api.github.com/users/jaron-hivery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaron-hivery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaron-hivery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaron-hivery/subscriptions",
      "organizations_url": "https://api.github.com/users/jaron-hivery/orgs",
      "repos_url": "https://api.github.com/users/jaron-hivery/repos",
      "events_url": "https://api.github.com/users/jaron-hivery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaron-hivery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T00:06:57Z",
    "updated_at": "2017-11-14T00:06:57Z",
    "author_association": "NONE",
    "body": "@zertrin did you open a new issue for this discussion? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344102259",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-344102259",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 344102259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDEwMjI1OQ==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T00:12:31Z",
    "updated_at": "2017-11-14T00:12:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not yet, have been pretty busy lately, but have a draft. Will try to finish it very soon. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345497312",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-345497312",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 345497312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ5NzMxMg==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-19T07:17:45Z",
    "updated_at": "2017-11-19T07:17:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jaron-hivery the new issue is #18366 "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348309844",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-348309844",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15931",
    "id": 348309844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODMwOTg0NA==",
    "user": {
      "login": "pirsquared",
      "id": 1900410,
      "node_id": "MDQ6VXNlcjE5MDA0MTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1900410?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirsquared",
      "html_url": "https://github.com/pirsquared",
      "followers_url": "https://api.github.com/users/pirsquared/followers",
      "following_url": "https://api.github.com/users/pirsquared/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirsquared/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirsquared/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirsquared/subscriptions",
      "organizations_url": "https://api.github.com/users/pirsquared/orgs",
      "repos_url": "https://api.github.com/users/pirsquared/repos",
      "events_url": "https://api.github.com/users/pirsquared/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirsquared/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-30T20:22:28Z",
    "updated_at": "2017-11-30T20:22:28Z",
    "author_association": "NONE",
    "body": "I'm sure @zertrin saw an email but I provided an easy recipe to produce the same results using existing API.\r\n\r\nhttps://github.com/pandas-dev/pandas/issues/18366#issuecomment-348260597"
  }
]
