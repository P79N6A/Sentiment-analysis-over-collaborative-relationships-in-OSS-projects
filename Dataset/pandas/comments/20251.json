[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372118109",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20251#issuecomment-372118109",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20251",
    "id": 372118109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjExODEwOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-11T14:06:11Z",
    "updated_at": "2018-03-11T14:06:11Z",
    "author_association": "MEMBER",
    "body": "Didn't see this one yet, but just opened: https://github.com/pandas-dev/pandas/issues/20281. \r\nDeprecating is also a solution, but just fixing the behaviour when no dtype is specified (the one you show above) is also an option.\r\n\r\nBut I agree it is hardly useful given the constraint on keeping the same number of elements."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372131876",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20251#issuecomment-372131876",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20251",
    "id": 372131876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjEzMTg3Ng==",
    "user": {
      "login": "villasv",
      "id": 6609289,
      "node_id": "MDQ6VXNlcjY2MDkyODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6609289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/villasv",
      "html_url": "https://github.com/villasv",
      "followers_url": "https://api.github.com/users/villasv/followers",
      "following_url": "https://api.github.com/users/villasv/following{/other_user}",
      "gists_url": "https://api.github.com/users/villasv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/villasv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/villasv/subscriptions",
      "organizations_url": "https://api.github.com/users/villasv/orgs",
      "repos_url": "https://api.github.com/users/villasv/repos",
      "events_url": "https://api.github.com/users/villasv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/villasv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-11T17:16:04Z",
    "updated_at": "2018-03-11T23:47:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "The only meaningful use case I could think of is the one I chose for the example in the docstring: converting unsigned int from/to signed int. Basically every other byte conversion is very unlikely to be useful in the pandas context.\r\n\r\nContrived scenario:\r\n\r\nLet's say I have a really big Series of `int8` integers that barely fits in memory (which is basically why I'm trying to use `int8` instead of `int64`). I then realize that actually `int8` isn't enough because I have some data points in the 127~255 range, and because none of the data points are negative I could have been using `uint8` all along. Creating a `uint8` view would be my salvation - assuming that for some reason I don't want to simply redo the computation steps this time using `uint8` from the beginning."
  }
]
