[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302964482",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16409#issuecomment-302964482",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16409",
    "id": 302964482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjk2NDQ4Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-21T21:27:57Z",
    "updated_at": "2017-05-21T21:27:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "IPython 6 switched over to jedi for completion, which must execute at least some code? `Categorical.labels` is a property. It looks like we can get around this by specifying `__dir__`.\r\nI think I've seen it in at least one other place.\r\n\r\n@Carreau does this sound like an IPython bug? For a simpler example:\r\n\r\n```python\r\nIn [32]: import warnings\r\n\r\nIn [33]: class Foo:\r\n    ...:     @property\r\n    ...:     def bad(self):\r\n    ...:         warnings.warn(\"bad\")\r\n    ...:     @property\r\n    ...:     def good(self):\r\n    ...:         return \"good\"\r\n\r\nIn [34]:\r\n\r\nIn [34]: f = Foo()\r\n\r\n/Users/taugspurger/Envs/pandas-dev/bin/ipython:4: UserWarning: bad\r\n  import re\r\nIn [35]: f.<TAB>\r\n ```\r\n\r\nIf so I'll file one on IPython. Either way I'll put up a PR to silence these using `__dir__`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302966349",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16409#issuecomment-302966349",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16409",
    "id": 302966349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjk2NjM0OQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-21T22:02:47Z",
    "updated_at": "2017-05-21T22:02:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes it's a Jedi bug. There are 2 other issues open in IPython and spark.\nTab completion triggers jobs on spark.\n\nI'll try to have a look this week, but we'll need a release of Jedi. You\ncan deactivate Jedi completion though, i'm on my phone so can't tell you\nthe option right now.\n\nOn May 21, 2017 14:28, \"Tom Augspurger\" <notifications@github.com> wrote:\n\n> IPython 6 switched over to jedi for completion, which must execute at\n> least some code? Categorical.labels is a property. It looks like we can\n> get around this by specifying __dir__.\n> I think I've seen it in at least one other place.\n>\n> @Carreau <https://github.com/carreau> does this sound like an IPython\n> bug? For a simpler example:\n>\n> In [32]: import warnings\n>\n> In [33]: class Foo:\n>     ...:     @property\n>     ...:     def bad(self):\n>     ...:         warnings.warn(\"bad\")\n>     ...:     @property\n>     ...:     def good(self):\n>     ...:         return \"good\"\n>\n> In [34]:\n>\n> In [34]: f = Foo()\n> /Users/taugspurger/Envs/pandas-dev/bin/ipython:4: UserWarning: bad\n>   import re\n> In [35]: f.<TAB>\n>\n> If so I'll file one on IPython. Either way I'll put up a PR to silence\n> these using __dir__.\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/16409#issuecomment-302964482>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAUez31uWSfD5tdFQMNDWW6Q2RTj1E47ks5r8KxogaJpZM4NhuR9>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302970702",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16409#issuecomment-302970702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16409",
    "id": 302970702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjk3MDcwMg==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-21T23:30:20Z",
    "updated_at": "2017-05-21T23:30:20Z",
    "author_association": "MEMBER",
    "body": "FWIW, the Jedi completion in IPython 6 feels like a gigantic step backwards in UX in the IPython shell. I'm seeing 500ms or more tab completion lag on objects when using pandas; having used IPython since version 0.8.4 and never had this problem, a bit of a bummer =( I suspect pandas is a case of a \"big\" API that stretches some of the Jedi worst case scenarios. Is there a way to revert to the old completer? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302978007",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16409#issuecomment-302978007",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16409",
    "id": 302978007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjk3ODAwNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T01:25:16Z",
    "updated_at": "2017-05-22T01:25:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\nc.Completer.jedi_compute_type_timeout=<Int>\r\n    Experimental: restrict time (in milliseconds) during which Jedi can compute\r\n    types. Set to 0 to stop computing types. Non-zero value lower than 100ms may\r\n    hurt performance by preventing jedi to build its cache.\r\n    Default: 400\r\n```\r\nand \r\n```\r\nc.Completer.use_jedi=<Bool>\r\n    Experimental: Use Jedi to generate autocompletions. Default to True if jedi\r\n    is installed\r\n    Default: True\r\n```\r\n\r\nThese two options can be of help, the old completer has not been deactivated and completions are merged with jedi ones. \r\nActually increasing the jedi timeout may make things faster as if you give enough time to jedi it will save a cache of the type-inference tree on disk and re-use that. Which should make most things ~quasi instantaneous (at least for me on matplotlib).\r\n\r\nDev branch of jedi is also way faster (but still have some bug)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303110863",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16409#issuecomment-303110863",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16409",
    "id": 303110863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzExMDg2Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T14:09:35Z",
    "updated_at": "2017-05-22T14:09:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @Carreau. https://github.com/ipython/ipython/issues/9094 is the IPython issue for properties executing code.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303147902",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16409#issuecomment-303147902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16409",
    "id": 303147902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE0NzkwMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T16:16:14Z",
    "updated_at": "2017-05-22T16:16:14Z",
    "author_association": "MEMBER",
    "body": "For me it happens on tab completing modules with deprecations as well. Eg `pd.lib.<TAB>` displays a huge list of warnings (but that might also be related to the way we implemented the shim, but in any case was not visible in IPython < 6.0)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303474326",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16409#issuecomment-303474326",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16409",
    "id": 303474326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ3NDMyNg==",
    "user": {
      "login": "DGrady",
      "id": 392172,
      "node_id": "MDQ6VXNlcjM5MjE3Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/392172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DGrady",
      "html_url": "https://github.com/DGrady",
      "followers_url": "https://api.github.com/users/DGrady/followers",
      "following_url": "https://api.github.com/users/DGrady/following{/other_user}",
      "gists_url": "https://api.github.com/users/DGrady/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DGrady/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DGrady/subscriptions",
      "organizations_url": "https://api.github.com/users/DGrady/orgs",
      "repos_url": "https://api.github.com/users/DGrady/repos",
      "events_url": "https://api.github.com/users/DGrady/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DGrady/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T17:29:30Z",
    "updated_at": "2017-05-23T17:29:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW I see this (only the first time?) when I try to tab complete on a data frame:\r\n\r\n```python\r\nPython 3.6.1 |Anaconda custom (x86_64)| (default, May 11 2017, 13:04:09)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 6.0.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: df = pd.DataFrame()\r\n\r\nIn [3]: df.gro2017-05-23 10:27:43.062 python[28545:3846149] !!! BUG: The current event queue and the main event queue are not the same. Events will not be handled correctly. This is probably because _TSGetMainT.\r\nupby\r\n```\r\nI pressed TAB after typing `df.gro`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303475081",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16409#issuecomment-303475081",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16409",
    "id": 303475081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ3NTA4MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T17:32:19Z",
    "updated_at": "2017-05-23T17:32:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@DGrady that seems unrelated. Is it just on DataFrames that happens, or any python object? If you could narrow it down a bit, I'm sure the IPython devs would appreciate a bug report."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303477507",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16409#issuecomment-303477507",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16409",
    "id": 303477507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ3NzUwNw==",
    "user": {
      "login": "DGrady",
      "id": 392172,
      "node_id": "MDQ6VXNlcjM5MjE3Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/392172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DGrady",
      "html_url": "https://github.com/DGrady",
      "followers_url": "https://api.github.com/users/DGrady/followers",
      "following_url": "https://api.github.com/users/DGrady/following{/other_user}",
      "gists_url": "https://api.github.com/users/DGrady/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DGrady/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DGrady/subscriptions",
      "organizations_url": "https://api.github.com/users/DGrady/orgs",
      "repos_url": "https://api.github.com/users/DGrady/repos",
      "events_url": "https://api.github.com/users/DGrady/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DGrady/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T17:41:20Z",
    "updated_at": "2017-05-23T17:41:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger You're right; it's something about my environment. That does not happen with a clean environment with `conda create --name completiontest python=3 ipython pandas`; sorry to confuse the issue!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303482296",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16409#issuecomment-303482296",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16409",
    "id": 303482296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ4MjI5Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T17:58:45Z",
    "updated_at": "2017-05-23T17:58:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@DGrady do you have any Spark/Java thing running ?  I think I've seen similar bugs when trying to use IPython with Jython. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303484775",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16409#issuecomment-303484775",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16409",
    "id": 303484775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ4NDc3NQ==",
    "user": {
      "login": "DGrady",
      "id": 392172,
      "node_id": "MDQ6VXNlcjM5MjE3Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/392172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DGrady",
      "html_url": "https://github.com/DGrady",
      "followers_url": "https://api.github.com/users/DGrady/followers",
      "following_url": "https://api.github.com/users/DGrady/following{/other_user}",
      "gists_url": "https://api.github.com/users/DGrady/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DGrady/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DGrady/subscriptions",
      "organizations_url": "https://api.github.com/users/DGrady/orgs",
      "repos_url": "https://api.github.com/users/DGrady/repos",
      "events_url": "https://api.github.com/users/DGrady/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DGrady/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T18:07:27Z",
    "updated_at": "2017-05-23T18:07:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau I do not; I do use Spark, but not from this machine. Just running macOS 10.12.5. Here's the output of `conda list` for the offending environment:\r\n\r\n(arg, the ones with missing channels are `<pip>`)\r\n\r\n<details>\r\n<pre>\r\n# packages in environment at /Users/dgrady/anaconda3:\r\n#\r\n_license                  1.1                      py36_1\r\nalabaster                 0.7.10                   py36_0\r\nanaconda                  custom                   py36_0\r\nanaconda-client           1.6.3                    py36_0\r\nanaconda-navigator        1.5.2                    py36_0\r\nanaconda-project          0.6.0                    py36_0\r\nappnope                   0.1.0                    py36_0\r\nappscript                 1.0.1                    py36_0\r\nasn1crypto                0.22.0                   py36_0\r\nastroid                   1.4.9                    py36_0\r\nastropy                   1.3.2               np112py36_0\r\nawscli                    1.11.48                   <pip>\r\nbabel                     2.4.0                    py36_0\r\nbackports                 1.0                      py36_0\r\nbeautifulsoup4            4.6.0                    py36_0\r\nbitarray                  0.8.1                    py36_0\r\nblaze                     0.10.1                   py36_0\r\nbleach                    1.5.0                    py36_0\r\nbokeh                     0.12.5                   py36_1\r\nboto                      2.46.1                   py36_0\r\nbotocore                  1.5.11                    <pip>\r\nbottleneck                1.2.1               np112py36_0\r\ncffi                      1.10.0                   py36_0\r\nchardet                   3.0.3                    py36_0\r\nchest                     0.2.3                    py36_0\r\nclick                     6.7                      py36_0\r\ncloudpickle               0.2.2                    py36_0\r\nclyent                    1.2.2                    py36_0\r\ncolorama                  0.3.9                    py36_0\r\nconda                     4.3.18                   py36_0\r\nconda-env                 2.6.0                         0\r\nconfigobj                 5.0.6                    py36_0\r\ncontextlib2               0.5.5                    py36_0\r\ncryptography              1.8.1                    py36_0\r\ncurl                      7.52.1                        0\r\ncycler                    0.10.0                   py36_0\r\ncython                    0.25.2                   py36_0\r\ncytoolz                   0.8.2                    py36_0\r\ndask                      0.14.3                   py36_0\r\ndatashape                 0.5.4                    py36_0\r\ndecorator                 4.0.11                   py36_0\r\ndill                      0.2.6                    py36_0\r\ndocutils                  0.13.1                   py36_0\r\nentrypoints               0.2.2                    py36_1\r\net_xmlfile                1.0.1                    py36_0\r\nfastcache                 1.0.2                    py36_1\r\nflake8                    3.3.0                    py36_0\r\nflask                     0.12.2                   py36_0\r\nflask-cors                3.0.2                    py36_0\r\nfreetype                  2.5.5                         2\r\nget_terminal_size         1.0.0                    py36_0\r\ngevent                    1.2.1                    py36_0\r\ngraphviz                  2.38.0                        4\r\ngreenlet                  0.4.12                   py36_0\r\nh5py                      2.7.0               np112py36_0\r\nhdf5                      1.8.17                        1\r\nheapdict                  1.0.0                    py36_1\r\nhtml5lib                  0.999                    py36_0\r\nicu                       54.1                          0\r\nidna                      2.5                      py36_0\r\nimagesize                 0.7.1                    py36_0\r\nipykernel                 4.6.1                    py36_0\r\nipython                   6.0.0                    py36_1\r\nipython_genutils          0.2.0                    py36_0\r\nipywidgets                6.0.0                    py36_0\r\nisort                     4.2.5                    py36_0\r\nitsdangerous              0.24                     py36_0\r\njbig                      2.1                           0\r\njdcal                     1.3                      py36_0\r\njedi                      0.10.2                   py36_2\r\njinja2                    2.9.6                    py36_0\r\njmespath                  0.9.1                     <pip>\r\njpeg                      9b                            0\r\njsonschema                2.6.0                    py36_0\r\njupyter                   1.0.0                    py36_3\r\njupyter_client            5.0.1                    py36_0\r\njupyter_console           5.1.0                    py36_0\r\njupyter_core              4.3.0                    py36_0\r\nlazy-object-proxy         1.2.2                    py36_0\r\nlibiconv                  1.14                          0\r\nlibpng                    1.6.27                        0\r\nlibtiff                   4.0.6                         3\r\nlibxml2                   2.9.4                         0\r\nlibxslt                   1.1.29                        0\r\nllvmlite                  0.18.0                   py36_0\r\nlocket                    0.2.0                    py36_1\r\nlxml                      3.7.3                    py36_0\r\nmarkupsafe                0.23                     py36_2\r\nmatplotlib                2.0.2               np112py36_0\r\nmccabe                    0.6.1                    py36_0\r\nmistune                   0.7.4                    py36_0\r\nmkl                       2017.0.1                      0\r\nmkl-service               1.1.2                    py36_3\r\nmpmath                    0.19                     py36_1\r\nmultipledispatch          0.4.9                    py36_0\r\nmypy                      0.501                     <pip>\r\nnbconvert                 5.1.1                    py36_0\r\nnbformat                  4.3.0                    py36_0\r\nnetworkx                  1.11                     py36_0\r\nnltk                      3.2.3                    py36_0\r\nnose                      1.3.7                    py36_1\r\nnotebook                  5.0.0                    py36_0\r\nnumba                     0.33.0              np112py36_0\r\nnumexpr                   2.6.2               np112py36_0\r\nnumpy                     1.12.1                   py36_0\r\nnumpydoc                  0.6.0                    py36_0\r\nodo                       0.5.0                    py36_1\r\nolefile                   0.44                     py36_0\r\nopenpyxl                  2.4.7                    py36_0\r\nopenssl                   1.0.2k                        2\r\npackaging                 16.8                     py36_0\r\npandas                    0.20.1              np112py36_0\r\npandocfilters             1.4.1                    py36_0\r\npartd                     0.3.8                    py36_0\r\npath.py                   10.3.1                   py36_0\r\npathlib2                  2.2.1                    py36_0\r\npatsy                     0.4.1                    py36_0\r\npep8                      1.7.0                    py36_0\r\npexpect                   4.2.1                    py36_0\r\npickleshare               0.7.4                    py36_0\r\npillow                    4.1.1                    py36_0\r\npip                       9.0.1                    py36_1\r\nply                       3.10                     py36_0\r\nprompt_toolkit            1.0.14                   py36_0\r\npsutil                    5.2.2                    py36_0\r\nptyprocess                0.5.1                    py36_0\r\npy                        1.4.33                   py36_0\r\npyasn1                    0.2.3                    py36_0\r\npycodestyle               2.3.1                    py36_0\r\npycosat                   0.6.2                    py36_0\r\npycparser                 2.17                     py36_0\r\npycrypto                  2.6.1                    py36_4\r\npycurl                    7.43.0                   py36_2\r\npyflakes                  1.5.0                    py36_0\r\npygments                  2.2.0                    py36_0\r\npylint                    1.6.4                    py36_1\r\npyopenssl                 17.0.0                   py36_0\r\npyparsing                 2.1.4                    py36_0\r\npyqt                      5.6.0                    py36_2\r\npytables                  3.3.0               np112py36_0\r\npytest                    3.0.7                    py36_0\r\npython                    3.6.1                         2\r\npython-dateutil           2.6.0                    py36_0\r\npython-graphviz           0.5.2                    py36_0\r\npython.app                1.2                      py36_4\r\npytz                      2017.2                   py36_0\r\npywavelets                0.5.2               np112py36_0\r\npyyaml                    3.12                     py36_0\r\npyzmq                     16.0.2                   py36_0\r\nqt                        5.6.2                         2\r\nqtawesome                 0.4.4                    py36_0\r\nqtconsole                 4.3.0                    py36_0\r\nqtpy                      1.2.1                    py36_0\r\nreadline                  6.2                           2\r\nredis                     3.2.0                         0\r\nredis-py                  2.10.5                   py36_0\r\nrequests                  2.14.2                   py36_0\r\nrope                      0.9.4                    py36_1\r\nrsa                       3.4.2                     <pip>\r\nruamel_yaml               0.11.14                  py36_1\r\ns3transfer                0.1.10                    <pip>\r\nscikit-image              0.13.0              np112py36_0\r\nscikit-learn              0.18.1              np112py36_1\r\nscipy                     0.19.0              np112py36_0\r\nseaborn                   0.7.1                    py36_0\r\nsetuptools                27.2.0                   py36_0\r\nsimplegeneric             0.8.1                    py36_1\r\nsingledispatch            3.4.0.3                  py36_0\r\nsip                       4.18                     py36_0\r\nsix                       1.10.0                   py36_0\r\nsnowballstemmer           1.2.1                    py36_0\r\nsockjs-tornado            1.0.3                    py36_0\r\nsphinx                    1.5.6                    py36_0\r\nspyder                    3.1.4                    py36_0\r\nsqlalchemy                1.1.9                    py36_0\r\nsqlite                    3.13.0                        0\r\nstatsmodels               0.8.0               np112py36_0\r\nsympy                     1.0                      py36_0\r\nterminado                 0.6                      py36_0\r\ntestpath                  0.3                      py36_0\r\ntk                        8.5.18                        0\r\ntoolz                     0.8.2                    py36_0\r\ntornado                   4.5.1                    py36_0\r\ntraitlets                 4.3.2                    py36_0\r\ntyped-ast                 1.0.3                     <pip>\r\nunicodecsv                0.14.1                   py36_0\r\nwcwidth                   0.1.7                    py36_0\r\nwerkzeug                  0.12.2                   py36_0\r\nwheel                     0.29.0                   py36_0\r\nwidgetsnbextension        2.0.0                    py36_0\r\nwrapt                     1.10.10                  py36_0\r\nxlrd                      1.0.0                    py36_0\r\nxlsxwriter                0.9.6                    py36_0\r\nxlwings                   0.10.4                   py36_0\r\nxlwt                      1.2.0                    py36_0\r\nxz                        5.2.2                         1\r\nyaml                      0.1.6                         0\r\nyapf                      0.16.0                    <pip>\r\nzlib                      1.2.8                         3\r\n</pre>\r\n</details>"
  }
]
