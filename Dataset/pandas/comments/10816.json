[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/130897072",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10816#issuecomment-130897072",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10816",
    "id": 130897072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDg5NzA3Mg==",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T00:13:44Z",
    "updated_at": "2015-08-14T00:13:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I swear that there was an old issue/PR that addressed this.  If I recall it was proposed do have syntax like `df.index['lev0']` or perhaps even `df['lev0']` both of which I think are much better than `get_level_values` which is too verbose.  However, searches have come up empty.  #10461 seems to discuss some variants.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/130898944",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10816#issuecomment-130898944",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10816",
    "id": 130898944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDg5ODk0NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T00:18:59Z",
    "updated_at": "2015-08-14T00:18:59Z",
    "author_association": "MEMBER",
    "body": "There is the proposal that the index, if it has a name, should also be accessible as a column (eg `df['lev0']`), but also returning a series then. See #8162, and although I think that would be very nice, this is still something else.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/135139622",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10816#issuecomment-135139622",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10816",
    "id": 135139622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTEzOTYyMg==",
    "user": {
      "login": "nehalecky",
      "id": 1455590,
      "node_id": "MDQ6VXNlcjE0NTU1OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1455590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nehalecky",
      "html_url": "https://github.com/nehalecky",
      "followers_url": "https://api.github.com/users/nehalecky/followers",
      "following_url": "https://api.github.com/users/nehalecky/following{/other_user}",
      "gists_url": "https://api.github.com/users/nehalecky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nehalecky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nehalecky/subscriptions",
      "organizations_url": "https://api.github.com/users/nehalecky/orgs",
      "repos_url": "https://api.github.com/users/nehalecky/repos",
      "events_url": "https://api.github.com/users/nehalecky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nehalecky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-26T18:58:55Z",
    "updated_at": "2015-08-26T18:58:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293201310",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10816#issuecomment-293201310",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10816",
    "id": 293201310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzIwMTMxMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T09:23:10Z",
    "updated_at": "2017-04-11T09:23:10Z",
    "author_association": "MEMBER",
    "body": "Somebody a good idea for a possible API here?\r\n\r\nSome ideas (selecting a single level here as example, but it should expand to list of names as well) :\r\n\r\n* `df.index[\"level_name\"]` -> as index `__getitem__` is already used to select values of the index, I don't think it would be a good design to also let this select levels of the index (and, it would conflict in case of integer level names)\r\n* `df.index.levels[\"level_name\"]` -> this is already used to select the actual 'level' (so the unique values, or the categories using that terminology) and not for the full level values. So again, that it does something different with a string would not be good design (and it would conflict with integer level names)\r\n* `df.index.get_levels(\"level_name\")` -> this I would like (and doesn't exist yet), but, it would not be consistent with what `set_levels` does (it would not be its opposite, what you would expect from the name), as `set_levels` sets actual 'levels' and not level values.\r\n* `df.index.get_level_values([\"level_name\", ..])` -> expand the existing `get_level_values` to also accept a list of integers/names instead of only a scalar, and in that case returning a MultiIndex instead of Index. This is probably the easiest to add."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293208672",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10816#issuecomment-293208672",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10816",
    "id": 293208672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzIwODY3Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T09:51:56Z",
    "updated_at": "2017-04-11T09:51:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "why would you do this, rather than #8162?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293209880",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10816#issuecomment-293209880",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10816",
    "id": 293209880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzIwOTg4MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T09:56:53Z",
    "updated_at": "2017-04-11T09:58:22Z",
    "author_association": "MEMBER",
    "body": "In my mind, this is something different, as I said above (https://github.com/pandas-dev/pandas/issues/10816#issuecomment-130898944). But of course that is something to discuss in #8162, but in my mind accessing an index like a column, should also return it as a column, and here I want to select specific levels but still keep an index as the final result."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293216307",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10816#issuecomment-293216307",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10816",
    "id": 293216307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzIxNjMwNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T10:25:10Z",
    "updated_at": "2017-04-11T10:25:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "My question is *why* would you want to add *moar* API? what is the usecase?\r\n\r\n``df.index.get_level_values([\"level_name\", ..])`` this seems reasonable actually (though a single level and a list of a single level would be the same?, or would first be a Series, 2nd DataFrame)?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293256644",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10816#issuecomment-293256644",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10816",
    "id": 293256644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzI1NjY0NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T13:12:41Z",
    "updated_at": "2017-04-11T13:12:41Z",
    "author_association": "MEMBER",
    "body": "> (though a single level and a list of a single level would be the same?, or would first be a Series, 2nd DataFrame)?\r\n\r\nyes, that would be the same, since a MultiIndex with only one level just becomes a plain Index\r\n\r\nI can't come up with a specific usecase right now, but I remember that I wanted something like this from time to time. The SO question at the top post also gives a usecase. \r\nThe specific trigger was that a colleague asked how to convert the values of a subset of the levels to tuples (like `multi_index.values` gives tuples, but then for a subset of the levels) (why that is needed is then another question)."
  }
]
