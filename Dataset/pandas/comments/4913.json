[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24861815",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4913#issuecomment-24861815",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4913",
    "id": 24861815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYxODE1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T12:44:25Z",
    "updated_at": "2013-09-21T12:44:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "have you tried using a `Panel`? or multi-level frame?\n\nwhat you are describing is not efficient at all (to store a vector inside a vector).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24861963",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4913#issuecomment-24861963",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4913",
    "id": 24861963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYxOTYz",
    "user": {
      "login": "ufechner7",
      "id": 4235229,
      "node_id": "MDQ6VXNlcjQyMzUyMjk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4235229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ufechner7",
      "html_url": "https://github.com/ufechner7",
      "followers_url": "https://api.github.com/users/ufechner7/followers",
      "following_url": "https://api.github.com/users/ufechner7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ufechner7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ufechner7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ufechner7/subscriptions",
      "organizations_url": "https://api.github.com/users/ufechner7/orgs",
      "repos_url": "https://api.github.com/users/ufechner7/repos",
      "events_url": "https://api.github.com/users/ufechner7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ufechner7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T12:55:58Z",
    "updated_at": "2013-09-21T12:55:58Z",
    "author_association": "NONE",
    "body": "Well, why should two dimensional vectors (and a time-series is stored as np.array, as far as I know) be inefficient? I will look at the Panel again to find out why this did not work for me. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24862254",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4913#issuecomment-24862254",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4913",
    "id": 24862254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYyMjU0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T13:17:18Z",
    "updated_at": "2013-09-21T13:17:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "might this be what you are looking for?\n\n```\nIn [2]: df = DataFrame(np.random.randn(6,3),columns=['position','velocity','accel'])\n\nIn [3]: df\nOut[3]: \n   position  velocity     accel\n0  0.113437  0.051340  2.102710\n1 -0.730743 -0.411552 -0.356178\n2  0.790855 -0.630646 -0.213115\n3 -0.297808  0.765525  3.008339\n4 -1.037385 -0.725488  1.382944\n5  0.528578  0.116152  1.253986\n\nIn [4]: df['sample'] = [1,1,1,2,2,2]\n\nIn [5]: df['time'] = list(date_range('20130101 9:01:01',freq='s',periods=3)) + list(date_range('20130101 9:01:01',freq='s',periods=3))\n\nIn [6]: df\nOut[6]: \n   position  velocity     accel  sample                time\n0  0.113437  0.051340  2.102710       1 2013-01-01 09:01:01\n1 -0.730743 -0.411552 -0.356178       1 2013-01-01 09:01:02\n2  0.790855 -0.630646 -0.213115       1 2013-01-01 09:01:03\n3 -0.297808  0.765525  3.008339       2 2013-01-01 09:01:01\n4 -1.037385 -0.725488  1.382944       2 2013-01-01 09:01:02\n5  0.528578  0.116152  1.253986       2 2013-01-01 09:01:03\n\nIn [9]: df = df.set_index(['sample','time'])\n\nIn [10]: df\nOut[10]: \n                            position  velocity     accel\nsample time                                             \n1      2013-01-01 09:01:01  0.113437  0.051340  2.102710\n       2013-01-01 09:01:02 -0.730743 -0.411552 -0.356178\n       2013-01-01 09:01:03  0.790855 -0.630646 -0.213115\n2      2013-01-01 09:01:01 -0.297808  0.765525  3.008339\n       2013-01-01 09:01:02 -1.037385 -0.725488  1.382944\n       2013-01-01 09:01:03  0.528578  0.116152  1.253986\n\nIn [11]: np.sqrt(df['position']**2 + df['velocity']**2 + df['accel']**2)\nOut[11]: \nsample  time               \n1       2013-01-01 09:01:01    2.106393\n        2013-01-01 09:01:02    0.911166\n        2013-01-01 09:01:03    1.033724\n2       2013-01-01 09:01:01    3.118465\n        2013-01-01 09:01:02    1.874843\n        2013-01-01 09:01:03    1.365784\ndtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24863437",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4913#issuecomment-24863437",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4913",
    "id": 24863437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYzNDM3",
    "user": {
      "login": "ufechner7",
      "id": 4235229,
      "node_id": "MDQ6VXNlcjQyMzUyMjk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4235229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ufechner7",
      "html_url": "https://github.com/ufechner7",
      "followers_url": "https://api.github.com/users/ufechner7/followers",
      "following_url": "https://api.github.com/users/ufechner7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ufechner7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ufechner7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ufechner7/subscriptions",
      "organizations_url": "https://api.github.com/users/ufechner7/orgs",
      "repos_url": "https://api.github.com/users/ufechner7/repos",
      "events_url": "https://api.github.com/users/ufechner7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ufechner7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T14:32:20Z",
    "updated_at": "2013-09-21T14:32:20Z",
    "author_association": "NONE",
    "body": "Ok, a panel can be used if you have three dimensional vectors only.\n\nBut two questions remain:\na) we use different coordinate systems. This means, that the components are not always\n    called x, y and z, but also phi, theta and psi or elevation, azimuth and height.\n    If a panel consists of data frames, is it possible to use different column names in these data frames?\nb) we have currently 99 colums in our data set. 14 of them are 3D vectors, the rest are scalars or structs\n    of a different dimension. Is there a way to combine data frames of different number of colums to a panel?\n\nExample code for 3d vectors only (this works fine):\n\n``` python\nimport pandas as pd\nimport numpy as np\nimport numpy.linalg as la\n\n\"\"\"\n        items: axis 0, each item corresponds to a DataFrame contained inside (pos, vel, acc)\n        major_axis: axis 1, it is the index (rows) of each of the DataFrames (timestamps)\n        minor_axis: axis 2, it is the columns of each of the DataFrames      (x, y, z)\n\"\"\"\npa = pd.Panel(np.random.randn(3, 5, 4), items=['pos', 'vel', 'acc'],\n              major_axis = pd.date_range(start='2001-01-01 00:00:00', end='2001-01-01 00:00:00.2', freq='50L'),\n              minor_axis=['x', 'y', 'z', 'norm'])\n\npa.pos.norm = 0\npa.vel.norm = 0\npa.acc.norm = 0\npa.pos.norm = la.norm(pa.pos.as_matrix(), axis=1)\npa.vel.norm = la.norm(pa.vel.as_matrix(), axis=1)\npa.acc.norm = la.norm(pa.acc.as_matrix(), axis=1)\n\nprint pa.to_frame()\nprint\nprint \"pa.pos\\n\", pa.pos\n```\n\nBest regards:\nUwe Fechner\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24864569",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4913#issuecomment-24864569",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4913",
    "id": 24864569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY0NTY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T15:34:02Z",
    "updated_at": "2013-09-21T15:34:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ufechner7 I think you could create a class to hold some of this information with variables of a Panel/Multi-index frame.\n\nDon't try to jam too much into a single data structures, sometimes have multiple objects is the way to go\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24867072",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4913#issuecomment-24867072",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4913",
    "id": 24867072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY3MDcy",
    "user": {
      "login": "ufechner7",
      "id": 4235229,
      "node_id": "MDQ6VXNlcjQyMzUyMjk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4235229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ufechner7",
      "html_url": "https://github.com/ufechner7",
      "followers_url": "https://api.github.com/users/ufechner7/followers",
      "following_url": "https://api.github.com/users/ufechner7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ufechner7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ufechner7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ufechner7/subscriptions",
      "organizations_url": "https://api.github.com/users/ufechner7/orgs",
      "repos_url": "https://api.github.com/users/ufechner7/repos",
      "events_url": "https://api.github.com/users/ufechner7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ufechner7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T17:34:30Z",
    "updated_at": "2013-09-21T17:34:30Z",
    "author_association": "NONE",
    "body": "Well, the data I have is kind of limited in size, just the data of many sensors of 2 hour flights with 20 Hz sampling rate (in average). This means that one dataset has a size of 100-150 MB (uncompressed).\n\nI found out that I can use a Panel4D to store vectors of different type and scalars (all this data are time series) in one data structure. This works OK, but there is room for improvement w.r.t. to the Panel4D implementation.\n\nThe following code shows how to store scalars and 3d vectors in one Panel4D object:\n\n``` python\n\"\"\" Test code for using a panel object for storing dataframes with different column sets. \"\"\"\n\nimport pandas as pd\nimport numpy as np\n\n\"\"\"\n        items: axis 0, each item corresponds to a DataFrame contained inside (pos, vel, acc)\n        major_axis: axis 1, it is the index (rows) of each of the DataFrames (timestamps)\n        minor_axis: axis 2, it is the columns of each of the DataFrames      (x, y, z)\n\"\"\"\nXYZ  = ['x','y','z']\nNORM = ['norm']\nENU  = ['pos', 'vel', 'acc']\npav = pd.Panel(np.random.randn(3, 6, 3), items=ENU,\n              major_axis = pd.date_range(start='2001-01-01 00:00:00', end='2001-01-01 00:00:00.25', freq='50L'),\n              minor_axis=['x', 'y', 'z'])\n\npas = pd.Panel(np.random.randn(5, 6, 1), items=['pos', 'vel', 'acc', 'v_reel_out','u_winch'],\n              major_axis = pd.date_range(start='2001-01-01 00:00:00', end='2001-01-01 00:00:00.25', freq='50L'),\n              minor_axis=['norm'])\n\npav.pos.norm = 0\npav.vel.norm = 0\npav.acc.norm = 0\n\ndata = { 'ENU'    : pav ,\n         'scalar' : pas }\n\npa = pd.Panel4D(data)\n\nprint pa\nprint pa.ENU.loc[ENU].to_frame()\n\nprint pa.ENU.pos[XYZ]\nprint\nprint pa.scalar.to_frame()\nprint pa.scalar.pos[NORM]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24867194",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4913#issuecomment-24867194",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4913",
    "id": 24867194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY3MTk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T17:40:49Z",
    "updated_at": "2013-09-21T17:41:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ufechner7 you can certainly do that but keep in mind that the scalar data is 'replicated', e.g. it is not sparse. this may or may not work for you.\n\nif you are simultaneously using say 3-d and scalars then it makes sense to keep related objects (that are pandas objects), but not necessarily put them in one object....up2u\n\ne.g.\n\n`{ 'nam' : 'sample1', '3d' : Panel, 'scalars' : Series }`, essentially a non-homogeneous container\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24867783",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4913#issuecomment-24867783",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4913",
    "id": 24867783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY3Nzgz",
    "user": {
      "login": "ufechner7",
      "id": 4235229,
      "node_id": "MDQ6VXNlcjQyMzUyMjk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4235229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ufechner7",
      "html_url": "https://github.com/ufechner7",
      "followers_url": "https://api.github.com/users/ufechner7/followers",
      "following_url": "https://api.github.com/users/ufechner7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ufechner7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ufechner7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ufechner7/subscriptions",
      "organizations_url": "https://api.github.com/users/ufechner7/orgs",
      "repos_url": "https://api.github.com/users/ufechner7/repos",
      "events_url": "https://api.github.com/users/ufechner7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ufechner7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:14:07Z",
    "updated_at": "2013-09-21T18:14:07Z",
    "author_association": "NONE",
    "body": "Why is the data handling not sparse? Why is it not possible to use Panel4D as container for non-homogeneous data? I want to be able to filter in the time axis, and that becomes complicated if I use a dictionary of pandas objects as container.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24867971",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4913#issuecomment-24867971",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4913",
    "id": 24867971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY3OTcx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:24:15Z",
    "updated_at": "2013-09-21T18:24:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "why would you expect it to be sparse? \n\nits a 4-dim container that is homogeneous in dimensions, e.g. there is a recorded value for each of the dimensions. You are able to put non-homogeneous types (e.g. floats/strings etc).\n\nThis is true of all pandas objects (and numpy objects in general).\n\nTry doing `df.values, p.values, or p4d.values` and it will become clear\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868956",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4913#issuecomment-24868956",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4913",
    "id": 24868956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4OTU2",
    "user": {
      "login": "ufechner7",
      "id": 4235229,
      "node_id": "MDQ6VXNlcjQyMzUyMjk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4235229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ufechner7",
      "html_url": "https://github.com/ufechner7",
      "followers_url": "https://api.github.com/users/ufechner7/followers",
      "following_url": "https://api.github.com/users/ufechner7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ufechner7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ufechner7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ufechner7/subscriptions",
      "organizations_url": "https://api.github.com/users/ufechner7/orgs",
      "repos_url": "https://api.github.com/users/ufechner7/repos",
      "events_url": "https://api.github.com/users/ufechner7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ufechner7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T19:23:42Z",
    "updated_at": "2013-09-21T19:23:42Z",
    "author_association": "NONE",
    "body": "Well, I think that the idea is that Pandas offers more features than just numpy arrays. I think I will open a new issue \"Pandas should support packed, heterogeneous, numeric data structures.\"\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868980",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4913#issuecomment-24868980",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4913",
    "id": 24868980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4OTgw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T19:24:45Z",
    "updated_at": "2013-09-21T19:24:45Z",
    "author_association": "MEMBER",
    "body": "Please don't. We already have one: https://github.com/pydata/pandas/issues/3443\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24869407",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4913#issuecomment-24869407",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4913",
    "id": 24869407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY5NDA3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T19:48:46Z",
    "updated_at": "2013-09-21T19:48:46Z",
    "author_association": "MEMBER",
    "body": "@ufechner7 If you'd like to discuss some of your ideas over at #3443, we would love to hear them. Deciding on an API for the proposed `RelationalDataFrame` is worth plenty of discussion, if we decide that's the way to go. Also, your use cases can help us mold the API.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25634837",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4913#issuecomment-25634837",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4913",
    "id": 25634837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjM0ODM3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-03T16:18:30Z",
    "updated_at": "2013-10-03T16:18:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as not a bug\n"
  }
]
