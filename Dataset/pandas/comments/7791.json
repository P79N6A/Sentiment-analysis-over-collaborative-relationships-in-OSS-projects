[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49458248",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7791#issuecomment-49458248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7791",
    "id": 49458248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDU4MjQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-18T17:33:49Z",
    "updated_at": "2014-07-18T17:33:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "- use the format below for grouping (this is new in 0.14.0), as its more flexible (e.g. the resample _could_ be on a column).\n- this is a bug, but I think for another reason, the index is not being constructured 100% correctly, xref #7793 \n\n```\nIn [5]: df.groupby(['b',pd.Grouper(freq='1h')]).mean()\nOut[5]: \n                      a\nb                      \n-4 2014-01-01  0.236842\n-3 2014-01-01 -0.196441\n-2 2014-01-01  0.084048\n-1 2014-01-01 -0.079776\n 0 2014-01-01  0.059750\n 1 2014-01-01 -0.010162\n 2 2014-01-01 -0.124559\n 3 2014-01-01 -0.009600\n\nIn [6]: df.groupby(['b',pd.Grouper(freq='1h')]).mean().to_csv('test.csv',mode='w',date_format='%Y')\n\nIn [7]: !cat test.csv\nb,,a\n-4.0,2014-01-01 00:00:00,0.23684162290873984\n-3.0,2014-01-01 00:00:00,-0.1964410632489068\n-2.0,2014-01-01 00:00:00,0.08404773044520912\n-1.0,2014-01-01 00:00:00,-0.07977596435616328\n0.0,2014-01-01 00:00:00,0.05975025407287002\n1.0,2014-01-01 00:00:00,-0.010162014106808491\n2.0,2014-01-01 00:00:00,-0.1245593183893703\n3.0,2014-01-01 00:00:00,-0.00959968236480397\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49502332",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7791#issuecomment-49502332",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7791",
    "id": 49502332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTAyMzMy",
    "user": {
      "login": "Poquaruse",
      "id": 7874108,
      "node_id": "MDQ6VXNlcjc4NzQxMDg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7874108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Poquaruse",
      "html_url": "https://github.com/Poquaruse",
      "followers_url": "https://api.github.com/users/Poquaruse/followers",
      "following_url": "https://api.github.com/users/Poquaruse/following{/other_user}",
      "gists_url": "https://api.github.com/users/Poquaruse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Poquaruse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Poquaruse/subscriptions",
      "organizations_url": "https://api.github.com/users/Poquaruse/orgs",
      "repos_url": "https://api.github.com/users/Poquaruse/repos",
      "events_url": "https://api.github.com/users/Poquaruse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Poquaruse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-19T07:34:35Z",
    "updated_at": "2014-07-19T07:34:35Z",
    "author_association": "NONE",
    "body": "Thanks! :-)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49509788",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7791#issuecomment-49509788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7791",
    "id": 49509788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTA5Nzg4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-19T13:43:35Z",
    "updated_at": "2014-07-19T13:43:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, since #7746 fix was just merged, this is a separate issue.\n\nI think that the multi-index `to_native_types` is not passing thru the `date_format` (and maybe other formatters) to the sub-index formatting.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/154830726",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7791#issuecomment-154830726",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7791",
    "id": 154830726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDgzMDcyNg==",
    "user": {
      "login": "nbonnotte",
      "id": 9929982,
      "node_id": "MDQ6VXNlcjk5Mjk5ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9929982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbonnotte",
      "html_url": "https://github.com/nbonnotte",
      "followers_url": "https://api.github.com/users/nbonnotte/followers",
      "following_url": "https://api.github.com/users/nbonnotte/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbonnotte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbonnotte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbonnotte/subscriptions",
      "organizations_url": "https://api.github.com/users/nbonnotte/orgs",
      "repos_url": "https://api.github.com/users/nbonnotte/repos",
      "events_url": "https://api.github.com/users/nbonnotte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbonnotte/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-08T14:44:41Z",
    "updated_at": "2015-11-08T14:44:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback i've been looking at that issue, and i would not say the difficulty is \"novice\"...\n\nThe issue I'm struggling with is that (if i understand things correctly) a `MultiIndex` is a `MultiIndex` whatever the type of the content, while a 1D index with datetimes is a `DatetimeIndex`. \n\nSo when we need to format a `DatetimeIndex`, `DatetimeIndex._format_native_types` is there and does what it has to do, knowing its values are `Timestamp`s https://github.com/pydata/pandas/blob/d0a21032be1e92d4fcb92b8a1c16dee514cb61dc/pandas/tseries/index.py#L737\n\nOn the other hand, a `MultiIndex` has only a generic `_format_native_types` method, which basically does nothing but returning its content https://github.com/pydata/pandas/blob/d0a21032be1e92d4fcb92b8a1c16dee514cb61dc/pandas/core/index.py#L4329\n\nI could try to go through the individual values of the `MultiIndex` and format all `Timestamp` that I encounter, but I'm not sure that's such a good idea. Probably finding a way to reuse `DatetimeIndex._format_native_types` would be better.\n\nIs it possible to transform a `MultiIndex` into a list of regular indexes (e.g. `DatetimeIndex`) back and forth?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/154838346",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7791#issuecomment-154838346",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7791",
    "id": 154838346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDgzODM0Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-08T16:23:50Z",
    "updated_at": "2015-11-08T16:23:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll bump the difficulty up 1 :)\n\nhere's what you have to do\n\nredefine `_format_native_types` for a `MulitIndex`\n\nfor each level, call `_format_native_types`, passing thru the kwargs. these are the new levels,\nthen reconstruct a MultiIndexIndex and call `.values` on it.\n\n```\nIn [1]: mi = pd.MultiIndex.from_product([range(3),list('abc'),date_range('20130101 09:00:00',periods=3)])\nIn [4]: mi.levels\n\nOut[4]: FrozenList([[0, 1, 2], [u'a', u'b', u'c'], [2013-01-01 09:00:00, 2013-01-02 09:00:00, 2013-01-03 09:00:00]])\n\nIn [5]: mi.levels[0]\nOut[5]: Int64Index([0, 1, 2], dtype='int64')\n\nIn [6]: mi.levels[1]\nOut[6]: Index([u'a', u'b', u'c'], dtype='object')\n\nIn [7]: mi.levels[2]\nOut[7]: DatetimeIndex(['2013-01-01 09:00:00', '2013-01-02 09:00:00', '2013-01-03 09:00:00'], dtype='datetime64[ns]', freq='D')\n\nIn [8]: mi.levels[2].to_native_types()\nOut[8]: array(['2013-01-01 09:00:00', '2013-01-02 09:00:00', '2013-01-03 09:00:00'], dtype=object)\n\nIn [9]: mi.levels[2].to_native_types(date_format='%Y%m%d')\nOut[9]: array(['20130101', '20130102', '20130103'], dtype=object)\n```\n\nsomething like this:\n\n```\nIn [10]: MultiIndex(levels=[ l._format_native_types() for l in mi.levels],labels=mi.labels,sortorder=mi.sortorder,verify_integrity=False)\nOut[10]: \nMultiIndex(levels=[[u'0', u'1', u'2'], [u'a', u'b', u'c'], [u'2013-01-01 09:00:00', u'2013-01-02 09:00:00', u'2013-01-03 09:00:00']],\n           labels=[[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 1, 1, 1, 2, 2, 2, 0, 0, 0, 1, 1, 1, 2, 2, 2, 0, 0, 0, 1, 1, 1, 2, 2, 2], [0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2]])\n\nIn [11]: MultiIndex(levels=[ l._format_native_types() for l in mi.levels],labels=mi.labels,sortorder=mi.sortorder,verify_integrity=False).values\nOut[11]: \narray([('0', 'a', '2013-01-01 09:00:00'),\n       ('0', 'a', '2013-01-02 09:00:00'),\n       ('0', 'a', '2013-01-03 09:00:00'),\n       ('0', 'b', '2013-01-01 09:00:00'),\n       ('0', 'b', '2013-01-02 09:00:00'),\n       ('0', 'b', '2013-01-03 09:00:00'),\n       ('0', 'c', '2013-01-01 09:00:00'),\n       ('0', 'c', '2013-01-02 09:00:00'),\n       ('0', 'c', '2013-01-03 09:00:00'),\n       ('1', 'a', '2013-01-01 09:00:00'),\n       ('1', 'a', '2013-01-02 09:00:00'),\n       ('1', 'a', '2013-01-03 09:00:00'),\n       ('1', 'b', '2013-01-01 09:00:00'),\n       ('1', 'b', '2013-01-02 09:00:00'),\n       ('1', 'b', '2013-01-03 09:00:00'),\n       ('1', 'c', '2013-01-01 09:00:00'),\n       ('1', 'c', '2013-01-02 09:00:00'),\n       ('1', 'c', '2013-01-03 09:00:00'),\n       ('2', 'a', '2013-01-01 09:00:00'),\n       ('2', 'a', '2013-01-02 09:00:00'),\n       ('2', 'a', '2013-01-03 09:00:00'),\n       ('2', 'b', '2013-01-01 09:00:00'),\n       ('2', 'b', '2013-01-02 09:00:00'),\n       ('2', 'b', '2013-01-03 09:00:00'),\n       ('2', 'c', '2013-01-01 09:00:00'),\n       ('2', 'c', '2013-01-02 09:00:00'), ('2', 'c', '2013-01-03 09:00:00')], dtype=object)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/154850144",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7791#issuecomment-154850144",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7791",
    "id": 154850144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDg1MDE0NA==",
    "user": {
      "login": "nbonnotte",
      "id": 9929982,
      "node_id": "MDQ6VXNlcjk5Mjk5ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9929982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbonnotte",
      "html_url": "https://github.com/nbonnotte",
      "followers_url": "https://api.github.com/users/nbonnotte/followers",
      "following_url": "https://api.github.com/users/nbonnotte/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbonnotte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbonnotte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbonnotte/subscriptions",
      "organizations_url": "https://api.github.com/users/nbonnotte/orgs",
      "repos_url": "https://api.github.com/users/nbonnotte/repos",
      "events_url": "https://api.github.com/users/nbonnotte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbonnotte/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-08T17:36:49Z",
    "updated_at": "2015-11-08T17:36:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice! I didn't know the concept of \"level\", and this is exactly what i was missing, thx ;)\n\nHere we go\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/155650626",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7791#issuecomment-155650626",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7791",
    "id": 155650626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTY1MDYyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-11T03:20:28Z",
    "updated_at": "2015-11-11T03:20:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "closed by #11151 \n"
  }
]
