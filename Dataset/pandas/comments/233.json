[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2403198",
    "html_url": "https://github.com/pandas-dev/pandas/pull/233#issuecomment-2403198",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/233",
    "id": 2403198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDMxOTg=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-14T04:14:05Z",
    "updated_at": "2011-10-14T04:14:05Z",
    "author_association": "MEMBER",
    "body": "This is very cool-- I like it. Merged into master. I don't have a strong feeling about prefacing commits with ENH/BUG/DOC/RLS, etc. But if you feel so inclined feel free to do so\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2404712",
    "html_url": "https://github.com/pandas-dev/pandas/pull/233#issuecomment-2404712",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/233",
    "id": 2404712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDQ3MTI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-14T09:02:42Z",
    "updated_at": "2011-10-14T09:02:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I tend not to use the abbreviations, but I've seen that you do - I'm happy to conform if you'd like to keep the format consistent for the project.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2406221",
    "html_url": "https://github.com/pandas-dev/pandas/pull/233#issuecomment-2406221",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/233",
    "id": 2406221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDYyMjE=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-14T12:50:08Z",
    "updated_at": "2011-10-14T12:50:08Z",
    "author_association": "MEMBER",
    "body": "Eh, I've been doing it for a few months and I'm kind of \"meh\" on it, so carry on =) \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2445584",
    "html_url": "https://github.com/pandas-dev/pandas/pull/233#issuecomment-2445584",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/233",
    "id": 2445584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDU1ODQ=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-18T18:38:43Z",
    "updated_at": "2011-10-18T18:38:43Z",
    "author_association": "MEMBER",
    "body": "have you noticed any problems with this? I was getting some cases where it caused IPython to blow up \"Sorry IPython has crashed...\" but I was under too much time pressure with what I was doing to write down how to reproduce it. And now I can't-- ha. Well I don't think I'll let it hold up the release, can always tweak it in a bugfix release\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2446173",
    "html_url": "https://github.com/pandas-dev/pandas/pull/233#issuecomment-2446173",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/233",
    "id": 2446173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDYxNzM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-18T19:28:23Z",
    "updated_at": "2011-10-18T19:28:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I haven't, but I admit I haven't done extensive testing. Did you grab the\ntraceback when it crashed? It should have been saved to a file. It might\nequally be a problem in IPython - I don't think many things use the custom\ncompletions API.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2446237",
    "html_url": "https://github.com/pandas-dev/pandas/pull/233#issuecomment-2446237",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/233",
    "id": 2446237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDYyMzc=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-18T19:33:25Z",
    "updated_at": "2011-10-18T19:33:25Z",
    "author_association": "MEMBER",
    "body": "I updated to ipython git master yesterday and haven't had any issues since so it could have been something transient. 0.11 seems to also be OK, but will wait for users to report I suppose. It _is_ nice to have\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2469862",
    "html_url": "https://github.com/pandas-dev/pandas/pull/233#issuecomment-2469862",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/233",
    "id": 2469862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk4NjI=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T15:10:13Z",
    "updated_at": "2011-10-20T15:10:13Z",
    "author_association": "MEMBER",
    "body": "boom:\n\n```\n\nIn [38]: df.sort_i---------------------------------------------------------------------------\nTypeError                         Python 2.7.2: /usr/lib/epd-7.1/bin/python\n                                                   Thu Oct 20 11:07:50 2011\nA problem occured executing Python code.  Here is the sequence of function\ncalls leading up to the error, with the most recent (innermost) call last.\n/home/wesm/code/repos/ipython/IPython/core/completer.pyc in complete(self=<IPython.core.completer.IPCompleter object>, text='df.sort_i', line_buffer='df.sort_i', cursor_pos=9)\n    810 \n    811         # Start with a clean slate of completions\n    812         self.matches[:] = []\n    813         custom_res = self.dispatch_custom_completer(text)\n    814         if custom_res is not None:\n    815             # did custom completers produce something?\n    816             self.matches = custom_res\n    817         else:\n    818             # Extend the list of completions with the results of each\n    819             # matcher, so we return results to the user from all\n    820             # namespaces.\n    821             if self.merge_completions:\n    822                 self.matches = []\n    823                 for matcher in self.matchers:\n    824                     try:\n--> 825                         self.matches.extend(matcher(text))\n    826                     except:\n    827                         # Show the ugly traceback if the matcher causes an\n    828                         # exception, but do NOT crash the kernel!\n    829                         sys.excepthook(*sys.exc_info())\n    830             else:\n    831                 for matcher in self.matchers:\n    832                     self.matches = matcher(text)\n    833                     if self.matches:\n    834                         break\n    835         # FIXME: we should extend our api to return a dict with completions for\n    836         # different types of objects.  The rlcomplete() method could then\n    837         # simply collapse the dict into a list for readline, but we'd have\n    838         # richer completion semantics in other evironments.\n    839         self.matches = sorted(set(self.matches))\n    840         #io.rprint('COMP TEXT, MATCHES: %r, %r' % (text, self.matches)) # dbg\n\n/home/wesm/code/repos/ipython/IPython/core/completer.pyc in python_matches(self=<IPython.core.completer.IPCompleter object>, text='df.sort_i')\n    604         if ' ' in main_text and not main_text.startswith('sudo'):\n    605             return []\n    606         text = os.path.expanduser(text)\n    607         aliases =  self.alias_table.keys()\n    608         if text == '':\n    609             return aliases\n    610         else:\n    611             return [a for a in aliases if a.startswith(text)]\n    612 \n    613     def python_matches(self,text):\n    614         \"\"\"Match attributes or global python names\"\"\"\n    615 \n    616         #io.rprint('Completer->python_matches, txt=%r' % text) # dbg\n    617         if \".\" in text:\n    618             try:\n--> 619                 matches = self.attr_matches(text)\n    620                 if text.endswith('.') and self.omit__names:\n    621                     if self.omit__names == 1:\n    622                         # true if txt is _not_ a __ name, false otherwise:\n    623                         no__name = (lambda txt:\n    624                                     re.match(r'.*\\.__.*?__',txt) is None)\n    625                     else:\n    626                         # true if txt is _not_ a _ name, false otherwise:\n    627                         no__name = (lambda txt:\n    628                                     re.match(r'.*\\._.*?',txt) is None)\n    629                     matches = filter(no__name, matches)\n    630             except NameError:\n    631                 # catches <undefined attributes>.<tab>\n    632                 matches = []\n    633         else:\n    634             matches = self.global_matches(text)\n\n/home/wesm/code/repos/ipython/IPython/core/completer.pyc in attr_matches(self=<IPython.core.completer.IPCompleter object>, text='df.sort_i')\n    377             expr, attr = m2.group(1,2)\n    378         else:\n    379             return []\n    380 \n    381         try:\n    382             obj = eval(expr, self.namespace)\n    383         except:\n    384             try:\n    385                 obj = eval(expr, self.global_namespace)\n    386             except:\n    387                 return []\n    388 \n    389         words = dir2(obj)\n    390 \n    391         try:\n--> 392             words = generics.complete_object(obj, words)\n    393         except TryNext:\n    394             pass\n    395         # Build match list to return\n    396         n = len(attr)\n    397         res = [\"%s.%s\" % (expr, w) for w in words if w[:n] == attr ]\n    398         return res\n    399 \n    400 \n    401 class IPCompleter(Completer):\n    402     \"\"\"Extension of the completer class with IPython-specific features\"\"\"\n    403 \n    404     def _greedy_changed(self, name, old, new):\n    405         \"\"\"update the splitter and readline delims when greedy is changed\"\"\"\n    406         if new:\n    407             self.splitter.set_delims(GREEDY_DELIMS)\n\n/home/wesm/code/repos/ipython/IPython/external/simplegeneric/_simplegeneric.pyc in dispatch(*args=(         0       1      2       3       4     \nx...1\np  q  r  0.344   0.71   2.196  -1.939  -1.103 \n, ['T', '_AXIS_ALIASES', '_AXIS_NAMES', '_AXIS_NUMBERS', '__add__', '__array__', '__array_wrap__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dict__', '__div__', '__doc__', '__eq__', '__floordiv__', '__format__', '__ge__', '__getattr__', '__getattribute__', ...]), **kw={})\n     70             for o in obs:\n     71                 if _by_object.setdefault(id(o), (o,f))[1] is not f:\n     72                     raise TypeError(\n     73                         \"%r already has method for object %r\" % (func, o)\n     74                     )\n     75             return f\n     76         return decorate\n     77 \n     78 \n     79     def dispatch(*args, **kw):\n     80         f = _gbo(id(args[0]), _sentinel)\n     81         if f is _sentinel:\n     82             for t in type(args[0]).__mro__:\n     83                 f = _gbt(t, _sentinel)\n     84                 if f is not _sentinel:\n---> 85                     return f(*args, **kw)\n     86             else:\n     87                 return func(*args, **kw)\n     88         else:\n     89             return f[1](*args, **kw)\n     90 \n     91     dispatch.__name__       = func.__name__\n     92     dispatch.__dict__       = func.__dict__.copy()\n     93     dispatch.__doc__        = func.__doc__\n     94     dispatch.__module__     = func.__module__\n     95 \n     96     dispatch.when_type = when_type\n     97     dispatch.when_object = when_object\n     98     dispatch.default = func\n     99     dispatch.has_object = lambda o: id(o) in _by_object\n    100     dispatch.has_type   = lambda t: t in _by_type\n\n/home/wesm/code/pandas/pandas/core/frame.pyc in complete_dataframe(obj=         0       1      2       3       4     \nx...1\np  q  r  0.344   0.71   2.196  -1.939  -1.103 \n, prev_completions=['T', '_AXIS_ALIASES', '_AXIS_NAMES', '_AXIS_NUMBERS', '__add__', '__array__', '__array_wrap__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dict__', '__div__', '__doc__', '__eq__', '__floordiv__', '__format__', '__ge__', '__getattr__', '__getattribute__', ...])\n   3204         homogenized[k] = v\n   3205 \n   3206     return homogenized\n   3207 \n   3208 def _put_str(s, space):\n   3209     return ('%s' % s)[:space].ljust(space)\n   3210 \n   3211 def install_ipython_completers():\n   3212     \"\"\"Register the DataFrame type with IPython's tab completion machinery, so\n   3213     that it knows about accessing column names as attributes.\"\"\"\n   3214     from IPython.utils.generics import complete_object\n   3215 \n   3216     @complete_object.when_type(DataFrame)\n   3217     def complete_dataframe(obj, prev_completions):\n   3218         return prev_completions + [c for c in obj.columns \\\n-> 3219                                                 if py3compat.isidentifier(c)]\n   3220 \n   3221 # Importing IPython brings in about 200 modules, so we want to avoid it unless\n   3222 # we're in IPython (when those modules are loaded anyway).\n   3223 if \"IPython\" in sys.modules:\n   3224     try:\n   3225         install_ipython_completers()\n   3226     except Exception:\n   3227         pass\n   3228 \n   3229 \n   3230 if __name__ == '__main__':\n   3231     import nose\n   3232     nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],\n   3233                    exit=False)\n\n/home/wesm/code/pandas/pandas/util/py3compat.pyc in isidentifier(s=0, dotted=False)\n      1 import sys\n      2 \n      3 PY3 = (sys.version_info[0] >= 3)\n      4 \n      5 if PY3:\n      6     def isidentifier(s):\n      7         return s.isidentifier()\n      8 \n      9 else:\n     10     # Python 2\n     11     import re\n     12     _name_re = re.compile(r\"[a-zA-Z_][a-zA-Z0-9_]*$\")\n     13     def isidentifier(s, dotted=False):\n---> 14         return bool(_name_re.match(s))\n\nTypeError: buffer size mismatch\n\n**********************************************************************\n\nOops, ipython crashed. We do our best to make it stable, but...\n\nA crash report was automatically generated with the following information:\n  - A verbatim copy of the crash traceback.\n  - A copy of your input history during this session.\n  - Data on your current ipython configuration.\n\nIt was left in the file named:\n    '/home/wesm/.ipython/Crash_report_ipython.txt'\nIf you can email this file to the developers, the information in it will help\nthem in understanding and correcting the problem.\n\nYou can mail it to: Fernando Perez at fperez.net@gmail.com\nwith the subject 'ipython Crash Report'.\n\nIf you want to do it now, the following command will work (under Unix):\nmail -s 'ipython Crash Report' fperez.net@gmail.com < /home/wesm/.ipython/Crash_report_ipython.txt\n\nTo ensure accurate tracking of this issue, please file a report about it at:\nhttp://github.com/ipython/ipython/issues\n\n\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n/home/wesm/code/pandas/<ipython-input-38-c82c6e0d9c3c> in <module>()\n----> 1 df.sort_i\n\n/home/wesm/code/pandas/pandas/core/frame.pyc in __getattr__(self, name)\n    878             return self[name]\n    879         raise AttributeError(\"'%s' object has no attribute '%s'\" % \\\n--> 880                                                     (type(self).__name__, name))\n    881 \n    882     def __setitem__(self, key, value):\n\nAttributeError: 'DataFrame' object has no attribute 'sort_i'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2470076",
    "html_url": "https://github.com/pandas-dev/pandas/pull/233#issuecomment-2470076",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/233",
    "id": 2470076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzAwNzY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T15:25:57Z",
    "updated_at": "2011-10-20T15:25:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmmm, that's two bugs in one go, because IPython shouldn't be susceptible to errors in custom completer functions. That will need hardening.\n\nI haven't seen the 'buffer size mismatch' error before. I'll look into it. Do you know what the column names were when this happened?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2470110",
    "html_url": "https://github.com/pandas-dev/pandas/pull/233#issuecomment-2470110",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/233",
    "id": 2470110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzAxMTA=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T15:28:53Z",
    "updated_at": "2011-10-20T15:28:53Z",
    "author_association": "MEMBER",
    "body": "They were integers. That's almost certainly the problem\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2470164",
    "html_url": "https://github.com/pandas-dev/pandas/pull/233#issuecomment-2470164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/233",
    "id": 2470164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzAxNjQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T15:33:01Z",
    "updated_at": "2011-10-20T15:35:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can get a different TypeError (\"expected string or buffer\") if the argument to match() isn't a string. I guess we need an `isinstance(c, basestring)` in there.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2471112",
    "html_url": "https://github.com/pandas-dev/pandas/pull/233#issuecomment-2471112",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/233",
    "id": 2471112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzExMTI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T16:48:51Z",
    "updated_at": "2011-10-20T16:48:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also opened an IPython bug here: https://github.com/ipython/ipython/issues/907\n"
  }
]
