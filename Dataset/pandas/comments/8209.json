[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54768076",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8209#issuecomment-54768076",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8209",
    "id": 54768076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzY4MDc2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T01:17:54Z",
    "updated_at": "2014-09-08T01:17:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "FIxed in the refactoring of timedeltas in general (#8184), here's the fix: https://github.com/jreback/pandas/commit/ea09610c41357c5d577eba15e68db61b7a4ebc8f\n\nin the interim you can simply do: \n\n`s = s.fillna(timedelta(1))` or `s.loc['A'] = np.timedelta64(1,'D')`\n\nThe issue was its not coercing the `timedeltas` correctly\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54768202",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8209#issuecomment-54768202",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8209",
    "id": 54768202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzY4MjAy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T01:21:26Z",
    "updated_at": "2014-09-08T01:21:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I was just looking at this too - is `TimeDeltaBlock` missing a `_can_hold_element` method, or is there some reason why that never gets called?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54768240",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8209#issuecomment-54768240",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8209",
    "id": 54768240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzY4MjQw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T01:22:30Z",
    "updated_at": "2014-09-08T01:22:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "ie., something like this diff:\n\n``` diff\ndiff --git a/pandas/core/internals.py b/pandas/core/internals.py\nindex 6672546..cfbdcd7 100644\n--- a/pandas/core/internals.py\n+++ b/pandas/core/internals.py\n@@ -1224,6 +1224,16 @@ class TimeDeltaBlock(IntBlock):\n     _can_hold_na = True\n     is_numeric = False\n\n+    def _can_hold_element(self, value):\n+        if is_list_like(value):\n+            value = np.array(value)\n+            typ = value.dtype.type\n+            return (issubclass(typ, (np.integer, np.timedelta64, np.float_)) and not\n+                    issubclass(typ, np.datetime64))\n+        return (isinstance(value, (np.timedelta64, timedelta, np.float_,\n+                                  float)) or\n+                           com.is_integer(value) or _is_null_datelike_scalar(value))\n+\n     @property\n     def fill_value(self):\n         return tslib.iNaT\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54768788",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8209#issuecomment-54768788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8209",
    "id": 54768788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzY4Nzg4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T01:36:47Z",
    "updated_at": "2014-09-08T01:37:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "No, it can ONLY hold integers! (and its a sub-class of `IntBlock`). Things have to be coerced beforehand. (I guess technically it might need this, but only `putmask` calls it). If you can make a test case I guess can add.\n\nregardless, this Bug will is fixed already in #8184 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54768911",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8209#issuecomment-54768911",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8209",
    "id": 54768911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzY4OTEx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T01:39:39Z",
    "updated_at": "2014-09-08T01:39:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback no no - I was just wrong about the level of the bug. Trying to dip my foot back into internals again (just a little bit)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54768992",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8209#issuecomment-54768992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8209",
    "id": 54768992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzY4OTky",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T01:41:56Z",
    "updated_at": "2014-09-08T01:41:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner hah, no prob. as I said, this `_can_hold_element` biz is not used much as almost all coercion happens at a higher level (and mostly by the `_try_....` methods.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54839785",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8209#issuecomment-54839785",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8209",
    "id": 54839785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODM5Nzg1",
    "user": {
      "login": "flaviovs",
      "id": 1832699,
      "node_id": "MDQ6VXNlcjE4MzI2OTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1832699?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flaviovs",
      "html_url": "https://github.com/flaviovs",
      "followers_url": "https://api.github.com/users/flaviovs/followers",
      "following_url": "https://api.github.com/users/flaviovs/following{/other_user}",
      "gists_url": "https://api.github.com/users/flaviovs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flaviovs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flaviovs/subscriptions",
      "organizations_url": "https://api.github.com/users/flaviovs/orgs",
      "repos_url": "https://api.github.com/users/flaviovs/repos",
      "events_url": "https://api.github.com/users/flaviovs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flaviovs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T15:41:14Z",
    "updated_at": "2014-09-08T15:41:14Z",
    "author_association": "NONE",
    "body": "Thanks for the reply, +1 for the refactor PR!\n\nBTW, a side question: is there a way to force pandas to store datetime.timedelta as object dtypes? The intuitive solution does not work:\n\n``` python\nIn [57]: s = pd.Series([dt.timedelta(days=1)], dtype=object)\n\nIn [58]: s\nOut[58]: \n0   1 days\ndtype: timedelta64[ns]\n```\n\nNeither via numpy arrays:\n\n``` python\nIn [91]: tdarr = np.array([dt.timedelta(days=1)])\n\nIn [92]: tdarr\nOut[92]: array([datetime.timedelta(1)], dtype=object)\n\nIn [93]: s = pd.Series(tdarr)\n\nIn [94]: s\nOut[94]: \n0   1 days\ndtype: timedelta64[ns]\n```\n\nI understand that this will be a non-issue when the PR is merged, but in the meantime I have to fix my app which expects datetime.timedeltas. I wouldn't mind to switch to np.timedelta64, but it's undeniable that working with np.timestamp64 is far from being convenient (e.g. no \"days\" property, \"total_seconds()\" etc.). And (AFAIK) there is no easy, standard way to bring a np.timestamp64 back to datetime.timedelta, which only adds to the PITA...\n\nThanks again.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54848270",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8209#issuecomment-54848270",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8209",
    "id": 54848270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODQ4Mjcw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T16:35:03Z",
    "updated_at": "2014-09-08T16:35:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@flaviovs that used to work :)\n\nThere's actually a really easy way to convert timedelta64 to python timedelta:\n\n``` python\nIn [25]: import numpy as np\n\nIn [26]: import datetime as dt\n\nIn [27]: arr = np.array([np.timedelta64(dt.timedelta(232)), np.timedelta64(dt.timedelta(13))])\n\nIn [28]: arr.astype(object)\nOut[28]: array([datetime.timedelta(232), datetime.timedelta(13)], dtype=object)\n```\n\n(and that works on individual timedelta objects too)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54862062",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8209#issuecomment-54862062",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8209",
    "id": 54862062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODYyMDYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T18:07:08Z",
    "updated_at": "2014-09-08T18:07:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@flaviovs you can use @jtratner soln in the interim, or if you are up for trying out the new PR (will be merged soon), then this will work (which is very similar to how Timestamp/datetimes work):\n\n```\nIn [8]: s = pd.Series([dt.timedelta(days=1)])\n\nIn [9]: s\nOut[9]: \n0   1 days\ndtype: timedelta64[ns]\n\nIn [10]: s.iloc[0]\nOut[10]: Timedelta('1 days, 00:00:00')\n\nIn [11]: s.astype(object)\nOut[11]: \n0    1 day, 0:00:00\ndtype: object\n\nIn [12]: s.astype(object).iloc[0]\nOut[12]: datetime.timedelta(1)\n\nIn [13]: s.values\nOut[13]: array([86400000000000], dtype='timedelta64[ns]')\n\nIn [15]: pd.TimedeltaIndex(s.values)\nOut[15]: \n<class 'pandas.tseries.tdi.TimedeltaIndex'>\n[1 days]\nLength: 1, Freq: None\n\nIn [17]: pd.TimedeltaIndex(s.values).to_pytimedelta()\nOut[17]: array([datetime.timedelta(1)], dtype=object)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54965231",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8209#issuecomment-54965231",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8209",
    "id": 54965231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTY1MjMx",
    "user": {
      "login": "flaviovs",
      "id": 1832699,
      "node_id": "MDQ6VXNlcjE4MzI2OTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1832699?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flaviovs",
      "html_url": "https://github.com/flaviovs",
      "followers_url": "https://api.github.com/users/flaviovs/followers",
      "following_url": "https://api.github.com/users/flaviovs/following{/other_user}",
      "gists_url": "https://api.github.com/users/flaviovs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flaviovs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flaviovs/subscriptions",
      "organizations_url": "https://api.github.com/users/flaviovs/orgs",
      "repos_url": "https://api.github.com/users/flaviovs/repos",
      "events_url": "https://api.github.com/users/flaviovs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flaviovs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-09T13:04:18Z",
    "updated_at": "2014-09-09T13:04:18Z",
    "author_association": "NONE",
    "body": "@jtratner, your solution uses numpy arrays. My conceptual question is how to have a pandas.Series containint datetime.timedelta's stored as object dtypes...\nBut nevermind, I found a workaround until this issue is settled.\nThank you all!\n\np.s.: I'm relatively new to GitHub and not used to issues workflow, thus I'm not closing this issue. Feel free to close it, as I'm finished. Let me know if you prefer I do the close. Thx\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54965400",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8209#issuecomment-54965400",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8209",
    "id": 54965400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTY1NDAw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-09T13:05:49Z",
    "updated_at": "2014-09-09T13:05:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@flaviovs this will be close when I merge in the PR. thanks.\n"
  }
]
