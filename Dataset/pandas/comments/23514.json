[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435978094",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23514#issuecomment-435978094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23514",
    "id": 435978094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTk3ODA5NA==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-05T18:16:31Z",
    "updated_at": "2018-11-05T18:16:31Z",
    "author_association": "NONE",
    "body": "Hello @datapythonista! Thanks for submitting the PR.\n\n - There are no PEP8 issues in the file [`scripts/tests/test_validate_docstrings.py`](https://github.com/datapythonista/pandas/blob/bb595f006d996bd992b0fc66f867194bfd9f2fa8/scripts/tests/test_validate_docstrings.py) !\n\n - There are no PEP8 issues in the file [`scripts/validate_docstrings.py`](https://github.com/datapythonista/pandas/blob/bb595f006d996bd992b0fc66f867194bfd9f2fa8/scripts/validate_docstrings.py) !\n\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/436029024",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23514#issuecomment-436029024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23514",
    "id": 436029024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjAyOTAyNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-05T20:47:38Z",
    "updated_at": "2018-11-05T20:47:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Which will finish with an exit status different than 0, validate only certain docstrings (the ones starting with pandas.read_\r\n\r\nIn your opinion, what does our end goal look like? I'm just wondering whether we should have a list of prefixes that are succeeding, or a list of allowed failures. The benefit of the allowed failures is that new APIs (outside the existing prefixes) are automatically checked by default. If we go with a list of \"good\" prefixes, then we need to remember to add the new API to the list."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/436035985",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23514#issuecomment-436035985",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23514",
    "id": 436035985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjAzNTk4NQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-05T21:10:11Z",
    "updated_at": "2018-11-05T21:10:11Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger that's a very good point, it was discussed a bit in #23481.\r\n\r\nIdeally we want to run for all errors and all docstrings, and fail the CI if something is wrong. We have around 9,000 errors at the moment (and still adding new validations).\r\n\r\nI agree excluding docstrings (like what we do with the doctests) is likely to be very useful. But I prefer to keep that for a second PR, so this one is not too complex, and I can play a bit with this before thinking on strategies to validate as much as possible in the best way.\r\n\r\nSo far with this we should be able to validate for specific errors (like pep8 in examples, or parameter mismatches) in an incremental way (start by `Series.str`, then `Series`, then `Series` and `DataFrame`...)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/436039134",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23514#issuecomment-436039134",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23514",
    "id": 436039134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjAzOTEzNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-05T21:20:17Z",
    "updated_at": "2018-11-05T21:20:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I agree excluding docstrings (like what we do with the doctests) is likely to be very useful. But I prefer to keep that for a second PR, so this one is not too complex, \r\n\r\ncompletely agree. Just thinking towards the end goal, but we're a ways from that right now :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/436156186",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23514#issuecomment-436156186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23514",
    "id": 436156186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjE1NjE4Ng==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-06T07:28:39Z",
    "updated_at": "2018-11-06T07:28:39Z",
    "author_association": "MEMBER",
    "body": "@gfyoung I made the changes. I was thinking on an additional change, but I want to know your opinion. It'd be having all the error messages in a dictionary:\r\n```python\r\nERR_MSG = {\r\n    ...\r\n    'PR04': 'Parameter \"{param}\" has no type',\r\n    ...\r\n\r\ndef validate():\r\n    ...\r\n    if some_cond:\r\n        # may be the tuple (code, msg) could be created with a function, so this looks clearer\r\n        errs.append(('PR04', ERR_MSG['PR04'].format(param=param)))\r\n    ...\r\n```\r\n\r\nI'm unsure, because we will loose the error messages next to the conditions. But without the long messages in between all the conditions I think the code will be neater in that part (the most critical of this script). And we also have the reference of error codes to error messages clearer in one place (and it can be used externally, to map codes to messages, for example if I generate a report of the most frequent errors.\r\n\r\nWhat do you think?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/436157087",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23514#issuecomment-436157087",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23514",
    "id": 436157087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjE1NzA4Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-06T07:33:06Z",
    "updated_at": "2018-11-06T07:33:06Z",
    "author_association": "MEMBER",
    "body": "@datapythonista : I think putting it in a dictionary seems reasonable.  That way the implementation of the function doesn't expand with more error messages, only with logic changes, if that makes sense."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/436157495",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23514#issuecomment-436157495",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23514",
    "id": 436157495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjE1NzQ5NQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-06T07:35:05Z",
    "updated_at": "2018-11-06T07:35:05Z",
    "author_association": "MEMBER",
    "body": "thanks for the feedback, I'll change it then, and we can see in practice"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/436171513",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23514#issuecomment-436171513",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23514",
    "id": 436171513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjE3MTUxMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-06T08:35:06Z",
    "updated_at": "2018-11-06T08:35:06Z",
    "author_association": "MEMBER",
    "body": "+1 on gathering all codes and (base) error messages together in a dict, if possible. That would make it easier to see which codes/errors we have (but of course might make it a bit less clear in the code what the message is where it is raised)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/436203945",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23514#issuecomment-436203945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23514",
    "id": 436203945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjIwMzk0NQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-06T10:24:41Z",
    "updated_at": "2018-11-06T10:24:41Z",
    "author_association": "MEMBER",
    "body": "Made the changes. I do think it makes things clearer."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/436218096",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23514#issuecomment-436218096",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23514",
    "id": 436218096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjIxODA5Ng==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-11-06T11:16:00Z",
    "updated_at": "2018-11-06T11:27:07Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/23514?src=pr&el=h1) Report\n> Merging [#23514](https://codecov.io/gh/pandas-dev/pandas/pull/23514?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/c6366f5c15acee213bad0d9f7a15ad69d4445a64?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/23514/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/23514?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master   #23514   +/-   ##\n=======================================\n  Coverage   92.25%   92.25%           \n=======================================\n  Files         161      161           \n  Lines       51169    51169           \n=======================================\n  Hits        47207    47207           \n  Misses       3962     3962\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.64% <ø> (ø)` | :arrow_up: |\n| #single | `42.28% <ø> (ø)` | :arrow_up: |\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/23514?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/23514?src=pr&el=footer). Last update [c6366f5...f0ab4c3](https://codecov.io/gh/pandas-dev/pandas/pull/23514?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/436532179",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23514#issuecomment-436532179",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23514",
    "id": 436532179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjUzMjE3OQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-07T07:39:47Z",
    "updated_at": "2018-11-07T07:39:47Z",
    "author_association": "MEMBER",
    "body": "All green. If there are no more changes required, could someone take another look and merge? There is some other work going on on adding validations, and would be nice to have this merged soon."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/436549729",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23514#issuecomment-436549729",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23514",
    "id": 436549729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjU0OTcyOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-07T08:51:23Z",
    "updated_at": "2018-11-07T08:51:23Z",
    "author_association": "MEMBER",
    "body": "Thanks!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/436552186",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23514#issuecomment-436552186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23514",
    "id": 436552186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjU1MjE4Ng==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-07T09:00:37Z",
    "updated_at": "2018-11-07T09:00:37Z",
    "author_association": "MEMBER",
    "body": "Thanks @jorisvandenbossche. I just detected a typo in an error that wasn't tested. I'm fixing it now, and adding the test, will open a separate PR."
  }
]
