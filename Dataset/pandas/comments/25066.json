[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/459695933",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25066#issuecomment-459695933",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25066",
    "id": 459695933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTY5NTkzMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T11:40:11Z",
    "updated_at": "2019-02-01T11:40:11Z",
    "author_association": "MEMBER",
    "body": "@sam-s thanks for the report! I can confirm the issue. \r\nI suppose this is related to trying to preserve the dtype: https://github.com/pandas-dev/pandas/pull/24458. \r\n\r\nIMO it would make sense to follow numpy behaviour here to only preserve the dtype if the passed lower/upper match the dtype."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/459946695",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25066#issuecomment-459946695",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25066",
    "id": 459946695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTk0NjY5NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-02T08:27:32Z",
    "updated_at": "2019-02-06T23:17:50Z",
    "author_association": "MEMBER",
    "body": "@sam-s @jorisvandenbossche : I tracked down the regression, and it boils down to this:\r\n\r\nWhen tiny floats and integers are involved in `.where`, `numpy` uses exact numbers and does not round.  That's why your examples work before #24458.\r\n\r\nIn `pandas`, in the post-processing portion of `.where`, we actually attempt to cast downcast to int if they are \"sufficiently\" close to one another (via `np.allclose`).  Turns out you hit the tolerance on the nose with `1e-8` (we pass in `atol=1e-8`).  Thus, the result of our internal where functionality is correct, but it is the post-processing of said result that is the issue.\r\n\r\nRelevant files: `generic.py`, `managers.py`, `blocks.py` --> `cast.py` (downcasting occurs at block level)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/459949265",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25066#issuecomment-459949265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25066",
    "id": 459949265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTk0OTI2NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-02T09:08:37Z",
    "updated_at": "2019-02-02T09:09:55Z",
    "author_association": "MEMBER",
    "body": "Reading the docs, this rounding / downcasting behavior is not documented in the docstring for `.where`, and while it won't manifest itself in many situations, it does in this one.  Thus, there are a couple of options here on how to proceed:\r\n\r\n1) Revert #24458 - Not sure I really want to do this though.\r\n\r\n2) Don't downcast results in post-processing.  It's not documented, but I see the benefits (memory).\r\n\r\n3) Stricter downcasting procedures so that we don't round results at all like `numpy` does.  This, however, would involve modifying `maybe_downcast_to_dtype` to make this work.\r\n\r\nThoughts?\r\n\r\ncc @jreback "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/459960449",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25066#issuecomment-459960449",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25066",
    "id": 459960449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTk2MDQ0OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-02T12:13:27Z",
    "updated_at": "2019-02-02T12:13:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pushing to 0.24.2, since this looks a little tricky.."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463830375",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25066#issuecomment-463830375",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25066",
    "id": 463830375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzgzMDM3NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T22:35:39Z",
    "updated_at": "2019-02-14T22:35:39Z",
    "author_association": "MEMBER",
    "body": "@gfyoung I didn't look into detail, but from your explanation, I was thinking: couldn't we check the type of the scalar clip value? If the clipping value you provide is a float, then I would say it is OK that the output is also float (even if your original column was int). \r\n\r\nOn the other hand, long term, we could also try to go to a behaviour where we *always* preserve the dtype (basically meaning we would cast the clip value to the dtype of the column, so any float clip value would be converted to int). So if you want to clip integers with a clip value like 0.5, you first need to cast them to floats. \r\nBut that would require a deprecation cycle (if we would want this of course)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463830914",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25066#issuecomment-463830914",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25066",
    "id": 463830914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzgzMDkxNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T22:37:20Z",
    "updated_at": "2019-02-14T22:37:20Z",
    "author_association": "MEMBER",
    "body": ">  a behaviour where we _always_ preserve the dtype\r\n\r\nAlthough, argument against it: numpy doesn't do this. (but numpy does always result in a dtype compatible with the clipping values)"
  }
]
