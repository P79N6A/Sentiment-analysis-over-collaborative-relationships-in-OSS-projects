[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16334430",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3340#issuecomment-16334430",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3340",
    "id": 16334430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzM0NDMw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-13T14:53:53Z",
    "updated_at": "2013-04-13T14:53:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "You are assigning to a copy of the object, use `.loc` or `.ix`\n\n```\nIn [40]: df = pd.DataFrame(data)\n\nIn [41]: df.loc[df.bar>2,'bar'] = 5\n\nIn [42]: df\nOut[42]: \n   bar foo\n0    0   a\n1    1   b\n2    2   c\n3    5   d\n```\n\nSince you are chaining operators, you are responsible for deciding whether to mutate the object or not (and whether to get a reference to the object)\n\ne.g. you are free to do\n\n```\ndf_new = df[df.bar>2]\ndf_new.bar = 5\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16334633",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3340#issuecomment-16334633",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3340",
    "id": 16334633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzM0NjMz",
    "user": {
      "login": "dengemann",
      "id": 1908618,
      "node_id": "MDQ6VXNlcjE5MDg2MTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1908618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dengemann",
      "html_url": "https://github.com/dengemann",
      "followers_url": "https://api.github.com/users/dengemann/followers",
      "following_url": "https://api.github.com/users/dengemann/following{/other_user}",
      "gists_url": "https://api.github.com/users/dengemann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dengemann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dengemann/subscriptions",
      "organizations_url": "https://api.github.com/users/dengemann/orgs",
      "repos_url": "https://api.github.com/users/dengemann/repos",
      "events_url": "https://api.github.com/users/dengemann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dengemann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-13T15:06:12Z",
    "updated_at": "2013-04-13T15:06:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, makes sense, I was assuming a quite implicit reference / value issue.\nBut if it's just about chaining, why does the order make a difference here? In my examples apparently the access member early variant creates a reference, the access member late variant creates a copy.\nMy gut feeling is that both versions should consistently create either a reference or a copy. Or is this a common  language design pattern I did not know about (would be quite implicit ...)? For example in R the order does not matter and both versions would pass.\n\nIf so, maybe we could add a note somewhere in the docs pointing out that the 'pandathonic' way of conditional assignment is using .ix / .loc  and that the order matters.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16334902",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3340#issuecomment-16334902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3340",
    "id": 16334902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzM0OTAy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-13T15:20:37Z",
    "updated_at": "2013-04-13T15:20:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "`df.bar` returns a Series that as its data a view onto the dataframe (its easy because that is how they are stored, and not a copy. This is for performance reasons (easy to see as you would often index off this and do stuff, no reason to have a copy).\n\n`df[df.bar>2]` _can_ be a view (into the underlying numpy data), but is not always. This is generally related to how the data is stored.\n\nPandas philosophy is a to have user perform _explicit_ mutating operations, and not accidently set other things.\n\nChaining by definition means its much harder to figure out what is going on.\n\nFeel free to do a PR to explain this case in more detail (might go in regular docs + 10min.rst).\n\nPython itself allows things like this, but numpy has the same basic issue, for performant reasons you will often get a view; setting that can sometimes trigger a copy, so effects are somewhat non-deterministic.\n\nI think the _view_ (pun!) was that allow common operations (e.g. `[]` to slice on the rows of a frame) to succeed even though `[]` is the column access operator (equiv to `df.bar` and returns a view on the object).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16335233",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3340#issuecomment-16335233",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3340",
    "id": 16335233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzM1MjMz",
    "user": {
      "login": "dengemann",
      "id": 1908618,
      "node_id": "MDQ6VXNlcjE5MDg2MTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1908618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dengemann",
      "html_url": "https://github.com/dengemann",
      "followers_url": "https://api.github.com/users/dengemann/followers",
      "following_url": "https://api.github.com/users/dengemann/following{/other_user}",
      "gists_url": "https://api.github.com/users/dengemann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dengemann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dengemann/subscriptions",
      "organizations_url": "https://api.github.com/users/dengemann/orgs",
      "repos_url": "https://api.github.com/users/dengemann/repos",
      "events_url": "https://api.github.com/users/dengemann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dengemann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-13T15:40:23Z",
    "updated_at": "2013-04-13T15:40:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Python itself allows things like this, but numpy has the same basic issue, for performant reasons you will often get a view; setting that can sometimes trigger a copy, so effects are somewhat non-deterministic.\n\nThanks for detailing this, I already noticed this in a strict numpy context but always accepted it as some sort of peculiarity. The reason I came up with it here is, presumably, because I most often stumbled across this in the pandas context where I often write such kinds of statements.\n\n> I think the view (pun!) was that allow common operations (e.g. [] to slice on the rows of a frame) to succeed even though [] is the column access operator (equiv to df.bar and returns a view on the object).\n\nYes makes sense, I always wondered about the internals of the DataFrame [] operator ... ;-)\nI hope the indexing API will evolve a bit slower / stabilise in the future. I remember having had some trouble writing cross-version-compatible pandas code. And it's kind of a weird moment where you find yourself indexing the underlying numpy structures instead of using the pandas API ... \n\n> Feel free to do a PR to explain this case in more detail (might go in regular docs + 10min.rst).\n\nI think this is a good idea ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16335333",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3340#issuecomment-16335333",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3340",
    "id": 16335333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzM1MzMz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-13T15:46:03Z",
    "updated_at": "2013-04-13T15:46:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "in 0.11, after lots of clamor, we introduced the `.loc` for location label based and `.iloc` for positional based indexing, to hopefully reduce confusion. See http://pandas.pydata.org/pandas-docs/dev/10min.html#selection, and http://pandas.pydata.org/pandas-docs/dev/indexing.html#basics. If you have any comments, a PR is welcome, or let me know :)\n\nAlso if you think a feature is needed, pls open an issue\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16336253",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3340#issuecomment-16336253",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3340",
    "id": 16336253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzM2MjUz",
    "user": {
      "login": "dengemann",
      "id": 1908618,
      "node_id": "MDQ6VXNlcjE5MDg2MTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1908618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dengemann",
      "html_url": "https://github.com/dengemann",
      "followers_url": "https://api.github.com/users/dengemann/followers",
      "following_url": "https://api.github.com/users/dengemann/following{/other_user}",
      "gists_url": "https://api.github.com/users/dengemann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dengemann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dengemann/subscriptions",
      "organizations_url": "https://api.github.com/users/dengemann/orgs",
      "repos_url": "https://api.github.com/users/dengemann/repos",
      "events_url": "https://api.github.com/users/dengemann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dengemann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-13T16:38:11Z",
    "updated_at": "2013-04-13T16:38:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "> in 0.11, after lots of clamor, we introduced the .loc for location label based and .iloc for positional based indexing, to hopefully reduce confusion.\n\nI noticed that and I do appreciate the choice taken ;-)\nFYI I was referring to tiny a pandas API I contributed here:\n\nhttp://martinos.org/mne/auto_examples/export/plot_epochs_as_data_frame.html#example-export-plot-epochs-as-data-frame-py\n\nto make neurophysiology accessible data the pandas way. Setting this up together with a cross version-API-compliant example took some time (related to cross-version testing).\n\n>  If you have any comments, a PR is welcome, or let me know :)\n\nSure I'll let you know. I'm about to refactor / add to the pandas interface in the next days, I'm sure I'll find something worth PRing / discussing ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16382441",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3340#issuecomment-16382441",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3340",
    "id": 16382441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzgyNDQx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-15T12:43:14Z",
    "updated_at": "2013-04-15T12:43:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "going to put this for 0.12 and can think about it...thanks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24873463",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3340#issuecomment-24873463",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3340",
    "id": 24873463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODczNDYz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T00:32:10Z",
    "updated_at": "2013-09-22T00:32:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I belive this is now well-documented as chaining, and mostly resolved AFAIK by keeping weak-reference to the cacher ..\n@dengemann pls open a new issue if you find anything weird!\n"
  }
]
