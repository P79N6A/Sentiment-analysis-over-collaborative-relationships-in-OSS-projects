[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12647533",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12647533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12647533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQ3NTMz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T11:39:34Z",
    "updated_at": "2013-01-24T12:49:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "this worked by 'accident' before 0.10.1, see #2686 \nthis will work if the rhs is a same length list/ndarray, constant expression, or alignable series\nthe problem with a list that is not the correct length is that it is ambiguous what should be assigned (e.g. do you cycle the values or not)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12648853",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12648853",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12648853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQ4ODUz",
    "user": {
      "login": "ruidc",
      "id": 849427,
      "node_id": "MDQ6VXNlcjg0OTQyNw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/849427?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ruidc",
      "html_url": "https://github.com/ruidc",
      "followers_url": "https://api.github.com/users/ruidc/followers",
      "following_url": "https://api.github.com/users/ruidc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ruidc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ruidc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ruidc/subscriptions",
      "organizations_url": "https://api.github.com/users/ruidc/orgs",
      "repos_url": "https://api.github.com/users/ruidc/repos",
      "events_url": "https://api.github.com/users/ruidc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ruidc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T12:24:47Z",
    "updated_at": "2013-01-24T12:24:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "The provided reference is difficult for me to follow. Can you provide a simple example where this would be ambiguous?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12649521",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12649521",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12649521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQ5NTIx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T12:46:40Z",
    "updated_at": "2013-01-24T12:52:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "your example is ambiguous, e.g. the rhs side is a 1 element list, you are assigning to 2 elements\n\nshould `df['test'] = [0]` work? (after your first assignment where 'test' is created)\nwhat if there are 3 elements on the rhs?\n\nnumpy by default will take whatever elements that you supply (so if you have 2 on the left but 3 on the right it will take the first 2, with 1 element on the rhs it will cycle them). \n\nsince you have a series with defined labels on the lhs, the rhs needs to be aligned so that the labels match, in this case you don't have labels, so its impossible to match unambigously (a constant is a special case where all labels from the lhs get the value, an equal length series or ndarray is unambigous, there is a 1-1 match between lhs and rhs)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12649602",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12649602",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12649602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQ5NjAy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T12:49:29Z",
    "updated_at": "2013-01-24T12:49:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "sorry....number got mixed up...its PR #2686\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12650201",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12650201",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12650201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjUwMjAx",
    "user": {
      "login": "ruidc",
      "id": 849427,
      "node_id": "MDQ6VXNlcjg0OTQyNw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/849427?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ruidc",
      "html_url": "https://github.com/ruidc",
      "followers_url": "https://api.github.com/users/ruidc/followers",
      "following_url": "https://api.github.com/users/ruidc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ruidc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ruidc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ruidc/subscriptions",
      "organizations_url": "https://api.github.com/users/ruidc/orgs",
      "repos_url": "https://api.github.com/users/ruidc/repos",
      "events_url": "https://api.github.com/users/ruidc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ruidc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T13:08:20Z",
    "updated_at": "2013-01-24T13:08:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the corrected link, that makes more sense. \n\nI would not expect df['test'] = [0] to work after first assignment because of the length mismatch, but in the case where the result of the boolean vector on LHS matches the shape on the RHS it's unambiguous though. \nI can understand if the lengths were different\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12650640",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12650640",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12650640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjUwNjQw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T13:21:20Z",
    "updated_at": "2013-01-24T13:21:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "the alignment happens before the indexing, so it IS ambiguous, as I said, you can simply make the rhs a series and it will work (you example was dtype int, so I changed to floats and it works, (with ints I think this is a bug, cause the reindexing should cast the ints to floats so you can put Nans on the )\n\n```\ndf['test'] = [1.,2.]\ndf['test'][[True,False]] = pd.Series([0.],index=[1])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12650706",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12650706",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12650706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjUwNzA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T13:23:04Z",
    "updated_at": "2013-01-24T13:23:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "see issue #2746 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12650827",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12650827",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12650827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjUwODI3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T13:27:09Z",
    "updated_at": "2013-01-24T13:27:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suppose that if you provide a list on the rhs that matches the indexed vector then it SHOULD work, but a priori you almost never know (otherwise why would you need to do the boolean indexing?) - e.g. in your example you are explicity using True/False...using this is an expression though\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12651502",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12651502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12651502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjUxNTAy",
    "user": {
      "login": "ruidc",
      "id": 849427,
      "node_id": "MDQ6VXNlcjg0OTQyNw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/849427?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ruidc",
      "html_url": "https://github.com/ruidc",
      "followers_url": "https://api.github.com/users/ruidc/followers",
      "following_url": "https://api.github.com/users/ruidc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ruidc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ruidc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ruidc/subscriptions",
      "organizations_url": "https://api.github.com/users/ruidc/orgs",
      "repos_url": "https://api.github.com/users/ruidc/repos",
      "events_url": "https://api.github.com/users/ruidc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ruidc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T13:45:29Z",
    "updated_at": "2013-01-24T13:46:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "> but a priori you almost never know \n\n?\nisn't it just a matter of testing the length AFTER the vector is applied?\n\n> using this is an expression though\n\n?\nhow so? \n\n> otherwise why would you need to do the boolean indexing\n\nIn our code we are interested doing multiple, separate operations on a slice that we refer to by using the boolean vector as a variable - ndarray of dtype bool which makes sense in our code. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12652264",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12652264",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12652264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjUyMjY0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T14:04:59Z",
    "updated_at": "2013-01-24T14:04:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes, this could be tested AFTER the vector is applied \n\nwhat I meant (my language is unclear!) - is that if you have a boolean vector that is already indicative of true/false (e.g. its not a computed vector), then use reindex by that and assign directly to your ndarray, the point of an alignment is so you don't make errors by assigning an unlabeled vector to something, everything always has (or can be converted to something) like a series\n\nyou can certianly do what you are doing, but seems a lot clearer to make your rhs a series (which semantically is very close to a ndarray), and has the BIG advantage of having labels for the values\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12653695",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12653695",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12653695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjUzNjk1",
    "user": {
      "login": "ruidc",
      "id": 849427,
      "node_id": "MDQ6VXNlcjg0OTQyNw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/849427?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ruidc",
      "html_url": "https://github.com/ruidc",
      "followers_url": "https://api.github.com/users/ruidc/followers",
      "following_url": "https://api.github.com/users/ruidc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ruidc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ruidc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ruidc/subscriptions",
      "organizations_url": "https://api.github.com/users/ruidc/orgs",
      "repos_url": "https://api.github.com/users/ruidc/repos",
      "events_url": "https://api.github.com/users/ruidc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ruidc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T14:37:41Z",
    "updated_at": "2013-01-24T14:37:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "> yes, this could be tested AFTER the vector is applied \n\nI'm not clear on the internal mechanics, so why isn't it done this way?\n\n> use reindex by that and assign directly to your ndarray\n\ncan you clarify how? To elaborate on our usage:\n\n```\nimport numpy\nimport pandas\ndf = pandas.DataFrame([1, 2, 3], index=[0, 1, 2], columns=['test'], dtype=object)\ninteresting_subset = numpy.greater(df['test'], 1)\ndf['test'][interesting_subset] = ['some extra work will happen here']\n```\n\n> and has the BIG advantage of having labels for the values\n\nin the above, why would having a Series/labels on RHS be an advantage? Thanks for trying to help and explain, perhaps we should move this to the ML ? My biggest concern is the change in behaviour that (to me at least) was not ambiguous and hard to identify in a large code-base.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12653920",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12653920",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12653920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjUzOTIw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T14:42:33Z",
    "updated_at": "2013-01-24T14:42:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "what is the ['some extra work will happen here']?\n\nhere's a psedo example\n\n```\nmask = df['test'] > 1\ndf['test'][mask] = df['test'] + 5\n```\n\nof course the rhs could be any series (from this df or other), that aligns by labels, that's the key\nit makes it so you don't have to worry about sub-setting the rhs at all\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12691587",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12691587",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12691587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjkxNTg3",
    "user": {
      "login": "ruidc",
      "id": 849427,
      "node_id": "MDQ6VXNlcjg0OTQyNw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/849427?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ruidc",
      "html_url": "https://github.com/ruidc",
      "followers_url": "https://api.github.com/users/ruidc/followers",
      "following_url": "https://api.github.com/users/ruidc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ruidc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ruidc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ruidc/subscriptions",
      "organizations_url": "https://api.github.com/users/ruidc/orgs",
      "repos_url": "https://api.github.com/users/ruidc/repos",
      "events_url": "https://api.github.com/users/ruidc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ruidc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T08:08:48Z",
    "updated_at": "2013-01-25T08:08:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "when you suggest a Series in RHS to \"align by labels\", I presume you mean, to have matching/valid index values?\n\n['some extra work will happen here'] in my use case is a list returned from a server operation on the interesting_subset whose only relationship to the DataFrame is positional alignment of the rows, so I can work around the issue, but it still feels like a regression in a case like this where there is no ambiguity from lengths.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12699738",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12699738",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12699738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjk5NzM4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T12:58:15Z",
    "updated_at": "2013-01-25T12:58:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes, the issue you have is that you are providing a guarantee that the ['some extra work will happen here'] are in _exactly_ the same order and _exactly_ the same length as the indexing array, this is an extremely strong statement; it might be true in your case, but in general this is not. what if you happen to off by 1 or 1 extra value is returned? doesn't it make more sense to have the operation 'figure' it out by aligning by labels?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12701258",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12701258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12701258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzAxMjU4",
    "user": {
      "login": "ruidc",
      "id": 849427,
      "node_id": "MDQ6VXNlcjg0OTQyNw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/849427?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ruidc",
      "html_url": "https://github.com/ruidc",
      "followers_url": "https://api.github.com/users/ruidc/followers",
      "following_url": "https://api.github.com/users/ruidc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ruidc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ruidc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ruidc/subscriptions",
      "organizations_url": "https://api.github.com/users/ruidc/orgs",
      "repos_url": "https://api.github.com/users/ruidc/repos",
      "events_url": "https://api.github.com/users/ruidc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ruidc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T13:48:13Z",
    "updated_at": "2013-01-25T13:48:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "of course, but that's extra work than previously required. Thanks for clarifying.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12713503",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-12713503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 12713503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzEzNTAz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T18:16:44Z",
    "updated_at": "2013-01-25T18:16:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@changhiskhan or @wesm any comments on this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13258185",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-13258185",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 13258185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjU4MTg1",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-07T20:36:58Z",
    "updated_at": "2013-02-07T20:36:58Z",
    "author_association": "MEMBER",
    "body": "This looks like a bug to me. Marking as such and will try to fix for 0.10.2/0.11\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15315074",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-15315074",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 15315074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzE1MDc0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-22T18:54:28Z",
    "updated_at": "2013-03-22T18:54:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "closed by #3139\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15778448",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2745#issuecomment-15778448",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2745",
    "id": 15778448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Nzc4NDQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-02T14:31:25Z",
    "updated_at": "2013-04-02T14:31:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ruidc FYI #3236 fixes the more general issue of what you were doing here\n"
  }
]
