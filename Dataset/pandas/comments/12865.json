[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208448351",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12865#issuecomment-208448351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12865",
    "id": 208448351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ0ODM1MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T16:55:16Z",
    "updated_at": "2016-04-11T16:55:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "well if you post a copy-pastable example then you will prob get more help. \n\nI am not sure why any of this is suprising. This is all quite well documented and as expected.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208453149",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12865#issuecomment-208453149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12865",
    "id": 208453149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ1MzE0OQ==",
    "user": {
      "login": "DavidEscott",
      "id": 150504,
      "node_id": "MDQ6VXNlcjE1MDUwNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/150504?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidEscott",
      "html_url": "https://github.com/DavidEscott",
      "followers_url": "https://api.github.com/users/DavidEscott/followers",
      "following_url": "https://api.github.com/users/DavidEscott/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidEscott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidEscott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidEscott/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidEscott/orgs",
      "repos_url": "https://api.github.com/users/DavidEscott/repos",
      "events_url": "https://api.github.com/users/DavidEscott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidEscott/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T17:10:58Z",
    "updated_at": "2016-04-11T17:10:58Z",
    "author_association": "NONE",
    "body": "This isn't a usage question. I eventually did figure out how to get Pandas to properly format output. This is more of a general comment on the usability of pandas. These default behaviors don't seem sensible to me as a user, and having to work around them makes pandas seem both harder to use and more fragile than one would like. The end result being that I probably won't use pandas at all.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208454060",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12865#issuecomment-208454060",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12865",
    "id": 208454060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ1NDA2MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T17:14:17Z",
    "updated_at": "2016-04-11T17:14:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@DavidEscott well if you want to help people, being more specific with an example would help. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208456185",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12865#issuecomment-208456185",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12865",
    "id": 208456185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ1NjE4NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T17:18:12Z",
    "updated_at": "2016-04-11T17:18:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "So here are some responses to your points, keeping in mind that I don't a good example of what you are doing, so have to guess a bit:\n\n> 1. The results of sum()/max() have heirarchical indexes and so I must liberally sprinkle `reset_index()` at particular points in my code.\n\nThe is to USE the hierarchical indexes, you can pass `as_index=False` to not have to do this. But this is a rare case, hence the default behavior\n\n> 1. Pandas tries to be smart and assumes that the empty string in my key_cols is a NULL string and converts it to NaN. This is annoying because now I have to add `na_rep=\"\"` to my `to_csv` command.\n\nThis is standard practice. What else would a null string mean then?\n\n> 1. More significantly though, pandas thinks that a NaN in a groupby column is reason to exclude the entire row... so now I have to add a bunch of lines to `fillna('')` (and that doesn't modify the frame you call it on, but rather returns a copy so you have to `fillna('', inplace=True)`\n\nExactly you DO normally exclude these. This is a feature which may eventually be added.\n\n> 1. Because pandas doesn't support columns with integer values and NA values it has cast all my ints to floats and my output now looks like `1.0, 2.0`. instead of `1, 2`. So I have to add a `float_format` directive to the `to_csv`.\n\nThis may be added at some point. But is a fact of life ATM with numpy as the only backend.\n\n> 1. Pandas also likes to output a row number, so `index=False` has to get added to `to_csv.`\n\nThis is outputing the default index. This is to make `to_csv` and `DataFrame.read_csv` convertible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208469655",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12865#issuecomment-208469655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12865",
    "id": 208469655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ2OTY1NQ==",
    "user": {
      "login": "DavidEscott",
      "id": 150504,
      "node_id": "MDQ6VXNlcjE1MDUwNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/150504?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidEscott",
      "html_url": "https://github.com/DavidEscott",
      "followers_url": "https://api.github.com/users/DavidEscott/followers",
      "following_url": "https://api.github.com/users/DavidEscott/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidEscott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidEscott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidEscott/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidEscott/orgs",
      "repos_url": "https://api.github.com/users/DavidEscott/repos",
      "events_url": "https://api.github.com/users/DavidEscott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidEscott/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T17:46:56Z",
    "updated_at": "2016-04-11T17:46:56Z",
    "author_association": "NONE",
    "body": "I think your response and my response will generally come down to what is a rare case for you is not a rare case for me, and vice versa.\n\nUltimately for me it is coming down to their being too many hoops to jump through to get sensible behavior that it isn't worth it. I know of no other system that when asked to aggregate values drops rows because the key contains a NULL value. Now I predominately work in SQL, but this seems very strange to me.\n\nThe use of an empty string to mean an empty string (and not a null string), is ambiguous, but again very common in the kinds of files and data I work with. It would be great if we never had to deal with CSV and its inability to express NULL, but that isn't likely to happen soon.\n\nSo if I were to make concrete suggestions:\n1. Allow me to specify that \"\" is not null for string columns (it has to be for numeric columns). [Perhaps in read_table have an argument \"allow_blank_strings\"]\n2. Group NaN's together in min/max/sum.\n3. Perhaps implement a to_table function that is a closer inverse of read_table (because to_csv isn't). \n\nAs it is the default behavior is not \"standard csv\" (whatever that may mean) but rather \"pandas version of csv\", and that is very confusing to new users. I do not expect csv files to have rownumbers in the first column. I do not expect multi-line headers, etc... I don't care if some data is lost, but I really need to be able to get the data out with as little modification/metadata as possible. I just want the bare output of column headers and contents.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208489741",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12865#issuecomment-208489741",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12865",
    "id": 208489741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ4OTc0MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T18:35:12Z",
    "updated_at": "2016-04-11T18:35:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls show a specific example, your code above is not very idiomatic.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208493629",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12865#issuecomment-208493629",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12865",
    "id": 208493629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ5MzYyOQ==",
    "user": {
      "login": "DavidEscott",
      "id": 150504,
      "node_id": "MDQ6VXNlcjE1MDUwNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/150504?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidEscott",
      "html_url": "https://github.com/DavidEscott",
      "followers_url": "https://api.github.com/users/DavidEscott/followers",
      "following_url": "https://api.github.com/users/DavidEscott/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidEscott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidEscott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidEscott/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidEscott/orgs",
      "repos_url": "https://api.github.com/users/DavidEscott/repos",
      "events_url": "https://api.github.com/users/DavidEscott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidEscott/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T18:45:02Z",
    "updated_at": "2016-04-11T18:50:32Z",
    "author_association": "NONE",
    "body": "I'm not sure what you consider to not be idiomatic about this. All I am doing is ensuring that the file lhs obeys the restriction that `lhs.column >= SUM(rhs.column for rhs in rhs_list)` for all columns in lhs excepting FIRST_NAME and LAST_NAME:\n\n``` python\nlhs_frame = pandas.read_table(infile)\nlhs_frame.FIRST_NAME.fillna('', inplace=True)\nlhs_frame.LAST_NAME.fillna('', inplace=True)\nrhs_frames = []\nfor infile in rhs_list:\n    df = pandas.read_table(infile)\n    df.FIRST_NAME.fillna('', inplace=True)\n    df.LAST_NAME.fillna('', inplace=True)\n    rhs_frames.append(df)\n# sum of RHS\nrhs = (pandas.concat(rhs_frames).groupby([\"FIRST_NAME\", \"LAST_NAME\"])\n                                .sum().reset_index())\n# max of lhs and rhs\npatched = (pandas.concat([lhs_frame, rhs]).groupby([\"FIRST_NAME\", \"LAST_NAME\"])\n                 .max().reset_index())\npatched.to_csv(infile + \".patched\", sep=\"\\t\", na_rep=\"\", index=False, float_format=\"%.0f\")\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208520846",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12865#issuecomment-208520846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12865",
    "id": 208520846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODUyMDg0Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T19:38:58Z",
    "updated_at": "2016-04-11T19:39:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@DavidEscott why are you calling `reset_index()`  instead of using `\"FIRST_NAME\", \"LAST_NAME\"` as your index in `lhs`? Would be _much_ easier to help if you provide a copy-pastable example.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208534026",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12865#issuecomment-208534026",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12865",
    "id": 208534026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODUzNDAyNg==",
    "user": {
      "login": "DavidEscott",
      "id": 150504,
      "node_id": "MDQ6VXNlcjE1MDUwNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/150504?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidEscott",
      "html_url": "https://github.com/DavidEscott",
      "followers_url": "https://api.github.com/users/DavidEscott/followers",
      "following_url": "https://api.github.com/users/DavidEscott/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidEscott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidEscott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidEscott/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidEscott/orgs",
      "repos_url": "https://api.github.com/users/DavidEscott/repos",
      "events_url": "https://api.github.com/users/DavidEscott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidEscott/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T20:08:47Z",
    "updated_at": "2016-04-11T20:10:15Z",
    "author_association": "NONE",
    "body": "@TomAugspurger I have to call `reset_index` otherwise I get errors or nonsense:\n\n``` python\nlhs = pandas.DataFrame([[\"A\", \"B\", 1]], columns=[\"FIRST\", \"SECOND\", \"VAL\"])\nrhs = pandas.DataFrame([[\"A\", \"B\", 1], [\"A\", \"B\", 2], [\"C\", \"D\", 3]], columns=[\"FIRST\", \"SECOND\", \"VAL\"])\nsummed= rhs.groupby([\"FIRST\", \"SECOND\"]).sum()\nunion = pandas.concat([lhs, summed])\n# this union object is really strange\npatched = union.groupby([\"FIRST\", \"SECOND\"]).max()\n```\n\nThe end result I get from that is wrong. It tells me the max of the lhs and the summed rhs is A,B,1 not A,B,3\\nC,D,3 as it should be. It completely ignored the rhs. While pandas allows me to concatenate a groupby object, and a regular dataframe, it doesn't do anything sensible with such objects. Hence the reset_index to get back to a normal dataframe.\n\nI'm not asking for how to make pandas do this correctly. After many hours I did eventually figure it out. I'm pointing out how counter-intuitively pandas is behaving.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208543012",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12865#issuecomment-208543012",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12865",
    "id": 208543012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODU0MzAxMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T20:22:34Z",
    "updated_at": "2016-04-11T20:56:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I'm not asking for how to make pandas do this correctly\n\nGotcha. In case anyone else comes across this,\n\n``` python\nlhs = lhs.set_index(['FIRST', 'SECOND'])`  # you would probably just do this in read_csv\n(pd.concat([lhs, rhs.groupby(['FIRST', 'SECOND']).sum()])\n    .groupby(level=['FIRST', 'SECOND'])\n    .max()\n)\n```\n\n> I'm pointing out how counter-intuitively pandas is behaving.\n\nThe tough with that is what's intuitive is in the eye of the beholder. The solution is consistent behavior and good docs. Let us know if you find any areas where those are lacking.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208565225",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12865#issuecomment-208565225",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12865",
    "id": 208565225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODU2NTIyNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T21:16:17Z",
    "updated_at": "2016-04-11T21:16:17Z",
    "author_association": "MEMBER",
    "body": "FYI, the issue on not dropping NaNs in groupby keys is here: https://github.com/pydata/pandas/issues/3729 (and there is also a PR in progress)\n"
  }
]
