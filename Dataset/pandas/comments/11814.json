[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/163796417",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11814#issuecomment-163796417",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11814",
    "id": 163796417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Mzc5NjQxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-11T00:38:02Z",
    "updated_at": "2015-12-11T00:38:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Your example is false. A dictionary NEVER creates a view. (I have a branch that fixes this by not consolidating, but thats a separate issue).\n\nViews are created by being passed numpy arrays (the view is to the array itself)\n\n```\nIn [49]: df = pd.DataFrame(np.array([[1,3],[2,4]]))\n\nIn [50]: df\nOut[50]: \n   0  1\n0  1  3\n1  2  4\n\nIn [51]: df = pd.DataFrame(np.array([[1,3],[2,4]]),columns=list('AB'))\n\nIn [52]: df\nOut[52]: \n   A  B\n0  1  3\n1  2  4\n\nIn [53]: df._data.blocks[0].is_view\nOut[53]: True\n\nIn [59]: df._data.blocks[0].values.base\nOut[59]: \narray([[1, 3],\n       [2, 4]])\n\nIn [54]: df = DataFrame({'A':[1,2], 'B':[3,4]})\n\nIn [55]: df\nOut[55]: \n   A  B\n0  1  3\n1  2  4\n\nIn [56]: df._data.blocks[0].is_view\nOut[56]: False\n\nIn [57]: df._data.blocks[0].values.base\n\nIn [58]: df = pd.DataFrame(np.array([[1,3],[2,4]]),columns=list('AB'))\n\n```\n\nNote that this is NOT true for `object` dtypes (otherwise we can have aliasing issues).\n\n```\nIn [60]: df = DataFrame(np.array([['foo','bar'],['baz','bah']]),columns=list('AB'))\n\nIn [61]: df\nOut[61]: \n     A    B\n0  foo  bar\n1  baz  bah\n\nIn [62]: df._data.blocks[0].values.base\n\nIn [63]: df._data.blocks[0].is_view    \nOut[63]: False\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/163985434",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11814#issuecomment-163985434",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11814",
    "id": 163985434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Mzk4NTQzNA==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-11T16:38:41Z",
    "updated_at": "2015-12-11T18:12:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @jreback \n\nThink my example / issue was mis-understood. I agree creating a DataFrame from a dictionary never creates a view. The case I'm noting is that if you create a DataFrame **from another DataFrame**, then those are effectively views of one another, even if they reports `_is_view == False`. \n\nIn my example, if you change `df`, then `df2` is also changed. Yet `df2._is_view` is `False`. \n\nIndeed, view behavior documented in test modules (test_frame.py, line 2637):\n\n```\ndef test_constructor_dtype_nocast_view(self):\n    df = DataFrame([[1, 2]])\n    should_be_view = DataFrame(df, dtype=df[0].dtype)\n    should_be_view[0][0] = 99\n    self.assertEqual(df.values[0, 0], 99)\n\n    should_be_view = DataFrame(df.values, dtype=df[0].dtype)\n    should_be_view[0][0] = 97\n    self.assertEqual(df.values[0, 0], 97)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/164157981",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11814#issuecomment-164157981",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11814",
    "id": 164157981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDE1Nzk4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-12T14:18:42Z",
    "updated_at": "2015-12-12T14:18:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nickeubank \n\nso this is actually right.\n\n`._is_view` tests whether something IS a view\n\ne.g.\n\n```\nIn [1]: arr = np.arange(5) \n\nIn [2]: arr.base is None\nOut[2]: True\n\nIn [3]: arr.view().base is None\nOut[3]: False\n```\n\nbut this happens to fail if the object IS THE SAME OBJECT. \n\nE.g. in the case `_data` is assigned directly to the `._data` in the `df2`. Not a view, not a copy, but the same object.\n\n```\nIn [6]: df._data is df2._data\nOut[6]: True\n```\n\nSo this is technically 'wrong', but its more semantics than anything else. Sharing the same object or a view of it are from pandas point of view de-facto the same. numpy makes this distinction, but not pandas.\n\nI suppose you could actually create a new block manager, where everything undering is created not with copy but with `.view` then this would be true. from a practical point of view I don't really know if this would make a difference though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/164157989",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11814#issuecomment-164157989",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11814",
    "id": 164157989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDE1Nzk4OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-12T14:19:14Z",
    "updated_at": "2015-12-12T14:19:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "If you want to change this (independent of your other PR) and see if this actually breaks anything (except the test), I would accept a PR for that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/164170958",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11814#issuecomment-164170958",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11814",
    "id": 164170958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDE3MDk1OA==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-12T17:42:02Z",
    "updated_at": "2015-12-12T17:42:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great! Will do -- need it for the other PR anyway. And thanks for the explanation!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/164212348",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11814#issuecomment-164212348",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11814",
    "id": 164212348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDIxMjM0OA==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-13T02:27:48Z",
    "updated_at": "2015-12-13T02:27:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "huh -- empty indexers do the same thing. \n\n```\ndf = pd.DataFrame({'col1':range(10,20),\n                   'col2':range(20,30)})\n\ndf2 = df.loc[:,:]\n\ndf2._data is df._data\nOut[3]: True\n\ndf2._is_view\nOut[4]: False\n```\n\nThat ok to tweak too?\n"
  }
]
