[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451798683",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24656#issuecomment-451798683",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24656",
    "id": 451798683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTc5ODY4Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T01:51:21Z",
    "updated_at": "2019-01-07T01:51:21Z",
    "author_association": "MEMBER",
    "body": "Hmm, I see that passing datetime / Timestamp objects, then it is inferred to return a DatetimeArray:\r\n\r\n```\r\nIn [10]: pd.array([pd.Timestamp('2012-01-01'), pd.Timestamp('2012-01-02')])  \r\nOut[10]: \r\n<DatetimeArray>\r\n['2012-01-01 00:00:00', '2012-01-02 00:00:00']\r\nLength: 2, dtype: datetime64[ns]\r\n```\r\n(but that's not the most convenient way to quickly create such an array)\r\n\r\nAlso passing a datetime64[ns] numpy array gives a DatetimeArray:\r\n\r\n```\r\nIn [13]: pd.array(np.array(['2012-01-01', '2012-01-02'], dtype='datetime64[ns]'))        \r\nOut[13]: \r\n<DatetimeArray>\r\n['2012-01-01 00:00:00', '2012-01-02 00:00:00']\r\nLength: 2, dtype: datetime64[ns]\r\n```\r\n\r\nbut when specifying that dtype inside `pd.array` it returns a PandasArray.\r\n\r\nReading the docstring of `pd.array` again this might be all according to the rules, but still, it feels a bit strange (or maybe at least the unpacking of the DatetimeIndex case)\r\n\r\ncc @TomAugspurger \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451920716",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24656#issuecomment-451920716",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24656",
    "id": 451920716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTkyMDcxNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T12:33:29Z",
    "updated_at": "2019-01-07T12:33:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed, both of those feel strange. The DTI one is probably an outright buggy.\r\n\r\nThe `pd.array(['2012-01-01', '2012-01-02'], dtype='datetime64[ns]')` one is as you say maybe following the \"rules\", but we might want to consider overriding NumPy when we have arrays that share string aliases with NumPy (I think just `datetime64[ns]` and `timedelta64[ns]`)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451923375",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24656#issuecomment-451923375",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24656",
    "id": 451923375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTkyMzM3NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T12:44:16Z",
    "updated_at": "2019-01-07T12:44:16Z",
    "author_association": "MEMBER",
    "body": ">  but we might want to consider overriding NumPy when we have arrays that share string aliases with NumPy (I think just datetime64[ns] and timedelta64[ns]).\r\n\r\nYes, I would be +1 on that. \r\nIt somehow complicates the \"rules\", but it is also very strange that `pd.array` does not give the Array type that pandas actually uses under the hood for those dtypes. \r\n(this signals a bit the problems of clashing dtypes / the fact that DatetimeArray still has a numpy dtype)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451924525",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24656#issuecomment-451924525",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24656",
    "id": 451924525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTkyNDUyNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T12:48:56Z",
    "updated_at": "2019-01-07T12:48:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Indeed. Returning a tz-naive DatetimeArray or a TimedeltaArray wouldn't\npass a type checker because of their dtype.\nBut this is the same tradeoff as Series[tz-navie].array, where we returned\na DatetimeArray.\n\nOn Mon, Jan 7, 2019 at 6:44 AM Joris Van den Bossche <\nnotifications@github.com> wrote:\n\n> but we might want to consider overriding NumPy when we have arrays that\n> share string aliases with NumPy (I think just datetime64[ns] and\n> timedelta64[ns]).\n>\n> Yes, I would be +1 on that.\n> It somehow complicates the \"rules\", but it is also very strange that\n> pd.array does not give the Array type that pandas actually uses under the\n> hood for those dtypes.\n> (this signals a bit the problems of clashing dtypes / the fact that\n> DatetimeArray still has a numpy dtype)\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/24656#issuecomment-451923375>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIio3FmQehgjaZueCVXU0hEF7gU7Hks5vA0EkgaJpZM4ZyucK>\n> .\n>\n"
  }
]
