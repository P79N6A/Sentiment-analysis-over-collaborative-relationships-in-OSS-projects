[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141208845",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11137#issuecomment-141208845",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11137",
    "id": 141208845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTIwODg0NQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T20:01:45Z",
    "updated_at": "2015-09-17T20:01:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like it's trying to compare your whole series to the tuple, because the tuple is a sequence.\n\nYou can (practically) only support either a comparison of a series to a sequence, or a comparison of each point of a series to a sequence; not both.\n\nSolution is fairly consistent to both https://github.com/pydata/pandas/issues/10900 and https://github.com/pydata/pandas/issues/10399 - is there a reason you can't use a DataFrame here?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141218906",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11137#issuecomment-141218906",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11137",
    "id": 141218906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTIxODkwNg==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T20:31:26Z",
    "updated_at": "2015-09-17T20:31:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm a bit confused, because before it was said that this problem would only appear when using df.apply. I think this basically just boils down to pandas not supporting tuples as object elements, as the operation I'm doing above is a fully supported on in general, isn't it? I'm unclear on what you mean by \"using a DataFrame\"?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141227923",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11137#issuecomment-141227923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11137",
    "id": 141227923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTIyNzkyMw==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T21:04:07Z",
    "updated_at": "2015-09-17T21:04:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@michaelaye Yes exactly - you may be constantly struggling if you try and use sequences as object elements. Others who are closer to the project should weigh in here though.\n\nRe the DataFrame - I didn't see that this is a column in a DataFrame already. My suggestion isn't very helpful, then.\n\nThis does seem like a reversion, FWIW:\n\n``` python\nseries=pd.Series(tuple(pd.np.random.rand(3)) for _ in range(20))\nseries==series.iloc[0]\n# 0      True\n# 1     False\n# ...\nINSTALLED VERSIONS\n------------------\ncommit: None\npython: 3.4.3.final.0\npython-bits: 64\nOS: Darwin\nOS-release: 14.4.0\nmachine: x86_64\nprocessor: i386\nbyteorder: little\nLC_ALL: None\nLANG: en_US.UTF-8\n\npandas: 0.16.2\n```\n\n``` python\nIn [2]: series=pd.Series(tuple(pd.np.random.rand(3)) for _ in range(20))\n\nIn [3]: series==series.iloc[0]\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-3-83f74919dc93> in <module>()\n----> 1 series==series.iloc[0]\n\n/Users/maximilian/Dropbox/workspace/pandas/pandas/core/ops.py in wrapper(self, other, axis)\n    724                 other = np.asarray(other)\n    725 \n--> 726             res = na_op(values, other)\n    727             if isscalar(res):\n    728                 raise TypeError('Could not compare %s type with Series'\n\n/Users/maximilian/Dropbox/workspace/pandas/pandas/core/ops.py in na_op(x, y)\n    642             if isinstance(y, (np.ndarray, pd.Series)):\n    643                 if not is_object_dtype(y.dtype):\n--> 644                     result = lib.vec_compare(x, y.astype(np.object_), op)\n    645                 else:\n    646                     result = lib.vec_compare(x, y, op)\n\n/Users/maximilian/Dropbox/workspace/pandas/pandas/lib.pyx in pandas.lib.vec_compare (pandas/lib.c:13811)()\n    799 \n    800     if n != len(right):\n--> 801         raise ValueError('Arrays were different lengths: %d vs %d'\n    802                          % (n, len(right)))\n    803 \n\nValueError: Arrays were different lengths: 20 vs 3\n\nIn [5]: pd.show_versions()\n\nINSTALLED VERSIONS\n------------------\ncommit: d28fd702c87f4c2629c53d763551feb5395ff8b5\npython: 3.4.3.final.0\npython-bits: 64\nOS: Darwin\nOS-release: 14.4.0\nmachine: x86_64\nprocessor: i386\nbyteorder: little\nLC_ALL: None\nLANG: en_US.UTF-8\n\npandas: 0.17.0rc1+60.gd28fd70\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141228862",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11137#issuecomment-141228862",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11137",
    "id": 141228862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTIyODg2Mg==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T21:08:30Z",
    "updated_at": "2015-09-17T21:08:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "That would explain why @jreback before only sounded like it's only an issue for df.apply. I'm sure if using tuples is a general problem, he would have warned me. (Or he did, and I wasn't listening. ;) )\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141231339",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11137#issuecomment-141231339",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11137",
    "id": 141231339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTIzMTMzOQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T21:20:41Z",
    "updated_at": "2015-09-17T21:20:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I know this has been suggested before...but why not store the tuple as `DataFrame` columns?  It's more idiomatic, and will be faster / more memory efficient.  If all you ever want to do is access the columns as group, just define something like a `fields` accessor as I did below.\n\n```\nIn [144]: df\nOut[144]: \n                                BINNING_SET\n2014-10-18 07:36:19.926570   (0, 1, 319, 11)\n2014-10-18 07:36:19.926570   (0, 1, 441, 11)\n2014-10-18 07:36:59.675040  (52, 4, 89, 115)\n2014-10-18 07:36:59.675040  (2, 34, 96, 115)\n2014-10-18 07:55:27.922290  (52, 4, 89, 115)\n\nIn [145]: fields = ['f1', 'f2', 'f3', 'f4']  #names for tuple components...\n\nIn [146]: df = df.BINNING_SET.apply(lambda x: pd.Series(x, index=fields))\n\nIn [147]: df\nOut[147]: \n                            f1  f2   f3   f4\n2014-10-18 07:36:19.926570   0   1  319   11\n2014-10-18 07:36:19.926570   0   1  441   11\n2014-10-18 07:36:59.675040  52   4   89  115\n2014-10-18 07:36:59.675040   2  34   96  115\n2014-10-18 07:55:27.922290  52   4   89  115\n\nIn [152]: df[(df[fields] == df[fields].iloc[0]).all(1)]\nOut[152]: \n                            f1  f2   f3  f4\n2014-10-18 07:36:19.926570   0   1  319  11\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141268796",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11137#issuecomment-141268796",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11137",
    "id": 141268796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTI2ODc5Ng==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T23:17:57Z",
    "updated_at": "2015-09-17T23:17:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, that looks like a not too bad alternative, although the syntax is on the verge of becoming hard to read with this additional `.all(1)`. \nYes, the main reason why working in tuples was a way to filter for a set of these values at once.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141270774",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11137#issuecomment-141270774",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11137",
    "id": 141270774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTI3MDc3NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T23:21:11Z",
    "updated_at": "2015-09-17T23:21:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@michaelaye you simply need to use a column MultiIndex (e.g. say you have several sets of these tuples).\n\n```\nIn [8]: df = DataFrame(np.random.randn(6,4),index=pd.date_range('20130101',periods=6,freq='2s'),columns=pd.MultiIndex.from_product([list('AB'),range(2)]))\n\nIn [9]: df\nOut[9]: \n                            A                   B          \n                            0         1         0         1\n2013-01-01 00:00:00 -0.296009 -0.374544  1.168945 -1.406648\n2013-01-01 00:00:02 -0.532468 -0.540057 -0.022324 -0.395088\n2013-01-01 00:00:04 -0.742925 -0.051457 -1.107048  0.549880\n2013-01-01 00:00:06  1.070147 -0.205438  0.563086 -0.540265\n2013-01-01 00:00:08 -0.128169 -0.219555  0.208610  0.438773\n2013-01-01 00:00:10  1.287697 -0.496478 -0.266373  0.810742\n\nIn [11]: df[['A']]\nOut[11]: \n                            A          \n                            0         1\n2013-01-01 00:00:00 -0.296009 -0.374544\n2013-01-01 00:00:02 -0.532468 -0.540057\n2013-01-01 00:00:04 -0.742925 -0.051457\n2013-01-01 00:00:06  1.070147 -0.205438\n2013-01-01 00:00:08 -0.128169 -0.219555\n2013-01-01 00:00:10  1.287697 -0.496478\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141280345",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11137#issuecomment-141280345",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11137",
    "id": 141280345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTI4MDM0NQ==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T23:37:29Z",
    "updated_at": "2015-09-17T23:37:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hm, my binning sets are just 4 out of a 20-30 column dataframe, so, IIUC, to use the MultiIndex way for different combinations of binning set numbers, I would have to repeat all the other columns, each time, correct? IIUC, you mean something like this:\n\n``` python\nOut[147]: \n                            f1  f2   f3   f4  v1  v2\n2014-10-18 07:36:19.926570   0   1  319   11   1   3\n2014-10-18 07:36:19.926570   0   1  441   11   2   4\n2014-10-18 07:36:59.675040  52   4   89  115   3   7\n2014-10-18 07:36:59.675040   2  34   96  115   5   9\n2014-10-18 07:55:27.922290  52   4   89  115   4   1\n```\n\nwould become\n\n``` python\nOut[147]: \n                           (0,1,319,11)        (0,1,441,11)\n                                     v1   v2             v1   v2\n2014-10-18 07:36:19.926570            1   3               2    4\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141282790",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11137#issuecomment-141282790",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11137",
    "id": 141282790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTI4Mjc5MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T23:41:28Z",
    "updated_at": "2015-09-17T23:41:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "no that is very odd to use a _tuple_ as an indexer in a `MultiIndex`. These should simply be strings.\n\n```\nIn [13]: df = DataFrame(np.random.randn(6,5),index=pd.date_range('20130101',periods=6,freq='2s'),columns=pd.MultiIndex.from_tuples([('f',1),('f',2),('f',3),('v',1),('v',2)]))\n\nIn [14]: df\nOut[14]: \n                            f                             v          \n                            1         2         3         1         2\n2013-01-01 00:00:00 -1.165661 -1.181265 -0.126375 -0.834884 -0.357954\n2013-01-01 00:00:02  1.087771 -0.529879  0.822059 -0.213104 -0.363985\n2013-01-01 00:00:04 -0.246989 -1.611963  0.619888 -0.007096  0.115296\n2013-01-01 00:00:06 -1.271250  0.011331 -0.698223 -0.471338 -0.391065\n2013-01-01 00:00:08  0.752136 -0.133435 -1.394301 -0.923060  0.301170\n2013-01-01 00:00:10  0.053189  0.459304 -2.736818 -0.365441  0.616951\n\nIn [15]: df[['v']]\nOut[15]: \n                            v          \n                            1         2\n2013-01-01 00:00:00 -0.834884 -0.357954\n2013-01-01 00:00:02 -0.213104 -0.363985\n2013-01-01 00:00:04 -0.007096  0.115296\n2013-01-01 00:00:06 -0.471338 -0.391065\n2013-01-01 00:00:08 -0.923060  0.301170\n2013-01-01 00:00:10 -0.365441  0.616951\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141287406",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11137#issuecomment-141287406",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11137",
    "id": 141287406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTI4NzQwNg==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T23:48:04Z",
    "updated_at": "2015-09-17T23:48:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, I need to retain the values of the binning set, because they have mathematical meaning that I need to apply later on in the process. Of course I could store them somewhere in a dictionary, but that sounds like becoming more complicated than it needs to be.\nThe other advantage of having these 4 numbers as a tuple is that I am able to do `groupby` operations over it. Interestingly, pandas head does not have a problem doing that, while the equality check fails.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141287801",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11137#issuecomment-141287801",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11137",
    "id": 141287801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTI4NzgwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T23:51:07Z",
    "updated_at": "2015-09-17T23:51:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, I guess I don't understand what your issue is. In order to see if their is an actual problem, I would need a self contained reproducible example. \n\nclosing, but you can post here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141287894",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11137#issuecomment-141287894",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11137",
    "id": 141287894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTI4Nzg5NA==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T23:51:59Z",
    "updated_at": "2015-09-17T23:51:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "The above mentioned regression is not an issue per se?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141346462",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11137#issuecomment-141346462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11137",
    "id": 141346462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTM0NjQ2Mg==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-18T05:09:01Z",
    "updated_at": "2015-09-18T05:09:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "For reference, this was the commit that caused the change: https://github.com/pydata/pandas/commit/4fe7c68728da2174f7ccd290a43e358f16a1a6f9\n"
  }
]
