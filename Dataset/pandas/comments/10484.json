[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/117936025",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10484#issuecomment-117936025",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10484",
    "id": 117936025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzkzNjAyNQ==",
    "user": {
      "login": "fabianrost84",
      "id": 7300030,
      "node_id": "MDQ6VXNlcjczMDAwMzA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7300030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fabianrost84",
      "html_url": "https://github.com/fabianrost84",
      "followers_url": "https://api.github.com/users/fabianrost84/followers",
      "following_url": "https://api.github.com/users/fabianrost84/following{/other_user}",
      "gists_url": "https://api.github.com/users/fabianrost84/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fabianrost84/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fabianrost84/subscriptions",
      "organizations_url": "https://api.github.com/users/fabianrost84/orgs",
      "repos_url": "https://api.github.com/users/fabianrost84/repos",
      "events_url": "https://api.github.com/users/fabianrost84/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fabianrost84/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-02T07:00:31Z",
    "updated_at": "2015-07-02T07:00:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe this example makes my point from #10468 a little clearer:\n\n``` python\nIn [18]: df1 = pd.DataFrame({'A' : [1,2,3]},index=pd.MultiIndex.from_tuples([(1,np.nan),(1,1),(2,1)],names=['first','second']))\n\nIn [19]: df1\nOut[19]: \n              A\nfirst second   \n1     NaN     1\n      1       2\n2     1       3\n\n[3 rows x 1 columns]\n\nIn [20]: df1.groupby(level=['first','second']).groups\nOut[20]: {(1, 1): [(1, nan), (1, 1.0)], (2, 1): [(2, 1.0)]}\n\nIn [21]: df2 = df1.reset_index()\n\nIn [22]: df2\nOut[22]: \n   first  second  A\n0      1     NaN  1\n1      1       1  2\n2      2       1  3\n\n[3 rows x 3 columns]\n\nIn [23]: df2.groupby(['first','second']).groups\nOut[23]: {(1, nan): [0], (1, 1.0): [1], (2, 1.0): [2]}\n```\n\nOut[20] skips (1, nan), but Out[23] doesn't. As the documentation says NaN in the grouping key will be skipped [here](http://pandas.pydata.org/pandas-docs/stable/groupby.html#na-and-nat-group-handling), I would rather argue that Out[23] should skip (1, nan). Out[43] from jreback above would actually be correct.\n"
  }
]
