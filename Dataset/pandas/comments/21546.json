[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/398626753",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21546#issuecomment-398626753",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21546",
    "id": 398626753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODYyNjc1Mw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-20T05:15:30Z",
    "updated_at": "2018-06-20T05:15:30Z",
    "author_association": "MEMBER",
    "body": "xrefing my https://github.com/pandas-dev/pandas/issues/21469#issuecomment-398626548 and probably the root cause for #21469"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/398753216",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21546#issuecomment-398753216",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21546",
    "id": 398753216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODc1MzIxNg==",
    "user": {
      "login": "Liam3851",
      "id": 546210,
      "node_id": "MDQ6VXNlcjU0NjIxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/546210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Liam3851",
      "html_url": "https://github.com/Liam3851",
      "followers_url": "https://api.github.com/users/Liam3851/followers",
      "following_url": "https://api.github.com/users/Liam3851/following{/other_user}",
      "gists_url": "https://api.github.com/users/Liam3851/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Liam3851/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Liam3851/subscriptions",
      "organizations_url": "https://api.github.com/users/Liam3851/orgs",
      "repos_url": "https://api.github.com/users/Liam3851/repos",
      "events_url": "https://api.github.com/users/Liam3851/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Liam3851/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-20T13:44:04Z",
    "updated_at": "2018-06-20T13:44:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mroeschke Do you have an idea why there's the weirdly shaped result from DataFrame.where with a tz column? I think you're more familiar with the internals here than I am."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/398918951",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21546#issuecomment-398918951",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21546",
    "id": 398918951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODkxODk1MQ==",
    "user": {
      "login": "Liam3851",
      "id": 546210,
      "node_id": "MDQ6VXNlcjU0NjIxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/546210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Liam3851",
      "html_url": "https://github.com/Liam3851",
      "followers_url": "https://api.github.com/users/Liam3851/followers",
      "following_url": "https://api.github.com/users/Liam3851/following{/other_user}",
      "gists_url": "https://api.github.com/users/Liam3851/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Liam3851/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Liam3851/subscriptions",
      "organizations_url": "https://api.github.com/users/Liam3851/orgs",
      "repos_url": "https://api.github.com/users/Liam3851/repos",
      "events_url": "https://api.github.com/users/Liam3851/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Liam3851/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-20T22:33:51Z",
    "updated_at": "2018-06-20T22:34:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mroeschke I think I figured out at least the weirdly-shaped result issue here (not sure about the 1-D case). As indicated at [your comment on #21469](https://github.com/pandas-dev/pandas/issues/21469#issuecomment-398626548) the issue is in `Block.where`. The current implementation implicitly assumes that `Block.values` for a DataFrame is a 2-D ndarray. However, if the `Block` is DatetimeTZ-type, `Block.values` gives back a (1-D) DatetimeIndex with the correct TZ. This in turn is apparently confusing the `where` function into thinking broadcasting is required."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/398986874",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21546#issuecomment-398986874",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21546",
    "id": 398986874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODk4Njg3NA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T06:06:46Z",
    "updated_at": "2018-06-21T06:06:46Z",
    "author_association": "MEMBER",
    "body": "Thanks for investigating @Liam3851. \r\n\r\nIIRC DatetimeTZBlocks only contain data (`.values`) in 1D because tz may not be conserved across both axis in a 2D sense e.g. one column has UTC data and other has US/Eastern data. This _may_ be remedied once `ExtentionArrays` for DatetimeTZ data are implemented, Otherwise, this may need to be patched by defining or patching a `where` method for `DatetimeTZBlock`s "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400311192",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21546#issuecomment-400311192",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21546",
    "id": 400311192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDMxMTE5Mg==",
    "user": {
      "login": "Liam3851",
      "id": 546210,
      "node_id": "MDQ6VXNlcjU0NjIxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/546210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Liam3851",
      "html_url": "https://github.com/Liam3851",
      "followers_url": "https://api.github.com/users/Liam3851/followers",
      "following_url": "https://api.github.com/users/Liam3851/following{/other_user}",
      "gists_url": "https://api.github.com/users/Liam3851/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Liam3851/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Liam3851/subscriptions",
      "organizations_url": "https://api.github.com/users/Liam3851/orgs",
      "repos_url": "https://api.github.com/users/Liam3851/repos",
      "events_url": "https://api.github.com/users/Liam3851/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Liam3851/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-26T13:36:36Z",
    "updated_at": "2018-06-26T20:24:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mroeschke Been digging into this a bit further. Do you know, what is the contract regarding the dimension of `Block.values`, `Block.get_values`, and `Block.internal_values`? It's not entirely clear from the pandas.core.internals source.\r\n\r\nIn particular, `NonConsolidatableMixin.get_values` has the comment:\r\n\r\n''' need to to_dense myself (**and always return a ndim sized object**) '''\r\n\r\nDatetimeTZBlock overrides `NonConsolidatableMixin.get_values`, and has 1-dimensional `get_values`/`values` (a DatetimeIndex), but for blocks inside a DataFrame, `self.ndim==2`. That seems to violate the comment above, but maybe that's more a description than a required contract for subclasses?\r\n\r\nSimilarly in `DatetimeTZBlock._try_coerce_args`, right now we have a call:\r\n```\r\nvalues = _block_shape(values.asi8, ndim=self.ndim)\r\n```\r\nwhich ensures that values is self.ndim (2) dimensions. However, if `other` is also a DatetimeIndex we just get the 1-dimensional values of `other`. Seems clear these should be consistent, just not sure whether in general `_try_coerce_args` should always return something \r\n\r\n1. the same dimension/type as `self.values` (internal), or\r\n1. the same dimension as `self.ndim`\r\n\r\nThoughts?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400414374",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21546#issuecomment-400414374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21546",
    "id": 400414374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDQxNDM3NA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-26T18:21:27Z",
    "updated_at": "2018-06-26T18:21:27Z",
    "author_association": "MEMBER",
    "body": "@jreback architected the `DatetimeTZBlock` (and feel free to correct me), but from what I understand, `DatetimeTZBlock` holds its `.values` as a 1D array (i.e. DatetimeIndex) while other block types can hold its values in 1 or 2D arrays (numpy arrays mostly). \r\n\r\nFrom what I understand at a high level for DataFrames, it's composed from a group of Blocks that groups the values of the DataFrame by dtype along the columns. In most cases these Blocks can store 2D values, so overall the collection (concatination) of 2D values from the Blocks comprise the overall 2D dimension of the DataFrame.\r\n\r\nThe reason why `DatetimeTZBlock` doesn't hold 2D arrays is that the timezone is assumed to be consistent along the columns and not necessarily the rows; therefore, you need 1 DatetimeTZBlock per DataFrame column with a Datetimetz dtype. Other block types AFAIK don't have similar limitations so 1 Block can hold values for multiple DataFrame columns.\r\n\r\nBeyond that, I am not familiar with how the internals makes sure the dimensions line up or routines that would coerce `DatetimeTZBlock.values` from 1D to 2D (and if there were it would probably strip the tz information)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400486310",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21546#issuecomment-400486310",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21546",
    "id": 400486310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDQ4NjMxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-26T22:42:18Z",
    "updated_at": "2018-06-26T22:43:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mroeschke expl is correct. yeah its currently a bummer that we aren't super consistent internally how we handle naive datetimes (2D) vs tz-aware (1D), but that's the direction we have been moving. So various compat things exist to handle this. \r\n\r\nWe basically have too many accessors that do slightly different things, but the cleanup is non-trivial / hard. For this issue, prob just need to see where its getting coerced to 2D (or vice-versa) and maybe override the method in ``DatetimeTZBlock`` or put comething that can generically handle.\r\n\r\nhere's a patch which works on the above example. doesn't seem to break any series tests, but have a go. (breaks something in dataframe tests :<)\r\n\r\n```\r\n(pandas) bash-3.2$ git diff\r\ndiff --git a/pandas/core/internals.py b/pandas/core/internals.py\r\nindex fe508dc1b..f2b732b57 100644\r\n--- a/pandas/core/internals.py\r\n+++ b/pandas/core/internals.py\r\n@@ -1495,7 +1495,7 @@ class Block(PandasObject):\r\n                 return values\r\n \r\n             values, values_mask, other, other_mask = self._try_coerce_args(\r\n-                values, other)\r\n+                values, orig_other)\r\n \r\n             try:\r\n                 return self._try_coerce_result(expressions.where(\r\n```"
  }
]
