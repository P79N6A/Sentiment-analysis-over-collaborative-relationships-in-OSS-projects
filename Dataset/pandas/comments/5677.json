[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30432682",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-30432682",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 30432682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDMyNjgy",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T15:38:04Z",
    "updated_at": "2013-12-12T15:38:04Z",
    "author_association": "NONE",
    "body": "I take it the idea is to provide sugar for grouping on a combination of a column and and a multiindex level.\nIn that case, the example you provided works nicely, but:\n- The group key spec is now smeared over multiple args (instead of just `by`). I think that's wrong.\n- That approach doesn't handle a slightly more general case, grouping by a combination\n  of multiple cols and levels in a certain order. That's a bad sign when it comes to API design.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30432968",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-30432968",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 30432968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDMyOTY4",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T15:40:51Z",
    "updated_at": "2013-12-12T15:41:09Z",
    "author_association": "NONE",
    "body": "How about resolving level names in the `by` handling code, and if there's a collision between\ncolumn names and multiindex names defaulting to the column (preserves existing code), but issuing\na warning. @jreback, does that sound right to you?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30434930",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-30434930",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 30434930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDM0OTMw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T16:01:02Z",
    "updated_at": "2013-12-12T16:01:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think you even need these arguments, just an enhancement to figure out what the user wants. e.g\n\nI see a label in the grouper, then follow a simple algo:\n- index names (e.g. level)\n- column name\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30435315",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-30435315",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 30435315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDM1MzE1",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T16:04:45Z",
    "updated_at": "2013-12-12T16:05:17Z",
    "author_association": "NONE",
    "body": "That's just what I propose, except that variation breaks backwards-compat. \nSince `by` doesn't consider the index levels currently,  column names should have precedence IMO\nto keep old code working. \nThe warning should be there to alert the user that pandas is resolving an ambiguity by being opinionated. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30436081",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-30436081",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 30436081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDM2MDgx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T16:13:29Z",
    "updated_at": "2013-12-12T16:13:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "that's reasonable\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30438016",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-30438016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 30438016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDM4MDE2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T16:33:31Z",
    "updated_at": "2013-12-12T16:33:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger so maybe let's change the name of this issue to something like 'clarify the grouper'?\n\nso it deals nicely with index/columns names (and can raise/warn if their are duplicates, taking the columns in preference to the index names). If there STILL is ambiguity let's discuss (e.g.if you specify a label and it could possibly be misinterpreted somehow).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30440017",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-30440017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 30440017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQwMDE3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T16:54:31Z",
    "updated_at": "2013-12-12T16:57:32Z",
    "author_association": "NONE",
    "body": "Just as an example:\n\n``` python\nIn [4]: df=mkdf(4,2,r_idx_nlevels=2)\n   ...: df.columns = [\"foo\",\"bar\"]\n   ...: df.index.names = [\"baz\",\"foo\"]\n   ...: df\nOut[4]: \n                  foo   bar\nbaz     foo                \nR_l0_g0 R_l1_g0  R0C0  R0C1\nR_l0_g1 R_l1_g1  R1C0  R1C1\nR_l0_g2 R_l1_g2  R2C0  R2C1\nR_l0_g3 R_l1_g3  R3C0  R3C1\n\n[4 rows x 2 columns]\n\nIn [5]: df.groupby('foo') # not ambiguous now, but would be\nOut[5]: <pandas.core.groupby.DataFrameGroupBy object at 0x39e9d50>\n```\n\nSince groupy accepts an `axis` argument, I guess we need to consider the case for hirerchical columns as well.\nNever used it myself nor can I reason out how to use it at the repl now that I tried, I expected \n\n``` python\ndf=pd.DataFrame([[1,1,3],['a','b','c']],index=['a','b'])\n    ...: df.groupby(['a'],1).groups\nKeyError: u'no item named a'\n```\n\nto be equivelent to:\n\n``` python\ndf=pd.DataFrame([[1,1,3],['a','b','c']],index=['a','b'])\n    ...: df.T.groupby(['a']).groups # notice transpose\n{1: [0, 1], 3: [2]}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30440399",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-30440399",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 30440399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQwMzk5",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T16:58:24Z",
    "updated_at": "2013-12-12T16:58:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "That all sounds reasonable. I can take a shot at implementing this in a few weeks. I'll probably have questions :)\n\nThe other bit is that `by` accepts (a list of) mapping functions, `dicts`, `Series`.  I don't think I've used either of these before.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30440649",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-30440649",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 30440649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQwNjQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T17:01:04Z",
    "updated_at": "2013-12-12T17:01:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger I dont' think it accept a _list_ of mapping function / series, only a single mapper or series (otherwise should be an error)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30441133",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-30441133",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 30441133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQxMTMz",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T17:06:49Z",
    "updated_at": "2013-12-12T17:07:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "From the docstring.\n\n```\nby : mapping function / list of functions, dict, Series, or tuple /\n    list of column names.\n    Called on each element of the object index to determine the groups.\n    If a dict or Series is passed, the Series or dict VALUES will be\n    used to determine the groups\n```\n\nI'll clarify that while I'm working on it.  I just have to figure out what that actually does first.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30441551",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-30441551",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 30441551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQxNTUx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T17:11:14Z",
    "updated_at": "2013-12-12T17:11:14Z",
    "author_association": "NONE",
    "body": "The docstring also says\n\n```\n>>> df.groupby.__doc__\n...\nGroup **series** using mapper (dict or key function, apply given function\\n       \n```\n\nWhich is wrong.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35168126",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-35168126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 35168126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTY4MTI2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-15T21:18:25Z",
    "updated_at": "2014-02-15T21:18:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger I think this is worthwhile.....and prob not too complex....\n\n?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250622557",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-250622557",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 250622557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDYyMjU1Nw==",
    "user": {
      "login": "jonmmease",
      "id": 15064365,
      "node_id": "MDQ6VXNlcjE1MDY0MzY1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15064365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonmmease",
      "html_url": "https://github.com/jonmmease",
      "followers_url": "https://api.github.com/users/jonmmease/followers",
      "following_url": "https://api.github.com/users/jonmmease/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonmmease/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonmmease/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonmmease/subscriptions",
      "organizations_url": "https://api.github.com/users/jonmmease/orgs",
      "repos_url": "https://api.github.com/users/jonmmease/repos",
      "events_url": "https://api.github.com/users/jonmmease/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonmmease/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T23:40:32Z",
    "updated_at": "2016-09-29T23:40:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @TomAugspurger I'm interested in implementing this.  Has anything changed since this discussion that I should be aware of?  I'll likely use Tom's old PR (#7033) as a starting point.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250623110",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-250623110",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 250623110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDYyMzExMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T23:44:26Z",
    "updated_at": "2016-09-29T23:44:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://pandas.pydata.org/pandas-docs/stable/groupby.html#grouping-with-a-grouper-specification implements this\n\nthough you could make sugar for non colliding names which could be a name of an index / multi index\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250630211",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-250630211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 250630211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDYzMDIxMQ==",
    "user": {
      "login": "jonmmease",
      "id": 15064365,
      "node_id": "MDQ6VXNlcjE1MDY0MzY1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15064365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonmmease",
      "html_url": "https://github.com/jonmmease",
      "followers_url": "https://api.github.com/users/jonmmease/followers",
      "following_url": "https://api.github.com/users/jonmmease/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonmmease/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonmmease/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonmmease/subscriptions",
      "organizations_url": "https://api.github.com/users/jonmmease/orgs",
      "repos_url": "https://api.github.com/users/jonmmease/repos",
      "events_url": "https://api.github.com/users/jonmmease/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonmmease/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T00:36:54Z",
    "updated_at": "2016-09-30T00:36:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, thanks.  So am I following that the way to accomplish the original example from this issue, without resetting the index, is the following?\n\n``` python\nIn [75]: df.groupby(['B', pd.Grouper(level='inner')]).mean()\nOut [75]: \n             A\nB   inner     \none 1      0.0\n    2      2.5\n    3      5.0\ntwo 1      3.0\n    3      2.0\n```\n\nShould this approach also work when the frame has a singe named index? e.g.\n\n``` python\nIn [76]: df2 = df.reset_index('outer')\n\nIn [77]: df2\nOut [77]: \n      outer  A    B\ninner              \n1         a  0  one\n2         a  1  one\n3         a  2  two\n1         b  3  two\n2         b  4  one\n3         b  5  one\n\nIn [79]: df2.groupby(['B', pd.Grouper(level='inner')]).mean()              \n...\nAttributeError: 'Int64Index' object has no attribute 'labels'\n```\n\nIn this case I'm getting an Attribute Error (I'm on pandas 0.18.1 and happy to file a bug if this is one).\n\nI would be interested in adding sugar in order to support\n\n``` python\ndf.groupby(['B', 'inner']).mean()\n```\n\nand\n\n``` python\ndf2.groupby(['B', 'inner']).mean()\n```\n\nwhere column names take precedence as discussed above. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250851090",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-250851090",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 250851090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDg1MTA5MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T21:00:32Z",
    "updated_at": "2016-09-30T21:00:32Z",
    "author_association": "MEMBER",
    "body": "> Should this approach also work when the frame has a singe named index?\n\nYes, I think it should work. For example, it works when only specifying the index in this way:\n\n```\nIn [40]: df2.groupby(level='inner').mean()\nOut[40]: \n         A\ninner     \n1      1.5\n2      2.5\n3      3.5\n\nIn [42]: df2.groupby(pd.Grouper(level='inner')).mean()\nOut[42]: \n         A\ninner     \n1      1.5\n2      2.5\n3      3.5\n\n```\n\nSo using it in a list to group by multiple columns/indexes should also work. Do you want to open a separate bug report for this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/250854776",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5677#issuecomment-250854776",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5677",
    "id": 250854776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDg1NDc3Ng==",
    "user": {
      "login": "jonmmease",
      "id": 15064365,
      "node_id": "MDQ6VXNlcjE1MDY0MzY1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15064365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonmmease",
      "html_url": "https://github.com/jonmmease",
      "followers_url": "https://api.github.com/users/jonmmease/followers",
      "following_url": "https://api.github.com/users/jonmmease/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonmmease/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonmmease/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonmmease/subscriptions",
      "organizations_url": "https://api.github.com/users/jonmmease/orgs",
      "repos_url": "https://api.github.com/users/jonmmease/repos",
      "events_url": "https://api.github.com/users/jonmmease/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonmmease/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T21:18:51Z",
    "updated_at": "2016-09-30T21:18:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I'll open a separate bug report for this issue in a few hours.\n"
  }
]
