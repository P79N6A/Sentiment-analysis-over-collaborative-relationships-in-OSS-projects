[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404785068",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21885#issuecomment-404785068",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21885",
    "id": 404785068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc4NTA2OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T09:50:32Z",
    "updated_at": "2018-07-13T09:50:38Z",
    "author_association": "MEMBER",
    "body": "I suspect the discrepancies are rooted in the Excel engine.  Reading this as a CSV does not have that rounding problem as you describe."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440204557",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21885#issuecomment-440204557",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21885",
    "id": 440204557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDIwNDU1Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-20T09:31:19Z",
    "updated_at": "2018-11-20T09:32:47Z",
    "author_association": "MEMBER",
    "body": "Actually, that assessment was incorrect.  The issue persists even with CSV.  The crux of the problem actually lies with our internal converter to float (or numeric in general):\r\n\r\n~~~python\r\nimport pandas.util.testing as tm\r\nimport pandas._libs.lib as lib\r\nimport numpy as np\r\n\r\ninp = np.array([\"0.014\", \"0.984\"], dtype=object)\r\nexp = np.array([0.014, 0.984])\r\n\r\ntm.assert_numpy_array_equal(lib.maybe_convert_numeric(inp, set(), False), exp)\r\n...\r\nAssertionError: numpy array are different\r\n\r\nnumpy array values are different (100.0 %)\r\n[left]:  [0.013999999999999999, 0.9840000000000001]\r\n[right]: [0.014, 0.984]\r\n~~~"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/459933170",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21885#issuecomment-459933170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21885",
    "id": 459933170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTkzMzE3MA==",
    "user": {
      "login": "david-liu-brattle-1",
      "id": 36486871,
      "node_id": "MDQ6VXNlcjM2NDg2ODcx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/36486871?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/david-liu-brattle-1",
      "html_url": "https://github.com/david-liu-brattle-1",
      "followers_url": "https://api.github.com/users/david-liu-brattle-1/followers",
      "following_url": "https://api.github.com/users/david-liu-brattle-1/following{/other_user}",
      "gists_url": "https://api.github.com/users/david-liu-brattle-1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/david-liu-brattle-1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/david-liu-brattle-1/subscriptions",
      "organizations_url": "https://api.github.com/users/david-liu-brattle-1/orgs",
      "repos_url": "https://api.github.com/users/david-liu-brattle-1/repos",
      "events_url": "https://api.github.com/users/david-liu-brattle-1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/david-liu-brattle-1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-02T04:04:08Z",
    "updated_at": "2019-02-02T04:07:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung \r\nThe string parsing functions seem to call a custom built `xstrtod` function\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/bb43726e1f52a0ddee45fcf485690719f262870d/pandas/_libs/src/parser/tokenizer.c#L1532-L1534\r\n\r\nwhich does a fine job of evaluating the string but the issue here is it's not evaluating it exactly as python (or numpy) is evaluating it.  `float('0.014')==0.014==np.fromstring(b'0.014',sep=' ')[0]` but the `xstrtod('0.014') != 0.014`.  For consistency's sake I think it makes sense that a number read in by pandas as string should be evaluated and written back out as the same number.  (currently 0.014 is written back out as 0.0139999999 after being evaluated).  It's a fluke that this issue isn't being picked up by any of the tests.  For example, if \"0.014\" would make the following fail if it in the array:\r\nhttps://github.com/pandas-dev/pandas/blob/bb43726e1f52a0ddee45fcf485690719f262870d/pandas/tests/dtypes/test_inference.py#L398-L405\r\n\r\nThis seems like a fairly straightforward fix of replacing `xstrtod` with the Python float evaluator `PyOS_string_to_double` from `Python.h`, unless there is a good reason to stick with the original `xstrtod`? \r\n\r\nAs a side note, the almost identical `xstrtod` is defined again in parser_helper.h, which seems like an oversight.\r\nhttps://github.com/pandas-dev/pandas/blob/bb43726e1f52a0ddee45fcf485690719f262870d/pandas/_libs/src/parse_helper.h#L148-L151"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/459942710",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21885#issuecomment-459942710",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21885",
    "id": 459942710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTk0MjcxMA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-02T07:13:45Z",
    "updated_at": "2019-02-02T07:13:45Z",
    "author_association": "MEMBER",
    "body": "> As a side note, the almost identical xstrtod is defined again in parser_helper.h, which seems like an oversight.\r\n\r\nWeird...I think it would be good to see if we could unify the two.\r\n\r\n> This seems like a fairly straightforward fix of replacing xstrtod with the Python float evaluator PyOS_string_to_double from Python.h, unless there is a good reason to stick with the original xstrtod\r\n\r\nI'm not sure what the reason was implementing our own.  However, I would encourage you to investigate the consequences of doing so, both from an accuracy and performance perspective."
  }
]
