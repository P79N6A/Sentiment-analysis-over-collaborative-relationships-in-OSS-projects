[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/388170901",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21005#issuecomment-388170901",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21005",
    "id": 388170901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODE3MDkwMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T20:11:00Z",
    "updated_at": "2018-05-10T20:11:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do you have a a self-contained example? Perhaps the data could be generated randomly."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/388389322",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21005#issuecomment-388389322",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21005",
    "id": 388389322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODM4OTMyMg==",
    "user": {
      "login": "jacksonloper",
      "id": 2056977,
      "node_id": "MDQ6VXNlcjIwNTY5Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2056977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacksonloper",
      "html_url": "https://github.com/jacksonloper",
      "followers_url": "https://api.github.com/users/jacksonloper/followers",
      "following_url": "https://api.github.com/users/jacksonloper/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacksonloper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacksonloper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacksonloper/subscriptions",
      "organizations_url": "https://api.github.com/users/jacksonloper/orgs",
      "repos_url": "https://api.github.com/users/jacksonloper/repos",
      "events_url": "https://api.github.com/users/jacksonloper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacksonloper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-11T14:58:41Z",
    "updated_at": "2018-05-11T15:00:52Z",
    "author_association": "NONE",
    "body": "Here is a totally self-contained example:\r\n\r\n```\r\nimport numpy as np\r\nimport numpy.random as npr\r\nimport pandas as pd\r\nimport time\r\n\r\nimport numpy as np\r\nimport numpy.random as npr\r\nimport pandas as pd\r\n\r\nN1=20000\r\nN2=3000\r\n\r\nN1_labels=npr.randint(0,10,size=N1-4).astype('S10')\r\nN1_labels=np.r_[N1_labels,['Sst', 'Pvalb', 'Npy', 'Calm2']]\r\nN2_labels=npr.randint(0,10,size=N2-1).astype('S10')\r\nN2_labels=np.r_[N2_labels,['Tulip']]\r\n\r\nmm=npr.randn(N1,N2)\r\ndf=pd.DataFrame(data=mm,index=N1_labels,columns=N2_labels).T\r\n\r\nt=time.time()\r\ndf.loc['Tulip',['Sst', 'Pvalb', 'Npy', 'Calm2']] # <-- fast\r\nprint(\"fast:\",time.time()-t)\r\n\r\nfoo=np.array(['chhh' for i in range(len(df))])\r\ndf2=df.assign(newcolumn=foo)\r\n\r\nfor i in range(3):\r\n    t=time.time()\r\n    df2.loc['Tulip',['Sst', 'Pvalb', 'Npy', 'Calm2']] # <-- crazy slow\r\n    print(\"Slow:\",time.time()-t)\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/388549324",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21005#issuecomment-388549324",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21005",
    "id": 388549324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODU0OTMyNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-12T11:42:03Z",
    "updated_at": "2018-05-12T11:42:03Z",
    "author_association": "MEMBER",
    "body": "Thanks for the runnable example!\r\n\r\nThe reason for this slowdown is because you now have mixed dtype columns (by adding the string column), pandas will convert the values to a common dtype (in internals.py `_interleave` method), which results in converting the float values to object, which in itself already takes more than a second:\r\n\r\n```\r\nIn [3]: %time df.values.astype(object)\r\nCPU times: user 756 ms, sys: 508 ms, total: 1.26 s\r\nWall time: 1.26 s\r\n```\r\n\r\nNow, the above is the explanation of why it currently is so slow / memory inefficient. \r\nBut of course, given that you only select a few columns and a single row (and not even the string column), all this work to convert the full dataframe to a single array is not needed, so there is certainly room to improve this, if someone wants to dive into this part of the code (although that might be substantial work)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391164806",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21005#issuecomment-391164806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21005",
    "id": 391164806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTE2NDgwNg==",
    "user": {
      "login": "jacksonloper",
      "id": 2056977,
      "node_id": "MDQ6VXNlcjIwNTY5Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2056977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacksonloper",
      "html_url": "https://github.com/jacksonloper",
      "followers_url": "https://api.github.com/users/jacksonloper/followers",
      "following_url": "https://api.github.com/users/jacksonloper/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacksonloper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacksonloper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacksonloper/subscriptions",
      "organizations_url": "https://api.github.com/users/jacksonloper/orgs",
      "repos_url": "https://api.github.com/users/jacksonloper/repos",
      "events_url": "https://api.github.com/users/jacksonloper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacksonloper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-22T22:47:13Z",
    "updated_at": "2018-05-22T22:48:51Z",
    "author_association": "NONE",
    "body": "Large dataframes with mixed dtypes is not a sufficient condition to guarantee this kind of slowdown.  Here is an almost identical example where there are mixed dtypes, but it is fast.\r\n\r\nNon-unique indices are part of the problem in some important way.  If I use unique columns and a unique index, it is pretty fast again:\r\n\r\n```\r\nimport numpy as np\r\nimport numpy.random as npr\r\nimport pandas as pd\r\nimport time\r\n\r\nimport numpy as np\r\nimport numpy.random as npr\r\nimport pandas as pd\r\n\r\nN1=20000\r\nN2=3000\r\n\r\nN1_labels=np.r_[0:N1-4,['Sst', 'Pvalb', 'Npy', 'Calm2']]\r\nN2_labels=npr.randint(0,10000,size=N2-1).astype('S10')\r\nN2_labels=np.r_[0:N2-1,['Tulip']]\r\n\r\nmm=npr.randn(N2,N1)#.astype(object)\r\ndf=pd.DataFrame(data=mm,columns=N1_labels,index=N2_labels)\r\n\r\nt=time.time()\r\ndf.loc['Tulip',['Sst', 'Pvalb', 'Npy', 'Calm2']] # <-- fast\r\nprint(\"fast:\",time.time()-t)\r\n\r\nfoo=np.array(['chhh' for i in range(len(df))])\r\ndf2=df.assign(newcolumn=foo)\r\n\r\nfor i in range(3):\r\n    t=time.time()\r\n    df2.loc['Tulip',['Sst', 'Pvalb', 'Npy', 'Calm2']] # <-- crazy slow\r\n    print(\"Fast:\",time.time()-t)\r\n```\r\n\r\nwhich returns\r\n\r\n```\r\nfast: 0.0027163028717041016\r\nFast: 0.011390924453735352\r\nFast: 0.009278535842895508\r\nFast: 0.00907135009765625\r\n```"
  }
]
