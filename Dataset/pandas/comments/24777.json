[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454220949",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24777#issuecomment-454220949",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24777",
    "id": 454220949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDIyMDk0OQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T00:42:42Z",
    "updated_at": "2019-01-15T00:42:42Z",
    "author_association": "MEMBER",
    "body": "Why would you not just select the columns you need before calling `.itertuples`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454222909",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24777#issuecomment-454222909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24777",
    "id": 454222909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDIyMjkwOQ==",
    "user": {
      "login": "stevesimmons",
      "id": 2830459,
      "node_id": "MDQ6VXNlcjI4MzA0NTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2830459?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevesimmons",
      "html_url": "https://github.com/stevesimmons",
      "followers_url": "https://api.github.com/users/stevesimmons/followers",
      "following_url": "https://api.github.com/users/stevesimmons/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevesimmons/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevesimmons/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevesimmons/subscriptions",
      "organizations_url": "https://api.github.com/users/stevesimmons/orgs",
      "repos_url": "https://api.github.com/users/stevesimmons/repos",
      "events_url": "https://api.github.com/users/stevesimmons/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevesimmons/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T00:53:17Z",
    "updated_at": "2019-01-15T00:53:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "- The syntax is much cleaner if you want a mix of columns and row MultiIndex levels\r\n- With the added bonus it is 20% faster than selecting columns before calling itertuples"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454223818",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24777#issuecomment-454223818",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24777",
    "id": 454223818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDIyMzgxOA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T00:57:59Z",
    "updated_at": "2019-01-15T00:57:59Z",
    "author_association": "MEMBER",
    "body": "> * The syntax is much cleaner if you want a mix of columns and row MultiIndex levels\r\n\r\nCan you provide an example of this? Not sure I follow the logic but something explicit could help.\r\n\r\nThe main thing to avoid here is introducing slightly different ways of accessing data. Consistency in the API for selecting rows and columns is already arguably rather convoluted and adding more ways to do that works against user experience\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454224848",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24777#issuecomment-454224848",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24777",
    "id": 454224848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDIyNDg0OA==",
    "user": {
      "login": "stevesimmons",
      "id": 2830459,
      "node_id": "MDQ6VXNlcjI4MzA0NTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2830459?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevesimmons",
      "html_url": "https://github.com/stevesimmons",
      "followers_url": "https://api.github.com/users/stevesimmons/followers",
      "following_url": "https://api.github.com/users/stevesimmons/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevesimmons/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevesimmons/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevesimmons/subscriptions",
      "organizations_url": "https://api.github.com/users/stevesimmons/orgs",
      "repos_url": "https://api.github.com/users/stevesimmons/repos",
      "events_url": "https://api.github.com/users/stevesimmons/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevesimmons/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T01:02:52Z",
    "updated_at": "2019-01-15T01:02:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Suppose I had a DataFrame with row index on (id, date, status) and 65 cols of various values. Then I could say `df.itertuples(columns=['id', 'status', 'value25', 'value48'], index=False)` without having to do `reset_index` etc to get at the level.\r\n\r\nThis is similar to how `df.query()` uses both columns and index levels when evaluating its criteria."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454227825",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24777#issuecomment-454227825",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24777",
    "id": 454227825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDIyNzgyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T01:18:44Z",
    "updated_at": "2019-01-15T01:18:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "-1 on this\r\nwe already support projection via df[[]] which is performance and idiomatic "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454251151",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24777#issuecomment-454251151",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24777",
    "id": 454251151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI1MTE1MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T03:05:10Z",
    "updated_at": "2019-01-15T03:05:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed that selecting the columns before calling itertuples is preferable."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454253173",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24777#issuecomment-454253173",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24777",
    "id": 454253173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI1MzE3Mw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T03:17:45Z",
    "updated_at": "2019-01-15T03:17:45Z",
    "author_association": "MEMBER",
    "body": "@stevesimmons thanks for the suggestion! But I think we have enough votes against to not move forward with this. Closing as such"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454311676",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24777#issuecomment-454311676",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24777",
    "id": 454311676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDMxMTY3Ng==",
    "user": {
      "login": "stevesimmons",
      "id": 2830459,
      "node_id": "MDQ6VXNlcjI4MzA0NTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2830459?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevesimmons",
      "html_url": "https://github.com/stevesimmons",
      "followers_url": "https://api.github.com/users/stevesimmons/followers",
      "following_url": "https://api.github.com/users/stevesimmons/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevesimmons/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevesimmons/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevesimmons/subscriptions",
      "organizations_url": "https://api.github.com/users/stevesimmons/orgs",
      "repos_url": "https://api.github.com/users/stevesimmons/repos",
      "events_url": "https://api.github.com/users/stevesimmons/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevesimmons/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T08:47:46Z",
    "updated_at": "2019-01-15T08:47:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK. Might be worthwhile showing that in the docstring. \r\n\r\nWhat is the recommended way to do projection of a mix of multiindex columns and normal columns while avoiding copying as much as possible? Is there any succinct 'modern' way to do that? I often work with GB-size tables, hence the desire to avoid unnecessary copying."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454369556",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24777#issuecomment-454369556",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24777",
    "id": 454369556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDM2OTU1Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T12:03:41Z",
    "updated_at": "2019-01-15T12:03:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe MultiIndex is the problematic part. That won't have the array of\nvalues allocated yet. But once you've\nreset the subset of index levels to the columns, `__getitem__` won't copy.\n\nOn Tue, Jan 15, 2019 at 2:47 AM Steve Simmons <notifications@github.com>\nwrote:\n\n> OK. Might be worthwhile showing that in the docstring.\n>\n> What is the recommended way to do projection of a mix of multiindex\n> columns and normal columns while avoiding copying as much as possible? Is\n> there any succinct 'modern' way to do that? I often work with GB-size\n> tables, hence the desire to avoid unnecessary copying.\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/24777#issuecomment-454311676>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIuvoNwchhaduFdElFHmpFqB9NWTNks5vDZW3gaJpZM4aABRJ>\n> .\n>\n"
  }
]
