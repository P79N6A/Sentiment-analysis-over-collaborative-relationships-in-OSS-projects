[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225486377",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13432#issuecomment-225486377",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13432",
    "id": 225486377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ4NjM3Nw==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-13T04:18:49Z",
    "updated_at": "2016-06-13T04:18:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "The issue is with the sorting:\n\n``` python\nIn [8]: pd.Index([0, 1, 'A', 'B']).sort_values()\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-8-cd271f2d641b> in <module>()\n----> 1 pd.Index([0, 1, 'A', 'B']).sort_values()\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pandas/indexes/base.py in sort_values(self, return_indexer, ascending)\n   1565         Return sorted copy of Index\n   1566         \"\"\"\n-> 1567         _as = self.argsort()\n   1568         if not ascending:\n   1569             _as = _as[::-1]\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pandas/indexes/base.py in argsort(self, *args, **kwargs)\n   1639         if result is None:\n   1640             result = np.array(self)\n-> 1641         return result.argsort(*args, **kwargs)\n   1642 \n   1643     def __add__(self, other):\n\nTypeError: unorderable types: str() > int()\n\n```\n\nWe could try removing the sorting\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225555738",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13432#issuecomment-225555738",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13432",
    "id": 225555738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTU1NTczOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-13T11:29:42Z",
    "updated_at": "2016-06-13T11:29:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "These should be catching the `TypeError` as numpy doesn't handle this very well. You can slightly update the guarantee to sort if possible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225564099",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13432#issuecomment-225564099",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13432",
    "id": 225564099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTU2NDA5OQ==",
    "user": {
      "login": "pijucha",
      "id": 9507544,
      "node_id": "MDQ6VXNlcjk1MDc1NDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9507544?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pijucha",
      "html_url": "https://github.com/pijucha",
      "followers_url": "https://api.github.com/users/pijucha/followers",
      "following_url": "https://api.github.com/users/pijucha/following{/other_user}",
      "gists_url": "https://api.github.com/users/pijucha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pijucha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pijucha/subscriptions",
      "organizations_url": "https://api.github.com/users/pijucha/orgs",
      "repos_url": "https://api.github.com/users/pijucha/repos",
      "events_url": "https://api.github.com/users/pijucha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pijucha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-13T12:14:19Z",
    "updated_at": "2016-06-13T12:14:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I thought the both difference functions could be rewritten in the style of `union` (and sort only if it is possible), especially since there is a performance issue #12044.\n\nBTW, not directly related but still in a set function.\nThere's an internal `_get_consensus_name()`, the purpose of which is not clear to me, and something is not quite right:\n\n``` python\nidx1 = pd.Index([1, 2], name='A')\nidx2 = pd.Index([], name='B')\nidx1.union(idx2)\nOut[26]: Index([], dtype='object')\nidx2.union(idx1)\nOut[27]: Index([], dtype='object')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225565165",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13432#issuecomment-225565165",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13432",
    "id": 225565165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTU2NTE2NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-13T12:19:32Z",
    "updated_at": "2016-06-13T12:19:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "consensus is the must agree or 1 is None, otherwise it is None.\n\nchanging sorting is a big deal, I suspect lots of things will break; further it provides a nice guarantee on the result set. These are essentially set operations into an ordered list.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225570137",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13432#issuecomment-225570137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13432",
    "id": 225570137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTU3MDEzNw==",
    "user": {
      "login": "pijucha",
      "id": 9507544,
      "node_id": "MDQ6VXNlcjk1MDc1NDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9507544?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pijucha",
      "html_url": "https://github.com/pijucha",
      "followers_url": "https://api.github.com/users/pijucha/followers",
      "following_url": "https://api.github.com/users/pijucha/following{/other_user}",
      "gists_url": "https://api.github.com/users/pijucha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pijucha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pijucha/subscriptions",
      "organizations_url": "https://api.github.com/users/pijucha/orgs",
      "repos_url": "https://api.github.com/users/pijucha/repos",
      "events_url": "https://api.github.com/users/pijucha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pijucha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-13T12:43:41Z",
    "updated_at": "2016-06-13T12:43:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "> consensus\n\nYes, this is what is written in the docstring. But it should affect only the name, not the values of the output. Am I right?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225719125",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13432#issuecomment-225719125",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13432",
    "id": 225719125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTcxOTEyNQ==",
    "user": {
      "login": "pijucha",
      "id": 9507544,
      "node_id": "MDQ6VXNlcjk1MDc1NDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9507544?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pijucha",
      "html_url": "https://github.com/pijucha",
      "followers_url": "https://api.github.com/users/pijucha/followers",
      "following_url": "https://api.github.com/users/pijucha/following{/other_user}",
      "gists_url": "https://api.github.com/users/pijucha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pijucha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pijucha/subscriptions",
      "organizations_url": "https://api.github.com/users/pijucha/orgs",
      "repos_url": "https://api.github.com/users/pijucha/repos",
      "events_url": "https://api.github.com/users/pijucha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pijucha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-13T21:48:24Z",
    "updated_at": "2016-06-13T21:48:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I should have mentioned that `groupby` calls `Index.difference` internally and can trigger this exception:\n\n``` python\ndf = pd.DataFrame([[0, 1, 2]], columns = ['A', 'B', 0])\ndf.groupby('A').sum()\nTraceback (most recent call last):\n  File \"/usr/share/python3.5/site-packages/IPython/core/interactiveshell.py\", line 3066, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-225-c27b3941f9c8>\", line 1, in <module>\n    df.groupby('A').sum()\n  File \"/usr/local/lib64/python3.5/site-packages/pandas/core/groupby.py\", line 97, in f\n    self._set_selection_from_grouper()\n  File \"/usr/local/lib64/python3.5/site-packages/pandas/core/groupby.py\", line 469, in _set_selection_from_grouper\n    self._group_selection = ax.difference(Index(groupers)).tolist()\n  File \"/usr/local/lib64/python3.5/site-packages/pandas/indexes/base.py\", line 1861, in difference\n    theDiff = sorted(set(self) - set(other))\nTypeError: unorderable types: str() < int()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225872921",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13432#issuecomment-225872921",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13432",
    "id": 225872921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTg3MjkyMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-14T12:58:29Z",
    "updated_at": "2016-06-14T12:58:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pijucha yeah, guess should guard a bit better against this. Note that this is a safe sorter that I wrote a while back [here](https://github.com/pydata/pandas/blob/master/pandas/core/algorithms.py#L191). Could/should just strip this out to a separate function (and use it here).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/226665776",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13432#issuecomment-226665776",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13432",
    "id": 226665776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjY2NTc3Ng==",
    "user": {
      "login": "pijucha",
      "id": 9507544,
      "node_id": "MDQ6VXNlcjk1MDc1NDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9507544?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pijucha",
      "html_url": "https://github.com/pijucha",
      "followers_url": "https://api.github.com/users/pijucha/followers",
      "following_url": "https://api.github.com/users/pijucha/following{/other_user}",
      "gists_url": "https://api.github.com/users/pijucha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pijucha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pijucha/subscriptions",
      "organizations_url": "https://api.github.com/users/pijucha/orgs",
      "repos_url": "https://api.github.com/users/pijucha/repos",
      "events_url": "https://api.github.com/users/pijucha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pijucha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-17T02:31:05Z",
    "updated_at": "2016-07-19T03:47:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "### Bugs in `union` and `intersection` for non-unique indexes\n\n``` python\n# This is OK\npd.Index([1, 2, 2]).union(pd.Index([2, 3]))\nOut[24]: Int64Index([1, 2, 2, 3], dtype='int64')\n\n# but fails with a non-increasing rhs:\npd.Index([1, 2, 2]).union(pd.Index([3, 2]))\npandas.indexes.base.InvalidIndexError: Reindexing only valid with uniquely valued Index objects\n\n# lost 2\npd.Index([3, 2]).union(pd.Index([1, 2, 2]))\nOut[26]: Int64Index([1, 2, 3], dtype='int64')\n\n# too many 2's \npd.Index([1, 2, 2]).union(pd.Index([2, 2, 3]))\nOut[27]: Int64Index([1, 2, 2, 2, 3], dtype='int64')\n\n# too many 2's\npd.Index([1, 2, 2]).intersection(pd.Index([2, 3]))\nOut[30]: Int64Index([2, 2], dtype='int64')\n\n# too many 2's\npd.Index([1, 2, 2]).intersection(pd.Index([2, 2, 3]))\nOut[32]: Int64Index([2, 2, 2], dtype='int64')\n```\n\nI think these \"too many 2's\" are manifestations of a bug in the algorithms in `pd.algos.*_join_indexer_*`:\n\n``` python\npd.algos.outer_join_indexer_int64(np.array([1, 2, 2]), np.array([2, 2, 3]))\nOut[37]: \n(array([1, 2, 2, 2, 3]),\n array([ 0,  1,  1,  2, -1]),\n array([-1,  0,  1,  1,  2]))\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/226751882",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13432#issuecomment-226751882",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13432",
    "id": 226751882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjc1MTg4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-17T12:02:37Z",
    "updated_at": "2016-06-17T12:02:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pijucha yeah these duplicates are prob not tested much if at all.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/227889898",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13432#issuecomment-227889898",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13432",
    "id": 227889898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzg4OTg5OA==",
    "user": {
      "login": "pijucha",
      "id": 9507544,
      "node_id": "MDQ6VXNlcjk1MDc1NDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9507544?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pijucha",
      "html_url": "https://github.com/pijucha",
      "followers_url": "https://api.github.com/users/pijucha/followers",
      "following_url": "https://api.github.com/users/pijucha/following{/other_user}",
      "gists_url": "https://api.github.com/users/pijucha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pijucha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pijucha/subscriptions",
      "organizations_url": "https://api.github.com/users/pijucha/orgs",
      "repos_url": "https://api.github.com/users/pijucha/repos",
      "events_url": "https://api.github.com/users/pijucha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pijucha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-22T21:58:41Z",
    "updated_at": "2016-07-19T03:34:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have an almost ready PR that fixes a part of this issue, and also #12044 and #12814. But before I submit it I have some questions:\n1. Sortedness:\n   If sorting is impossible, should `Index.difference` and `symmetric_difference` return (a) an unsorted output (keeping an original order), (b) an unsorted output plus a warning or (c) raise an exception?\n   \n   @jreback's previous comments indicate either (a) or (c), so I'm not sure.\n2. Uniqueness:\n   Should `Index.union` and `intersection` behave like a set or multi-set operations? I.e. should an output  contain only unique values? \n   \n   If we want a multi-set behaviour then it might be significantly more work and I'd rather leave them unchanged (and buggy) for now.\n3. NaN's\n   The current behaviour is as follows (all results contain `nan`):\n\n``` python\nidx1 = pd.Index([1, np.nan, 2])\nidx2 = pd.Index([1, np.nan, 3])\n\nidx1.union(idx2)\nOut[262]: Float64Index([1.0, 2.0, 3.0, nan], dtype='float64')\n\nidx1.intersection(idx2)\nOut[263]: Float64Index([1.0, nan], dtype='float64')\n\nidx1.difference(idx2)\nOut[264]: Float64Index([nan, 2.0], dtype='float64')\n\nidx1.symmetric_difference(idx2)\nOut[265]: Float64Index([nan, 2.0, 3.0], dtype='float64')\n```\n\n   ~~I kept this unchanged~~. But if I had freedom then I'd probably remove `nan` either from the intersection  (consistent with `nan != nan`) or from the differences (`nan == nan`). \n\n---\n\n**Update**\n\nFor `difference` and `symmetric_difference`, the issues were solved as follows:\n1. Sort if possible, otherwise return an unsorted result.\n2. Always return unique Index.\n3. `nan`'s are treated as any other elements (consistent with `union` and `intersection`). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/233509551",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13432#issuecomment-233509551",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13432",
    "id": 233509551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzUwOTU1MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-19T01:53:30Z",
    "updated_at": "2016-07-19T01:53:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pijucha so comment / update when you have a chance now that we merged #13514 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/233520619",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13432#issuecomment-233520619",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13432",
    "id": 233520619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzUyMDYxOQ==",
    "user": {
      "login": "pijucha",
      "id": 9507544,
      "node_id": "MDQ6VXNlcjk1MDc1NDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9507544?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pijucha",
      "html_url": "https://github.com/pijucha",
      "followers_url": "https://api.github.com/users/pijucha/followers",
      "following_url": "https://api.github.com/users/pijucha/following{/other_user}",
      "gists_url": "https://api.github.com/users/pijucha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pijucha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pijucha/subscriptions",
      "organizations_url": "https://api.github.com/users/pijucha/orgs",
      "repos_url": "https://api.github.com/users/pijucha/repos",
      "events_url": "https://api.github.com/users/pijucha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pijucha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-19T03:26:54Z",
    "updated_at": "2016-07-19T03:26:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another example of inconsistent sorting.\n\nThis output of `union` is usually sorted:\n\n```\nIn [2]: pd.Index([0, 2, 1]).union([1])\nOut[2]: Int64Index([0, 1, 2], dtype='int64')\n```\n\nBut python 2 is unpredictable with mixed type indexes:\n\n``` python\nIn [3]: mixed = pd.Index([0, 'a', 1])\n\n# not sorted\nIn [4]: mixed.union([1, 2])          \nOut[4]: Index([0, u'a', 1, 2], dtype='object')\n\n# but this is sorted\nIn [5]: mixed.union([1])   \nOut[5]: Index([0, 1, u'a'], dtype='object')\n\nIn [6]: pd.show_versions()\n...\npython: 2.7.11.final.0\npandas: 0.18.1+218.g506520b\n```\n\n(Python 3 sorts neither of these.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/323042492",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13432#issuecomment-323042492",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13432",
    "id": 323042492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzA0MjQ5Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T11:22:39Z",
    "updated_at": "2017-08-17T11:22:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "There's an interaction between non-uniqueness and NaNs: The NaNs are dropped from the intersection if there's more than one:\r\n\r\n```python\r\n\r\nIn [19]: a = pd.Index([1, 2, float('nan')])\r\n\r\nIn [20]: a & pd.Index([2, np.nan])\r\nOut[20]: Float64Index([2.0, nan], dtype='float64')\r\n\r\nIn [21]: a & pd.Index([2, np.nan, np.nan])\r\nOut[21]: Float64Index([2.0], dtype='float64')\r\n```\r\n\r\nIt's any duplicates in the RHS, not just NaN:\r\n\r\n```python\r\nIn [25]: a = pd.Index([1, 2, 2, float('nan')])\r\n\r\nIn [26]: a & pd.Index([2, 2, np.nan])\r\nOut[26]: Float64Index([2.0, 2.0], dtype='float64')\r\n\r\nIn [27]: a & pd.Index([2, np.nan])\r\nOut[27]: Float64Index([2.0, 2.0, nan], dtype='float64')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364919028",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13432#issuecomment-364919028",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13432",
    "id": 364919028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDkxOTAyOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-12T13:14:31Z",
    "updated_at": "2018-02-12T13:14:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "### Proposal for duplicate set ops\r\n\r\n**intersection**\r\n\r\nThe output of `A & B` should be the *minimum* count of occurrences between `A` and `B`\r\n\r\n```python\r\n>>> pd.Index(['0', '0', '1', '1']).intersection(pd.Index(['0', '1', '1', '2']))\r\nIndex(['0', '1', '1'])\r\n```\r\n\r\n**Union**\r\n\r\nThe output of `A | B` should be the *maximum* count of occurrences between `A` and `B`\r\n\r\n```python\r\n>>> pd.Index(['0', '0', '1', '1']).intersection(pd.Index(['0', '1', '1', '2']))\r\nIndex(['0', '0', '1', '1', '2'])\r\n```\r\n\r\nThis matches the definitions on wikipedia on in http://multiset.readthedocs.io/en/stable/\r\n\r\n"
  }
]
