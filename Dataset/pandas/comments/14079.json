[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/242225939",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14079#issuecomment-242225939",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14079",
    "id": 242225939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjIyNTkzOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-24T22:17:26Z",
    "updated_at": "2016-08-24T22:17:26Z",
    "author_association": "MEMBER",
    "body": "I didn't look into detail to your example, but note that the two functions do return a different result, so do not seem to be equivalent.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/242234015",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14079#issuecomment-242234015",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14079",
    "id": 242234015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjIzNDAxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-24T22:56:36Z",
    "updated_at": "2016-08-24T22:56:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "duplicate of https://github.com/pydata/pandas/issues/11296\n\npull-requests are welcome!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/242234181",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14079#issuecomment-242234181",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14079",
    "id": 242234181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjIzNDE4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-24T22:57:37Z",
    "updated_at": "2016-08-24T22:57:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "The actual grouping / resample are not bounding this here at all, rather it is the fact that `.fillna` (and cousins) are not in cython, meaning this is basically a python loop.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/242750809",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14079#issuecomment-242750809",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14079",
    "id": 242750809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjc1MDgwOQ==",
    "user": {
      "login": "spillz",
      "id": 89573,
      "node_id": "MDQ6VXNlcjg5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/89573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spillz",
      "html_url": "https://github.com/spillz",
      "followers_url": "https://api.github.com/users/spillz/followers",
      "following_url": "https://api.github.com/users/spillz/following{/other_user}",
      "gists_url": "https://api.github.com/users/spillz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spillz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spillz/subscriptions",
      "organizations_url": "https://api.github.com/users/spillz/orgs",
      "repos_url": "https://api.github.com/users/spillz/repos",
      "events_url": "https://api.github.com/users/spillz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spillz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-26T14:28:26Z",
    "updated_at": "2016-08-26T14:28:26Z",
    "author_association": "NONE",
    "body": "Yeah, to be clear I wasn't proposing the other code as a replacement, just to show the performance issue (it gets worse on even bigger data sets). I didn't think it was worth the extra fiddling to get the column ordering and dtypes to be the same. The general application is converting transaction records into an unbalanced panel data set, which I can then run standard regression methods on.\n\nI had assumed that it was mostly the groupby that was causing the slowness. Is that wrong?\n\nBased on the assumption I thought that one solution for my use case would be if resample could support pad operations for non-unique indexes (or more complete support for resampling multiindexes, which is essentially what my DATE and ID pairs represent). Currently if I do:\n\n```\nimport pandas\nimport numpy as np\n\nif __name__ == '__main__':\n    import StringIO\n    import timeit\n    #Generate some transaction record data\n    data='''ID,DATE,STATUS\n    1,3/1/2005,A\n    1,4/30/2005,B\n    1,6/30/2010,C\n    1,8/20/2010,D\n    '''\n    df = pandas.read_csv(StringIO.StringIO(data))\n    df['DATE'] = pandas.to_datetime(df['DATE'])\n\n    #then repeat the rows of the table to get a more realistic sample size for measuring performance\n    df = df.loc[np.tile(df.index.values, 10000)]\n    df['ID'] = np.repeat(np.arange(10000), 4)\n\n    df = df.set_index('DATE')\n    df = df.resample('A').ffill()\n    print(df)\n\n```\n\nI get:\n\n```\nTraceback (most recent call last):\n  File \"C:\\Users\\#####\\Source\\PANDAS~2.PY\", line 56, in <module>\n    df = df.resample('A').ffill()\n  File \"c:\\anaconda2\\lib\\site-packages\\pandas\\tseries\\resample.py\", line 424, in pad\n    return self._upsample('pad', limit=limit)\n  File \"c:\\anaconda2\\lib\\site-packages\\pandas\\tseries\\resample.py\", line 704, in _upsample\n    limit=limit)\n  File \"c:\\anaconda2\\lib\\site-packages\\pandas\\core\\frame.py\", line 2744, in reindex\n    **kwargs)\n  File \"c:\\anaconda2\\lib\\site-packages\\pandas\\core\\generic.py\", line 2229, in reindex\n    fill_value, copy).__finalize__(self)\n  File \"c:\\anaconda2\\lib\\site-packages\\pandas\\core\\frame.py\", line 2690, in _reindex_axes\n    fill_value, limit, tolerance)\n  File \"c:\\anaconda2\\lib\\site-packages\\pandas\\core\\frame.py\", line 2698, in _reindex_index\n    tolerance=tolerance)\n  File \"c:\\anaconda2\\lib\\site-packages\\pandas\\indexes\\base.py\", line 2342, in reindex\n    raise ValueError(\"cannot reindex a non-unique index \"\nValueError: cannot reindex a non-unique index with a method or limit\n```\n\nWhereas it would be nice if it was able to handle non-unique indexes by treating the non-ascending dates as boundaries and return something like:\n\n```\n         ID STATUS  YEAR\n2005   1      B  2005\n2006   1      B  2006\n2007   1      B  2007\n2008   1      B  2008\n2009   1      B  2009\n2010   1      D  2010\n2005   2      B  2005\n2006   2      B  2006\n2007   2      B  2007\n2008   2      B  2008\n2009   2      B  2009\n2010   2      D  2010\n2005   3      B  2005\n2006   3      B  2006\n2007   3      B  2007\n2008   3      B  2008\n2009   3      B  2009\n2010   3      D  2010\n...\n```\n\nBut I guess that's moot if the problem is that reindex filling relies on looping.\n\nAs for pull requests, I found the code that does the reindexing / resampling to be pretty opaque so would need a few pointers to get started.\n"
  }
]
