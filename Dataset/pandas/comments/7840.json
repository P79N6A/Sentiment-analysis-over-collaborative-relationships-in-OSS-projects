[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50143461",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7840#issuecomment-50143461",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7840",
    "id": 50143461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQzNDYx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T12:41:19Z",
    "updated_at": "2014-07-25T12:41:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_dict.html?highlight=to_dict#pandas.DataFrame.to_dict\n\ncan you show what kind of mapping you would expect here?\n\ncare to submit a pull-request for this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50157198",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7840#issuecomment-50157198",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7840",
    "id": 50157198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTU3MTk4",
    "user": {
      "login": "femtotrader",
      "id": 5049737,
      "node_id": "MDQ6VXNlcjUwNDk3Mzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/femtotrader",
      "html_url": "https://github.com/femtotrader",
      "followers_url": "https://api.github.com/users/femtotrader/followers",
      "following_url": "https://api.github.com/users/femtotrader/following{/other_user}",
      "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions",
      "organizations_url": "https://api.github.com/users/femtotrader/orgs",
      "repos_url": "https://api.github.com/users/femtotrader/repos",
      "events_url": "https://api.github.com/users/femtotrader/events{/privacy}",
      "received_events_url": "https://api.github.com/users/femtotrader/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T14:32:08Z",
    "updated_at": "2014-07-25T14:32:08Z",
    "author_association": "NONE",
    "body": "I'm looking for orient='split'.\nNot sure that my code can be clean enough to make a PR.\nMoreover I wonder if a refactoring between `to_json` and `to_dict` is not necessary.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50161396",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7840#issuecomment-50161396",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7840",
    "id": 50161396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTYxMzk2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T14:59:52Z",
    "updated_at": "2014-07-25T14:59:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "not sure what you are asking? isn't `outtype='series`` what you are asking?\n\nmaybe show an example?\n\nI suppose the API is different between `to_json` and `to_dict` they have different purposes. What are you proposing?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50180045",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7840#issuecomment-50180045",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7840",
    "id": 50180045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTgwMDQ1",
    "user": {
      "login": "femtotrader",
      "id": 5049737,
      "node_id": "MDQ6VXNlcjUwNDk3Mzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/femtotrader",
      "html_url": "https://github.com/femtotrader",
      "followers_url": "https://api.github.com/users/femtotrader/followers",
      "following_url": "https://api.github.com/users/femtotrader/following{/other_user}",
      "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions",
      "organizations_url": "https://api.github.com/users/femtotrader/orgs",
      "repos_url": "https://api.github.com/users/femtotrader/repos",
      "events_url": "https://api.github.com/users/femtotrader/events{/privacy}",
      "received_events_url": "https://api.github.com/users/femtotrader/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T17:31:40Z",
    "updated_at": "2014-07-25T17:32:25Z",
    "author_association": "NONE",
    "body": "See\n\n```\nIn [44]: df\nOut[44]:\n   c1\n0   1\n1   2\n2   4\n\nIn [45]: df.to_json(orient=\"split\")\nOut[45]: '{\"columns\":[\"c1\"],\"index\":[0,1,2],\"data\":[[1],[2],[4]]}'\n\nIn [46]: df.to_dict(outtype=\"series\")\nOut[46]:\n{'c1': 0    1\n 1    2\n 2    4\n Name: c1, dtype: int64}\n```\n\nI'm just proposing to have the same option name: \"orient\" for both method (but we can have different parameter name... but same is more convenient)\nI'm also proposing to provide orient=split\n\n```\nIn [46]: json.loads(df.to_json(orient=\"split\"))\nOut[47]: {u'columns': [u'c1'], u'data': [[1], [2], [4]], u'index': [0, 1, 2]}\n```\n\nso it will be nice if we could have:\n\n```\nIn [46]: json.to_dict(orient=\"split\")\nOut[47]: {u'columns': [u'c1'], u'data': [[1], [2], [4]], u'index': [0, 1, 2]}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50180496",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7840#issuecomment-50180496",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7840",
    "id": 50180496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTgwNDk2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T17:35:34Z",
    "updated_at": "2014-07-25T17:35:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "ic.\n\nok, would then take a pull-request for this:\n- deprecate `outtype`, rename to `orient`, pretty straightforward (you deprecate if the `outtype` is explicity specified, accepting both till the deprecation is removed (in a future version). their are some decorators to do this in other parts of core/frame.py\n- add `split` option\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50185694",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7840#issuecomment-50185694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7840",
    "id": 50185694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTg1Njk0",
    "user": {
      "login": "femtotrader",
      "id": 5049737,
      "node_id": "MDQ6VXNlcjUwNDk3Mzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/femtotrader",
      "html_url": "https://github.com/femtotrader",
      "followers_url": "https://api.github.com/users/femtotrader/followers",
      "following_url": "https://api.github.com/users/femtotrader/following{/other_user}",
      "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions",
      "organizations_url": "https://api.github.com/users/femtotrader/orgs",
      "repos_url": "https://api.github.com/users/femtotrader/repos",
      "events_url": "https://api.github.com/users/femtotrader/events{/privacy}",
      "received_events_url": "https://api.github.com/users/femtotrader/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T18:20:53Z",
    "updated_at": "2014-07-25T18:21:11Z",
    "author_association": "NONE",
    "body": "my problem is that I don't know how I can have my forked version and also stable version on the same computer.\n\n```\n@deprecate_kwarg(old_arg_name='outtype', new_arg_name='orient')\ndef to_dict(self, orient='dict'):\n    \"\"\"\n    Convert DataFrame to dictionary.\n\n    Parameters\n    ----------\n    orient : str {'dict', 'list', 'series', 'records', 'split'}\n        Determines the type of the values of the dictionary. The\n        default `dict` is a nested dictionary {column -> {index -> value}}.\n        `list` returns {column -> list(values)}. `series` returns\n        {column -> Series(values)}. `records` returns [{columns -> value}].\n        `split` returns dict like {index -> [index], columns -> [columns], data -> [values]}.\n\n\n    Returns\n    -------\n    result : dict like {column -> {index -> value}}\n    \"\"\"\n    if not self.columns.is_unique:\n        warnings.warn(\"DataFrame columns are not unique, some \"\n                      \"columns will be omitted.\", UserWarning)\n    if outtype.lower().startswith('d') or orient=='dict':\n        return dict((k, v.to_dict()) for k, v in compat.iteritems(self))\n    elif outtype.lower().startswith('l') or orient=='list':\n        return dict((k, v.tolist()) for k, v in compat.iteritems(self))\n    elif orient=='split':\n        return {'columns': self.columns, 'index': self.index, 'data': self.values.tolist()}\n    elif outtype.lower().startswith('s') or orient=='series':\n        return dict((k, v) for k, v in compat.iteritems(self))\n    elif outtype.lower().startswith('r') or orient=='records':\n        return [dict((k, v) for k, v in zip(self.columns, row))\n                for row in self.values]\n    else:  # pragma: no cover\n        raise ValueError(\"orient %s not understood\" % orient)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50186173",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7840#issuecomment-50186173",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7840",
    "id": 50186173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTg2MTcz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T18:24:50Z",
    "updated_at": "2014-07-25T18:24:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "easy enough, simply clone the repo complete instruction are here: https://github.com/pydata/pandas/wiki\n\ntests first, then a code change.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58084778",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7840#issuecomment-58084778",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7840",
    "id": 58084778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDg0Nzc4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-06T19:56:38Z",
    "updated_at": "2014-10-06T19:56:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "closed by #8486 \n"
  }
]
