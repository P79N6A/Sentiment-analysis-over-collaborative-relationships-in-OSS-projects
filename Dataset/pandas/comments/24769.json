[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454100942",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454100942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454100942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDEwMDk0Mg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T18:00:24Z",
    "updated_at": "2019-01-14T18:00:24Z",
    "author_association": "MEMBER",
    "body": "> we are still using a lot of singleton fixtures (agreed undesirable\r\n\r\n@jbrockmendel : Indeed, too bad we can't lint these very easily AFAICT..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454120924",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454120924",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454120924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDEyMDkyNA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T19:00:28Z",
    "updated_at": "2019-01-14T19:00:28Z",
    "author_association": "MEMBER",
    "body": "The test failures look very weird to me.  @gfyoung any ideas?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454154446",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454154446",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454154446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE1NDQ0Ng==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T20:44:05Z",
    "updated_at": "2019-01-14T20:44:05Z",
    "author_association": "MEMBER",
    "body": "> The test failures look very weird to me.\r\n\r\n@jbrockmendel : I see only one test failure regarding your refactoring of `test_rename_inplace`.  Not sure exactly why it's failing now on those platforms, but the failure doesn't seem completely weird to me.  It's seem to be suggesting that the `.copy` somehow didn't actually create a copy of the object."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454167830",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454167830",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454167830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE2NzgzMA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T21:27:29Z",
    "updated_at": "2019-01-14T21:27:29Z",
    "author_association": "MEMBER",
    "body": "> really? this is the entire point of fixtures.\r\n\r\n@jreback we discussed this back in #23701 and you agreed \"if it’s truly a singleton the. no a fixture is not warranted\".  Pls see the discussion there.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454173875",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454173875",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454173875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE3Mzg3NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T21:47:10Z",
    "updated_at": "2019-01-14T21:47:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @jreback we discussed this back in #23701 and you agreed \"if it’s truly a singleton the. no a fixture is not warranted\". Pls see the discussion there.\r\n\r\nkey poiint. IF its truly a singleton. These are used all over the place, or at least should be. There are many many other files that actually just use TestData that should simply use these fixtures. They just have not been converted. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454177497",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454177497",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454177497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE3NzQ5Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T21:58:36Z",
    "updated_at": "2019-01-14T21:58:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Are you two using different definitions of singleton? @jbrockmendel's is (roughly, ignoring things like setup / teardown that don't apply to these), \"a non-parametrized fixture\". In this case, using a helper method in `tm.` to generate the data seems equivalent to accepting the data as a fixture.\r\n\r\n@jreback's definition might be \"a fixture that's only used in a single test\"?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454190654",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454190654",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454190654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE5MDY1NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T22:46:49Z",
    "updated_at": "2019-01-14T22:46:49Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger thanks, I think you've got it right on the terminology mismatch.\r\n\r\nEven if a fixture is used in many places, for one-liners or otherwise non-parametrized fixtures, we're better off inlining or putting them in pd.util.testing like this PR does.  We get improved copy/paste-ability, reduce pytest lockin, and improve clarity.  As a reader, which of these is clearer:\r\n\r\n```\r\n    def test_td64ser_div_numeric_scalar(self, tdser):\r\n        expected = Series(['29.5D', '29.5D', 'NaT'], dtype='timedelta64[ns]')\r\n        result = tdser / 2\r\n        tm.assert_equal(result, expected)\r\n\r\n    def test_td64ser_div_numeric_scalar(self):\r\n        tdser = pd.Series(['59 Days', '59 Days', 'NaT'], dtype='timedelta64[ns]')\r\n        expected = Series(['29.5D', '29.5D', 'NaT'], dtype='timedelta64[ns]')\r\n        result = tdser / 2\r\n        tm.assert_equal(result, expected)\r\n```\r\n\r\nI claim the latter is clearer by a wide margin."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454191502",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454191502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454191502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE5MTUwMg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-14T22:50:11Z",
    "updated_at": "2019-01-14T22:50:11Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24769?src=pr&el=h1) Report\n> Merging [#24769](https://codecov.io/gh/pandas-dev/pandas/pull/24769?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/6d3565a5181b3d0fb8342e69dd1d21a98ac3d380?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24769/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24769?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #24769      +/-   ##\n==========================================\n+ Coverage   92.38%   92.39%   +<.01%     \n==========================================\n  Files         166      166              \n  Lines       52363    52400      +37     \n==========================================\n+ Hits        48377    48413      +36     \n- Misses       3986     3987       +1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.81% <100%> (ø)` | :arrow_up: |\n| #single | `42.9% <21.62%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24769?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/24769/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `88.4% <100%> (+0.3%)` | :arrow_up: |\n| [pandas/core/dtypes/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/24769/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2NvbW1vbi5weQ==) | `96.78% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24769?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24769?src=pr&el=footer). Last update [6d3565a...032a74e](https://codecov.io/gh/pandas-dev/pandas/pull/24769?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454191504",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454191504",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454191504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE5MTUwNA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-14T22:50:11Z",
    "updated_at": "2019-01-24T19:25:22Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24769?src=pr&el=h1) Report\n> Merging [#24769](https://codecov.io/gh/pandas-dev/pandas/pull/24769?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/fa12b9ecbea36a504249e74579ee2124f98bcc3f?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24769/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24769?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #24769      +/-   ##\n==========================================\n+ Coverage   92.38%   92.39%   +<.01%     \n==========================================\n  Files         166      166              \n  Lines       52402    52439      +37     \n==========================================\n+ Hits        48414    48450      +36     \n- Misses       3988     3989       +1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.81% <100%> (ø)` | :arrow_up: |\n| #single | `42.88% <21.62%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24769?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/24769/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `88.43% <100%> (+0.3%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24769?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24769?src=pr&el=footer). Last update [fa12b9e...3b87f34](https://codecov.io/gh/pandas-dev/pandas/pull/24769?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454206665",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454206665",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454206665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDIwNjY2NQ==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T23:43:32Z",
    "updated_at": "2019-01-14T23:43:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbrockmendel \r\n\r\n> The test failures look very weird to me. @gfyoung any ideas?\r\n\r\nif the only change to this test is replacing the fixture then it could be a change to N or K in tm."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454212898",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454212898",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454212898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDIxMjg5OA==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T00:12:29Z",
    "updated_at": "2019-01-15T00:12:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "in cases like this `pytest --showlocals` would be helpful. you can use print statements to debug and the output should be displayed for failing tests.. that's the default locally.. haven't tried it with the ci  "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454234515",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454234515",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454234515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDIzNDUxNQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T01:33:53Z",
    "updated_at": "2019-01-15T01:33:53Z",
    "author_association": "MEMBER",
    "body": "I can't reproduce this locally.  Can anyone else?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454244615",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454244615",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454244615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI0NDYxNQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T02:27:38Z",
    "updated_at": "2019-01-15T02:27:38Z",
    "author_association": "MEMBER",
    "body": "If somehow the test behavior depends on whether a fixture is used, that would be troubling"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454246471",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454246471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454246471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI0NjQ3MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T02:37:52Z",
    "updated_at": "2019-01-15T02:38:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can reproduce the failure in 032a74eab1d7894d9c7306859cd5046d6b8726aa locally. And on 2253bdfd5b32debc8dc8f6ca89520bb93b7d625a\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454248053",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454248053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454248053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI0ODA1Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T02:46:53Z",
    "updated_at": "2019-01-15T02:46:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interestingly, it seems to be a flaky test\r\n\r\n```\r\n $ pytest pandas/tests/frame/test_alter_axes.py -k test_rename_inplace --count=5\r\n================================================================================ test session starts ================================================================================\r\nplatform darwin -- Python 3.7.2, pytest-4.1.0, py-1.6.0, pluggy-0.7.1\r\nrootdir: /Users/taugspurger/sandbox/pandas, inifile: setup.cfg\r\nplugins: xdist-1.23.2, repeat-0.7.0, forked-0.2, faulthandler-1.5.0, cov-2.6.0, hypothesis-3.59.1\r\ncollected 3735 items / 3730 deselected\r\n\r\npandas/tests/frame/test_alter_axes.py .....                                                                                                                                   [100%]\r\n\r\n===================================================================== 5 passed, 3730 deselected in 0.60 seconds =====================================================================\r\n\r\n $ pytest pandas/tests/frame/test_alter_axes.py -k test_rename_inplace --count=5\r\n================================================================================ test session starts ================================================================================\r\nplatform darwin -- Python 3.7.2, pytest-4.1.0, py-1.6.0, pluggy-0.7.1\r\nrootdir: /Users/taugspurger/sandbox/pandas, inifile: setup.cfg\r\nplugins: xdist-1.23.2, repeat-0.7.0, forked-0.2, faulthandler-1.5.0, cov-2.6.0, hypothesis-3.59.1\r\ncollected 3735 items / 3730 deselected\r\n\r\npandas/tests/frame/test_alter_axes.py F....                                                                                                                                   [100%]\r\n\r\n===================================================================================== FAILURES ======================================================================================\r\n__________________________________________________________________ TestDataFrameAlterAxes.test_rename_inplace[1/5] __________________________________________________________________\r\n\r\nself = <pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes object at 0x10ea03eb8>\r\n\r\n    def test_rename_inplace(self):\r\n        float_frame = DataFrame(tm.getSeriesData())\r\n\r\n        float_frame.rename(columns={'C': 'foo'})\r\n        assert 'C' in float_frame\r\n        assert 'foo' not in float_frame\r\n\r\n        c_id = id(float_frame['C'])\r\n        float_frame = float_frame.copy()\r\n        float_frame.rename(columns={'C': 'foo'}, inplace=True)\r\n\r\n        assert 'C' not in float_frame\r\n        assert 'foo' in float_frame\r\n>       assert id(float_frame['foo']) != c_id\r\nE       assert 4519856224 != 4519856224\r\nE        +  where 4519856224 = id(3iGk6Mrg5P   -0.684722\\nafMjhpeaJk   -1.726612\\nlHGFsvRhY6    0.868385\\n44rJSOpKPB    0.413032\\ndBoNJu9vYI    0.017283\\nHT4...4\\ngwBsqTWequ    0.262972\\nmBUNfZKGWs   -0.194150\\nxNhGyHIH99    1.499986\\nXnHXz6qUoM   -0.264342\\nName: foo, dtype: float64)\r\n\r\npandas/tests/frame/test_alter_axes.py:693: AssertionError\r\n================================================================ 1 failed, 4 passed, 3730 deselected in 0.85 seconds ================================================================\r\n```\r\n\r\nJust had 6/100 fail."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454248446",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454248446",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454248446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI0ODQ0Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T02:49:11Z",
    "updated_at": "2019-01-15T02:49:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "On the PR itself, I personally don't care about copy/paste-ability, and am not too concerned with pytest lock-in.\r\n\r\nI do care about how long the test suite takes, so reducing that without sacrificing readability / maintainability is a win. And to me, a simple fixture that just provides a value (no setup / teardown) is equivalent to a method call inside the test."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454248956",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454248956",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454248956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI0ODk1Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T02:52:22Z",
    "updated_at": "2019-01-15T02:52:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "i am -1 on this change - this goes against the entire maxim of using fixtures \r\n\r\nthis just puts more distance between what is being tested and construction\r\n\r\nthis is just reinventing the pytest and is a giant leap backwards "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454249393",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454249393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454249393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI0OTM5Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T02:54:58Z",
    "updated_at": "2019-01-15T02:54:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "> this just puts more distance between what is being tested and construction\r\n\r\nHow are you measuring distance? It's just a function call either way. And, depending on your editor, this may be less \"distance\" since goto definition typically works for function calls, but not necessarily for fixtures."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454251530",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454251530",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454251530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI1MTUzMA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T03:07:30Z",
    "updated_at": "2019-01-15T03:07:30Z",
    "author_association": "MEMBER",
    "body": "> this just puts more distance between what is being tested and construction\r\n\r\nUm... the opposite of that.  In many cases the way the PR does it doesn't even have to call into `tm`, just inlines the construction.\r\n\r\nWhat it _does_ do is decrease the ambiguity about where something is defined.\r\n\r\n> this is just reinventing the pytest and is a giant leap backwards\r\n\r\nSince when did pytest invent inlining code or function calls?\r\n\r\nBy this logic, _every_ object we use in more than one test should be made into a fixture.  Where would you draw the line and why?\r\n\r\n> I do care about how long the test suite takes, so reducing that without sacrificing readability / maintainability is a win. And to me, a simple fixture that just provides a value (no setup / teardown) is equivalent to a method call inside the test.\r\n\r\nFor the places where the fixtures are inlined instead of moved into `tm`, there is a strict decrease in the function call overhead (though I doubt it is big enough to be measurable).  For others it should balance out exactly.\r\n\r\n>  so reducing that without sacrificing readability / maintainability is a win\r\n\r\nI find the readability strictly improved by this.  It also makes it easier to figure out what refactoring opportunities are available, which has other maintainability/perf upside.\r\n\r\n---\r\nIn the status quo there are a handful of fixtures in `tests.frame.conftest` that aren't used at all.  In other cases tests have a fixture in the arguments but never actually use it; the linting doesn't detect that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454254273",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454254273",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454254273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI1NDI3Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T03:24:22Z",
    "updated_at": "2019-01-15T03:24:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "> For the places where the fixtures are inlined instead of moved into tm, there is a strict decrease in the function call overhead (though I doubt it is big enough to be measurable). For others it should balance out exactly.\r\n\r\nJust to be clear, I was talking about reduced setup time from avoiding fixtures (btw, do you have rough at how much this shaves off? I suppose a `pytest --collect-only` would show it?)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454257073",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-454257073",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 454257073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI1NzA3Mw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T03:42:45Z",
    "updated_at": "2019-01-15T03:42:45Z",
    "author_association": "MEMBER",
    "body": "> Just to be clear, I was talking about reduced setup time from avoiding fixtures (btw, do you have rough at how much this shaves off? I suppose a pytest --collect-only would show it?)\r\n\r\nN=5 they are indistinguishable.\r\n\r\nIncidentally, for me the collection takes about 12% of test runtime (with parallelization).  I think some of the way to cut down on that is to push back on over-parametrization."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455013619",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-455013619",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 455013619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTAxMzYxOQ==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T01:58:54Z",
    "updated_at": "2019-01-17T01:58:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "just had this ci failure..\r\n\r\n```\r\n    def test_setindex(self, string_series):\r\n        # wrong type\r\n        msg = (r\"Index\\(\\.\\.\\.\\) must be called with a collection of some\"\r\n               r\" kind, None was passed\")\r\n        with pytest.raises(TypeError, match=msg):\r\n            string_series.index = None\r\n    \r\n        # wrong length\r\n        msg = (r\"Length mismatch: Expected axis has 30 elements, new values\"\r\n               r\" have 29 elements\")\r\n        with pytest.raises(ValueError, match=msg):\r\n>           string_series.index = np.arange(len(string_series) - 1)\r\nE           AssertionError: Pattern 'Length mismatch: Expected axis has 30 elements, new values have 29 elements' not found in 'Length mismatch: Expected axis has 100 elements, new values have 99 elements'\r\npandas/tests/series/test_alter_axes.py:28: AssertionError\r\n___________ TestSeriesConstructors.test_constructor_dtype_datetime64 ___________\r\n\r\n```\r\nso I think that tm.N and tm.K take on different values depending on the order that the tests are run."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455326819",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-455326819",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 455326819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTMyNjgxOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T20:49:21Z",
    "updated_at": "2019-01-17T20:49:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seems like we have tests that set those, which seems iffy\r\n\r\n```\r\n$ ag 'tm.N ='\r\ndoc/source/reshaping.rst\r\n18:   tm.N = 3\r\n43:   tm.N = 3\r\n\r\npandas/tests/test_multilevel.py\r\n50:        tm.N = 100\r\n\r\npandas/tests/plotting/test_datetimelike.py\r\n317:        tm.N = 300\r\n319:        tm.N = n\r\n\r\npandas/tests/indexing/multiindex/conftest.py\r\n24:    tm.N = 100\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455389476",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-455389476",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 455389476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTM4OTQ3Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T01:03:22Z",
    "updated_at": "2019-01-18T01:03:22Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger agreed that altering tm.K and tm.N is not great.  But I don't see how that would change the affected test's behavior, do you?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/456508740",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-456508740",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 456508740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjUwODc0MA==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-22T18:25:58Z",
    "updated_at": "2019-01-22T18:25:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Interestingly, it seems to be a flaky test\r\n\r\nfloat-frame defined in function..\r\n\r\n```\r\n$ pytest pandas/tests/frame/test_alter_axes.py -k test_rename_inplace --count=100 --tb=no\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.7.2, pytest-4.1.1, py-1.7.0, pluggy-0.8.1\r\nhypothesis profile 'ci' -> deadline=500, timeout=unlimited, suppress_health_check=[HealthCheck.too_slow], database=DirectoryBasedExampleDatabase('C:\\\\Users\\\\simon\\\\OneDrive\\\\code\\\\pandas-simonjayhawkins\\\\.hypothesis\\\\examples')\r\nrootdir: C:\\Users\\simon\\OneDrive\\code\\pandas-simonjayhawkins, inifile: setup.cfg\r\nplugins: xdist-1.26.0, repeat-0.7.0, forked-0.2, cov-2.6.1, hypothesis-4.0.1\r\ncollected 49500 items / 49400 deselected\r\n\r\npandas\\tests\\frame\\test_alter_axes.py .F.....FF.....FFF......F.......FFF [ 34%]\r\n......F.......FFF......F.......FF......F.....F.....F....F...F.....       [100%]\r\n\r\n=========== 22 failed, 78 passed, 49400 deselected in 13.29 seconds ===========\r\n```\r\n\r\nfloat-frame fixture..\r\n\r\n```\r\n$ pytest pandas/tests/frame/test_alter_axes.py -k test_rename_inplace --count=100 --tb=no\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.7.2, pytest-4.1.1, py-1.7.0, pluggy-0.8.1\r\nhypothesis profile 'ci' -> deadline=500, timeout=unlimited, suppress_health_check=[HealthCheck.too_slow], database=DirectoryBasedExampleDatabase('C:\\\\Users\\\\simon\\\\OneDrive\\\\code\\\\pandas-simonjayhawkins\\\\.hypothesis\\\\examples')\r\nrootdir: C:\\Users\\simon\\OneDrive\\code\\pandas-simonjayhawkins, inifile: setup.cfg\r\nplugins: xdist-1.26.0, repeat-0.7.0, forked-0.2, cov-2.6.1, hypothesis-4.0.1\r\ncollected 49500 items / 49400 deselected\r\n\r\npandas\\tests\\frame\\test_alter_axes.py .................................. [ 34%]\r\n..................................................................       [100%]\r\n\r\n================ 100 passed, 49400 deselected in 13.20 seconds ================\r\n```\r\n\r\nchange code to ...\r\n```\r\n    def test_rename_inplace(self):\r\n        float_frame = DataFrame(tm.getSeriesData())\r\n\r\n        float_frame.rename(columns={'C': 'foo'})\r\n        assert 'C' in float_frame\r\n        assert 'foo' not in float_frame\r\n\r\n        c_id = id(float_frame['C'])\r\n        float_frame2 = float_frame.copy()\r\n        float_frame2.rename(columns={'C': 'foo'}, inplace=True)\r\n\r\n        assert 'C' not in float_frame2\r\n        assert 'foo' in float_frame2\r\n        assert id(float_frame2['foo']) != c_id\r\n```\r\n```\r\n$ pytest pandas/tests/frame/test_alter_axes.py -k test_rename_inplace --count=100 --tb=no\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.7.2, pytest-4.1.1, py-1.7.0, pluggy-0.8.1\r\nhypothesis profile 'ci' -> deadline=500, timeout=unlimited, suppress_health_check=[HealthCheck.too_slow], database=DirectoryBasedExampleDatabase('C:\\\\Users\\\\simon\\\\OneDrive\\\\code\\\\pandas-simonjayhawkins\\\\.hypothesis\\\\examples')\r\nrootdir: C:\\Users\\simon\\OneDrive\\code\\pandas-simonjayhawkins, inifile: setup.cfg\r\nplugins: xdist-1.26.0, repeat-0.7.0, forked-0.2, cov-2.6.1, hypothesis-4.0.1\r\ncollected 49500 items / 49400 deselected\r\n\r\npandas\\tests\\frame\\test_alter_axes.py .................................. [ 34%]\r\n..................................................................       [100%]\r\n\r\n================ 100 passed, 49400 deselected in 11.97 seconds ================\r\n(pandas-dev)\r\n```\r\n\r\nso it appears to be due to re-use of memory space after dereferencing \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/456516337",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-456516337",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 456516337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjUxNjMzNw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-22T18:47:22Z",
    "updated_at": "2019-01-22T18:47:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @jbrockmendel @simonjayhawkins \r\nThere reason most of the fixtures coming out of `TestData` are singletons at all is that there is an ongoing (*cough*) transition from the old `TestData`-attributes-as-fixtures towards proper fixtures, see #22236 (where @jreback asked me to open the following) #22471 #22550.\r\n\r\nI haven't touched these issues that much anymore, since it was supposed to be a \"good first issue\" (and had some response along those lines for a while), and I was busy with other PRs."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457125116",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-457125116",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 457125116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzEyNTExNg==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T09:21:42Z",
    "updated_at": "2019-01-24T09:21:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "100/100 pass rate with\r\n```\r\n    @pytest.mark.parametrize('float_frame', [DataFrame(tm.getSeriesData())])\r\n    def test_rename_inplace(self, float_frame):\r\n        float_frame.rename(columns={'C': 'foo'})\r\n```\r\n\r\nalso with holding a reference to original object\r\n```\r\n    def test_rename_inplace(self):\r\n        float_frame = DataFrame(tm.getSeriesData())\r\n        float_frame_orig = float_frame\r\n\r\n        float_frame.rename(columns={'C': 'foo'})\r\n        assert 'C' in float_frame\r\n        assert 'foo' not in float_frame\r\n\r\n        c_id = id(float_frame['C'])\r\n        float_frame = float_frame.copy()\r\n        float_frame.rename(columns={'C': 'foo'}, inplace=True)\r\n\r\n        assert 'C' not in float_frame\r\n        assert 'foo' in float_frame\r\n        assert id(float_frame['foo']) != c_id\r\n        assert float_frame is not float_frame_orig\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457299356",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-457299356",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 457299356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzI5OTM1Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T18:11:10Z",
    "updated_at": "2019-01-24T18:11:10Z",
    "author_association": "MEMBER",
    "body": "> 100/100 pass rate with\r\n\r\nIs this on a platform/version that was previously failing?  we've still got three failing builds"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457307905",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-457307905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 457307905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzMwNzkwNQ==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T18:36:44Z",
    "updated_at": "2019-01-24T18:36:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > 100/100 pass rate with\r\n> \r\n> Is this on a platform/version that was previously failing? we've still got three failing builds\r\n\r\nyes, i'm running locally on windows and getting failures with a copy of your branch. \r\n\r\n```\r\n$ git log\r\ncommit fde7cd88b23a4711398e4708fac29a95984fe16f (HEAD -> jbrockmendel-singletons)\r\nAuthor: Brock Mendel <jbrockmendel@gmail.com>\r\nDate:   Sun Jan 20 10:28:14 2019 -0800\r\n\r\n    See if removing duplicate fixture is OK now...\r\n```\r\n\r\nfour methods of preventing dereferencing always pass. fixture, @pytest.mark.parametrize, assigning original object to another variable and using different variable for the copy.\r\n\r\nbefore the fixture was created, the float-frame object would have been created outside the function. so it makes sense that before the fixture was created that a reference would have been kept to the float-frame object and the test passed."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457311061",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24769#issuecomment-457311061",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24769",
    "id": 457311061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzMxMTA2MQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T18:46:15Z",
    "updated_at": "2019-01-24T18:46:15Z",
    "author_association": "MEMBER",
    "body": "Thanks for digging into this.\r\n\r\n>  so it makes sense that before the fixture was created that a reference would have been kept to the float-frame object and the test passed.\r\n\r\nI think I follow.  For the time being I'm going to use the `float_frame_orig` edit."
  }
]
