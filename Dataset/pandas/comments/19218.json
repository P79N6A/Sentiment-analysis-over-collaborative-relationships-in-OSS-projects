[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/357457941",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19218#issuecomment-357457941",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19218",
    "id": 357457941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzQ1Nzk0MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-13T18:57:56Z",
    "updated_at": "2018-01-13T18:57:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "``min_periods`` controls whether the window is skipped or not. it defaults to the window size.\r\n\r\n```\r\nIn [7]: iinput = np.arange(10.0)\r\n   ...: iinput[5] = np.nan\r\n   ...: iinput = pd.Series(iinput)\r\n   ...: x = iinput.rolling(3, min_periods=1).apply(lambda x: 1.0)\r\n   ...: x\r\n   ...: \r\nOut[7]: \r\n0    1.0\r\n1    1.0\r\n2    1.0\r\n3    1.0\r\n4    1.0\r\n5    1.0\r\n6    1.0\r\n7    1.0\r\n8    1.0\r\n9    1.0\r\ndtype: float64\r\n\r\nIn [8]: iinput = np.arange(10.0)\r\n   ...: iinput[5] = np.nan\r\n   ...: iinput = pd.Series(iinput)\r\n   ...: x = iinput.rolling(3, min_periods=3).apply(lambda x: 1.0)\r\n   ...: x\r\n   ...: \r\nOut[8]: \r\n0    NaN\r\n1    NaN\r\n2    1.0\r\n3    1.0\r\n4    1.0\r\n5    NaN\r\n6    NaN\r\n7    NaN\r\n8    1.0\r\n9    1.0\r\ndtype: float64\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/382411813",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19218#issuecomment-382411813",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19218",
    "id": 382411813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjQxMTgxMw==",
    "user": {
      "login": "Anisalexvl",
      "id": 17534715,
      "node_id": "MDQ6VXNlcjE3NTM0NzE1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17534715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Anisalexvl",
      "html_url": "https://github.com/Anisalexvl",
      "followers_url": "https://api.github.com/users/Anisalexvl/followers",
      "following_url": "https://api.github.com/users/Anisalexvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/Anisalexvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Anisalexvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Anisalexvl/subscriptions",
      "organizations_url": "https://api.github.com/users/Anisalexvl/orgs",
      "repos_url": "https://api.github.com/users/Anisalexvl/repos",
      "events_url": "https://api.github.com/users/Anisalexvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Anisalexvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T14:43:29Z",
    "updated_at": "2018-04-18T14:47:30Z",
    "author_association": "NONE",
    "body": "Nevertheless, if we initialize next array\r\n`array([  0.,   1.,   2.,   3.,   4.,  nan,  nan,  nan,   8.,   9.])`\r\nand implement next code\r\n```\r\ndef f(x):\r\n    print(x)\r\n    return 1.\r\n\r\nx = pd.Series(iinput).rolling(3, min_periods=1).apply(f).tolist()\r\nprint('Rolling result: ', x)\r\n```\r\n\r\ngives output\r\n\r\n```\r\n[ 0.]\r\n[ 0.  1.]\r\n[ 0.  1.  2.]\r\n[ 1.  2.  3.]\r\n[ 2.  3.  4.]\r\n[  3.   4.  nan]\r\n[  4.  nan  nan]\r\n[ nan  nan   8.]\r\n[ nan   8.   9.]\r\nRolling result:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, nan, 1.0, 1.0]\r\n```\r\n\r\nwhich means that function was not applied to values, that fully filled with nans. Expected that function should apply to every value and just want to agree with @scoliann: \r\n\r\n> It seems that any time the input to lambda contains nan, then nan is returned automatically. This is problematic, because it is not possible to apply a custom rolling function to a series containing nans."
  }
]
