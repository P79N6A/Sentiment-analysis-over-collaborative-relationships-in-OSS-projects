[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/193013797",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12546#issuecomment-193013797",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12546",
    "id": 193013797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzAxMzc5Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-06T23:08:08Z",
    "updated_at": "2016-03-06T23:08:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you show using supplied data and `StringIO`,  e.g. a copy-pastable example\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236353757",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12546#issuecomment-236353757",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12546",
    "id": 236353757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjM1Mzc1Nw==",
    "user": {
      "login": "ivannz",
      "id": 2227377,
      "node_id": "MDQ6VXNlcjIyMjczNzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2227377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivannz",
      "html_url": "https://github.com/ivannz",
      "followers_url": "https://api.github.com/users/ivannz/followers",
      "following_url": "https://api.github.com/users/ivannz/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivannz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivannz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivannz/subscriptions",
      "organizations_url": "https://api.github.com/users/ivannz/orgs",
      "repos_url": "https://api.github.com/users/ivannz/repos",
      "events_url": "https://api.github.com/users/ivannz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivannz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-30T08:43:36Z",
    "updated_at": "2016-07-30T08:50:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "The cause if the problem is, as far as I know, that **use_cols** takes a python's list as a value, and the semantics of `if self.use_cols:` in this case is to check for **emptiness**. Now in the supplied scant example the user passes a **numpy.array** instead, which has different (ambiguous) semantics when put as the condition of an **if** statement, and it definitely does not check for emptiness. So, passing anything but a list is **incorrect usage** according to the current code. However, in the [documentation](http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html) for **read_csv** it states\n\n> usecols : array-like, default None\n\nWhich actually make this use case plausible and correct according to docs.\n\nI think we should either change the documentation to **list** and add a strict type check, or inject something in the lines of\n\n``` python\nuse_cols = np.asarray(use_cols, dtype=int).ravel().tolist()\n```\n\nInto **_parser_f** of [read_csv](https://github.com/pydata/pandas/blob/master/pandas/io/parsers.py#L480)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241211423",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12546#issuecomment-241211423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12546",
    "id": 241211423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTIxMTQyMw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-20T17:04:01Z",
    "updated_at": "2016-08-20T17:04:01Z",
    "author_association": "MEMBER",
    "body": "Here's how we can reproduce this:\n\n``` python\n>>> from pandas import read_csv\n>>> from pandas.compat import StringIO\n>>> import numpy as np\n>>> usecols = np.array(['a', 'b'])\n>>> data = 'a,b,c\\n1,2,3'\n>>> read_csv(StringIO(data), usecols=usecols, engine='python')\n...\nValueError: The truth value of an array with more than one element is ambiguous\n. Use a.any() or a.all()\n```\n\nNote that the C engine is perfectly happy.\n"
  }
]
