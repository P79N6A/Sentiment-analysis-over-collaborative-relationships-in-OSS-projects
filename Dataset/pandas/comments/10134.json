[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/103026717",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10134#issuecomment-103026717",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10134",
    "id": 103026717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzAyNjcxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-18T11:40:47Z",
    "updated_at": "2015-05-18T11:40:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "what is `type(cursor).__mro__`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/103034112",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10134#issuecomment-103034112",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10134",
    "id": 103034112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzAzNDExMg==",
    "user": {
      "login": "hexum",
      "id": 6324742,
      "node_id": "MDQ6VXNlcjYzMjQ3NDI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6324742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hexum",
      "html_url": "https://github.com/hexum",
      "followers_url": "https://api.github.com/users/hexum/followers",
      "following_url": "https://api.github.com/users/hexum/following{/other_user}",
      "gists_url": "https://api.github.com/users/hexum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hexum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hexum/subscriptions",
      "organizations_url": "https://api.github.com/users/hexum/orgs",
      "repos_url": "https://api.github.com/users/hexum/repos",
      "events_url": "https://api.github.com/users/hexum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hexum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-18T11:54:16Z",
    "updated_at": "2015-05-18T11:54:16Z",
    "author_association": "NONE",
    "body": "```\ntype(cursor).__mro__\n(sqlite3.Cursor, object)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/103037378",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10134#issuecomment-103037378",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10134",
    "id": 103037378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzAzNzM3OA==",
    "user": {
      "login": "hexum",
      "id": 6324742,
      "node_id": "MDQ6VXNlcjYzMjQ3NDI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6324742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hexum",
      "html_url": "https://github.com/hexum",
      "followers_url": "https://api.github.com/users/hexum/followers",
      "following_url": "https://api.github.com/users/hexum/following{/other_user}",
      "gists_url": "https://api.github.com/users/hexum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hexum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hexum/subscriptions",
      "organizations_url": "https://api.github.com/users/hexum/orgs",
      "repos_url": "https://api.github.com/users/hexum/repos",
      "events_url": "https://api.github.com/users/hexum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hexum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-18T12:01:44Z",
    "updated_at": "2015-05-18T12:01:44Z",
    "author_association": "NONE",
    "body": "It's not a big issue: passing cursor to list constructor results normal list wich is accepted by DataFrame.\nI just can't understand why iterable is not acepted.\nType checking is a bad practice in Python, isn't it?\nWhy just not to check ability to iterate?\n\n```\nhasattr([], \"__iter__\")\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/103041785",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10134#issuecomment-103041785",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10134",
    "id": 103041785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzA0MTc4NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-18T12:25:34Z",
    "updated_at": "2015-05-18T12:25:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "type checking in python is fine. In pandas is actually quite a bit more complicated, because we need to determine, if, for example a list of-lists or list-of scalars are passed, then this is problematic\n\nso an `Iterable` must have `__iter__` AND `__len__`. A cursor doesn't have this property, while for example `range(5)` does. (I know that in theory `rowcount` works for his, but I don't think this is a guaranteed property). So a `Cursor` _should_ act much like a `GeneratorType` (and not an `Iterator`). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/103054637",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10134#issuecomment-103054637",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10134",
    "id": 103054637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzA1NDYzNw==",
    "user": {
      "login": "hexum",
      "id": 6324742,
      "node_id": "MDQ6VXNlcjYzMjQ3NDI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6324742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hexum",
      "html_url": "https://github.com/hexum",
      "followers_url": "https://api.github.com/users/hexum/followers",
      "following_url": "https://api.github.com/users/hexum/following{/other_user}",
      "gists_url": "https://api.github.com/users/hexum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hexum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hexum/subscriptions",
      "organizations_url": "https://api.github.com/users/hexum/orgs",
      "repos_url": "https://api.github.com/users/hexum/repos",
      "events_url": "https://api.github.com/users/hexum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hexum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-18T13:15:43Z",
    "updated_at": "2015-05-18T13:15:43Z",
    "author_association": "NONE",
    "body": "I just create a generator with not defined length. And DataFrame accepts it as I expect.\nI think we should turn off type check. Anyway user may construct infinity generator and pass type checking.\n\n```\nIn [20]: def g():\n   ....:     for i in range(5):\n   ....:         yield [i, i ** 2, i ** 3]\n   ....:         \n\nIn [21]: DataFrame(g())\nOut[21]: \n   0   1   2\n0  0   0   0\n1  1   1   1\n2  2   4   8\n3  3   9  27\n4  4  16  64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/103068826",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10134#issuecomment-103068826",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10134",
    "id": 103068826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzA2ODgyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-18T13:58:24Z",
    "updated_at": "2015-05-18T13:58:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "a generator is fine. you have an `iterator`. you can certainly make any changes you would like. but they would need to pass the test suite as is.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/103070238",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10134#issuecomment-103070238",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10134",
    "id": 103070238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzA3MDIzOA==",
    "user": {
      "login": "hexum",
      "id": 6324742,
      "node_id": "MDQ6VXNlcjYzMjQ3NDI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6324742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hexum",
      "html_url": "https://github.com/hexum",
      "followers_url": "https://api.github.com/users/hexum/followers",
      "following_url": "https://api.github.com/users/hexum/following{/other_user}",
      "gists_url": "https://api.github.com/users/hexum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hexum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hexum/subscriptions",
      "organizations_url": "https://api.github.com/users/hexum/orgs",
      "repos_url": "https://api.github.com/users/hexum/repos",
      "events_url": "https://api.github.com/users/hexum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hexum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-18T14:05:36Z",
    "updated_at": "2015-05-18T14:05:36Z",
    "author_association": "NONE",
    "body": "Hmmm. I'll see how to overcome it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232805898",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10134#issuecomment-232805898",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10134",
    "id": 232805898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjgwNTg5OA==",
    "user": {
      "login": "ns-cweber",
      "id": 13964486,
      "node_id": "MDQ6VXNlcjEzOTY0NDg2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/13964486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ns-cweber",
      "html_url": "https://github.com/ns-cweber",
      "followers_url": "https://api.github.com/users/ns-cweber/followers",
      "following_url": "https://api.github.com/users/ns-cweber/following{/other_user}",
      "gists_url": "https://api.github.com/users/ns-cweber/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ns-cweber/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ns-cweber/subscriptions",
      "organizations_url": "https://api.github.com/users/ns-cweber/orgs",
      "repos_url": "https://api.github.com/users/ns-cweber/repos",
      "events_url": "https://api.github.com/users/ns-cweber/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ns-cweber/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-14T22:02:48Z",
    "updated_at": "2016-07-14T22:02:48Z",
    "author_association": "NONE",
    "body": "@jreback Out of curiosity, why is a generator fine, but not an iterator? It looks like DataFrame's constructor checks to see if the data argument is a GeneratorType and then wraps it (`data = list(data)`), but if it's an iterator it raises an exception.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232810835",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10134#issuecomment-232810835",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10134",
    "id": 232810835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjgxMDgzNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-14T22:27:04Z",
    "updated_at": "2016-07-14T22:27:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "see my comment above\nand iterator is not sufficient as its not required to have a len\n\nthis is an old issue - so don't really remember\nhave a look at the test code for Frame construction \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232970170",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10134#issuecomment-232970170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10134",
    "id": 232970170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjk3MDE3MA==",
    "user": {
      "login": "ns-cweber",
      "id": 13964486,
      "node_id": "MDQ6VXNlcjEzOTY0NDg2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/13964486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ns-cweber",
      "html_url": "https://github.com/ns-cweber",
      "followers_url": "https://api.github.com/users/ns-cweber/followers",
      "following_url": "https://api.github.com/users/ns-cweber/following{/other_user}",
      "gists_url": "https://api.github.com/users/ns-cweber/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ns-cweber/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ns-cweber/subscriptions",
      "organizations_url": "https://api.github.com/users/ns-cweber/orgs",
      "repos_url": "https://api.github.com/users/ns-cweber/repos",
      "events_url": "https://api.github.com/users/ns-cweber/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ns-cweber/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-15T14:41:46Z",
    "updated_at": "2016-07-15T14:41:46Z",
    "author_association": "NONE",
    "body": "Generator is also not required to have a len. The solution for generators in the DataFrame constructor is to consume it into a list() and from there treat it as though a list was passed as the data arg. The same should work for iters. If you're worried about infinite iterators, then you should be equally worried about infinite generators, unless I'm misunderstanding something. I'll take a look at the tests.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403208491",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10134#issuecomment-403208491",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10134",
    "id": 403208491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzIwODQ5MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-07T11:19:27Z",
    "updated_at": "2018-07-07T11:19:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Duplicate of https://github.com/pandas-dev/pandas/issues/2193\r\n\r\nI also think it'll be possible to turn the iterable into a list, just like with a generator."
  }
]
