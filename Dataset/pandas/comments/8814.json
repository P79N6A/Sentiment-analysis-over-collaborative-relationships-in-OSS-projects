[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63022830",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-63022830",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 63022830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDIyODMw",
    "user": {
      "login": "onesandzeroes",
      "id": 1460294,
      "node_id": "MDQ6VXNlcjE0NjAyOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1460294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onesandzeroes",
      "html_url": "https://github.com/onesandzeroes",
      "followers_url": "https://api.github.com/users/onesandzeroes/followers",
      "following_url": "https://api.github.com/users/onesandzeroes/following{/other_user}",
      "gists_url": "https://api.github.com/users/onesandzeroes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onesandzeroes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onesandzeroes/subscriptions",
      "organizations_url": "https://api.github.com/users/onesandzeroes/orgs",
      "repos_url": "https://api.github.com/users/onesandzeroes/repos",
      "events_url": "https://api.github.com/users/onesandzeroes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onesandzeroes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T08:15:14Z",
    "updated_at": "2014-11-14T08:15:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "That was me asking the question. I originally started writing up the question because I was working on a PR for pandas, and while writing I discovered `is_categorical_dtype()`. Since I was working on internal pandas code that works for my current usage.\n\nHaving something that's not so deeply buried would be good though. I tried `df.col.dtype == 'category'` because I thought that was a pretty standard way of doing a quick type check. Unless there are strong reasons not to use this method, it should probably work the same for categoricals as it does for other types (e.g. `df.col.dtype == 'float64'`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63044139",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-63044139",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 63044139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDQ0MTM5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T11:04:24Z",
    "updated_at": "2014-11-14T11:04:24Z",
    "author_association": "MEMBER",
    "body": "`df.col.dtype == 'category'` _does_ appear to work for me on pandas 0.15.1. As @onesandzeroes says, I think should be the preferred way to check for categorical types.\n\nIt does looks like `Categorical.dtype.__ne__` needs to be defined, though -- currently it's not, so Python defaults to something arbitrary.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63045304",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-63045304",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 63045304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDQ1MzA0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T11:08:26Z",
    "updated_at": "2014-11-14T11:10:27Z",
    "author_association": "MEMBER",
    "body": "@shoyer as you can see in my answer on SO, it does indeed work, but the problem is it raises for other dtypes instead of giving False, which is not very handy (and that is a numpy thing). \nWith the example of SO:\n\n```\nIn [86]: df\nOut[86]:\n  cat_column   x   y\n0          c   0   0\n1          d  10   4\n2          f  20   8\n3          a  30  12\n4          b  40  16\n5          e  50  20\n\nIn [87]: df.cat_column.dtype == 'category'\nOut[87]: True\n\nIn [88]: df.x.dtype\nOut[88]: dtype('float64')\n\nIn [89]: df.x.dtype == 'category'\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-89-aff611b16544> in <module>()\n----> 1 df.x.dtype == 'category'\n\nTypeError: data type \"category\" not understood\n```\n\nSo exactly because that is not working (as you would expect: returning False), I think we should provide a common way to do this (or at least document this in the categorical docs what is the best way to do this)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63045601",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-63045601",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 63045601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDQ1NjAx",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T11:11:29Z",
    "updated_at": "2014-11-14T11:11:29Z",
    "author_association": "MEMBER",
    "body": "Ah, I see. A reasonable solution might be to wrap the dtype in `str`, e.g., `str(df.x.dtype) == 'category'`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63045630",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-63045630",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 63045630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDQ1NjMw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T11:11:48Z",
    "updated_at": "2014-11-14T11:11:48Z",
    "author_association": "MEMBER",
    "body": "cc @JanSchulz\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63057118",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-63057118",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 63057118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDU3MTE4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T12:30:21Z",
    "updated_at": "2014-11-14T12:30:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [10]: df = DataFrame({'A' : np.random.randn(5), 'B' : Series(list('aabbc')).astype('category')})\n\nIn [11]: df\nOut[11]: \n          A  B\n0 -0.064981  a\n1  0.852717  a\n2  0.693611  b\n3  0.411486  b\n4 -1.425537  c\n\nIn [12]: df.dtypes\nOut[12]: \nA     float64\nB    category\ndtype: object\n\nIn [13]: df.dtypes == 'category'\nOut[13]: \nA    False\nB     True\ndtype: bool\n\nIn [14]: df.select_dtypes(include=['category'])\nOut[14]: \n   B\n0  a\n1  a\n2  b\n3  b\n4  c\n\nn [16]: pd.core.common.is_categorical_dtype(df.A.dtype)\nOut[16]: False\n```\n\nSo the preferred method of 'cheking' dtypes is simply to use `select_dtypes` or `[13]` works as well. Check a `np.dtype('float64')=='category'` blows up - I think maybe should create a bug report to have this fixed upstream. Not much we can do for this. Of course as @jtratner pointed out\n``np.dtype('float64').dtype.name=='category' (will work correctly with numpy dtypes).\n\nSo I don't think it necessary to have the user actually use anything internal.\n\nIf pressed, `com.is_categorical_dtype(...)` would be ok\n\nwould not suggestion any mention/use of `com.CategoricalDType` (as an instance check) though - this is TOO internal.\n\nTo be honest this rarely should if ever come up. If the OP is trying to check individual dtypes for category then this is the wrong approach (and mostly certainly `.select_dtypes()` is the correct method.\n\nSo if someone wants to add a small doc section, ok.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63085876",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-63085876",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 63085876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDg1ODc2",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T16:03:27Z",
    "updated_at": "2014-11-14T16:03:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Shouldn't this work?\n\n```\nif s.cat: \n   print(\"It's a categorical!\")\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63086585",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-63086585",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 63086585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDg2NTg1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T16:07:44Z",
    "updated_at": "2014-11-14T16:08:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz \n\nthat will raise for non-cat types (as does `.dt`)\n\nprevents user error. I think this is correct (these _should_ raise)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63086606",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-63086606",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 63086606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDg2NjA2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T16:07:51Z",
    "updated_at": "2014-11-14T16:07:51Z",
    "author_association": "MEMBER",
    "body": "@JanSchulz no, because it gives a TypeError instead of False if it is not a categorical:\n\n```\nIn [143]: df\nOut[143]:\n          A  B\n0  0.299586  a\n1  0.335853  a\n2 -0.135405  b\n3  1.247738  b\n4 -0.232270  c\n\nIn [144]: bool(df.B.cat)\nOut[144]: True\n\nIn [145]: bool(df.A.cat)\n....\nTypeError: Can only use .cat accessor with a 'category' dtype\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/64992828",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-64992828",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 64992828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTkyODI4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-30T17:40:31Z",
    "updated_at": "2014-11-30T17:40:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think is an issue that should be raised to numpy\n\n```\nIn [9]: np.dtype('i8') == 'foo'\nTypeError: data type \"foo\" not understood\n```\n\nclosing on pandas side as this is sane on the pandas side\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65008057",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-65008057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 65008057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDA4MDU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T00:37:41Z",
    "updated_at": "2014-12-01T00:37:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "well, for all who care, I tried to push upstream. The user is now subject to random numpyisms that are really hard to fix downstream (impossible in this case).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65011563",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-65011563",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 65011563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDExNTYz",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T01:43:55Z",
    "updated_at": "2014-12-01T01:44:14Z",
    "author_association": "MEMBER",
    "body": "The string coercion for dtype equality _is_ is an ugly API, and @njsmith is right that we are probably misusing the API here with `dtype == 'category'`. The category dtype should probably include all the metadata for the type of category (i.e., the categories and sorted-ness). This is how it currently works in dynd, for example.\n\nSo it think it would indeed be better to do this differently. Perhaps `dtype.kind == 'C'`? Or we could even make `pd.is_categorical` part of the API. Both options are compatible with numpy and not too terrible, IMO (the first has even fewer characters).\n\nEither way, I think this should probably change evaluate to False (because the categories are different):\n\n```\nIn [9]: pd.Categorical([1]).dtype == pd.Categorical([2]).dtype\nOut[9]: True\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65036138",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-65036138",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 65036138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDM2MTM4",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T09:01:46Z",
    "updated_at": "2014-12-01T09:02:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "If the the last example should work (I think that was discussed during the design of Categoricals), then we have to put the `categories` into the dtype.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65050482",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-65050482",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 65050482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDUwNDgy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T11:12:56Z",
    "updated_at": "2014-12-01T11:12:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer I disagree.\n\nDyND does support categorical as a full-fledged datashape (see [here](http://nbviewer.ipython.org/github/ContinuumIO/dynd-python/blob/master/docs/notebooks/CategoricalType.ipynb). But using that impl is prob a ways away.\n\n`CategoricalDtype` is basically a super-type for categories. You _could_ implement a concrete sub-class that allows an categories comparison, and maybe we should do that; it is nicer from a theoretical point of view.\n\nBut to be honest its a fair amount of complexity and not sure how much gain from that.\n\nI am not sure anything is actually gained from explicty type checking with a `pd.is_categorical()`.\npandas is meant to be practical, and I think `s.dtype == 'category'` is useful and in the spirit of all other numpy dtype comparisons. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65200635",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-65200635",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 65200635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjAwNjM1",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T09:04:30Z",
    "updated_at": "2014-12-02T09:04:30Z",
    "author_association": "MEMBER",
    "body": "@jreback  It's one thing for pandas to take a pragmatic approach instead of waiting for a full solution, but designing an API that is incompatible with that full solution seems like a bad idea. `s.dtype == 'category'` is quite practical but it probably will/should break when we switch to dynd. The dynd API is certainly more flexible, but IMO Nathaniel raised some good points that will likely apply there as well.\n\nIn any case, perhaps it was premature to close this issue? `s.dtype != 'category'` does _not_ currently work -- do we have a preferred alternative? I do understand that you are frustrated with the response from upstream, but even if numpy changed things tomorrow this would still be an issue.\n\n(I do agree it's probably not worth refining `CategoricalDtype` given that it's pretty well hidden from the public API.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65221592",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-65221592",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 65221592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjIxNTky",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T12:05:53Z",
    "updated_at": "2014-12-02T12:05:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer I'll buy that `s.dtype != 'category'` should work. Pls create a separate issue for that.\n\nThis is closed because pandas has does all it can to facilitate `s.dtype == 'category'` and provides many solns which don't need that.\n\nChanging to use DyND type system will likely cause a bit of pain all around (good pain though). And will have to be revisited when DyND is more of a fixture.\n\nIf you have a better API idea which doesn't break anything, all ears.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65224657",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-65224657",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 65224657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjI0NjU3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T12:36:28Z",
    "updated_at": "2014-12-02T12:36:28Z",
    "author_association": "MEMBER",
    "body": "> This is closed because pandas has does all it can to facilitate `s.dtype == 'category'` and provides many solns which don't need that.\n\nThe reason I think this should not be closed already is the reason I initially opened this issue: just to document this issue in the categorical.rst docs. \nAnd this isn't done yet, and we all know `s.dtype == 'category'` has it problems (and whether this are limitations on the numpy side or not is another dicussion but does not really matter for the _current situation and users who have this problem_). \n\nSo I can do quick PR to include this in the docs, but therefore, just make a quick choice what I put in there:\n- `pd.core.common.is_categorical_dtype(df['cat'])`\n- `df['cat'].dtype.name == 'category'`\n- ..\n\nOr provide this `is_categorical_dtype` (or `is_categorical`) as a top-level function.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65225218",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-65225218",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 65225218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjI1MjE4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T12:42:04Z",
    "updated_at": "2014-12-02T12:42:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "well, neither of those are preferred at all\n\n```\ndf.dtypes == 'category'\ndf.select_dtypes(include=['category'])\n```\n\nare the most correct ways to do this\nif you want to mention in a very small not that `df['cat'].dtype.name == 'category'` then ok with that\nusing `com.is_categorical_dtype(...)` is actually ok too, but that is just so completely different for the avg user then it should be advertised.\n\nof course `s.dtype == 'category'` WILL work if its actually a categorical type.....\n\namzing that this works!\n\n```\nIn [2]: Series([1,2,3],dtype='int32').dtype=='i123'\nOut[2]: True\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/66619134",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-66619134",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 66619134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjE5MTM0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-11T13:34:47Z",
    "updated_at": "2014-12-11T13:34:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "going to bump this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/78177511",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8814#issuecomment-78177511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8814",
    "id": 78177511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTc3NTEx",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T00:23:32Z",
    "updated_at": "2015-03-11T00:23:32Z",
    "author_association": "MEMBER",
    "body": "Another option (see #9629) is that the preferred way to check if a series is categorical should be `hasattr(s, 'cat')`. This will work with pandas 0.16 or newer and sidesteps the numpy comparison issues...\n"
  }
]
