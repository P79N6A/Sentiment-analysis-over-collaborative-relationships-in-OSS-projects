[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182627254",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12286#issuecomment-182627254",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12286",
    "id": 182627254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjYyNzI1NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T23:03:37Z",
    "updated_at": "2016-02-10T23:03:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "you would have to show some examples of use.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182628542",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12286#issuecomment-182628542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12286",
    "id": 182628542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjYyODU0Mg==",
    "user": {
      "login": "tkluck",
      "id": 2110529,
      "node_id": "MDQ6VXNlcjIxMTA1Mjk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2110529?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkluck",
      "html_url": "https://github.com/tkluck",
      "followers_url": "https://api.github.com/users/tkluck/followers",
      "following_url": "https://api.github.com/users/tkluck/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkluck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkluck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkluck/subscriptions",
      "organizations_url": "https://api.github.com/users/tkluck/orgs",
      "repos_url": "https://api.github.com/users/tkluck/repos",
      "events_url": "https://api.github.com/users/tkluck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkluck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T23:05:13Z",
    "updated_at": "2016-02-10T23:05:13Z",
    "author_association": "NONE",
    "body": "Thanks @jreback for your comment. How does this look: https://github.com/tkluck/Text-CSV-Flatten/blob/master/t/Text-CSV-Flatten.t\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182629666",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12286#issuecomment-182629666",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12286",
    "id": 182629666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjYyOTY2Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T23:08:26Z",
    "updated_at": "2016-02-10T23:08:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "what I actually want to know is how would this improve the semantics of existing `pd.read_json` and/or `normalized_json` in a nice usecase. Further performance consideration are pretty important here.\n\nIdeally show a `read_json` operation and then doing something new/better with it. You can show pseudo (python) code inline here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182632094",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12286#issuecomment-182632094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12286",
    "id": 182632094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjYzMjA5NA==",
    "user": {
      "login": "tkluck",
      "id": 2110529,
      "node_id": "MDQ6VXNlcjIxMTA1Mjk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2110529?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkluck",
      "html_url": "https://github.com/tkluck",
      "followers_url": "https://api.github.com/users/tkluck/followers",
      "following_url": "https://api.github.com/users/tkluck/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkluck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkluck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkluck/subscriptions",
      "organizations_url": "https://api.github.com/users/tkluck/orgs",
      "repos_url": "https://api.github.com/users/tkluck/repos",
      "events_url": "https://api.github.com/users/tkluck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkluck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T23:20:11Z",
    "updated_at": "2016-02-10T23:20:11Z",
    "author_association": "NONE",
    "body": "I'll give some thought to come up with a pretty use-case. But I think what this shines in is mostly in non-pretty use cases: the case where you don't control the process that generates the json data for you, and it is almost-but-not-quite one of the formats that the existing functions support.\n\nMaybe the data is in the right format except that it is wrapped in an `{'data': <data>, 'error': null}`. Maybe you need to join (think sql join here) columns from two paths into your data structure.\n\nOf course, the solution to all of that is really quite simple: the boiler-plate loops that do the transformation are easy to write for everyone. But I think the patterns are much more concise.\n\nMy original use case is one where I want the hierarchical data to be exportable/downloadable as csv; the user can pass the pattern in the url (and we have default patterns for the most common reports). Basically, the patterns allow our users to do the exact data transformation that they want, on our servers, without actually executing any of their code. Of course, that's not really a concern for Pandas, but it gives some idea of where this idea is coming from.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182635742",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12286#issuecomment-182635742",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12286",
    "id": 182635742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjYzNTc0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T23:35:13Z",
    "updated_at": "2016-02-10T23:35:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tkluck I understand the general use case. Looking for a specific example of improved syntax.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182638920",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12286#issuecomment-182638920",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12286",
    "id": 182638920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjYzODkyMA==",
    "user": {
      "login": "tkluck",
      "id": 2110529,
      "node_id": "MDQ6VXNlcjIxMTA1Mjk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2110529?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkluck",
      "html_url": "https://github.com/tkluck",
      "followers_url": "https://api.github.com/users/tkluck/followers",
      "following_url": "https://api.github.com/users/tkluck/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkluck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkluck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkluck/subscriptions",
      "organizations_url": "https://api.github.com/users/tkluck/orgs",
      "repos_url": "https://api.github.com/users/tkluck/repos",
      "events_url": "https://api.github.com/users/tkluck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkluck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T23:48:23Z",
    "updated_at": "2016-02-10T23:48:23Z",
    "author_association": "NONE",
    "body": "Thanks for the reply! I'm not sure if I understand what you are looking for in a specific example. For example, would it be helpful if I translated one/a few of the unit test cases that I linked above to Python, and translate the expected output from CSV to a dataframe? Or are you (additionally) looking for a real-world data source that pandas currently cannot parse and that it would be able to with such an addition? Or something else entirely? Looking forward to your reply (but will likely read it only tomorrow; am in CET).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/182642154",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12286#issuecomment-182642154",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12286",
    "id": 182642154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjY0MjE1NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T00:03:00Z",
    "updated_at": "2016-02-11T00:03:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "you can certainly transform one of those tests. I am looking for a sample input, then the transforming operations that a user would do to make this tabular.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/183766943",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12286#issuecomment-183766943",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12286",
    "id": 183766943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mzc2Njk0Mw==",
    "user": {
      "login": "tkluck",
      "id": 2110529,
      "node_id": "MDQ6VXNlcjIxMTA1Mjk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2110529?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkluck",
      "html_url": "https://github.com/tkluck",
      "followers_url": "https://api.github.com/users/tkluck/followers",
      "following_url": "https://api.github.com/users/tkluck/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkluck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkluck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkluck/subscriptions",
      "organizations_url": "https://api.github.com/users/tkluck/orgs",
      "repos_url": "https://api.github.com/users/tkluck/repos",
      "events_url": "https://api.github.com/users/tkluck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkluck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-13T22:42:15Z",
    "updated_at": "2016-02-13T22:42:15Z",
    "author_association": "NONE",
    "body": "Here's an example:\n[from_json_suggestion.txt](https://github.com/pydata/pandas/files/129428/from_json_suggestion.txt)\n(my apologies for uploading this as a text file; github doesn't allow attaching `.py` files). The function `load_dataframe` is what would currently be needed to flatten the data in a certain way, the function `load_dataframe_new` is what I'm proposing.\n\nI've now realized that this may be more generally useful than just with json data. There's quite some methods that take hierarchical data of some form and transform it into a dataframe: `DataFrame.from_dict`, `.from_records`, `.from_items`. The `orient` parameter gives each of those a few different options. Here's how they map to patterns:\n- `from_dict(..., orient=\"columns\")` is the same as can be gotten from the pattern `.*.<index_name>`\n- `from_dict(..., orient=\"index\")` is the same as `.<index_name>.*`\n- `from_records(...)` is the same as `.<index_name>.*`\n- `from_items(..., orient=\"columns\")` is the same as `.*.1.<index_name>`\n- `from_items(..., columns=..., orient=\"index\")` is (almost) the same as `.<index>.0 .<index>.1.*` (which also needs a `column_name=...` argument).\n\nObviously, I'm not suggesting replacing those or anything; I'm just trying to show how versatile this pattern system is.\n"
  }
]
