[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/460810386",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25168#issuecomment-460810386",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25168",
    "id": 460810386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDgxMDM4Ng==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-05T21:27:42Z",
    "updated_at": "2019-02-05T21:27:51Z",
    "author_association": "MEMBER",
    "body": "What kind of performance are you seeing if just using the NumPy array alone? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/466266940",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25168#issuecomment-466266940",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25168",
    "id": 466266940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjI2Njk0MA==",
    "user": {
      "login": "nmusolino",
      "id": 3150861,
      "node_id": "MDQ6VXNlcjMxNTA4NjE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3150861?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nmusolino",
      "html_url": "https://github.com/nmusolino",
      "followers_url": "https://api.github.com/users/nmusolino/followers",
      "following_url": "https://api.github.com/users/nmusolino/following{/other_user}",
      "gists_url": "https://api.github.com/users/nmusolino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nmusolino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nmusolino/subscriptions",
      "organizations_url": "https://api.github.com/users/nmusolino/orgs",
      "repos_url": "https://api.github.com/users/nmusolino/repos",
      "events_url": "https://api.github.com/users/nmusolino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nmusolino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-22T04:11:31Z",
    "updated_at": "2019-02-22T04:11:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to clarify, are you grouping on a Decimal column?\r\n\r\nI am seeing that a Decimal column does impose a performance penalty, but the case below has runtime of 1.5 seconds for 1,000,000 rows and 4 columns, which is much less than 70 seconds.\r\n\r\nCan you provide a runnable example that exhibits a 70-second groupby time?  \r\n\r\nI suspect that most of the extra cost from Decimal values comes from allocation costs during while assembling a data frame for each group.\r\n\r\n```ipython\r\nIn [5]: N = 1000000                                                                                                                                                                                                                                                                                                                                                                                                                   \r\n\r\nIn [21]: df = pandas.DataFrame({'a': list(itertools.islice(itertools.cycle([0, 1, 2, 3]), N)), 'b': list(range(N))})                                                                                                                                                                                                                                                                                                                  \r\n\r\nIn [22]: df = df.assign(d=df['a'].apply(decimal.Decimal), e=df['b'].apply(decimal.Decimal))                                                                                                                                                                                                                                                                                                                                           \r\n\r\nIn [27]: df.dtypes                                                                                                                                                                                                                                                                                                                                                                                                                    \r\nOut[27]: \r\na     int64\r\nb     int64\r\nd    object\r\ne    object\r\ndtype: object\r\n\r\nIn [23]: df.head(6)                                                                                                                                                                                                                                                                                                                                                                                                                   \r\nOut[23]: \r\n   a  b  d  e\r\n0  0  0  0  0\r\n1  1  1  1  1\r\n2  2  2  2  2\r\n3  3  3  3  3\r\n4  0  4  0  4\r\n5  1  5  1  5\r\n\r\n# Base case:  group by int and sum int column. \r\nIn [28]: %time df.groupby('a').sum()                                                                                                                                                                                                                                                                                                                                                                                                  \r\nCPU times: user 55.5 ms, sys: 6.39 ms, total: 61.9 ms\r\nWall time: 61.3 ms\r\nOut[28]: \r\n              b\r\na              \r\n0  124999500000\r\n1  124999750000\r\n2  125000000000\r\n3  125000250000\r\n\r\n# Groupby int and sum decimal values.\r\nIn [24]: %time df.groupby('a').apply(lambda df: df.sum())                                                                                                                                                                                                                                                                                                                                                                             \r\nCPU times: user 1.45 s, sys: 48.4 ms, total: 1.5 s\r\nWall time: 1.5 s\r\nOut[24]: \r\n          a             b         d             e\r\na                                                \r\n0       0.0  1.249995e+11       0.0  1.249995e+11\r\n1  250000.0  1.249998e+11  250000.0  1.249998e+11\r\n2  500000.0  1.250000e+11  500000.0  1.250000e+11\r\n3  750000.0  1.250002e+11  750000.0  1.250002e+11\r\n\r\n# Group by decimal column.\r\nIn [26]: %time df.groupby('d').apply(lambda df: df.sum())                                                                                                                                                                                                                                                                                                                                                                             \r\nCPU times: user 1.6 s, sys: 49.2 ms, total: 1.65 s\r\nWall time: 1.65 s\r\nOut[26]: \r\n          a             b         d             e\r\nd                                                \r\n0       0.0  1.249995e+11       0.0  1.249995e+11\r\n1  250000.0  1.249998e+11  250000.0  1.249998e+11\r\n2  500000.0  1.250000e+11  500000.0  1.250000e+11\r\n3  750000.0  1.250002e+11  750000.0  1.250002e+11\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/466362086",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25168#issuecomment-466362086",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25168",
    "id": 466362086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjM2MjA4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-22T11:11:36Z",
    "updated_at": "2019-02-22T11:11:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "you can go do a lot better by using DecimalArray here"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/466372163",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25168#issuecomment-466372163",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25168",
    "id": 466372163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjM3MjE2Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-22T11:54:18Z",
    "updated_at": "2019-02-22T11:54:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Our DecimalArray isn't public FYI.  Perhaps you mean using pyarrow's and\nfletcher?\n\nOn Fri, Feb 22, 2019 at 5:11 AM Jeff Reback <notifications@github.com>\nwrote:\n\n> you can go do a lot better by using DecimalArray here\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/25168#issuecomment-466362086>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIu-NP86QDha1Ehja94VfDMrMd-YSks5vP9BtgaJpZM4akGcL>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/468117293",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25168#issuecomment-468117293",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25168",
    "id": 468117293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODExNzI5Mw==",
    "user": {
      "login": "joetl",
      "id": 47369210,
      "node_id": "MDQ6VXNlcjQ3MzY5MjEw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/47369210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joetl",
      "html_url": "https://github.com/joetl",
      "followers_url": "https://api.github.com/users/joetl/followers",
      "following_url": "https://api.github.com/users/joetl/following{/other_user}",
      "gists_url": "https://api.github.com/users/joetl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joetl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joetl/subscriptions",
      "organizations_url": "https://api.github.com/users/joetl/orgs",
      "repos_url": "https://api.github.com/users/joetl/repos",
      "events_url": "https://api.github.com/users/joetl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joetl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-28T02:56:24Z",
    "updated_at": "2019-02-28T02:58:24Z",
    "author_association": "NONE",
    "body": "The performance is very slow if the number of groups is very higher.\r\nIn the above example if we groupby on \"b\" instead \"a\"  it takes minutes as to milliseconds. For a given record count if the number of groups increases the aggregation is taking way longer on decimal columns\r\n>>> import pandas as pd\r\n>>> import itertools\r\n>>> N = 1000000\r\n>>> df = pd.DataFrame({'a': list(itertools.islice(itertools.cycle([0, 1, 2, 3]), N)), 'b': list(range(N))})\r\n>>> import decimal\r\n>>> df = df.assign(d=df['a'].apply(decimal.Decimal), e=df['b'].apply(decimal.Decimal))\r\n>>> df.dtypes\r\na     int64\r\nb     int64\r\nd    object\r\ne    object\r\ndtype: object\r\n>>> time();df.groupby(\"a\").d.agg(sum);time()\r\n1551322304.14313\r\na\r\n0         0\r\n1    250000\r\n2    500000\r\n3    750000\r\nName: d, dtype: object\r\n1551322304.535903\r\n>>> time();df.groupby(\"b\").d.agg(sum);time()\r\n1551322322.8474317\r\nb\r\n0         0\r\n1         1\r\n2         2\r\n3         3\r\n4         0\r\n5         1\r\n6         2\r\n7         3\r\n8         0\r\n9         1\r\n10        2\r\n11        3\r\n12        0\r\n13        1\r\n14        2\r\n15        3\r\n16        0\r\n17        1\r\n18        2\r\n19        3\r\n20        0\r\n21        1\r\n22        2\r\n23        3\r\n24        0\r\n25        1\r\n26        2\r\n27        3\r\n28        0\r\n29        1\r\n         ..\r\n999970    2\r\n999971    3\r\n999972    0\r\n999973    1\r\n999974    2\r\n999975    3\r\n999976    0\r\n999977    1\r\n999978    2\r\n999979    3\r\n999980    0\r\n999981    1\r\n999982    2\r\n999983    3\r\n999984    0\r\n999985    1\r\n999986    2\r\n999987    3\r\n999988    0\r\n999989    1\r\n999990    2\r\n999991    3\r\n999992    0\r\n999993    1\r\n999994    2\r\n999995    3\r\n999996    0\r\n999997    1\r\n999998    2\r\n999999    3\r\nName: d, dtype: object\r\n1551322486.930871"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/468125131",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25168#issuecomment-468125131",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25168",
    "id": 468125131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODEyNTEzMQ==",
    "user": {
      "login": "joetl",
      "id": 47369210,
      "node_id": "MDQ6VXNlcjQ3MzY5MjEw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/47369210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joetl",
      "html_url": "https://github.com/joetl",
      "followers_url": "https://api.github.com/users/joetl/followers",
      "following_url": "https://api.github.com/users/joetl/following{/other_user}",
      "gists_url": "https://api.github.com/users/joetl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joetl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joetl/subscriptions",
      "organizations_url": "https://api.github.com/users/joetl/orgs",
      "repos_url": "https://api.github.com/users/joetl/repos",
      "events_url": "https://api.github.com/users/joetl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joetl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-28T03:39:30Z",
    "updated_at": "2019-02-28T03:39:30Z",
    "author_association": "NONE",
    "body": "I am just looking at Decimal Array. We get protobuf object which we convert to dict and then to pandas dataframe.  Is there a small example to convert the decimal columns as decimal array when creating pandas dataframe from dictionary"
  }
]
