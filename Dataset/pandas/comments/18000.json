[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340444136",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18000#issuecomment-340444136",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18000",
    "id": 340444136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ0NDEzNg==",
    "user": {
      "login": "sangramga",
      "id": 9406431,
      "node_id": "MDQ6VXNlcjk0MDY0MzE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9406431?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sangramga",
      "html_url": "https://github.com/sangramga",
      "followers_url": "https://api.github.com/users/sangramga/followers",
      "following_url": "https://api.github.com/users/sangramga/following{/other_user}",
      "gists_url": "https://api.github.com/users/sangramga/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sangramga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sangramga/subscriptions",
      "organizations_url": "https://api.github.com/users/sangramga/orgs",
      "repos_url": "https://api.github.com/users/sangramga/repos",
      "events_url": "https://api.github.com/users/sangramga/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sangramga/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T13:31:22Z",
    "updated_at": "2017-10-30T13:32:41Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche  I would like to make this issue to be my first contribution. I have looked at the source code and ready to take it up. \r\nAlthough I have unable to see as to why and how  a Boolean list <code>self.indexer </code> is  interpreted as integer [0,1,0,1,...] values?\r\nIs it possible to resolve this issue by creating a new indexer list like <code>self.int_indexer</code> for benchmarking? What do you have in mind?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340446161",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18000#issuecomment-340446161",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18000",
    "id": 340446161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ0NjE2MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T13:38:50Z",
    "updated_at": "2017-10-30T13:38:50Z",
    "author_association": "MEMBER",
    "body": "> Is it possible to resolve this issue by creating a new indexer list like self.int_indexer for benchmarking? What do you have in mind?\r\n\r\nYes, although I think you can just replace the existing `self.indexer` with a new list of ints instead of bools (we don't need to keep the old bench of using booleans).\r\n\r\n> Although I have unable to see as to why and how a Boolean list self.indexer is interpreted as integer [0,1,0,1,...] values?\r\n\r\nIf you try to run the code (or similar), you will see:\r\n\r\n```\r\nIn [84]: s = pd.Series(range(5))\r\n\r\nIn [85]: s.take([True, False, True, False, True])\r\nOut[85]: \r\n1    1\r\n0    0\r\n1    1\r\n0    0\r\n1    1\r\ndtype: int64\r\n\r\nIn [86]: s.loc[[True, False, True, False, True]]\r\nOut[86]: \r\n0    0\r\n2    2\r\n4    4\r\ndtype: int64\r\n```\r\n\r\nso take interprets the True, False as 0, 1  and not as a mask (like is done in `loc`)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344968908",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18000#issuecomment-344968908",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18000",
    "id": 344968908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDk2ODkwOA==",
    "user": {
      "login": "sangramga",
      "id": 9406431,
      "node_id": "MDQ6VXNlcjk0MDY0MzE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9406431?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sangramga",
      "html_url": "https://github.com/sangramga",
      "followers_url": "https://api.github.com/users/sangramga/followers",
      "following_url": "https://api.github.com/users/sangramga/following{/other_user}",
      "gists_url": "https://api.github.com/users/sangramga/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sangramga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sangramga/subscriptions",
      "organizations_url": "https://api.github.com/users/sangramga/orgs",
      "repos_url": "https://api.github.com/users/sangramga/repos",
      "events_url": "https://api.github.com/users/sangramga/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sangramga/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T16:01:21Z",
    "updated_at": "2017-11-17T05:49:10Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche I made the following changes in `indexing.IndexingMethods.time_take_intindex` \r\n\r\nReplaced the boolean list `indexer` with randomized integer list\r\n`self.indexer = list(np.random.randint(0, 100000, size=100000))`\r\nDoes this resolve the issue? \r\n\r\nAlso where should I add Tests? Should I add/modify any tests? \r\n"
  }
]
