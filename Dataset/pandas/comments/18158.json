[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/342632230",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18158#issuecomment-342632230",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18158",
    "id": 342632230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjYzMjIzMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T21:43:20Z",
    "updated_at": "2017-11-07T21:43:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is not a pandas issue, rather numpy is broken.\r\n\r\n```\r\nIn [1]: values = ['a', 'b', np.nan]\r\n   ...: \r\n   ...: np.array(values)\r\n   ...: \r\nOut[1]: \r\narray(['a', 'b', 'nan'],\r\n      dtype='<U3')\r\n\r\n```\r\n\r\nbut is correct if object dtype is specified.\r\n```\r\nIn [2]: values = ['a', 'b', np.nan]\r\n   ...: \r\n   ...: np.array(values, dtype=object)\r\n   ...: \r\n   ...: \r\nOut[2]: array(['a', 'b', nan], dtype=object)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/342632580",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18158#issuecomment-342632580",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18158",
    "id": 342632580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjYzMjU4MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T21:44:27Z",
    "updated_at": "2017-11-07T21:44:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is why we have ``_ensure_arraylike`` FYI, but if something comes to pandas *already* as an incorrectly converted numpy array we are out-of-luck (yes in theory you *could* scan for 'nan', but that's not a great idea)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/342655026",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18158#issuecomment-342655026",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18158",
    "id": 342655026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjY1NTAyNg==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T23:10:27Z",
    "updated_at": "2017-11-07T23:13:38Z",
    "author_association": "MEMBER",
    "body": "Ah, should have checked the underlying numpy array first.\r\n\r\n`_ensure_arraylike` is helpful.  I created a 2d specific version of it (for the `df.astype('category')` PR), but looks like I wasn't exactly duplicating the logic when it comes to the NaN as a string problem, which is what ultimately led to me opening this issue.\r\n\r\nOr should I not have a 2d specific version, and just try to patch `_ensure_arraylike` itself?  The issue I'm running into is when a list of lists gets passed, it gives a numpy array of lists instead of a 2d numpy array:\r\n\r\n```python\r\nIn [22]: values = [['a', 'b', 'c', 'a'], ['b', np.nan, 'd', 'd']]\r\n\r\nIn [23]: _ensure_arraylike(values)\r\nOut[23]: array([list(['a', 'b', 'c', 'a']), list(['b', nan, 'd', 'd'])], dtype=object)\r\n```\r\n\r\nwhereas I'd like to get output along the lines of:\r\n```python\r\nIn [24]: np.array([_ensure_arraylike(x) for x in values])\r\nOut[24]:\r\narray([['a', 'b', 'c', 'a'],\r\n       ['b', nan, 'd', 'd']], dtype=object)\r\n```"
  }
]
