[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385713988",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-385713988",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 385713988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTcxMzk4OA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-05-01T16:21:18Z",
    "updated_at": "2018-05-01T19:20:53Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20889?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`master@93e7123`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `93.81%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/20889/graphs/tree.svg?token=eZ4WkYLtcO&src=pr&width=650&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/20889?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##             master   #20889   +/-   ##\n=========================================\n  Coverage          ?   91.78%           \n=========================================\n  Files             ?      153           \n  Lines             ?    49423           \n  Branches          ?        0           \n=========================================\n  Hits              ?    45362           \n  Misses            ?     4061           \n  Partials          ?        0\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.17% <93.81%> (?)` | |\n| #single | `41.89% <10.3%> (?)` | |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/20889?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/20889/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `84.43% <100%> (ø)` | |\n| [pandas/core/arrays/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/20889/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2Jhc2UucHk=) | `84.7% <100%> (ø)` | |\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/20889/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `96.59% <91.66%> (ø)` | |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/20889/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `93.87% <91.66%> (ø)` | |\n| [pandas/core/ops.py](https://codecov.io/gh/pandas-dev/pandas/pull/20889/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvb3BzLnB5) | `96.19% <94.11%> (ø)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20889?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20889?src=pr&el=footer). Last update [93e7123...8aea5cf](https://codecov.io/gh/pandas-dev/pandas/pull/20889?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386804149",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-386804149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 386804149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjgwNDE0OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-05T13:01:10Z",
    "updated_at": "2018-05-05T13:01:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "just an FYI, rather than a single PR, this needs to be a series of smaller, self-consistent PR's. much easier to review and revise, otherwise this will get bogged down."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386806967",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-386806967",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 386806967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjgwNjk2Nw==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-05T13:48:28Z",
    "updated_at": "2018-05-05T13:48:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback  Right now, I had to include some code from an early version of #20885.  Once that is approved, that will shorten this one a little bit. I can then first submit something that deals with #20825 . And once that is approved, I can submit the things related to ops.\r\n\r\nLet me know if this plan works for you."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390540871",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-390540871",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 390540871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDU0MDg3MQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T03:02:49Z",
    "updated_at": "2018-05-21T03:02:49Z",
    "author_association": "MEMBER",
    "body": "> just an FYI, rather than a single PR, this needs to be a series of smaller, self-consistent PR's. much easier to review and revise, otherwise this will get bogged down.\r\n\r\n@Dr-Irv There are a bunch of planned/discussed steps between the status quo and the functionality in this PR.  If you're up to help with the whole transition that'd be great.  If you're mostly interested in getting this specific feature in place ASAP, we can talk about workarounds that you can apply in the interim.\r\n\r\n@jreback LMK if I'm overstepping by offering to shepherd this process.  It's up my alley."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390687553",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-390687553",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 390687553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDY4NzU1Mw==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T15:23:31Z",
    "updated_at": "2018-05-21T15:23:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbrockmendel I'd like both.  I need the operator functionality for `ExtensionArray` .  So if you guys don't want to accept this PR, then I'd like to see the workaround so I can get my use case working, and since I have put a lot of thought into getting this PR to work, I can also help with the transition."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390688792",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-390688792",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 390688792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDY4ODc5Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T15:27:31Z",
    "updated_at": "2018-05-21T15:27:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @jreback LMK if I'm overstepping by offering to shepherd this process. It's up my alley.\r\n\r\nI'd appreciate your expertise here @jbrockmendel.\r\n\r\nFWIW, I'll have some availability this week, but very little next week."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390724979",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-390724979",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 390724979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDcyNDk3OQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T17:30:49Z",
    "updated_at": "2018-05-21T17:30:49Z",
    "author_association": "MEMBER",
    "body": "> then I'd like to see the workaround so I can get my use case working\r\n\r\nThe workaround I have in mind assumes you are mostly interested in patching Series arithmetic and logical operators.  Is that accurate?\r\n\r\n> and since I have put a lot of thought into getting this PR to work, I can also help with the transition\r\n\r\n@Dr-Irv sounds good.  The first thing I'd suggest is figuring out if there is anything in this PR that is not strictly necessary for the feature(s) you need or can otherwise be separated into independent PRs.  Based on a very quick glance it looks like the tests for `get` or `combine` might be independent of the rest of the PR.\r\n\r\nAre the changes to boolean ops logically independent of the changes to arithmetic ops?  If so, I suggest focusing on the boolean ops first, since they aren't _nearly_ so wound up with Index vs Series shenanigans.  There might be something in #19795 worth resurrecting.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390730234",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-390730234",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 390730234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDczMDIzNA==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T17:49:21Z",
    "updated_at": "2018-05-21T17:49:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbrockmendel \r\n> The workaround I have in mind assumes you are mostly interested in patching Series arithmetic and logical operators. Is that accurate?\r\n\r\nYes, that is correct.  I also need the results of arithmetic and logical operators to be Series of objects.\r\n\r\nThis PR has 3 things in it. \r\n\r\n1. Code from #20885 that was still in review mode when I submitted the present PR.  The tests for `get` that you mention fall into that category.  I can remove that to make this PR more up-to-date.\r\n2. Fixes to support `combine` correctly.  This addresses #20825 .  I can break that out into a separate PR.  But that is needed for testing the operator stuff.\r\n3. The code to support the arithmetic and logical operators for `ExtensionArray`.  It is the same code that does both.\r\n\r\nSo, if you want, I can create a new PR that only works on `combine`.  Then this one we are discussing here will only have the operator support, the meat of which is in the new internal method `dispatch_to_extension_ops`.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390810965",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-390810965",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 390810965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDgxMDk2NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T23:16:59Z",
    "updated_at": "2018-05-21T23:16:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI I have this almost all implemented for integer na support: https://github.com/jreback/pandas/commit/6fc19f9c6f01f0fd42d0551aa1defd6f20bc3fb9 (this is a bit stale), will be updated soon."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391158666",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391158666",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391158666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTE1ODY2Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-22T22:17:55Z",
    "updated_at": "2018-05-22T22:27:36Z",
    "author_association": "MEMBER",
    "body": "I think it is still worthwhile to push forward this PR to implement this separately from the integer-array PR (which might take more discussion, and it also a very big one right now). \r\n\r\n@jreback can you give more concrete feedback on the way @Dr-Irv implemented things here, based on what you did in the other PR? (for the changes in `ops.py`)\r\n(once the unrelated changes are removed (for `combine` and `get`), I don't think this PR needs to be splitted)\r\n\r\n> There are a bunch of planned/discussed steps between the status quo and the functionality in this PR. \r\n\r\n@jbrockmendel can you elaborate on this a bit? (regarding this PR, what would you do instead)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391216818",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391216818",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391216818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTIxNjgxOA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-23T04:30:15Z",
    "updated_at": "2018-05-23T04:30:15Z",
    "author_association": "MEMBER",
    "body": ">> There are a bunch of planned/discussed steps between the status quo and the functionality in this PR.\r\n\r\n> can you elaborate on this a bit? (regarding this PR, what would you do instead)\r\n\r\n@jorisvandenbossche \r\n- I'm pretty sure there is some test code here that is orthogonal to the rest of the PR; I'd separate that out to make review easier.\r\n- The place to define the element-by-element fallback (essentially object-dtype behavior) is in the downstream EA subclass.\r\n- Eventually _all_ of the arith/comparison Series ops are intended to dispatch to their underlying EA objects (possibly via `self._data.blocks[0])`.  (This will render dispatch_to_index_op unnecessary)\r\n- Some steps towards making that happen include:\r\n  - Something like #21160 (and analogues for float, bool, object, datetimelike (#19902), ... dtypes)\r\n  - Align remaining mismatches between Series vs Index arithmetic/comparison behavior #19322, #18824, #19369.  Note 19322 is the most relevant one for the Integer EA case.\r\n  - Categorical EA (and possibly the base class) should implement the relevant ops, even if they just raise.  They also need to figure out some inconsistencies between Categorical vs CategoricalIndex behavior (#19513)\r\n - As mentioned in a comment above, the Series bool ops need some serious work, and I'd much prefer to have that squared away before trying to make this transition. #19792, #19759\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391278950",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391278950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391278950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTI3ODk1MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-23T09:15:44Z",
    "updated_at": "2018-05-23T09:15:44Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel but is it needed to fix all of this (make sure all of Series ops are dispatched correctly etc, resolve duplication between index and series, ...) before getting basic ops working for ExtensionArrays? \r\nIt's true there is a lot of work to do the full internal transition, but that doesn't mean we can already support basic ops for external extension arrays."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391300815",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391300815",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391300815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTMwMDgxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-23T10:33:57Z",
    "updated_at": "2018-05-23T10:33:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "echo the above comments, this has a lot of othrogonal changes going on. let's strip out things to the minimal changes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391361088",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391361088",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391361088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTM2MTA4OA==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-23T14:09:29Z",
    "updated_at": "2018-05-23T14:09:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "In response to @jbrockmendel:\r\n\r\n> The place to define the element-by-element fallback (essentially object-dtype behavior) is in the downstream EA subclass.\r\n\r\nI really disagree with this.  If you already have the operators defined for the `ExtensionDtype`, why should you have to implement the operators for `ExtensionArray`?  My implementation gives the person implementing an `ExtensionArray` subclass the option of defining the operators at the EA level, or letting the operators defined (if they are defined) for the `ExtensionDtype` do all of the work."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391455260",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391455260",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391455260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTQ1NTI2MA==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-23T18:43:02Z",
    "updated_at": "2018-05-23T18:43:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Since you wanted something smaller, I have split off the code that fixes #20825 into #21183 .  This is to handle the issue with `combine`.  I suggest that people reviewing this PR look at #21183 first.  Once it is accepted, I will then update this PR to only have the ops functionality.\r\n\r\nNote that the `combine` bug has to be fixed in order for the tests in this PR to work right.  So hopefully you will accept #21183, and then this PR for ops will end up being smaller.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391482553",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391482553",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391482553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTQ4MjU1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-23T20:18:16Z",
    "updated_at": "2018-05-23T20:18:16Z",
    "author_association": "MEMBER",
    "body": "Why do the tests need the combine fix?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391485103",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391485103",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391485103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTQ4NTEwMw==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-23T20:27:18Z",
    "updated_at": "2018-05-23T20:27:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche To test the operator functionality, I am leveraging the code that tests operators for `Series` that is in `pandas/tests/series/test_operators.py:TestSeriesOperators`, and those tests use `combine` to verify the results.  By fixing the bug in `combine`, then the tests for operators are leveraging existing test code."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391571139",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391571139",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391571139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTU3MTEzOQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-24T02:52:05Z",
    "updated_at": "2018-05-24T02:52:05Z",
    "author_association": "MEMBER",
    "body": "> I really disagree with this. If you already have the operators defined for the ExtensionDtype, why should you have to implement the operators for ExtensionArray? My implementation gives the person implementing an ExtensionArray subclass the option of defining the operators at the EA level, or letting the operators defined (if they are defined) for the ExtensionDtype do all of the work.\r\n\r\nImplementing it on the DType is fine, I guess.  It should be _really easy_ to go from there to implementing it on the EA subclass.  Once that is done, the changes to `core.ops` (and I hope/think `Series._binop`) can pretty much all be skipped and just call `dispatch_to_index_op` with the appropriate EA subclass (this is already done with pd.Categorical on L1193)\r\n\r\nIn most cases returning `NotImplemented` means \"try the reversed operation\".  I'd like to avoid giving that return value a double meaning if possible."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391624021",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391624021",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391624021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTYyNDAyMQ==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-24T07:56:15Z",
    "updated_at": "2018-05-24T07:56:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbrockmendel You wrote:\r\n\r\n> Implementing it on the DType is fine, I guess. It should be _really easy_ to go from there to implementing it on the EA subclass. \r\n\r\nAre you suggesting that for someone implementing their own EA subclass, it should be really easy for _them_ to implement the operators on the EA subclass?  Or are you suggesting that pandas provide default operators for `ExtensionArray` that are defined based on the operators on the `ExtensionDtype`? If the former, I don't see how we can do that.  If the latter, the implementation in this PR does that.\r\n\r\nThe changes in this PR that are in `Series._binop` are now moved to #21183 in order to make `combine` work.\r\n\r\nI can investigate whether `dispatch_to_index_ops` can do what `dispatch_to_extension_ops` does, but I'm doubtful, because my goal was to allow supporting the operators whether they were defined by the user at the EA subclass level or at the `ExtensionDtype` subclass level.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391721351",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391721351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391721351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTcyMTM1MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-24T13:48:39Z",
    "updated_at": "2018-05-24T13:48:39Z",
    "author_association": "MEMBER",
    "body": "To try to take a step back from the discussion:\r\n\r\n- We want that it is easy for ExtensionArray ops to just fall back to the scalar ops (the `ExtensionDtype.type` objects might already define ops, so use that). \r\n  - For this reason, @Dr-Irv implemented this fall back inside `ops.py` in case the ExtensionArray has no method for the specific `op`.\r\n- On the other hand, we can also argue that it might be easier that the ops are always defined on the ExtensionArray. That would make the implementation inside `ops.py` a lot easier, as the fallback to the `ExtensionDtype.type` scalars could be removed.\r\n- I would like to add that for my use case, I want that it is possible for the ExtensionArray to indicate that *no* such fallback should be tried (as this can be expensive). Defining the op and letting it raise might be enough for that (however, currently `TypeError` is catched and then still the fallback is tried. I think we should not do that).\r\n\r\nGiven the above, I think we can try to harmonize the goal of making this fallback both easy as explicit (1 and 3), and keep the ops defined on the ExtensionArray and `ops.py` simple (2). \r\nWhat if we **provide a mixin that defines all those basic fallbacks?** In that case, if the extension author decides it would like to enable the fallback, it can simply inherit from the mixin. Also, if then the behaviour of certain methods (like the booleans) are not exactly what he/she wants, just overwrite that specific method again in your array class.\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391727640",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391727640",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391727640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTcyNzY0MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-24T14:06:05Z",
    "updated_at": "2018-05-24T14:06:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Regarding the elementwise fallback to `ExtensionDtype.type`, isn't that relatively easy to define on the EA subclass?\r\n\r\n```python\r\n# in MyEASubclass\r\ndef __lt__(self, other):\r\n    return np.array([a < b for a, b in zip(self, other)])\r\n```\r\n\r\nlikewise for the other methods.\r\n\r\n> I would like to add that for my use case, I want that it is possible for the ExtensionArray to indicate that no such fallback should be tried (as this can be expensive).\r\n\r\nFor cyberpandas, the scalar fall back would be incorrect. We use IPAddress(0) as the NA value, so comparisions with it should be NA to match pandas behavior.\r\n\r\n```python\r\nIn [3]: arr = IPArray([0, 1, 2, 3])\r\n\r\nIn [4]: arr <= arr\r\nOut[4]: array([False,  True,  True,  True])\r\n\r\nIn [5]: arr.astype(object) <= arr.astype(object)\r\nOut[5]: array([ True,  True,  True,  True])\r\n```\r\n\r\nA mixin seems like a reasonable compromise."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391732432",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391732432",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391732432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTczMjQzMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-24T14:19:48Z",
    "updated_at": "2018-05-24T14:19:48Z",
    "author_association": "MEMBER",
    "body": "> Regarding the elementwise fallback to ExtensionDtype.type, isn't that relatively easy to define on the EA subclass?\r\n\r\nIt's indeed relatively straightforward, although a bit more complicated as you small example if you want to cover all cases (scalar vs array `other` etc). Therefore providing a default implementation available as mixin would make this easier."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391760609",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391760609",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391760609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTc2MDYwOQ==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-24T15:38:10Z",
    "updated_at": "2018-05-24T15:38:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger You wrote:\r\n\r\n> Regarding the elementwise fallback to ExtensionDtype.type, isn't that relatively easy to define on the EA subclass?\r\n\r\nYes, but having to do it for *all* of the operators is painful.  What I implemented avoids that.  Take the example of `DecimalArray`.  You'd like to have to avoid implementing every single operator supported by `decimal.Decimal` in `DecimalArray`.\r\n\r\nI like the idea of using a mixin as proposed by @jorisvandenbossche.  However, it seems that I ought to wait until @jreback finishes #21191 and #21160 and it is merged in, and then I can see where things are and make modifications as needed for my use case."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391771306",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391771306",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391771306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTc3MTMwNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-24T16:08:58Z",
    "updated_at": "2018-05-24T16:08:58Z",
    "author_association": "MEMBER",
    "body": "> Yes, but having to do it for all of the operators is painful.\r\n\r\nIt should be possible to write a function that generates all the different operators (which is how we often do it inside pandas). But we can use this approach for the mixin.\r\n\r\n> However, it seems that I ought to wait until @jreback finishes #21191 and #21160 and it is merged in, and then I can see where things are and make modifications as needed for my use case.\r\n\r\nI don't think you need to wait with eg writing the mixin with fallback (as that use case will not be covered in #21191)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391810005",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391810005",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391810005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTgxMDAwNQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-24T18:13:37Z",
    "updated_at": "2018-05-24T18:13:37Z",
    "author_association": "MEMBER",
    "body": "@Dr-Irv \r\n> Are you suggesting that for someone implementing their own EA subclass, it should be really easy for them to implement the operators on the EA subclass?\r\n\r\nYes, this.\r\n\r\n> Or are you suggesting that pandas provide default operators for ExtensionArray that are defined based on the operators on the ExtensionDtype?\r\n\r\nThe element-by-element implementation in the PR is effectively the object-dtype behavior, and I'd be fine with that being a default at the BaseArray level (@TomAugspurger thoughts?  It would also be reasonable for BaseArray to implement these ops to raise `com.AbtractMethodError`).\r\n\r\n> The changes in this PR that are in Series._binop are now moved to #21183 in order to make combine work.\r\n\r\nI'll take a closer look at #21883, thanks.\r\n\r\nBTW, thanks for pushing forward on this.  You've clearly put some thought+effort into this and it is very much appreciated.\r\n\r\n@jorisvandenbossche \r\n> but is it needed to fix all of this (make sure all of Series ops are dispatched correctly etc, resolve duplication between index and series, ...) before getting basic ops working for ExtensionArrays?\r\n\r\nNot at all, the steps I mentioned were very much for the \"what would you do instead\" question.  I _do_ think that implementing ops at the array level will minimize duplicated effort in `core.ops` (a lot of effort went in to un-tangling older special-casing in core.ops, a process which I'm not eager to repeat).\r\n\r\n> What if we provide a mixin that defines all those basic fallbacks? In that case, if the extension author decides it would like to enable the fallback, it can simply inherit from the mixin. Also, if then the behaviour of certain methods (like the booleans) are not exactly what he/she wants, just overwrite that specific method again in your array class.\r\n\r\n+1."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391820025",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-391820025",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 391820025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTgyMDAyNQ==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-24T18:47:19Z",
    "updated_at": "2018-05-24T18:47:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "My plan right now is to look at the mixin approach on May 29 or later.\r\n\r\nWhen I created this PR, the whole point was to inspire discussion on the design and implementation, so I think this discussion has been healthy in terms of us moving forward.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/393270389",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20889#issuecomment-393270389",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20889",
    "id": 393270389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzI3MDM4OQ==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-30T18:33:49Z",
    "updated_at": "2018-05-30T18:33:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing this, as there is a new proposed implementation in #21261 .\r\n"
  }
]
