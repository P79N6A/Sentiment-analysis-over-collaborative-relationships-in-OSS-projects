[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377792293",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20561#issuecomment-377792293",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20561",
    "id": 377792293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Nzc5MjI5Mw==",
    "user": {
      "login": "peterpanmj",
      "id": 13047435,
      "node_id": "MDQ6VXNlcjEzMDQ3NDM1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/13047435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peterpanmj",
      "html_url": "https://github.com/peterpanmj",
      "followers_url": "https://api.github.com/users/peterpanmj/followers",
      "following_url": "https://api.github.com/users/peterpanmj/following{/other_user}",
      "gists_url": "https://api.github.com/users/peterpanmj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peterpanmj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peterpanmj/subscriptions",
      "organizations_url": "https://api.github.com/users/peterpanmj/orgs",
      "repos_url": "https://api.github.com/users/peterpanmj/repos",
      "events_url": "https://api.github.com/users/peterpanmj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peterpanmj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-01T14:54:55Z",
    "updated_at": "2018-04-01T14:54:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "At line 723, _groupby_helper.pxi_\r\n```\r\n            if (i == N - 1 or (\r\n                    (masked_vals[_as[i]] != masked_vals[_as[i+1]]) and not\r\n                    (mask[_as[i]] and mask[_as[i+1]]))):\r\n```\r\nThis is the cause of it. We cannot separate infs from nans. \r\nWhen inf and nan are stacked together after the lexsort, this logic won't catch the transition point,\r\nIt is always True that,` Masked_vals[_as[i]] == masked_vals[_as[i+1]]`,  because they are all infinity (one real inf, one filled inf). "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377793145",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20561#issuecomment-377793145",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20561",
    "id": 377793145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Nzc5MzE0NQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-01T15:08:59Z",
    "updated_at": "2018-04-01T15:09:07Z",
    "author_association": "MEMBER",
    "body": "@peterpanmj doesn't the `mask` array still differentiate between `np.nan` and `np.inf`? Your comment is correct in that the `masked_vals` array obfuscates that different because it uses `np.inf` as a fill value, but I'm assuming `mask` would still help you distinguish the two, right?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377834147",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20561#issuecomment-377834147",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20561",
    "id": 377834147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzgzNDE0Nw==",
    "user": {
      "login": "peterpanmj",
      "id": 13047435,
      "node_id": "MDQ6VXNlcjEzMDQ3NDM1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/13047435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peterpanmj",
      "html_url": "https://github.com/peterpanmj",
      "followers_url": "https://api.github.com/users/peterpanmj/followers",
      "following_url": "https://api.github.com/users/peterpanmj/following{/other_user}",
      "gists_url": "https://api.github.com/users/peterpanmj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peterpanmj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peterpanmj/subscriptions",
      "organizations_url": "https://api.github.com/users/peterpanmj/orgs",
      "repos_url": "https://api.github.com/users/peterpanmj/repos",
      "events_url": "https://api.github.com/users/peterpanmj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peterpanmj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-02T01:37:27Z",
    "updated_at": "2018-04-02T01:39:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, `mask` should distinguish the two. However the code combines the two conditions with an `and`. When \r\n`not (mask[_as[i]] and mask[_as[i+1]]) ` is `True` at the transition point from real infs to filled infs ,  `(masked_vals[_as[i]] != masked_vals[_as[i+1]])` is `False`. The result is a `False`. It missed it. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377836622",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20561#issuecomment-377836622",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20561",
    "id": 377836622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzgzNjYyMg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-02T02:03:50Z",
    "updated_at": "2018-04-02T02:03:50Z",
    "author_association": "MEMBER",
    "body": "So would it make sense to have those be separate conditions then? Something along the lines of\r\n\r\n```python\r\nif masked_vals[_as[i]] != masked_vals[_as[i+1]]:  \r\n    if mask[_as[i]] or mask[_as[i+1]:\r\n        # Either nan or inf here...\r\n        mask[_as[i]] and mask[_as[i+1]:\r\n            # This would mean both are nan\r\n        else:\r\n            # One is inf\r\n    else:\r\n        # Not dealing with nan or inf\r\n```\r\n\r\nNot saying the above is the right approach and couldn't be refactored but think its in the right direction. All of the elements are there so just need to piece together appropriately"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377863979",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20561#issuecomment-377863979",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20561",
    "id": 377863979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Nzg2Mzk3OQ==",
    "user": {
      "login": "peterpanmj",
      "id": 13047435,
      "node_id": "MDQ6VXNlcjEzMDQ3NDM1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/13047435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peterpanmj",
      "html_url": "https://github.com/peterpanmj",
      "followers_url": "https://api.github.com/users/peterpanmj/followers",
      "following_url": "https://api.github.com/users/peterpanmj/following{/other_user}",
      "gists_url": "https://api.github.com/users/peterpanmj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peterpanmj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peterpanmj/subscriptions",
      "organizations_url": "https://api.github.com/users/peterpanmj/orgs",
      "repos_url": "https://api.github.com/users/peterpanmj/repos",
      "events_url": "https://api.github.com/users/peterpanmj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peterpanmj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-02T06:14:45Z",
    "updated_at": "2018-04-02T06:14:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\n            if (i == N - 1 or         # condition 1\r\n                    (masked_vals[_as[i]] != masked_vals[_as[i+1]]) or   # condition 2\r\n                    (mask[_as[i]] ^ mask[_as[i+1]])):   # condition 3\r\n```\r\n\r\n1. End of Arrary,\r\n2. A new value occurs\r\n3. Transition from nans to not-nans  ( or the reverse depends on `na_option` and `ascending`)\r\nI think condition 2 and 3 are independent to each others. Haven't tested it though.   \r\n\r\n\r\n"
  }
]
