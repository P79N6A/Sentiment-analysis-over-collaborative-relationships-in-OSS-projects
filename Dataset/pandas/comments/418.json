[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2894746",
    "html_url": "https://github.com/pandas-dev/pandas/issues/418#issuecomment-2894746",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/418",
    "id": 2894746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTQ3NDY=",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T09:32:31Z",
    "updated_at": "2011-11-28T09:32:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "What you get is not so strange, when one keeps in mind that:\n- numpy is used to store the data.\n- np.NaN is a float64\n- when indexing, cross-section a DataFrame, what is returned\n\n``` python\nIn [117]: header = ['id','bid','ask','last']\n\nIn [118]: data = dict(zip(header,[1,np.nan,np.nan,np.nan]))\n\nIn [119]: df = DataFrame(data, index = Index(['AAA']), columns=header)\n\nIn [120]: df\nOut[120]:\n     id  bid  ask  last\nAAA  1   NaN  NaN  NaN\n\nIn [122]: df['id']\nOut[122]:\nAAA    1\nName: id\n\nIn [123]: df['id'].values.dtype\nOut[123]: dtype('int64')\n\nIn [124]: row = DataFrame(data, index = Index(['BBB']))\n\nIn [125]: df = df.append(row)\n\nIn [126]: df\nOut[126]:\n     ask  bid  id  last\nAAA  NaN  NaN  1   NaN\nBBB  NaN  NaN  1   NaN\n\nIn [127]: df['id'].values.dtype\nOut[127]: dtype('int64')\n\nIn [129]: df.ix['AAA']\nOut[129]:\nask     NaN\nbid     NaN\nid      1.000\nlast    NaN\nName: AAA\n\nIn [130]: df.ix['AAA'].values.dtype\nOut[130]: dtype('float64')\n\nIn [131]: df.ix['AAA']['id']\nOut[131]: 1.0\n\nIn [132]: df['id']['AAA']\nOut[132]: 1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2905762",
    "html_url": "https://github.com/pandas-dev/pandas/issues/418#issuecomment-2905762",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/418",
    "id": 2905762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDU3NjI=",
    "user": {
      "login": "sjev",
      "id": 1168324,
      "node_id": "MDQ6VXNlcjExNjgzMjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1168324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjev",
      "html_url": "https://github.com/sjev",
      "followers_url": "https://api.github.com/users/sjev/followers",
      "following_url": "https://api.github.com/users/sjev/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjev/subscriptions",
      "organizations_url": "https://api.github.com/users/sjev/orgs",
      "repos_url": "https://api.github.com/users/sjev/repos",
      "events_url": "https://api.github.com/users/sjev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T19:26:27Z",
    "updated_at": "2011-11-28T19:26:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, I did consider your point about internal numpy representation, _but_ the following code functions exactly as expected.\nStill, can't find the cause of the discrepancy.\n\nI'm trying to write a data model for pyqt to enable viewing dataframe through a gui widget, which I'm planning to contribute to this project. The problem at this moment is that in some cases (as above) the wrong data type is getting passed to the gui.\n\n``` python\n\nIn [21]: data = {'int':[1,2,3],'float':[1.5,2.5,3.5],'string':['a','b','c']}\n\nIn [22]: df = DataFrame(data, index=Index(['AAA','BBB','CCC']))[['int','float','string']]\n\nIn [23]: df\nOut[23]: \n     int  float  string\nAAA  1    1.5    a     \nBBB  2    2.5    b     \nCCC  3    3.5    c     \n\nIn [24]: df.ix[0,0]\nOut[24]: 1\n\nIn [25]: df.xs('AAA')\nOut[25]: \nint       1\nfloat     1.5\nstring    a\nName: AAA\n\nIn [26]: df.ix['AAA']['int']\nOut[26]: 1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2919995",
    "html_url": "https://github.com/pandas-dev/pandas/issues/418#issuecomment-2919995",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/418",
    "id": 2919995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTk5OTU=",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-29T07:43:22Z",
    "updated_at": "2011-11-29T07:43:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "It may help if you look at the dtype used to store the data. \nBecause of the _string_ column, if you extract a row of a dataframe it will be stored as _object_, leaving the _int_ colum as _int_.\n\n``` python\nIn [25]: df = pandas.DataFrame(data, index=pandas.Index(['AAA','BBB','CCC']), columns=['int','float','string'])\n\nIn [26]: df\nOut[26]:\n     int  float  string\nAAA  1    1.5    a\nBBB  2    2.5    b\nCCC  3    3.5    c\n\nIn [27]: df.ix[0,0]\nOut[27]: 1\n\nIn [28]: df.ix['AAA']['int']\nOut[28]: 1\n\nIn [29]: df.ix['AAA']\nOut[29]:\nint       1\nfloat     1.5\nstring    a\nName: AAA\n\nIn [30]: df.ix['AAA'].values.dtype\nOut[30]: dtype('object')\n```\n\nNow if you create a new DataFrame without the _string_ column, and extract a row dtype is _float64_, which is similar as in the very first example (1 and np.Nan`s).\n\n``` python\nIn [35]: df = df[['int', 'float']]\n\nIn [36]: df\nOut[36]:\n     int  float\nAAA  1    1.5\nBBB  2    2.5\nCCC  3    3.5\n\nIn [37]: df.ix['AAA']['int']\nOut[37]: 1.0\n\nIn [38]: df.ix['AAA'].values.dtype\nOut[38]: dtype('float64')\n\nIn [39]: df.ix['AAA']\nOut[39]:\nint      1.0\nfloat    1.5\nName: AAA\n```\n\nIf you index carefully, you`ll get the dtype you want.\n\n``` python\nIn [46]: df\nOut[46]:\n     int  float  string\nAAA  1    1.5    a\nBBB  2    2.5    b\nCCC  3    3.5    c\n\nIn [47]: df['int'].values.dtype\nOut[47]: dtype('int64')\n\nIn [48]: df['int']\nOut[48]:\nAAA    1\nBBB    2\nCCC    3\nName: int\n\nIn [49]: df['float'].values.dtype\nOut[49]: dtype('float64')\n\nIn [50]: df['string'].values.dtype\nOut[50]: dtype('object')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2965537",
    "html_url": "https://github.com/pandas-dev/pandas/issues/418#issuecomment-2965537",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/418",
    "id": 2965537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjU1Mzc=",
    "user": {
      "login": "sjev",
      "id": 1168324,
      "node_id": "MDQ6VXNlcjExNjgzMjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1168324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjev",
      "html_url": "https://github.com/sjev",
      "followers_url": "https://api.github.com/users/sjev/followers",
      "following_url": "https://api.github.com/users/sjev/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjev/subscriptions",
      "organizations_url": "https://api.github.com/users/sjev/orgs",
      "repos_url": "https://api.github.com/users/sjev/repos",
      "events_url": "https://api.github.com/users/sjev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-30T20:14:51Z",
    "updated_at": "2011-11-30T20:14:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, starting to get it ... :-). So, the data is converted when one slices across different data types. Still, when one wants just _one_ element (df.ix[row,col]), it would be nice to get the right data type. \nI'm not going to complain as it is just a minor issue :).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2966369",
    "html_url": "https://github.com/pandas-dev/pandas/issues/418#issuecomment-2966369",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/418",
    "id": 2966369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjYzNjk=",
    "user": {
      "login": "sjev",
      "id": 1168324,
      "node_id": "MDQ6VXNlcjExNjgzMjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1168324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjev",
      "html_url": "https://github.com/sjev",
      "followers_url": "https://api.github.com/users/sjev/followers",
      "following_url": "https://api.github.com/users/sjev/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjev/subscriptions",
      "organizations_url": "https://api.github.com/users/sjev/orgs",
      "repos_url": "https://api.github.com/users/sjev/repos",
      "events_url": "https://api.github.com/users/sjev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-30T21:09:21Z",
    "updated_at": "2011-11-30T21:09:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks Lodargo, I was indeed able to fix this issue in by first slicing through the column and then picking the row.\n\nMaybe it would be a good idea to implement this behavior on lower level when a single element is called through .ix[row,col] \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2992132",
    "html_url": "https://github.com/pandas-dev/pandas/issues/418#issuecomment-2992132",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/418",
    "id": 2992132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTIxMzI=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-02T16:18:14Z",
    "updated_at": "2011-12-02T16:18:14Z",
    "author_association": "MEMBER",
    "body": "I agree that ix[row, col] should preserve the type. I'm going to create a bug issue here to be fixed in the near future:\n\nhttps://github.com/wesm/pandas/issues/431\n"
  }
]
