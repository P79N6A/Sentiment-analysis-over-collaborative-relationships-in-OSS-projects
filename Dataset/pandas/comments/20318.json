[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372516174",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20318#issuecomment-372516174",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20318",
    "id": 372516174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjUxNjE3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T01:31:34Z",
    "updated_at": "2018-03-13T01:31:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "We're collecting issues on the validation script in https://github.com/pandas-dev/pandas/issues/20298\r\n\r\nDo you have a PR open? If not, could you make a PR and we'll work through issues there? Easier to comment on the code."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372516858",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20318#issuecomment-372516858",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20318",
    "id": 372516858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjUxNjg1OA==",
    "user": {
      "login": "m-dz",
      "id": 15376817,
      "node_id": "MDQ6VXNlcjE1Mzc2ODE3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/15376817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m-dz",
      "html_url": "https://github.com/m-dz",
      "followers_url": "https://api.github.com/users/m-dz/followers",
      "following_url": "https://api.github.com/users/m-dz/following{/other_user}",
      "gists_url": "https://api.github.com/users/m-dz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m-dz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m-dz/subscriptions",
      "organizations_url": "https://api.github.com/users/m-dz/orgs",
      "repos_url": "https://api.github.com/users/m-dz/repos",
      "events_url": "https://api.github.com/users/m-dz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m-dz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T01:35:27Z",
    "updated_at": "2018-03-13T08:51:30Z",
    "author_association": "NONE",
    "body": "Ekhm... After some fiddling with the file\r\nLine ```line_terminator : str, default ``'\\n'`` ``` changed to `line_terminator : str, default '\\\\n'` \"fixed\" most of the issues:\r\n\r\n```\r\nErrors found:\r\n        Errors in parameters section\r\n                Parameters {'decimal'} not documented\r\n                Unknown parameters {\"decimal: str, default '.'\"}\r\n                Parameter \"line_terminator\" description should finish with \".\"\r\n                Parameter \"quoting\" description should start with capital letter\r\n                Parameter \"quoting\" description should finish with \".\"\r\n                Parameter \"quotechar\" description should start with capital letter\r\n                Parameter \"quotechar\" description should finish with \".\"\r\n                Parameter \"doublequote\" description should finish with \".\"\r\n                Parameter \"escapechar\" description should start with capital letter\r\n                Parameter \"escapechar\" description should finish with \".\"\r\n                Parameter \"chunksize\" description should start with capital letter\r\n                Parameter \"chunksize\" description should finish with \".\"\r\n                Parameter \"tupleize_cols\" description should start with capital letter\r\n                Parameter \"date_format\" description should finish with \".\"\r\n                Parameter \"decimal: str, default '.'\" has no type\r\n                Parameter \"decimal: str, default '.'\" description should finish with \".\"\r\n        No returns section found\r\n        Missing description for See Also \"file.\" reference\r\n        Missing description for See Also \"a\" reference\r\n```\r\n\r\nMy whole docstring (with the issues above NOT yet fixed) below:\r\n\r\n<details>\r\n\r\n        \"\"\"\r\n        Write a DataFrame to a comma-separated values (CSV) file.\r\n\r\n        Write a DataFrame to a comma-separated values (CSV) file with an user\r\n        specified format (e.g. a separator, missing values representation,\r\n        quoting, header and index specification etc.) and possible compression.\r\n\r\n        Parameters\r\n        ----------\r\n        path_or_buf : str or file handle, default None\r\n            File path or object, if None is provided the result is returned as\r\n            a string.\r\n        sep : str (length 1), default ','\r\n            Field delimiter for the output file.\r\n        na_rep : str, default ''\r\n            Missing data representation.\r\n        float_format : str, default None\r\n            Format string for floating point numbers.\r\n        columns : sequence, optional\r\n            Columns to write.\r\n        header : bool or list of str, default True\r\n            Write out the column names. If a list of strings is given it is\r\n            assumed to be aliases for the column names.\r\n        index : bool, default True\r\n            Write row names (index).\r\n        index_label : str or sequence, or False, default None\r\n            Column label for index column(s) if desired. If None is given, and\r\n            `header` and `index` are `True`, then the index names are used. A\r\n            sequence should be given if the DataFrame uses MultiIndex. If\r\n            `False` do not print fields for index names.\r\n            Use `index_label=False` for easier importing in R.\r\n        mode : str, default 'w'\r\n            Python write mode.\r\n        encoding : str, optional\r\n            A string representing the encoding to use in the output file,\r\n            defaults to 'ascii' on Python 2 and 'utf-8' on Python 3.\r\n        compression : str, optional\r\n            A string representing the compression to use in the output file,\r\n            allowed values are 'gzip', 'bz2', 'xz', only used when the first\r\n            argument is a filename.\r\n        line_terminator : str, default '\\\\n'\r\n            The newline character or character sequence to use in the output\r\n            file\r\n        quoting : optional constant from csv module\r\n            defaults to csv.QUOTE_MINIMAL. If you have set a `float_format`\r\n            then floats are converted to strings and thus csv.QUOTE_NONNUMERIC\r\n            will treat them as non-numeric\r\n        quotechar : str (length 1), default '\\\"'\r\n            character used to quote fields\r\n        doublequote : bool, default True\r\n            Control quoting of `quotechar` inside a field\r\n        escapechar : str (length 1), default None\r\n            character used to escape `sep` and `quotechar` when appropriate\r\n        chunksize : int or None\r\n            rows to write at a time\r\n        tupleize_cols : bool, default False\r\n            .. deprecated:: 0.21.0\r\n               This argument will be removed and will always write each row\r\n               of the multi-index as a separate row in the CSV file.\r\n\r\n            Write MultiIndex columns as a list of tuples (if `True`) or in\r\n            the new, expanded format, where each MultiIndex column is a row\r\n            in the CSV (if `False`).\r\n        date_format : str, default None\r\n            Format string for datetime objects\r\n        decimal: str, default '.'\r\n            Character recognized as decimal separator. E.g. use ',' for\r\n            European data\r\n\r\n        See Also\r\n        --------\r\n        pandas.Series.to_csv : Write a Series to a comma-separated values (CSV)\r\n        file.\r\n        pandas.read_csv : Read a comma-separated values (CSV) file into\r\n        a DataFrame.\r\n\r\n        Examples\r\n        --------\r\n        Setup:\r\n\r\n        >>> from csv import reader\r\n        >>> from tempfile import TemporaryFile\r\n        >>> def print_helper(temp):\r\n        ...     # Read and print a \"raw\" version of the input file\r\n        ...     # \"Rewind\" to the begining of the file\r\n        ...     _ = temp.seek(0)\r\n        ...     r = reader(temp, delimiter='X')\r\n        ...     for row in r:\r\n        ...         print(''.join(row))\r\n\r\n        A simple example of writing (and reading) a CSV file:\r\n\r\n        >>> df = pd.DataFrame({'col_a': [1, 2], 'col_b': [9, 8]},\r\n        ...                   index=['a','b'])\r\n        >>> df\r\n           col_a  col_b\r\n        a      1      9\r\n        b      2      8\r\n        >>> with TemporaryFile('w+') as temp:\r\n        ...     df.to_csv(temp)\r\n        ...     _ = temp.seek(0)\r\n        ...     df_out = pd.read_csv(temp, sep=',', index_col=0)\r\n        ...     print_helper(temp)\r\n        ,col_a,col_b\r\n        a,1,9\r\n        b,2,8\r\n        >>> df_out\r\n           col_a  col_b\r\n        a      1      9\r\n        b      2      8\r\n\r\n        Assert equality ignoring `dtype`\r\n\r\n        >>> pd.testing.assert_frame_equal(df, df_out, check_dtype=False)\r\n\r\n        **Custom formatting**\r\n\r\n        Write a CSV file with a custom separator, missing value representation,\r\n        and float and dates formatting:\r\n\r\n        >>> df = pd.DataFrame({\r\n        ...     'col_a': [1.0, 2.0],\r\n        ...     'col_b': [0.0001, 0.01],\r\n        ...     'date_col': pd.date_range('2018-03-10', '2018-03-11')\r\n        ... })\r\n        >>> df.iloc[0,0] = np.nan\r\n        >>> df\r\n           col_a   col_b   date_col\r\n        0    NaN  0.0001 2018-03-10\r\n        1    2.0  0.0100 2018-03-11\r\n        >>> with TemporaryFile('w+') as temp:\r\n        ...     df.to_csv(temp, sep=':', na_rep='NaNa', float_format='%.2f',\r\n        ...               date_format='%Y/%m/%d')\r\n        ...     _ = temp.seek(0)\r\n        ...     df_out = pd.read_csv(temp, sep=':', na_values='NaNa',\r\n        ...                          index_col=0, parse_dates=['date_col'])\r\n        ...     print_helper(temp)\r\n        :col_a:col_b:date_col\r\n        0:NaNa:0.00:2018/03/10\r\n        1:2.00:0.01:2018/03/11\r\n\r\n        Note the \"standard\" Python NaN representation \"NaN\"\r\n\r\n        >>> df_out\r\n           col_a  col_b   date_col\r\n        0    NaN   0.00 2018-03-10\r\n        1    2.0   0.01 2018-03-11\r\n\r\n        Assert equality with a rounded column to match the format used\r\n\r\n        >>> df['col_b'] = np.round(df.col_b, 2)\r\n        >>> pd.testing.assert_frame_equal(df, df_out, check_dtype=False)\r\n        \"\"\"\r\n\r\n</details>\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372517149",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20318#issuecomment-372517149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20318",
    "id": 372517149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjUxNzE0OQ==",
    "user": {
      "login": "m-dz",
      "id": 15376817,
      "node_id": "MDQ6VXNlcjE1Mzc2ODE3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/15376817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m-dz",
      "html_url": "https://github.com/m-dz",
      "followers_url": "https://api.github.com/users/m-dz/followers",
      "following_url": "https://api.github.com/users/m-dz/following{/other_user}",
      "gists_url": "https://api.github.com/users/m-dz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m-dz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m-dz/subscriptions",
      "organizations_url": "https://api.github.com/users/m-dz/orgs",
      "repos_url": "https://api.github.com/users/m-dz/repos",
      "events_url": "https://api.github.com/users/m-dz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m-dz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T01:37:02Z",
    "updated_at": "2018-03-13T01:37:25Z",
    "author_association": "NONE",
    "body": "Oh, hi @TomAugspurger , didn't see your comment. I saw https://github.com/pandas-dev/pandas/issues/20298, but thought it's for some actual improvements, not fixing the current state. After my minor change described above the output is much cleaner, I'll fix those issues and submit a PR. In the meantime, my docstring is also above."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372595607",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20318#issuecomment-372595607",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20318",
    "id": 372595607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjU5NTYwNw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T09:10:12Z",
    "updated_at": "2018-03-13T09:10:12Z",
    "author_association": "MEMBER",
    "body": "@m-dz Ah, so the problem was the newline character `\\n` in the docstring messing up. I added that to the list of issues in #20298, therefore closing this. But thanks for reporting! \r\n\r\nFor the `to_csv` docstring, as @TomAugspurger said, it's easier to give feedback if you open a PR, but one point: if you don't specify a path, the \"csv file\" is returned a string, and can that way be printed to the output. That might be an easier alternative to the temporary file way you're using now."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372600315",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20318#issuecomment-372600315",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20318",
    "id": 372600315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjYwMDMxNQ==",
    "user": {
      "login": "m-dz",
      "id": 15376817,
      "node_id": "MDQ6VXNlcjE1Mzc2ODE3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/15376817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m-dz",
      "html_url": "https://github.com/m-dz",
      "followers_url": "https://api.github.com/users/m-dz/followers",
      "following_url": "https://api.github.com/users/m-dz/following{/other_user}",
      "gists_url": "https://api.github.com/users/m-dz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m-dz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m-dz/subscriptions",
      "organizations_url": "https://api.github.com/users/m-dz/orgs",
      "repos_url": "https://api.github.com/users/m-dz/repos",
      "events_url": "https://api.github.com/users/m-dz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m-dz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T09:26:32Z",
    "updated_at": "2018-03-13T09:26:32Z",
    "author_association": "NONE",
    "body": "Looks like it was it, or maybe double backticks, something there. Still need to check the html doc, but I have some troubles building it (will dig more or create an issue later, but an excerpt is the `--single` parameter seems to not work and I am getting some errors while building)."
  }
]
