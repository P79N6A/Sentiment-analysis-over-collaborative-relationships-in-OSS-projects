[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412649704",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-412649704",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 412649704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjY0OTcwNA==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T20:19:36Z",
    "updated_at": "2018-10-12T17:58:32Z",
    "author_association": "NONE",
    "body": "Hello @TomAugspurger! Thanks for updating the PR.\n\n - There are no PEP8 issues in the file [`pandas/core/arrays/base.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/arrays/base.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/common.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/common.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/dtypes/common.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/dtypes/common.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/dtypes/concat.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/dtypes/concat.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/dtypes/missing.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/dtypes/missing.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/internals/__init__.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/internals/__init__.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/internals/blocks.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/internals/blocks.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/internals/concat.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/internals/concat.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/internals/managers.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/internals/managers.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/ops.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/ops.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/reshape/reshape.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/reshape/reshape.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/series.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/series.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/sparse/api.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/sparse/api.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/sparse/array.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/sparse/array.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/sparse/dtype.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/sparse/dtype.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/sparse/frame.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/sparse/frame.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/sparse/series.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/core/sparse/series.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/api/test_api.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/api/test_api.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/dtypes/test_common.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/dtypes/test_common.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/dtypes/test_dtypes.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/dtypes/test_dtypes.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/extension/arrow/bool.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/extension/arrow/bool.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/extension/arrow/test_bool.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/extension/arrow/test_bool.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/extension/base/interface.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/extension/base/interface.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/extension/base/ops.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/extension/base/ops.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/extension/base/reshaping.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/extension/base/reshaping.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/extension/test_sparse.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/extension/test_sparse.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/frame/test_api.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/frame/test_api.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/frame/test_indexing.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/frame/test_indexing.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/frame/test_subclass.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/frame/test_subclass.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/internals/test_internals.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/internals/test_internals.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/reshape/test_reshape.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/reshape/test_reshape.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/series/test_combine_concat.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/series/test_combine_concat.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/series/test_missing.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/series/test_missing.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/series/test_quantile.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/series/test_quantile.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/series/test_subclass.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/series/test_subclass.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/sparse/frame/test_apply.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/sparse/frame/test_apply.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/sparse/frame/test_frame.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/sparse/frame/test_frame.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/sparse/frame/test_to_from_scipy.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/sparse/frame/test_to_from_scipy.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/sparse/series/test_series.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/sparse/series/test_series.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/sparse/test_arithmetics.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/sparse/test_arithmetics.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/sparse/test_array.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/sparse/test_array.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/sparse/test_combine_concat.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/sparse/test_combine_concat.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/sparse/test_dtype.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/sparse/test_dtype.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/sparse/test_format.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/sparse/test_format.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/sparse/test_groupby.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/sparse/test_groupby.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/sparse/test_indexing.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/tests/sparse/test_indexing.py) !\n\n - There are no PEP8 issues in the file [`pandas/util/_test_decorators.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/util/_test_decorators.py) !\n\n - There are no PEP8 issues in the file [`pandas/util/testing.py`](https://github.com/TomAugspurger/pandas/blob/37a4b576b3f4978e797e75e2e0745127a8960d57/pandas/util/testing.py) !\n\n - Complete extra results for this file :\n\n> file_to_check.py:2518:-258: W605 invalid escape sequence '\\('\nfile_to_check.py:2518:-255: W605 invalid escape sequence '\\)'\n---\n\n\n\n##### Comment last updated on October 12, 2018 at 17:58 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413251494",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-413251494",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 413251494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzI1MTQ5NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T16:22:24Z",
    "updated_at": "2018-08-15T16:22:24Z",
    "author_association": "MEMBER",
    "body": "+1; it looks like a bunch of `_libs.util` machinery for `__getitem__` and `__setitem__` are only relevant for `SparseArray`.  When that no longer subclasses `np.ndarray`, a bunch of simplification will be on the table."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413569016",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-413569016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 413569016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzU2OTAxNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T14:39:27Z",
    "updated_at": "2018-08-16T14:39:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does anyone have thoughts on changing the default SparseArray fill value to match the default for SparseSeries? It's jarring that they aren't the same. Which is more useful in practice, integer or block?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413574502",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-413574502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 413574502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzU3NDUwMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T14:55:27Z",
    "updated_at": "2018-08-16T14:55:27Z",
    "author_association": "MEMBER",
    "body": "I would personally even say (unless some users stand up): get rid of block altogether. \r\n(but so, +1 on at least making it consistent)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413575030",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-413575030",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 413575030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzU3NTAzMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T14:56:53Z",
    "updated_at": "2018-08-16T14:56:53Z",
    "author_association": "MEMBER",
    "body": "Regarding what you said on Twitter :-), would it make sense to actually use pydata/sparse here for the core pandas implementation of SparseArray instead of our own custom implementation?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413577250",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-413577250",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 413577250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzU3NzI1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T15:03:12Z",
    "updated_at": "2018-08-16T15:03:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 on making consistent\r\nthis is going to have a big note in 0.24 anyhow so breaking changes is ok\r\n\r\nalso +1 on using pydata/sparse as well\r\nthough should prob do as a follow up (though maybe if it’s easier do here)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414080427",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-414080427",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 414080427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDA4MDQyNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-18T19:15:41Z",
    "updated_at": "2018-08-18T19:15:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "In another issue @jorisvandenbossche and I discussed moving fill_value to the dtype. This leads to behavior like this following:\r\n\r\n```python\r\nIn [10]: arr = pd.SparseArray([np.nan, 1, 2])\r\n\r\nIn [11]: arr.astype('Sparse[int]')\r\nOut[11]:\r\n[0, 1, 2]\r\nFill: 0\r\nIntIndex\r\nIndices: array([1, 2], dtype=int32)\r\n```\r\n\r\nThis mean `asarray(arr.astype(dtype))` won't necessary be the same as `asarray(arr).astype(dense_dtype)`.  How do people feel about that?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414082922",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-414082922",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 414082922,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDA4MjkyMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-18T20:01:10Z",
    "updated_at": "2018-08-18T20:01:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, at least it does locally.\n\nOn Sat, Aug 18, 2018 at 2:33 PM jbrockmendel <notifications@github.com>\nwrote:\n\n> *@jbrockmendel* commented on this pull request.\n> ------------------------------\n>\n> In pandas/_libs/reshape.pyx\n> <https://github.com/pandas-dev/pandas/pull/22325#discussion_r211084211>:\n>\n> > @@ -1,4 +1,4 @@\n> -# cython: profile=False\n> +# -*- coding: utf-8 -*-\n>\n> Will rebasing get this out of the diff?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/22325#pullrequestreview-147439436>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIjqnOR3W56RAe7aJ7SOmlNyygUsnks5uSGv6gaJpZM4V7I12>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414168890",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-414168890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 414168890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDE2ODg5MA==",
    "user": {
      "login": "kernc",
      "id": 684364,
      "node_id": "MDQ6VXNlcjY4NDM2NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/684364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kernc",
      "html_url": "https://github.com/kernc",
      "followers_url": "https://api.github.com/users/kernc/followers",
      "following_url": "https://api.github.com/users/kernc/following{/other_user}",
      "gists_url": "https://api.github.com/users/kernc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kernc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kernc/subscriptions",
      "organizations_url": "https://api.github.com/users/kernc/orgs",
      "repos_url": "https://api.github.com/users/kernc/repos",
      "events_url": "https://api.github.com/users/kernc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kernc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T00:53:18Z",
    "updated_at": "2018-08-20T00:53:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm :+1: for coercing `fill_value`. It sounds intuitively reasonable whereas `np.array(np.nan).astype(int) == np.array(-9223372036854775808)` is a mere implementation detail.\r\n\r\nI'm also :+1: for `.astype(dtype)` to _retain sparsity_. Or will blocks delegate to re-sparsify sparse series when `df.astype()` is called? All else being equal, `df.astype(int)` resulting in all dense blocks, `df.astype('Sparse[int]')` resulting in all sparse blocks, and manually subselecting columns before type-converting them all look hassle."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414529789",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-414529789",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 414529789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDUyOTc4OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T02:31:45Z",
    "updated_at": "2018-08-21T02:31:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I'm also 👍 for .astype(dtype) to retain sparsity. Or will blocks delegate to re-sparsify sparse series when df.astype() is called?\r\n\r\nRight now `Series.astype(numpy_dtype)` and `DataFrame.astype(numpy_dtype)` will maintain sparsity. I'll probably change `SparseArray.astype()`  to do the same. If you want to astype to a dense array, it'll have to be `SparseArray.to_dense().astype(numpy_dtype)`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414775358",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-414775358",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 414775358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDc3NTM1OA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-08-21T18:27:37Z",
    "updated_at": "2018-10-13T08:46:37Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22325?src=pr&el=h1) Report\n> Merging [#22325](https://codecov.io/gh/pandas-dev/pandas/pull/22325?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/12a0dc49ac63b63bcc5f93bccf71bce51c60bdad?src=pr&el=desc) will **decrease** coverage by `0.06%`.\n> The diff coverage is `94.14%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/22325/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/22325?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #22325      +/-   ##\n==========================================\n- Coverage    92.2%   92.13%   -0.07%     \n==========================================\n  Files         169      170       +1     \n  Lines       50888    51073     +185     \n==========================================\n+ Hits        46919    47056     +137     \n- Misses       3969     4017      +48\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.56% <94.14%> (-0.07%)` | :arrow_down: |\n| #single | `42.28% <42.21%> (+0.04%)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/22325?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/util/\\_test\\_decorators.py](https://codecov.io/gh/pandas-dev/pandas/pull/22325/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvX3Rlc3RfZGVjb3JhdG9ycy5weQ==) | `92.68% <ø> (ø)` | :arrow_up: |\n| [pandas/core/internals/\\_\\_init\\_\\_.py](https://codecov.io/gh/pandas-dev/pandas/pull/22325/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL19faW5pdF9fLnB5) | `100% <ø> (ø)` | :arrow_up: |\n| [pandas/core/arrays/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/22325/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2Jhc2UucHk=) | `95.94% <ø> (ø)` | :arrow_up: |\n| [pandas/core/dtypes/missing.py](https://codecov.io/gh/pandas-dev/pandas/pull/22325/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL21pc3NpbmcucHk=) | `92.98% <ø> (ø)` | :arrow_up: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/22325/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `86.42% <100%> (+0.23%)` | :arrow_up: |\n| [pandas/core/reshape/reshape.py](https://codecov.io/gh/pandas-dev/pandas/pull/22325/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS9yZXNoYXBlLnB5) | `99.55% <100%> (ø)` | :arrow_up: |\n| [pandas/core/dtypes/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/22325/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2NvbW1vbi5weQ==) | `95.11% <100%> (+0.07%)` | :arrow_up: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/22325/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `93.86% <100%> (+0.1%)` | :arrow_up: |\n| [pandas/core/sparse/dtype.py](https://codecov.io/gh/pandas-dev/pandas/pull/22325/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc3BhcnNlL2R0eXBlLnB5) | `100% <100%> (ø)` | |\n| [pandas/core/ops.py](https://codecov.io/gh/pandas-dev/pandas/pull/22325/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvb3BzLnB5) | `94.39% <100%> (-2.8%)` | :arrow_down: |\n| ... and [30 more](https://codecov.io/gh/pandas-dev/pandas/pull/22325/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22325?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22325?src=pr&el=footer). Last update [12a0dc4...4aad8e1](https://codecov.io/gh/pandas-dev/pandas/pull/22325?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414775659",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-414775659",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 414775659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDc3NTY1OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T18:28:31Z",
    "updated_at": "2018-08-21T18:28:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Quick update on `SparseArray.astype`:\r\n\r\n- for `np.dtype` like `arr.astype(int)` the fill value will *not* be changed. This was causing too many hacks inside pandas itself, and was too surprising to the user.\r\n- For SparseDtype like `arr.astype(SparseDtype(int, 0)` the fill value will be updated.\r\n\r\nSee the docstring for more."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414819369",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-414819369",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 414819369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDgxOTM2OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T20:57:35Z",
    "updated_at": "2018-08-21T20:57:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI, if I haven't stated it explicitly, my current hope is to create a `.sparse` accessor and deprecate SparseSeries and SparseDataFrame in favor of Series / DataFrame holding spares values. IIRC, last we looked the major differences were that SparseDataFrame.__setitem__ behaved differently, as newly created columns are sparsified. We'll see if anything else comes up."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415071832",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-415071832",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 415071832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTA3MTgzMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T15:23:16Z",
    "updated_at": "2018-08-22T15:23:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "This should be getting close. Definitely at the stage where reviews would be appreciated. I tried to indicate behavior changes with an `XXX` in the source.\r\n\r\nI'm going to go through and remove / fix all remaining xfails that I added.\r\n\r\nThe last major item is ufuncs... With the lovely new `__array_ufunc__`, this was pretty easy to do, but that's only available from NumPy 1.13. I see two options:\r\n\r\n1. Implement `__array_wrap__`, `__array_prepare__`, and `__array_priority__`. The [ufunc NEP](https://www.numpy.org/neps/nep-0013-ufunc-overrides.html) mentions that\r\n> Trying to ufunc things that don’t subclass ndarray is even more difficult, as the input arguments tend to be cast to object arrays, which ends up producing surprising results.\r\nso we can see how far that gets us.\r\n2. Check the NumPy version when creating a SparseArray and raise a RuntimeError (or ImportError) if it's too old.\r\n\r\nneither sound great, but out of laziness I'm currently leaning towards 2. If someone cares about Sparse + NumPy < 1.13, I won't object to a PR implementing it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415154993",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-415154993",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 415154993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTE1NDk5Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T19:41:31Z",
    "updated_at": "2018-08-22T19:41:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "All the new xfails / skips should be accounted for. Removed the \"WIP\" tag\r\n\r\nAnswering some of the questions from the original:\r\n\r\nQ. Why is the default kind inconsistent between SparseSeries and SparseArray?\r\nA. Who knows, but I'd like to get rid for block in a future PR.\r\n\r\nQ. Should .astype(np_dtype) be sparse or dense?\r\nA. sparse\r\n\r\nQ. What should the inferred type of an empty SparseArray be?\r\nA. Sparse[float]\r\n\r\nQ. Policy for warning when converting to dense (e.g. https://github.com/pandas-dev/pandas/pull/22325/files#diff-71caf9627e9687e837e4b1f86ecc6271R390).\r\nA. Warn when we have to implicitly densify as part of an operation."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415181557",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-415181557",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 415181557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTE4MTU1Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T21:11:16Z",
    "updated_at": "2018-08-22T21:12:52Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger thanks a lot for your work on this, this seems a gigantic task\r\n\r\nIn general, I am wondering a bit, since we are already breaking things and changing behaviour, if we shouldn't be more aggressive in deprecating / removing certain parts of the API. For example the sparse_index concept, the int vs block type. \r\nReasons that I am raising this is a) this API seems rather specific (to pandas?) and do users actually use/need this? (by now refactoring it and keepin it, it feels like committing more strongly to this API, while until now I would personally not have considered/recommended the sparse functionality as a core or very stable part of pandas) and b) this might make it possible to actually swap the underlying implementation to another sparse array implementation (at an undefined point in the future), eg pydata/sparse.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415550780",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-415550780",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 415550780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU1MDc4MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T19:55:18Z",
    "updated_at": "2018-08-23T19:55:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think it's that strange, and it was allowed / tested before.\n\nPreviously, you couldn't do\n\n```python\narr = SparseArray([1, 2], fill_value=0)\narr.fill_value = np.nan\n```\n\nbut you could do\n\n```python\narr = SparseArray([1, 2], fill_value=np.nan)\n```\n\n\nI should move this to the bug fixes section.\n\nOn Thu, Aug 23, 2018 at 2:45 PM Joris Van den Bossche <\nnotifications@github.com> wrote:\n\n> *@jorisvandenbossche* commented on this pull request.\n> ------------------------------\n>\n> In doc/source/whatsnew/v0.24.0.txt\n> <https://github.com/pandas-dev/pandas/pull/22325#discussion_r212434126>:\n>\n> > +\n> +``SparseArray`` is now an ``ExtensionArray``\n> +^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n> +\n> +SparseArray is now implements the ExtensionArray interface.\n> +To conform to this interface, and for consistency with the rest of pandas, some API breaking\n> +changes were made:\n> +\n> +- ``SparseArray`` is no longer a subclass of :class:`numpy.ndarray`\n> +- ``SparseArray.dtype`` and ``SparseSeries.dtype`` are now instances of ``SparseDtype``, rather than ``np.dtype``. Access the underlying dtype with ``SparseDtype.subtype``.\n> +- :meth:`numpy.asarray(sparse_array)` now returns a dense array with all the values, not just the non-fill-value values (:issue:`14167`)\n> +- Passing a ``fill_value`` to ``SparseArray.take`` no longer implies ``allow_fill=True``.\n> +- ``SparseArray.take`` no longer accepts scalars for indices.\n> +- ``SparseArray.astype(sparse_dtype)`` will now change both the dtype of the underlying ``sp_values`` and the ``fill_value``. Previously, just\n> +  ``sparse_array.sp_values.dtype`` was changed. The same holds for a Series with spares values.\n> +- Setting ``SparseArray.fill_value`` to a fill value with a different dtype is now allowed.\n>\n> It seems a bit strange though to have sp_values and a fill_value that\n> don't have compatible dtypes?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/22325#discussion_r212434126>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIhXq9oBNqxZk6vmUh3mJJnlzHb89ks5uTwZjgaJpZM4V7I12>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415554442",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-415554442",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 415554442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU1NDQ0Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T20:07:13Z",
    "updated_at": "2018-08-23T20:07:13Z",
    "author_association": "MEMBER",
    "body": "But you could also say that it is the second example that was 'buggy' ? Because although that was allowed, the sparse array actually has no occurrences of this fill value.\r\n\r\nOne possible problem I see with this, is that then `arr.to_dense()` will not always be of the same dtype as `arr`, which I think is what the expected behaviour should be."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415555460",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-415555460",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 415555460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU1NTQ2MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T20:10:57Z",
    "updated_at": "2018-08-23T20:10:57Z",
    "author_association": "MEMBER",
    "body": "There is in any case still something buggy here (with the latest version of your branch):\r\n\r\n```\r\nIn [1]: arr = pd.SparseArray([0, 1, 0], fill_value=0)\r\n\r\nIn [2]: arr.to_dense()\r\nOut[2]: array([0, 1, 0])\r\n\r\nIn [3]: arr.fill_value = np.nan\r\n/home/joris/miniconda3/envs/dev/bin/ipython:1: PerformanceWarning: Updating fill_value requires converting to a dense array\r\n  #!/home/joris/miniconda3/envs/dev/bin/python\r\n\r\nIn [4]: arr\r\nOut[4]: \r\n[0, 1, 0]\r\nFill: nan\r\nIntIndex\r\nIndices: array([0, 1, 2], dtype=int32)\r\n\r\nIn [5]: arr.to_dense()\r\nOut[5]: array([0, 1, 0])\r\n```\r\n\r\nThe dense version still has the 0's and not the new fill value NaN"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415555806",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-415555806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 415555806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU1NTgwNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T20:12:07Z",
    "updated_at": "2018-08-23T20:12:07Z",
    "author_association": "MEMBER",
    "body": "Ah, sorry, that is because now the 0's have become actual values... \r\nOK, that is a bit different behaviour as in sparse. I expected that the fill_value would have been *replaced*, but actually the performance warning was a good indication"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415559584",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-415559584",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 415559584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU1OTU4NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T20:25:33Z",
    "updated_at": "2018-08-23T20:25:33Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger this seems to be a (rather big) break in behaviour. On 0.23, setting the fill_value *replaces* the fill values:\r\n\r\n```\r\nIn [3]: arr = pd.SparseArray(np.array([0, 1, 2, 3, 0]))\r\n\r\nIn [4]: arr.fill_value = 10\r\n\r\nIn [5]: arr\r\nOut[5]: \r\n[10, 1, 2, 3, 10]\r\nFill: 10\r\nIntIndex\r\nIndices: array([1, 2, 3], dtype=int32)\r\n```\r\n\r\nwhile with this branch:\r\n\r\n```\r\nIn [40]: arr = pd.SparseArray(np.array([0, 1, 2, 3, 0]))\r\n\r\nIn [41]: arr.fill_value = 10\r\n/home/joris/miniconda3/envs/dev/bin/ipython:1: PerformanceWarning: Updating fill_value requires converting to a dense array\r\n  #!/home/joris/miniconda3/envs/dev/bin/python\r\n\r\nIn [42]: arr\r\nOut[42]: \r\n[0, 1, 2, 3, 0]\r\nFill: 10\r\nIntIndex\r\nIndices: array([0, 1, 2, 3, 4], dtype=int32)\r\n```\r\n\r\nThe behaviour of 0.23 is also what eg pydata/sparse does (so my \"wrong\" expectation from above was not that much off :-)). So I suppose this was an unintended change? \r\nI would also think it should simplify the implementation somewhat."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415563733",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-415563733",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 415563733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU2MzczMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T20:40:22Z",
    "updated_at": "2018-08-23T20:40:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "What do you expect here?\r\n\r\n```python\r\narr = SparseArray([0, 1, 2])\r\narr.fill_value = 1\r\narr.fill_value = 0\r\n```\r\n\r\na.) [0, 1, 2]\r\nb.) [0, 0, 2]\r\n\r\nThis whole setting business is strange. \r\n\r\nThe motivation for the PerformanceWarning / coercing to array is so that we can ensure that `fill_value` is not present in the `sp_values`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415565205",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-415565205",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 415565205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU2NTIwNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T20:45:24Z",
    "updated_at": "2018-08-23T20:45:24Z",
    "author_association": "MEMBER",
    "body": "I expect a). I think in general the fill_value and actual values should always be handled separately, and the sparse structure should not change during operations\r\n\r\n> so that we can ensure that fill_value is not present in the sp_values.\r\n\r\nI don't think it is needed to ensure that.\r\n\r\nI have to agree that is one of the things I always found confusing with sparse matrices in scipy, but there this is not ensured. So a typical sparse matrix in scipy can have two 'kinds' of 0, the fill_value and 0 in the data."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415565787",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-415565787",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 415565787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU2NTc4Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T20:47:12Z",
    "updated_at": "2018-08-23T20:47:12Z",
    "author_association": "MEMBER",
    "body": "> I expect a).\r\n\r\nIn any case that is what it currently does on master, and it is what pydata/sparse does"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415571430",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-415571430",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 415571430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU3MTQzMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T21:07:41Z",
    "updated_at": "2018-08-23T21:07:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alrightly, that's been implemented (and did indeed simplify the setter). I added a note that you can have the two kinds of `fill value` values.\r\n\r\n```python\r\nIn [6]: arr = pd.SparseArray([0, 1, 2], fill_value=0)\r\n\r\nIn [7]: arr.fill_value = 1\r\n\r\nIn [8]: arr\r\nOut[8]:\r\n[1, 1, 2]\r\nFill: 1\r\nIntIndex\r\nIndices: array([1, 2], dtype=int32)\r\n\r\nIn [9]: arr.fill_value = 0\r\n\r\nIn [10]: arr\r\nOut[10]:\r\n[0, 1, 2]\r\nFill: 0\r\nIntIndex\r\nIndices: array([1, 2], dtype=int32)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415585793",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-415585793",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 415585793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU4NTc5Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T22:03:50Z",
    "updated_at": "2018-08-23T22:03:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Latest commit removes inplace ops between ndarray and SparseArray. I wasn't doing it properly in __array_ufunc__ earlier.\r\n\r\nWith some work they could probably be made to work, but they don't work on master either."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418351356",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-418351356",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 418351356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODM1MTM1Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T12:38:48Z",
    "updated_at": "2018-09-04T12:38:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, I was misremembering https://github.com/pandas-dev/pandas/issues/19750,\nthat is not resolved.\n\nOn Tue, Sep 4, 2018 at 7:31 AM Jeff Reback <notifications@github.com> wrote:\n\n> *@jreback* commented on this pull request.\n> ------------------------------\n>\n> In doc/source/whatsnew/v0.24.0.txt\n> <https://github.com/pandas-dev/pandas/pull/22325#discussion_r214894955>:\n>\n> > +.. _whatsnew_0240.api_breaking.sparse_values:\n> +\n> +``SparseArray`` is now an ``ExtensionArray``\n> +^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n> +\n> +SparseArray now implements the ExtensionArray interface.\n> +To conform to this interface, and for consistency with the rest of pandas, some API breaking\n> +changes were made:\n> +\n> +- ``SparseArray`` is no longer a subclass of :class:`numpy.ndarray`. To convert a SparseArray to a NumPy array, use :meth:`numpy.asarray`.\n> +- ``SparseArray.dtype`` and ``SparseSeries.dtype`` are now instances of ``SparseDtype``, rather than ``np.dtype``. Access the underlying dtype with ``SparseDtype.subtype``.\n> +- :meth:`numpy.asarray(sparse_array)` now returns a dense array with all the values, not just the non-fill-value values (:issue:`14167`)\n> +- ``SparseArray.take`` now matches the API of :meth:`pandas.api.extensions.ExtensionArray.take`.\n> +  * The default value of ``allow_fill`` has changed from ``False`` to ``True``.\n> +  * The ``out`` and ``mode`` parameters are now longer accepted (previously, this raised if they were specified).\n> +  * Passing a scalar for ``indices`` is no longer allowed.\n>\n> no as far as I know. That has always been the standard in whatsnew notes.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/22325#discussion_r214894955>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIm0Ltl3NhvPhPzFqIWkQjS-aP6_1ks5uXnKtgaJpZM4V7I12>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418492764",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-418492764",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 418492764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODQ5Mjc2NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T19:40:36Z",
    "updated_at": "2018-09-04T19:40:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just pushed an update. The biggest change is that the extension array tests are now parametrized by `fill_value` (previously it was just nan). Some of the base tests have to be skipped because we can't build the `expected` properly.\r\n\r\n- Some rely on being able to do `SparseArray([stuff, np.nan], dtype=dtype)`, which fails for int dtype (can't have nan in an int)\r\n- Some rely on `op(self, other)` being equivalent to `self.combine(other)`. This fails because SparseArray ops change the `fill_value` to be `op(self.fill_value, other)`, to maintain the sparsity. Combine can't do that, so we can't make the expected.\r\n\r\nFor now I just skip these cases, since they are tested elsewhere."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419980714",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-419980714",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 419980714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTk4MDcxNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T16:45:05Z",
    "updated_at": "2018-09-10T16:45:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "How do we want to proceed here? I'd like to let this rest in master for a while. I also need to get started on refactoring Period (which will hopefully be smaller).\r\n\r\nIs there anything I can do to make reviewing this easier? There are a couple more incidental change I could split off (`is_bool_dtype/indexer`, cross section of homogenous frame... that's about it). I think that removing BlockIndex in this PR would make reviewing harder, though I may be wrong.\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420009610",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22325#issuecomment-420009610",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22325",
    "id": 420009610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDAwOTYxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T18:15:57Z",
    "updated_at": "2018-09-10T18:15:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "will look in a day or 2\r\n\r\nif u what to split what u described above by me"
  }
]
