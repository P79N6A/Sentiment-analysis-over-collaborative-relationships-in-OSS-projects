[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279250041",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15375#issuecomment-279250041",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15375",
    "id": 279250041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTI1MDA0MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-12T21:19:48Z",
    "updated_at": "2017-02-12T21:19:48Z",
    "author_association": "MEMBER",
    "body": "I would be in favor of that (NA instead of NaN). \r\nThe only thing I am wondering is if we already know whether we want to make a distinction between NA and NaN for float data in pandas 2.0, where this would theoretically be possible when using bitmasks for NA. Because if we want that distinction, it might make sense to wait with the other repr until 2.0 instead 1.0."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279250847",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15375#issuecomment-279250847",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15375",
    "id": 279250847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTI1MDg0Nw==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-12T21:32:08Z",
    "updated_at": "2017-02-12T21:32:08Z",
    "author_association": "MEMBER",
    "body": "It's somewhat out of scope for this issue, but I've been thinking about the NaN problem in pandas 2.0, and I think for backwards compatibility reasons we're going to get forced to make `NaN` and NA / NULL equivalent during the transition period. We could later add warnings when `NaN` is being treated as NA in operations like `s[...] = np.nan` (which I can attest litters people's pandas code), and then later add an option (where the default is that NaN and NA are differnet), and then later remove the option. \r\n\r\nI am pretty confident that using bitmaps everywhere will make our code much simpler and faster (i.e. can use SIMD operations on the bitmaps to deal with null analytics and propagation). "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279251200",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15375#issuecomment-279251200",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15375",
    "id": 279251200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTI1MTIwMA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-12T21:37:28Z",
    "updated_at": "2017-02-12T21:37:28Z",
    "author_association": "MEMBER",
    "body": "As one example of why things will be faster, we can use bitmaps to eliminate branching in aggregations:\r\n\r\n```c++\r\nsum_x += values[i] * GetBit(bitmap, i);\r\n```\r\n\r\ncompared with\r\n\r\n```c++\r\nif (values[i] == values[i]) sum_x += values[i];\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279251224",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15375#issuecomment-279251224",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15375",
    "id": 279251224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTI1MTIyNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-12T21:37:46Z",
    "updated_at": "2017-02-12T21:37:46Z",
    "author_association": "MEMBER",
    "body": "Yes, we could have a 'nan_as_missing' option that is first True and could possibly later change (similar to how we now have `pd.options.mode.use_inf_as_null` option that is False by default)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279251245",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15375#issuecomment-279251245",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15375",
    "id": 279251245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTI1MTI0NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-12T21:38:03Z",
    "updated_at": "2017-02-12T21:38:03Z",
    "author_association": "MEMBER",
    "body": "The issue to discuss this is probably: https://github.com/pandas-dev/pandas2/issues/46\r\n"
  }
]
