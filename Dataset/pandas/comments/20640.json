[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/379814278",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-379814278",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 379814278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTgxNDI3OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-09T16:34:38Z",
    "updated_at": "2018-04-09T16:34:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "``.take()``  was originally a numpy method so ``-1`` indicates a position rather than a missing value.  I don't think we can easily change this, so would make EA consistent here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380749113",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-380749113",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 380749113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDc0OTExMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T10:05:28Z",
    "updated_at": "2018-04-12T10:05:28Z",
    "author_association": "MEMBER",
    "body": "@jreback argued (for good reason) in https://github.com/pandas-dev/pandas/pull/20582 that having to deal with bounds checking / correct behaviour for empty arrays in each ExtensionArray is rather error prone and complex code in each array implementation.\r\n\r\nSo it would be good that we have in pandas a `take` implementation that does this for you (and can also be used in our own ExtensionArrays, to eg fix #20664). \r\nThe current `take_1d` however does currently no bounds checks whatsoever. \r\n\r\n`take_1d` is internally used in many cases where the `indexer` passed to `take_1d` is the result of eg `get_indexer`, so this ensures that the indexer is correct, and for those no out-of-bounds checks are needed.\r\n\r\nIf we want to expose our `take` implementation to extension array authors, I would personally create a new `take` functions which just calls the existing `take_1d`, but additionally does first bounds checking. \r\nThat way, we keep on using the faster `take_1d` functions internally where we know bounds checks are not needed, and we can make the new `take` method public for external usage as well."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380783774",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-380783774",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 380783774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDc4Mzc3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T12:13:25Z",
    "updated_at": "2018-04-12T12:13:25Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  I would personally create a new take functions which just calls the existing take_1d, but additionally does first bounds checking.\r\n\r\n+1. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380784561",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-380784561",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 380784561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDc4NDU2MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T12:16:32Z",
    "updated_at": "2018-04-12T12:16:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Only other thing to add is that\r\n\r\n- I don't want to break API on Categorical.take\r\n- I want consistency between Categorical.take / _take and ExtensionArray.take / _take. I care less about consistency with Series than I do within EAs, though it'd be nice to have consistency here.\r\n\r\nIf we need, then we can make `ExtensionArray._take` the official method that's part of the interface."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380786670",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-380786670",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 380786670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDc4NjY3MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T12:24:46Z",
    "updated_at": "2018-04-12T12:25:38Z",
    "author_association": "MEMBER",
    "body": "> I don't want to break API on Categorical.take\r\n\r\nDo you think there are many people relying on the fact that -1 returns NaN for `Categorical.take`? \r\nWe can deprecate instead of just breaking it. \r\nWe in any case need to somehow fix `Series.take`, because now it dispatches to ExtensionArray.take, which gives wrong results for Series (because it has this difference in behaviour for -1).\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380787653",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-380787653",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 380787653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDc4NzY1Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T12:28:31Z",
    "updated_at": "2018-04-12T12:28:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Do you think there are many people relying on the fact that -1 returns NaN for Categorical.take?\r\n\r\nProbably not :)\r\n\r\n> We in any case need to somehow fix Series.take, because now it dispatches to ExtensionArray.take\r\n\r\nHmm, so you're saying that (on master) we've already changed `Series[Categorical].take`? I didn't realize that... OK, that makes me less certain on what do do here (making a `_take` vs. just changing `ExtensionArray/Categorical.take`. I'd support either I think.). "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380789666",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-380789666",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 380789666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDc4OTY2Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T12:36:06Z",
    "updated_at": "2018-04-12T12:36:06Z",
    "author_association": "MEMBER",
    "body": "> Hmm, so you're saying that (on master) we've already changed Series[Categorical].take\r\n\r\nNo, we didn't change this on master. It's an already existing bug (but only from 0.22, at least in 0.20 it was still working correctly). It's just that if we keep the difference in behaviour between Array.take and Series.take regarding -1, we should not just dispatch from Series.take to Array.take, but deal with this difference in behaviour. \r\nBut for me that's a reason to actually align the default behaviour between Series and Array (Array.take still needs the filling behaviour with -1 which Series.take does not have, but it does not need to be the default)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/381509286",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-381509286",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 381509286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTUwOTI4Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-16T07:45:19Z",
    "updated_at": "2018-04-16T07:45:19Z",
    "author_association": "MEMBER",
    "body": "@jreback @TomAugspurger more comments on this one?\r\n\r\nWhat I am now thinking might be best:\r\n\r\n- Make all our `take` implementation follow numpy semantics by *default* (meaning -1 gets converted to a positive indexer and does not indicate missingness). Consequences:\r\n  - changes the ExtensionArray.take API to follow this, still provide `allow_fill`/`fill_values` keywords to optionally use -1 as missing indicator\r\n  - change Categorical.take as well, but do this with deprecation path\r\n  - This should fix #20664\r\n- Provide a top-level `take` function\r\n  - This would be a wrapper around `take_1d`, but does conversion of negative to positive indices by default, does bounds checking, ..\r\n  - This would be exposed as a general public take function (similar to `factorize` and `unique`) and can be used by extension array authors to apply it on their underlying values if possible.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/381510282",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-381510282",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 381510282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTUxMDI4Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-16T07:49:03Z",
    "updated_at": "2018-04-16T07:49:03Z",
    "author_association": "MEMBER",
    "body": "The current example implementation (in the docstring) of:\r\n\r\n```\r\n           def take(self, indexer, allow_fill=True, fill_value=None):\r\n               indexer = np.asarray(indexer)\r\n               mask = indexer == -1\r\n\r\n               # take on empty array not handled as desired by numpy\r\n               # in case of -1 (all missing take)\r\n               if not len(self) and mask.all():\r\n                   return type(self)([np.nan] * len(indexer))\r\n\r\n               result = self.data.take(indexer)\r\n               result[mask] = np.nan  # NA for this type\r\n               return type(self)(result)\r\n```\r\n\r\nwould then become something like (not fully sure about the `fill_value` handling, need to check that):\r\n\r\n```\r\n           def take(self, indexer, allow_fill=True, fill_value=None):\r\n               if fill_value is None:\r\n                   fill_value = np.nan  # NA for this type\r\n               result = pd.take(self.data, indexer, allow_fill=allow_fill, fill_value=fill_value)\r\n               return type(self)(result)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/381552643",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-381552643",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 381552643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTU1MjY0Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-16T10:22:56Z",
    "updated_at": "2018-04-16T10:22:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think we need to elevate ``.take`` to a top-level. Its just another way to do indexing, which we already have many, and its not settable, so not terrible useful. Why have *another* advertised method of doing the same thing that (``.iloc``) can do. \r\n\r\nAlso a bit -1 (pun) on changing the semantics for this; honestly I don't think the negative indexing is useful and the filling missing values IS useful (but numpy has trouble with this as it will never change dtypes; we just make this work).\r\n\r\nInstead I like your 2nd option, but expose API things that we want EA authors (and internal routines) to use that are not quite first-class top-level things (e.g. ``.factorize()`` and ``.unique()`` are useful generally in there own right).\r\n\r\nmaybe in: ``pandas.core.arrays.api`` ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/381563903",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-381563903",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 381563903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTU2MzkwMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-16T11:10:45Z",
    "updated_at": "2018-04-16T11:10:45Z",
    "author_association": "MEMBER",
    "body": "> Instead I like your 2nd option\r\n\r\nMaybe it was not clear, but I didn't put it as two options that we have to choose from, but as two parts of a single proposal. Although they can be discussed / implemented separately, but it's not either one of the other. \r\nBecause also for the second bullet point (exposed `take` function), we need to decide on the semantics (first bullet point).\r\n\r\n> Also a bit -1 (pun) on changing the semantics for this;\r\n\r\nAbove (https://github.com/pandas-dev/pandas/issues/20640#issuecomment-379814278) you said you were ok with making EA consistent with Series semantics. Which means changing the semantics for EA in master (but EA itself is not yet in released version, so that is no problem. Only Categorical.take is affected). \r\n\r\nIn any case, the \"most\" public `take`, `Series.take`, already uses numpy semantics. And in the case of `Series.take`, having -1 mean \"missing\" does not make really sense, as you then don't have a value for in the index (unless you would also inject missing data in the index, but I don't think we should do that by default). \r\n\r\nCurrently we have different `take` semantics for different `take` methods. If we want to get them consistent, some will need to change.\r\n\r\n> I don't think we need to elevate .take to a top-level. Its just another way to do indexing, which we already have many, and its not settable, so not terrible useful. Why have another advertised method of doing the same thing that (.iloc) can do.\r\n\r\nThe \"top-level\" was maybe a bit a distraction. Let's agree on the idea of an exposed `take` function (I put 'top-level' in my proposal above, but should just have said 'public', as it can be top-level or also in eg `pandas.api` somewhere). \r\nThe exact location where it is exposed, we can discuss later (it's not the most important thing to decide first), but if we do it, it will be a new, officially public (and thus advertised) method. If we want EA authors to be able to use this, I think this is the only way. We can also decide that EA authors need to implement this themselves (as they need to do now). \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/381582903",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-381582903",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 381582903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTU4MjkwMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-16T12:31:39Z",
    "updated_at": "2018-04-16T12:31:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for aligning EA.take with Series & ndarray.take\n\n________________________________\nFrom: Joris Van den Bossche <notifications@github.com>\nSent: Monday, April 16, 2018 6:10:58 AM\nTo: pandas-dev/pandas\nCc: Tom Augspurger; Mention\nSubject: Re: [pandas-dev/pandas] API: take interface for (Extension)Array-likes (#20640)\n\n\nInstead I like your 2nd option\n\nMaybe it was not clear, but I didn't put it as two options that we have to choose from, but as two parts of a single proposal. Although they can be discussed / implemented separately, but it's not either one of the other.\nBecause also for the second bullet point (exposed take function), we need to decide on the semantics (first bullet point).\n\nAlso a bit -1 (pun) on changing the semantics for this;\n\nAbove (#20640 (comment)<https://github.com/pandas-dev/pandas/issues/20640#issuecomment-379814278>) you said you were ok with making EA consistent with Series semantics. Which means changing the semantics for EA in master (but EA itself is not yet in released version, so that is no problem. Only Categorical.take is affected).\n\nIn any case, the \"most\" public take, Series.take, already uses numpy semantics. And in the case of Series.take, having -1 mean \"missing\" does not make really sense, as you then don't have a value for in the index (unless you would also inject missing data in the index, but I don't think we should do that by default).\n\nCurrently we have different take semantics for different take methods. If we want to get them consistent, some will need to change.\n\nI don't think we need to elevate .take to a top-level. Its just another way to do indexing, which we already have many, and its not settable, so not terrible useful. Why have another advertised method of doing the same thing that (.iloc) can do.\n\nThe \"top-level\" was maybe a bit a distraction. Let's agree on the idea of an exposed take function (I put 'top-level' in my proposal above, but should just have said 'public', as it can be top-level or also in eg pandas.api somewhere).\nThe exact location where it is exposed, we can discuss later (it's not the most important thing to decide first), but if we do it, it will be a new, officially public (and thus advertised) method. If we want EA authors to be able to use this, I think this is the only way. We can also decide that EA authors need to implement this themselves (as they need to do now).\n\n—\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://github.com/pandas-dev/pandas/issues/20640#issuecomment-381563903>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABQHIk2-RDwgfDDh6-6LRm8cBcF798K8ks5tpHxCgaJpZM4TMF9x>.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383932482",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-383932482",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 383932482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzkzMjQ4Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T13:35:05Z",
    "updated_at": "2018-04-24T13:35:05Z",
    "author_association": "MEMBER",
    "body": "@jreback @TomAugspurger we forgot to discuss this on the dev hangout with all the subclassing/composition discussion, but any input on this? \r\nI think we should try to decide on this API before 0.23.0."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383933453",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-383933453",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 383933453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzkzMzQ1Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T13:37:56Z",
    "updated_at": "2018-04-24T13:37:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed for 0.23.0\r\n\r\nI think we should follow ndarray.take's semantics here.\r\n\r\n@jorisvandenbossche do you want me to work on this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383933960",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-383933960",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 383933960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzkzMzk2MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T13:39:21Z",
    "updated_at": "2018-04-24T13:39:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah ok with fixing take as suggested"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383942856",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-383942856",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 383942856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk0Mjg1Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T14:03:00Z",
    "updated_at": "2018-04-24T14:03:00Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger if you have time, that would be welcome (I have only limited time today and tomorrow)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383949796",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-383949796",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 383949796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk0OTc5Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T14:20:39Z",
    "updated_at": "2018-04-24T14:20:39Z",
    "author_association": "MEMBER",
    "body": "One additional aspect I was tinkering on (but didn't raise yet) is the `allow_fill=True, fill_value=None` API. \r\n\r\nI don't really \"like\" it, so was trying to think if there would be a nicer way to do it (since this will be new API, we don't necessarily need to follow the internal `take_1d` spelling). \r\n\r\n* Would it be possible to only have one keyword? \r\n  * Because both can be somewhat redundant. In most cases, you either need to specify both or none (since the `allow_fill` default will be False), which doesn't feel as the best API design.\r\n  * It might not be possible, because a `fill_value` of None is actually a valid argument (as fill value), so cannot be used to indicate that there should be no filling (unless we use a custom singleton instead of None for the default)\r\n* The naming: I personally find `fill_value` a bit confusing, and I seem to remember we had a similar discussion on ExtensionArray related PR about `fill_value` vs `na_value`\r\n  * On the other hand, related methods like `reindex` also use `fill_value`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383958533",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-383958533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 383958533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk1ODUzMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T14:42:46Z",
    "updated_at": "2018-04-24T14:54:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suppose we could do\r\n\r\n```python\r\nno_default = object()\r\n\r\ndef take(self, indexer, na_value/fill_value=no_default):\r\n    pass\r\n```\r\n\r\nfor na_value / fill_value (whatever we call) of no_default, we use Python /\r\nNumPy semantics of slicing from the right.\r\n\r\nFor other na_values, we set -1 to be NA. Should we raise for other negative\r\nindexers?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383964118",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-383964118",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 383964118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk2NDExOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T14:57:19Z",
    "updated_at": "2018-04-24T14:57:19Z",
    "author_association": "MEMBER",
    "body": "Yep, that's what I meant with a custom singleton. I think I would be in favor of that.\r\n\r\n> For other na_values, we set -1 to be NA. Should we raise for other negative indexers?\r\n\r\nYes, I think so. In case of filling, only -1 should be allowed as negative value."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383964729",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-383964729",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 383964729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk2NDcyOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T14:58:48Z",
    "updated_at": "2018-04-24T14:58:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "One slight issue with `fill_value`. Let's consider `DecimalArray`. We'd like its fill value be `Decimal('NaN')`, instead of `np.nan`. How would we get that information to `DecimalArray.take`?\r\n\r\nCurrently `Series[DecimalArray].reindex()` passes through `fill_value=np.nan`, since that's the default in `algorithms.take_nd`. Are we OK with\r\n\r\n- specifying no default for `take_nd`'s `fill_value`.\r\n- only passing through `take_nd`'s fill_value to `ExtensionArray.take` if it isn't the default?\r\n\r\nI'll see if that breaks anything."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383965564",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-383965564",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 383965564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk2NTU2NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T15:01:11Z",
    "updated_at": "2018-04-24T15:01:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "To clarify, that would allow EAs to define a default `fill_value` as a class attribute. We could make the default `np.nan`.\r\n\r\nThat default value would probably go on the type?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383968544",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-383968544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 383968544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk2ODU0NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T15:09:30Z",
    "updated_at": "2018-04-24T15:09:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, this doesn't look too promising.\r\n\r\nWe may just have to tell EA-authors that when you're expected to do pandas-style `take`, you're getting `np.nan` for fill_value. It's up to you to interpret that how you want (e.g. transforming `np.nan` to `Decimal('NaN')`.)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383971857",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-383971857",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 383971857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk3MTg1Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T15:18:55Z",
    "updated_at": "2018-04-24T15:18:55Z",
    "author_association": "MEMBER",
    "body": "> Currently Series[DecimalArray].reindex() passes through fill_value=np.nan, since that's the default in algorithms.take_nd\r\n\r\nI don't know if it is relevant, but `reindex` does already do the \"correct\" thing although its default `fill_value` is not honored:\r\n\r\n```\r\nIn [23]: from pandas.tests.extension.decimal.array import DecimalArray, make_data\r\n\r\nIn [24]: arr = DecimalArray(make_data())\r\n\r\nIn [27]: s = pd.Series(arr[:3])\r\n\r\nIn [29]: s.reindex([2, 3])\r\nOut[29]: \r\n2    0.31849019906500730670018128876108676195144653...\r\n3                                                  NaN\r\ndtype: decimal\r\n\r\nIn [30]: s.reindex([2, 3]).values\r\nOut[30]: \r\nDecimalArray(array([Decimal('0.318490199065007306700181288761086761951446533203125'),\r\n       Decimal('NaN')], dtype=object))\r\n```\r\n\r\nI suppose this is because currenlty `DecimalArray.take` does not honor the `fill_value` keyword.\r\n\r\n\r\n> Hmm, this doesn't look too promising.\r\n>\r\n> We may just have to tell EA-authors that when you're expected to do pandas-style take, you're getting np.nan for fill_value. It's up to you to interpret that how you want (e.g. transforming np.nan to Decimal('NaN').)\r\n\r\nThat might indicate that the current API of `allow_fill=True/False, fill_value=..` is actually not that bad? As then pandas can say: we want pandas-style take with filling without specifying a fill_value (which would then mean that they can use their default)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383995986",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-383995986",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 383995986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk5NTk4Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T16:28:06Z",
    "updated_at": "2018-04-24T16:30:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's the new implementation for `DecimalArray.take`\r\n\r\n```python\r\n    def take(self, indexer, fill_value=_no_default):\r\n        indexer = np.asarray(indexer)\r\n        if fill_value is _no_default:\r\n            # NumPy style\r\n            result = self.data.take(indexer)\r\n        else:\r\n            if isinstance(fill_value, numbers.Real) and np.isnan(fill_value):\r\n                # convert the default np.nan to NaN.\r\n                fill_value = decimal.Decimal(\"NaN\")\r\n            mask = indexer == -1\r\n\r\n            # take on empty array not handled as desired by numpy\r\n            # in case of -1 (all missing take)\r\n            if not len(self) and mask.all():\r\n                return type(self)([fill_value] * len(indexer))\r\n\r\n            result = self.data.take(indexer)\r\n            result[mask] = fill_value\r\n\r\n        return type(self)(result)\r\n```\r\n\r\nThe bit I don't like is the `convert np.nan to NaN`. It means we can't do `decimal_array.take(indexer, fill_value=np.nan)`, and actually get `np.nan` as the fill value (if that's a thing you want to do)...\r\n\r\nBut this does satisfy the requirements I think.\r\n\r\n\r\n```python\r\nIn [14]: s = pd.Series(DecimalArray([1, 2, 3]))\r\n\r\nIn [15]: s.take([0, 1, -1])\r\nOut[15]:\r\n0    1\r\n1    2\r\n2    3\r\ndtype: decimal\r\n\r\nIn [16]: s.reindex([0, 1, -1])\r\nOut[16]:\r\n 0      1\r\n 1      2\r\n-1    NaN\r\ndtype: decimal\r\n```\r\n\r\nI'll put up a WIP PR so it's easier to discuss."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383998697",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-383998697",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 383998697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk5ODY5Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T16:36:46Z",
    "updated_at": "2018-04-24T16:36:46Z",
    "author_association": "MEMBER",
    "body": "IMO we should not put this in `DecimalArray.take` (which means: require extension authors to do something similar), but move that code (more or less) to a public `take` (but that can be longer term improvement of course. Most important on short term is public API on ExtensionArrays itself). \r\nEg in the case of geopandas, I would like to use such a function on my integer array with fill_value of 0."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383999131",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-383999131",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 383999131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk5OTEzMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T16:38:17Z",
    "updated_at": "2018-04-24T16:38:17Z",
    "author_association": "MEMBER",
    "body": "> The bit I don't like is the convert np.nan to NaN\r\n\r\nIs that because pandas will typically call `EA.take` with a `fill_value=np.nan` ? \r\nIn which case almost every EA will need to just ignore that default? (or convert it like you do above)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384002296",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20640#issuecomment-384002296",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20640",
    "id": 384002296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDAwMjI5Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T16:48:42Z",
    "updated_at": "2018-04-24T16:48:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> IMO we should not put this in DecimalArray.take\r\n\r\nAgreed. I'm trying to scope out how things *should* work. Then I'll work on a new `take` method in pandas that EA authors can use to make the implementation easier.\r\n\r\n> Is that because pandas will typically call EA.take with a fill_value=np.nan \r\n\r\nPrecisely. Specifically `algos.take_nd` is calling EA.take with whatever is passed to it (if anything). I briefly looked at changing the default for `algos.take_nd`, but things became messy."
  }
]
