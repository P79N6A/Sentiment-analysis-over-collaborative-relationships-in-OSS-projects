[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44824251",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-44824251",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 44824251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODI0MjUx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-02T10:58:15Z",
    "updated_at": "2014-06-02T10:58:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://pandas-docs.github.io/pandas-docs-travis/gotchas.html#timestamp-limitations\n\nsimply use periods and use NaT as appropriate for missing values\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49715875",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-49715875",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 49715875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzE1ODc1",
    "user": {
      "login": "ifmihai",
      "id": 1412400,
      "node_id": "MDQ6VXNlcjE0MTI0MDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1412400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ifmihai",
      "html_url": "https://github.com/ifmihai",
      "followers_url": "https://api.github.com/users/ifmihai/followers",
      "following_url": "https://api.github.com/users/ifmihai/following{/other_user}",
      "gists_url": "https://api.github.com/users/ifmihai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ifmihai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ifmihai/subscriptions",
      "organizations_url": "https://api.github.com/users/ifmihai/orgs",
      "repos_url": "https://api.github.com/users/ifmihai/repos",
      "events_url": "https://api.github.com/users/ifmihai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ifmihai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-22T09:19:04Z",
    "updated_at": "2014-07-22T09:19:04Z",
    "author_association": "NONE",
    "body": "it's a more common issue than believed\n\nI bump into this issue more often than not\n\nmy guess is that at least 99% of pandas users dont need nanoseconds\n\nif this is true,\nthen it would be common sense to use microseconds as default\nand then to have something like\ndf = P.DataFrame(index=nano_range(start,end))\n\nnano seconds usage is a particular case, not the rule\n\nI really don't understand the rationale behind all this nano planning\n\nBut I dont understand how hard it would be to change to microseconds, either\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49727451",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-49727451",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 49727451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzI3NDUx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-22T11:36:16Z",
    "updated_at": "2014-07-22T11:36:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ifmihai \n\n```\nIn [84]: period_range('201-1-1 10:20','9000-1-1 12:00',freq='H')\nOut[84]: \n<class 'pandas.tseries.period.PeriodIndex'>\n[201-01-01 10:00, ..., 9000-01-01 12:00]\nLength: 77130459, Freq: H\n```\n\nyou can simply use a `PeriodIndex` to represent any time span you want. `DatetimeIndex` and `PeriodIndex` have different usecases. `DatetimeIndex` provides maximum resolution within the most common timespans and is thus pretty general. If you need more range but less resolution then use a `PeriodIndex`. You CAN have it both ways. No need to change the defaults and try to conform everyone to one representation.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49742622",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-49742622",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 49742622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzQyNjIy",
    "user": {
      "login": "ifmihai",
      "id": 1412400,
      "node_id": "MDQ6VXNlcjE0MTI0MDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1412400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ifmihai",
      "html_url": "https://github.com/ifmihai",
      "followers_url": "https://api.github.com/users/ifmihai/followers",
      "following_url": "https://api.github.com/users/ifmihai/following{/other_user}",
      "gists_url": "https://api.github.com/users/ifmihai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ifmihai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ifmihai/subscriptions",
      "organizations_url": "https://api.github.com/users/ifmihai/orgs",
      "repos_url": "https://api.github.com/users/ifmihai/repos",
      "events_url": "https://api.github.com/users/ifmihai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ifmihai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-22T14:02:44Z",
    "updated_at": "2014-07-22T14:09:53Z",
    "author_association": "NONE",
    "body": "@jreback \n\"no need to change the defaults and try to conform everyone to one representation\n\nwhat about nanoseconds? isnt it the same?\n\ni feel forced to conform to whoever considered nanoseconds is best (which is really not practical for most user cases)\nI would surely what to hearthe opinion of him who decided nanosecond unit\nlisten to what he has to say\nI doubt it will be convincing, except probably he was forced by numpy, but that's out of my league\n\nanyway, nanosecond unit receives a big -1 from me\n(i already started to hate nanoseconds btw :D)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49744926",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-49744926",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 49744926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzQ0OTI2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-22T14:19:12Z",
    "updated_at": "2014-07-22T14:19:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ifmihai this was decided quite a long time ago, by @wesm (and I think it was numpy that drove it, not really sure). As I said before, that was one reason Periods were created. Changing the default is a non-starter.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51121820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-51121820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 51121820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTIxODIw",
    "user": {
      "login": "CarstVaartjes",
      "id": 2722815,
      "node_id": "MDQ6VXNlcjI3MjI4MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2722815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarstVaartjes",
      "html_url": "https://github.com/CarstVaartjes",
      "followers_url": "https://api.github.com/users/CarstVaartjes/followers",
      "following_url": "https://api.github.com/users/CarstVaartjes/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarstVaartjes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarstVaartjes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarstVaartjes/subscriptions",
      "organizations_url": "https://api.github.com/users/CarstVaartjes/orgs",
      "repos_url": "https://api.github.com/users/CarstVaartjes/repos",
      "events_url": "https://api.github.com/users/CarstVaartjes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarstVaartjes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-04T21:41:44Z",
    "updated_at": "2014-08-04T21:41:44Z",
    "author_association": "NONE",
    "body": "But how can we read a csv file for instance and convert dates to periods? Sincere question, as I'm really struggling with this and the documentation is really unclear here. Because there is\n\n1) a \"to_datetime\" where I can give a date format but it will refuse to convert out of nanosecond bound datetimes, so I cannot use it (I will lose data); the units do not work (as in: \"unit='s'\" does not solve the out of bound issue, while in numpy it does!)\n 2) a \"to_timestamp\", but that's not really anything with a string to date conversion\n 3) a \"to_period\", also not a string to date conversion but \"Convert TimeSeries from DatetimeIndex to PeriodIndex\"; however I cannot create a DatetimeIndex with my values in the first place because I lose all out of bound values\n\nSee also this example:\n\n```\nx_df = DataFrame([[20120101, 20121231], [20130101, 20131231], [20140101, 20141231], [20150101, 99991231]])\nx_df.columns = ['date_from', 'date_to']\ndate_def = '%Y%m%d'\nx_df['date_to_2'] = [datetime.datetime.strptime(str(date_val), date_def) for date_val in x_df['date_to']]\nx_df['date_to_3'] = [np.datetime64(date_val, unit='s') for date_val in x_df['date_to_2']] #\n# it's all objects, even though date_to_3 is a full np.datetime64\nx_df.dtypes\nlist(x_df['date_to_3'])\n```\n\ni cannot make date_to_3 into a period (as far as i know) and while being a perfectly nice np.datetime64 (with unit='s' instead of unit='ns'), Pandas refuses to see it as such.\nIt's really a Pandas limitation afaik; this really is an issue and Periods do not solve it (in any way that I can see at the moment)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51124087",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-51124087",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 51124087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTI0MDg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-04T22:00:56Z",
    "updated_at": "2014-08-04T22:00:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Read them in as ints (you don't really need to do anything special to do this), just don't specify 'parse_dates'\n\n```\nIn [27]: x_df.to_csv('test.csv',mode='w')\n\nIn [28]: !cat test.csv\n,date_from,date_to\n0,20120101,20121231\n1,20130101,20131231\n2,20140101,20141231\n3,20150101,99991231\n\nIn [29]: df = read_csv('test.csv',index_col=0)\n\nIn [30]: df\nOut[30]: \n   date_from   date_to\n0   20120101  20121231\n1   20130101  20131231\n2   20140101  20141231\n3   20150101  99991231\n\nIn [31]: df.dtypes\nOut[31]: \ndate_from    int64\ndate_to      int64\ndtype: object\n```\n\nDefine a converter that creates a period from an int\n\n```\nIn [32]: def conv(x):\n    return Period(year=x/10000,month=x/100 % 100, day=x%100,freq='D')\n   ....: \n\nIn [33]: converted = df.applymap(conv)\n\nIn [34]: converted\nOut[34]: \n    date_from     date_to\n0  2012-01-01  2012-12-31\n1  2013-01-01  2013-12-31\n2  2014-01-01  2014-12-31\n3  2015-01-01  9999-12-31\n\nIn [35]: converted.iloc[3,0]\nOut[35]: Period('2015-01-01', 'D')\n\nIn [36]: converted.iloc[3,1]\nOut[36]: Period('9999-12-31', 'D')\n```\n\nOf course this could be vectorized / more natural, e.g. a `to_periods` is prob a good idea. \n\nGive it a go!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51124773",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-51124773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 51124773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTI0Nzcz",
    "user": {
      "login": "CarstVaartjes",
      "id": 2722815,
      "node_id": "MDQ6VXNlcjI3MjI4MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2722815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarstVaartjes",
      "html_url": "https://github.com/CarstVaartjes",
      "followers_url": "https://api.github.com/users/CarstVaartjes/followers",
      "following_url": "https://api.github.com/users/CarstVaartjes/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarstVaartjes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarstVaartjes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarstVaartjes/subscriptions",
      "organizations_url": "https://api.github.com/users/CarstVaartjes/orgs",
      "repos_url": "https://api.github.com/users/CarstVaartjes/repos",
      "events_url": "https://api.github.com/users/CarstVaartjes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarstVaartjes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-04T22:07:10Z",
    "updated_at": "2014-08-04T22:07:10Z",
    "author_association": "NONE",
    "body": "Thanks! It works perfectly like this, I will test HDF5 saving & queries this week too.\n\nI would really add this snippet to http://pandas.pydata.org/pandas-docs/stable/timeseries.html (and yes, to_periods would be a really great idea :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51127667",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-51127667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 51127667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTI3NjY3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-04T22:37:45Z",
    "updated_at": "2014-08-04T22:37:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, why don't you open a feature request for `to_periods` (with as complete doc-string as you can)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51127876",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-51127876",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 51127876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTI3ODc2",
    "user": {
      "login": "CarstVaartjes",
      "id": 2722815,
      "node_id": "MDQ6VXNlcjI3MjI4MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2722815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarstVaartjes",
      "html_url": "https://github.com/CarstVaartjes",
      "followers_url": "https://api.github.com/users/CarstVaartjes/followers",
      "following_url": "https://api.github.com/users/CarstVaartjes/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarstVaartjes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarstVaartjes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarstVaartjes/subscriptions",
      "organizations_url": "https://api.github.com/users/CarstVaartjes/orgs",
      "repos_url": "https://api.github.com/users/CarstVaartjes/repos",
      "events_url": "https://api.github.com/users/CarstVaartjes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarstVaartjes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-04T22:40:17Z",
    "updated_at": "2014-08-04T22:40:17Z",
    "author_association": "NONE",
    "body": "I've put it on my to do list for later this week (and will unscrupulously copy from to_datetime with the additional Period frequency formats)! \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55041633",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-55041633",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 55041633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQxNjMz",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-09T21:52:04Z",
    "updated_at": "2014-09-09T21:52:04Z",
    "author_association": "MEMBER",
    "body": "@jreback I know PeriodIndex is the suggested work around for dates that don't fit in ns precision, but there is a difference between periods and datetimes for meaning as well -- periods refer to a periods of time rather than a time point.\n\nFor what it's worth, I've played a bit with `np.datetime64` and I don't think nanosecond decision was driven by numpy. Numpy seems to prefer us/microsecond precision (there are a few more bugs with ns precision).\n\nI do recognize that this may be too late to change now but I do think this is something worth considering. I suspect there are a lot more users who would be happy with a fixed choice of \"us\" rather than \"ns\" precision. Of course, it would also be a lot of work to actually do the implementation (and it's not the top priority for me).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55042691",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-55042691",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 55042691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQyNjkx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-09T22:01:14Z",
    "updated_at": "2014-09-09T22:01:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this would have to be a hybrid, e.g. carry around the units on the `Timestamp/DatetimeIndex`. Not a big deal to add it. BUT would need some validation.\n\nI think it IS possible, but prob a bit of work.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/219935544",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-219935544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 219935544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTkzNTU0NA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T06:21:21Z",
    "updated_at": "2016-05-18T06:21:21Z",
    "author_association": "MEMBER",
    "body": "Reopening this -- this is still a recurrent issue, despite the work around of using PeriodIndex.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220023791",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220023791",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220023791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDAyMzc5MQ==",
    "user": {
      "login": "rabernat",
      "id": 1197350,
      "node_id": "MDQ6VXNlcjExOTczNTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1197350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rabernat",
      "html_url": "https://github.com/rabernat",
      "followers_url": "https://api.github.com/users/rabernat/followers",
      "following_url": "https://api.github.com/users/rabernat/following{/other_user}",
      "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions",
      "organizations_url": "https://api.github.com/users/rabernat/orgs",
      "repos_url": "https://api.github.com/users/rabernat/repos",
      "events_url": "https://api.github.com/users/rabernat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rabernat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T13:21:31Z",
    "updated_at": "2016-05-18T13:21:31Z",
    "author_association": "NONE",
    "body": "👍  From me. The date range limitation is a HUGE issue for many scientific communities. I find it very hard to believe that there are more pandas users who want nanoseconds than who want to use dates before 1678.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220024836",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220024836",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220024836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDAyNDgzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T13:25:33Z",
    "updated_at": "2016-05-18T13:25:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "As I have stated many times, this would require some major effort. It IS certainly possible, and the extension dtypes are able to support this. But would really need to be spearheaded by someone who this would be very useful. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220036250",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220036250",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220036250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDAzNjI1MA==",
    "user": {
      "login": "CarstVaartjes",
      "id": 2722815,
      "node_id": "MDQ6VXNlcjI3MjI4MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2722815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarstVaartjes",
      "html_url": "https://github.com/CarstVaartjes",
      "followers_url": "https://api.github.com/users/CarstVaartjes/followers",
      "following_url": "https://api.github.com/users/CarstVaartjes/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarstVaartjes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarstVaartjes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarstVaartjes/subscriptions",
      "organizations_url": "https://api.github.com/users/CarstVaartjes/orgs",
      "repos_url": "https://api.github.com/users/CarstVaartjes/repos",
      "events_url": "https://api.github.com/users/CarstVaartjes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarstVaartjes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T14:05:10Z",
    "updated_at": "2016-05-18T14:05:10Z",
    "author_association": "NONE",
    "body": "Hi @jreback! I definitely understand as this https://github.com/pydata/pandas/search?q=ns gives 150 matches!\nBut the wanted solution matters a lot I think. Replacing it by microseconds instead of nanoseconds would be not that difficult (of course, thorough testing needed etc), but might break things (do we know if people really use nanosecond precision atm?)\nMaking it dynamic would be more difficult and still have a series of questions (just of the top of my head):\n- how should you be able to specify it? (especially with functions like read_csv)\n- should it convert numpy datetime arrays when you create a DataFrame or use the current precision instead?\n- can one DataFrame contain datetime arrays of different precision?\n\nCan you give some guidance as to what should be the best route for this and what kind of requirements you would have?\n\nP.s. because of HDF5 and Bcolz we couldn't switch to time periods, so we still have this issue and have lots of catch procedures in place to work around it, so solving this would be great for me personally.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220038114",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220038114",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220038114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDAzODExNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T14:11:23Z",
    "updated_at": "2016-05-18T14:13:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@CarstVaartjes oh I think you misunderstand. This would NOT be a replacement of the existing `M8[ns]` that would be WAY too disruptive.\n- Instead you could simply use `M8[us]` as a dtype (and `M[s]`), e.g. whatever. There would have to be some heuristics to 'fit' arbitrary data (but this is actually quite easy; we already do this for printing).\n- We already accept `M8[ns]` in the dtype specier of almost everything; so a user could easily opt-in for this. I think it could be fully back-compat.\n- The biggest stumbling block here is that when setting issue you would possibly have to promote dtypes to a higher frequency. Not very difficult (and its cheap to check).\n- Of course this adds complexity, so maybe it makes sense to just add a single new supported dtype (at least at first, e.g.maybe `M8[ms]`). which I think gives appropriate ranges.\n- This would break the current block storage model slightly (though it could easily be modelled like the DatetimeTZ blocks which are non-consolidated).\n- Lots of IO systems would have to be fixed to accomodate this (namely HDF5). Again its pretty straightforward, just needs lots of testing.\n\nLet me re-iterate, this is a bit non-trivial as it touches most of pandas. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220066751",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220066751",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220066751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDA2Njc1MQ==",
    "user": {
      "login": "ifmihai",
      "id": 1412400,
      "node_id": "MDQ6VXNlcjE0MTI0MDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1412400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ifmihai",
      "html_url": "https://github.com/ifmihai",
      "followers_url": "https://api.github.com/users/ifmihai/followers",
      "following_url": "https://api.github.com/users/ifmihai/following{/other_user}",
      "gists_url": "https://api.github.com/users/ifmihai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ifmihai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ifmihai/subscriptions",
      "organizations_url": "https://api.github.com/users/ifmihai/orgs",
      "repos_url": "https://api.github.com/users/ifmihai/repos",
      "events_url": "https://api.github.com/users/ifmihai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ifmihai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T15:38:21Z",
    "updated_at": "2016-05-18T15:38:21Z",
    "author_association": "NONE",
    "body": "Trivial or non trivial, if lots of users are affected (me included), then it should be given priority. \n\nIt would be very interesting to have a poll on this, to see the actual reality\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220067613",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220067613",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220067613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDA2NzYxMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T15:41:02Z",
    "updated_at": "2016-05-18T15:41:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ifmihai are you volunteering? priority is determined by whom does things. Even if lots of people want it that wouldn't determine priority, sure it might influence it, but it still comes down to what contributors (all volunteers) actually want to work on / have time.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220108544",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220108544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220108544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDEwODU0NA==",
    "user": {
      "login": "ifmihai",
      "id": 1412400,
      "node_id": "MDQ6VXNlcjE0MTI0MDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1412400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ifmihai",
      "html_url": "https://github.com/ifmihai",
      "followers_url": "https://api.github.com/users/ifmihai/followers",
      "following_url": "https://api.github.com/users/ifmihai/following{/other_user}",
      "gists_url": "https://api.github.com/users/ifmihai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ifmihai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ifmihai/subscriptions",
      "organizations_url": "https://api.github.com/users/ifmihai/orgs",
      "repos_url": "https://api.github.com/users/ifmihai/repos",
      "events_url": "https://api.github.com/users/ifmihai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ifmihai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T17:59:42Z",
    "updated_at": "2016-05-18T17:59:42Z",
    "author_association": "NONE",
    "body": "@jreback I agree with what you say. English is not my first language, I hope i didn't upset anyone.\nI guess it would have been better to say: \"it should be given more priority\". \nThat's why i added the poll idea.\nI didn't mean to sound awkward or disrespectful to you guys, who actually implement features in pandas.\n\nas for volunteering, the issue is completely over my head, completely and beyond\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220109635",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220109635",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220109635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDEwOTYzNQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T18:03:33Z",
    "updated_at": "2016-05-18T18:03:33Z",
    "author_association": "MEMBER",
    "body": "> Of course this adds complexity, so maybe it makes sense to just add a single new supported dtype (at least at first, e.g.maybe M8[ms]). which I think gives appropriate ranges.\n\nAgreed, I would consider adding only one new resolution, or at the very least constraining ourselves to units that divide a second, which keeps all the math changes very straightforward (just factors of 1000).\n\nWhat datetime64 resolutions are actually necessary? For climate purposes, I think `us` resolution would suffice and conveniently matches the resolution of Python's builtin `datetime`. See this page for the time span for various datetime units: http://docs.scipy.org/doc/numpy-1.10.1/reference/arrays.datetime.html#datetime-units\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220109648",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220109648",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220109648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDEwOTY0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T18:03:38Z",
    "updated_at": "2016-05-18T18:03:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ifmihai no worries. \n\nI think what might be helpful is for an e-mail to go out to:\n\nhttps://groups.google.com/forum/#!forum/pydata see if can get some feedback (put this issue in there) and have feedback posted here and consolidate.\n\nE.g. what are various usecases / examples / pseudo-code of where this would be used (and the current work-arounds). I _know_ that people want it, but I agree some more voices would be helpful to shed light on _how_ it would be used (e.g. is say implementing `M[ms]` good enough (for now). do people tend to have data in say `M8[ms]` THEN add in data at a lower frequency\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220281059",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220281059",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220281059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDI4MTA1OQ==",
    "user": {
      "login": "ifmihai",
      "id": 1412400,
      "node_id": "MDQ6VXNlcjE0MTI0MDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1412400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ifmihai",
      "html_url": "https://github.com/ifmihai",
      "followers_url": "https://api.github.com/users/ifmihai/followers",
      "following_url": "https://api.github.com/users/ifmihai/following{/other_user}",
      "gists_url": "https://api.github.com/users/ifmihai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ifmihai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ifmihai/subscriptions",
      "organizations_url": "https://api.github.com/users/ifmihai/orgs",
      "repos_url": "https://api.github.com/users/ifmihai/repos",
      "events_url": "https://api.github.com/users/ifmihai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ifmihai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-19T10:02:31Z",
    "updated_at": "2016-05-19T10:02:31Z",
    "author_association": "NONE",
    "body": "@jreback \n\n> do people tend to have data in say M8[ms] THEN add in data at a lower frequency\n\nI don't understand what you mean.\ncan you reformulate in a form of a question, for me to post it on pydata google group?\n(i just have to add this question, and then i will post the poll there)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220322313",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220322313",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220322313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDMyMjMxMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-19T13:22:53Z",
    "updated_at": "2016-05-19T13:22:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "So the main issue is casting.\n\n```\nIn [1]: s = Series(pd.date_range('20130101',periods=3,freq='s'))\n\nIn [2]: s\nOut[2]: \n0   2013-01-01 00:00:00\n1   2013-01-01 00:00:01\n2   2013-01-01 00:00:02\ndtype: datetime64[ns]\n\nIn [3]: s[2] = pd.Timestamp('2013-01-01 00:00:02.123456789')\n\nIn [4]: s\nOut[4]: \n0   2013-01-01 00:00:00.000000000\n1   2013-01-01 00:00:01.000000000\n2   2013-01-01 00:00:02.123456789\ndtype: datetime64[ns]\n```\n\nIf for example [2] was actually `datetime64[s]` freq. Then [4] would have to change the freq. This is not that big of a deal (as we tend to do this as needed for int/float conversions and such things), but can get somewhat tricky.\n\nFurther, it is possible that something that can be represented in 1 freq (e.g. in 'M8[s]' you can represent `Timestamp('3000-01-01')`, while it is not possible in `M8[ns]`). So these would again have to convert (or even convert to `object`).\n\nSo this just adds more complexity and more cases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220801464",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220801464",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220801464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDgwMTQ2NA==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-21T21:32:12Z",
    "updated_at": "2016-05-21T21:32:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the argument for a new frequency default (or an additional one) to have it at the same frequency as datetime and numpy defaults, so `us`, sounds like a  good argument to me. As another datapoint, in spacecraft data analysis, while the spacecraft clock kernel often carries a very high precision, microseconds or nanoseconds, instrument data times, like exposure start time and the like is often only recorded with millisecond precision. So `us` would definitely be enough for those use cases. This might be different for the Gravitational wave mission LISA Pathfinder, but they are an exception. ;)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220801542",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220801542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220801542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDgwMTU0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-21T21:33:53Z",
    "updated_at": "2016-05-21T21:33:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "don't all of these spacecraft actually use JavaScript? internally? or is that just the telescopes?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220802085",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220802085",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220802085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDgwMjA4NQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-21T21:47:30Z",
    "updated_at": "2016-05-21T21:47:30Z",
    "author_association": "MEMBER",
    "body": "I'm pretty sure that if you proposed running a non-statically typed\nlanguage on spacecraft you would laughed at. Data analysis is a different\nstory, though.\nOn Sat, May 21, 2016 at 2:34 PM Jeff Reback notifications@github.com\nwrote:\n\n> don't all of these spacecraft actually use JavaScript? internally? or is\n> that just the telescopes?\n> \n> —\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/issues/7307#issuecomment-220801542\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220802153",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220802153",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220802153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDgwMjE1Mw==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-21T21:48:45Z",
    "updated_at": "2016-05-21T21:48:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "What he said. ;)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220802212",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220802212",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220802212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDgwMjIxMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-21T21:50:05Z",
    "updated_at": "2016-05-21T21:50:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://ieeexplore.ieee.org/xpl/login.jsp?tp=&arnumber=6187392&url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D6187392\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/220802843",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7307#issuecomment-220802843",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7307",
    "id": 220802843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDgwMjg0Mw==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-21T22:05:52Z",
    "updated_at": "2016-05-21T22:05:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wow, interesting, that explains all the delays! ;)\nBut I still think, that's the telescope operation control and planning, I found documents describing the Javascripts engine and how it interfaces with the flight software. In [this document](https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&ved=0ahUKEwjK_4uzlOzMAhVj4IMKHeaLA9sQFggnMAE&url=https%3A%2F%2Fwww.nasa.gov%2Fsites%2Fdefault%2Ffiles%2F01-14_jwst_isim_independent_testing_0.pptx&usg=AFQjCNHt8iFWS1EirQSfJgqFWedX-1pT2A&sig2=wHjb72wziTNJnHXF12dRZA) one can see references to C++, and how they use UML and complexity analyses to check their software. That also would explain some of the delays, as all the spacecraft I worked on (Dawn, MRO, BepiColombo) used simply a C-based spacecraft control and even our instruments had to compile their interfaces to the spacecraft memories and housekeeping in C. I would consider C++ already quite a jump in complexity, certainly not normal for a mission, but then even on top of that a complete Javascript engine? Wow, this mission is gonna be complex...\n"
  }
]
