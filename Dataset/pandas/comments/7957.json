[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51582292",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7957#issuecomment-51582292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7957",
    "id": 51582292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTgyMjky",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T09:45:08Z",
    "updated_at": "2014-08-08T09:45:08Z",
    "author_association": "MEMBER",
    "body": "@NathanielCapital Did it work without specifying a max length? (so with `String` instead of `String(some_number)`). I suppose a `varchar` type will be created for MS SQL, but eg http://docs.sqlalchemy.org/en/rel_0_9/dialects/mssql.html#sqlalchemy.dialects.mssql.VARCHAR seems to imply a length should be given.\n\nFor strings it seems indeed better to use `String` (which will be converted to `character varying` in general I think). But would there be other consequences of changing `Text` to `String`? \n@mangecoeur @danielballan @hayd any idea?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51698789",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7957#issuecomment-51698789",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7957",
    "id": 51698789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjk4Nzg5",
    "user": {
      "login": "NathanielCapital",
      "id": 6313430,
      "node_id": "MDQ6VXNlcjYzMTM0MzA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6313430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NathanielCapital",
      "html_url": "https://github.com/NathanielCapital",
      "followers_url": "https://api.github.com/users/NathanielCapital/followers",
      "following_url": "https://api.github.com/users/NathanielCapital/following{/other_user}",
      "gists_url": "https://api.github.com/users/NathanielCapital/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NathanielCapital/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NathanielCapital/subscriptions",
      "organizations_url": "https://api.github.com/users/NathanielCapital/orgs",
      "repos_url": "https://api.github.com/users/NathanielCapital/repos",
      "events_url": "https://api.github.com/users/NathanielCapital/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NathanielCapital/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-09T21:14:48Z",
    "updated_at": "2014-08-09T21:14:48Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche  Yes, it works without specifying a  max length. I just made it return String type other than Text. The table text field generated is nvarchar(max) on my Microsoft SQL 2008 R2.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51800796",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7957#issuecomment-51800796",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7957",
    "id": 51800796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODAwNzk2",
    "user": {
      "login": "aergener",
      "id": 5935200,
      "node_id": "MDQ6VXNlcjU5MzUyMDA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5935200?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aergener",
      "html_url": "https://github.com/aergener",
      "followers_url": "https://api.github.com/users/aergener/followers",
      "following_url": "https://api.github.com/users/aergener/following{/other_user}",
      "gists_url": "https://api.github.com/users/aergener/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aergener/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aergener/subscriptions",
      "organizations_url": "https://api.github.com/users/aergener/orgs",
      "repos_url": "https://api.github.com/users/aergener/repos",
      "events_url": "https://api.github.com/users/aergener/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aergener/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T16:02:35Z",
    "updated_at": "2014-08-11T16:02:35Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche Text is deprecated in the SQL Server, and has limited functionality. (see links below) Nvarchar and varchar types are preferable. Since this may vary between SQL flavors, perhaps there could be a setter function to set the string representation in pandas.io.sql.PandasSQLTable._sqlalchemy_type.\n\nhttp://msdn.microsoft.com/en-us/library/ms187993.aspx\nhttp://stackoverflow.com/questions/564755/sql-server-text-type-vs-varchar-data-type\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51802262",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7957#issuecomment-51802262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7957",
    "id": 51802262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODAyMjYy",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T16:13:54Z",
    "updated_at": "2014-08-11T16:13:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@aergener it would be better to avoid requiring setters like this - I'm confident we can get this to work without encouraging hacks, though anyone who really wants to change behaviour is free to subclass PandasSQLTable and override whatever they like.\n\nSeems there are 2 options:\nhttp://docs.sqlalchemy.org/en/rel_0_9/core/types.html#sqlalchemy.types.Unicode\nand\nhttp://docs.sqlalchemy.org/en/rel_0_9/core/types.html#sqlalchemy.types.String\n\nAs well as explicitly setting nvarchar etc. (NVARCHAR is automatically subclass of Unicode it seems). Personally I like the idea of using Unicode since it fits well with Python3 going forwards where people expect all text to be unicode. Not sure what that means for python2 however, might then require explicit conversion so it might not be worth the trouble :/ \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52246988",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7957#issuecomment-52246988",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7957",
    "id": 52246988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ2OTg4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:25:36Z",
    "updated_at": "2014-08-14T21:25:36Z",
    "author_association": "MEMBER",
    "body": "I read in the SQLAlchemy docs (http://docs.sqlalchemy.org/en/rel_0_9/core/types.html#sqlalchemy.types.Unicode):\n\n> When using the Unicode type, it is only appropriate to pass Python unicode objects, and not plain str. If a plain str is passed under Python 2, a warning is emitted.\n\nIn that case, it seems to me that we should use `String`? Or at least check for the type and maybe return something different (`String`/`Unicode`) dependent on type or python 2/3? \nI suppose always using the `String` type will work as long as your (unicode) data are also valid ascii? But when having non-ascii characters this will lead to an error?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53713122",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7957#issuecomment-53713122",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7957",
    "id": 53713122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzEzMTIy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-28T12:32:50Z",
    "updated_at": "2014-08-28T12:32:50Z",
    "author_association": "MEMBER",
    "body": "With `lib.infer_dtype` we could check for string/unicode in principle. And then for python 2 return the appropriate `String` or `Unicode`, and for python 3 always `Unicode` ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53713377",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7957#issuecomment-53713377",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7957",
    "id": 53713377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzEzMzc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-28T12:35:29Z",
    "updated_at": "2014-08-28T12:35:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "careful as this must scan all data \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53713811",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7957#issuecomment-53713811",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7957",
    "id": 53713811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzEzODEx",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-28T12:40:04Z",
    "updated_at": "2014-08-28T12:40:04Z",
    "author_association": "MEMBER",
    "body": "@jreback yes, but we already do this .. (if it is an object type column, to check for date/time: https://github.com/pydata/pandas/blob/master/pandas/io/sql.py#L788)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53714223",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7957#issuecomment-53714223",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7957",
    "id": 53714223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzE0MjIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-28T12:44:35Z",
    "updated_at": "2014-08-28T12:44:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche right ok\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56299336",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7957#issuecomment-56299336",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7957",
    "id": 56299336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mjk5MzM2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-21T13:52:22Z",
    "updated_at": "2014-09-21T13:52:22Z",
    "author_association": "MEMBER",
    "body": "Problem with changing `Text` to `String` is that for some databases, we have to specify a maximum length. For MSSQL or PostgreSQL this does not seem to be a problem (they accept `varchar` without specifying a maximum lenght, but for MySQL this is required. When you try to use just `String`, you get the following error:\n\n```\nCompileError: (in table 'test_string', column 'string'): VARCHAR requires a length on dialect mysql\n```\n\nwhich is what is actually also explained in the sqlalchemy docs of `String`: http://docs.sqlalchemy.org/en/rel_0_9/core/types.html#sqlalchemy.types.String\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65326029",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7957#issuecomment-65326029",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7957",
    "id": 65326029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzI2MDI5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T23:33:32Z",
    "updated_at": "2014-12-02T23:33:32Z",
    "author_association": "MEMBER",
    "body": "I know this does not solve the issue, but after PR #8926, you can specify a sqlalchemy type per column, so to override the default chosen one. So at least that gives a way to deal with this issue for now.\n"
  }
]
