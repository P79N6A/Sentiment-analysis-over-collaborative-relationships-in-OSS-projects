[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354274018",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18955#issuecomment-354274018",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18955",
    "id": 354274018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDI3NDAxOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-28T11:26:27Z",
    "updated_at": "2017-12-28T11:26:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref #15695 , #7787 \r\n\r\nI am pretty sure this is a duplicate, but these things are sometimes hidden and/or not labeled fully. \r\n\r\nWe raise if an iterable is passed that does not match the shape of the assigned, here you are setting a single cell, so we are expecting a scalar. I think relaxing this would be ok. Welcome to investigate / submit a patch."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400535666",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18955#issuecomment-400535666",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18955",
    "id": 400535666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDUzNTY2Ng==",
    "user": {
      "login": "kittoku",
      "id": 38392245,
      "node_id": "MDQ6VXNlcjM4MzkyMjQ1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38392245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kittoku",
      "html_url": "https://github.com/kittoku",
      "followers_url": "https://api.github.com/users/kittoku/followers",
      "following_url": "https://api.github.com/users/kittoku/following{/other_user}",
      "gists_url": "https://api.github.com/users/kittoku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kittoku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kittoku/subscriptions",
      "organizations_url": "https://api.github.com/users/kittoku/orgs",
      "repos_url": "https://api.github.com/users/kittoku/repos",
      "events_url": "https://api.github.com/users/kittoku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kittoku/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T04:00:32Z",
    "updated_at": "2018-06-28T02:49:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "similar problem and another inconsistency between `int` and `str`.\r\n```python\r\nimport pandas as pd\r\n\r\nint_list = [0]\r\nstr_list = ['a']\r\n\r\n\r\ndf = pd.DataFrame([[1, 2], [3, 4]])\r\ndf.loc[:, 0] = int_list  # raise ValueError\r\ndf.loc[0, :] = int_list  # broadcasted\r\n\r\n\r\ndf = pd.DataFrame([[1, 2], [3, 4]])\r\ndf.loc[:, 0] = str_list  # broadcasted\r\ndf.loc[0, :] = str_list  # raise ValueError\r\n```\r\n\r\nIt could be a option to set a function or block like `is_single_cell` which convert list-like to scalar in the upper of `_setitem_with_indexer`, couldn't it? (ignore me if @semigodking already started to make a PR)\r\n  \r\nBut it seems to be slightly lower performance than catching single-cell object in deep places of conditional tree."
  }
]
