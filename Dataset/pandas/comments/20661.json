[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380726998",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20661#issuecomment-380726998",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20661",
    "id": 380726998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDcyNjk5OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T08:48:15Z",
    "updated_at": "2018-04-12T08:48:15Z",
    "author_association": "MEMBER",
    "body": "First, if you would implement it via the ExtensionArray interface, you have the control over the `unique()` method (which `is_unique` relies upon under the hood), and so you can make sure that does the right thing. \r\nThat should solve your specific issue (but please try if that is indeed the case).\r\n\r\n> So if you have an object that defines __ne__, then is_unique will fail (as shown above).\r\n\r\nIt doesn't \"really\" seem to fail: you actually get the correct result (True in this case), the \"exceptions\" you see are only printed, not actually raised (they are ignored, not sure how that works).\r\n\r\nThe errors are coming from inside the PyObjectHashTable, which is used for custom python objects:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/2794474334cbd53315c248b605953579d010c693/pandas/_libs/hashtable_class_helper.pxi.in#L873\r\n\r\nThe `_checknan` basically does `val != val` to check it is a nan value or not. Whether it would be easy to let that function deal with such objects properly, I don't know.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380850107",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20661#issuecomment-380850107",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20661",
    "id": 380850107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDg1MDEwNw==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T15:40:53Z",
    "updated_at": "2018-04-12T15:40:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I understand the idea of handling this by implementing the `ExtensionArray` interface and creating a `unique()` method.  But other people who use this third party library might just create a `Series` of these objects, and would run into the same issue as reported above.\r\n\r\nSo I found this pandas issue #18111 that mentioned `_checknan` and so I implemented the suggestion of @jreback there to replace `_checknan` with `checknull`.  It passes all the tests on my local machine.\r\n\r\nWhat I don't know how to do is to use my example code above to create a test for this particular change, as the exception info is printed and the exception is caught in the example.  Any suggestions for that?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380939679",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20661#issuecomment-380939679",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20661",
    "id": 380939679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDkzOTY3OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T20:48:20Z",
    "updated_at": "2018-04-12T20:48:20Z",
    "author_association": "MEMBER",
    "body": "> But other people who use this third party library might just create a Series of these objects, and would run into the same issue as reported above.\r\n\r\nYes, it is true that it still is an annoying (although rathe corner case I think) issue that would be nice to solve for actual object dtype series.\r\n\r\nIf the `_checknull` works fine, certainly welcome to do a PR. Might be good to do some performance checks (a `%timeit` before/after should be enough I think)\r\n\r\n> What I don't know how to do is to use my example code above to create a test for this particular change, as the exception info is printed and the exception is caught in the example. Any suggestions for that?\r\n\r\nI think we should be able to run the test in a context capturing the stdout (and then check there is nothing outputted). Can you check if https://docs.python.org/3/library/contextlib.html#contextlib.redirect_stdout works? \r\nWe will need to have our own implementation as that is python 3 only feature, but I guess we will find some example on the internet.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380939739",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20661#issuecomment-380939739",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20661",
    "id": 380939739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDkzOTczOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T20:48:33Z",
    "updated_at": "2018-04-12T20:48:33Z",
    "author_association": "MEMBER",
    "body": "> We will need to have our own implementation as that is python 3 only feature, but I guess we will find some example on the internet.\r\n\r\nFor example https://eli.thegreenplace.net/2015/redirecting-all-kinds-of-stdout-in-python/"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/381260790",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20661#issuecomment-381260790",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20661",
    "id": 381260790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTI2MDc5MA==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T21:07:11Z",
    "updated_at": "2018-04-13T21:07:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I found this pytest method for capturing output.  https://docs.pytest.org/en/2.8.7/capture.html .  So I've written a test that fails with master, and works with the change from `_checknan` to `checknull`.  No time difference observed.  PR coming very soon."
  }
]
