[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433658500",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23229#issuecomment-433658500",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23229",
    "id": 433658500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzY1ODUwMA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-27T22:00:58Z",
    "updated_at": "2018-10-27T22:01:06Z",
    "author_association": "MEMBER",
    "body": "I think this proposition seems reasonable, unless there is some workaround already.\r\n\r\ncc @jreback @TomAugspurger "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433665432",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23229#issuecomment-433665432",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23229",
    "id": 433665432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzY2NTQzMg==",
    "user": {
      "login": "nmusolino",
      "id": 3150861,
      "node_id": "MDQ6VXNlcjMxNTA4NjE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3150861?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nmusolino",
      "html_url": "https://github.com/nmusolino",
      "followers_url": "https://api.github.com/users/nmusolino/followers",
      "following_url": "https://api.github.com/users/nmusolino/following{/other_user}",
      "gists_url": "https://api.github.com/users/nmusolino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nmusolino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nmusolino/subscriptions",
      "organizations_url": "https://api.github.com/users/nmusolino/orgs",
      "repos_url": "https://api.github.com/users/nmusolino/repos",
      "events_url": "https://api.github.com/users/nmusolino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nmusolino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-28T00:08:25Z",
    "updated_at": "2018-10-28T00:08:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks very much, @gfyoung, for the feedback and the review on the corresponding pull request (#23384).\r\n\r\nI can elaborate on the two major use cases I had in mind for this:\r\nI.  An [explicit goal](https://pandas.pydata.org/pandas-dcs/stable/style.html#Extensibility) for the style functionality is extensibility.  As noted above, users (or library developers) can write functions that perform certain style transformations, possibly application-specific, using the core Styler functions in pandas.  The `pipe()` method would provide an ergonomic way to compose or \"mix-and-match\" these user-defined transformations.  \r\n\r\nII.  As a variant of (I), users may find themselves attempting to style many different views of data in a consistent way within a notebook.  For example, users might want to present two different kinds of results (e.g. summary results and detailed results) while grouping by three different columns in their data frame, for a total of six tables being created/styled.  In that case, the `Styler.pipe()` method can help reduce the \"style boilerplate\": a user can place all the *common* styling operations in a function within the notebook (or elsewhere), *and* perform specific styling operations (such as captions, or highlighting specific data problems) in each individual cell.\r\n\r\nHere's an example (untested code).  Note that in general, there may be a series of operations performed on a data frame to get the final result frame, before any styling is applied.\r\n\r\n```\r\ndef format_summary(styler, grouping_text):\r\n    return (styler.set_properties(**{'text-align': 'right'})\r\n                  .format({'N': '{:,d}', 'ResponseRate': '{:.1%}', 'Date': '{:%Y-%m-%d}')\r\n                  .set_caption(\"Summary of results, grouped by {}.\".format(grouping_text)))   \r\n\r\n# Notebook cell\r\n(df.groupby('A').apply(calculate_summary)\r\n   .style.pipe(format_summary, grouping_text=\"attribute A\"))\r\n\r\n# Notebook cell\r\n(df.groupby('B').apply(calculate_summary)\r\n   .style.pipe(format_summary, grouping_text=\"attribute B\"))\r\n\r\n# Notebook cell.  This was a special case, so apply extra styling to explain details to readers.\r\n(df.groupby('C').apply(calculate_summary)\r\n   .style.pipe(format_summary, grouping_text=\"C\"))\r\n   .set_caption(\"Summary of results, grouped by 'C'.  Note that the group with C equal to 4 had insufficient number of samples to estimate results.\")\r\n   .apply(lambda row: ['background-color: yellow'] * len(row), subset=pandas.IndexSlice[4, :], axis=0))\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433666210",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23229#issuecomment-433666210",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23229",
    "id": 433666210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzY2NjIxMA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-28T00:26:55Z",
    "updated_at": "2018-10-28T00:26:55Z",
    "author_association": "MEMBER",
    "body": "@nmusolino : Thanks for the explanation!  Now if you could take some of this and [put it in the whatsnew](https://github.com/pandas-dev/pandas/pull/23384#discussion_r228727720), that would be great. üëç "
  }
]
