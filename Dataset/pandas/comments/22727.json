[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421774938",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22727#issuecomment-421774938",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22727",
    "id": 421774938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTc3NDkzOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-16T14:34:29Z",
    "updated_at": "2018-09-16T14:34:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you provide an example?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421843519",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22727#issuecomment-421843519",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22727",
    "id": 421843519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTg0MzUxOQ==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-16T22:20:39Z",
    "updated_at": "2018-09-16T22:22:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "if I understand correctly what your trying to achieve, you could render the HTML directly yourself, using `df.to_html(escape=False)`\r\n\r\nsomething like this?..\r\n\r\n![image](https://user-images.githubusercontent.com/13159005/45601592-5e093800-ba07-11e8-8a36-5a1246ca10df.png)\r\n\r\n```python\r\nimport pandas as pd\r\nfrom IPython.display import HTML, display\r\n\r\nfrom . import datasets\r\n\r\n\r\ndef make_clickable(val):\r\n    return '<a target=\"_blank\" href=\"https://www.amazon.co.uk/dp/{}\">{}</a>'.format(val, val)\r\n\r\n\r\ndef image_html(row):\r\n    if type(row['SmallImage_URL']) != float:\r\n        return '<img src=\"{}\" style=\"height: {}px; width: {}px;\">' \\\r\n            .format(row['SmallImage_URL'], int(row['SmallImage_Height']), int(row['SmallImage_Width']))\r\n    else:\r\n        return ''\r\n\r\n\r\ndef add_image_to_dataframe(df):\r\n    df = df.copy()\r\n    columns = df.columns.tolist()\r\n    image_metadata_columns = ['SmallImage_Height',\r\n                              'SmallImage_Width', 'SmallImage_URL']\r\n    df = datasets.add_item_attributes(df, image_metadata_columns)\r\n    df['image'] = df.apply(image_html, axis=1)\r\n    df = df.drop(columns=image_metadata_columns)\r\n    return df[['image'] + columns]\r\n\r\n\r\ndef render(df, add_image=True):\r\n    if not df.empty is True:\r\n        df = df.copy().fillna(\"\")\r\n        if 'asin' not in df.columns:\r\n            df = datasets.add_asin(df)\r\n        if (add_image):\r\n            df = add_image_to_dataframe(df)\r\n        df['asin'] = df.asin.apply(make_clickable)\r\n        with pd.option_context('display.max_colwidth', -1):\r\n            html = df.to_html(index=False, escape=False)\r\n        display(HTML(html))\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421869428",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22727#issuecomment-421869428",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22727",
    "id": 421869428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTg2OTQyOA==",
    "user": {
      "login": "dclong",
      "id": 824507,
      "node_id": "MDQ6VXNlcjgyNDUwNw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/824507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dclong",
      "html_url": "https://github.com/dclong",
      "followers_url": "https://api.github.com/users/dclong/followers",
      "following_url": "https://api.github.com/users/dclong/following{/other_user}",
      "gists_url": "https://api.github.com/users/dclong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dclong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dclong/subscriptions",
      "organizations_url": "https://api.github.com/users/dclong/orgs",
      "repos_url": "https://api.github.com/users/dclong/repos",
      "events_url": "https://api.github.com/users/dclong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dclong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-17T01:38:35Z",
    "updated_at": "2018-09-17T01:43:46Z",
    "author_association": "NONE",
    "body": "For example, I want to have background gradient colors for 2 columns Ctrl and Test in a DataFrame, but the background gradient colors are decided according to the difference of the 2 columns. I achieved it as below. \r\n```\r\ndef bg_grad(s, m, M, cmap='PuBu', low=0, high=0):\r\n    rng = M - m\r\n    norm = colors.Normalize(m - (rng * low), M + (rng * high))\r\n    normed = norm(s.values)\r\n    c = [colors.rgb2hex(x) for x in plt.cm.get_cmap(cmap)(normed)]\r\n    return ['background-color: %s' % color for color in c]\r\n\r\n\r\nlift = (df.Test - df.Ctrl) / df.Ctrl \r\ndf.style.apply(lambda _: bg_grad(lift, \r\n    m=-lift.max(),\r\n    M=lift.max(),\r\n    cmap='RdYlGn',\r\n))\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/824507/45603288-7015c580-ba5d-11e8-8160-38af1c8ed142.png)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/422409525",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22727#issuecomment-422409525",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22727",
    "id": 422409525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjQwOTUyNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T14:12:24Z",
    "updated_at": "2018-09-18T14:12:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's not clear to me what the API would look like. IIRC, there's nothing else in Styler where a property for a column is computed by the values in another array.\r\n\r\nIt is unfortunate that you needed to duplicate the code in `Styler._background_gradient` with you `bg_grad` function."
  }
]
