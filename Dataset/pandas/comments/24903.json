[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457232610",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24903#issuecomment-457232610",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24903",
    "id": 457232610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzIzMjYxMA==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T15:14:09Z",
    "updated_at": "2019-01-24T15:14:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@djbarker Thanks for the report. I'm guessing it's an edge case when the result DataFrame is created from just a single series, evidenced by the series name from the series returned by the lambda becoming the columns index name in the result DataFrame.\r\n\r\nInvestigation and PRs welcome\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457239725",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24903#issuecomment-457239725",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24903",
    "id": 457239725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzIzOTcyNQ==",
    "user": {
      "login": "djbarker",
      "id": 4553538,
      "node_id": "MDQ6VXNlcjQ1NTM1Mzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4553538?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djbarker",
      "html_url": "https://github.com/djbarker",
      "followers_url": "https://api.github.com/users/djbarker/followers",
      "following_url": "https://api.github.com/users/djbarker/following{/other_user}",
      "gists_url": "https://api.github.com/users/djbarker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djbarker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djbarker/subscriptions",
      "organizations_url": "https://api.github.com/users/djbarker/orgs",
      "repos_url": "https://api.github.com/users/djbarker/repos",
      "events_url": "https://api.github.com/users/djbarker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djbarker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T15:32:49Z",
    "updated_at": "2019-01-24T15:32:49Z",
    "author_association": "NONE",
    "body": "@simonjayhawkins Surely the series name becomes the name of the index because it's what we grouped by? Also, I'm not sure I follow what you mean by it being created from a single series. The issue also occurs if we group by `\"a\"` or `[\"a\", \"b\"]`:\r\n\r\n```python\r\nIn [1]: pd.DataFrame(dict(a=[1, 1, 2, 2], b=[\"\", \"\", \"\", \"\"], c=pd.to_datetime([1, 2, 3, 4], unit=\"s\"))).groupby(\"a\")\r\n   ...: .apply(lambda df: df.iloc[-1])\r\nOut[1]: \r\n   a   b                   c\r\na                           \r\n1  1 NaN 1970-01-01 00:00:02\r\n2  2 NaN 1970-01-01 00:00:04\r\n\r\nIn [2]: pd.DataFrame(dict(a=[1, 1, 2, 2], b=[\"\", \"\", \"\", \"\"], c=pd.to_datetime([1, 2, 3, 4], unit=\"s\"))).groupby([\"a\"\r\n   ...: , \"b\"]).apply(lambda df: df.iloc[-1])\r\nOut[2]: \r\n     a   b                   c\r\na b                           \r\n1    1 NaN 1970-01-01 00:00:02\r\n2    2 NaN 1970-01-01 00:00:04\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457244621",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24903#issuecomment-457244621",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24903",
    "id": 457244621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzI0NDYyMQ==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T15:45:41Z",
    "updated_at": "2019-01-24T15:45:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@djbarker \r\n\r\n> Surely the series name becomes the name of the index because it's what we grouped by?\r\n\r\nsorry if I was not clear. the _row_ index names are determined by the columns grouped on. in the first two examples you gave, the _column_ index name is shown as 3.\r\n\r\n> Also, I'm not sure I follow what you mean by it being created from a single series. The issue also occurs if we group by \"a\" or [\"a\", \"b\"]\r\n\r\ncorrect, the additional examples show that it is not just confined to a single series   "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457250897",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24903#issuecomment-457250897",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24903",
    "id": 457250897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzI1MDg5Nw==",
    "user": {
      "login": "djbarker",
      "id": 4553538,
      "node_id": "MDQ6VXNlcjQ1NTM1Mzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4553538?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djbarker",
      "html_url": "https://github.com/djbarker",
      "followers_url": "https://api.github.com/users/djbarker/followers",
      "following_url": "https://api.github.com/users/djbarker/following{/other_user}",
      "gists_url": "https://api.github.com/users/djbarker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djbarker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djbarker/subscriptions",
      "organizations_url": "https://api.github.com/users/djbarker/orgs",
      "repos_url": "https://api.github.com/users/djbarker/repos",
      "events_url": "https://api.github.com/users/djbarker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djbarker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T16:01:29Z",
    "updated_at": "2019-01-24T16:01:29Z",
    "author_association": "NONE",
    "body": "Ah I see, I hadn't noticed that. I wonder where the 3 comes from? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457251768",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24903#issuecomment-457251768",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24903",
    "id": 457251768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzI1MTc2OA==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T16:03:38Z",
    "updated_at": "2019-01-24T16:03:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "interestingly, if you change your lambda to return a DataFrame you won't get the NaNs but you'll get an extra index level.\r\n\r\n```\r\npd.DataFrame(dict(a=[1, 1, 2, 2], b=[\"\", \"\", \"\", \"\"], c=pd.to_datetime([1, 2, 3, 4], unit=\"s\"))).groupby(\"b\").apply(lambda df: df.iloc[[-1]])\r\n\r\n     a b                   c\r\nb\r\n  3  2   1970-01-01 00:00:04\r\n\r\npd.DataFrame(dict(a=[1, 1, 2, 2], b=[\"\", \"\", \"\", \"\"], c=pd.to_datetime([1, 2, 3, 4], unit=\"s\"))).groupby([\"a\", \"b\"]).apply(lambda df: df.iloc[[-1]])\r\n       a b                   c\r\na b\r\n1   1  1   1970-01-01 00:00:02\r\n2   3  2   1970-01-01 00:00:04\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457257456",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24903#issuecomment-457257456",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24903",
    "id": 457257456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzI1NzQ1Ng==",
    "user": {
      "login": "djbarker",
      "id": 4553538,
      "node_id": "MDQ6VXNlcjQ1NTM1Mzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4553538?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djbarker",
      "html_url": "https://github.com/djbarker",
      "followers_url": "https://api.github.com/users/djbarker/followers",
      "following_url": "https://api.github.com/users/djbarker/following{/other_user}",
      "gists_url": "https://api.github.com/users/djbarker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djbarker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djbarker/subscriptions",
      "organizations_url": "https://api.github.com/users/djbarker/orgs",
      "repos_url": "https://api.github.com/users/djbarker/repos",
      "events_url": "https://api.github.com/users/djbarker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djbarker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T16:17:37Z",
    "updated_at": "2019-01-24T16:17:37Z",
    "author_association": "NONE",
    "body": "I realised the `3` is just the index of the last row in the DataFrame that the `apply` lambda sees in the case we return only one row.  These become the extra index level if we return a DataFrame not a Series. This has to do with how `apply` handles joining the results back into one Dataframe. If the returned DataFrame has more than one row, one will be interested in keeping the index of these around:\r\n```python\r\nIn [33]: pd.DataFrame(dict(a=[1, 1, 2, 2], b=[\"\", \"\", \"\", \"\"], c=pd.to_datetime([1, 2, 3, 4], unit=\"s\"))).groupby([\"a\r\n    ...: \"]).apply(lambda df: pd.DataFrame(dict(foo=[\"bar\", \"abc\"], baz=[\"edf\", \"ghi\"])).set_index(\"baz\"))\r\nOut[33]: \r\n       foo\r\na baz     \r\n1 edf  bar\r\n  ghi  abc\r\n2 edf  bar\r\n  ghi  abc\r\n```"
  }
]
