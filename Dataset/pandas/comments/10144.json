[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102371929",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10144#issuecomment-102371929",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10144",
    "id": 102371929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjM3MTkyOQ==",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-15T11:12:28Z",
    "updated_at": "2015-05-15T11:12:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "They seem to be exactly the same--[see here](https://github.com/pydata/pandas/blob/master/pandas/core/datetools.py#L8).  In that file are many other aliases for the \"real\" date offsets.  Personally I don't see the reason for having these other names.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102381566",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10144#issuecomment-102381566",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10144",
    "id": 102381566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjM4MTU2Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-15T12:03:11Z",
    "updated_at": "2015-05-15T12:03:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "these are just aliases, I don't know exactly where they came from, but suspect `scikit-timeseries`. In theory we should remove them. \n\n@harshnisar want to add deprecation warnings to all of these?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102412328",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10144#issuecomment-102412328",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10144",
    "id": 102412328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjQxMjMyOA==",
    "user": {
      "login": "harshnisar",
      "id": 6428892,
      "node_id": "MDQ6VXNlcjY0Mjg4OTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6428892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harshnisar",
      "html_url": "https://github.com/harshnisar",
      "followers_url": "https://api.github.com/users/harshnisar/followers",
      "following_url": "https://api.github.com/users/harshnisar/following{/other_user}",
      "gists_url": "https://api.github.com/users/harshnisar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harshnisar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harshnisar/subscriptions",
      "organizations_url": "https://api.github.com/users/harshnisar/orgs",
      "repos_url": "https://api.github.com/users/harshnisar/repos",
      "events_url": "https://api.github.com/users/harshnisar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harshnisar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-15T14:22:14Z",
    "updated_at": "2015-05-15T14:23:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Would love too! I have been waiting to find an entry point so that I could give back to Pandas.  But you would need to help me a little. \n\nWill the warnings be thrown by the code when the particular method is called or a warning in the documentation? I am guessing the former. \n\nWhich method out of the two we keep?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102454932",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10144#issuecomment-102454932",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10144",
    "id": 102454932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjQ1NDkzMg==",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-15T16:37:30Z",
    "updated_at": "2015-05-15T16:37:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "The warnings will be thrown when the code is called.  We will only keep the ones in `tseries.offsets` so deprecate all the ones in datetools.  You should be able to just use `pandas.util.decorators:deprecate` to do this.  Also, for help on contributing look [here](http://pandas.pydata.org/pandas-docs/version/0.16.1/contributing.html).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102763890",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10144#issuecomment-102763890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10144",
    "id": 102763890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjc2Mzg5MA==",
    "user": {
      "login": "harshnisar",
      "id": 6428892,
      "node_id": "MDQ6VXNlcjY0Mjg4OTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6428892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harshnisar",
      "html_url": "https://github.com/harshnisar",
      "followers_url": "https://api.github.com/users/harshnisar/followers",
      "following_url": "https://api.github.com/users/harshnisar/following{/other_user}",
      "gists_url": "https://api.github.com/users/harshnisar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harshnisar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harshnisar/subscriptions",
      "organizations_url": "https://api.github.com/users/harshnisar/orgs",
      "repos_url": "https://api.github.com/users/harshnisar/repos",
      "events_url": "https://api.github.com/users/harshnisar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harshnisar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-17T07:57:08Z",
    "updated_at": "2015-05-18T10:24:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rockg , @jreback \nI setup the environment and everything is working. \nI am currently doing this,\n\n```\n#day = DateOffset()\nday = deprecate('day', DateOffset)\n# bday = BDay()\nbday = deprecate('bday', BDay)\n# businessDay = bday\nbusinessDay = deprecate('businessDay', BDay)\n```\n\nThe commented code is the one the existed before. Is this the right way of doing it?\n\nOn calling bday, businessDay and day.\n\n```\nIn [4]: pd.datetools.bday()\npandas\\util\\decorators.py:13: FutureWarning: bday is deprecated. Use BusinessDay instead\n  FutureWarning)\nOut[4]: <BusinessDay>\n\nIn [5]: pd.datetools.businessDay()\npandas\\util\\decorators.py:13: FutureWarning: businessDay is deprecated. Use BusinessDay instead\n  FutureWarning)\nOut[5]: <BusinessDay>\n\nIn [6]: pd.datetools.day()\npandas\\util\\decorators.py:13: FutureWarning: day is deprecated. Use DateOffset instead\n  FutureWarning)\nOut[6]: <DateOffset>\n```\n\nSo, the user should be using pd.datetools.BusinessDay right?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/103805511",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10144#issuecomment-103805511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10144",
    "id": 103805511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzgwNTUxMQ==",
    "user": {
      "login": "harshnisar",
      "id": 6428892,
      "node_id": "MDQ6VXNlcjY0Mjg4OTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6428892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harshnisar",
      "html_url": "https://github.com/harshnisar",
      "followers_url": "https://api.github.com/users/harshnisar/followers",
      "following_url": "https://api.github.com/users/harshnisar/following{/other_user}",
      "gists_url": "https://api.github.com/users/harshnisar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harshnisar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harshnisar/subscriptions",
      "organizations_url": "https://api.github.com/users/harshnisar/orgs",
      "repos_url": "https://api.github.com/users/harshnisar/repos",
      "events_url": "https://api.github.com/users/harshnisar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harshnisar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-20T08:19:44Z",
    "updated_at": "2015-05-20T08:19:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, I deprecated the other straight aliases too. \nWhich are,\n\n```\nmonthEnd = deprecate('monthEnd', MonthEnd)\nyearEnd = deprecate('yearEnd', YearEnd)\nyearBegin = deprecate('yearBegin', YearBegin)\nbmonthEnd = deprecate('bmonthEnd', BMonthEnd)\nbmonthBegin = deprecate('bmonthBegin', BMonthBegin)\ncbmonthEnd = deprecate('cbmonthEnd', customBusinessMonthEnd)\ncbmonthBegin = deprecate('cbmonthBegin', customBusinessMonthBegin)\nbquarterEnd = deprecate('bquarterEnd', BQuarterEnd)\nquarterEnd = deprecate('quarterEnd', QuarterEnd)\nbyearEnd = deprecate('byearEnd', BYearEnd)\nweek = deprecate('week', Week)\n```\n\nWhat should I do about these two sections?\n\n```\n# Functions/offsets to roll dates forward\nthisMonthEnd = MonthEnd(0)\nthisBMonthEnd = BMonthEnd(0)\nthisYearEnd = YearEnd(0)\nthisYearBegin = YearBegin(0)\nthisBQuarterEnd = BQuarterEnd(0)\nthisQuarterEnd = QuarterEnd(0)\n\n# Functions to check where a date lies\nisBusinessDay = BDay().onOffset\nisMonthEnd = MonthEnd().onOffset\nisBMonthEnd = BMonthEnd().onOffset\n```\n\nand,\n\n```\ntry:\n    cday = CDay()\n    customBusinessDay = CustomBusinessDay()\n    customBusinessMonthEnd = CBMonthEnd()\n    customBusinessMonthBegin = CBMonthBegin()\nexcept NotImplementedError:\n    cday = None\n    customBusinessDay = None\n    customBusinessMonthEnd = None\n    customBusinessMonthBegin = None\n```\n\n@jreback  @rockg  ?\nApologies, if these are completely naive questions.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/103852798",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10144#issuecomment-103852798",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10144",
    "id": 103852798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzg1Mjc5OA==",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-20T11:36:49Z",
    "updated_at": "2015-05-20T11:36:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Personally I think you can get rid of everything except isBusinessDay, isMonthEnd, isBMonthEnd.  Those are more esoteric than the others and I think it's worth having them around (unless there is something in `offsets` for those helper functions).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110613787",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10144#issuecomment-110613787",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10144",
    "id": 110613787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDYxMzc4Nw==",
    "user": {
      "login": "harshnisar",
      "id": 6428892,
      "node_id": "MDQ6VXNlcjY0Mjg4OTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6428892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harshnisar",
      "html_url": "https://github.com/harshnisar",
      "followers_url": "https://api.github.com/users/harshnisar/followers",
      "following_url": "https://api.github.com/users/harshnisar/following{/other_user}",
      "gists_url": "https://api.github.com/users/harshnisar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harshnisar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harshnisar/subscriptions",
      "organizations_url": "https://api.github.com/users/harshnisar/orgs",
      "repos_url": "https://api.github.com/users/harshnisar/repos",
      "events_url": "https://api.github.com/users/harshnisar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harshnisar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-10T06:35:23Z",
    "updated_at": "2015-06-10T06:35:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rockg \nWhen I was trying to deprecate the following function I hit an error.\n\n```\nthisMonthEnd = MonthEnd(0)\n```\n\nThe error which gets thrown, \n\n```\nC:\\Users\\Personal\\Programming\\pandas-harshnisar\\pandas\\core\\datetools.py in <module>()\n     37\n     38 # Functions/offsets to roll dates forward\n---> 39 thisMonthEnd = deprecate('thisMonthEnd', MonthEnd(0))\n     40 thisBMonthEnd = BMonthEnd(0)\n     41 thisYearEnd = YearEnd(0)\n\nC:\\Users\\Personal\\Programming\\pandas-harshnisar\\pandas\\util\\decorators.pyc in deprecate(name, alternative, alt_name)\n      7\n      8 def deprecate(name, alternative, alt_name=None):\n----> 9     alt_name = alt_name or alternative.__name__\n     10\n     11     def wrapper(*args, **kwargs):\n\nAttributeError: 'MonthEnd' object has no attribute '__name__'\n```\n\nI was assuming that calling MonthEnd with 0 as a parameter probably returns another method which we want to reference with the variable thisMonthEnd. But looking at the code for MonthEnd, I am not sure what is really happening and how is it returning a method. These concepts are new to me, but it seems interesting!\n\nHere is the MonthEnd function from offsets.py\n\n```\nclass MonthEnd(MonthOffset):\n    \"\"\"DateOffset of one month end\"\"\"\n\n    @apply_wraps\n    def apply(self, other):\n        n = self.n\n        _, days_in_month = tslib.monthrange(other.year, other.month)\n        if other.day != days_in_month:\n            other = other + relativedelta(months=-1, day=31)\n            if n <= 0:\n                n = n + 1\n        other = other + relativedelta(months=n, day=31)\n        return other\n\n    def onOffset(self, dt):\n        if self.normalize and not _is_normalized(dt):\n            return False\n        days_in_month = tslib.monthrange(dt.year, dt.month)[1]\n        return dt.day == days_in_month\n\n    _prefix = 'M'\n```\n\n@rockg  can you help me just a tiny bit more?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110777499",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10144#issuecomment-110777499",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10144",
    "id": 110777499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDc3NzQ5OQ==",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-10T14:38:14Z",
    "updated_at": "2015-06-10T14:52:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "The `deprecate` decorator won't work with this particular case as it returns an instance rather than a class.  For this specific instance, it may be worth putting a specific deprecation function in the datetools library for these.  Basically you just want to return `alternative` rather than calling `alternative(*args, **kwargs)`.  I don't think that will cause any consternation and it's just for the deprecation cycle.\n"
  }
]
