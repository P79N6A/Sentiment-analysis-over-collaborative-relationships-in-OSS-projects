[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366630438",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-366630438",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 366630438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjYzMDQzOA==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T09:19:25Z",
    "updated_at": "2018-02-25T23:05:01Z",
    "author_association": "NONE",
    "body": "Hello @minggli! Thanks for updating the PR.\n\n\n\n\n\n\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on February 25, 2018 at 23:05 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367100566",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-367100566",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 367100566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzEwMDU2Ng==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-02-20T19:59:15Z",
    "updated_at": "2018-02-25T23:05:09Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19762?src=pr&el=h1) Report\n> Merging [#19762](https://codecov.io/gh/pandas-dev/pandas/pull/19762?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/8f1dfa74e244622a7f356a496072f93dce032839?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/19762/graphs/tree.svg?width=650&height=150&token=eZ4WkYLtcO&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/19762?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #19762      +/-   ##\n==========================================\n+ Coverage   91.67%   91.69%   +0.02%     \n==========================================\n  Files         150      150              \n  Lines       48936    48938       +2     \n==========================================\n+ Hits        44860    44872      +12     \n+ Misses       4076     4066      -10\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.06% <100%> (+0.02%)` | :arrow_up: |\n| #single | `41.81% <83.33%> (ø)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/19762?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/internals.py](https://codecov.io/gh/pandas-dev/pandas/pull/19762/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzLnB5) | `95.53% <ø> (ø)` | :arrow_up: |\n| [pandas/core/dtypes/cast.py](https://codecov.io/gh/pandas-dev/pandas/pull/19762/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2Nhc3QucHk=) | `87.68% <100%> (-0.3%)` | :arrow_down: |\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/19762/diff?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `66.95% <0%> (+1.73%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19762?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19762?src=pr&el=footer). Last update [8f1dfa7...08d2718](https://codecov.io/gh/pandas-dev/pandas/pull/19762?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367116635",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-367116635",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 367116635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzExNjYzNQ==",
    "user": {
      "login": "minggli",
      "id": 14131823,
      "node_id": "MDQ6VXNlcjE0MTMxODIz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14131823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggli",
      "html_url": "https://github.com/minggli",
      "followers_url": "https://api.github.com/users/minggli/followers",
      "following_url": "https://api.github.com/users/minggli/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggli/subscriptions",
      "organizations_url": "https://api.github.com/users/minggli/orgs",
      "repos_url": "https://api.github.com/users/minggli/repos",
      "events_url": "https://api.github.com/users/minggli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-20T20:57:24Z",
    "updated_at": "2018-02-20T20:57:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback changes implemented and added test and whatsnew doc."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367690314",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-367690314",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 367690314,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzY5MDMxNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T14:04:42Z",
    "updated_at": "2018-02-22T14:04:42Z",
    "author_association": "MEMBER",
    "body": "General question: is this important enough to add this to the public API?  (the user can already specify the format, although that might not be as flexible as such a keyword) \r\nBecause if we need it internally for eg `iterrows`, we can keep the keyword internal to solve that specific problem without exposing it in the public `to_datetime` ?\r\n\r\nFurther, it does not seem to fully work:\r\n\r\n```\r\nIn [15]: pd.to_datetime(\"2018/02/22 12:14:23\", require_iso8601=True)\r\nOut[15]: Timestamp('2018-02-22 12:14:23')\r\n```\r\n\r\nThe above is not a ISO8601 format, so should not be allowed. If we make the keyword public, the name should reflect what it does correctly (for internal usage the above might be OK?)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367707261",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-367707261",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 367707261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzcwNzI2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T14:59:27Z",
    "updated_at": "2018-02-22T14:59:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "from @jorisvandenbossche comments: https://github.com/pandas-dev/pandas/pull/19762#issuecomment-367690314\r\n\r\nok to add this as a private variable instead, we don't really have a convention for this, maybe use\r\n``_require_iso8601=False`` as the arg"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367759941",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-367759941",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 367759941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzc1OTk0MQ==",
    "user": {
      "login": "minggli",
      "id": 14131823,
      "node_id": "MDQ6VXNlcjE0MTMxODIz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14131823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggli",
      "html_url": "https://github.com/minggli",
      "followers_url": "https://api.github.com/users/minggli/followers",
      "following_url": "https://api.github.com/users/minggli/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggli/subscriptions",
      "organizations_url": "https://api.github.com/users/minggli/orgs",
      "repos_url": "https://api.github.com/users/minggli/repos",
      "events_url": "https://api.github.com/users/minggli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T17:37:45Z",
    "updated_at": "2018-02-22T17:37:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "from @jorisvandenbossche comments: #19762 (comment)\r\n\r\nthe documentation suggests it's (almost) standard ISO8601 with small differences, so seems not meant to be exact.\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/abc4ef9132d8bcc8ad987c18fdd757595fd65d8c/pandas/_libs/src/datetime/np_datetime_strings.h#L26\r\n\r\nI think as a product manager previously, it'd be better to expose it in public so user has choice of parsing behaviour as long as doc is up-to-date, as opposed to having no choice. If we want to keep it internal, it would still show up in doc (e.g. Series(fastpath=)) but without documentation as parameter or examples."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367881119",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-367881119",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 367881119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg4MTExOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T01:32:21Z",
    "updated_at": "2018-02-23T01:32:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "we actually have a failrly flexibile version of ISO8601, meaning that we accept a bunch of separators that are not in the standard (and whitespace). that's why https://github.com/pandas-dev/pandas/pull/19762#issuecomment-367690314 is parseable.\r\n\r\nSo I think on balance its better not to add this to the public API. @minggli can you change to using ``_require_iso8601`` (IOW a private keyword).?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367881253",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-367881253",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 367881253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg4MTI1Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T01:33:09Z",
    "updated_at": "2018-02-23T01:33:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "all the tests are fine. can you remove the example from the doc-string, but leave the wiki reference (move to the Notes section)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368004848",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368004848",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368004848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAwNDg0OA==",
    "user": {
      "login": "minggli",
      "id": 14131823,
      "node_id": "MDQ6VXNlcjE0MTMxODIz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14131823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggli",
      "html_url": "https://github.com/minggli",
      "followers_url": "https://api.github.com/users/minggli/followers",
      "following_url": "https://api.github.com/users/minggli/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggli/subscriptions",
      "organizations_url": "https://api.github.com/users/minggli/orgs",
      "repos_url": "https://api.github.com/users/minggli/repos",
      "events_url": "https://api.github.com/users/minggli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T13:10:00Z",
    "updated_at": "2018-02-23T13:10:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "no problem, I will make it `_require_iso8601`. two questions: where is Notes section? do you mean parameter?; would it be better to use `**kwargs` so that we don't show this keyword at all and also prevent any breaking changes?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368006568",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368006568",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368006568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAwNjU2OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T13:18:07Z",
    "updated_at": "2018-02-23T13:18:07Z",
    "author_association": "MEMBER",
    "body": "Can we prevent all together to add a keyword to `to_datetime`? As adding a 'private' keyword to a public function is not that nice."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368007153",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368007153",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368007153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAwNzE1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T13:20:47Z",
    "updated_at": "2018-02-23T13:33:35Z",
    "author_association": "MEMBER",
    "body": "I am not completely familiar with all our different datetime parsing functions, but it seems to me that the `require_iso8601` flag is *only* used in `to_datetime` if the code path ends up in `tslib.array_to_datetime`. And the only place internally in pandas where we need this flag is in `maybe_infer_to_datetimelike`. Can't we try to fix it directly there?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368011627",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368011627",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368011627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAxMTYyNw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T13:40:43Z",
    "updated_at": "2018-02-23T13:40:43Z",
    "author_association": "MEMBER",
    "body": "So in `to_datetime`, if `tslib.array_to_datetime` has failed, it tries `conversion.datetime_to_datetime64(arg)` which converts all-datetime-like (datetime.datetime, Timestamp) object array. I think that is exactly what we want in `maybe_infer_to_datetimelike`, so I think we can use that directly."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368045327",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368045327",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368045327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODA0NTMyNw==",
    "user": {
      "login": "minggli",
      "id": 14131823,
      "node_id": "MDQ6VXNlcjE0MTMxODIz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14131823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggli",
      "html_url": "https://github.com/minggli",
      "followers_url": "https://api.github.com/users/minggli/followers",
      "following_url": "https://api.github.com/users/minggli/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggli/subscriptions",
      "organizations_url": "https://api.github.com/users/minggli/orgs",
      "repos_url": "https://api.github.com/users/minggli/repos",
      "events_url": "https://api.github.com/users/minggli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T15:42:45Z",
    "updated_at": "2018-02-23T15:42:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not sure what you mean @jorisvandenbossche . If we want to hard code require_iso8601=True, it will solve the issue in question, but it will also change to_datetime behaviour.\r\n\r\nto_datetime(['M1809', 'M1701', Timestamp('20130101')], errors='raise') won't raise ValueError before, but if we do hard code the arg internally in order to remove the public kwarg, it will raise ValueError. As per @jreback 's comment in https://github.com/pandas-dev/pandas/issues/19671 , datetime string like 'M1701' although not ISO8601, is legit, so to_datetime should convert it without raising an error. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368051556",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368051556",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368051556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODA1MTU1Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T16:00:50Z",
    "updated_at": "2018-02-23T16:00:50Z",
    "author_association": "MEMBER",
    "body": ">  but it will also change to_datetime behaviour.\r\n\r\nMy proposal is to *not* change `to_datetime`, but to only make changes to `maybe_infer_to_datetimelike`, to solve the actual problem (that we internally convert to aggressively to datetimes, eg in iterrows). As it is that function that needs the `require_iso8601` behaviour."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368059021",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368059021",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368059021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODA1OTAyMQ==",
    "user": {
      "login": "minggli",
      "id": 14131823,
      "node_id": "MDQ6VXNlcjE0MTMxODIz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14131823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggli",
      "html_url": "https://github.com/minggli",
      "followers_url": "https://api.github.com/users/minggli/followers",
      "following_url": "https://api.github.com/users/minggli/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggli/subscriptions",
      "organizations_url": "https://api.github.com/users/minggli/orgs",
      "repos_url": "https://api.github.com/users/minggli/repos",
      "events_url": "https://api.github.com/users/minggli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T16:24:19Z",
    "updated_at": "2018-02-23T16:24:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes `maybe_infer_to_datetimelike` is definitely one to look at. the actual conversion happens in `try_datetime` which tries array_to_datetime and then to_datetime to handle some exceptions. I think to_datetime is called for a reason and change `try_datetime` may end up breaking old logics. \r\n\r\nTo fix the issue at hand, require_iso8601=True is needed for both calls, either False won't work. but  `to_datetime` defaults to False.\r\n\r\nTherefore the best way I can approach what you are thinking about is https://github.com/pandas-dev/pandas/pull/19762/commits/f9240b5285f5abf611ec31d4aa5827c0f17bb58d which fix the issue (require_iso8601=True where it needs to be without breaking other things) and doesn't change to_datetime behaviour (still default require_iso8601=False) or expose the keyword to public. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368059999",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368059999",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368059999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODA1OTk5OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T16:27:30Z",
    "updated_at": "2018-02-23T16:27:30Z",
    "author_association": "MEMBER",
    "body": "Can you try to change the `to_datetime` call in `maybe_infer_to_datetimelike` with `conversion.datetime_to_datetime64(arg)`? (that's what I meant in https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368011627) And check if that solves the issue as well?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368258188",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368258188",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368258188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODI1ODE4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T20:35:48Z",
    "updated_at": "2018-02-24T20:35:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I changed the construction logic slightly. can you also add the original test (e.g .the iterrows) example?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368263597",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368263597",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368263597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODI2MzU5Nw==",
    "user": {
      "login": "minggli",
      "id": 14131823,
      "node_id": "MDQ6VXNlcjE0MTMxODIz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14131823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggli",
      "html_url": "https://github.com/minggli",
      "followers_url": "https://api.github.com/users/minggli/followers",
      "following_url": "https://api.github.com/users/minggli/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggli/subscriptions",
      "organizations_url": "https://api.github.com/users/minggli/orgs",
      "repos_url": "https://api.github.com/users/minggli/repos",
      "events_url": "https://api.github.com/users/minggli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T22:00:18Z",
    "updated_at": "2018-02-24T22:00:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback done."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368302244",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368302244",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368302244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODMwMjI0NA==",
    "user": {
      "login": "minggli",
      "id": 14131823,
      "node_id": "MDQ6VXNlcjE0MTMxODIz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14131823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggli",
      "html_url": "https://github.com/minggli",
      "followers_url": "https://api.github.com/users/minggli/followers",
      "following_url": "https://api.github.com/users/minggli/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggli/subscriptions",
      "organizations_url": "https://api.github.com/users/minggli/orgs",
      "repos_url": "https://api.github.com/users/minggli/repos",
      "events_url": "https://api.github.com/users/minggli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-25T11:36:58Z",
    "updated_at": "2018-02-25T11:42:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback SparseDataFrame.values seem to have lost dtype along the way, breaking test_iterrows(). Dense dataframe (s.to_dense().values) doesn't have this problem. is it normal? \r\n\r\n>>> s = SparseDataFrame(\r\n...     {'non_iso8601': ['M1701', 'M1802', 'M1903'],\r\n...      'iso8601': to_datetime(['2016-09-01', '2017-01-01', '2018-01-23'])})\r\n>>>\r\n>>> s.values\r\narray([[1472688000000000000, 'M1701'],\r\n       [1483228800000000000, 'M1802'],\r\n       [1516665600000000000, 'M1903']], dtype=object)\r\n>>>\r\n>>> s.to_dense().values\r\narray([[Timestamp('2016-09-01 00:00:00'), 'M1701'],\r\n       [Timestamp('2017-01-01 00:00:00'), 'M1802'],\r\n       [Timestamp('2018-01-23 00:00:00'), 'M1903']], dtype=object)\r\n\r\ns._data.as_array()\r\narray([[1472688000000000000, 1483228800000000000, 1516665600000000000],\r\n       ['M1701', 'M1802', 'M1903']], dtype=object)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368315457",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368315457",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368315457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODMxNTQ1Nw==",
    "user": {
      "login": "minggli",
      "id": 14131823,
      "node_id": "MDQ6VXNlcjE0MTMxODIz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14131823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggli",
      "html_url": "https://github.com/minggli",
      "followers_url": "https://api.github.com/users/minggli/followers",
      "following_url": "https://api.github.com/users/minggli/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggli/subscriptions",
      "organizations_url": "https://api.github.com/users/minggli/orgs",
      "repos_url": "https://api.github.com/users/minggli/repos",
      "events_url": "https://api.github.com/users/minggli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-25T14:51:47Z",
    "updated_at": "2018-02-25T14:53:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "looked into above, but SparseFrame doesn't have the granularity that dense DataFrame has in terms of handling different block types.\r\n\r\nDatetimeLikeBlockMixin provides Timestamp, Timedelta constructions in Datetimelike Blocks. \r\n\r\nThis is a pre-existing condition which I think is outside the scope of this PR. moved test case for DataFrame only."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368318779",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368318779",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368318779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODMxODc3OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-25T15:35:59Z",
    "updated_at": "2018-02-25T15:35:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minggli code/tests lgtm. I just pushed a tiny update. Can you add a whatsnew note (bug fix, reshaping). ping on green."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368319885",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368319885",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368319885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODMxOTg4NQ==",
    "user": {
      "login": "minggli",
      "id": 14131823,
      "node_id": "MDQ6VXNlcjE0MTMxODIz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14131823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggli",
      "html_url": "https://github.com/minggli",
      "followers_url": "https://api.github.com/users/minggli/followers",
      "following_url": "https://api.github.com/users/minggli/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggli/subscriptions",
      "organizations_url": "https://api.github.com/users/minggli/orgs",
      "repos_url": "https://api.github.com/users/minggli/repos",
      "events_url": "https://api.github.com/users/minggli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-25T15:50:01Z",
    "updated_at": "2018-02-25T15:50:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @jreback, thanks for the update. I initially put test in SharedwithSparse like you just did and it fails on tests.sparse.frame due to reasons mentioned above."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368321029",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368321029",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368321029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODMyMTAyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-25T16:04:08Z",
    "updated_at": "2018-02-25T16:04:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Hi @jreback, thanks for the update. I initially put test in SharedwithSparse like you just did and it fails on tests.sparse.frame due to reasons mentioned above.\r\n\r\nahh ok. can you put an xfail on it then for the Sparse (I *think* there are some examples like that)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368353827",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368353827",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368353827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODM1MzgyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-25T23:05:34Z",
    "updated_at": "2018-02-25T23:05:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @minggli very nice! keep em coming!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368354655",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19762#issuecomment-368354655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19762",
    "id": 368354655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODM1NDY1NQ==",
    "user": {
      "login": "minggli",
      "id": 14131823,
      "node_id": "MDQ6VXNlcjE0MTMxODIz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14131823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggli",
      "html_url": "https://github.com/minggli",
      "followers_url": "https://api.github.com/users/minggli/followers",
      "following_url": "https://api.github.com/users/minggli/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggli/subscriptions",
      "organizations_url": "https://api.github.com/users/minggli/orgs",
      "repos_url": "https://api.github.com/users/minggli/repos",
      "events_url": "https://api.github.com/users/minggli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-25T23:17:37Z",
    "updated_at": "2018-02-25T23:17:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "happy to help!!"
  }
]
