[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24774147",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-24774147",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 24774147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzc0MTQ3",
    "user": {
      "login": "jnorwood",
      "id": 1499591,
      "node_id": "MDQ6VXNlcjE0OTk1OTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1499591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnorwood",
      "html_url": "https://github.com/jnorwood",
      "followers_url": "https://api.github.com/users/jnorwood/followers",
      "following_url": "https://api.github.com/users/jnorwood/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnorwood/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnorwood/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnorwood/subscriptions",
      "organizations_url": "https://api.github.com/users/jnorwood/orgs",
      "repos_url": "https://api.github.com/users/jnorwood/repos",
      "events_url": "https://api.github.com/users/jnorwood/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnorwood/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-19T21:18:43Z",
    "updated_at": "2013-09-19T21:18:43Z",
    "author_association": "NONE",
    "body": "I should also point out that the json output omits the names info that would be required to restore the df completely (names=['foo', 'bar'])\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24780664",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-24780664",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 24780664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzgwNjY0",
    "user": {
      "login": "jnorwood",
      "id": 1499591,
      "node_id": "MDQ6VXNlcjE0OTk1OTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1499591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnorwood",
      "html_url": "https://github.com/jnorwood",
      "followers_url": "https://api.github.com/users/jnorwood/followers",
      "following_url": "https://api.github.com/users/jnorwood/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnorwood/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnorwood/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnorwood/subscriptions",
      "organizations_url": "https://api.github.com/users/jnorwood/orgs",
      "repos_url": "https://api.github.com/users/jnorwood/repos",
      "events_url": "https://api.github.com/users/jnorwood/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnorwood/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-19T23:22:47Z",
    "updated_at": "2013-09-19T23:22:47Z",
    "author_association": "NONE",
    "body": "ok, if this is going to be an enhancement request, let me make another suggestion...\nThe stored json data should include all the info necessary to restore the same dataframe ... so it shouldn't be necessary for the reader to specify the orient parameter when reading.    \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24781771",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-24781771",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 24781771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzgxNzcx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-19T23:50:23Z",
    "updated_at": "2013-09-19T23:50:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jnorwood so you are using these for 'storage'? JSON is not traditionally a reflexive serialization format. IOW, it takes a schema to ensure deserialization of a serialization will work. (as types can be subtly different, ordering is not guaranteed, etc.). CSV is like this too, SQL is partially like this. HDF5 can be reflexive as it stores the meta data.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24848694",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-24848694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 24848694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODQ4Njk0",
    "user": {
      "login": "jnorwood",
      "id": 1499591,
      "node_id": "MDQ6VXNlcjE0OTk1OTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1499591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnorwood",
      "html_url": "https://github.com/jnorwood",
      "followers_url": "https://api.github.com/users/jnorwood/followers",
      "following_url": "https://api.github.com/users/jnorwood/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnorwood/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnorwood/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnorwood/subscriptions",
      "organizations_url": "https://api.github.com/users/jnorwood/orgs",
      "repos_url": "https://api.github.com/users/jnorwood/repos",
      "events_url": "https://api.github.com/users/jnorwood/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnorwood/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-20T23:25:23Z",
    "updated_at": "2013-09-20T23:25:23Z",
    "author_association": "NONE",
    "body": "The current JSON output does  (almost) have the  description of a dataframes structure including support for multi-index headers.  The current output with orient='split'  is already implementing an implied schema based on the dataframe structure.    It is missing \"names\".  I think it could also add \"orient\".  Then all that is left is for the reader to read back and restore the info correctly.  In general, if pandas is going to support multi-index headers fully, then I think it needs to provide a way to handle it correctly in whatever output you export to and import from.  If you just state what the schema is then users can generate  the proper format to still take advantage of the multi-index, which is a nice feature of the dataframe.\n\nHere is a sample json output with orient='split'\n\n{\"columns\":[[\"foo\",\"one\"],[\"foo\",\"two\"],[\"foo\",\"three\"],[\"bar\",\"one\"],[\"bar\",\"two\"],[\"baz\",\"two\"],[\"baz\",\"three\"],[\"qux\",\"one\"],[\"qux\",\"two\"],[\"qux\",\"three\"]],\"index\":[\"A\",\"B\",\"C\"],\"data\":[[1.4363830373,-0.3037434653,-1.0501832047,0.3830191489,-0.6174135405,-1.2378511344,-0.6473196664,1.1436025073,0.2124401475,0.5732940926],[0.6103747676,-0.8948600162,0.5987307019,-0.3098951553,-1.659220121,-1.8047032839,1.006122262,-0.9470006317,-0.2870211491,-1.9018432636],[-0.6036721203,0.7321329545,-0.6730598856,0.0215133965,-0.422750222,-0.6237148299,-0.2726430101,-0.7192759505,-0.3399415151,1.6568583209]]}\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24894245",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-24894245",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 24894245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk0MjQ1",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T00:31:03Z",
    "updated_at": "2013-09-23T00:31:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jnorwood FYI `to_json` doesn't really support `MultiIndex` or higher dim containers like `Panel` and `NDPanel` right now. I'm hoping to get a PR in for 0.13 to improve the JSON docs.\n\nAlso I don't think any metadata (like the orient) should be included for aiding deserialisation. I'm thinking of the case where you are deserialising outside of pandas, it just causes confusion.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24897660",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-24897660",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 24897660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk3NjYw",
    "user": {
      "login": "jnorwood",
      "id": 1499591,
      "node_id": "MDQ6VXNlcjE0OTk1OTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1499591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnorwood",
      "html_url": "https://github.com/jnorwood",
      "followers_url": "https://api.github.com/users/jnorwood/followers",
      "following_url": "https://api.github.com/users/jnorwood/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnorwood/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnorwood/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnorwood/subscriptions",
      "organizations_url": "https://api.github.com/users/jnorwood/orgs",
      "repos_url": "https://api.github.com/users/jnorwood/repos",
      "events_url": "https://api.github.com/users/jnorwood/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnorwood/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T03:42:59Z",
    "updated_at": "2013-09-23T03:42:59Z",
    "author_association": "NONE",
    "body": "I think there is more confusion without including the orient option.  If someone has generated a json document for you to read in pandas, currently you'd have to guess what orient option was originally used during generation  so you can enter the correct reader options.  If the writer includes the orient option in the json attributes, then the reader can simply retrieve it as it does the other attributes.  If some reader doesn't know what the attribute means it can just ignore it, right?  \n\nIt isn't clear to me what other reader you are trying to support.  I'd guess the most common use case would be pandas generating the json and then pandas reading it back.  My particular use case is I'd like to generate a json format file or string,  and have pandas read and display it as a multi-index table in some cases, or as a single index table in other cases.  Of course we could invent another layer of communication to tell pandas what type of table orientation the json file contains, but it seems more natural to just put the info in the json file.\n\nReally, I think you should try to consistently support all the features that pandas supports with all the readers and writers, and do it in a straightforward way that is documented.   Someone has apparently made an attempt to support multi-index columns in the json writer, and it seems like it is a good start.  It would be a good feature to support a simple json format that other apps could generate and so  enable easy description of a multi-index table.  It is a lot simpler solution than using  hdf5 generation.   I can see the potential importance of both options.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24898365",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-24898365",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 24898365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk4MzY1",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T04:20:14Z",
    "updated_at": "2013-09-23T04:20:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "One point in implied by @jnorwood stands out: what's the use-case for to_json? I'd assume it's less space efficient than other formats.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24898673",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-24898673",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 24898673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk4Njcz",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T04:36:12Z",
    "updated_at": "2013-09-23T04:36:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well my main use case is (well, was more than is) interoperability. Specifically with a web frontend, deserialisation in JS, for plotting etc.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35082645",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-35082645",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 35082645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDgyNjQ1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T13:24:03Z",
    "updated_at": "2014-02-14T13:24:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Komnomnomnom progresss on this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35223628",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-35223628",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 35223628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjIzNjI4",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T01:59:32Z",
    "updated_at": "2014-02-17T01:59:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback as of right now my priorities for pandasjson are MultiIndex support and Panel (+ higher dim) support. No work done in this direction yet but I think 0.14 is a good target to aim for.\n\nSo this issue to track MultiIndex support and #5428 for tracking Panel support?\n\n(As stated above I'm not a fan of the idea of adding extra metadata onto the JSON encoded Pandas object. I'd favour a 'clean' representation of the data so it's easily portable. I'd welcome other's opinions though.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35224464",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-35224464",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 35224464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjI0NDY0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T02:28:54Z",
    "updated_at": "2014-02-17T02:28:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Komnomnomnom sounds good on the priorities\n\nI also agree with keeping clean json\n\nI think this issue concerns some sort of auto sniffing of the orientation\nnot sure how hard that would be (and prob would be ambiguous in some cases)\n\nmaybe accept orient= 'infer' at some point?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35225078",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-35225078",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 35225078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjI1MDc4",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T02:48:57Z",
    "updated_at": "2014-02-17T02:48:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I like the idea of `orient=infer` on decoding, although yes it would be ambiguous for `index` and `columns` formats. \n\n``` python\nIn [24]: df\nOut[24]: \n              Open    High     Low   Close   Volume  Adj Close\nDate                                                          \n2010-01-04  626.95  629.51  624.24  626.75  1956200     626.75\n2010-01-05  627.18  627.84  621.54  623.99  3004700     623.99\n2010-01-06  625.86  625.86  606.36  608.26  3978700     608.26\n2010-01-07  609.40  610.00  592.65  594.10  6414300     594.10\n2010-01-08  592.00  603.25  589.11  602.02  4724300     602.02\n2010-01-11  604.46  604.46  594.04  601.11  7212900     601.11\n2010-01-12  597.65  598.16  588.00  590.48  4853300     590.48\n2010-01-13  576.49  588.38  573.90  587.09  6496600     587.09\n2010-01-14  583.90  594.20  582.81  589.85  4240100     589.85\n2010-01-15  593.34  593.56  578.04  580.00  5434500     580.00\n\n[10 rows x 6 columns]\n\nIn [19]: df.to_json(orient='columns')\nOut[19]: '{\"Open\":{\"1262563200000\":626.95,\"1262649600000\":627.18,\"1262736000000\":625.86,\"1262822400000\":609.4,\"1262908800000\":592.0,\"1263168000000\":604.46,\"1263254400000\":597.65,\"1263340800000\":576.49,\"1263427200000\":583.9,\"1263513600000\":593.34},\"High\":{\"1262563200000\":629.51,\"1262649600000\":627.84,\"1262736000000\":625.86,\"1262822400000\":610.0,\"1262908800000\":603.25,\"1263168000000\":604.46,\"1263254400000\":598.16,\"1263340800000\":588.38,\"1263427200000\":594.2,\"1263513600000\":593.56},\"Low\":{\"1262563200000\":624.24,\"1262649600000\":621.54,\"1262736000000\":606.36,\"1262822400000\":592.65,\"1262908800000\":589.11,\"1263168000000\":594.04,\"1263254400000\":588.0,\"1263340800000\":573.9,\"1263427200000\":582.81,\"1263513600000\":578.04},\"Close\":{\"1262563200000\":626.75,\"1262649600000\":623.99,\"1262736000000\":608.26,\"1262822400000\":594.1,\"1262908800000\":602.02,\"1263168000000\":601.11,\"1263254400000\":590.48,\"1263340800000\":587.09,\"1263427200000\":589.85,\"1263513600000\":580.0},\"Volume\":{\"1262563200000\":1956200.0,\"1262649600000\":3004700.0,\"1262736000000\":3978700.0,\"1262822400000\":6414300.0,\"1262908800000\":4724300.0,\"1263168000000\":7212900.0,\"1263254400000\":4853300.0,\"1263340800000\":6496600.0,\"1263427200000\":4240100.0,\"1263513600000\":5434500.0},\"Adj Close\":{\"1262563200000\":626.75,\"1262649600000\":623.99,\"1262736000000\":608.26,\"1262822400000\":594.1,\"1262908800000\":602.02,\"1263168000000\":601.11,\"1263254400000\":590.48,\"1263340800000\":587.09,\"1263427200000\":589.85,\"1263513600000\":580.0}}'\n\nIn [22]: df.to_json(orient='index')\nOut[22]: '{\"1262563200000\":{\"Open\":626.95,\"High\":629.51,\"Low\":624.24,\"Close\":626.75,\"Volume\":1956200.0,\"Adj Close\":626.75},\"1262649600000\":{\"Open\":627.18,\"High\":627.84,\"Low\":621.54,\"Close\":623.99,\"Volume\":3004700.0,\"Adj Close\":623.99},\"1262736000000\":{\"Open\":625.86,\"High\":625.86,\"Low\":606.36,\"Close\":608.26,\"Volume\":3978700.0,\"Adj Close\":608.26},\"1262822400000\":{\"Open\":609.4,\"High\":610.0,\"Low\":592.65,\"Close\":594.1,\"Volume\":6414300.0,\"Adj Close\":594.1},\"1262908800000\":{\"Open\":592.0,\"High\":603.25,\"Low\":589.11,\"Close\":602.02,\"Volume\":4724300.0,\"Adj Close\":602.02},\"1263168000000\":{\"Open\":604.46,\"High\":604.46,\"Low\":594.04,\"Close\":601.11,\"Volume\":7212900.0,\"Adj Close\":601.11},\"1263254400000\":{\"Open\":597.65,\"High\":598.16,\"Low\":588.0,\"Close\":590.48,\"Volume\":4853300.0,\"Adj Close\":590.48},\"1263340800000\":{\"Open\":576.49,\"High\":588.38,\"Low\":573.9,\"Close\":587.09,\"Volume\":6496600.0,\"Adj Close\":587.09},\"1263427200000\":{\"Open\":583.9,\"High\":594.2,\"Low\":582.81,\"Close\":589.85,\"Volume\":4240100.0,\"Adj Close\":589.85},\"1263513600000\":{\"Open\":593.34,\"High\":593.56,\"Low\":578.04,\"Close\":580.0,\"Volume\":5434500.0,\"Adj Close\":580.0}}'\n\nIn [20]: df.to_json(orient='split')\nOut[20]: '{\"columns\":[\"Open\",\"High\",\"Low\",\"Close\",\"Volume\",\"Adj Close\"],\"index\":[1262563200000,1262649600000,1262736000000,1262822400000,1262908800000,1263168000000,1263254400000,1263340800000,1263427200000,1263513600000],\"data\":[[626.95,629.51,624.24,626.75,1956200.0,626.75],[627.18,627.84,621.54,623.99,3004700.0,623.99],[625.86,625.86,606.36,608.26,3978700.0,608.26],[609.4,610.0,592.65,594.1,6414300.0,594.1],[592.0,603.25,589.11,602.02,4724300.0,602.02],[604.46,604.46,594.04,601.11,7212900.0,601.11],[597.65,598.16,588.0,590.48,4853300.0,590.48],[576.49,588.38,573.9,587.09,6496600.0,587.09],[583.9,594.2,582.81,589.85,4240100.0,589.85],[593.34,593.56,578.04,580.0,5434500.0,580.0]]}'\n\nIn [21]: df.to_json(orient='records')\nOut[21]: '[{\"Open\":626.95,\"High\":629.51,\"Low\":624.24,\"Close\":626.75,\"Volume\":1956200.0,\"Adj Close\":626.75},{\"Open\":627.18,\"High\":627.84,\"Low\":621.54,\"Close\":623.99,\"Volume\":3004700.0,\"Adj Close\":623.99},{\"Open\":625.86,\"High\":625.86,\"Low\":606.36,\"Close\":608.26,\"Volume\":3978700.0,\"Adj Close\":608.26},{\"Open\":609.4,\"High\":610.0,\"Low\":592.65,\"Close\":594.1,\"Volume\":6414300.0,\"Adj Close\":594.1},{\"Open\":592.0,\"High\":603.25,\"Low\":589.11,\"Close\":602.02,\"Volume\":4724300.0,\"Adj Close\":602.02},{\"Open\":604.46,\"High\":604.46,\"Low\":594.04,\"Close\":601.11,\"Volume\":7212900.0,\"Adj Close\":601.11},{\"Open\":597.65,\"High\":598.16,\"Low\":588.0,\"Close\":590.48,\"Volume\":4853300.0,\"Adj Close\":590.48},{\"Open\":576.49,\"High\":588.38,\"Low\":573.9,\"Close\":587.09,\"Volume\":6496600.0,\"Adj Close\":587.09},{\"Open\":583.9,\"High\":594.2,\"Low\":582.81,\"Close\":589.85,\"Volume\":4240100.0,\"Adj Close\":589.85},{\"Open\":593.34,\"High\":593.56,\"Low\":578.04,\"Close\":580.0,\"Volume\":5434500.0,\"Adj Close\":580.0}]'\n\n\nIn [23]: df.to_json(orient='values')\nOut[23]: '[[626.95,629.51,624.24,626.75,1956200.0,626.75],[627.18,627.84,621.54,623.99,3004700.0,623.99],[625.86,625.86,606.36,608.26,3978700.0,608.26],[609.4,610.0,592.65,594.1,6414300.0,594.1],[592.0,603.25,589.11,602.02,4724300.0,602.02],[604.46,604.46,594.04,601.11,7212900.0,601.11],[597.65,598.16,588.0,590.48,4853300.0,590.48],[576.49,588.38,573.9,587.09,6496600.0,587.09],[583.9,594.2,582.81,589.85,4240100.0,589.85],[593.34,593.56,578.04,580.0,5434500.0,580.0]]'\n\n```\n\nGetting `index` and `columns` confused would be a transpose of the data so either raise if one of these orients were inferred or do some fancy thinking, like date data being primarily on the index axis, and the index size is usually larger than the column size etc. Unfortunately `index` is the default orientation. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39121132",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-39121132",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 39121132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTIxMTMy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T18:07:11Z",
    "updated_at": "2014-03-31T18:07:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Komnomnomnom from SO: http://stackoverflow.com/questions/22768682/pandas-read-json-not-working-on-multiindex/22768931#22768931\n\nbut the same issue\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293098301",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-293098301",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 293098301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzA5ODMwMQ==",
    "user": {
      "login": "watsonix",
      "id": 9025286,
      "node_id": "MDQ6VXNlcjkwMjUyODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9025286?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/watsonix",
      "html_url": "https://github.com/watsonix",
      "followers_url": "https://api.github.com/users/watsonix/followers",
      "following_url": "https://api.github.com/users/watsonix/following{/other_user}",
      "gists_url": "https://api.github.com/users/watsonix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/watsonix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/watsonix/subscriptions",
      "organizations_url": "https://api.github.com/users/watsonix/orgs",
      "repos_url": "https://api.github.com/users/watsonix/repos",
      "events_url": "https://api.github.com/users/watsonix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/watsonix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-10T22:33:45Z",
    "updated_at": "2017-04-10T22:34:05Z",
    "author_association": "NONE",
    "body": "Last update to this was 2 years ago. I'm assuming its still open? I have a multi-index situation when I do:\r\n    `query_df = pd.read_sql_query(sql_text, db_conn, index_col=['user_id', 'mobile_time'])`\r\nand then output via:\r\n    `records_json = query_df.to_json(orient='split')`    \r\n\r\nbut then\r\n    `pd.read_json(records_json, orient='split')`\r\ndoesn't work"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293117848",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-293117848",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 293117848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzExNzg0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T00:44:10Z",
    "updated_at": "2017-04-11T00:44:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "If you want a *more* round-trippable JSON format, this is in upcoming 0.20.0.: http://pandas-docs.github.io/pandas-docs-travis/whatsnew.html#whatsnew-0200-enhancements-table-schema\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/472910115",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4889#issuecomment-472910115",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4889",
    "id": 472910115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjkxMDExNQ==",
    "user": {
      "login": "people-can-fly",
      "id": 9085750,
      "node_id": "MDQ6VXNlcjkwODU3NTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9085750?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/people-can-fly",
      "html_url": "https://github.com/people-can-fly",
      "followers_url": "https://api.github.com/users/people-can-fly/followers",
      "following_url": "https://api.github.com/users/people-can-fly/following{/other_user}",
      "gists_url": "https://api.github.com/users/people-can-fly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/people-can-fly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/people-can-fly/subscriptions",
      "organizations_url": "https://api.github.com/users/people-can-fly/orgs",
      "repos_url": "https://api.github.com/users/people-can-fly/repos",
      "events_url": "https://api.github.com/users/people-can-fly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/people-can-fly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T15:11:12Z",
    "updated_at": "2019-03-14T15:11:12Z",
    "author_association": "NONE",
    "body": "Or you can just write json with orient = 'table'\r\n\r\n`df.to_json(path_or_buf='test.json', orient='table')`\r\n\r\nread multi_index json\r\n\r\n`pd.read_json('test.json', orient='table')`"
  }
]
