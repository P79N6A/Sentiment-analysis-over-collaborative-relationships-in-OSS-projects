[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110534606",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10320#issuecomment-110534606",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10320",
    "id": 110534606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDUzNDYwNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-09T23:45:24Z",
    "updated_at": "2015-06-09T23:45:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bwillers perhaps show an example where you cannot merge the frames. That is the most canonical & efficient method. What you should above is really just a _for_ loop, not taking advantage of any of pandas efficiencies.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110550587",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10320#issuecomment-110550587",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10320",
    "id": 110550587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDU1MDU4Nw==",
    "user": {
      "login": "bwillers",
      "id": 4094953,
      "node_id": "MDQ6VXNlcjQwOTQ5NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4094953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bwillers",
      "html_url": "https://github.com/bwillers",
      "followers_url": "https://api.github.com/users/bwillers/followers",
      "following_url": "https://api.github.com/users/bwillers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bwillers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bwillers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bwillers/subscriptions",
      "organizations_url": "https://api.github.com/users/bwillers/orgs",
      "repos_url": "https://api.github.com/users/bwillers/repos",
      "events_url": "https://api.github.com/users/bwillers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bwillers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-10T01:13:18Z",
    "updated_at": "2015-06-10T01:13:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback True it really just a for loop, but wasn't sure if this was something other people find themselves doing with any regularity.\n\nSlightly contrived example with random numbers/domain:\n\n```\nprint(census)\n                          bikes   cars  population\ncity        neighborhood                          \nMexico City awful         21704  28499       77729\n            geography     22549  39323       65921\n            is            34059  75053       53994\n            my            35892   2669       19428\nSeattle     awful         28043  25532       21727\n            geography     24914  -4245       84771\n            is            25113  46743       74282\n            my            32519  40379       50789\n\nprint(weather)\n                            rain      wind\ncity        date                          \nMexico City 2002-04-17  0.026612  0.669639\n            2002-10-16  0.003745  0.251635\n            2003-06-03  0.313699  0.275628\n            2003-08-03  1.265956  0.204420\n            2005-03-12  4.795716  0.016668\n            2005-07-15  0.161919  0.026317\n            2005-08-05  2.802568  1.781364\n            2006-01-24  2.758856  0.298177\n            2006-05-20  2.095423  1.155400\n            2007-01-21  2.279899  0.050688\n            2007-07-08  0.330846  0.696462\nSeattle     2002-02-13  1.295050  1.104200\n            2003-05-05  0.166942  0.807315\n            2003-09-07  1.673502  0.016926\n            2004-09-05  0.832192  0.924529\n            2004-12-10  0.402471  0.561248\n            2005-04-10  5.945603  1.281094\n            2007-09-16  0.964379  0.162256\n            2008-09-18  0.054571  0.248187\n            2009-07-08  0.363382  1.497879\n```\n\nNow, you could merge those by basically broadcasting across the missing level, but if one of these tables becomes large (in reality I'm dealing with 10M + rows), the amount of duplication involved in that broadcast becomes enormous.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110923624",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10320#issuecomment-110923624",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10320",
    "id": 110923624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDkyMzYyNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-10T21:46:14Z",
    "updated_at": "2015-06-10T21:46:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you put up a copy-pastable example of the setup code (can of course be completely random data, just the structure should be what you want), and example of output and your work-around.\n"
  }
]
