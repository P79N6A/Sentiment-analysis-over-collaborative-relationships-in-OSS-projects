[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52041453",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-52041453",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 52041453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQxNDUz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T12:28:56Z",
    "updated_at": "2014-08-13T12:29:31Z",
    "author_association": "MEMBER",
    "body": "`by=None` is possible, eg if you provide `level`, you don't need to specify `by`.\n\nBut we could probably provide a better error message here. Something like \"You have to at least specify one of 'by' or 'level' \"\n\nCurrent error: `TypeError: 'NoneType' object is not callable`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61065477",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-61065477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 61065477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDY1NDc3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T09:36:01Z",
    "updated_at": "2014-10-30T09:36:01Z",
    "author_association": "MEMBER",
    "body": "Thinking about this again, I am a little bit confused:\n\nThe signature is: `DataFrame.groupby(by=None, axis=0, level=None, ..)`, so there is a default of `axis=0`, and the explanation of `level` states \"If the axis is a MultiIndex (hierarchical), group by a particular level or levels\". \nSo when you don't have a MultiIndex, but a single Index, I would assume that you don't need to specify the `level` kwarg. So in that reasoning, `df.groupby(axis=0)` should just group by the row index?\n\n```\nIn [39]: df = pd.DataFrame(np.random.randn(5,5), index=[0,0,1,1,1])\n\nIn [40]: df.groupby(axis=0, level=0).sum()\nOut[40]:\n          0         1         2         3         4\n0 -2.219825  0.787332 -0.863655  0.877530  3.664685\n1  0.766315 -2.294101 -1.636917 -0.205543  1.535448\n\nIn [41]: df.groupby(axis=0).sum()\n-> TypeError: 'NoneType' object is not callable\n```\n\nSo, or this should actually groupby by the index, or the documentation should be updated.\n\n@hayd @jreback \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61066999",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-61066999",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 61066999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDY2OTk5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T09:48:33Z",
    "updated_at": "2014-10-30T09:48:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmmmm. To me this looks much less readable than (something like):\n\n``` py\ndf.groupby(df.index).sum()\n```\n\nI don't think this being the default is sensible (I think it would lead to confusion/bugs as well as not usually being a regular use case) ... ?\n\nSaying that, definitely the error message should be fixed! Perhaps say, groupby a column(s), df.index or ...just (perish the thought) see the groupby docs!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61068260",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-61068260",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 61068260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDY4MjYw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T09:59:40Z",
    "updated_at": "2014-10-30T09:59:40Z",
    "author_association": "MEMBER",
    "body": "@hayd yep, I can agree with that, being more explicit is better.\n\nBut then, I would argue that `axis` should not have a default of 0, so that `df.groupby(df.index)` would be equivalent to `df.groupby(axis=0)` when having a single index. \nThe problem with that is that you then can't specify only the level in `df.groupby(level=1)` when having a MultiIndex, but always also will have to specify axis: `df.groupby(axis=0, level=1)`, as axis is no longer 0 by default.\n\nA use case is to remove duplicates in your index, but indeed, not the most standard thing to use groupby for.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61069514",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-61069514",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 61069514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDY5NTE0",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T10:10:43Z",
    "updated_at": "2014-10-30T10:10:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would argue that this minor inconsistency (requiring level=0 to be passed, though I'm not sure I even agree it's inconsistent!) is a good compromise rather than allowing `.groupby()`.\n\ndrop_duplicates is a bad example (there's function for that), but I know I've done this before for something and it can be useful, it's just infrequently required (which I think is good reason not to use it as the \"default\" a. you rarely use it b. you'd have to look up what it's doing when you do see it).\n\nThere's reason to have axis=0 by default, as we are grouping row-wise (be it on index or a column), it _doesn't_ mean groupby the index!\n\nThat is to say, I like the current behaviour (both are explicit in what they are doing):\n\n```\ndf.groupby(level=0) == df.groupby(df.index)\n```\n\nand leaving groupby blank should definitely raise\n\n```\ndf.groupby() # reader has no idea what this should do\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61070253",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-61070253",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 61070253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDcwMjUz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T10:17:21Z",
    "updated_at": "2014-10-30T10:17:21Z",
    "author_association": "MEMBER",
    "body": "@hayd Ah yes, forgot about that meaning of `axis=0`!\n\nSo let's just say then: the docstring of `level` should be clarified that it is not only for a MultiIndex + add an explanation of the `axis` kwarg (there is none now)\n\nAnd to further nitpick a bit :-) `drop_duplicates` is not fully a bad examples, as the `drop_duplicates` method looks at duplicate rows (which I first always forget) and not index, there is also a `drop_duplicates` method for index, but that is a bit less straightforward to use (as you have to re-index with the new index) + you can only drop duplicates, while with groupby you can also say you want the mean of the duplicates for example.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61071519",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-61071519",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 61071519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDcxNTE5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T10:28:33Z",
    "updated_at": "2014-10-30T10:29:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "`axis` is just a modifier of of the `level` argument. Doesn't have meaning unless that is specified.\n\nSo in reality, you have to specify:\n\n`by` or `level/axis`\n\nwould not allow just a bare, `axis=0` because then it ONLY works if the index is an `Index`, better to be explict and have the user pass the actual axis\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61079784",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-61079784",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 61079784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDc5Nzg0",
    "user": {
      "login": "springcoil",
      "id": 983944,
      "node_id": "MDQ6VXNlcjk4Mzk0NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/983944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/springcoil",
      "html_url": "https://github.com/springcoil",
      "followers_url": "https://api.github.com/users/springcoil/followers",
      "following_url": "https://api.github.com/users/springcoil/following{/other_user}",
      "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions",
      "organizations_url": "https://api.github.com/users/springcoil/orgs",
      "repos_url": "https://api.github.com/users/springcoil/repos",
      "events_url": "https://api.github.com/users/springcoil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/springcoil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T11:48:28Z",
    "updated_at": "2014-10-30T11:48:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "This all feels like turtles all the way down :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61082132",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-61082132",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 61082132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDgyMTMy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T12:12:53Z",
    "updated_at": "2014-10-30T12:13:14Z",
    "author_association": "MEMBER",
    "body": "@jreback I think @hayd is right, that `axis` has indeed another meaning as well: on wich axis is the grouping applied, as you can also combine `axis` with `by` (and not only with `level`):\n\n```\nIn [61]: df = pd.DataFrame(np.random.randn(5,5))\n\nIn [62]: df.groupby(by=pd.Series([1,1,1,2,2]), axis=0).sum()\nOut[62]:\n          0         1         2         3         4\n1  3.685961  0.176227  0.422497  0.688798  0.341932\n2  0.397360 -1.918284 -0.498714  3.177563  0.379342\n\nIn [63]: df.groupby(by=pd.Series([1,1,1,2,2]), axis=1).sum()\nOut[63]:\n          1         2\n0  1.749975 -0.624686\n1 -0.862650  1.331078\n2  3.397360  0.324337\n3 -1.941983  1.222833\n4 -0.077655  2.334072\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61085953",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-61085953",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 61085953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDg1OTUz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T12:49:49Z",
    "updated_at": "2014-10-30T12:49:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche that look right, so `axis` is a modifier to `by` or `level` (which are the required parms).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61086301",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-61086301",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 61086301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDg2MzAx",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T12:53:02Z",
    "updated_at": "2014-10-30T12:53:02Z",
    "author_association": "MEMBER",
    "body": "yep, indeed, the docstring should be clarified a bit on that account. \nSo, @springcoil, that doesn't change anything for your PR, at leas one of `by` or `level` should be provided.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65389566",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-65389566",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 65389566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzg5NTY2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T10:51:50Z",
    "updated_at": "2014-12-03T10:51:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "closed by #8950 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347023878",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-347023878",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 347023878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAyMzg3OA==",
    "user": {
      "login": "ffranchina",
      "id": 8852116,
      "node_id": "MDQ6VXNlcjg4NTIxMTY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8852116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ffranchina",
      "html_url": "https://github.com/ffranchina",
      "followers_url": "https://api.github.com/users/ffranchina/followers",
      "following_url": "https://api.github.com/users/ffranchina/following{/other_user}",
      "gists_url": "https://api.github.com/users/ffranchina/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ffranchina/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ffranchina/subscriptions",
      "organizations_url": "https://api.github.com/users/ffranchina/orgs",
      "repos_url": "https://api.github.com/users/ffranchina/repos",
      "events_url": "https://api.github.com/users/ffranchina/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ffranchina/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T17:17:26Z",
    "updated_at": "2017-11-26T17:17:26Z",
    "author_association": "NONE",
    "body": "Hello!\r\n\r\nSorry for bringing back to life this old issue but I find very ugly the current syntax of the `groupby()` method if applied on a `pandas.Series`. It took me many couple of minutes (ok, I am a newbie of pandas) to figure out how to do it: python focuses on simplicity and I think that this\r\n```\r\ns = pd.Series(x)\r\ns.groupby(s.values).count()\r\n```\r\nis not straightforward at all.\r\n\r\nA `pandas.Series` object is a bit more than just an array, isn't it implicit what I mean by just typing `s.groupby().count()`? Since it's just an array of object, it's obvious I want to group according to them!\r\n\r\nI'd like to propose this little enhancement, would you accept a PR of this kind? Or, at least, can you explain me the design choice made behind this syntax, please?\r\n\r\nThank you and have a nice day!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347024547",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-347024547",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 347024547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAyNDU0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T17:27:41Z",
    "updated_at": "2017-11-26T17:27:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "so which shall be the answer?\r\n\r\nexplicit is much better than implicit\r\n\r\n```\r\nIn [1]: s = pd.Series([1, 1, 2, 2, 3])\r\n\r\nIn [2]: s.groupby(s.index).count()\r\nOut[2]: \r\n0    1\r\n1    1\r\n2    1\r\n3    1\r\n4    1\r\ndtype: int64\r\n\r\nIn [3]: s.groupby(s.values).count()\r\nOut[3]: \r\n1    2\r\n2    2\r\n3    1\r\ndtype: int64\r\n\r\n# the same as [2]\r\nIn [5]: s.groupby(level=0).count()\r\nOut[5]: \r\n0    1\r\n1    1\r\n2    1\r\n3    1\r\n4    1\r\ndtype: int64\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347025570",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-347025570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 347025570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAyNTU3MA==",
    "user": {
      "login": "ffranchina",
      "id": 8852116,
      "node_id": "MDQ6VXNlcjg4NTIxMTY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8852116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ffranchina",
      "html_url": "https://github.com/ffranchina",
      "followers_url": "https://api.github.com/users/ffranchina/followers",
      "following_url": "https://api.github.com/users/ffranchina/following{/other_user}",
      "gists_url": "https://api.github.com/users/ffranchina/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ffranchina/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ffranchina/subscriptions",
      "organizations_url": "https://api.github.com/users/ffranchina/orgs",
      "repos_url": "https://api.github.com/users/ffranchina/repos",
      "events_url": "https://api.github.com/users/ffranchina/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ffranchina/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T17:43:18Z",
    "updated_at": "2017-11-26T17:43:18Z",
    "author_association": "NONE",
    "body": "I agree totally on the fact that explicit is better than implicit but, from my point of view, it should not have a different meaning from \r\n```\r\nIn [1]: s = pd.Series([1, 1, 2, 2, 3])\r\n\r\nIn [3]: s.groupby(s.values).count()\r\nOut[3]: \r\n1    2\r\n2    2\r\n3    1\r\ndtype: int64\r\n```\r\nif not differently specified. After all\r\n```\r\n>>> s = pd.Series([1, 1, 2, 2, 3])\r\n>>> s.groupby(s).count()\r\n1    2\r\n2    2\r\n3    1\r\ndtype: int64\r\n```\r\ndoes exactly that, I would simply propose to put this as default behavior.\r\n\r\nBut I'm just speaking from a user, point of view, I don't know almost anything of the details of the implementations, I just wanted to highlight the problem :)\r\n\r\nIf you think it may be a reasonable point of view, I can work on a small PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347027380",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-347027380",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 347027380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAyNzM4MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T18:12:20Z",
    "updated_at": "2017-11-26T18:12:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ferdas but you are missing the point, we can groupby on index or values (in the Series case) by default, which shall it be? and if you pick one, why? it makes no sense to have a default here, when its not very clear which is the preferred operation. So -1 on any change to this.\r\n\r\nFurthermore for what you are actually using this, ``.value_counts`` is more idiomatic.\r\n\r\n```\r\nIn [35]: pd.Series([1, 1, 2, 2, 3]).value_counts()\r\nOut[35]: \r\n2    2\r\n1    2\r\n3    1\r\ndtype: int64\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347028931",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8015#issuecomment-347028931",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8015",
    "id": 347028931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAyODkzMQ==",
    "user": {
      "login": "ffranchina",
      "id": 8852116,
      "node_id": "MDQ6VXNlcjg4NTIxMTY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8852116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ffranchina",
      "html_url": "https://github.com/ffranchina",
      "followers_url": "https://api.github.com/users/ffranchina/followers",
      "following_url": "https://api.github.com/users/ffranchina/following{/other_user}",
      "gists_url": "https://api.github.com/users/ffranchina/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ffranchina/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ffranchina/subscriptions",
      "organizations_url": "https://api.github.com/users/ffranchina/orgs",
      "repos_url": "https://api.github.com/users/ffranchina/repos",
      "events_url": "https://api.github.com/users/ffranchina/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ffranchina/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T18:38:52Z",
    "updated_at": "2017-11-26T18:38:52Z",
    "author_association": "NONE",
    "body": "Since the actual behavior (`s.groupby(s).count()`) is this way, I was deducing that, by default, it should behave in the same way if no arguments are passed.\r\n\r\nI see your point but I don't get how it's possible to think that by calling `s.groupby().count()` the user is confused about what he wants: since the `pandas.Series` is meant to store values, he definitely wants to groupby the values, if he make a clear request (I want to groupby the indexes), he would have a way to explicit that.\r\n\r\nDue to the values-oriented nature of the `pandas.Series`, I think that the API should ease the operations on values rather than treating values and indexes in the same way (not user-friendly).\r\n\r\nWell, if I'm the only one that see the good of this proposal, I'll quit it here.\r\n\r\nThank you for the suggestion of `.value_counts`, I will use it for sure since is far more straightforward!\r\n\r\nGood evening! "
  }
]
