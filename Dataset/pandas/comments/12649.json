[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197665009",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197665009",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197665009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY2NTAwOQ==",
    "user": {
      "login": "ssche",
      "id": 7367411,
      "node_id": "MDQ6VXNlcjczNjc0MTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7367411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssche",
      "html_url": "https://github.com/ssche",
      "followers_url": "https://api.github.com/users/ssche/followers",
      "following_url": "https://api.github.com/users/ssche/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssche/subscriptions",
      "organizations_url": "https://api.github.com/users/ssche/orgs",
      "repos_url": "https://api.github.com/users/ssche/repos",
      "events_url": "https://api.github.com/users/ssche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T02:44:18Z",
    "updated_at": "2016-03-17T02:44:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "The problem is this part in `pd.to_datetime()`:\n\n```\n       if format is not None:\n            # There is a special fast-path for iso8601 formatted\n            # datetime strings, so in those cases don't use the inferred\n            # format because this path makes process slower in this\n            # special case\n            format_is_iso8601 = _format_is_iso(format)\n            print 'format_is_iso8601', format_is_iso8601\n            if format_is_iso8601:\n                require_iso8601 = not infer_datetime_format\n                format = None\n```\n\nWhen I change the condition to `if format is not None and infer_datetime_format`, it works as expected. Is this something that could be changed in Pandas. I find it quite confusing that despite explicitly setting `infer_datetime_format=False` there's still some internal magic happening in this function. Others may feel the same, not sure...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197665706",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197665706",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197665706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY2NTcwNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T02:47:59Z",
    "updated_at": "2016-03-17T02:49:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "nothing to do with that (well you can disable if you set `infer_datetime_format=False`). Its here: https://docs.python.org/3/library/re.html#search-vs-match\n\nif `format` is specified and `exact=True` (the default) its a `.match` like search, meaning it must match at the beginning (as opposed to anywhere). So this is a valid match.\n\nI suppose we could be more stricted on `exact`, e.g. maybe make it `exact='match|search|False` or something.\n\nbut why is this a problem? (as an aside you have an ISO8601 string, so you don't need to do anything to parse it).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197667113",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197667113",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197667113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY2NzExMw==",
    "user": {
      "login": "ssche",
      "id": 7367411,
      "node_id": "MDQ6VXNlcjczNjc0MTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7367411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssche",
      "html_url": "https://github.com/ssche",
      "followers_url": "https://api.github.com/users/ssche/followers",
      "following_url": "https://api.github.com/users/ssche/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssche/subscriptions",
      "organizations_url": "https://api.github.com/users/ssche/orgs",
      "repos_url": "https://api.github.com/users/ssche/repos",
      "events_url": "https://api.github.com/users/ssche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T02:54:03Z",
    "updated_at": "2016-03-17T02:56:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm trying out a few date formats and want to determine the correct one. If I try `'%Y-%m-%d'` and `'%Y-%m-%d %H:%M:%S'`, they both match which isn't quite true.\n\nThe `format` parameter is definitely set to `None` in the code I posted above, so I think it has something to do with the snippet... I find this counter-intuitive given the parameters I passed into this function.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197669885",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197669885",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197669885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY2OTg4NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:01:50Z",
    "updated_at": "2016-03-17T03:01:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm, actually I take that back. it IS removing the format BECAUSE its ISO8601. I am not sure it makes sense to change this as there is a perf penalty for parsing ISO strings with an actual format string (via regex). And we expect (and users expect) that the perf will be the same whether they pass a compat format or not.\n\nFurther if it actually does match ISO how is this a problem?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197672942",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197672942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197672942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3Mjk0Mg==",
    "user": {
      "login": "ssche",
      "id": 7367411,
      "node_id": "MDQ6VXNlcjczNjc0MTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7367411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssche",
      "html_url": "https://github.com/ssche",
      "followers_url": "https://api.github.com/users/ssche/followers",
      "following_url": "https://api.github.com/users/ssche/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssche/subscriptions",
      "organizations_url": "https://api.github.com/users/ssche/orgs",
      "repos_url": "https://api.github.com/users/ssche/repos",
      "events_url": "https://api.github.com/users/ssche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:14:15Z",
    "updated_at": "2016-03-17T03:14:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "In my case, I can easily fix this in the application by not checking for multiple iso format strings. I am trying to detect date format ambiguities, i.e. more than one date format matching which is a generalisation of discerning the `%m/%d` vs. `%d/%m` case.\n\nHowever, I was surprised to get this kind of behaviour from this function as I thought I disabled all auto-magic (`infer_datetime_format=False, exact=True`) behaviour. I wasn't concerned with possible performance hits.\n\nPerhaps a comment in the documentation would suffice to clarify this behaviour if it cannot be turned off through parameters.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197673300",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197673300",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197673300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3MzMwMA==",
    "user": {
      "login": "ssche",
      "id": 7367411,
      "node_id": "MDQ6VXNlcjczNjc0MTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7367411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssche",
      "html_url": "https://github.com/ssche",
      "followers_url": "https://api.github.com/users/ssche/followers",
      "following_url": "https://api.github.com/users/ssche/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssche/subscriptions",
      "organizations_url": "https://api.github.com/users/ssche/orgs",
      "repos_url": "https://api.github.com/users/ssche/repos",
      "events_url": "https://api.github.com/users/ssche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:16:09Z",
    "updated_at": "2016-03-17T03:16:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "> nothing to do with that (well you can disable if you set infer_datetime_format=False). Its here: https://docs.python.org/3/library/re.html#search-vs-match\n\nYour intuition seemed to have been the same as mine... But `infer_datetime_format=False` doesn't work like this for this iso date case.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197673336",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197673336",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197673336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3MzMzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:16:17Z",
    "updated_at": "2016-03-17T03:16:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ssche I don't see any ambiguity in an ISO8601 string. That's the point, it cannot be anything but `dayfirst=False`, `yearfirst=False` by-definition. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197673620",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197673620",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197673620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3MzYyMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:17:55Z",
    "updated_at": "2016-03-17T03:17:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\n        if format is not None:\n            # There is a special fast-path for iso8601 formatted\n            # datetime strings, so in those cases don't use the inferred\n            # format because this path makes process slower in this\n            # special case\n            format_is_iso8601 = _format_is_iso(format)\n            if format_is_iso8601:\n                require_iso8601 = not infer_datetime_format\n                format = None\n```\n\nthe code says it all. If you would like to update the doc-string, by all means.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197673658",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197673658",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197673658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3MzY1OA==",
    "user": {
      "login": "ssche",
      "id": 7367411,
      "node_id": "MDQ6VXNlcjczNjc0MTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7367411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssche",
      "html_url": "https://github.com/ssche",
      "followers_url": "https://api.github.com/users/ssche/followers",
      "following_url": "https://api.github.com/users/ssche/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssche/subscriptions",
      "organizations_url": "https://api.github.com/users/ssche/orgs",
      "repos_url": "https://api.github.com/users/ssche/repos",
      "events_url": "https://api.github.com/users/ssche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:18:08Z",
    "updated_at": "2016-03-17T03:18:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "The ambiguity detection is something I do in my application. I just provided this bit of information as background info because you asked.\nThe point here is that `infer_datetime_format=False, exact=True` do some auto-magic behaviour which I find unexpected.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197673942",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197673942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197673942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3Mzk0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:19:38Z",
    "updated_at": "2016-03-17T03:19:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ssche its not unexpected, you gave it a `format` string which is ISO8601. I don't see any problem here. If you give it a non-ISO8601 string then it would indeed raise.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197674153",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197674153",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197674153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3NDE1Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:20:42Z",
    "updated_at": "2016-03-17T03:21:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [16]: pd.to_datetime(s, format='%Y-%m-%d%H', infer_datetime_format=False, exact=True, errors='raise')\nValueError: time data '2012-01-01 10:00' does not match format '%Y-%m-%d%H' (match)\n\n# you don't need any arguments actually, the default will be to raise if it is not a matched format.\nIn [17]: pd.to_datetime(s, format='%Y-%m-%d%H')\nValueError: time data '2012-01-01 10:00' does not match format '%Y-%m-%d%H' (match)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197674374",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197674374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197674374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3NDM3NA==",
    "user": {
      "login": "ssche",
      "id": 7367411,
      "node_id": "MDQ6VXNlcjczNjc0MTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7367411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssche",
      "html_url": "https://github.com/ssche",
      "followers_url": "https://api.github.com/users/ssche/followers",
      "following_url": "https://api.github.com/users/ssche/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssche/subscriptions",
      "organizations_url": "https://api.github.com/users/ssche/orgs",
      "repos_url": "https://api.github.com/users/ssche/repos",
      "events_url": "https://api.github.com/users/ssche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:21:48Z",
    "updated_at": "2016-03-17T03:21:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "So you don't find it confusing that the behaviour of this function is date format-specific, i.e. given another date format an exception is raised?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197674579",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197674579",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197674579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3NDU3OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:22:57Z",
    "updated_at": "2016-03-17T03:22:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ssche I am not sure what you mean. Of course its date-format specific. Its just special cased to ISO8601 to match the general format.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197674805",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197674805",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197674805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3NDgwNQ==",
    "user": {
      "login": "ssche",
      "id": 7367411,
      "node_id": "MDQ6VXNlcjczNjc0MTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7367411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssche",
      "html_url": "https://github.com/ssche",
      "followers_url": "https://api.github.com/users/ssche/followers",
      "following_url": "https://api.github.com/users/ssche/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssche/subscriptions",
      "organizations_url": "https://api.github.com/users/ssche/orgs",
      "repos_url": "https://api.github.com/users/ssche/repos",
      "events_url": "https://api.github.com/users/ssche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:24:23Z",
    "updated_at": "2016-03-17T03:25:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "In the iso-format case, the date format doesn't need to be exact, but for all other formats an exception will be raised when the format doesn't match. That's what I find confusing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197675507",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197675507",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197675507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3NTUwNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:28:00Z",
    "updated_at": "2016-03-17T03:28:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "and so? again why is this a problem. by definition they are ISO8601 which matches a variety of non-ambiguous formats (where the time is optional), and separators can be optional (pandas actually allows a lot more separators than the standard).\n\nSo we tend to parse more easily lots of formats. I still don't understand why this is a problem. It parses correctly as it should, even though you gave an underspecified format. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197677393",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197677393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197677393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3NzM5Mw==",
    "user": {
      "login": "ssche",
      "id": 7367411,
      "node_id": "MDQ6VXNlcjczNjc0MTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7367411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssche",
      "html_url": "https://github.com/ssche",
      "followers_url": "https://api.github.com/users/ssche/followers",
      "following_url": "https://api.github.com/users/ssche/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssche/subscriptions",
      "organizations_url": "https://api.github.com/users/ssche/orgs",
      "repos_url": "https://api.github.com/users/ssche/repos",
      "events_url": "https://api.github.com/users/ssche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:35:36Z",
    "updated_at": "2016-03-17T03:36:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "> So we tend to parse more easily lots of formats. I still don't understand why this is a problem. It parses correctly as it should, even though you gave an underspecified format.\n\nThat's exactly my problem. I have a very specific use case which requires to raise an exception when the date format doesn't match. Trying `'%Y-%m-%d'` and `'%Y-%m-%d %H:%M:%S'` both won't raise an exception for parsing `'2012-01-01 10:00'`, so the application is unable to detect the proper (=exact, =non underspecified, =non overspecified) date format (that's all I care about).\n\nI tried to make this more strict through the parameters I quoted a number of times already, but this didn't make the date conversion more strict. I don't know how else I can make this function more strict to only accept date formats that I specify and raise an exception if they don't.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197677971",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197677971",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197677971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY3Nzk3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:39:20Z",
    "updated_at": "2016-03-17T03:39:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "well you can try to make a change to the code to see if u can make it very strict but I suspect this will be quite tricky (maybe add exact='strict') or something\n\nalternately in your code it's easy enough to check for lengths of the input strings\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197680673",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197680673",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197680673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY4MDY3Mw==",
    "user": {
      "login": "ssche",
      "id": 7367411,
      "node_id": "MDQ6VXNlcjczNjc0MTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7367411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssche",
      "html_url": "https://github.com/ssche",
      "followers_url": "https://api.github.com/users/ssche/followers",
      "following_url": "https://api.github.com/users/ssche/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssche/subscriptions",
      "organizations_url": "https://api.github.com/users/ssche/orgs",
      "repos_url": "https://api.github.com/users/ssche/repos",
      "events_url": "https://api.github.com/users/ssche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:50:20Z",
    "updated_at": "2016-03-17T03:50:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "So the `if format is not None and infer_datetime_format` \"fix\" I proposed wouldn't be acceptable?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197681294",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-197681294",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 197681294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY4MTI5NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T03:53:29Z",
    "updated_at": "2016-03-17T03:53:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "no that defeats the purpose of iso format detection\n\nyou could allow infer_datetime_format='strict' for maybe exact='striict') which when s format is specified could bypass the inference check (and then would fail because it's not an exact match)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253652615",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-253652615",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 253652615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzY1MjYxNQ==",
    "user": {
      "login": "rsheftel",
      "id": 11539619,
      "node_id": "MDQ6VXNlcjExNTM5NjE5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/11539619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsheftel",
      "html_url": "https://github.com/rsheftel",
      "followers_url": "https://api.github.com/users/rsheftel/followers",
      "following_url": "https://api.github.com/users/rsheftel/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsheftel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsheftel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsheftel/subscriptions",
      "organizations_url": "https://api.github.com/users/rsheftel/orgs",
      "repos_url": "https://api.github.com/users/rsheftel/repos",
      "events_url": "https://api.github.com/users/rsheftel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsheftel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T22:05:24Z",
    "updated_at": "2016-10-13T22:05:24Z",
    "author_association": "NONE",
    "body": "Just adding my two cents because I was running into the same exact problem. My use case is that I have a program that uses read_csv to load a csv file where the index is either just a date, or date and time. If it has a time I want to make it UTC time zone, if not then no time zone. The pythonic way to do it I thought would be try to read_csv with a parser using to_datetime that would try to match one format, and if that raised an exception try the other format. But by not raising the exception if there is not an exact match that approach does not work.\n\nI would be in favor of an exact='strict' or similar to truly enforce the exact match.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383978296",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-383978296",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 383978296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk3ODI5Ng==",
    "user": {
      "login": "fersarr",
      "id": 3913371,
      "node_id": "MDQ6VXNlcjM5MTMzNzE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3913371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fersarr",
      "html_url": "https://github.com/fersarr",
      "followers_url": "https://api.github.com/users/fersarr/followers",
      "following_url": "https://api.github.com/users/fersarr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fersarr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fersarr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fersarr/subscriptions",
      "organizations_url": "https://api.github.com/users/fersarr/orgs",
      "repos_url": "https://api.github.com/users/fersarr/repos",
      "events_url": "https://api.github.com/users/fersarr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fersarr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T15:36:56Z",
    "updated_at": "2018-04-25T09:27:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "this breaks a lot of tests for us as well. Very similar use case as @rsheftel. The strict mode that raises exceptions would work for us too."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/472502613",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12649#issuecomment-472502613",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12649",
    "id": 472502613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjUwMjYxMw==",
    "user": {
      "login": "philipCrunchboards",
      "id": 21367539,
      "node_id": "MDQ6VXNlcjIxMzY3NTM5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21367539?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philipCrunchboards",
      "html_url": "https://github.com/philipCrunchboards",
      "followers_url": "https://api.github.com/users/philipCrunchboards/followers",
      "following_url": "https://api.github.com/users/philipCrunchboards/following{/other_user}",
      "gists_url": "https://api.github.com/users/philipCrunchboards/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philipCrunchboards/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philipCrunchboards/subscriptions",
      "organizations_url": "https://api.github.com/users/philipCrunchboards/orgs",
      "repos_url": "https://api.github.com/users/philipCrunchboards/repos",
      "events_url": "https://api.github.com/users/philipCrunchboards/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philipCrunchboards/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-13T16:35:48Z",
    "updated_at": "2019-03-13T16:35:48Z",
    "author_association": "NONE",
    "body": "We're having the same problem.\r\nI'd like to be able to add some argument(s) to the following code to make it either `raise` or return `NaT`:\r\n```\r\n> to_datetime(0.0, format=\"%Y-%m-%d\", exact=True)\r\nTimestamp('1970-01-01 00:00:00')\r\n```\r\nI like the sound of `exact=\"strict\"`."
  }
]
