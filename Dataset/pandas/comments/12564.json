[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194022792",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12564#issuecomment-194022792",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12564",
    "id": 194022792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDAyMjc5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-08T23:31:42Z",
    "updated_at": "2016-03-08T23:31:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "here's a simpler example. Yeah I suppose this should work. Note that comparing a vs a DataFrame is not typically useful. You almost always compare against a Series (and then inddex).\n\npull-requests are welcome.\n\n```\nIn [23]: df = DataFrame({'A' : ['foo','bar','baz']})\n\nIn [24]: df['B'] = df['A'].astype('category')\n\nIn [25]: df['A'] == 'foo'\nOut[25]: \n0     True\n1    False\n2    False\nName: A, dtype: bool\n\nIn [26]: df['B'] == 'foo'\nOut[26]: \n0     True\n1    False\n2    False\nName: B, dtype: bool\n\nIn [27]: df[['A']] == 'foo'\nOut[27]: \n       A\n0   True\n1  False\n2  False\n\nIn [28]: df[['B']] == 'foo'\nValueError: Wrong number of dimensions\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194037238",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12564#issuecomment-194037238",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12564",
    "id": 194037238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDAzNzIzOA==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T00:32:51Z",
    "updated_at": "2016-03-09T00:32:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "My use case, if you want to know, was that I just wanted to discard rows with `np.inf` in any column (though you could imagine the same thing with 0 or something). I find it easier and more readable to just broadcast the comparison across the entire DataFrame, even though logically speaking I know that the comparison really only needs to be applied to the float columns.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/199782745",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12564#issuecomment-199782745",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12564",
    "id": 199782745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTc4Mjc0NQ==",
    "user": {
      "login": "facaiy",
      "id": 1112263,
      "node_id": "MDQ6VXNlcjExMTIyNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/facaiy",
      "html_url": "https://github.com/facaiy",
      "followers_url": "https://api.github.com/users/facaiy/followers",
      "following_url": "https://api.github.com/users/facaiy/following{/other_user}",
      "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions",
      "organizations_url": "https://api.github.com/users/facaiy/orgs",
      "repos_url": "https://api.github.com/users/facaiy/repos",
      "events_url": "https://api.github.com/users/facaiy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/facaiy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-22T12:08:32Z",
    "updated_at": "2016-03-22T12:09:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "``` python\n>>> df[['A']].ndim\n2\n>>> df[['A']]._data.blocks[0].values\narray([['foo', 'bar', 'baz']], dtype=object)\n>>> df[['A']]._data.blocks[0].values.ndim\n2\n>>> df[['B']].ndim\n2\n>>> df[['B']]._data.blocks[0].values\n[foo, bar, baz]\nCategories (3, object): [bar, baz, foo]\n>>> df[['B']]._data.blocks[0].values.ndim\n1\n```\n\ninteresting, \nI think that's why pandas raises `ValueError: Wrong number of dimensions.`\nright?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/199803571",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12564#issuecomment-199803571",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12564",
    "id": 199803571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTgwMzU3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-22T13:04:12Z",
    "updated_at": "2016-03-22T13:04:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ningchi that is only a manifestation of the issue, not the cause. `CategoricalBlocks` only hold a 1-d structure. The comparison path goes thru `core/internals/Block/eval`.\n\nyou can prob get away with changing this:\n\n`transf = (lambda x: x.T) if is_transposed else (lambda x: x)`\n\nto something like\n\n```\ndef transf(x):\n     transposer = lambda x: x.T if is_transposed: lambda x: x\n     return lambda x: _block_shape(transposer(x), ndim=self.ndim)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/199851237",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12564#issuecomment-199851237",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12564",
    "id": 199851237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTg1MTIzNw==",
    "user": {
      "login": "facaiy",
      "id": 1112263,
      "node_id": "MDQ6VXNlcjExMTIyNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/facaiy",
      "html_url": "https://github.com/facaiy",
      "followers_url": "https://api.github.com/users/facaiy/followers",
      "following_url": "https://api.github.com/users/facaiy/following{/other_user}",
      "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions",
      "organizations_url": "https://api.github.com/users/facaiy/orgs",
      "repos_url": "https://api.github.com/users/facaiy/repos",
      "events_url": "https://api.github.com/users/facaiy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/facaiy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-22T14:52:56Z",
    "updated_at": "2016-03-22T14:52:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @jreback\n\nbecause `CategoricalBlocks` only hold a 1-d structure, I have no idea how to extend its `ndim`, except using `to_dense()` like `NonConsolidatableMixIn.get_values`.\n\nOn the another hand, is it strange to convert `self.dim` to `self.value.dim`?  as we expect a Dataframe, rather than a Series.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/199856458",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12564#issuecomment-199856458",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12564",
    "id": 199856458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTg1NjQ1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-22T15:05:15Z",
    "updated_at": "2016-03-22T15:05:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "did you try the code above?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/200122193",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12564#issuecomment-200122193",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12564",
    "id": 200122193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDEyMjE5Mw==",
    "user": {
      "login": "facaiy",
      "id": 1112263,
      "node_id": "MDQ6VXNlcjExMTIyNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/facaiy",
      "html_url": "https://github.com/facaiy",
      "followers_url": "https://api.github.com/users/facaiy/followers",
      "following_url": "https://api.github.com/users/facaiy/following{/other_user}",
      "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions",
      "organizations_url": "https://api.github.com/users/facaiy/orgs",
      "repos_url": "https://api.github.com/users/facaiy/repos",
      "events_url": "https://api.github.com/users/facaiy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/facaiy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T01:51:40Z",
    "updated_at": "2016-03-23T01:51:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Sorry, I didn't test your suggestion completely. Many thanks.\n"
  }
]
