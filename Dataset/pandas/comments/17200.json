[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321035480",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17200#issuecomment-321035480",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17200",
    "id": 321035480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTAzNTQ4MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T18:04:31Z",
    "updated_at": "2017-08-08T18:04:31Z",
    "author_association": "MEMBER",
    "body": "Well we do have a `BytesIO` class in `pandas.compat`.  If we can condition on the data returned to us, that would be reasonable I think."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321036225",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17200#issuecomment-321036225",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17200",
    "id": 321036225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTAzNjIyNQ==",
    "user": {
      "login": "alph486",
      "id": 1747773,
      "node_id": "MDQ6VXNlcjE3NDc3NzM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1747773?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alph486",
      "html_url": "https://github.com/alph486",
      "followers_url": "https://api.github.com/users/alph486/followers",
      "following_url": "https://api.github.com/users/alph486/following{/other_user}",
      "gists_url": "https://api.github.com/users/alph486/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alph486/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alph486/subscriptions",
      "organizations_url": "https://api.github.com/users/alph486/orgs",
      "repos_url": "https://api.github.com/users/alph486/repos",
      "events_url": "https://api.github.com/users/alph486/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alph486/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T18:07:20Z",
    "updated_at": "2017-08-08T18:07:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung I'm not intimately familiar with the codebase, but I have a (possibly naive) fix that just attempts to decode the json based on whatever `encoding` is. It seems to fix. Would you like to review if do a PR?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321036885",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17200#issuecomment-321036885",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17200",
    "id": 321036885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTAzNjg4NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T18:09:58Z",
    "updated_at": "2017-08-08T18:10:06Z",
    "author_association": "MEMBER",
    "body": "> I'm not intimately familiar with the codebase\r\n\r\nDon't worry, that's a pretty tall order :smile: \r\n\r\nAbsolutely!  Submit a PR, and we'll certainly review it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321043104",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17200#issuecomment-321043104",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17200",
    "id": 321043104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTA0MzEwNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T18:32:33Z",
    "updated_at": "2017-08-08T18:32:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI, here's how we handle it on the CSV side: https://github.com/pandas-dev/pandas/blob/3c833db29b6f5977c78d1ade791a09a5b29cedb8/pandas/io/common.py#L401\r\n\r\nthat `f` would be an instance of `S3File`, which is one of the classes in `need_text_wrapping`. By the `TextIOWrapper` can go around buffer of bytes and it'll do the encoding. You might be able to reuse parts of that for `read_json`, or just do something similar."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321045348",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17200#issuecomment-321045348",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17200",
    "id": 321045348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTA0NTM0OA==",
    "user": {
      "login": "alph486",
      "id": 1747773,
      "node_id": "MDQ6VXNlcjE3NDc3NzM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1747773?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alph486",
      "html_url": "https://github.com/alph486",
      "followers_url": "https://api.github.com/users/alph486/followers",
      "following_url": "https://api.github.com/users/alph486/following{/other_user}",
      "gists_url": "https://api.github.com/users/alph486/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alph486/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alph486/subscriptions",
      "organizations_url": "https://api.github.com/users/alph486/orgs",
      "repos_url": "https://api.github.com/users/alph486/repos",
      "events_url": "https://api.github.com/users/alph486/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alph486/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T18:40:55Z",
    "updated_at": "2017-08-08T18:40:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Naive PR submitted  ;) @gfyoung \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354878078",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17200#issuecomment-354878078",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17200",
    "id": 354878078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDg3ODA3OA==",
    "user": {
      "login": "sylviawhoa",
      "id": 10911155,
      "node_id": "MDQ6VXNlcjEwOTExMTU1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10911155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sylviawhoa",
      "html_url": "https://github.com/sylviawhoa",
      "followers_url": "https://api.github.com/users/sylviawhoa/followers",
      "following_url": "https://api.github.com/users/sylviawhoa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sylviawhoa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sylviawhoa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sylviawhoa/subscriptions",
      "organizations_url": "https://api.github.com/users/sylviawhoa/orgs",
      "repos_url": "https://api.github.com/users/sylviawhoa/repos",
      "events_url": "https://api.github.com/users/sylviawhoa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sylviawhoa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-02T21:20:22Z",
    "updated_at": "2018-01-02T21:21:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "workaround:\r\n\r\n```\r\nwith s3_filename.open(\"r\") as s3_file:\r\n            data=s3_file.read()\r\ndf = pd.read_json(data.decode('utf8'), lines=True)\r\n```\r\nmy data was gzipped - you prob don't need the decode... "
  }
]
