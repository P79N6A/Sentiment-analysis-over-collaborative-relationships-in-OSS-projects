[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/129832062",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10772#issuecomment-129832062",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10772",
    "id": 129832062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTgzMjA2Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-11T10:43:21Z",
    "updated_at": "2015-08-11T10:43:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you show what you would expect as ouptput?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131436083",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10772#issuecomment-131436083",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10772",
    "id": 131436083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTQzNjA4Mw==",
    "user": {
      "login": "rosnfeld",
      "id": 5356340,
      "node_id": "MDQ6VXNlcjUzNTYzNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5356340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rosnfeld",
      "html_url": "https://github.com/rosnfeld",
      "followers_url": "https://api.github.com/users/rosnfeld/followers",
      "following_url": "https://api.github.com/users/rosnfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/rosnfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rosnfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rosnfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/rosnfeld/orgs",
      "repos_url": "https://api.github.com/users/rosnfeld/repos",
      "events_url": "https://api.github.com/users/rosnfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rosnfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-15T19:41:16Z",
    "updated_at": "2015-08-15T19:41:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I updated the original description to include the expected output.\n\nThis further example (a slightly modified version of one from the crosstab docs) shows what `dropna` currently does:\n\n``` python\nIn [69]: a = np.array(['foo', 'foo', 'foo', 'foo', 'bar', 'bar', 'bar', 'bar', 'foo', 'foo', 'foo'])\n\nIn [70]: b = np.array(['one', 'one', 'one', 'two', 'one', 'one', 'one', 'two', 'one', 'one', 'one'])\n\nIn [71]: c = np.array(['dull', 'dull', 'shiny', 'dull', 'dull', 'shiny', 'shiny', 'dull', 'shiny', 'shiny', 'shiny'])\n\nIn [72]: pd.crosstab(a, [b, c], dropna=True)\nOut[72]: \ncol_0  one        two\ncol_1 dull shiny dull\nrow_0                \nbar      1     2    1\nfoo      2     4    1\n\nIn [73]: pd.crosstab(a, [b, c], dropna=False)\nOut[73]: \n       one        two      \n      dull shiny dull shiny\nrow_0                      \nbar      1     2    1     0\nfoo      2     4    1     0\n```\n\nI think we need a different name for this behavior. `drop_empty`? `drop_all_zero`? (or perhaps `include_all_zero=False`) Is there any naming precedent set elsewhere in the codebase?\n\nOr perhaps the behavior I am looking for should have the new name, like `drop_na_values`... though really I think the connection with the existing `value_counts(dropna=...)` behavior is fairly strong.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131504178",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10772#issuecomment-131504178",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10772",
    "id": 131504178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTUwNDE3OA==",
    "user": {
      "login": "rosnfeld",
      "id": 5356340,
      "node_id": "MDQ6VXNlcjUzNTYzNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5356340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rosnfeld",
      "html_url": "https://github.com/rosnfeld",
      "followers_url": "https://api.github.com/users/rosnfeld/followers",
      "following_url": "https://api.github.com/users/rosnfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/rosnfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rosnfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rosnfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/rosnfeld/orgs",
      "repos_url": "https://api.github.com/users/rosnfeld/repos",
      "events_url": "https://api.github.com/users/rosnfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rosnfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-16T08:40:37Z",
    "updated_at": "2015-08-16T08:40:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "My R is very rusty, but it does support this feature, just for reference of how another system does it. (I actually don't know how to do in R what pandas is currently doing with `dropna`, where it includes all Cartesian product variants of a multi-level index.) And R even more explicitly matches the behavior between `value_counts()` and `cross_tab()` since you can use the same R function, `table`, for both.\n\n```\n> x <- c('a', 'b', 'a', NA, 'a')\n> y <- c('c', 'd', 'd', 'c', NA)\n> table(x)\nx\na b \n3 1 \n> # one way for including NA's\n> table(x, exclude=NULL)\nx\n   a    b <NA> \n   3    1    1 \n> # another way for including NA's\n> table(x, useNA='ifany')\nx\n   a    b <NA> \n   3    1    1 \n> table(x, y)\n   y\nx   c d\n  a 1 1\n  b 0 1\n> table(x, y, useNA='ifany')\n      y\nx      c d <NA>\n  a    1 1    1\n  b    0 1    0\n  <NA> 1 0    0\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/175607485",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10772#issuecomment-175607485",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10772",
    "id": 175607485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTYwNzQ4NQ==",
    "user": {
      "login": "rosnfeld",
      "id": 5356340,
      "node_id": "MDQ6VXNlcjUzNTYzNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5356340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rosnfeld",
      "html_url": "https://github.com/rosnfeld",
      "followers_url": "https://api.github.com/users/rosnfeld/followers",
      "following_url": "https://api.github.com/users/rosnfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/rosnfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rosnfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rosnfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/rosnfeld/orgs",
      "repos_url": "https://api.github.com/users/rosnfeld/repos",
      "events_url": "https://api.github.com/users/rosnfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rosnfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-27T13:01:32Z",
    "updated_at": "2016-01-27T13:01:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I keep running into this. Hopefully I will have time to look at it soon, or it will get fixed as a result of some of the missing-value-handling issues that people are hoping to resolve with a change to pandas underlying data representations.\n\nHere's a related issue (could perhaps be its own issue). Set up x and y as above, and then try and use crosstab with margins:\n\n``` python\nIn [8]: pd.crosstab(x, y, margins=True)\nOut[8]: \ncol_0  c  d  All\nrow_0           \na      1  1    3\nb      0  1    1\nAll    2  2    5\n\nIn [9]: # huh that's weird, the columns don't sum\n\nIn [10]: pd.crosstab(x, y, dropna=False, margins=True)\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/home/andrew/miniconda3/envs/bayesian/lib/python3.5/site-packages/pandas/core/index.py in _get_level_number(self, level)\n   4417                 raise ValueError('The name %s occurs multiple times, use a '\n-> 4418                                  'level number' % level)\n   4419             level = self.names.index(level)\n\nValueError: The name None occurs multiple times, use a level number\n\nDuring handling of the above exception, another exception occurred:\n\nKeyError                                  Traceback (most recent call last)\n<ipython-input-10-b11080c1dcf8> in <module>()\n----> 1 pd.crosstab(x, y, dropna=False, margins=True)\n\n/home/andrew/miniconda3/envs/bayesian/lib/python3.5/site-packages/pandas/tools/pivot.py in crosstab(index, columns, values, rownames, colnames, aggfunc, margins, dropna)\n    426         df['__dummy__'] = 0\n    427         table = df.pivot_table('__dummy__', index=rownames, columns=colnames,\n--> 428                                aggfunc=len, margins=margins, dropna=dropna)\n    429         return table.fillna(0).astype(np.int64)\n    430     else:\n\n/home/andrew/miniconda3/envs/bayesian/lib/python3.5/site-packages/pandas/tools/pivot.py in pivot_table(data, values, index, columns, aggfunc, fill_value, margins, dropna, margins_name)\n    145         table = _add_margins(table, data, values, rows=index,\n    146                              cols=columns, aggfunc=aggfunc,\n--> 147                              margins_name=margins_name)\n    148 \n    149     # discard the top level\n\n/home/andrew/miniconda3/envs/bayesian/lib/python3.5/site-packages/pandas/tools/pivot.py in _add_margins(table, data, values, rows, cols, aggfunc, margins_name)\n    175     if hasattr(table, 'columns'):\n    176         for level in table.columns.names[1:]:\n--> 177             if margins_name in table.columns.get_level_values(level):\n    178                 raise ValueError(exception_msg)\n    179 \n\n/home/andrew/miniconda3/envs/bayesian/lib/python3.5/site-packages/pandas/core/index.py in get_level_values(self, level)\n   4565         values : ndarray\n   4566         \"\"\"\n-> 4567         num = self._get_level_number(level)\n   4568         unique = self.levels[num]  # .values\n   4569         labels = self.labels[num]\n\n/home/andrew/miniconda3/envs/bayesian/lib/python3.5/site-packages/pandas/core/index.py in _get_level_number(self, level)\n   4420         except ValueError:\n   4421             if not isinstance(level, int):\n-> 4422                 raise KeyError('Level %s not found' % str(level))\n   4423             elif level < 0:\n   4424                 level += self.nlevels\n\nKeyError: 'Level None not found'\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/205077920",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10772#issuecomment-205077920",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10772",
    "id": 205077920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTA3NzkyMA==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-03T23:46:07Z",
    "updated_at": "2016-04-04T02:11:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed. @rosnfeld, if I follow right, you think the behavior should be that:\n\n```\ndf = pd.DataFrame({'a': [np.nan, np.nan, np.nan], 'b': [3, 3, 4]})\npd.crosstab(df.a, df.b, dropna=False)\n```\n\nreturns:\n\n```\n      3  4 \na        \nNaN   2  1  \n```\n\nNot an empty dataframe?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/205185501",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10772#issuecomment-205185501",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10772",
    "id": 205185501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTE4NTUwMQ==",
    "user": {
      "login": "rosnfeld",
      "id": 5356340,
      "node_id": "MDQ6VXNlcjUzNTYzNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5356340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rosnfeld",
      "html_url": "https://github.com/rosnfeld",
      "followers_url": "https://api.github.com/users/rosnfeld/followers",
      "following_url": "https://api.github.com/users/rosnfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/rosnfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rosnfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rosnfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/rosnfeld/orgs",
      "repos_url": "https://api.github.com/users/rosnfeld/repos",
      "events_url": "https://api.github.com/users/rosnfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rosnfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-04T08:15:17Z",
    "updated_at": "2016-04-04T08:15:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Correct. That's similar to what R would do with `useNA='ifany'`:\n\n```\n> a <- c(NA, NA, NA)\n> b <- c(3, 3, 4)\n> table(a, b)\n< table of extent 0 x 2 >\n> table(a, b, useNA='ifany')\n      b\na      3 4\n  <NA> 2 1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/205332880",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10772#issuecomment-205332880",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10772",
    "id": 205332880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTMzMjg4MA==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-04T14:51:53Z",
    "updated_at": "2016-04-04T14:51:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's also what Stata does if one uses the option \", missing\"\nOn Mon, Apr 4, 2016 at 1:15 AM rosnfeld notifications@github.com wrote:\n\n> Correct. That's similar to what R would do with useNA='ifany':\n> \n> > a <- c(NA, NA, NA)\n> > b <- c(3, 3, 4)\n> > table(a, b)\n> > < table of extent 0 x 2 >\n> > table(a, b, useNA='ifany')\n> >       b\n> > a      3 4\n> >   <NA> 2 1\n> \n> —\n> You are receiving this because you commented.\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/issues/10772#issuecomment-205185501\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/356830052",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10772#issuecomment-356830052",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10772",
    "id": 356830052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjgzMDA1Mg==",
    "user": {
      "login": "XikunHan",
      "id": 33405814,
      "node_id": "MDQ6VXNlcjMzNDA1ODE0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33405814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/XikunHan",
      "html_url": "https://github.com/XikunHan",
      "followers_url": "https://api.github.com/users/XikunHan/followers",
      "following_url": "https://api.github.com/users/XikunHan/following{/other_user}",
      "gists_url": "https://api.github.com/users/XikunHan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/XikunHan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/XikunHan/subscriptions",
      "organizations_url": "https://api.github.com/users/XikunHan/orgs",
      "repos_url": "https://api.github.com/users/XikunHan/repos",
      "events_url": "https://api.github.com/users/XikunHan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/XikunHan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T05:27:29Z",
    "updated_at": "2018-01-11T05:27:29Z",
    "author_association": "NONE",
    "body": "dropna : boolean, default True\r\n    Do not include columns whose entries are all NaN\r\n\r\nOnly works when the whole column is NaN, but if some values are NaN, cannot count them\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364611909",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10772#issuecomment-364611909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10772",
    "id": 364611909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDYxMTkwOQ==",
    "user": {
      "login": "oriolmirosa",
      "id": 6955013,
      "node_id": "MDQ6VXNlcjY5NTUwMTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6955013?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oriolmirosa",
      "html_url": "https://github.com/oriolmirosa",
      "followers_url": "https://api.github.com/users/oriolmirosa/followers",
      "following_url": "https://api.github.com/users/oriolmirosa/following{/other_user}",
      "gists_url": "https://api.github.com/users/oriolmirosa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oriolmirosa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oriolmirosa/subscriptions",
      "organizations_url": "https://api.github.com/users/oriolmirosa/orgs",
      "repos_url": "https://api.github.com/users/oriolmirosa/repos",
      "events_url": "https://api.github.com/users/oriolmirosa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oriolmirosa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-10T01:03:55Z",
    "updated_at": "2018-02-10T01:03:55Z",
    "author_association": "NONE",
    "body": "This also strikes me as odd and inconsistent, and I'd love to see a fix. Meanwhile, the way I deal with it is by adding `.fillna(' NaN)` to the variables called in `pd.crosstab()`. For instance, in the example above:\r\n\r\n`pd.crosstab(df.a.fillna(' NaN), df.b.fillna(' NaN), dropna=False)`\r\n\r\nOf course, you could omit the `.fillna(' NaN')` from the column with no null values. I add a space before `NaN` so that the ` NaN` row and/or column appear first. Otherwise, they would be ordered alphabetically and probably be in the middle of the rows/columns in the output (I guess you could prepend it by a `z` to put it as the last row/column, but that looks a little silly)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376297832",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10772#issuecomment-376297832",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10772",
    "id": 376297832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjI5NzgzMg==",
    "user": {
      "login": "ceilingcat",
      "id": 485053,
      "node_id": "MDQ6VXNlcjQ4NTA1Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/485053?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ceilingcat",
      "html_url": "https://github.com/ceilingcat",
      "followers_url": "https://api.github.com/users/ceilingcat/followers",
      "following_url": "https://api.github.com/users/ceilingcat/following{/other_user}",
      "gists_url": "https://api.github.com/users/ceilingcat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ceilingcat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ceilingcat/subscriptions",
      "organizations_url": "https://api.github.com/users/ceilingcat/orgs",
      "repos_url": "https://api.github.com/users/ceilingcat/repos",
      "events_url": "https://api.github.com/users/ceilingcat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ceilingcat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-26T20:18:14Z",
    "updated_at": "2018-03-26T20:18:14Z",
    "author_association": "NONE",
    "body": "I also would like to see this fixed."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376368786",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10772#issuecomment-376368786",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10772",
    "id": 376368786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjM2ODc4Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-27T01:49:49Z",
    "updated_at": "2018-03-27T01:49:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ceilingcat let us know if you need help starting a PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/432787128",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10772#issuecomment-432787128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10772",
    "id": 432787128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjc4NzEyOA==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-24T19:00:49Z",
    "updated_at": "2018-10-24T19:00:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree this would make a nice improvement, especially since the `fillna` fix doesn't really work for categorical columns since the fill value needs to be an available level."
  }
]
