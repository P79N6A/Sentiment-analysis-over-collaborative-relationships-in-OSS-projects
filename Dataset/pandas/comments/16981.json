[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315621510",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16981#issuecomment-315621510",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16981",
    "id": 315621510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTYyMTUxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-16T16:49:10Z",
    "updated_at": "2017-07-16T16:49:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "well you would have to show a case where this actually matters. These ABC instance checks are to avoid complicated and interlocking circular imports, which they do very nicely; the code is MUCH simpler generally with these.\r\n\r\nI am not sure what you are advocating here.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315627864",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16981#issuecomment-315627864",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16981",
    "id": 315627864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTYyNzg2NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-16T18:33:11Z",
    "updated_at": "2017-07-16T18:33:11Z",
    "author_association": "MEMBER",
    "body": "> These ABC instance checks are to avoid complicated and interlocking circular imports\r\n\r\nTotally on board with this.\r\n\r\n> I am not sure what you are advocating here.\r\n\r\nMostly intended to park these numbers somewhere for the next time micro-optimizations come up."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316898398",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16981#issuecomment-316898398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16981",
    "id": 316898398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjg5ODM5OA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-21T04:18:10Z",
    "updated_at": "2017-07-21T04:18:10Z",
    "author_association": "MEMBER",
    "body": "Parking some more observations.\r\n\r\nProfiling the test suite (more specifically, running `pd.test()` with a `cProfile.Profile` enabled), `isinstance` calls took about 10% of the total runtime.\r\n\r\nRecall `__isinstancecheck__` is here defined as:\r\n```\r\n    @classmethod\r\n    def _check(cls, inst):\r\n        return getattr(inst, attr, '_typ') in comp\r\n```\r\n\r\nSome attempts to speed this up that _didn't_ work:\r\n\r\n- Make `comp` a  set instead of a list.\r\n- In many cases `comp` is a singleton.  In those cases, have it check for equality with that singleton instead of inclusion.\r\n- In all the pertinent cases `attr` is \"typ\", which is short enough to be automatically interned.  Check that this is the case, and if so, check for identity rather than equality.\r\n\r\nThe fact that none of these made a perceptible difference is surprising.  I wouldn't mind someone double-checking on this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317137058",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16981#issuecomment-317137058",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16981",
    "id": 317137058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzEzNzA1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-21T23:52:54Z",
    "updated_at": "2017-07-21T23:52:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing but its searchable"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318768794",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16981#issuecomment-318768794",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16981",
    "id": 318768794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODc2ODc5NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-28T21:43:35Z",
    "updated_at": "2017-07-28T21:43:35Z",
    "author_association": "MEMBER",
    "body": "One easy change that *did* make a significant difference is pinning `_is_multi=False` to `pd.Index` and `_is_multi=True` to `pd.MultiIndex`.  Then a ton of `isinstance(ax, MultiIndex)` calls can be replaced with `ax._is_multi` (in cases where we know we're looking at some form of `Index`).  This includes at least 13 calls in `core.frame` (including at the top of `DataFrame.__getitem__`) , 16 calls in `core.indexing`, 6 in `core.series`, at which point I stopped counting.\r\n\r\nProfiled on a 2011-era Macbook and 2015(6)-era Ubuntu desktop.  `ratio` is `_is_multi/isinstance`.  Results first, code below\r\n```\r\n                               2011MBP                   2015Ubuntu                  \r\n                            isinstance _is_multi   ratio isinstance _is_multi   ratio\r\nInt64Index                      0.6525    0.2955  0.4528     0.2249    0.0847  0.3764\r\nRangeIndex                      0.6975    0.3189  0.4572     0.2251    0.0841  0.3739\r\nDatetimeIndex                   0.7131    0.2981  0.4180     0.2281    0.0842  0.3690\r\nPeriodIndex                     0.6557    0.2894  0.4413     0.2282    0.0843  0.3693\r\nIndex                           0.6638    0.3028  0.4561     0.2208    0.0841  0.3808\r\n(Int64Index, Int64Index)        0.5206    0.3071  0.5899     0.1399    0.0855  0.6111\r\n(Int64Index, Int64Index)        0.4929    0.3150  0.6390     0.1399    0.0849  0.6065\r\n(Int64Index, DatetimeIndex)     0.5282    0.3155  0.5974     0.1400    0.0850  0.6067\r\n(Int64Index, PeriodIndex)       0.5220    0.3054  0.5851     0.1400    0.0841  0.6007\r\n(Int64Index, Index)             0.4987    0.2957  0.5930     0.1408    0.0841  0.5973\r\n```\r\n\r\n```\r\nimport pandas as pd\r\nimport timeit\r\n\r\npd.Index._is_multi = False\r\npd.MultiIndex._is_multi = True\r\n\r\nidxs = [\r\n\tpd.Index(range(30)),\r\n\tpd.RangeIndex(10**4),\r\n\tpd.date_range('2016-01-01', periods=15),\r\n\tpd.date_range('2016-01-01', periods=15, freq='Q').map(lambda x: pd.Period(x, freq='Q')),\r\n\tpd.Index(list('ABCDEFG')),\r\n\t]\r\n\r\nmidxs = []\r\nfor idx1 in idxs:\r\n\tfor idx2 in idxs:\r\n\t\tmi = pd.MultiIndex.from_product([idx1, idx2])\r\n\t\tmidxs.append(mi)\r\n\r\nfor item in idxs+midxs:\r\n\tdef inst():\r\n\t\treturn isinstance(item, pd.MultiIndex)\r\n\tdef attr():\r\n\t\treturn item._is_multi\r\n\tv1 = timeit.timeit(inst)\r\n\tv2 = timeit.timeit(attr)\r\n\tprint(round(v1, 4), round(v2, 4))\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318782416",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16981#issuecomment-318782416",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16981",
    "id": 318782416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODc4MjQxNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-28T23:12:14Z",
    "updated_at": "2017-07-28T23:12:14Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel : If it works and passes all tests, give it a shot!"
  }
]
