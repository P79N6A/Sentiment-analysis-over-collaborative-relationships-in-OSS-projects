[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/174646130",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-174646130",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 174646130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDY0NjEzMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T20:12:19Z",
    "updated_at": "2016-01-25T20:12:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is a bug. The unit argument only matters when you don't have units for a particular entry.\nHowever when parsing as a string IIRC its just ignored, so that should be handled (this is in the cython code)\n\nseparately, I think we might want an error if you have mixed with unit specifiers and unit is specified e.g.\n\n```\nIn [2]: pd.to_timedelta(['1000ms',1000])\nOut[2]: TimedeltaIndex(['00:00:01', '00:00:00.000001'], dtype='timedelta64[ns]', freq=None)\n\nIn [3]: pd.to_timedelta(['1000ms',1000],unit='ms')\nOut[3]: TimedeltaIndex(['00:00:01', '00:00:01'], dtype='timedelta64[ns]', freq=None)\n```\n\nthe first has a default of `unit='ns'`, so maybe want to make the default `None`  (and you can still\ndefault it if its all integer like now).\n\nwant to do a pull-request? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/175181704",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-175181704",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 175181704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTE4MTcwNA==",
    "user": {
      "login": "belteshassar",
      "id": 12408997,
      "node_id": "MDQ6VXNlcjEyNDA4OTk3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12408997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/belteshassar",
      "html_url": "https://github.com/belteshassar",
      "followers_url": "https://api.github.com/users/belteshassar/followers",
      "following_url": "https://api.github.com/users/belteshassar/following{/other_user}",
      "gists_url": "https://api.github.com/users/belteshassar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/belteshassar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/belteshassar/subscriptions",
      "organizations_url": "https://api.github.com/users/belteshassar/orgs",
      "repos_url": "https://api.github.com/users/belteshassar/repos",
      "events_url": "https://api.github.com/users/belteshassar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/belteshassar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-26T19:06:57Z",
    "updated_at": "2016-01-26T19:06:57Z",
    "author_association": "NONE",
    "body": "> want to do a pull-request?\n\nI don't promise anything, but I can take a look at the code base and see if I can get my head around what needs to be done.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/175190446",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-175190446",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 175190446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTE5MDQ0Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-26T19:30:10Z",
    "updated_at": "2016-01-26T19:30:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "gr8. contributing docs are [here](http://pandas.pydata.org/pandas-docs/stable/contributing.html)\n\npost any questions on this issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/195544426",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-195544426",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 195544426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTU0NDQyNg==",
    "user": {
      "login": "belteshassar",
      "id": 12408997,
      "node_id": "MDQ6VXNlcjEyNDA4OTk3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12408997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/belteshassar",
      "html_url": "https://github.com/belteshassar",
      "followers_url": "https://api.github.com/users/belteshassar/followers",
      "following_url": "https://api.github.com/users/belteshassar/following{/other_user}",
      "gists_url": "https://api.github.com/users/belteshassar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/belteshassar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/belteshassar/subscriptions",
      "organizations_url": "https://api.github.com/users/belteshassar/orgs",
      "repos_url": "https://api.github.com/users/belteshassar/repos",
      "events_url": "https://api.github.com/users/belteshassar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/belteshassar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T20:46:15Z",
    "updated_at": "2016-03-11T20:46:15Z",
    "author_association": "NONE",
    "body": "I finally got around to looking at this. I noticed @duncanwp made some commits targeting this issue. Is that enough to solve it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/195560026",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-195560026",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 195560026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTU2MDAyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T21:22:21Z",
    "updated_at": "2016-03-11T21:22:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@belteshassar you can certainly start with that. No pull-request yet.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/195560376",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-195560376",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 195560376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTU2MDM3Ng==",
    "user": {
      "login": "duncanwp",
      "id": 3169620,
      "node_id": "MDQ6VXNlcjMxNjk2MjA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3169620?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duncanwp",
      "html_url": "https://github.com/duncanwp",
      "followers_url": "https://api.github.com/users/duncanwp/followers",
      "following_url": "https://api.github.com/users/duncanwp/following{/other_user}",
      "gists_url": "https://api.github.com/users/duncanwp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duncanwp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duncanwp/subscriptions",
      "organizations_url": "https://api.github.com/users/duncanwp/orgs",
      "repos_url": "https://api.github.com/users/duncanwp/repos",
      "events_url": "https://api.github.com/users/duncanwp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duncanwp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T21:22:59Z",
    "updated_at": "2016-03-11T21:22:59Z",
    "author_association": "NONE",
    "body": "No, sorry. I thought about passing the unit string into parse_timedelta_string deep down on tslib.pyx explicitly and made a bit of progress, but it's not finished. \n\nFeel free to pick it up or disregard as you like, I don't think I'll have time to finish it. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/199499988",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-199499988",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 199499988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTQ5OTk4OA==",
    "user": {
      "login": "belteshassar",
      "id": 12408997,
      "node_id": "MDQ6VXNlcjEyNDA4OTk3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12408997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/belteshassar",
      "html_url": "https://github.com/belteshassar",
      "followers_url": "https://api.github.com/users/belteshassar/followers",
      "following_url": "https://api.github.com/users/belteshassar/following{/other_user}",
      "gists_url": "https://api.github.com/users/belteshassar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/belteshassar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/belteshassar/subscriptions",
      "organizations_url": "https://api.github.com/users/belteshassar/orgs",
      "repos_url": "https://api.github.com/users/belteshassar/repos",
      "events_url": "https://api.github.com/users/belteshassar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/belteshassar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-21T21:43:39Z",
    "updated_at": "2016-03-22T15:29:31Z",
    "author_association": "NONE",
    "body": "While working on this, I've found another issue ~~that I'll try to fix with the same patch~~. \n\nEdit: Was a bit more complicated than I thought. Posted it as #12691 instead.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/199501803",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-199501803",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 199501803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTUwMTgwMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-21T21:50:28Z",
    "updated_at": "2016-03-21T21:50:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you can go ahead and add, I don't think there is a reason. Further, you can reorg the tests a bit: see [here](https://github.com/pydata/pandas/blob/master/pandas/tseries/tests/test_timedeltas.py#L760), and make several more test functions (as the current one is getting long).\n\nThe real diff for month,years is they are fixed-length units (because they are not relative to things like offsets), so while accepted are not that useful.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/200287808",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-200287808",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 200287808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDI4NzgwOA==",
    "user": {
      "login": "belteshassar",
      "id": 12408997,
      "node_id": "MDQ6VXNlcjEyNDA4OTk3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12408997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/belteshassar",
      "html_url": "https://github.com/belteshassar",
      "followers_url": "https://api.github.com/users/belteshassar/followers",
      "following_url": "https://api.github.com/users/belteshassar/following{/other_user}",
      "gists_url": "https://api.github.com/users/belteshassar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/belteshassar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/belteshassar/subscriptions",
      "organizations_url": "https://api.github.com/users/belteshassar/orgs",
      "repos_url": "https://api.github.com/users/belteshassar/repos",
      "events_url": "https://api.github.com/users/belteshassar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/belteshassar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T10:33:30Z",
    "updated_at": "2016-03-23T10:33:30Z",
    "author_association": "NONE",
    "body": "> separately, I think we might want an error if you have mixed with unit specifiers and unit is specified e.g.\n\nI've been thinking a bit about this and would like some more input. As I see it, we have at least five cases that could appear:\n1. `to_timedelta('1234', unit='ms')`: This one is straight forward and what initially started the issue.\n2. `to_timedelta('1234ms', unit='ms')`: Here the unit matches the unit in the string, this should be discouraged, but does it really need to raise an error when there is no ambiguity?\n3. `to_timedelta('1234us', unit='ms')`: Now this is becoming ambiguous. One could argue that this should raise ValueError, but on the other hand, one could decide to use the unit parameter as a suggestion and ignore it for all strings with included unit qualifiers.\n4. `to_timedelta('01:02:03', unit='ms')`: Here we have a recognized format that is incompatible with the unit specifed.\n5. `to_timedelta('01:02', unit='m')`: Here we have a recognized format that is possibly compatible with the unit specifed.\n\nI lean against either raising `ValueError` for all non-numeric strings if unit is specified or simply ignoring `unit` if the string cannot be cast to float.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/200321901",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-200321901",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 200321901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDMyMTkwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T12:01:33Z",
    "updated_at": "2016-03-23T12:01:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would accept 1), raise on the rest.\nif you have a `unit` arg, easiest is to `pd.to_numeric(x)` which will coerce to integer/float (and raise if not). Then you are done.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/200348390",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-200348390",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 200348390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDM0ODM5MA==",
    "user": {
      "login": "belteshassar",
      "id": 12408997,
      "node_id": "MDQ6VXNlcjEyNDA4OTk3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12408997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/belteshassar",
      "html_url": "https://github.com/belteshassar",
      "followers_url": "https://api.github.com/users/belteshassar/followers",
      "following_url": "https://api.github.com/users/belteshassar/following{/other_user}",
      "gists_url": "https://api.github.com/users/belteshassar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/belteshassar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/belteshassar/subscriptions",
      "organizations_url": "https://api.github.com/users/belteshassar/orgs",
      "repos_url": "https://api.github.com/users/belteshassar/repos",
      "events_url": "https://api.github.com/users/belteshassar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/belteshassar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T13:41:39Z",
    "updated_at": "2016-03-23T13:41:39Z",
    "author_association": "NONE",
    "body": "Neat. I was unaware of `pd.to_numeric()`. Certainly makes this much easier. However it only works for list-like arguments. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/200349724",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-200349724",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 200349724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDM0OTcyNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T13:45:30Z",
    "updated_at": "2016-03-23T13:46:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, you could enhance `to_numeric` to accept a scalar as well (just need another in the if, and define a function to make this happen, see `to_timedelta` for a sketch on how to do this). & tests!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/200396192",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-200396192",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 200396192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDM5NjE5Mg==",
    "user": {
      "login": "belteshassar",
      "id": 12408997,
      "node_id": "MDQ6VXNlcjEyNDA4OTk3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12408997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/belteshassar",
      "html_url": "https://github.com/belteshassar",
      "followers_url": "https://api.github.com/users/belteshassar/followers",
      "following_url": "https://api.github.com/users/belteshassar/following{/other_user}",
      "gists_url": "https://api.github.com/users/belteshassar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/belteshassar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/belteshassar/subscriptions",
      "organizations_url": "https://api.github.com/users/belteshassar/orgs",
      "repos_url": "https://api.github.com/users/belteshassar/repos",
      "events_url": "https://api.github.com/users/belteshassar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/belteshassar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T15:32:39Z",
    "updated_at": "2016-03-23T15:32:39Z",
    "author_association": "NONE",
    "body": "Sounds good. That was my thought as well. I suppose the `Timedelta` constructor should mirror the behaviour of `to_timedelta` for scalar args so I guess I should go ahead and fix that as well. The `TimedeltaIndex` constructor already calls `to_timedelta` if `unit` is specified so that needs no special attention.\n\n...and tests, indeed.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/214899678",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-214899678",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 214899678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDg5OTY3OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T21:54:14Z",
    "updated_at": "2016-04-26T21:54:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@belteshassar if you want to come back to this would be great!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/215038817",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-215038817",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 215038817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTAzODgxNw==",
    "user": {
      "login": "belteshassar",
      "id": 12408997,
      "node_id": "MDQ6VXNlcjEyNDA4OTk3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12408997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/belteshassar",
      "html_url": "https://github.com/belteshassar",
      "followers_url": "https://api.github.com/users/belteshassar/followers",
      "following_url": "https://api.github.com/users/belteshassar/following{/other_user}",
      "gists_url": "https://api.github.com/users/belteshassar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/belteshassar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/belteshassar/subscriptions",
      "organizations_url": "https://api.github.com/users/belteshassar/orgs",
      "repos_url": "https://api.github.com/users/belteshassar/repos",
      "events_url": "https://api.github.com/users/belteshassar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/belteshassar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-27T10:07:39Z",
    "updated_at": "2016-04-27T10:07:39Z",
    "author_association": "NONE",
    "body": "I might be able to get back to it during next week. Or I guess I could push what I have so far if someone else wants to take over.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376859589",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-376859589",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 376859589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Njg1OTU4OQ==",
    "user": {
      "login": "Sup3rGeo",
      "id": 20566367,
      "node_id": "MDQ6VXNlcjIwNTY2MzY3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20566367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sup3rGeo",
      "html_url": "https://github.com/Sup3rGeo",
      "followers_url": "https://api.github.com/users/Sup3rGeo/followers",
      "following_url": "https://api.github.com/users/Sup3rGeo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sup3rGeo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sup3rGeo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sup3rGeo/subscriptions",
      "organizations_url": "https://api.github.com/users/Sup3rGeo/orgs",
      "repos_url": "https://api.github.com/users/Sup3rGeo/repos",
      "events_url": "https://api.github.com/users/Sup3rGeo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sup3rGeo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-28T11:53:25Z",
    "updated_at": "2018-03-28T11:54:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "We should not raise if `Timedelta('12s', unit='ms')` because documentation is explicit that the unit parameter:\r\n\r\n> Denote the unit of the input, ***if*** input is an integer. Default ‘ns’.\r\n\r\nSo, only \"if\" is an integer (actually number, more accurately considering the implementation). And in fact the current behavior (we don't want to break backwards compatibility) is for the above timedelta to return 12 seconds, not raise.\r\n\r\nSo for strings with pure numbers I would suggest just trying to convert the `string` parameter to `float` first. If not, then just proceed with the unchanged string.\r\n\r\n    try:\r\n        value = float(value)\r\n    except ValueError:\r\n        pass\r\n    (... function as usual, using value ...)\r\n    \r\nIf anyone else agrees I could make a PR for this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376865945",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-376865945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 376865945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Njg2NTk0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-28T12:18:01Z",
    "updated_at": "2018-03-28T12:18:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Sup3rGeo no this should raise as it is a specification error (IOW raise a ValueError). We don't want to guess here, the user specified that the *integer* is in a certain unit. If its not a number this is a problem."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376874884",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-376874884",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 376874884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Njg3NDg4NA==",
    "user": {
      "login": "Sup3rGeo",
      "id": 20566367,
      "node_id": "MDQ6VXNlcjIwNTY2MzY3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20566367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sup3rGeo",
      "html_url": "https://github.com/Sup3rGeo",
      "followers_url": "https://api.github.com/users/Sup3rGeo/followers",
      "following_url": "https://api.github.com/users/Sup3rGeo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sup3rGeo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sup3rGeo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sup3rGeo/subscriptions",
      "organizations_url": "https://api.github.com/users/Sup3rGeo/orgs",
      "repos_url": "https://api.github.com/users/Sup3rGeo/repos",
      "events_url": "https://api.github.com/users/Sup3rGeo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sup3rGeo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-28T12:50:55Z",
    "updated_at": "2018-03-29T08:11:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback to make things clearer, I think we might be talking about two different things here.\r\n\r\n1. Whether we should accept things like `Timedelta('10 us', unit='s')`.\r\n\r\n- In your first post on 23 Mar, about the 5 possibilities @belteshassar presented, you mentioned it should raise (possibilities 2 and 3).\r\n- But the current implementation gives a timedelta with '10us' from that, ignoring `unit` parameter. And is also aligned with documentation that says that unit parameter is valid only for `int` (although it also work for `float`), so it is ignored because we have a `string`. It does not seem to be a big deal to have documented priorities when we have two possibly conflicting options.\r\n- Changing the behavior to raise would break backwards compatibility.\r\n- Therefore I believe we should keep current behaviour, not raising. But we could issue a warning so user is aware of what is happening.\r\n\r\n2 - How to make `Timedelta('10', unit='s')` work (what this issue is about)\r\n\r\n - In your first post on 23 Mar, about the 5 possibilities @belteshassar presented, you mentioned it should be allowed (possibility 1).\r\n- This would break specification as per the documentation, as we are now making the `unit` parameter work for things other than `int`s and `float`s - in this case, a `string`.\r\n- But my opinion is that we can relax the specification so that `unit` parameter works for *numbers* in general, be it `int`s, `float`s or anything that can be converter to `float`s. In this case the string \"10\" would fulfill that condition.\r\n- Now, assuming then this is the desired behavior, we could implement just by using the input value casted to float (this is the test that we have a *number*). If not we just use the input value unchanged.\r\n\r\nPlease let me know if I misunderstood anything we are discussing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377157501",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-377157501",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 377157501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzE1NzUwMQ==",
    "user": {
      "login": "Sup3rGeo",
      "id": 20566367,
      "node_id": "MDQ6VXNlcjIwNTY2MzY3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20566367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sup3rGeo",
      "html_url": "https://github.com/Sup3rGeo",
      "followers_url": "https://api.github.com/users/Sup3rGeo/followers",
      "following_url": "https://api.github.com/users/Sup3rGeo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sup3rGeo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sup3rGeo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sup3rGeo/subscriptions",
      "organizations_url": "https://api.github.com/users/Sup3rGeo/orgs",
      "repos_url": "https://api.github.com/users/Sup3rGeo/repos",
      "events_url": "https://api.github.com/users/Sup3rGeo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sup3rGeo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T08:09:07Z",
    "updated_at": "2018-03-29T08:09:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also related to #16791"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377208703",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-377208703",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 377208703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzIwODcwMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T11:41:00Z",
    "updated_at": "2018-03-29T11:41:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Sup3rGeo I think the docs are too literal about `arg` being an integer. We can accept integers or strings that can be coerced to integers. We want to treat `Timedelta(10, unit='s')` and `Timedelta('10', unit='s')` the same.\r\n\r\nChanging `Timedelta('10s', unit='us')` would be labeled as a bug fix, not an API change. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377355324",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-377355324",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 377355324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzM1NTMyNA==",
    "user": {
      "login": "Sup3rGeo",
      "id": 20566367,
      "node_id": "MDQ6VXNlcjIwNTY2MzY3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20566367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sup3rGeo",
      "html_url": "https://github.com/Sup3rGeo",
      "followers_url": "https://api.github.com/users/Sup3rGeo/followers",
      "following_url": "https://api.github.com/users/Sup3rGeo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sup3rGeo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sup3rGeo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sup3rGeo/subscriptions",
      "organizations_url": "https://api.github.com/users/Sup3rGeo/orgs",
      "repos_url": "https://api.github.com/users/Sup3rGeo/repos",
      "events_url": "https://api.github.com/users/Sup3rGeo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sup3rGeo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T20:03:24Z",
    "updated_at": "2018-03-29T20:03:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger, I share the same opinion but I understood that @jreback was against it.\r\n\r\nAlso, when you say changing `Timedelta('10s', unit='us')` you mean so that it raises?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/396561253",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-396561253",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 396561253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjU2MTI1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T11:47:31Z",
    "updated_at": "2018-06-12T11:47:31Z",
    "author_association": "MEMBER",
    "body": ">  We want to treat Timedelta(10, unit='s') and Timedelta('10', unit='s') the same.\r\n\r\nIs it needed that we treat strings parsed as integers? (in contrast to strings with a unit specification inside the string like `Timedelta('10s')`) \r\nPersonally I would just raise an error for those cases."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/396561546",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-396561546",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 396561546,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjU2MTU0Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T11:48:42Z",
    "updated_at": "2018-06-12T11:48:42Z",
    "author_association": "MEMBER",
    "body": "However, if we do this consistently we should probably also disallow `pd.to_timedelta('10')`? (which is currently working)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440618708",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-440618708",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 440618708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDYxODcwOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T10:43:58Z",
    "updated_at": "2018-11-21T10:46:41Z",
    "author_association": "MEMBER",
    "body": "Copying here the examples of the duplicate issues I closed:\r\n\r\n\r\nFrom https://github.com/pandas-dev/pandas/issues/23716 (@jzwinck):\r\n\r\n```python\r\nIn : pd.to_timedelta(123456789, unit='s')\r\nOut: Timedelta('1428 days 21:33:09') # ok\r\n\r\nIn : pd.to_timedelta('123456789', unit='s')\r\nOut: Timedelta('0 days 00:00:00.123456') # oops!\r\n\r\nIn : pd.to_timedelta('123.45', unit='s')\r\nOut: ValueError('no units specified') # ???\r\n```\r\n\r\nIf a string is passed that is a proper integer, it is interpreted as nanoseconds regardless the `unit` kwarg. In addition, when it is a \"float as string\" there is an error, but a float itself works with unit.\r\n\r\nFrom https://github.com/pandas-dev/pandas/issues/16791 (@jtf621):\r\n\r\n```\r\nIn [8]: pd.to_timedelta('1', unit='h')\r\nOut[8]: Timedelta('0 days 00:00:00.000000')\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440622019",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-440622019",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 440622019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDYyMjAxOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T10:54:56Z",
    "updated_at": "2018-11-21T10:54:56Z",
    "author_association": "MEMBER",
    "body": "So the fact that the keyword is ignored is for sure a bug we should fix. \r\n\r\nThe question for me is then: should we actually allow strings to be interpreted as integers? The docs clearly say that `unit` is only for integer input (and in practice also for floats), and we could simply follow that (if you want a string to be interpreted as a number, the user can always convert it to a number themselves) \r\nHowever, @chris-b1 pointed out in https://github.com/pandas-dev/pandas/issues/16791#issuecomment-311762072 that `to_datetime` allows number-like strings to be interpreted with a `unit` (although not for `unit='ns'`, that's probably a bug). So consistency between those two could also be good.\r\n\r\nIf we do allow it, I would in any case propose to *require* a unit, and not silently assume 'ns' (similar proposal for `to_datetime` about that is here: https://github.com/pandas-dev/pandas/issues/15836)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440775858",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12136#issuecomment-440775858",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12136",
    "id": 440775858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDc3NTg1OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T19:00:53Z",
    "updated_at": "2018-11-21T19:00:53Z",
    "author_association": "MEMBER",
    "body": "Ah, there is the PR https://github.com/pandas-dev/pandas/pull/23025 working on this that is actually doing this `unit=None` to require a unit when a string is passed, forgot about that :)"
  }
]
