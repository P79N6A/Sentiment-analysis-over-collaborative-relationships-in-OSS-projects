[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49996932",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7830#issuecomment-49996932",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7830",
    "id": 49996932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTk2OTMy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-24T11:37:19Z",
    "updated_at": "2014-07-24T11:37:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "most ops with a rhs of a non-Index/ndarray don't make any sense.\n\ne.g.\n\nwhat should\n\n`DateTimeIndex([1-Jan-2015']) == 1` do?\n\neven against a list/tuple/ndarray what are they actually checking? that ALL the values match, that some match, that they are the same object?\n\nI don't think these are actually used anywhere\n\nwhat are you doing ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50119630",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7830#issuecomment-50119630",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7830",
    "id": 50119630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTE5NjMw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T08:04:43Z",
    "updated_at": "2014-07-25T08:04:43Z",
    "author_association": "MEMBER",
    "body": "I agree that these comparison don't make sense, but in that case, the standard behavior would be to return `False` (or perhaps better yet, `NotImplemented`), not to raise an exception.\n\ne.g., look at what numpy does for your example:\n\n```\nIn [19]: DatetimeIndex(['1-Jan-2015']).values == 1\nOut[19]: False\n```\n\nI agree there is ambiguity over whether such methods should return a single value or an array.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50119773",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7830#issuecomment-50119773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7830",
    "id": 50119773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTE5Nzcz",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T08:06:26Z",
    "updated_at": "2014-07-25T08:06:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I had a generic method which could take a scalar argument or list of arguments and I wanted to test for the case where no arguments were passed. The type of the arguments could be anything and the method broke when a `DatetimeIndex` was passed. \n\nI know under normal circumstances array equality checks the equality of elements, but it seems that in this case numpy does simply return a False\n\n``` python\nIn [17]: randn(10) == ()\nOut[17]: False\n```\n\nIt turns out it was a badly designed method and so I've improved it and no longer have the problem however perhaps it would be appropriate to assume that any equality comparison which raises an error should return False - i.e.\n\n``` python\ndef __eq__(self):\n    try:\n        ...\n    except Exception:\n        return False\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50143608",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7830#issuecomment-50143608",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7830",
    "id": 50143608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQzNjA4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T12:43:08Z",
    "updated_at": "2014-07-25T12:43:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dhirschfeld care to submit a PR for this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50167968",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7830#issuecomment-50167968",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7830",
    "id": 50167968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTY3OTY4",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T15:51:37Z",
    "updated_at": "2014-07-25T15:51:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can do, but it will have to wait a couple of weeks as I'll be on holiday :smile: \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54756800",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7830#issuecomment-54756800",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7830",
    "id": 54756800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzU2ODAw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-07T19:07:24Z",
    "updated_at": "2014-09-07T19:07:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dhirschfeld not 100% sure going the 'catch all exceptions' route is the best bet. If we return a naked bool from any equality method, it leads to a different class of hidden errors (where the expectation is that all pandas ops return a PandasObject that you can keep working with) and pushes into all the ambiguities with the truthiness of an array.\n\nE.g., here's some edge-case numpy behavior:\n\n``` python\nIn [3]: arr1 = np.array([1, 2, 3, 4, 5, 6])\n\nIn [10]: arr2 = np.array([1, 2])\n\nIn [11]: arr1 == arr1\nOut[11]: array([ True,  True,  True,  True,  True,  True], dtype=bool)\n\nIn [12]: arr1 == arr2\nOut[12]: False\n```\n\nwhich leads down the road of:\n\n``` python\nIn [13]: bool(arr1 == arr1)\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-13-dcde701319c0> in <module>()\n----> 1 bool(arr1 == arr1)\n\nValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\n\nIn [14]: bool(arr1 == arr2)\nOut[14]: False\n```\n\nso maybe we should shoot for \"Let's give a better exception\" vs. falling back on to False and swallowing a different class of errors.  `NotImplemented` hits the same ambiguity, because it ends up as False if both side return NotImplemented:\n\n``` python\nIn [18]: class MyObject(object):\n   ....:     def __eq__(self, *args, **kwargs):\n   ....:         return NotImplemented\n   ....:\n\nIn [19]: o1 = MyObject()\n\nIn [20]: o2 = MyObject()\n\nIn [21]: o1 == o2\nOut[21]: False\n\nIn [22]: o1 == 1\nOut[22]: False\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315075713",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7830#issuecomment-315075713",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7830",
    "id": 315075713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTA3NTcxMw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T13:21:03Z",
    "updated_at": "2017-07-13T13:21:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref to some discussion on the numpy approach to this issue\r\nhttps://github.com/numpy/numpy/issues/6784\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403151258",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7830#issuecomment-403151258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7830",
    "id": 403151258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE1MTI1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T21:27:43Z",
    "updated_at": "2018-07-06T21:27:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "as of:\r\n\r\n```\r\nIn [15]: pd.__version__\r\nOut[15]: '0.24.0.dev0+243.g30eb48cc4'\r\n\r\nIn [9]: pd.DatetimeIndex(['01-Jan-2015']) == ()\r\nOut[9]: array([False])\r\n\r\nIn [12]: pd.DatetimeIndex(['01-Jan-2015']) == 'foo'\r\nValueError: could not convert string to Timestamp\r\n\r\nIn [13]: pd.DatetimeIndex(['01-Jan-2015']) == []\r\nValueError: Lengths must match to compare\r\n```\r\n\r\nso this still needs some work"
  }
]
