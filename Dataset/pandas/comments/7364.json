[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45310843",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-45310843",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 45310843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzEwODQz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-06T07:40:37Z",
    "updated_at": "2014-06-06T07:40:37Z",
    "author_association": "MEMBER",
    "body": "I did not yet test your code, but one remark we may have to think about:\n\nYou also have the `parse_dates` keyword argument. At this moment, if I have a column with `timestamp with time zone`, it returns `datetime.datetime` with some `psycopg2.tz.FixedOffsetTimezone`. \nHowever, if I specify to parse this as a datetime with `parse_dates='col_name'`, I also get a column of object dtype but filled with `pd.Timestamp` values with the same timezone, which is also something odd (maybe this changed with your new code). \n\nSo we could also do that if you specify `parse_dates`, it is in that case converted to a `datetime64`? (and with the consequence that it is converted to utc, as datetime64 does not really support timezones?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45542542",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-45542542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 45542542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTQyNTQy",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T20:52:17Z",
    "updated_at": "2014-06-09T20:52:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "(this comment became really long and there are cliff notes at the bottom)\n\nPassing the column to `parse_dates` doesn't change the behavior, but you are right that there are two code paths here that can result in the column either being full of `datetime.datetime` or full of `Timestamp`s.  However, `Timestamp` and `datetime.datetime` as essentially equivalent (`Timestamp` is a subclass of `datetime.datetime`) so this is weird but not a problem.\n\nThe cause is if you have a `timestamp with time zone` column and it contains all timestamps with the same time zone, then this is the code that is generating the final column:\n\n```\nvalues, tz = tslib.datetime_to_datetime64(arg)\nreturn DatetimeIndex._simple_new(values, None, tz=tz)\n```\n\nAnd this code converts all of the `datetime.datetimes` into `datetime64[ns]` and extracts the timezone information, and then when it gets turned back into the `DatetimeIndex`, the timezone is put back and somehow all of the values becomes `pd.Timestamp`s that are equivalent to the initial `datetime.datetime` (with tzinfo).  This has always worked and my change does nothing to this existing behavior.\n\nHowever, when the bug in #7139 was triggered, what happens is that the `tslib.datetime_to_datetime64(arg)` call fails (because it can't extract a uniform timezone offset for all the values), so my change to the code at this point just returns the column back in its initial form, which is a list of `datetime.datetime` values that were coming from the postgres database.\n\nIn the sake of uniformity, it probably makes sense for `to_datetime` to convert these `datetime.datetime` values into `Timestamp` values in this case, because it certainly is able to do so.  I didn't do this in my change for the sake of simplicity, but I easily could do it.\n\n---\n\nNow the second part.  I thought about somehow putting the UTC conversion information into `parse_dates`, but I think having a separate field is better.\n\nFor example, in some cases you want to specify the format of the datetime field you are parsing, and the only way to do that is via `parse_dates`, IE `parse_dates={'custom-dt': '%Y-%m-%dT%H:%M:%S.%f %Z'}, and then you might additionally want the choice of whether you wish to preserve the time zone information or instead convert to UTC.\n\nGranted, the above functionality is not currently possible because `to_datetime` with a `format` does not currently do anything with `timezone` information (i think), but that is something that is certainly possible to add in the future, so I think this is the most flexible interface.\n\n---\n\nFrankly, the whole thing is probably going to be confusing to end users when different `datetime` fields are going to become different things and nobody will know why.  My change is designed to fix the issue without changing a single other current behavior of pandas, but do nothing to fix the confusion.\n\nMy personal opinion is that if `pandas` is given a column it can convert into a `datetime64[ns]` it should do that.  If that means converting to UTC, then so be it.  For the people that don't want that, I think you could have a way to disable that behavior (like having `convert_dates_to_utc=True` be the default, and letting people opt out of it if they want).  This will result in the most uniformity, because `pandas` is really good at converting datetime-like things into `datetime64`s if you let it.  However, this would be a BC-break, and I have no idea how popular the use cases are out there that rely on timezones staying intact.\n\n---\n\nCliff notes:\n\n1) I can make `to_datetime` also return `pd.Timestamp` values in the special bug case from the original issue.  I didn't do it for simplicity, but I could, but (i think) it shouldn't make that much of a difference since `datetime.datetime` and `Timestamp` are both `datetime.datetimes`s.\n\n2) I think having a separate field outside of `parse_dates` for determining whether or not to convert stuff to UTC is better.\n\n3) If we are willing to make idealogical changes and BC breaks, I think converting everything to UTC by default and letting people opt out of it will result in less end user confusion and is better than the current situation (basically just flipping `convert_dates_to_utc=False` to `convert_dates_to_utc=True` in this change).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45543217",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-45543217",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 45543217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTQzMjE3",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T20:57:36Z",
    "updated_at": "2014-06-09T20:57:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "(Just rebased on master so travis will re-run and fix that spurious failure - didn't make any changes)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45557112",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-45557112",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 45557112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTU3MTEy",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T23:26:06Z",
    "updated_at": "2014-06-09T23:26:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well actually I did have to make a minor update to `test_timeseries.py` because some weird timezone offset issue was causing it to fail on the python 3.4 version, but all is well now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46370077",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-46370077",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 46370077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzcwMDc3",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-17T21:47:31Z",
    "updated_at": "2014-06-17T21:47:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just rebased on master, all tests still passing.  Though there is a big wall of text up there, basically taking this change will fix the issue, cause no new problems and would be perfectly compatible with future improvements or changes.\n\nI'm in no hurry to get it committed, but I think it is a pretty safe change as far as changes go.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57621124",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-57621124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 57621124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjIxMTI0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-02T12:15:18Z",
    "updated_at": "2014-10-02T12:15:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche ? prob push this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57723565",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-57723565",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 57723565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzIzNTY1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-02T23:07:44Z",
    "updated_at": "2014-10-02T23:07:44Z",
    "author_association": "MEMBER",
    "body": "@danbirken Sorry for totally dropping the ball here. I try to look at it and test it with my case as soon as possible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57733133",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-57733133",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 57733133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzMzMTMz",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-03T00:43:30Z",
    "updated_at": "2014-10-03T00:43:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alright well here is an updated version rebased on master (and updating the doc notes to milestone 0.15.0).\n\nI haven't done a detailed look to see if anything has changed in the past 3 months that would make this change no longer good, but I did a cursory glance and everything still seems to apply and be relevant and correct.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57906052",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-57906052",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 57906052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTA2MDUy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-04T13:45:03Z",
    "updated_at": "2014-10-04T13:45:03Z",
    "author_association": "MEMBER",
    "body": "@danbirken OK, I got to look at this. Given you explanation, I am currently thinking:\n- just preventing that an error occurs seems simple: the return would then be an object column of `Timestamp`s or `datetime.datetime`s (as with read_sql_query). \n- on adding the `convert_dates_to_utc` I am not fully sure, I think we should also find another name (maybe just `utc` as in `to_datetime`\n\nBut to conlude: by default, for now, I think we should do what `to_datetime` does when it gets such data, which is returning an object series with Timestamps. \nThis would be a rather simple fix, and maybe we can already put that in quickly (for 0.15, so at least the error is fixed)? And think a bit more about if we want to add a keyword to do the conversion to utx automatically, or that we just say the user should do `tz_convert('UTC')` themselves.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76952284",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-76952284",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 76952284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTUyMjg0",
    "user": {
      "login": "phaefele",
      "id": 5831941,
      "node_id": "MDQ6VXNlcjU4MzE5NDE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5831941?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phaefele",
      "html_url": "https://github.com/phaefele",
      "followers_url": "https://api.github.com/users/phaefele/followers",
      "following_url": "https://api.github.com/users/phaefele/following{/other_user}",
      "gists_url": "https://api.github.com/users/phaefele/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phaefele/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phaefele/subscriptions",
      "organizations_url": "https://api.github.com/users/phaefele/orgs",
      "repos_url": "https://api.github.com/users/phaefele/repos",
      "events_url": "https://api.github.com/users/phaefele/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phaefele/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T14:14:36Z",
    "updated_at": "2015-03-03T14:14:36Z",
    "author_association": "NONE",
    "body": "This was fixed back in October and is a real issue. Any chance it can get merged so we can get it in 0.15.3? Many thanks for the fixed!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77073570",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-77073570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 77073570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDczNTcw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T00:34:22Z",
    "updated_at": "2015-03-04T00:34:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@phaefele if you look at the last comment by @jorisvandenbossche there is still an open issue on this.\nYou are welcome to address.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77074925",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-77074925",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 77074925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDc0OTI1",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T00:46:14Z",
    "updated_at": "2015-03-04T00:46:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "The original thing still broken.  I just trimmed down the change to what I hope is the minimum viable change that fixes the original bug and the other thing that @jorisvandenbossche brought up without adding anything to the read_sql_table\\* interfaces.\n\nWill be posted by end of tonight, just waiting for tests to finish.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77080914",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-77080914",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 77080914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDgwOTE0",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T01:39:07Z",
    "updated_at": "2015-03-04T01:39:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "There you go.\n\nDifferences from previous change:\n- Got rid of all of the convert_dates_to_utc for the SQL functions\n- Made `to_datetime` turn the `datetime.datetimes` into `Timestamp`s if possible\n\nSo this still fixes the initial bug, doesn't clutter up all of the `read_sql_*` functions, and allows this pretty convenient syntax:\n\n```\n# Assume we've imported a df from a sql table, and the\n# 'dt' column was a `datetime with time zone` column\nIn [1]: df\nOut[1]:\n    id                         dt\n0   39  2011-01-01 00:00:00-08:00\n1   40  2011-01-01 00:00:00-08:00\n2   41  2011-01-01 00:00:00-08:00\n\nIn [2]: df['dt64'] = df['dt'].apply(lambda x: x.to_datetime64())\n\nIn [3]: df\nOut[3]:\n    id                         dt                dt64\n0   39  2011-01-01 00:00:00-08:00 2011-01-01 08:00:00\n1   40  2011-01-01 00:00:00-08:00 2011-01-01 08:00:00\n2   41  2011-01-01 00:00:00-08:00 2011-01-01 08:00:00\n```\n\nWhich essentially does what `convert_dates_to_utc` did.  The only potential remote backwards compatible issue that I can think of is this will convert anything to a Timestamp that can possibly be converted (like a `datetime.date`), but I think that is better anyways for uniformity sake and there is no data loss.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77081352",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-77081352",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 77081352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDgxMzUy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T01:43:03Z",
    "updated_at": "2015-03-04T01:44:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "you don't want to use `.apply` on a datetimelike, rather use the vectorize solns (also `to_datetime64()`) converts to a numpy datetime64 which doesn't handle time zones correctly (e.g. it sets them to your local time zone which is weird)\n\n```\nIn [1]: df = DataFrame({'date' : pd.date_range('20130101',periods=5,tz='CET')})\n\nIn [2]: df\nOut[2]: \n                        date\n0  2013-01-01 00:00:00+01:00\n1  2013-01-02 00:00:00+01:00\n2  2013-01-03 00:00:00+01:00\n3  2013-01-04 00:00:00+01:00\n4  2013-01-05 00:00:00+01:00\n\nIn [3]: df['date'].dt.tz_localize(None)\nOut[3]: \n0   2013-01-01\n1   2013-01-02\n2   2013-01-03\n3   2013-01-04\n4   2013-01-05\ndtype: datetime64[ns]\n\nIn [4]: df['date'].dt.tz_convert('EST')\nOut[4]: \n0    2012-12-31 18:00:00-05:00\n1    2013-01-01 18:00:00-05:00\n2    2013-01-02 18:00:00-05:00\n3    2013-01-03 18:00:00-05:00\n4    2013-01-04 18:00:00-05:00\ndtype: object\n\nIn [5]: df['date'].dt.tz_convert('EST').dt.tz_localize(None)\nOut[5]: \n0   2012-12-31 18:00:00\n1   2013-01-01 18:00:00\n2   2013-01-02 18:00:00\n3   2013-01-03 18:00:00\n4   2013-01-04 18:00:00\ndtype: datetime64[ns]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77087012",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-77087012",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 77087012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDg3MDEy",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T02:40:45Z",
    "updated_at": "2015-03-04T02:40:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "It doesn't work because this doesn't return a `DatetimeIndex`, it returns just an np.array() full of `Timestamp`s.  In this special case you can't return a `DatetimeIndex` because that only works if the timezone is uniform across all of them, which it isn't.  This is why this change is tricky.  If your database column happens to have all the timestamps with the same time zone, you get a `DatetimeIndex` and life is good and everything works.  But if you happen to have different timezones, then `DatetimeIndex` is out, so you have a bunch of weird options.\n\nSo after thinking about it more and based on what you said and that nice Datetime accessor interface, I think the best solution is just to convert everything to UTC and make the column a datetime64 column.  This is a super simple change and is much simpler than even the current one.  It would operate just like the json serializer (and probably the other ones too, I didn't check):\n\n```\nIn [19]: df = pd.DataFrame({'date' : pd.date_range('20130309',periods=4,tz='US/Eastern')})\n\nIn [20]: df\nOut[20]:\n                        date\n0  2013-03-09 00:00:00-05:00\n1  2013-03-10 00:00:00-05:00\n2  2013-03-11 00:00:00-04:00\n3  2013-03-12 00:00:00-04:00\n\nIn [21]: df['date']\nOut[21]:\n0    2013-03-09 00:00:00-05:00\n1    2013-03-10 00:00:00-05:00\n2    2013-03-11 00:00:00-04:00\n3    2013-03-12 00:00:00-04:00\nName: date, dtype: object\n\nIn [22]: df2 = pd.read_json(df.to_json())\n\nIn [23]: df2\nOut[23]:\n                 date\n0 2013-03-09 05:00:00\n1 2013-03-10 05:00:00\n2 2013-03-11 04:00:00\n3 2013-03-12 04:00:00\n\nIn [24]: df2['date']\nOut[24]:\n0   2013-03-09 05:00:00\n1   2013-03-10 05:00:00\n2   2013-03-11 04:00:00\n3   2013-03-12 04:00:00\nName: date, dtype: datetime64[ns]\n```\n\nSo it takes your nice timezoned datetime, converts to UTC, and then you are dealing with UTC from now on.  This is sort of enforcing a best practice, but it is consistent and clearly somebody already decided that it was the right approach for json.  So I agree with that person and think this is the right approach for sql serialization/deserialization.  It probably will break backwards compatibility for some rare people, but given this bug prevents a lot of people from using this feature, it probably isn't that big a deal.\n\nor...\n\nThe current changelist I think is the \"minimum viable change\" which fixes the bug, disturbs the least amount of other stuff and has the sanest fallback.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/84036741",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-84036741",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 84036741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDM2NzQx",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-20T14:55:10Z",
    "updated_at": "2015-03-20T14:55:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just ran into this issue, would like to see it merged too ;)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/85114742",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-85114742",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 85114742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTE0NzQy",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T17:30:36Z",
    "updated_at": "2015-03-23T17:30:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "P.s for people looking for a partial workaround (since it too me hours to figure this out) \n- you can set the default client connection Timezone to UTC in postgresql.conf (location of this file varies depending on OS). This can help certain cases:\n\nI had TZ-aware datetimes in the DB with TZ=UTC, but they were read with Postgres default client TZ offset. Since this adjusted for local DST the resulting objects had multiple TZ offsets, triggering the bug.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/85316771",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-85316771",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 85316771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MzE2Nzcx",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T02:53:23Z",
    "updated_at": "2015-03-24T02:55:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alright I've scrapped my previous work and coded what I argued in my last post and what I believe is the correct change.  It also is the simplest change. I believe the correct behavior here is to convert `timestamp with time zone` columns into UTC, at which point all pandas functionality works as expected.\n\nIf pandas had better native support for a Series containing timestamps with different time zones it would be a different story, but pandas does not currently.  Re-writing `DatetimeIndex` to support this would be an unknown amount of work, it would make it less efficient, and probably is a feature that very few people care about.  It also would be a complicated change that touches a lot of stuff.  This is a simple change which touches very few things.\n\nThis is a BC break, but I don't think it will have a huge impact because a) it only affects people importing tables from SQL, not any core pandas functionality and b) this feature is currently broken so it probably isn't in wide usage.  Additionally, if this did break your code the fix is very simple:\n\n```\nIn [1]: df = pd.read_sql_table('testing', engine)\n\nIn [2]: df\nOut[2]:\n   id                  dt\n0   1 2011-01-01 08:00:00\n1   2 2011-06-01 07:00:00\n\n# Oh no, my timezones!  Oh wait, I can easily get them back.  And remember, if my\n# datetimes had different timezones then this feature would have never worked in the first\n# place so there is no BC break.\n\nIn [3]: df['dt'] = df['dt'].dt.tz_localize('UTC').dt.tz_convert('US/Pacific')\n\nIn [4]: df\nOut[4]:\n   id                         dt\n0   1  2011-01-01 00:00:00-08:00\n1   2  2011-06-01 00:00:00-07:00\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/85453778",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-85453778",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 85453778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDUzNzc4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T11:16:01Z",
    "updated_at": "2015-03-24T11:16:01Z",
    "author_association": "MEMBER",
    "body": "@danbirken Thanks a lot!\n\nSo to summarize:\n- Previously, you got:\n  - with a column of `TIMESTAMP WITH TIMEZONE` type, it resulted in a timestamp with timezone information like `tz=psycopg2.tz.FixedOffsetTimezone(offset=60, name=None)`.\n  - but when having different offsets: error (the issue being fixed here)\n- Behaviour after this fix:\n  - In both cases, the values are converted to utc, resulting in a column of `datetime64` values without timezone information.\n\nThat the `psycopg2.tz.FixedOffsetTimezone` is gone is indeed a backwards incompatible change, but maybe not that bad? (as this is not a very handy timezone information anyway). The only question I have is if we maybe should explicitely say it is UTC (so store it as Timestamps with utc timezone).\n\nI was also thinking if it wouldn't be an option to keep it as is (object dtype with Timestamps with fixed offset), and fix it so that also the error now (different offsets) does return that. But, this would it make it more complex to fix it I think? And, if you want to work with such data (with a FixedOffset), you will almost always first have to convert it UTC before you can do something with it. \n\nSo to conclude my thoughts, I think this is fine. Maybe just add a note about this in the docs?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/85457089",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-85457089",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 85457089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDU3MDg5",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T11:29:26Z",
    "updated_at": "2015-03-24T11:29:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to clarify: is the fundamental issue that neither Series, DateTimeIndexes, nor np.datetime64 can correctly handle arrays of datetimes with multiple time zones?\n\nI think it would make sense in that case that if you pass `parse_dates=False` then no SQL `TIMESAMP` to datetime conversion should be performed so you just get an array of python datetime objects as returned by the DB driver. \n\nThis way you always have a \"high fidelity\" option that simply avoids this incompatibility. At the moment (at least the last time I checked) passing `parse_dates=False` means you don't attempt to parse any datetime-like columns (such as text or integer time stamps) but SQL `TIMESAMP` are still passed through `pd.to_datetime` which means you end up dealing with these issues...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/85498208",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-85498208",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 85498208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDk4MjA4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T13:33:11Z",
    "updated_at": "2015-03-24T13:33:11Z",
    "author_association": "MEMBER",
    "body": "So what you get back from the sql query are a list of values like `dt.datetime(2012, 1, 1, 0, 0, tzinfo=pytz.FixedOffset(-480))`. But you are correct:\n- datetime64 dtype cannot hold timezone information (although it does display it, but that is just converted to sytem timezone on display)\n- so a Series with datetime64 dtype cannot hold timezone info as well\n- a Series can have `object` dtype to hold `Timestamp` or `datetime.datetime` values _with_ a timezone\n- a `DatetimeIndex` has to have _one_ timezone (and the different offsets are often actually one timezone if expressed with a name as 'CET', but expressed as FixedOffsets it are different timezones)\n\nSo if we want to preserve the exact information of the database, the options are to store it as object columns with datetime.datetime or Timestamp values. A series with `datetime.datetime` values is actually what you get back from `read_sql_query` when having datetimes with timezones (one timezone or multiple, that does not matter in this case).\n\nFor now, `parse_dates` is only used to specify to parse a specific column to datetimes (which is typically used for parsing string columns), and it is a bit independent of harmonizing the column types of the resulting dataframe with the sql types in the database (the `_harmonize_columns` method). \nBut I do like the suggestion of using `parse_dates=False` for this (this option was not used up to now, it was just converted in `[]`).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/85652347",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-85652347",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 85652347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjUyMzQ3",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T19:15:47Z",
    "updated_at": "2015-03-24T19:15:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "As far as my knowledge goes, I agree with everything in the most recent comment.\n\n> I was also thinking if it wouldn't be an option to keep it as is (object dtype with Timestamps with fixed offset), and fix it so that also the error now (different offsets) does return that. But, this would it make it more complex to fix it I think? And, if you want to work with such data (with a FixedOffset), you will almost always first have to convert it UTC before you can do something with it.\n\nMy first change like 9 months ago did this (though with UTC conversion not the default).  I think this is wrong because pandas is right now just not built to support a Series of Timestamps which have different time zones.  I think people should be forced, willingly or not, into UTC because that is what pandas supports. The deeper I go into the rabbit hole the more incompatibilities I find.\n\nFor example: https://github.com/pydata/pandas/blob/master/pandas/tseries/index.py#L310\n\nIf you access a Datetime-like Series with different time zones via the DatetimeProperties accessor, pandas will just convert it to UTC anyways without warning.\n\n```\nIn [6]: df = pandas.DataFrame()\n\nIn [7]: df['dt'] = [datetime.datetime.now(tz=pytz.UTC), datetime.datetime.now(tz=pytz.timezone('US/Eastern'))]\n\nIn [8]: df['dt']\nOut[8]:\n0    2015-03-24 19:00:55.496832+00:00\n1    2015-03-24 15:00:55.496860-04:00\nName: dt, dtype: object\n\nIn [9]: df['dt'].dt.hour\nOut[9]:\n0    19\n1    19\ndtype: int64\n\nIn [10]: df['dt'].dt.to_pydatetime()\nOut[10]:\narray([datetime.datetime(2015, 3, 24, 19, 0, 55, 496832),\n       datetime.datetime(2015, 3, 24, 19, 0, 55, 496860)], dtype=object)\n```\n\n> That the psycopg2.tz.FixedOffsetTimezone is gone is indeed a backwards incompatible change, but maybe not that bad? (as this is not a very handy timezone information anyway). The only question I have is if we maybe should explicitely say it is UTC (so store it as Timestamps with utc timezone).\n\nThe problem is that the default situation stores them as an `np.datetime64` series which is a more efficient container for datetime values.  Once you add timezone information they instead are stored as an `object` array full of `Timestamp` values with timezone information.  Since in practice these two different Series will generally behave the same, it makes sense for them to be stored by default in the more efficient container.\n\nAnd of course, if anybody wants the timezone information added it is very easy to do that via `.dt.tz_localize('UTC')`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/85652974",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-85652974",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 85652974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjUyOTc0",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T19:16:59Z",
    "updated_at": "2015-03-24T19:16:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I did just make one minor edit where I added a \"Notes\" section to the `read_sql_*` functions warning people that datetime values with time zones would be converted to UTC.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/85760182",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-85760182",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 85760182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzYwMTgy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-25T00:36:39Z",
    "updated_at": "2015-03-25T00:36:39Z",
    "author_association": "MEMBER",
    "body": "@danbirken fully agree. \nI think having an option to just preserve the raw output of the database (datetime.datetimes with fixedoffset) would be nice (@danbirken what do you think of `parse_dates=False` for this? but it can go in another PR). But indeed having it as object Timestamps by default is not that usefull.\n\nOne comment: I think the note you added is not fully correct for `read_sql_query`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/86327434",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-86327434",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 86327434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzI3NDM0",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-26T03:51:30Z",
    "updated_at": "2015-03-26T03:51:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good point, I updated the documentation for both `read_sql_query` and `read_sql_table`.\n\nI don't think this change should do anything about `parse_dates`, because that is already kind of a disaster and I don't want to make it more complicated for the future.  I think for this particular case of not parsing datetime columns, the best way to do it would be a new parameter like `automatically_parse_datetime_cols=True`, and then you can set that to false if you want.  But, I don't think this works either, because pandas itself will automatically convert regular `datetimes` to `datetime64`s if it can, regardless of the source of the data:\n\n```\nIn [7]: df = pd.DataFrame({'dt': [datetime.datetime.now(), datetime.datetime.now()]})\n\nIn [8]: df['dt']\nOut[8]:\n0   2015-03-25 20:32:18.378324\n1   2015-03-25 20:32:18.378333\nName: dt, dtype: datetime64[ns]\n```\n\nSo I think it will just lead to more confusion.\n\nMy opinion is when a great hero comes along and creates a datetime w/tz storage system for a pandas Series, or decides time zones aren't supported in pandas, that will fix the permanent issue of the `parse_dates` conundrum.  For now I would rather leave it to them.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/92509329",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-92509329",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 92509329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyNTA5MzI5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-13T21:40:43Z",
    "updated_at": "2015-04-13T21:40:43Z",
    "author_association": "MEMBER",
    "body": "There was in the meantime a conflict in the whatsnew file, so I merged as https://github.com/pydata/pandas/commit/c3eeb577b2b06ecc65e96c5f5de69f0fba01c3dd (so you didn't have to rebase again ..)\n\n@danbirken Thank you very much for fixing this, and for your endurance, as this look a bit longer than necessary. But in the end, a good fix was put in!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/93848448",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-93848448",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 93848448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzODQ4NDQ4",
    "user": {
      "login": "danbirken",
      "id": 91798,
      "node_id": "MDQ6VXNlcjkxNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/91798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danbirken",
      "html_url": "https://github.com/danbirken",
      "followers_url": "https://api.github.com/users/danbirken/followers",
      "following_url": "https://api.github.com/users/danbirken/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbirken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danbirken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbirken/subscriptions",
      "organizations_url": "https://api.github.com/users/danbirken/orgs",
      "repos_url": "https://api.github.com/users/danbirken/repos",
      "events_url": "https://api.github.com/users/danbirken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danbirken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-16T21:55:02Z",
    "updated_at": "2015-04-16T21:55:02Z",
    "author_association": "CONTRIBUTOR",
    "body": ":+1: \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/93986699",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7364#issuecomment-93986699",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7364",
    "id": 93986699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzOTg2Njk5",
    "user": {
      "login": "phaefele",
      "id": 5831941,
      "node_id": "MDQ6VXNlcjU4MzE5NDE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5831941?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phaefele",
      "html_url": "https://github.com/phaefele",
      "followers_url": "https://api.github.com/users/phaefele/followers",
      "following_url": "https://api.github.com/users/phaefele/following{/other_user}",
      "gists_url": "https://api.github.com/users/phaefele/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phaefele/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phaefele/subscriptions",
      "organizations_url": "https://api.github.com/users/phaefele/orgs",
      "repos_url": "https://api.github.com/users/phaefele/repos",
      "events_url": "https://api.github.com/users/phaefele/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phaefele/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T13:32:33Z",
    "updated_at": "2015-04-17T13:32:33Z",
    "author_association": "NONE",
    "body": "Yes - thank you for addressing that!\n\nOn Thu, Apr 16, 2015 at 5:55 PM, Dan Birken notifications@github.com\nwrote:\n\n> [image: :+1:]\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/pull/7364#issuecomment-93848448.\n\n## \n\n## Paul Haefele\n\npaul@haefele.org\n+1-416-902-6326\nca.linkedin.com/in/phaefele/\n"
  }
]
