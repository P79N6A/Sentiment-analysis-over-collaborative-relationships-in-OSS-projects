[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232116563",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13629#issuecomment-232116563",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13629",
    "id": 232116563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjExNjU2Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-12T17:22:51Z",
    "updated_at": "2016-07-12T17:22:51Z",
    "author_association": "MEMBER",
    "body": "@Khris777 Thanks for reporting!\n\nAs a workaround for now, you can do:\n\n```\nIn [11]: g.agg(lambda x: x.median())\nOut[11]:\n             0\n0\n(0, 5]     3.5\n(5, 10]    7.5\n(10, 15]  11.0\n(15, 20]   NaN\n(20, 25]  24.5\n(25, 30]   NaN\n(30, 35]   NaN\n(35, 40]  36.0\n(40, 45]   NaN\n(45, 50]   NaN\n(50, 55]   NaN\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/246564339",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13629#issuecomment-246564339",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13629",
    "id": 246564339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjU2NDMzOQ==",
    "user": {
      "login": "paul-mannino",
      "id": 3327564,
      "node_id": "MDQ6VXNlcjMzMjc1NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3327564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paul-mannino",
      "html_url": "https://github.com/paul-mannino",
      "followers_url": "https://api.github.com/users/paul-mannino/followers",
      "following_url": "https://api.github.com/users/paul-mannino/following{/other_user}",
      "gists_url": "https://api.github.com/users/paul-mannino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paul-mannino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paul-mannino/subscriptions",
      "organizations_url": "https://api.github.com/users/paul-mannino/orgs",
      "repos_url": "https://api.github.com/users/paul-mannino/repos",
      "events_url": "https://api.github.com/users/paul-mannino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paul-mannino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-13T03:37:00Z",
    "updated_at": "2016-09-13T04:19:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "First time contributor, thought I'd take a look into this one. Do you think there's a more logical response than raising a KeyError to `g.get_group('(40, 45]')`  ?\n\nget_group with no additional arguments is supposed to return a subset of the original dataframe with values that fall within the specified interval. If there are no values in the interval (40,45] in the original dataframe, there's no way to slice that up into a sensible response. Empty dataframe?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/246636373",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13629#issuecomment-246636373",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13629",
    "id": 246636373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjYzNjM3Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-13T10:10:28Z",
    "updated_at": "2016-09-13T10:10:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "ATM, internval types are actual string reprs (and not a distinct dtype), so yes, `g.get_group('(40, 45)')` should be a `KeyError`, just like any other indexing operation.\n"
  }
]
