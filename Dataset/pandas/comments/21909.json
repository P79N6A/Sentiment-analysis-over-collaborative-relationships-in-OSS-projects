[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405010982",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21909#issuecomment-405010982",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21909",
    "id": 405010982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTAxMDk4Mg==",
    "user": {
      "login": "matanster",
      "id": 4996067,
      "node_id": "MDQ6VXNlcjQ5OTYwNjc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4996067?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matanster",
      "html_url": "https://github.com/matanster",
      "followers_url": "https://api.github.com/users/matanster/followers",
      "following_url": "https://api.github.com/users/matanster/following{/other_user}",
      "gists_url": "https://api.github.com/users/matanster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matanster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matanster/subscriptions",
      "organizations_url": "https://api.github.com/users/matanster/orgs",
      "repos_url": "https://api.github.com/users/matanster/repos",
      "events_url": "https://api.github.com/users/matanster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matanster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-14T09:21:14Z",
    "updated_at": "2018-07-14T09:21:33Z",
    "author_association": "NONE",
    "body": "per my availability when this is ever responded to, happy to contribute a fix/feature for this, if given fair guidance as to where to touch and what to look out for :smiley: "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405020472",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21909#issuecomment-405020472",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21909",
    "id": 405020472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTAyMDQ3Mg==",
    "user": {
      "login": "matanster",
      "id": 4996067,
      "node_id": "MDQ6VXNlcjQ5OTYwNjc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4996067?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matanster",
      "html_url": "https://github.com/matanster",
      "followers_url": "https://api.github.com/users/matanster/followers",
      "following_url": "https://api.github.com/users/matanster/following{/other_user}",
      "gists_url": "https://api.github.com/users/matanster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matanster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matanster/subscriptions",
      "organizations_url": "https://api.github.com/users/matanster/orgs",
      "repos_url": "https://api.github.com/users/matanster/repos",
      "events_url": "https://api.github.com/users/matanster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matanster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-14T12:23:59Z",
    "updated_at": "2018-07-14T12:26:56Z",
    "author_association": "NONE",
    "body": "Also, the following (a workaround) seems to work slower than one could hope for, given the input is already sparse when it arrives at the `SparseDataFrame`.... but might boil down to my specific scipy usage strategy below.\r\n\r\n```\r\nfrom scipy.sparse import dok_matrix, coo_matrix\r\nfrom pandas import SparseDataFrame\r\n\r\n%time i, j, data = zip(*((i, t[0], t[1]) for i, row in enumerate(a) for t in row))\r\n\r\n%time m = coo_matrix((data, (i, j)), shape=(num_of_docs, lexicon_size))\r\n\r\n%time sdf = SparseDataFrame(m).fillna(0)\r\n```\r\n\r\nCPU times: user 80 ms, sys: 4 ms, total: 84 ms\r\nWall time: 84.5 ms\r\nCPU times: user 28 ms, sys: 4 ms, total: 32 ms\r\nWall time: 28.5 ms\r\nCPU times: user 41.9 s, sys: 132 ms, total: 42 s\r\nWall time: 41.8 s"
  }
]
