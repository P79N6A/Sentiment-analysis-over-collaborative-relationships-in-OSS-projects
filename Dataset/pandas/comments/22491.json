[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415620046",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22491#issuecomment-415620046",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22491",
    "id": 415620046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTYyMDA0Ng==",
    "user": {
      "login": "zfrenchee",
      "id": 2761597,
      "node_id": "MDQ6VXNlcjI3NjE1OTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2761597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zfrenchee",
      "html_url": "https://github.com/zfrenchee",
      "followers_url": "https://api.github.com/users/zfrenchee/followers",
      "following_url": "https://api.github.com/users/zfrenchee/following{/other_user}",
      "gists_url": "https://api.github.com/users/zfrenchee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zfrenchee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zfrenchee/subscriptions",
      "organizations_url": "https://api.github.com/users/zfrenchee/orgs",
      "repos_url": "https://api.github.com/users/zfrenchee/repos",
      "events_url": "https://api.github.com/users/zfrenchee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zfrenchee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T01:10:08Z",
    "updated_at": "2018-08-24T01:10:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was able to solve my problem with \r\n```\r\ndf1.merge(df2.dropna(subset=['d']), how='left', left_on='b', right_on='d')\r\n```\r\nNevertheless, I still feel like this shouldn't be the default behavior for DataFrame.merge. \r\n\r\nWhat do you think? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415790996",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22491#issuecomment-415790996",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22491",
    "id": 415790996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTc5MDk5Ng==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T15:17:06Z",
    "updated_at": "2018-08-24T15:17:06Z",
    "author_association": "MEMBER",
    "body": "Hmm yea I don't think the NA values should be producing a match here - @TomAugspurger any thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415795215",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22491#issuecomment-415795215",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22491",
    "id": 415795215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTc5NTIxNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T15:31:19Z",
    "updated_at": "2018-08-24T15:31:19Z",
    "author_association": "MEMBER",
    "body": "Agreed, I also would not expect NAs to match here. \r\nIt might be good to explore a bit if we have always been doing that, and if we do this consistently within pandas (in which case we should certainly do some kind of deprecation if we want to change this)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/442258950",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22491#issuecomment-442258950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22491",
    "id": 442258950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjI1ODk1MA==",
    "user": {
      "login": "jtkiley",
      "id": 3935135,
      "node_id": "MDQ6VXNlcjM5MzUxMzU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3935135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtkiley",
      "html_url": "https://github.com/jtkiley",
      "followers_url": "https://api.github.com/users/jtkiley/followers",
      "following_url": "https://api.github.com/users/jtkiley/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtkiley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtkiley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtkiley/subscriptions",
      "organizations_url": "https://api.github.com/users/jtkiley/orgs",
      "repos_url": "https://api.github.com/users/jtkiley/repos",
      "events_url": "https://api.github.com/users/jtkiley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtkiley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-27T23:31:31Z",
    "updated_at": "2018-11-27T23:31:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I ran into this today with a dataset. In my case, I wanted a merge with an outer join, but I saw the same `NaN`-matching behavior.\r\n\r\nMy workaround was merging data frames like this (adapted to match the example above): \r\n\r\n```python\r\ndata = pd.merge(df1[df1['b'].notnull()],\r\n                df2[df2['d'].notnull()], how='outer',\r\n                left_on='b', right_on='d')\r\ndata = pd.concat([data, df1[df1['b'].isnull()],\r\n                  df2[df2['d'].isnull()]],\r\n                 ignore_index=True, sort=False)\r\n```\r\n\r\nI didn't know that merge would match `NaN`s, and I expected to get the output from merge with `how='outer'` that I got with this code. Fortunately, it was easy to spot (tons of repeated data), but it took a bit to understand and chase down.\r\n\r\nAnyway, +1 on not matching `NaN`s, and maybe this snippet will be helpful if someone happens by who needs to do the same thing I was doing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450705790",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22491#issuecomment-450705790",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22491",
    "id": 450705790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDcwNTc5MA==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-01T02:27:55Z",
    "updated_at": "2019-01-01T02:27:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I kind of feel like `pd.merge` should behave like a SQL join, with `None` and `np.nan` being interpreted as `null`, and with any equality comparison involving a `null` value itself evaluating to `null` (and hence no match)"
  }
]
