[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/251108045",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14334#issuecomment-251108045",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14334",
    "id": 251108045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTEwODA0NQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-03T13:40:20Z",
    "updated_at": "2016-10-03T13:40:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "This probably should work, thanks for the report!  But I'm curious, why are using a `Grouper` in this case instead of `df.groupby(['A'])`,  `df.groupby(['A','B'])`, etc?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/251131316",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14334#issuecomment-251131316",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14334",
    "id": 251131316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTEzMTMxNg==",
    "user": {
      "login": "jonmmease",
      "id": 15064365,
      "node_id": "MDQ6VXNlcjE1MDY0MzY1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15064365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonmmease",
      "html_url": "https://github.com/jonmmease",
      "followers_url": "https://api.github.com/users/jonmmease/followers",
      "following_url": "https://api.github.com/users/jonmmease/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonmmease/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonmmease/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonmmease/subscriptions",
      "organizations_url": "https://api.github.com/users/jonmmease/orgs",
      "repos_url": "https://api.github.com/users/jonmmease/repos",
      "events_url": "https://api.github.com/users/jonmmease/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonmmease/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-03T15:04:08Z",
    "updated_at": "2016-10-03T15:04:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, good question.  \n\nI'm in the process of working on implementing #5677 which will allow the `A` in `df.groupby(['A'])` to refer to an index level in `df` named `A` if `df` has no column named `A`.  Per the conversation in #5677, If a frame has both a column named `A` and an index level named `A` then `df.groupby(['A'])` will group by the column (this maintains backwards compatibility).  I came across this bug in the process of writing tests to verify that this ambiguity is resolved properly.\n"
  }
]
