[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197183867",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12638#issuecomment-197183867",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12638",
    "id": 197183867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzE4Mzg2Nw==",
    "user": {
      "login": "codecov-io",
      "id": 8655789,
      "node_id": "MDQ6VXNlcjg2NTU3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8655789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov-io",
      "html_url": "https://github.com/codecov-io",
      "followers_url": "https://api.github.com/users/codecov-io/followers",
      "following_url": "https://api.github.com/users/codecov-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov-io/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov-io/orgs",
      "repos_url": "https://api.github.com/users/codecov-io/repos",
      "events_url": "https://api.github.com/users/codecov-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T06:53:00Z",
    "updated_at": "2016-03-16T06:53:00Z",
    "author_association": "NONE",
    "body": "## [Current coverage](https://codecov.io/github/pydata/pandas?ref=4bff73995bfd73291007980b78b30108ae32c964) is `88.64%`\n\n> Merging **#12638** into **master** will not affect coverage as of [`4bff739`](https://codecov.io/github/pydata/pandas/commit/4bff73995bfd73291007980b78b30108ae32c964)\n\n``` diff\n@@            master   #12638   diff @@\n=======================================\n  Files          275      275       \n  Stmts       133688   133688       \n  Branches         0        0       \n  Methods          0        0       \n=======================================\n+ Hit         118511   118512     +1\n  Partial          0        0       \n+ Missed       15177    15176     -1\n```\n\n> Review entire [Coverage Diff](https://codecov.io/github/pydata/pandas/compare/f71537ab2561ab5727008095e9685966619fa7b9...4bff73995bfd73291007980b78b30108ae32c964) as of [`4bff739`](https://codecov.io/github/pydata/pandas/commit/4bff73995bfd73291007980b78b30108ae32c964)\n> \n> Powered by [Codecov](https://codecov.io). Updated on successful CI builds.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197301157",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12638#issuecomment-197301157",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12638",
    "id": 197301157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzMwMTE1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T12:42:40Z",
    "updated_at": "2016-03-16T12:42:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is the same issue as being fixed in #12603. The underlying PR is almost there, so need to recast this similary.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197301300",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12638#issuecomment-197301300",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12638",
    "id": 197301300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzMwMTMwMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T12:42:59Z",
    "updated_at": "2016-03-16T12:42:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @gfyoung \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198116980",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12638#issuecomment-198116980",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12638",
    "id": 198116980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODExNjk4MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T22:58:33Z",
    "updated_at": "2016-03-17T22:58:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "now that #12603 is merged, this should be quite trivial.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198227754",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12638#issuecomment-198227754",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12638",
    "id": 198227754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODIyNzc1NA==",
    "user": {
      "login": "mortada",
      "id": 1642081,
      "node_id": "MDQ6VXNlcjE2NDIwODE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1642081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mortada",
      "html_url": "https://github.com/mortada",
      "followers_url": "https://api.github.com/users/mortada/followers",
      "following_url": "https://api.github.com/users/mortada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mortada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mortada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mortada/subscriptions",
      "organizations_url": "https://api.github.com/users/mortada/orgs",
      "repos_url": "https://api.github.com/users/mortada/repos",
      "events_url": "https://api.github.com/users/mortada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mortada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T06:32:29Z",
    "updated_at": "2016-03-18T06:32:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback one problem is that `numpy` actually passes both `axis` and `out` as positional arguments \nhttps://github.com/numpy/numpy/blob/master/numpy/core/fromnumeric.py#L1036 \n\n``` python\nreturn argmin(axis, out)\n```\n\nso it seems like we have two choices:\n- keep the current function signature but make sure `out` is `None`, i.e.\n\n``` python\ndef idxmin(self, axis=None, out=None, skipna=True):\n    if out is not None:\n        raise ValueError(msg)\n```\n- change it to\n\n``` python\ndef idxmin(self, axis=None, *args, skipna=True):\n     validate_args(args, min_length=0, max_length=1)\n```\n\nwhich would be better?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198331873",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12638#issuecomment-198331873",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12638",
    "id": 198331873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODMzMTg3Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T12:36:01Z",
    "updated_at": "2016-03-18T12:36:30Z",
    "author_association": "MEMBER",
    "body": "@jreback : Is there any reason why we're supporting an `axis` argument when there aren't any \"axes\" to a `Series` object, not to mention, it's not even used in the implementation?\n\n@mortada : Your second option doesn't work because you can't put keywords after `*args`, but a more customized solution might be needed given that the keyword we want (`skipna`) comes after the keyword(s) that we  _don't_ want.  A suitable solution I think depends on how many keywords we can remove from the signature.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198351574",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12638#issuecomment-198351574",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12638",
    "id": 198351574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODM1MTU3NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T13:18:53Z",
    "updated_at": "2016-03-18T13:18:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mortada can you give a concrete example of where this actually fails now?\n\nwe should hide the `out` param, but since numpy is passing it positionally, prob have to interpret if its passed as the `axis` param.\n\n@gfyoung it makes the signatures the same for the same methods in Series/DataFrame. there is consistency across methods in pandas, that's why most are already in `generic.py`.  Series only methods still have the `axis` param again for consistency.\n\nE.g. `s.sum(0)` makes sense, so why not `s.idxmin(0)`\n\nIn fact these routines `idxmin/idxmax`, ideally we could consolidate them and put them in `generic.py`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198367061",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12638#issuecomment-198367061",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12638",
    "id": 198367061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODM2NzA2MQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T13:45:32Z",
    "updated_at": "2016-03-18T13:45:32Z",
    "author_association": "MEMBER",
    "body": "@jreback : By passing in arguments like this, `idxmin` will interpret `numpy`'s `out` parameter as its `skipna` parameter.  It used to be that `skipna` would just default to `True` in these cases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198368187",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12638#issuecomment-198368187",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12638",
    "id": 198368187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODM2ODE4Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T13:47:45Z",
    "updated_at": "2016-03-18T13:47:45Z",
    "author_association": "MEMBER",
    "body": "Since this issue is localized to `Series`, could we just create a method that validates that `skipna` is in the tuple (`None`, `True`, `False`) and assign it to be `True` if `skipna` is `None`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198371340",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12638#issuecomment-198371340",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12638",
    "id": 198371340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODM3MTM0MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T13:53:27Z",
    "updated_at": "2016-03-18T13:53:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nSignature: pd.DataFrame.idxmin(self, axis=0, skipna=True)\nSignature: pd.Series.idxmin(self, axis=None, out=None, skipna=True)\n```\n\nI would like to make the signture of `Series.idxmin/max` the same as `DataFrame.idxmin/max` w/o causing issues. IF its passing by position, then this is pretty easy. (just interpret `skipna`), are there cases where its NOT passed by position (but by kwargs)? if so, may need to add a `kwargs` handler as well (like we did for stat functions)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198372568",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12638#issuecomment-198372568",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12638",
    "id": 198372568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODM3MjU2OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T13:56:03Z",
    "updated_at": "2016-03-18T13:56:23Z",
    "author_association": "MEMBER",
    "body": "@jreback : On the `numpy` side in `fromnumeric.py`, it internally is by position and not keyword (again, why that is the case, I'm not sure).  In that case, we could go with handling `skipna` as I proposed above.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198405165",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12638#issuecomment-198405165",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12638",
    "id": 198405165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODQwNTE2NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T15:16:18Z",
    "updated_at": "2016-03-18T15:16:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung yeh something that that would work\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/206326292",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12638#issuecomment-206326292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12638",
    "id": 206326292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjMyNjI5Mg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-06T11:36:18Z",
    "updated_at": "2016-04-06T11:36:18Z",
    "author_association": "MEMBER",
    "body": "@jreback , @mortada : this PR is being subsumed by my massive PR #12810.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/206683599",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12638#issuecomment-206683599",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12638",
    "id": 206683599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjY4MzU5OQ==",
    "user": {
      "login": "mortada",
      "id": 1642081,
      "node_id": "MDQ6VXNlcjE2NDIwODE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1642081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mortada",
      "html_url": "https://github.com/mortada",
      "followers_url": "https://api.github.com/users/mortada/followers",
      "following_url": "https://api.github.com/users/mortada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mortada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mortada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mortada/subscriptions",
      "organizations_url": "https://api.github.com/users/mortada/orgs",
      "repos_url": "https://api.github.com/users/mortada/repos",
      "events_url": "https://api.github.com/users/mortada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mortada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-07T03:38:24Z",
    "updated_at": "2016-04-07T03:38:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung makes sense, I'll close this one, thanks! \n"
  }
]
