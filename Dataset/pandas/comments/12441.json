[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/188442402",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12441#issuecomment-188442402",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12441",
    "id": 188442402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODQ0MjQwMg==",
    "user": {
      "login": "rv816",
      "id": 3758548,
      "node_id": "MDQ6VXNlcjM3NTg1NDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3758548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rv816",
      "html_url": "https://github.com/rv816",
      "followers_url": "https://api.github.com/users/rv816/followers",
      "following_url": "https://api.github.com/users/rv816/following{/other_user}",
      "gists_url": "https://api.github.com/users/rv816/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rv816/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rv816/subscriptions",
      "organizations_url": "https://api.github.com/users/rv816/orgs",
      "repos_url": "https://api.github.com/users/rv816/repos",
      "events_url": "https://api.github.com/users/rv816/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rv816/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-24T20:32:11Z",
    "updated_at": "2016-02-24T20:34:10Z",
    "author_association": "NONE",
    "body": "##### After running tests....\n\n```\n\ncollected 10467 items / 13 errors / 4 skipped\n\ncomputation/tests/test_eval.py ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss..ss..ss..ss..ss..ss..ss..ss..ss..sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\nsssssssssssssssssssssssssssssssssssssssssssssssssssssss..ss..ss..ssss...........ss..ss..ss..ss..ss..ss..ss................ssssssssssssssss..ss..ss\nio/tests/test_clipboard.py ....\nio/tests/test_common.py ......\nio/tests/test_cparser.py ........................\nio/tests/test_data.py .........sssssssssssssssssssssssssssss.......s...s.\nio/tests/test_date_converters.py ......\nio/tests/test_excel.py s.s.................s......s.s.................s......s.s.................s......ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\nsssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss.\nio/tests/test_gbq.py s.ssssssssssssssssssssssssssssssssssssssssssssssssssss\nio/tests/test_html.py ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss.ssss\nio/tests/test_json_norm.py .........\nio/tests/test_packers.py ..................................s...FFF\nio/tests/test_parsers.py ....................................................................s..............................................................................................................\n................................................................................................s...............................................s...........................................................\n....................................................................ssssssssss\nio/tests/test_pickle.py FFFFFFFFFFF\nio/tests/test_sql.py FFFFFFFFFFFFFFFFFFFFFFFFFFFF.............................................................................................................EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\nEEEEEEEEEEEEEEEEEEEEEEEEEEssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss..........s...................\n.................s.........................s...................ssssssssssssssssssss............sssssssssss\nio/tests/test_stata.py ...............................................\nio/tests/test_wb.py .ss..\nio/tests/test_json/test_pandas.py .....................F.............\nio/tests/test_json/test_ujson.py ............................................................................s.......................................................\nsparse/tests/test_array.py .............\nsparse/tests/test_libsparse.py ....................\nsparse/tests/test_list.py .......\nsparse/tests/test_sparse.py .....s.....................................F..........................................................................................FFFF........F.............................\n................\nstats/tests/test_fama_macbeth.py s\nstats/tests/test_math.py ..s\nstats/tests/test_moments.py ..................s......................................................\nstats/tests/test_ols.py ssssssssssssssssssssssssssssssssssssssssssssss.....\ntests/test_algos.py .......................................\ntests/test_base.py ...........................\ntests/test_categorical.py ...............................................................................................................................\ntests/test_common.py ..........................................................\ntests/test_compat.py ....\ntests/test_config.py ....................\ntests/test_dtypes.py .....................\ntests/test_format.py ....F.F.........s...FFFFFFF...........F......................sss................F.F..F.............................................F................................\ntests/test_frame.py ........................................................................................................................................................................................\n.....................................................................................................................................................................................s......................\n...........................................................................................................F................................................................................................\n....................................................................................s.s.s..ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss.s.s.s.s.s.s.\ns.sss.sss.s.s.s.s.s.ssssssssss...\ntests/test_generic.py .............................................................F....................................s...............\ntests/test_graphics.py FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFEFE\nFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE\ntests/test_graphics_others.py FEFEFEFEFEFEFEFEFEFEFEFEsEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE\ntests/test_groupby.py .....................................................................................................................................F................................................\n................................................................................\ntests/test_index.py ........................................................................F...............................................................................................................\n............................................................................................................................................................................................................\n.............................................................F..........F...........................s...............................................F.........\ntests/test_indexing.py ...................................................................................F..........................................................\ntests/test_internals.py ..............s.....................................................................................................................................................................\n............................................................................................................................................................................................................\n............................................................................................................................................................................................................\n............................................................................................................................................................................................................\n............................................................................................................................................................................................................\n............................................................................................................................................................................................................\n............................................................................................................................................................................................................\n............................................................................................................................................................................................................\n............................................................................................................................................................................................\ntests/test_lib.py ..............\ntests/test_multilevel.py ....................................................................s..........................F.......................................\ntests/test_nanops.py ...............F.....F...FF...............\ntests/test_panel.py ........................F..................................FFFF.........F........F......F.FF..ss..FFF............F......................\ntests/test_panel4d.py .s...s.............sss.........s...........ss...............ss.....ssss....\ntests/test_panelnd.py ....\ntests/test_reshape.py ..........................................\ntests/test_rplot.py .............FFFF\ntests/test_series.py .......................................................................................................................................................................................\n...F..........FFFF....F.......s..........................F......s........................†..............F.............F..............F.....................................F...................\ntests/test_stats.py ....FF.\ntests/test_strings.py .........................................................................\ntests/test_testing.py FF.FFFFFFF.FFF...F.FF.F......\ntests/test_tseries.py ..................................................FF.\ntests/test_util.py .......\ntests/frame/test_apply.py .........F.....F......\ntests/frame/test_block_internals.py .........................\ntests/frame/test_combine_concat.py ................\ntests/frame/test_constructors.py .......................................................................................\ntests/frame/test_convert_to.py ........\ntests/frame/test_dtypes.py ...................F.\ntests/frame/test_indexing.py ....................F...............F.....F.......................................................F............\ntests/frame/test_misc_api.py ...................................\ntests/frame/test_missing.py ....................\ntests/frame/test_mutate_columns.py .....F.....\ntests/frame/test_nonunique_indexes.py ......\ntests/frame/test_operators.py .......F..............s.........\ntests/frame/test_query_eval.py .......ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss.........sssssssss...\ntests/frame/test_replace.py ..............F............................\ntests/frame/test_repr_info.py ...F.F..F........F..\ntests/frame/test_reshape.py .............F....\ntests/frame/test_sorting.py ..............\ntests/frame/test_subclass.py ..F.\ntests/frame/test_timeseries.py ..................\ntests/frame/test_to_csv.py ..................................\ntests/series/test_analytics.py ........F...F...................F...F.......FFFF...s....F...Fs..sF.................F..F.....F.......F\ntests/series/test_combine_concat.py .......\ntests/series/test_constructors.py ..........F................F.F...\ntests/series/test_datetime_values.py ...F...\ntests/series/test_dtypes.py ........\ntests/series/test_indexing.py ......F.F...........................F....................................................\ntests/series/test_internals.py .......\ntests/series/test_io.py ............\ntests/series/test_misc_api.py ......F.................\ntests/series/test_missing.py .....................\ntests/series/test_operators.py ...........................F..F...F.F.\ntests/series/test_repr.py .F.........\ntests/series/test_timeseries.py ..................\ntests/test_msgpack/test_buffer.py F.\ntests/test_msgpack/test_case.py .............\ntests/test_msgpack/test_except.py ...\ntests/test_msgpack/test_extension.py ..F\ntests/test_msgpack/test_format.py ..........\ntests/test_msgpack/test_limits.py ........\ntests/test_msgpack/test_newspec.py .....\ntests/test_msgpack/test_obj.py ........\ntests/test_msgpack/test_pack.py ................\ntests/test_msgpack/test_read_size.py ......\ntests/test_msgpack/test_seq.py .\ntests/test_msgpack/test_sequnpack.py ......\ntests/test_msgpack/test_subtype.py .\ntests/test_msgpack/test_unpack.py ...\ntests/test_msgpack/test_unpack_raw.py ..\ntools/tests/test_merge.py ........................................................................................................................\ntools/tests/test_pivot.py ...............................\ntools/tests/test_tile.py ...........................\ntools/tests/test_util.py ..........\ntseries/tests/test_base.py ...........................................................\ntseries/tests/test_converter.py .F........\ntseries/tests/test_daterange.py ............................................................F....\ntseries/tests/test_frequencies.py ..............................................\ntseries/tests/test_holiday.py F.F.FF..F.FFF..........\ntseries/tests/test_offsets.py .......FFFFFFFFFF.......................................................FFFFFFFFFFFFFFFFFFFFFFFFFFFFF.............F......................F.....................s......................................................s..s........s..s...............................................\ntseries/tests/test_period.py .............FF.........................................................................................................................................................................\ntseries/tests/test_plotting.py FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE\ntseries/tests/test_resample.py ...............................................................................................\ntseries/tests/test_timedeltas.py .......................................................................\ntseries/tests/test_timeseries.py .....................................................................................................................s..............F....F.................................\n..............................................................F..FFFsFF.F....s...............\ntseries/tests/test_timezones.py .......................................................................................................................................\ntseries/tests/test_tslib.py .......................FF..F.F................\ntseries/tests/test_util.py ........\n\n================================================================================================== ERRORS ==================================================================================================\n__________________________________________________________________________________ ERROR collecting io/tests/test_sas.py ___________________________________________________________________________________\nio/tests/test_sas.py:4: in <module>\n    from pandas.io.sas import XportReader, read_sas\nE   ImportError: cannot import name 'XportReader'\n___________________________________________________________________________________ ERROR collecting tests/test_style.py ___________________________________________________________________________________\ntests/test_style.py:13: in <module>\n    from pandas.core.style import Styler\ncore/style.py:24: in <module>\n    import matplotlib.pyplot as plt\n../matplotlib/pyplot.py:114: in <module>\n    _backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup()\n../matplotlib/backends/__init__.py:32: in pylab_setup\n    globals(),locals(),[backend_name],0)\n../matplotlib/backends/backend_macosx.py:24: in <module>\n    from matplotlib.backends import _macosx\nE   RuntimeError: Python is not installed as a framework. The Mac OS X backend will not be able to function correctly if Python is not installed as a framework. See the Python documentation for more infor\nmation on installing Python as a framework on Mac OS X. Please either reinstall Python as a framework, or try one of the other backends. If you are Working with Matplotlib in a virtual enviroment see 'Wor\nking with Matplotlib in Virtual environments' in the Matplotlib FAQ\n__________________________________________________________________________________ ERROR collecting tests/test_window.py ___________________________________________________________________________________\ntests/test_window.py:20: in <module>\n    import pandas.core.window as rwindow\ncore/window.py:16: in <module>\n    from pandas.core.base import PandasObject, SelectionMixin\nE   ImportError: cannot import name 'SelectionMixin'\n_____________________________________________________________________________ ERROR collecting tests/frame/test_alter_axes.py ______________________________________________________________________________\ntests/frame/test_alter_axes.py:10: in <module>\n    from pandas import (DataFrame, Series, Index, MultiIndex,\nE   ImportError: cannot import name 'RangeIndex'\n______________________________________________________________________________ ERROR collecting tests/frame/test_analytics.py ______________________________________________________________________________\ntests/frame/test_analytics.py:15: in <module>\n    from pandas import (compat, isnull, notnull, DataFrame, Series,\nE   ImportError: cannot import name '_np_version_under1p11'\n_________________________________________________________________________ ERROR collecting tests/frame/test_axis_select_reindex.py _________________________________________________________________________\ntests/frame/test_axis_select_reindex.py:19: in <module>\n    from pandas.core.common import PerformanceWarning\nE   ImportError: cannot import name 'PerformanceWarning'\n_______________________________________________________________________________ ERROR collecting tests/indexes/test_base.py ________________________________________________________________________________\ntests/indexes/test_base.py:9: in <module>\n    from pandas.indexes.api import Index, MultiIndex\nindexes/api.py:5: in <module>\n    from pandas.indexes.multi import MultiIndex  # noqa\nindexes/multi.py:20: in <module>\n    from pandas.core.common import (isnull, array_equivalent,\nE   ImportError: cannot import name 'PerformanceWarning'\n_____________________________________________________________________________ ERROR collecting tests/indexes/test_category.py ______________________________________________________________________________\ntests/indexes/test_category.py:7: in <module>\n    from pandas.indexes.api import Index, CategoricalIndex\nindexes/api.py:5: in <module>\n    from pandas.indexes.multi import MultiIndex  # noqa\nindexes/multi.py:20: in <module>\n    from pandas.core.common import (isnull, array_equivalent,\nE   ImportError: cannot import name 'PerformanceWarning'\n___________________________________________________________________________ ERROR collecting tests/indexes/test_datetimelike.py ____________________________________________________________________________\ntests/indexes/test_datetimelike.py:16: in <module>\n    from .common import Base\ntests/indexes/common.py:8: in <module>\n    from pandas import (Series, Index, Float64Index, Int64Index, RangeIndex,\nE   ImportError: cannot import name 'RangeIndex'\n_______________________________________________________________________________ ERROR collecting tests/indexes/test_multi.py _______________________________________________________________________________\ntests/indexes/test_multi.py:11: in <module>\n    from pandas.core.common import PerformanceWarning\nE   ImportError: cannot import name 'PerformanceWarning'\n______________________________________________________________________________ ERROR collecting tests/indexes/test_numeric.py ______________________________________________________________________________\ntests/indexes/test_numeric.py:9: in <module>\n    from pandas import (date_range, Series, DataFrame,\nE   ImportError: cannot import name 'RangeIndex'\n_______________________________________________________________________________ ERROR collecting tests/indexes/test_range.py _______________________________________________________________________________\ntests/indexes/test_range.py:11: in <module>\n    from pandas import (Series, Index, Float64Index, Int64Index, RangeIndex)\nE   ImportError: cannot import name 'RangeIndex'\n_____________________________________________________________________________ ERROR collecting tests/series/test_alter_axes.py _____________________________________________________________________________\ntests/series/test_alter_axes.py:8: in <module>\n    from pandas.core.index import MultiIndex, RangeIndex\nE   ImportError: cannot import name 'RangeIndex'\n_____________________________________________________________________________ ERROR at setup of _TestSQLAlchemy.test_aread_sql _____________________________________________________________________________\n\ncls = <class 'pandas.io.tests.test_sql._TestSQLAlchemy'>\n\n    @classmethod\n    def setUpClass(cls):\n        cls.setup_import()\n>       cls.setup_driver()\n\nio/tests/test_sql.py:1113:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'pandas.io.tests.test_sql._TestSQLAlchemy'>\n\n    @classmethod\n    def setup_driver(cls):\n>       raise NotImplementedError()\nE       NotImplementedError\n\nio/tests/test_sql.py:1138: NotImplementedError\ntests/test_graphics.py:3783: in _check_plot_works\n    import matplotlib.pyplot as plt\n../matplotlib/pyplot.py:114: in <module>\n    _backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup()\n../matplotlib/backends/__init__.py:32: in pylab_setup\n    globals(),locals(),[backend_name],0)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    from __future__ import (absolute_import, division, print_function,\n                            unicode_literals)\n\n    from matplotlib.externals import six\n\n    import os\n    import numpy\n\n    from matplotlib._pylab_helpers import Gcf\n    from matplotlib.backend_bases import RendererBase, GraphicsContextBase,\\\n         FigureManagerBase, FigureCanvasBase, NavigationToolbar2, TimerBase\n    from matplotlib.backend_bases import ShowBase\n\n    from matplotlib.cbook import maxdict\n    from matplotlib.figure import Figure\n    from matplotlib.path import Path\n    from matplotlib.mathtext import MathTextParser\n    from matplotlib.colors import colorConverter\n    from matplotlib import rcParams\n\n    from matplotlib.widgets import SubplotTool\n\n    import matplotlib\n>   from matplotlib.backends import _macosx\nE   RuntimeError: Python is not installed as a framework. The Mac OS X backend will not be able to function correctly if Python is not installed as a framework. See the Python documentation for more infor\nmation on installing Python as a framework on Mac OS X. Please either reinstall Python as a framework, or try one of the other backends. If you are Working with Matplotlib in a virtual enviroment see 'Wor\nking with Matplotlib in Virtual environments' in the Matplotlib FAQ\n\n../matplotlib/backends/backend_macosx.py:24: RuntimeError\n_______________________________________________________________________________ TestDataFramePlots.test_scatter_matrix_axis ________________________________________________________________________________\n\nself = <pandas.tests.test_graphics_others.TestDataFramePlots testMethod=test_scatter_matrix_axis>\n\n    def test_scatter_matrix_axis(self):\n        tm._skip_if_no_scipy()\n        scatter_matrix = plotting.scatter_matrix\n\n        with tm.RNGContext(42):\n            df = DataFrame(randn(100, 3))\n\n        axes = _check_plot_works(scatter_matrix, filterwarnings='always', frame=df,\n>                                range_padding=.1)\n\ntests/test_graphics_others.py:430:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests/test_graphics.py:3783: in _check_plot_works\n    import matplotlib.pyplot as plt\n../matplotlib/pyplot.py:114: in <module>\n    _backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup()\n../matplotlib/backends/__init__.py:32: in pylab_setup\n    globals(),locals(),[backend_name],0)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    from __future__ import (absolute_import, division, print_function,\n                            unicode_literals)\n\n    from matplotlib.externals import six\n\n    import os\n    import numpy\n\n    from matplotlib._pylab_helpers import Gcf\n    from matplotlib.backend_bases import RendererBase, GraphicsContextBase,\\\n         FigureManagerBase, FigureCanvasBase, NavigationToolbar2, TimerBase\n    from matplotlib.backend_bases import ShowBase\n\n    from matplotlib.cbook import maxdict\n    from matplotlib.figure import Figure\n    from matplotlib.path import Path\n    from matplotlib.mathtext import MathTextParser\n    from matplotlib.colors import colorConverter\n    from matplotlib import rcParams\n\n    from matplotlib.widgets import SubplotTool\n\n    import matplotlib\n>   from matplotlib.backends import _macosx\nE   RuntimeError: Python is not installed as a framework. The Mac OS X backend will not be able to function correctly if Python is not installed as a framework. See the Python documentation for more infor\nmation on installing Python as a framework on Mac OS X. Please either reinstall Python as a framework, or try one of the other backends. If you are Working with Matplotlib in a virtual enviroment see 'Wor\nking with Matplotlib in Virtual environments' in the Matplotlib FAQ\n\n../matplotlib/backends/backend_macosx.py:24: RuntimeError\n_______________________________________________________________________________ TestDataFramePlots.test_scatter_plot_legacy ________________________________________________________________________________\n\nself = <pandas.tests.test_graphics_others.TestDataFramePlots testMethod=test_scatter_plot_legacy>\n\n    @slow\n    def test_scatter_plot_legacy(self):\n        tm._skip_if_no_scipy()\n\n        df = DataFrame(randn(100, 2))\n\n        def scat(**kwds):\n            return plotting.scatter_matrix(df, **kwds)\n\n>       _check_plot_works(scat)\n\ntests/test_graphics_others.py:405:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests/test_graphics.py:3783: in _check_plot_works\n    import matplotlib.pyplot as plt\n../matplotlib/pyplot.py:114: in <module>\n    _backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup()\n../matplotlib/backends/__init__.py:32: in pylab_setup\n    globals(),locals(),[backend_name],0)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    from __future__ import (absolute_import, division, print_function,\n                            unicode_literals)\n\n    from matplotlib.externals import six\n\n    import os\n    import numpy\n\n    from matplotlib._pylab_helpers import Gcf\n    from matplotlib.backend_bases import RendererBase, GraphicsContextBase,\\\n         FigureManagerBase, FigureCanvasBase, NavigationToolbar2, TimerBase\n    from matplotlib.backend_bases import ShowBase\n\n    from matplotlib.cbook import maxdict\n    from matplotlib.figure import Figure\n    from matplotlib.path import Path\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests/test_panel.py:197: in _check_stat_op\n    if 'numeric_only' in getargspec(f).args:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfunc = <bound method _make_stat_function_ddof.<locals>.stat_func of <class 'pandas.core.panel.Panel'>\nDimensions: 3 (items) x...r_axis)\nItems axis: ItemA to ItemC\nMajor_axis axis: 2000-01-03 00:00:00 to 2000-02-11 00:00:00\nMinor_axis axis: A to D>\n\n    def getargspec(func):\n        \"\"\"Get the names and default values of a function's arguments.\n\n        A tuple of four things is returned: (args, varargs, keywords, defaults).\n        'args' is a list of the argument names, including keyword-only argument names.\n        'varargs' and 'keywords' are the names of the * and ** arguments or None.\n        'defaults' is an n-tuple of the default values of the last n arguments.\n\n        Use the getfullargspec() API for Python 3 code, as annotations\n        and keyword arguments are supported. getargspec() will raise ValueError\n        if the func has either annotations or keyword arguments.\n        \"\"\"\n        warnings.warn(\"inspect.getargspec() is deprecated, \"\n                      \"use inspect.signature() instead\", DeprecationWarning,\n>                     stacklevel=2)\nE       DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() instead\n\n/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/inspect.py:1040: DeprecationWarning\n__________________________________________________________________________________________ TestRPlot.test_rplot1 ___________________________________________________________________________________________\n\nself = <pandas.tests.test_rplot.TestRPlot testMethod=test_rplot1>\n\n    def test_rplot1(self):\n>       import matplotlib.pyplot as plt\n\ntests/test_rplot.py:252:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../matplotlib/pyplot.py:114: in <module>\n    _backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup()\n../matplotlib/backends/__init__.py:32: in pylab_setup\n    globals(),locals(),[backend_name],0)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    from __future__ import (absolute_import, division, print_function,\n                            unicode_literals)\n\n    from matplotlib.externals import six\n\n    import os\n    import numpy\n\n    from matplotlib._pylab_helpers import Gcf\n    from matplotlib.backend_bases import RendererBase, GraphicsContextBase,\\\n         FigureManagerBase, FigureCanvasBase, NavigationToolbar2, TimerBase\n    from matplotlib.backend_bases import ShowBase\n\n    from matplotlib.cbook import maxdict\n    from matplotlib.figure import Figure\n    from matplotlib.path import Path\n    from matplotlib.mathtext import MathTextParser\n    from matplotlib.colors import colorConverter\n    from matplotlib import rcParams\n\n    from matplotlib.widgets import SubplotTool\n\n    import matplotlib\n>   from matplotlib.backends import _macosx\nE   RuntimeError: Python is not installed as a framework. The Mac OS X backend will not be able to function correctly if Python is not installed as a framework. See the Python documentation for more infor\nmation on installing Python as a framework on Mac OS X. Please either reinstall Python as a framework, or try one of the other backends. If you are Working with Matplotlib in a virtual enviroment see 'Wor\nking with Matplotlib in Virtual environments' in the Matplotlib FAQ\n\n../matplotlib/backends/backend_macosx.py:24: RuntimeError\n__________________________________________________________________________________________ TestRPlot.test_rplot2 ___________________________________________________________________________________________\n\nself = <pandas.tests.test_rplot.TestRPlot testMethod=test_rplot2>\n\n    def test_rplot2(self):\n>       import matplotlib.pyplot as plt\n\ntests/test_rplot.py:263:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../matplotlib/pyplot.py:114: in <module>\n    _backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup()\n../matplotlib/backends/__init__.py:32: in pylab_setup\n    globals(),locals(),[backend_name],0)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    from __future__ import (absolute_import, division, print_function,\n                            unicode_literals)\n\n    from matplotlib.externals import six\n\n    import os\n    import numpy\n\n    from matplotlib._pylab_helpers import Gcf\n    from matplotlib.backend_bases import RendererBase, GraphicsContextBase,\\\n         FigureManagerBase, FigureCanvasBase, NavigationToolbar2, TimerBase\n    from matplotlib.backend_bases import ShowBase\n\n    from matplotlib.cbook import maxdict\n    from matplotlib.figure import Figure\n    from matplotlib.path import Path\n    from matplotlib.mathtext import MathTextParser\n    from matplotlib.colors import colorConverter\n    from matplotlib import rcParams\n\n    from matplotlib.widgets import SubplotTool\n\n    import matplotlib\n>   from matplotlib.backends import _macosx\nE   RuntimeError: Python is not installed as a framework. The Mac OS X backend will not be able to function correctly if Python is not installed as a framework. See the Python documentation for more infor\nmation on installing Python as a framework on Mac OS X. Please either reinstall Python as a framework, or try one of the other backends. If you are Working with Matplotlib in a virtual enviroment see 'Wor\nking with Matplotlib in Virtual environments' in the Matplotlib FAQ\n\n../matplotlib/backends/backend_macosx.py:24: RuntimeError\n__________________________________________________________________________________________ TestRPlot.test_rplot3 ___________________________________________________________________________________________\n\nself = <pandas.tests.test_rplot.TestRPlot testMethod=test_rplot3>\n\n    def test_rplot3(self):\n>       import matplotlib.pyplot as plt\n\ntests/test_rplot.py:274:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../matplotlib/pyplot.py:114: in <module>\n    _backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup()\n../matplotlib/backends/__init__.py:32: in pylab_setup\n\ntseries/tests/test_tslib.py:634: DeprecationWarning\n___________________________________________________________________________ TestTimestampNsOperations.test_nanosecond_timestamp ____________________________________________________________________________\n\nself = <pandas.tseries.tests.test_tslib.TestTimestampNsOperations testMethod=test_nanosecond_timestamp>\n\n    def test_nanosecond_timestamp(self):\n        # GH 7610\n        expected = 1293840000000000005\n        t = Timestamp('2011-01-01') + offsets.Nano(5)\n        self.assertEqual(repr(t), \"Timestamp('2011-01-01 00:00:00.000000005')\")\n        self.assertEqual(t.value, expected)\n        self.assertEqual(t.nanosecond, 5)\n\n        t = Timestamp(t)\n        self.assertEqual(repr(t), \"Timestamp('2011-01-01 00:00:00.000000005')\")\n        self.assertEqual(t.value, expected)\n        self.assertEqual(t.nanosecond, 5)\n\n>       t = Timestamp(np.datetime64('2011-01-01 00:00:00.000000005Z'))\nE       DeprecationWarning: parsing timezone aware datetimes is deprecated; this will raise an error in the future\n\ntseries/tests/test_tslib.py:795: DeprecationWarning\n==================================================================== 474 failed, 8722 passed, 1203 skipped, 320 error in 836.03 seconds ==================\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/188526229",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12441#issuecomment-188526229",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12441",
    "id": 188526229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODUyNjIyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-24T23:59:29Z",
    "updated_at": "2016-02-24T23:59:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would say you have an old installation, then tried to overwrite with a new one. create a completely new env, then install it. When you are installing a dev build, you must rebuild the extensions.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/188527938",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12441#issuecomment-188527938",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12441",
    "id": 188527938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODUyNzkzOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-25T00:05:57Z",
    "updated_at": "2016-02-25T00:06:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually I take this back, I don't think we support installing this way because `cython` is a build-time only requirement, not a normal pip install requirement, so the .c files are not generated. pls follow the dev instructions: http://pandas.pydata.org/pandas-docs/stable/contributing.html#contributing\n\nyou can also: simply download the tarball from [here](https://github.com/pydata/pandas/releases/tag/v0.18.0rc1)\n\nor `conda install pandas=v018.0rc1 -c pandas`\n"
  }
]
