[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352136564",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18799#issuecomment-352136564",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18799",
    "id": 352136564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjEzNjU2NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-15T23:24:38Z",
    "updated_at": "2017-12-15T23:24:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "you should certainly not be using this. This was always supposed to be an internal attribute, I am going to deprecate it.\r\n\r\nyou can avoid very easily by just doing a copy on filtered results. or using assign rather than indexing.\r\n\r\ne.g.\r\n\r\n```\r\ndf = df[mask].assign(foo=....)\r\n```\r\nis the pattern\r\n\r\nor you can just turn the warning completely off in a context manager.\r\n\r\nclosing in favor of a deprecation issue #18801 "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352144117",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18799#issuecomment-352144117",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18799",
    "id": 352144117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjE0NDExNw==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-16T00:24:32Z",
    "updated_at": "2017-12-16T00:24:32Z",
    "author_association": "NONE",
    "body": "Thank you for your reply, but I don't follow.\nThe result is already a copy, right?\nWhy do I need to copy it again?\nI can't turn it off in a context manager since I hand the result to the\nuser, and the warning is raised in the user code.\n\nSent from phone. Please excuse spelling and brevity.\n\nOn Dec 15, 2017 18:24, \"Jeff Reback\" <notifications@github.com> wrote:\n\n> Closed #18799 <https://github.com/pandas-dev/pandas/issues/18799>.\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/18799#event-1390490656>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAbcFsr0hjbhy0c90pEThZI4xdpvGcYoks5tAv_IgaJpZM4REBuC>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352144362",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18799#issuecomment-352144362",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18799",
    "id": 352144362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjE0NDM2Mg==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-16T00:26:30Z",
    "updated_at": "2017-12-16T00:26:30Z",
    "author_association": "NONE",
    "body": "I can also not assign, as this is again not in my control. I'm doing a\nmasking operation, and I want to return the masked df over to the user.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352384648",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18799#issuecomment-352384648",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18799",
    "id": 352384648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjM4NDY0OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T10:21:12Z",
    "updated_at": "2017-12-18T10:21:12Z",
    "author_association": "MEMBER",
    "body": "@amueller Could you give a small illustrative example?\r\n\r\nDiscussion about deprecation itself is in https://github.com/pandas-dev/pandas/issues/18801"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352406766",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18799#issuecomment-352406766",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18799",
    "id": 352406766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjQwNjc2Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T12:01:12Z",
    "updated_at": "2017-12-18T12:01:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Canoncially, this is very easy to work with, simply ``.copy()`` after a filter assignment. Agreed that this is not the most intuitive things, but there are many edge cases; copy-on-write fixes this but won't be available in pandas1.\r\n\r\n```\r\nIn [1]: df = pd.DataFrame({'A':[1,2,3]})\r\n\r\nIn [2]: df2 = df[df.A>2]\r\n\r\nIn [3]: df2['B'] = 2\r\n/Users/jreback/miniconda3/envs/pandas/bin/ipython:1: SettingWithCopyWarning: \r\nA value is trying to be set on a copy of a slice from a DataFrame.\r\nTry using .loc[row_indexer,col_indexer] = value instead\r\n\r\nSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\r\n  #!/Users/jreback/miniconda3/envs/pandas/bin/python\r\n\r\nIn [4]: df2\r\nOut[4]: \r\n   A  B\r\n2  3  2\r\n```\r\n\r\nuse ``.copy()`` (or ``.assign()``)\r\n```\r\nIn [1]: df = pd.DataFrame({'A':[1,2,3]})\r\n\r\nIn [2]: df2 = df[df.A>2].copy()\r\n\r\nIn [3]: df2['B'] = 2\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352471124",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18799#issuecomment-352471124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18799",
    "id": 352471124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjQ3MTEyNA==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T16:03:12Z",
    "updated_at": "2017-12-18T16:12:21Z",
    "author_association": "NONE",
    "body": "This was about ``train_test_split`` in sklearn, see https://github.com/scikit-learn/scikit-learn/issues/8723\r\n\r\nBut basically the pattern is:\r\n```python\r\n# library code:\r\n\r\ndef discard_less_than_zero(df):\r\n    return df[df.A >= 0] \r\n\r\n# user code\r\ndf = pd.DataFrame({'A':[1,2,3]})\r\ndf2 = discard_less_than_zero(df)\r\ndf2['B'] = 2\r\n```\r\nThis is of course a contrived example, but I think the same applies whenever you have a library method that returns a sliced dataframe. If ``copy`` is the canonical solution, that's fine.\r\n```python\r\n# library code:\r\n\r\ndef discard_less_than_zero(df):\r\n    return df[df.A >= 0].copy()\r\n```\r\nshould do it. It just seems conceptually odd. If I understand the warning correctly, this means ``df[df.A >= 0]`` is copied *twice*, right? It warns me that ``df[df.A >= 0]`` is a copy, and to get rid of that warning I copy it. (unless ``.copy()`` doesn't actually copy?).\r\n\r\nIf df is on the order of magnitude of the free memory, doing an additional copy can mean not being able to work on certain datasets.\r\n\r\nAnd regarding the deprecation, I'm not married to any method. I just want a canonical way to solve the issue I described above, ideally without making unnecessary copies. I phrased the issue the way I did because the only information I could find was https://github.com/pandas-dev/pandas/issues/6025#issuecomment-32904245, in which @jreback suggests using ``is_copy``, so I thought this was the canonical way of doing this."
  }
]
