[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/258986126",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14608#issuecomment-258986126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14608",
    "id": 258986126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk4NjEyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T22:38:07Z",
    "updated_at": "2016-11-07T22:38:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "can u update the top with some examples of converts that are generally useful?\nand would it make sense to allow converts to take things like:\n\n{'col 1': 'whitespace', 'col 2': 'links', 'col 3': ['whitespace', 'links']}\n\nIOW some predefined mappings to functions which perform certain conversion tasks (of course can also pass a callable)\n\nis the chaining useful (col 3)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259249545",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14608#issuecomment-259249545",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14608",
    "id": 259249545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTI0OTU0NQ==",
    "user": {
      "login": "Amaelb",
      "id": 23309039,
      "node_id": "MDQ6VXNlcjIzMzA5MDM5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/23309039?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amaelb",
      "html_url": "https://github.com/Amaelb",
      "followers_url": "https://api.github.com/users/Amaelb/followers",
      "following_url": "https://api.github.com/users/Amaelb/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amaelb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amaelb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amaelb/subscriptions",
      "organizations_url": "https://api.github.com/users/Amaelb/orgs",
      "repos_url": "https://api.github.com/users/Amaelb/repos",
      "events_url": "https://api.github.com/users/Amaelb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amaelb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-08T20:26:08Z",
    "updated_at": "2016-11-08T23:22:11Z",
    "author_association": "NONE",
    "body": "Predefined mappings would be quite helpful and chaining would make them much more flexible. So I would be very happy to have both.\nWould chaining be easy to get (assuming everything else right) ?\n\nUsing `converts`, I went into something strange : \nIf I understand correctly, `converts` seems to expect throw an error if an integer key greater than the number of columns is provided. The function `read_html` returning a list of `dataframe`, it is thus not possible to reach the the ending columns of most of the `dataframes` if one of them have less columns than the others.\nMaybe converters should be passed as a list of dicts to `read_html` ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259402593",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14608#issuecomment-259402593",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14608",
    "id": 259402593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQwMjU5Mw==",
    "user": {
      "login": "Amaelb",
      "id": 23309039,
      "node_id": "MDQ6VXNlcjIzMzA5MDM5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/23309039?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amaelb",
      "html_url": "https://github.com/Amaelb",
      "followers_url": "https://api.github.com/users/Amaelb/followers",
      "following_url": "https://api.github.com/users/Amaelb/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amaelb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amaelb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amaelb/subscriptions",
      "organizations_url": "https://api.github.com/users/Amaelb/orgs",
      "repos_url": "https://api.github.com/users/Amaelb/repos",
      "events_url": "https://api.github.com/users/Amaelb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amaelb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T12:22:07Z",
    "updated_at": "2016-11-09T12:22:07Z",
    "author_association": "NONE",
    "body": "I will open a new ticket about the aformentioned problem as it is confirmed on other examples \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259910058",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14608#issuecomment-259910058",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14608",
    "id": 259910058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTkxMDA1OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-11T08:48:57Z",
    "updated_at": "2016-11-11T08:48:57Z",
    "author_association": "MEMBER",
    "body": "@Amaelb I am not a heavy user of `read_html`, but from your examples this does indeed seem useful. If you want to work on this, we would certainly like to review/accept a PR I think.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/261401357",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14608#issuecomment-261401357",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14608",
    "id": 261401357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTQwMTM1Nw==",
    "user": {
      "login": "Amaelb",
      "id": 23309039,
      "node_id": "MDQ6VXNlcjIzMzA5MDM5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/23309039?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amaelb",
      "html_url": "https://github.com/Amaelb",
      "followers_url": "https://api.github.com/users/Amaelb/followers",
      "following_url": "https://api.github.com/users/Amaelb/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amaelb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amaelb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amaelb/subscriptions",
      "organizations_url": "https://api.github.com/users/Amaelb/orgs",
      "repos_url": "https://api.github.com/users/Amaelb/repos",
      "events_url": "https://api.github.com/users/Amaelb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amaelb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-17T23:20:18Z",
    "updated_at": "2016-11-17T23:20:18Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche I have taken some time to evaluate the feasibility of this.\n\nWhen `read_html` returns an unique DF, there is a quite straightforward solution using converters.\nBut if several  tables are selected, #14624 prevent the use of converters.\n\nSince modifying parsing.py to fix #14624 would have an impact on performances of other I/O tools, it needs to be carefully thought and I have not enough background on pandas to try this.\n\nHowever there is maybe a simple solution: adding a parameter to `read_html` giving the choice to return either the text or the full node in the DF, letting user handling data.\n\nBut this is somewhat different of what was proposed here, and of what further discussed by @jreback.\n\nLet me know your opinion about it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/274268024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14608#issuecomment-274268024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14608",
    "id": 274268024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDI2ODAyNA==",
    "user": {
      "login": "psychemedia",
      "id": 82988,
      "node_id": "MDQ6VXNlcjgyOTg4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/82988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psychemedia",
      "html_url": "https://github.com/psychemedia",
      "followers_url": "https://api.github.com/users/psychemedia/followers",
      "following_url": "https://api.github.com/users/psychemedia/following{/other_user}",
      "gists_url": "https://api.github.com/users/psychemedia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psychemedia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psychemedia/subscriptions",
      "organizations_url": "https://api.github.com/users/psychemedia/orgs",
      "repos_url": "https://api.github.com/users/psychemedia/repos",
      "events_url": "https://api.github.com/users/psychemedia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psychemedia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-21T15:24:05Z",
    "updated_at": "2017-01-21T15:24:05Z",
    "author_association": "NONE",
    "body": "One issue I keep facing is the collapsing of multiple `<br>` lines in a cell being collapsed in a way that is hard to parse eg `this<br>or that` becomes `thisor that`.\r\n\r\nHaving a converter that replaces `<br>` with a space, or splits blocks (`<div>`,`<p>` etc) into lists of blocked content might be handy. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303599256",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14608#issuecomment-303599256",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14608",
    "id": 303599256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzU5OTI1Ng==",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T02:19:27Z",
    "updated_at": "2017-05-24T02:19:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for the need to identify logical linebreaks defined by `<p>`, `<br>` and perhaps other block-nodes.\r\n\r\nAnother way of treating this problem is to just have a converter called `raw_html`, which will do no cleaning and conversion, allowing the user to post-process the contents of each cell. While this does not provide predefined user-friendly converters (at least not initially), it gives users full power while exploiting `read_html` as far as is reasonable, and avoids issues of code not handling different `flavor`s."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303601783",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14608#issuecomment-303601783",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14608",
    "id": 303601783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzYwMTc4Mw==",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T02:39:31Z",
    "updated_at": "2017-05-24T11:48:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "The main problem I can see for any of these is that in the current code structure we need to determine whether to retain raw HTML before we've identified column names used to key conversion.\r\n\r\nA clean solution would require the identification of column names to occur in `_parse_raw_data`\r\n\r\nA more feasible but slightly hacky solution would always return raw elements, but then clean headers ~and index~, as well as hacking `converters` to have a conversion function for everything (a bit like above)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303717532",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14608#issuecomment-303717532",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14608",
    "id": 303717532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzcxNzUzMg==",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T13:05:12Z",
    "updated_at": "2017-05-24T13:05:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems like cleaning column names before `TextParser` is hard since the logic for identifying headers is not trivial. Similarly, it's hard to do `TextParser` before name-specified options are applied because their logic is non-trivial.\r\n\r\nThis is proving hard to implement without adding extra features to `PythonParser` such as `header_converter` and `default_converter`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303959646",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14608#issuecomment-303959646",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14608",
    "id": 303959646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzk1OTY0Ng==",
    "user": {
      "login": "psychemedia",
      "id": 82988,
      "node_id": "MDQ6VXNlcjgyOTg4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/82988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psychemedia",
      "html_url": "https://github.com/psychemedia",
      "followers_url": "https://api.github.com/users/psychemedia/followers",
      "following_url": "https://api.github.com/users/psychemedia/following{/other_user}",
      "gists_url": "https://api.github.com/users/psychemedia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psychemedia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psychemedia/subscriptions",
      "organizations_url": "https://api.github.com/users/psychemedia/orgs",
      "repos_url": "https://api.github.com/users/psychemedia/repos",
      "events_url": "https://api.github.com/users/psychemedia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psychemedia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T08:57:36Z",
    "updated_at": "2017-05-25T08:57:36Z",
    "author_association": "NONE",
    "body": "@jnothman Having the option to get the raw HTML would always be useful as a fall back if the current parsers do break for a particular scrape?"
  }
]
