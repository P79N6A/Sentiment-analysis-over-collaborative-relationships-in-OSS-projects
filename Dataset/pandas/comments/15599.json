[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/284726802",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15599#issuecomment-284726802",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15599",
    "id": 284726802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDcyNjgwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-07T13:53:22Z",
    "updated_at": "2017-03-07T13:53:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "the window routines are only defined for double (in cython), so this would be a special case. Why is it necessary to add this complexity (IOW this is *only* possible for this special case)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/284833222",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15599#issuecomment-284833222",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15599",
    "id": 284833222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDgzMzIyMg==",
    "user": {
      "login": "mwiebusch78",
      "id": 4977570,
      "node_id": "MDQ6VXNlcjQ5Nzc1NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4977570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwiebusch78",
      "html_url": "https://github.com/mwiebusch78",
      "followers_url": "https://api.github.com/users/mwiebusch78/followers",
      "following_url": "https://api.github.com/users/mwiebusch78/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwiebusch78/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwiebusch78/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwiebusch78/subscriptions",
      "organizations_url": "https://api.github.com/users/mwiebusch78/orgs",
      "repos_url": "https://api.github.com/users/mwiebusch78/repos",
      "events_url": "https://api.github.com/users/mwiebusch78/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwiebusch78/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-07T19:33:20Z",
    "updated_at": "2017-03-07T19:33:20Z",
    "author_association": "NONE",
    "body": "Well, if you're using ints to avoid rounding errors (e.g. because you later want to select rows based on their value in the integer column) it would be nice to have a function for computing rolling sums which doesn't mess with the type.\r\n\r\nHowever, I didn't realise that *all* the windowing functions are only implemented for floats. I assumed the reason for the conversion was that integers can't be NaN. A common pattern I use is to call `rolling(n)` without the `min_periods` option and then discard the first `n-1` rows (which have NaNs because the window wasn't full). So, I was hoping I could prevent the conversion to floats by avoiding NaNs."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/284838896",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15599#issuecomment-284838896",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15599",
    "id": 284838896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDgzODg5Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-07T19:51:55Z",
    "updated_at": "2017-03-07T19:51:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mwiebusch78 \r\n\r\nthere are no rounding errors for ints, so not sure what you mean. Sure you can do\r\n\r\n``df.rolling(...).sum().dropna().astype(int)`` if you like. It will be performant and allow you to cast the type.\r\n\r\nYes we currently *always* have float outtypes because virtually *all* rolling operations produce a float (the exceptions are count and sum when integers are input, but we coerce because of the NaN). Note this is not specific to ``.rolling``, but is true for integer operations that produce (possibly) NaN output.\r\n\r\nclosing as won't fix, but if you'd like to submit a PR would take it (its a bit of work, you'd have to either template code generate, we use tempita for this in many places, or use a fused numeric type)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410543701",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15599#issuecomment-410543701",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15599",
    "id": 410543701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDU0MzcwMQ==",
    "user": {
      "login": "marcusinthesky",
      "id": 26429489,
      "node_id": "MDQ6VXNlcjI2NDI5NDg5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/26429489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcusinthesky",
      "html_url": "https://github.com/marcusinthesky",
      "followers_url": "https://api.github.com/users/marcusinthesky/followers",
      "following_url": "https://api.github.com/users/marcusinthesky/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcusinthesky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcusinthesky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcusinthesky/subscriptions",
      "organizations_url": "https://api.github.com/users/marcusinthesky/orgs",
      "repos_url": "https://api.github.com/users/marcusinthesky/repos",
      "events_url": "https://api.github.com/users/marcusinthesky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcusinthesky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-05T19:54:47Z",
    "updated_at": "2018-08-05T19:54:47Z",
    "author_association": "NONE",
    "body": "I am trying to solve a natural language problem which requires me doing a rolling join or sum of strings.  While I understand the performance issue, having generic rolling regardless of type would be incredibly useful for users.  But also thanks to the makers of this feature generally, super useful in other contexts.  "
  }
]
