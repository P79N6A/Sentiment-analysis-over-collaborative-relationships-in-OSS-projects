[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/85157703",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9712#issuecomment-85157703",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9712",
    "id": 85157703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTU3NzAz",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T19:25:43Z",
    "updated_at": "2015-03-23T19:25:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd say this is not intended, but I haven't worked on this part of the code. It's being written to file anyway, so (python 3) bytes written to `csv` should be identical to (python 3) `str`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/85161770",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9712#issuecomment-85161770",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9712",
    "id": 85161770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTYxNzcw",
    "user": {
      "login": "dsm054",
      "id": 980054,
      "node_id": "MDQ6VXNlcjk4MDA1NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/980054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsm054",
      "html_url": "https://github.com/dsm054",
      "followers_url": "https://api.github.com/users/dsm054/followers",
      "following_url": "https://api.github.com/users/dsm054/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsm054/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsm054/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsm054/subscriptions",
      "organizations_url": "https://api.github.com/users/dsm054/orgs",
      "repos_url": "https://api.github.com/users/dsm054/repos",
      "events_url": "https://api.github.com/users/dsm054/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsm054/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T19:38:26Z",
    "updated_at": "2015-03-23T19:38:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW I think that's actually the output I'd expect in 3. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/85165804",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9712#issuecomment-85165804",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9712",
    "id": 85165804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTY1ODA0",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T19:47:18Z",
    "updated_at": "2015-03-23T19:47:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess I would expect behavior similar to \n\n``` python\nwith open('tmp.txt', 'wb') as f:\n    f.write('abc'.encode('utf-8'))\n```\n\nwhich doesn't have the `b` prefix.\n\nThe caveat here is that you have to explicitly open the file in `wb` mode since you're writing bytes. That can't work for DataFrames (I don't think) since you could have a mix of bytes and strs across columns. Do we support `wb` mode in `to_csv`? I get an error when we try to open the file handle.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/85235657",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9712#issuecomment-85235657",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9712",
    "id": 85235657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MjM1NjU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T22:42:10Z",
    "updated_at": "2015-03-23T22:42:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you just need to pass the `encoding` argument when writing it (otherwise it defaults to `ascii` on py2 and `utf-8` on py3). This is from py2\n\n```\nIn [2]: from pandas.compat import u\n\nIn [3]: df = DataFrame({u('c/\\u03c3'): [1, 2, 3]})\n\nIn [4]: df\nOut[4]: \n   c/?\n0    1\n1    2\n2    3\n\nIn [5]: df.to_csv('tmp.csv',mode='w',encoding='UTF_8')\n\nIn [6]: !cat tmp.csv\n,c/√è\n0,1\n1,2\n2,3\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209721522",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9712#issuecomment-209721522",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9712",
    "id": 209721522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTcyMTUyMg==",
    "user": {
      "login": "zhuoqiang",
      "id": 639099,
      "node_id": "MDQ6VXNlcjYzOTA5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/639099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhuoqiang",
      "html_url": "https://github.com/zhuoqiang",
      "followers_url": "https://api.github.com/users/zhuoqiang/followers",
      "following_url": "https://api.github.com/users/zhuoqiang/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhuoqiang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhuoqiang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhuoqiang/subscriptions",
      "organizations_url": "https://api.github.com/users/zhuoqiang/orgs",
      "repos_url": "https://api.github.com/users/zhuoqiang/repos",
      "events_url": "https://api.github.com/users/zhuoqiang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhuoqiang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T02:01:54Z",
    "updated_at": "2016-04-14T02:02:06Z",
    "author_association": "NONE",
    "body": "It'd better that padas have a configurable parameter in `to_csv()` so that people could control how to render `bytes` in csv file. Otherwise we have to manally convert `bytes` to `string` before io output\n\n``` py\ndf['Column'] =df['Column'].astype(str)\ndf.to_csv('output.csv')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/230807739",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9712#issuecomment-230807739",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9712",
    "id": 230807739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDgwNzczOQ==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-06T15:27:39Z",
    "updated_at": "2016-07-06T15:27:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have this problem also.  Here's a trivial example that I think most regular users would expect to work differently:\n\n```\n>>> import pandas as pd\n>>> import sys\n>>> pd.Series([b'x',b'y']).to_csv(sys.stdout)\n0,b'x'\n1,b'y'\n\n>>> pd.__version__\n'0.18.1'\n```\n\nThat is, the CSV is created with Python-specific `b` prefixes, which other programs don't know what to do with.  CSV is not just a Python data interchange format, it's what a ton of people use to dump their data into other systems, and the above should \"just work\" the same as it does in Python 2:\n\n```\n0,x\n1,y\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/230822450",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9712#issuecomment-230822450",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9712",
    "id": 230822450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDgyMjQ1MA==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-06T16:12:17Z",
    "updated_at": "2016-07-06T16:12:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zhuoqiang What I think you meant is you have to do this:\n\n```\ndf['Column'] = df['Column'].str.decode('ascii') # or utf-8 etc.\n```\n\nSimply doing `astype(str)` doesn't help--the `to_csv()` output still contains `b'...'` wrappers.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235385527",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9712#issuecomment-235385527",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9712",
    "id": 235385527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTM4NTUyNw==",
    "user": {
      "login": "goodboy",
      "id": 291685,
      "node_id": "MDQ6VXNlcjI5MTY4NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/291685?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/goodboy",
      "html_url": "https://github.com/goodboy",
      "followers_url": "https://api.github.com/users/goodboy/followers",
      "following_url": "https://api.github.com/users/goodboy/following{/other_user}",
      "gists_url": "https://api.github.com/users/goodboy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/goodboy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/goodboy/subscriptions",
      "organizations_url": "https://api.github.com/users/goodboy/orgs",
      "repos_url": "https://api.github.com/users/goodboy/repos",
      "events_url": "https://api.github.com/users/goodboy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/goodboy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-26T19:56:15Z",
    "updated_at": "2016-07-26T19:56:15Z",
    "author_association": "NONE",
    "body": "I totally agree with @jzwinck.\nHow can you in any way justify leaking python's encoding system syntax into a generic data exchange format?\n\nWhen you use `pd.read_csv()` and an [_Array-protocol type strings_](http://docs.scipy.org/doc/numpy/reference/arrays.dtypes.html) `dtype` round tripping gets messed up:\n\n``` python\nimport pandas as pd\nfname = './blah.csv'\npd.Series([b'x',b'y']).to_csv(fname)\n```\n\n``` python\n>>> pd.read_csv(fname, dtype='S5')\n     0     b'x'\n0  b'1'  b\"b'y'\"\n```\n\nUsing `dtype=str` or `dtype='S'` does works as expected however?\n\n``` python\n>>> pd.read_csv(fname, dtype='S')\n   0  b'x'\n0  1  b'y'\n```\n\nI actually even find ^ unexpected since it seems to be interpreting as python string literals automatically?\n\nIf a user chooses to load CSV data as `bytes` it should be specified explicitly just like it works when you write out unicode and **not** inferred from python's encoding specific markup:\n\n``` python\n>>> pd.Series(['x', 'y']).to_csv(fname)\n>>> pd.read_csv(fname)\n   0  x\n0  1  y\n>>> >>> pd.read_csv(fname, dtype='S10')\n   0  b'x'\n0  1  b'y'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235591968",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9712#issuecomment-235591968",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9712",
    "id": 235591968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTU5MTk2OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T13:54:18Z",
    "updated_at": "2016-07-27T13:55:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "> How can you in any way justify leaking python's encoding system syntax into a generic data exchange format?\n\nI think everyone agrees that writing out the `b` prefixes is a bug :) My question is whether we should either\n1. attempt to decode all the bytes to text in `to_csv` before writing, using the provided encoding\n2. Raise an error, directing the user to perform the decoding before attempting `to_csv`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235604313",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9712#issuecomment-235604313",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9712",
    "id": 235604313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTYwNDMxMw==",
    "user": {
      "login": "goodboy",
      "id": 291685,
      "node_id": "MDQ6VXNlcjI5MTY4NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/291685?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/goodboy",
      "html_url": "https://github.com/goodboy",
      "followers_url": "https://api.github.com/users/goodboy/followers",
      "following_url": "https://api.github.com/users/goodboy/following{/other_user}",
      "gists_url": "https://api.github.com/users/goodboy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/goodboy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/goodboy/subscriptions",
      "organizations_url": "https://api.github.com/users/goodboy/orgs",
      "repos_url": "https://api.github.com/users/goodboy/repos",
      "events_url": "https://api.github.com/users/goodboy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/goodboy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T14:34:13Z",
    "updated_at": "2016-07-27T14:34:13Z",
    "author_association": "NONE",
    "body": "@TomAugspurger My vote's for 1.\n\nSince the `encoding` kwarg determines the file's encoding any mismatching text-like data should be apropriately encoded before writing.\n\nI'm getting worried though (especially being new to py3) because apparently even print does this?\n\n``` python\n>>> print(b'doggy')\nb'doggy'\n```\n\nSo maybe @dsm054 was right?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236714522",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9712#issuecomment-236714522",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9712",
    "id": 236714522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjcxNDUyMg==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T21:32:04Z",
    "updated_at": "2016-08-01T21:32:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger: I prefer your number 1: just decode, because that's what most users would want.\n\n@tgoodlet: It doesn't matter what `print` does.  Print is sort of a hybrid between being \"pretty\" and showing you what you'd need to reconstruct the variable.  CSV writing is somewhat orthogonal.\n"
  }
]
