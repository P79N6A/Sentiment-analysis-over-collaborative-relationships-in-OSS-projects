[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10574415",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2306#issuecomment-10574415",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2306",
    "id": 10574415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTc0NDE1",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-20T21:40:50Z",
    "updated_at": "2012-11-20T21:40:50Z",
    "author_association": "MEMBER",
    "body": "I've noticed this bug as well. I'll have to see how difficult it is to fix\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10574472",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2306#issuecomment-10574472",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2306",
    "id": 10574472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTc0NDcy",
    "user": {
      "login": "pikeas",
      "id": 686573,
      "node_id": "MDQ6VXNlcjY4NjU3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/686573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pikeas",
      "html_url": "https://github.com/pikeas",
      "followers_url": "https://api.github.com/users/pikeas/followers",
      "following_url": "https://api.github.com/users/pikeas/following{/other_user}",
      "gists_url": "https://api.github.com/users/pikeas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pikeas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pikeas/subscriptions",
      "organizations_url": "https://api.github.com/users/pikeas/orgs",
      "repos_url": "https://api.github.com/users/pikeas/repos",
      "events_url": "https://api.github.com/users/pikeas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pikeas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-20T21:42:13Z",
    "updated_at": "2012-11-20T21:42:13Z",
    "author_association": "NONE",
    "body": "Probably not an issue with string parsing, as I just tried `df.ix[datetime(2012, 1, 5)]` with the same result.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10574738",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2306#issuecomment-10574738",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2306",
    "id": 10574738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTc0NzM4",
    "user": {
      "login": "pikeas",
      "id": 686573,
      "node_id": "MDQ6VXNlcjY4NjU3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/686573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pikeas",
      "html_url": "https://github.com/pikeas",
      "followers_url": "https://api.github.com/users/pikeas/followers",
      "following_url": "https://api.github.com/users/pikeas/following{/other_user}",
      "gists_url": "https://api.github.com/users/pikeas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pikeas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pikeas/subscriptions",
      "organizations_url": "https://api.github.com/users/pikeas/orgs",
      "repos_url": "https://api.github.com/users/pikeas/repos",
      "events_url": "https://api.github.com/users/pikeas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pikeas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-20T21:49:09Z",
    "updated_at": "2012-11-20T21:51:43Z",
    "author_association": "NONE",
    "body": "More info that may help you track it down:\n\nSlicing with `df.ix['1/5/2012':'1/6/2012']` works correctly, but `df.ix['1/5/2012':'1/5/2012']` shows the same incorrect result.\n\nI then tried `df.ix['1/2012':'1/2012'] to see what the \"correct\" response for this sort of slice is, and was surprised to see the same bug! Only this time the outputted value seems...a bit random:\n\n```\nIn [321]: df2.ix['1/2012':'1/2012']\nOut[321]: \n                   A\n2012-01-20 -0.079448\n```\n\nWhy on earth would slicing from the year to itself return a single value from the middle of the range?\n\nHope this helps!\n\n**Correction**:  `df.ix['1/5/2012':'1/6/2012']` is actually incorrect - it fetches all values for 1/5, but also gets the first value from 1/6.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10576601",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2306#issuecomment-10576601",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2306",
    "id": 10576601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTc2NjAx",
    "user": {
      "login": "pikeas",
      "id": 686573,
      "node_id": "MDQ6VXNlcjY4NjU3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/686573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pikeas",
      "html_url": "https://github.com/pikeas",
      "followers_url": "https://api.github.com/users/pikeas/followers",
      "following_url": "https://api.github.com/users/pikeas/following{/other_user}",
      "gists_url": "https://api.github.com/users/pikeas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pikeas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pikeas/subscriptions",
      "organizations_url": "https://api.github.com/users/pikeas/orgs",
      "repos_url": "https://api.github.com/users/pikeas/repos",
      "events_url": "https://api.github.com/users/pikeas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pikeas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-20T22:27:31Z",
    "updated_at": "2012-11-20T22:27:31Z",
    "author_association": "NONE",
    "body": "(Sorry for the comment spam!)\n\nI've just found another, possibly related, bug. Let me know if you'd like me to break this off into a separate GitHub issue.\n\n```\nrng_dates = DatetimeIndex('1/1/2012', '1/2/2012', '1/2/2012', '1/4/2012')\nvals = np.arange(4)\ndf = DataFrame(vals, index=rng_dates)\n```\n\nHere, `df.resample('D')` works as expected:\n\n```\nOut[337]: \n              0\n2012-01-01  1.0\n2012-01-02  2.5\n2012-01-03  NaN\n2012-01-04  4.0\n```\n\nHowever, watch what happens when we change the datetimes to timestamps:\n\n```\n# Switching formats slightly so the parser doesn't complain\nrng_times = DatetimeIndex(['1-1-2012 01:00', '1-2-2012 1:00', '1-2-2012 1:01', '1-4-2012 1:00'])\ndf = DataFrame(vals, index=rng_times)\ndf.resample('D')\n```\n\nProduces:\n\n```\nOut[355]: \n              0\n2012-01-02  0.0\n2012-01-03  1.5\n2012-01-04  NaN\n2012-01-05  3.0\n```\n\nI thought this might be because the days were aligning to the hour I chose (1:00), so I tried:\n\n```\nrng_times = DatetimeIndex(['1-1-2012 00:00', '1-2-2012 0:00', '1-2-2012 0:01', '1-4-2012 0:00'])\ndf = DataFrame(vals, index=rng_times)\ndf.resample('D')\n```\n\nThis worked as expected, so I tried one last thing:\n\n```\nrng_times = DatetimeIndex(['1-1-2012 00:00', '1-2-2012 0:00', '1-2-2012 0:01', '1-4-2012 1:00'])\ndf = DataFrame(vals, index=rng_times)\ndf.resample('D')\n```\n\nThe only change being the last data point, moved from 0:00 to 1:00, but remaining on the same day. And behold:\n\n```\nOut[367]: \n              0\n2012-01-01  0.0\n2012-01-02  1.5\n2012-01-03  NaN\n2012-01-04  NaN\n2012-01-05  3.0\n```\n\nSo...uh...I feel like I've gone down a rabbit hole! Am I in bug central, or am I misunderstanding how pandas date ranges work?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10733382",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2306#issuecomment-10733382",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2306",
    "id": 10733382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzMzMzgy",
    "user": {
      "login": "pikeas",
      "id": 686573,
      "node_id": "MDQ6VXNlcjY4NjU3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/686573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pikeas",
      "html_url": "https://github.com/pikeas",
      "followers_url": "https://api.github.com/users/pikeas/followers",
      "following_url": "https://api.github.com/users/pikeas/following{/other_user}",
      "gists_url": "https://api.github.com/users/pikeas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pikeas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pikeas/subscriptions",
      "organizations_url": "https://api.github.com/users/pikeas/orgs",
      "repos_url": "https://api.github.com/users/pikeas/repos",
      "events_url": "https://api.github.com/users/pikeas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pikeas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-26T20:53:25Z",
    "updated_at": "2012-11-26T20:53:25Z",
    "author_association": "NONE",
    "body": "Do you have any recommendations on how to work around this issue, and on when this bug can be expected to trigger?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10737602",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2306#issuecomment-10737602",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2306",
    "id": 10737602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzM3NjAy",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-26T22:42:49Z",
    "updated_at": "2012-11-26T22:42:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "DataFrame.resample has keywords `closed` and `label` both defaulted to 'right'. If you change them to 'left' it should give you the right results for your second example. See docstring for details:\n\n```\n# Switching formats slightly so the parser doesn't complain\nrng_times = DatetimeIndex(['1-1-2012 01:00', '1-2-2012 1:00', '1-2-2012 1:01', '1-4-2012 1:00'])\ndf = DataFrame(vals, index=rng_times)\ndf.resample('D', closed='left', label='right')\n```\n\n```\nOut[47]: \n              0\n2012-01-01  0.0\n2012-01-02  1.5\n2012-01-03  NaN\n2012-01-04  3.0\n```\n\nNow your last example seems to be a bug in the parser. If you examine the index, '1-2-2012 0:01' is actually being parsed as midnight for some reason. \n\n```\nIn [54]: rng_times = DatetimeIndex(['1-1-2012 00:00', '1-2-2012 0:00', '1-2-2012 0:01', '1-4-2012 0:00'])\n\nIn [55]: rng_times[2]\nOut[55]: <Timestamp: 2012-01-02 00:00:00>\n```\n\nWe'll put in a fix for this. As a workaround, use `pd.to_datetime`:\n\n```\nIn [56]: rng_times = pd.to_datetime(['1-1-2012 00:00', '1-2-2012 0:00', '1-2-2012 0:01', '1-4-2012 0:00'])\n\nIn [57]: rng_times[2]\nOut[57]: <Timestamp: 2012-01-02 00:01:00>\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10738708",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2306#issuecomment-10738708",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2306",
    "id": 10738708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzM4NzA4",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-26T23:09:39Z",
    "updated_at": "2012-11-26T23:09:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should have broken this into two issues. This commit does not fix original issue but fixes datetime parsing bug in section starting \"(Sorry for the comment spam!)\"\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10764953",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2306#issuecomment-10764953",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2306",
    "id": 10764953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzY0OTUz",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-27T16:34:24Z",
    "updated_at": "2012-11-27T16:34:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pikeas as for the original issue, python dateutil parses '2012-01-01' as a datetime at midnight, so that's why it returns the first entry.\n\nThere is special handling inside pandas for YYYY and YYYY-MM type of strings to use as \"partial date slices\". I'll have to do more digging but I don't think there's an easy way to do that for YYYY-MM-DD that both retains performance and doesn't impact other use cases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10765172",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2306#issuecomment-10765172",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2306",
    "id": 10765172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzY1MTcy",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-27T16:39:20Z",
    "updated_at": "2012-11-27T16:39:20Z",
    "author_association": "MEMBER",
    "body": "note: indexing time series with strings is purely convenience-- so we could sacrifice performance for correctness here. The main issue I saw in this is recognizing daily-only time series from intraday time series-- in some sense in this case you might want to check that there are all midnight timestamps and cache that so you know whether to return scalar values or sub-TimeSeries\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10765442",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2306#issuecomment-10765442",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2306",
    "id": 10765442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzY1NDQy",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-27T16:45:05Z",
    "updated_at": "2012-11-27T16:45:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh you know what is_normalized is already cached so we can use that\n\nOn Nov 27, 2012, at 11:39 AM, Wes McKinney notifications@github.com wrote:\n\n> note: indexing time series with strings is purely convenience-- so we could sacrifice performance for correctness here. The main issue I saw in this is recognizing daily-only time series from intraday time series-- in some sense in this case you might want to check that there are all midnight timestamps and cache that so you know whether to return scalar values or sub-TimeSeries\n"
  }
]
