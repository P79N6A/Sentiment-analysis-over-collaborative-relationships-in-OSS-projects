[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48325692",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7690#issuecomment-48325692",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7690",
    "id": 48325692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzI1Njky",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T11:43:03Z",
    "updated_at": "2014-07-08T11:43:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "dupe here: https://github.com/pydata/pandas/issues/2033\n\nThis was an original API decision to make `.loc/.ix` act like a `reindex` when presented with a `slice/index-like`, e.g.\n\n`df.loc['a':'f']` only requires the inclusion of the end-points so\n`df.loc[list(....)]` only requires at least 1 point that is included. \n\nyou can simply `df.loc[list(...)].dropna()` if you are doing an `isin` type of operation (or you can\ndo some sort of `join` if you want.)\n\nfurther you would completely break (I suppose it could work with special casing, maybe), a very common operation:\n\n```\nIn [3]: df = DataFrame(np.arange(6),index=pd.MultiIndex.from_product([['a','b'],range(3)]))\n\nIn [4]: df\nOut[4]: \n     0\na 0  0\n  1  1\n  2  2\nb 0  3\n  1  4\n  2  5\n\nIn [6]: df.loc[['a']]\nOut[6]: \n     0\na 0  0\n  1  1\n  2  2\n\nIn [8]: df.index.values\nOut[8]: array([('a', 0), ('a', 1), ('a', 2), ('b', 0), ('b', 1), ('b', 2)], dtype=object)\n```\n\nif you would like to enhance the docs that would be fine.\n\nclosing as a dupe\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48349555",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7690#issuecomment-48349555",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7690",
    "id": 48349555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzQ5NTU1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T15:03:42Z",
    "updated_at": "2014-07-08T15:03:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "as a side note its possible somthing like:\n\n`df.loc(strict=True)[.....]` could be done, that could set a 'strict' mode (and possibly have an option for this).\nnot sure how useful / trouble this is worth though\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48354164",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7690#issuecomment-48354164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7690",
    "id": 48354164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzU0MTY0",
    "user": {
      "login": "DrEhrfurchtgebietend",
      "id": 8100100,
      "node_id": "MDQ6VXNlcjgxMDAxMDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8100100?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrEhrfurchtgebietend",
      "html_url": "https://github.com/DrEhrfurchtgebietend",
      "followers_url": "https://api.github.com/users/DrEhrfurchtgebietend/followers",
      "following_url": "https://api.github.com/users/DrEhrfurchtgebietend/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrEhrfurchtgebietend/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrEhrfurchtgebietend/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrEhrfurchtgebietend/subscriptions",
      "organizations_url": "https://api.github.com/users/DrEhrfurchtgebietend/orgs",
      "repos_url": "https://api.github.com/users/DrEhrfurchtgebietend/repos",
      "events_url": "https://api.github.com/users/DrEhrfurchtgebietend/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrEhrfurchtgebietend/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T15:28:16Z",
    "updated_at": "2014-07-08T15:28:16Z",
    "author_association": "NONE",
    "body": "I would be strongly in favor of such an implementation however I do not know how much effort it will be so the worth is unknown. I would think that this is basic functionality and I can't think of when the current functionality would be useful. Perhaps a option with set theory ('Union', 'intersection') or SQL ('Inner','Outer') semantics would be more clear in the implementation than 'strict'.\n\nThe current work around `Smalldf = Smalldf[Smalldf.index.isin(Largedf.index))]` as given in the stack overflow answer is more cumbersome and possibly slower than `Smalldf = Smalldf.loc[Largedf.index]`\n\nAlso, `Smalldf = Smalldf.loc[Largedf.index].dropna()` does not work because I often have meaningful NULL values.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48356035",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7690#issuecomment-48356035",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7690",
    "id": 48356035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzU2MDM1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T15:38:37Z",
    "updated_at": "2014-07-08T15:38:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is an API issue, and as I stated has long been the case.\n\nThis is the usecase for `isin`. The point is that you maybe selecting values, but you don't need a `KeyError`, just because say a small number of values are missing. Pandas always wants to align to the index.\n\nYou have many options on what to do.\n\nYou are effectively doing a `join`, so you should explore that as well.\n"
  }
]
