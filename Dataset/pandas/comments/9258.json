[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70044497",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-70044497",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 70044497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDQ0NDk3",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-15T06:18:05Z",
    "updated_at": "2015-01-15T06:18:05Z",
    "author_association": "MEMBER",
    "body": "Hmm. I think this has all the functionality we need, but it would also be good to reconcile the API design here with `asof`. I'll dig into that, but I'm also open to any proposals.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70067934",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-70067934",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 70067934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDY3OTM0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-15T10:40:49Z",
    "updated_at": "2015-01-15T10:40:49Z",
    "author_association": "MEMBER",
    "body": "- Should it return an array or an Index when given multiple values?\n- For `asof`, I think this can completely replace the usage of `asof`, and is also compatible in signature. Only differences are:\n  - `asof` would have a default of `left` in terms of `get_nearest`\n  - it returns NaN if it cannot find anything. \n  \n  I think we can leave `asof` as is, but add above remarks to the docs. Referring in the docstring of `asof` to `get_nearest` and indicating how you can replace it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70068500",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-70068500",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 70068500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDY4NTAw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-15T10:46:57Z",
    "updated_at": "2015-01-15T10:46:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree with @jorisvandenbossche this should just replace asof entirely\nasod was essentially a simple version of this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70068702",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-70068702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 70068702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDY4NzAy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-15T10:48:48Z",
    "updated_at": "2015-01-15T10:48:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you should extract the indexer into another method maybe asof_indexer (and asof just calls that)\nthen we can support 'asof' joins! (I think there is an outstanding issue for this)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70182100",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-70182100",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 70182100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTgyMTAw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-15T23:23:13Z",
    "updated_at": "2015-01-15T23:23:13Z",
    "author_association": "MEMBER",
    "body": "> Should it return an array or an Index when given multiple values?\n\nI'm returning an array, based on how `get_indexer` works.\n\nI'm currently modeling this function as a sort of combination of `get_loc` and `get_indexer`. Perhaps it would indeed make more sense to separate this into two interfaces -- `get_loc_nearest` (could handle duplicate indexes) and `get_indexer_nearest`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70425000",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-70425000",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 70425000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDI1MDAw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-18T20:44:18Z",
    "updated_at": "2015-01-18T20:44:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer yes this should be 2 methods `get_indexer_nearest` which is called by `get_loc_nearest` (whose impl is trivial), but this exposes the indexer which is important.\n\nmy 2c, is that we already have `asof` so this should be just an impl, e.g. `get_loc_asof/get_indexer_asof`. No reason to have both\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70464719",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-70464719",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 70464719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDY0NzE5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-19T09:20:13Z",
    "updated_at": "2015-01-19T09:54:31Z",
    "author_association": "MEMBER",
    "body": "OK, latest commits include the split to 2 methods and handle missing values properly (that was not being done right before). The differences are:\n1. `get_loc_nearest` will coerce input to the appropriate Timedelta/Timestamp/Period scalar, like `get_loc`\n2. `get_indexer_nearest` uses -1 to mark missing values that cannot be found whereas `get_loc_nearest` raises `KeyError`\n\nI was able to make `Index.asof` be a thin wrapper around `get_loc_nearest`. So it should be able to handle non-datetimes now (for whatever that's worth).\n\nThe other use of asof is in the method `Series.asof` and the undocumented method `Index.asof_locs` (which appears to only be used or tested by `Series.asof`). This method is a little different and somewhat strange IMO -- it skips missing values in the Series. For now I've left it alone because the skipping of missing values makes it somewhat different, but is could definitely also use a cleanup.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70531220",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-70531220",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 70531220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTMxMjIw",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-19T17:32:09Z",
    "updated_at": "2015-01-19T17:32:09Z",
    "author_association": "NONE",
    "body": "Where do you find the time man!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70710859",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-70710859",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 70710859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzEwODU5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-20T18:58:55Z",
    "updated_at": "2015-01-20T20:41:47Z",
    "author_association": "MEMBER",
    "body": "One more design question: How should we handle partial string matching for `DatetimeIndex.get_loc_nearest`?\n\nThe current design casts the input to a Timestamp and finds the nearest label. This seems reasonable, but it's not consistent with `get_loc`, which will return all matching labels (even a slice, if possible). Arguably, `get_loc_nearest` should be equivalent to calling `get_loc` and then falling back to nearest lookup if the key is not found.\n\nHere's an concrete example:\n\n``` python\nidx = pd.to_datetime(['2000-01-31', '2000-02-28'])\nprint idx.get_loc_nearest('2000-02', side='left')\nprint idx.get_loc_nearest('2000-02', side='nearest')\n```\n\nWith the current implementation, each of these would print 0. This is consistent with the current behavior of `asof` (as verified by `test_asof_datetime_partial` in `test_index.py`), but not `get_loc`, which would print 1 for each of these.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73618487",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73618487",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73618487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjE4NDg3",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-10T00:05:32Z",
    "updated_at": "2015-02-10T00:05:32Z",
    "author_association": "MEMBER",
    "body": "OK, it looks like I need to make my own API decision :).\n\nI've settled on using the result of `get_loc` for the result of `DatetimeIndex.get_loc_nearest`, if possible. This means that the \"nearest\" value to a partial string index like `'2000-01'` will be any values in January 2001, not the nearest value to `2000-01-01T00:00:00`.\n\nThis is also a small breaking API change for `DatetimeIndex.asof`. I've added documentation to that effect to what's new in the latest commit (along with more functionality/tests).\n\nAny other comments? I think this is possibly ready to merge (once rebased).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73621795",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73621795",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73621795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjIxNzk1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-10T00:35:35Z",
    "updated_at": "2015-02-10T00:35:35Z",
    "author_association": "MEMBER",
    "body": "Would it be much trouble to not have this API change in `asof`? (possibly just leaving it as it is if it causes too much problems)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73623398",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73623398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73623398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjIzMzk4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-10T00:50:52Z",
    "updated_at": "2015-02-10T00:50:52Z",
    "author_association": "MEMBER",
    "body": "A question: when you have a partial string, what is the 'nearest' value, so what will `DatetimeIndex.get_loc_nearest` return? (say if you have all days of the month in your index, what day is 'nearest' to the month)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73624278",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73624278",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73624278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjI0Mjc4",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-10T00:58:25Z",
    "updated_at": "2015-02-10T00:58:25Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche We definitely could include a work around to avoid the change for `asof` by overwriting the subclass `DatetimeIndex.asof` method.... but I'm not even entirely sure this should really be considered an API change rather than a bug fix (even though there _was_ a test for it).\n\nNote the `asof` docstring: \"For a sorted index, return the most recent label up to and including the passed label.\" A string like '2000-02' arguably does include the timestamp '2000-02-28'.\n\nLooking into the history a little more: this test appeared in PR #8246 by @TomAugspurger. There, it appears that the issue was something else entirely -- `asof` was returning time stamps not in the index at all (see #8245). It's not clear to me that anyone carefully considered exactly _how_ partial datetime strings should be interpreted in this change.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73625106",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73625106",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73625106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjI1MTA2",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-10T01:05:39Z",
    "updated_at": "2015-02-10T01:06:07Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche The \"nearest\" value from `idx.get_loc_nearest('2000-01')` will be a slice object indexing all values in January 2001 if `idx.get_loc('2000-01')` is valid; otherwise, it will return the location of the nearest value to `2000-01-01T00:00:00`. I suppose it would be a good idea to document this more directly!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73632194",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73632194",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73632194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjMyMTk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-10T02:16:13Z",
    "updated_at": "2015-02-10T02:16:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I haven't really looked at this in depth - but\n\nthe string slicing should be analogous to partial string indexing with the same semantics\n\nat first glance it appears that they are the same?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73638049",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73638049",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73638049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjM4MDQ5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-10T03:23:33Z",
    "updated_at": "2015-02-10T03:23:33Z",
    "author_association": "MEMBER",
    "body": "@jreback Yes, the nearest partial string indexing of a DatetimeIndex is exactly equivalent to partial partial string indexing if there is a match; otherwise, it casts the string label to a Timestamp and finds the nearest value.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73669800",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73669800",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73669800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjY5ODAw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-10T09:35:18Z",
    "updated_at": "2015-02-10T09:35:18Z",
    "author_association": "MEMBER",
    "body": "@shoyer on `asof`, OK then, given this is rather new behaviour as you pointed out, so lets regard that as a bug fix (maybe also specify it like that in the whatsnew docs)\n\nSome other things:\n- On the partial string indexing. The docstring of `get_loc_nearest` says it returns an int -> so this is not always correct then.\n- For a DatetimeIndex, you only implemented `get_loc_nearest` and not `get_indexer_nearest`. Is this on purpose? If you now try using `get_indexer_nearest` with a string, you get rather unhelpful error messages.\n\nI know you modelled the functions to the existing `get_loc` and `get_indexer`, but supposing these wouldn't exist, I would have the following remarks:\n- Why have both? Why not just one function that accepts label or array of labels? (and returns int or array of ints)\n- I find the name a bit confusing. `get_loc_nearest` returns the 'integer location by position'. But in the 'indexing terminology', `loc` is for the 'label-location' based indexer.\n- The return of `-1` if a key is not found, seems a bit strange for me. As you would typically use the result to index your frame/series. But -1 has in that case a specific meaning, namely the last value. And that is not always what you want I think. (I know this is not that simple, as you cannot have NaN in integer, and you cannot have non-integer in the indexer, ..)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73700015",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73700015",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73700015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzAwMDE1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-10T13:39:47Z",
    "updated_at": "2015-02-10T13:39:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \n\nI think this impl is fine. The signal of -1 is typical in the way the indexers work. These are by definition `int64` and -1 is a not-found value. It is up to the user to process these.\n\nBy definition these are always indexers, by position, always, full-stop. These only have a single semantic for the output results. `loc` here is not location based, but just location (its an older nomenclature and I can see it being somewhat confusing, but its how all of the Index classes work.)\n\n@shoyer I would think this API simpler if you do this;\n\n```\ndef get_indexer(self, target, method=None, limit=None):   \n        \"\"\"\n        Compute indexer and mask for new index given the current index. The\n        indexer should be then used as an input to ndarray.take to align the\n        current data to the new index. The mask determines whether labels are\n        found or not in the current index\n\n        Parameters\n        ----------\n        target : Index\n        method : {'pad', 'ffill', 'backfill', 'bfill'}\n            pad / ffill: propagate LAST valid observation forward to next valid\n            backfill / bfill: use NEXT valid observation to fill gap\n```\n\nand allow `method='nearest'` (and allow the `side` parameter to be passed as well).\n(similarly for `get_loc`). \n\nI think its just think its adding API noise otherwise. These conceptually do exactly the same thing. (you certainly could have an internal `_get_indexer_nearest` if that makes the impl clearer though).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73765248",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73765248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73765248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzY1MjQ4",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-10T19:25:05Z",
    "updated_at": "2015-02-10T19:25:05Z",
    "author_association": "MEMBER",
    "body": "@jreback This is a good point about incorporating this into the `get_indexer` method. In fact, I realize now that `get_indexer_nearest(side='left')` is actually just a slower version of `get_indexer(method='pad')`. So it looks like adding `method='nearest'` is probably the way to go here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73790668",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73790668",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73790668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzkwNjY4",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-10T21:45:59Z",
    "updated_at": "2015-02-10T21:45:59Z",
    "author_association": "MEMBER",
    "body": "It appears that the existing `get_indexer` method only works for monotonic ascending indexes and keys. So I'll probably keep around some of this code as a fallback option for `pad`/`backfill` with decreasing indexes and/or unordered keys.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73832290",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73832290",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73832290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODMyMjkw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-11T04:21:41Z",
    "updated_at": "2015-02-11T04:21:41Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche I agree, the current index API is a little strange -- some refactoring to provide a unified API and to untangle `core.indexers` would definitely be in order. See also: #7651.\n\nI'm implementing only the low level methods now, but eventually we should figure out a higher level API for nearest neighbor lookups in pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73847115",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73847115",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73847115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODQ3MTE1",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-11T08:25:28Z",
    "updated_at": "2015-02-11T08:25:28Z",
    "author_association": "MEMBER",
    "body": "OK, I did a big refactor here and moved everything around to match @jreback's suggested organization (I also did a rebase since the old changes are almost all moved). This yielded the nice benefit of supporting non-monotonic targets for pad/backfill with get_indexer, so I put that down as an enhancement (not sure if pandas currently uses that directly or not; probably not).\n\nI was disappointed by the lack of direct test coverage I encountered for the existing `get_loc` and `get_indexer` methods. I added some in but assuredly we could do more. In particular, the index methods currently allows integer values ( in nanoseconds) to pass through as valid values for the time/delta/period indexes. I know most of that is currently checked by `core.indexers` when used with `.loc`, etc., but that is poor separation of concerns -- that logic should all be on the index.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73893929",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73893929",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73893929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODkzOTI5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-11T14:56:40Z",
    "updated_at": "2015-02-11T14:56:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer looks much better. consolidates the functionaility pretty nicely. Just some minor comments.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73941422",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73941422",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73941422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTQxNDIy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-11T19:00:11Z",
    "updated_at": "2015-02-11T19:00:11Z",
    "author_association": "MEMBER",
    "body": "It looks like we can very easily expose this directly through `DataFrame.reindex` with `method='nearest'` (most of the current test failures are because `reindex` with `method='pad' no longer fails for non-monotonic targets). We may eventually want some sort of \"nearest neighbor\" indexer, but`reindex` is a useable API, so I will see if I can get that working at least.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73942446",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73942446",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73942446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTQyNDQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-11T19:05:22Z",
    "updated_at": "2015-02-11T19:05:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "as a side issue\n\na time like join is essentially nearest_left (eg nearest but only looking left)\nso maybe want to add nearest_left/nearest_right \nthe can easily do : http://stackoverflow.com/questions/12322289/kdb-like-asof-join-for-timeseries-data-in-pandas\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73975511",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73975511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73975511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTc1NTEx",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-11T22:08:59Z",
    "updated_at": "2015-02-11T22:08:59Z",
    "author_association": "MEMBER",
    "body": "@jreback  OK, I think I address most of your suggestions in my latest patchset. I'm also presenting the public API using `reindex` instead of the low-level `get_indexer`.\n\nWe should also add this to the [docs section on reindexing](http://pandas-docs.github.io/pandas-docs-travis/basics.html#filling-while-reindexing), at least once fillna with `method='nearest'` also works (made a new issue for that, #9471)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73976084",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-73976084",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 73976084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTc2MDg0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-11T22:12:19Z",
    "updated_at": "2015-02-11T22:12:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeh I would update the docs once #9471 is addressed.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/74315765",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-74315765",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 74315765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzE1NzY1",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-13T19:53:12Z",
    "updated_at": "2015-02-13T19:53:12Z",
    "author_association": "MEMBER",
    "body": "Other thoughts for this issue? `fillna` will come in another PR.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/74316772",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-74316772",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 74316772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzE2Nzcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-13T19:59:38Z",
    "updated_at": "2015-02-13T19:59:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "minor comments, lgtm otherwise.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/74319487",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9258#issuecomment-74319487",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9258",
    "id": 74319487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzE5NDg3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-13T20:16:29Z",
    "updated_at": "2015-02-13T20:16:29Z",
    "author_association": "MEMBER",
    "body": "docstring of reindex should still be updated\n"
  }
]
