[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282490324",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15502#issuecomment-282490324",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15502",
    "id": 282490324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjQ5MDMyNA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-25T15:17:51Z",
    "updated_at": "2017-02-25T15:17:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note, in the first case, the aliases `'index'` and `'columns'` can be used.\r\n\r\n```python\r\nIn [11]: df.sum(axis='index')\r\nOut[11]: \r\na    6\r\nb    9\r\ndtype: int64\r\n```\r\n\r\nI do see your broader point, but for better or worse, enumerated string parameters generally seem to be the python convention.  Not to say we couldn't think about support an alternative enum api, just gets away from the \"1 way to do things\" goal."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282490905",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15502#issuecomment-282490905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15502",
    "id": 282490905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjQ5MDkwNQ==",
    "user": {
      "login": "jimmycallin",
      "id": 2225828,
      "node_id": "MDQ6VXNlcjIyMjU4Mjg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2225828?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmycallin",
      "html_url": "https://github.com/jimmycallin",
      "followers_url": "https://api.github.com/users/jimmycallin/followers",
      "following_url": "https://api.github.com/users/jimmycallin/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmycallin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmycallin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmycallin/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmycallin/orgs",
      "repos_url": "https://api.github.com/users/jimmycallin/repos",
      "events_url": "https://api.github.com/users/jimmycallin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmycallin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-25T15:27:03Z",
    "updated_at": "2017-02-25T15:27:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Note, in the first case, the aliases 'index' and 'columns' can be used.\r\n\r\nHow have I managed to miss this? Thank you!!\r\n\r\n> I do see your broader point, but for better or worse, enumerated string parameters generally seem to be the python convention. Not to say we couldn't think about support an alternative enum api, just gets away from the \"1 way to do things\" goal.\r\n\r\nSure, but the lack of enum convention is arguably due to the historical lack of native support for enums than anything else. I believe it brings enough benefits that enumerated string parameters currently lack to be worth discussing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282527919",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15502#issuecomment-282527919",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15502",
    "id": 282527919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUyNzkxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T02:33:48Z",
    "updated_at": "2017-02-26T02:33:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jimmycallin this looks somewhat non-pythonic to be honest (and more *spark-like*).\r\n\r\nthis is shorter, and IMHO pretty clear. \r\n``df.sort_values('b', na_position='first')``\r\n\r\nwhat do we gain by allowing enums? (or really what you are suggesting is a hierarchical schema)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282556263",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15502#issuecomment-282556263",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15502",
    "id": 282556263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU1NjI2Mw==",
    "user": {
      "login": "jimmycallin",
      "id": 2225828,
      "node_id": "MDQ6VXNlcjIyMjU4Mjg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2225828?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmycallin",
      "html_url": "https://github.com/jimmycallin",
      "followers_url": "https://api.github.com/users/jimmycallin/followers",
      "following_url": "https://api.github.com/users/jimmycallin/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmycallin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmycallin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmycallin/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmycallin/orgs",
      "repos_url": "https://api.github.com/users/jimmycallin/repos",
      "events_url": "https://api.github.com/users/jimmycallin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmycallin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T13:33:47Z",
    "updated_at": "2017-02-26T13:40:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> what do we gain by allowing enums? (or really what you are suggesting is a hierarchical schema)\r\n\r\nWhat I like most about it is that it allows for easy autocompletion of parameter values in IDEs such as PyCharm and Jupyter Notebook. It makes supported parameter values more transparent than strings as you can easily list all of them without having to rely upon documentation (which more easily can be faulty or incomplete). It provides a standardized schema which can be exploited for unit testing.  Off the top of my head.\r\n\r\nEDIT: If other libraries such as matplotlib would utilize the same standard scheme, it could be possible to combine these for e.g. the plotting function, where you generally have to read through both the pandas and the matplotlib documentation to figure out all the possible parameters and their supported values. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282866419",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15502#issuecomment-282866419",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15502",
    "id": 282866419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjg2NjQxOQ==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T21:50:15Z",
    "updated_at": "2017-02-27T21:50:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Enums can bring all of the joy of C programming to Python and pandas 👍 "
  }
]
