[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18972766",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3759#issuecomment-18972766",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3759",
    "id": 18972766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTcyNzY2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-05T12:38:11Z",
    "updated_at": "2013-06-05T12:38:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "just convert it to a numpy array directly\n\n```\nIn [21]: from scipy import integrate\n\nIn [22]: x = np.abs(np.random.randn(10000))\n\nIn [23]: %timeit integrate.trapz(x)\n10000 loops, best of 3: 73.1 us per loop\n\nIn [24]: ts = pd.Series(x, pd.date_range(start='2013-05-03', periods=len(x), freq='s'))\n\nIn [25]: %timeit integrate.trapz(ts, ts.index.astype(np.int64) / 10**9)\n10 loops, best of 3: 41.2 ms per loop\n\nIn [26]: %timeit integrate.trapz(ts.values, ts.index.astype(np.int64) / 10**9)\n1000 loops, best of 3: 301 us per loop\n\nIn [27]: %timeit integrate.trapz(ts.values)\n10000 loops, best of 3: 89.4 us per loop\n\nIn [28]: v1 = integrate.trapz(ts.values)\n\nIn [29]: v2 = integrate.trapz(x)\n\nIn [31]: (v1==v2).all()\nOut[31]: True\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18974397",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3759#issuecomment-18974397",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3759",
    "id": 18974397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTc0Mzk3",
    "user": {
      "login": "metakermit",
      "id": 1818628,
      "node_id": "MDQ6VXNlcjE4MTg2Mjg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1818628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metakermit",
      "html_url": "https://github.com/metakermit",
      "followers_url": "https://api.github.com/users/metakermit/followers",
      "following_url": "https://api.github.com/users/metakermit/following{/other_user}",
      "gists_url": "https://api.github.com/users/metakermit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metakermit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metakermit/subscriptions",
      "organizations_url": "https://api.github.com/users/metakermit/orgs",
      "repos_url": "https://api.github.com/users/metakermit/repos",
      "events_url": "https://api.github.com/users/metakermit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metakermit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-05T13:11:42Z",
    "updated_at": "2013-06-05T13:11:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Amazing, it really works! It's still roughly 4x slower than the bare numpy array, but an order of magnitude faster than before. Why is this explicit \"cast\" necessary? I thought that a TimeSeries behaves like a normal ndarray under the hood:\n\n```\nIn [14]: isinstance(ts, np.ndarray)\nOut[14]: True\n\nIn [15]: type(ts.values)\nOut[15]: numpy.ndarray\n```\n\nWhere does this overhead of handling a TimeSeries as an array come from?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18974868",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3759#issuecomment-18974868",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3759",
    "id": 18974868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTc0ODY4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-05T13:19:31Z",
    "updated_at": "2013-06-05T13:19:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "looking at the `cumtrapz` function it is basically doing a cumsum (that is accumulate), with various slices. This slicing takes time as the Series makes sure to keep alignment (it doesn't take much time, but there are many iterations, plus some of this is calling back to python on each loop)\n\nA Series acts like a numpy array (e.g. it supports the array interface), but if you don't need index alignment then there is a penalty in situations like this\n\nalso FYI, i think in this case you don't need your `x` parm (as its 1.0 anyhow)...in that case \n`integrate.tranpsz(ts.values)` is exactly equivalent\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18976677",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3759#issuecomment-18976677",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3759",
    "id": 18976677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTc2Njc3",
    "user": {
      "login": "metakermit",
      "id": 1818628,
      "node_id": "MDQ6VXNlcjE4MTg2Mjg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1818628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metakermit",
      "html_url": "https://github.com/metakermit",
      "followers_url": "https://api.github.com/users/metakermit/followers",
      "following_url": "https://api.github.com/users/metakermit/following{/other_user}",
      "gists_url": "https://api.github.com/users/metakermit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metakermit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metakermit/subscriptions",
      "organizations_url": "https://api.github.com/users/metakermit/orgs",
      "repos_url": "https://api.github.com/users/metakermit/repos",
      "events_url": "https://api.github.com/users/metakermit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metakermit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-05T13:52:20Z",
    "updated_at": "2013-06-05T13:52:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, OK. That never occurred to me. I always thought the overhead was coming from the domain transformation - which is necessary, btw:\n\n```\nIn [24]: v1 = integrate.trapz(ts.values, ts.index.astype(np.int64) / 10**9)\n\nIn [25]: v2 = integrate.trapz(ts.values)\n\nIn [26]: (v1 == v2).all()\nOut[26]: False\n```\n\n(because IIRC pandas uses nanoseconds as the default index value now, not seconds, so one has to divide the domain to match integer units to seconds (for trapz it could be divided afterwards without changing the result, but I'm not sure about the more advanced integration methods and caveats with truncating small values  - I'd have to check))\n\nAnyway, I think it would be nice to encapsulate all these details behind a more abstract integrate function, where one could specify the method and time unit used for the integration and let it do the conversion, ndarray casting and calling scipy.integrate behind the scenes. Maybe something like:\n\n```\npd.integrate(ts, how='trapz', unit='s')\n```\n\nWhat do you think? Should I try to prepare a patch?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18977269",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3759#issuecomment-18977269",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3759",
    "id": 18977269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTc3MjY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-05T14:01:10Z",
    "updated_at": "2013-06-05T14:01:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Are you sure this is what you want? (these are basically seconds since 1970)\n\n```\nIn [19]: ts.index.astype(np.int64)/10**9\nOut[19]: \narray([1367539200, 1367539201, 1367539202, ..., 1367549197, 1367549198,\n       1367549199])\n```\n\nmaybe this?\n\n```\nIn [18]: (ts.index.to_series()-ts.index[0]).values.astype('timedelta64[s]')\nOut[18]: array([   0,    1,    2, ..., 9997, 9998, 9999], dtype='timedelta64[s]')\n```\n\nI think your method could be posted as a small function on the http://pandas.pydata.org/pandas-docs/dev/cookbook.html\n\nyou could post here and I'll put it up if you want\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18978924",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3759#issuecomment-18978924",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3759",
    "id": 18978924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTc4OTI0",
    "user": {
      "login": "metakermit",
      "id": 1818628,
      "node_id": "MDQ6VXNlcjE4MTg2Mjg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1818628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metakermit",
      "html_url": "https://github.com/metakermit",
      "followers_url": "https://api.github.com/users/metakermit/followers",
      "following_url": "https://api.github.com/users/metakermit/following{/other_user}",
      "gists_url": "https://api.github.com/users/metakermit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metakermit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metakermit/subscriptions",
      "organizations_url": "https://api.github.com/users/metakermit/orgs",
      "repos_url": "https://api.github.com/users/metakermit/repos",
      "events_url": "https://api.github.com/users/metakermit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metakermit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-05T14:25:22Z",
    "updated_at": "2013-06-05T14:25:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "That method was suggested to me on StackOverflow (can't find the link now), but it seems correct (though not too pretty, I agree) - I tried it out for simple cases where I could calculate the area under the curve by hand. The starting date (1970) is not important - the important thing is that the integer distance between two points equals the distance in the desired time units (usually seconds in physics). The only thing that seems fishy to me now is if it isn't perhaps sufficient to calculate the integral in nanoseconds and then simply divide the final result (which is much less computationally-intensive for large datasets). Mathematically, it seems correct, as the factor is constant so could probably be extracted, but like I said - I'm not sure about the exact details of all the integration methods (looking at the [Newton-Cotes formula](http://en.wikipedia.org/wiki/Newton-Cotes_formulas), which I think is the most complex sample integration method in scipy, it looks like it could be done afterwards) and any potential consequences that might arise from truncating parts of seconds sooner or later (though later seems better in this case as well).\n\nOK, I'll try to prepare a function for the cookbook to show what I meant. I will check if I can take advantage of the pandas freq types ('s', 'h', ...) for specifying time units.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18979417",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3759#issuecomment-18979417",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3759",
    "id": 18979417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTc5NDE3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-05T14:28:49Z",
    "updated_at": "2013-06-05T14:28:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "if a future version I think we will have a function to do this in an easier way, ala\n\n`(ts.index.to_series()-ts.index[0]).to_freq('s')`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19043997",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3759#issuecomment-19043997",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3759",
    "id": 19043997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDQzOTk3",
    "user": {
      "login": "metakermit",
      "id": 1818628,
      "node_id": "MDQ6VXNlcjE4MTg2Mjg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1818628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metakermit",
      "html_url": "https://github.com/metakermit",
      "followers_url": "https://api.github.com/users/metakermit/followers",
      "following_url": "https://api.github.com/users/metakermit/following{/other_user}",
      "gists_url": "https://api.github.com/users/metakermit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metakermit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metakermit/subscriptions",
      "organizations_url": "https://api.github.com/users/metakermit/orgs",
      "repos_url": "https://api.github.com/users/metakermit/repos",
      "events_url": "https://api.github.com/users/metakermit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metakermit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-06T13:13:53Z",
    "updated_at": "2013-06-06T13:13:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've done some work on [a notebook](http://nbviewer.ipython.org/5720498) illustrating everything we've discussed here that could be included into the cookbook. I still have some mistakes for non-1s frequences visible in the \"Testing for correctness...\" section. I'll keep working on it and keep you posted.\n\nAlso, until I completely understand how this domain gets handled, I haven't added the logic for specifying the integration units (seconds, minutes etc.) - for a cookbook that would probably be an overkill anyway.\n\nIf you decide that something like this might be integrated in pandas itself, I would gladly do the extra necessary work (dynamic detection of scipy availability, tests, better docs etc.), as it would fit nicely with the other features I am working on in pandas (https://github.com/pydata/pandas/issues/2704)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19044669",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3759#issuecomment-19044669",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3759",
    "id": 19044669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDQ0NjY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-06T13:25:41Z",
    "updated_at": "2013-06-06T13:25:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "ahh...didnt realize you were doing #2704\n\nyou can do a PR for the cookbook entry (maybe create a new section), computation? and put this under integration? and just put the link in (with a short description)....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19100102",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3759#issuecomment-19100102",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3759",
    "id": 19100102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTAwMTAy",
    "user": {
      "login": "metakermit",
      "id": 1818628,
      "node_id": "MDQ6VXNlcjE4MTg2Mjg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1818628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metakermit",
      "html_url": "https://github.com/metakermit",
      "followers_url": "https://api.github.com/users/metakermit/followers",
      "following_url": "https://api.github.com/users/metakermit/following{/other_user}",
      "gists_url": "https://api.github.com/users/metakermit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metakermit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metakermit/subscriptions",
      "organizations_url": "https://api.github.com/users/metakermit/orgs",
      "repos_url": "https://api.github.com/users/metakermit/repos",
      "events_url": "https://api.github.com/users/metakermit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metakermit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-07T10:43:09Z",
    "updated_at": "2013-06-07T10:43:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I'm trying to [hack](https://github.com/kermit666/pandas/commits/resample-both) on the resample closed='both' method when I have time, but it's going slowly as it's my first exposure to the Pandas codebase. I'm using numerical integration of Pandas timeseries in [my own project](http://bazaar.launchpad.net/~kermit666/philharmonic/trunk/view/head:/philharmonic/energy_price/calculator.py#L99), so I'm trying to make the interaction more elegant.\n\nOK, I created a PR for the cookbok [here](https://github.com/pydata/pandas/pull/3790). (don't know why github didn't link it automatically - maybe the Issue number should have been in the commit message, not the PR message)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19106256",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3759#issuecomment-19106256",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3759",
    "id": 19106256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTA2MjU2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-07T13:20:18Z",
    "updated_at": "2013-06-07T13:20:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing this...\n"
  }
]
