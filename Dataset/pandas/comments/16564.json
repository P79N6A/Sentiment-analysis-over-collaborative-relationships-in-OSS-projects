[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305339012",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16564#issuecomment-305339012",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16564",
    "id": 305339012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTMzOTAxMg==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T22:43:33Z",
    "updated_at": "2017-05-31T22:43:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "To read pickle files in a back-compat way, use `pd.read_pickle` see doc note (warning box) here\r\nhttp://pandas.pydata.org/pandas-docs/stable/io.html#pickling\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305342360",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16564#issuecomment-305342360",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16564",
    "id": 305342360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTM0MjM2MA==",
    "user": {
      "login": "qingkaikong",
      "id": 1621324,
      "node_id": "MDQ6VXNlcjE2MjEzMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1621324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qingkaikong",
      "html_url": "https://github.com/qingkaikong",
      "followers_url": "https://api.github.com/users/qingkaikong/followers",
      "following_url": "https://api.github.com/users/qingkaikong/following{/other_user}",
      "gists_url": "https://api.github.com/users/qingkaikong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qingkaikong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qingkaikong/subscriptions",
      "organizations_url": "https://api.github.com/users/qingkaikong/orgs",
      "repos_url": "https://api.github.com/users/qingkaikong/repos",
      "events_url": "https://api.github.com/users/qingkaikong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qingkaikong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T23:00:34Z",
    "updated_at": "2017-05-31T23:00:34Z",
    "author_association": "NONE",
    "body": "Thanks Chris for help, \r\n\r\nI tried to use read_pickle, but I actually stored a list of dataframe, i.e. [df1, df2, df3] into a pickle file, using the read_pickle is not working. Are there any other ways I can work around?\r\n\r\n```python\r\nitem = \"./20170115T000000_20170118T000000_done.pkl\"\r\na = pd.read_pickle(item)\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-2-0fbc5e41d68f> in <module>()\r\n      1 item = \"./20170115T000000_20170118T000000_done.pkl\"\r\n----> 2 a = pd.read_pickle(item)\r\n\r\n/Users/qingkaikong/miniconda2/lib/python2.7/site-packages/pandas/io/pickle.pyc in read_pickle(path, compression)\r\n     92                     lambda f: pc.load(f, encoding=encoding, compat=True))\r\n     93     try:\r\n---> 94         return try_read(path)\r\n     95     except:\r\n     96         if PY3:\r\n\r\n/Users/qingkaikong/miniconda2/lib/python2.7/site-packages/pandas/io/pickle.pyc in try_read(path, encoding)\r\n     90             except:\r\n     91                 return read_wrapper(\r\n---> 92                     lambda f: pc.load(f, encoding=encoding, compat=True))\r\n     93     try:\r\n     94         return try_read(path)\r\n\r\n/Users/qingkaikong/miniconda2/lib/python2.7/site-packages/pandas/io/pickle.pyc in read_wrapper(func)\r\n     66                             is_text=False)\r\n     67         try:\r\n---> 68             return func(f)\r\n     69         finally:\r\n     70             for _f in fh:\r\n\r\n/Users/qingkaikong/miniconda2/lib/python2.7/site-packages/pandas/io/pickle.pyc in <lambda>(f)\r\n     90             except:\r\n     91                 return read_wrapper(\r\n---> 92                     lambda f: pc.load(f, encoding=encoding, compat=True))\r\n     93     try:\r\n     94         return try_read(path)\r\n\r\n/Users/qingkaikong/miniconda2/lib/python2.7/site-packages/pandas/compat/pickle_compat.pyc in load(fh, encoding, compat, is_verbose)\r\n    192         up.is_verbose = is_verbose\r\n    193 \r\n--> 194         return up.load()\r\n    195     except:\r\n    196         raise\r\n\r\n/Users/qingkaikong/miniconda2/lib/python2.7/pickle.pyc in load(self)\r\n    862             while 1:\r\n    863                 key = read(1)\r\n--> 864                 dispatch[key](self)\r\n    865         except _Stop, stopinst:\r\n    866             return stopinst.value\r\n\r\n/Users/qingkaikong/miniconda2/lib/python2.7/site-packages/pandas/compat/pickle_compat.pyc in load_reduce(self)\r\n     16     func = stack[-1]\r\n     17 \r\n---> 18     if type(args[0]) is type:\r\n     19         n = args[0].__name__  # noqa\r\n     20 \r\n\r\nIndexError: tuple index out of range\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305343933",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16564#issuecomment-305343933",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16564",
    "id": 305343933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTM0MzkzMw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T23:10:01Z",
    "updated_at": "2017-05-31T23:10:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not particular familiar with the code, but you're welcome to try hacking on the compat code to make it work, may not be that hard - in general our backwards compat stuff applies only to saved frames.\r\nhttps://github.com/pandas-dev/pandas/blob/e437ad594048cc28873df13ccf50cd39a4e88dcb/pandas/compat/pickle_compat.py\r\n\r\nIf you're often transferring data across pandas version, might consider a more stable serialization format (HDF5, parquet, msgpack)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305345542",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16564#issuecomment-305345542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16564",
    "id": 305345542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTM0NTU0Mg==",
    "user": {
      "login": "qingkaikong",
      "id": 1621324,
      "node_id": "MDQ6VXNlcjE2MjEzMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1621324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qingkaikong",
      "html_url": "https://github.com/qingkaikong",
      "followers_url": "https://api.github.com/users/qingkaikong/followers",
      "following_url": "https://api.github.com/users/qingkaikong/following{/other_user}",
      "gists_url": "https://api.github.com/users/qingkaikong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qingkaikong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qingkaikong/subscriptions",
      "organizations_url": "https://api.github.com/users/qingkaikong/orgs",
      "repos_url": "https://api.github.com/users/qingkaikong/repos",
      "events_url": "https://api.github.com/users/qingkaikong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qingkaikong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T23:20:05Z",
    "updated_at": "2017-05-31T23:20:05Z",
    "author_association": "NONE",
    "body": "Thanks Chris, I will try to play with it and hopefully making it work for my case ^)^\r\n\r\nI totally agree that using other format is better, currently I am using HDF5 for another project, but due to all the code and workflow using the pickle file, I am lazy to change that. But thanks for the suggestions. "
  }
]
