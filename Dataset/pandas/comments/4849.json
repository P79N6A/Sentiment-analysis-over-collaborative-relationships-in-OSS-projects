[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24515869",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4849#issuecomment-24515869",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4849",
    "id": 24515869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE1ODY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T14:54:34Z",
    "updated_at": "2013-09-16T14:54:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls provide an example. what do you mean by 'pickled'? These are stored in HDF5 formt.\n\n`None` is technically a `nan` value in `object` dtypes (meaning strings), but causes really weird things to happen if you tried to store it. You should use `np.nan` as the value. This might be a bug, OTOH, it maybe what you actually want (meaning you actually do want to store the `None`), so not sure what do do.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24517776",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4849#issuecomment-24517776",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4849",
    "id": 24517776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE3Nzc2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T15:17:59Z",
    "updated_at": "2013-09-16T15:17:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "also, here's the docstring for append, you can supply `nan_rep` to pick any string that you want to represent a Nan, so it won't conflict. I believe this is available in 0.11. This is stored so it will use it on deserialization.\n\n```\nIn [1]: pd.HDFStore.append?\nType:       instancemethod\nString Form:<unbound method HDFStore.append>\nFile:       /mnt/home/jreback/pandas/pandas/io/pytables.py\nDefinition: pd.HDFStore.append(self, key, value, format=None, append=True, columns=None, dropna=None, **kwargs)\nDocstring:\nAppend to Table in file. Node must already exist and be Table\nformat.\n\nParameters\n----------\nkey : object\nvalue : {Series, DataFrame, Panel, Panel4D}\nformat: 'table' is the default\n    table(t) : table format\n               Write as a PyTables Table structure which may perform worse but\n               allow more flexible operations like searching / selecting subsets\n               of the data\nappend   : boolean, default True, append the input data to the existing\ndata_columns : list of columns to create as data columns, or True to use all columns\nmin_itemsize : dict of columns that specify minimum string sizes\nnan_rep      : string to use as string nan represenation\nchunksize    : size to chunk the writing\nexpectedrows : expected TOTAL row size of this table\nencoding     : default None, provide an encoding for strings\ndropna       : boolean, default True, do not write an ALL nan row to the store\n               settable by the option 'io.hdf.dropna_table'\nNotes\n-----\nDoes *not* check if data being appended overlaps with existing\ndata in the table, so be careful\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24518354",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4849#issuecomment-24518354",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4849",
    "id": 24518354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE4MzU0",
    "user": {
      "login": "asayeed",
      "id": 5470605,
      "node_id": "MDQ6VXNlcjU0NzA2MDU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5470605?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asayeed",
      "html_url": "https://github.com/asayeed",
      "followers_url": "https://api.github.com/users/asayeed/followers",
      "following_url": "https://api.github.com/users/asayeed/following{/other_user}",
      "gists_url": "https://api.github.com/users/asayeed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asayeed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asayeed/subscriptions",
      "organizations_url": "https://api.github.com/users/asayeed/orgs",
      "repos_url": "https://api.github.com/users/asayeed/repos",
      "events_url": "https://api.github.com/users/asayeed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asayeed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T15:25:03Z",
    "updated_at": "2013-09-16T15:25:52Z",
    "author_association": "NONE",
    "body": "Alright, I was hoping this was a stupid question and y'all would automatically have an answer. :)\n\nI have a script that generates a pandas table from string data.  I saved it in two formats, one by `pandas.save`, and one in an `HDFStore`.  I wasn't under the impression that `pandas.save` used HDF5 format.  The docs seem to imply that it uses a standard Python pickle.\n\nHere's what happens when I load the two tables.\n\n``` python\nIn [1]: import pandas as pd\n\nIn [2]: A = pd.load(\"sample.df\")\n\nIn [3]: A\nOut[3]: \n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 663106 entries, 0 to 663105\nData columns (total 4 columns):\n0      663106  non-null values\n1      663106  non-null values\n2      663106  non-null values\nval    663106  non-null values\ndtypes: float64(1), object(3)\n\nIn [4]: B = pd.HDFStore(\"sample.h5\", \"r\")\n\nIn [5]: C = B.get(\"table\")\n\nIn [6]: C\nOut[6]: \n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 663106 entries, 0 to 663105\nData columns (total 4 columns):\nxxxx0    663101  non-null values\nzzzz     663106  non-null values\nyyyy1    663101  non-null values\nval      663106  non-null values\ndtypes: float64(1), object(3)\n```\n\nThe columns get renamed before the saving as an `HDFStore`, but they correspond.  And in table `C`, the one that was retrieved from the `HDFStore`, you'll see that columns `xxxx0` and `yyyy1` have smaller non-null counts than the corresponding `0` and `2`, which come from the same data.\n\nNow I drill deeper.\n\n``` python\nIn [26]: C[C['xxxx0'].isnull()]\nOut[26]: \n       xxxx0     zzzz     yyyy1        val\n571093   NaN  nsubj-1  reported   5.061457\n586310   NaN  nsubj-1      said  39.931872\n622176   NaN  nsubj-1   telling   8.065867\n632299   NaN   dobj-1      told   4.634847\n653982   NaN  nsubj-1      were   5.200787\n```\n\nThis (from the `HDFStore`) is correct---it has `NaN` values where `xxxx0` is actually empty.  So what's going on in table `A`?  (The one loaded by `pandas.load`.)\n\n``` python\nIn [27]: A.loc[571093]\nOut[27]: \n0           nan\n1       nsubj-1\n2      reported\nval    5.061457\nName: 571093, dtype: object\n\nIn [28]: A.loc[571093][0]\nOut[28]: 'nan'\n```\n\nThis string `'nan'` is clearly not what I want, because actually I didn't expect there to be ANY null values whatsoever in the table.  (It means that there is a problem in the original source text, which I am investigating.)  Consequently, I didn't actually replace `None` values with `np.nan`, since I didn't really expect to have to.  It was only my exploration of `HDFStore` which alerted me to the discrepancy and the presence of empty values that should not exist.\n\nThis seems like a bug in `pandas.save` to me.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24518859",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4849#issuecomment-24518859",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4849",
    "id": 24518859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE4ODU5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T15:31:06Z",
    "updated_at": "2013-09-16T15:31:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok. you are mixing too many things here. so this has to do with pickling a frame. pls show how you generate it in the first place. (frame A). It will pickle virtually identically to how it retrieves. So how are you creating A?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24519805",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4849#issuecomment-24519805",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4849",
    "id": 24519805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE5ODA1",
    "user": {
      "login": "asayeed",
      "id": 5470605,
      "node_id": "MDQ6VXNlcjU0NzA2MDU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5470605?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asayeed",
      "html_url": "https://github.com/asayeed",
      "followers_url": "https://api.github.com/users/asayeed/followers",
      "following_url": "https://api.github.com/users/asayeed/following{/other_user}",
      "gists_url": "https://api.github.com/users/asayeed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asayeed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asayeed/subscriptions",
      "organizations_url": "https://api.github.com/users/asayeed/orgs",
      "repos_url": "https://api.github.com/users/asayeed/repos",
      "events_url": "https://api.github.com/users/asayeed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asayeed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T15:41:31Z",
    "updated_at": "2013-09-16T15:42:22Z",
    "author_association": "NONE",
    "body": "This has to do with the fact that pickling a frame has different behaviour from HDFStoring a frame.  Here's the code in my original script that does the saving, after a very long processing pipeline over natural language text files:\n\n``` python\nprint >>sys.stderr, \"saving\"\nos.chdir(origdir)\n#store = pd.HDFStore(sys.argv[2], \"w\", complevel=9, complib=\"blosc\")                                                                                                                                            \n#fulldf.columns = [\"xxxx0\", \"zzzz\", \"yyyy1\", \"val\"]                                                                                                                                                            \n#store.append(\"table\", fulldf, data_columns=[\"xxxx0\",\"zzzz\",\"yyyy1\"])                                                                                                                                  \n#store.close()                 \npd.save(fulldf, sys.argv[2])\n```\n\nI generated table `A` and table `C` by running the same script, and just commenting and uncommenting the above lines to get pickled and HDF5 versions of exactly the same frame.\n\nThe text data being used to generate the table is partially processed through an XML parser (in one step of the pipeline before saving) that seems to be generating `None` values for a few items where it in theory shouldn't.  But the behaviour of `pd.save` turns these `None` values into the string `'nan'` rather than into a proper NaN value.  `HDFStore.append` behaves correctly, so that when I retrieve the store and inspect it, I know that I have NaN values in the table.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24520851",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4849#issuecomment-24520851",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4849",
    "id": 24520851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTIwODUx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T15:53:53Z",
    "updated_at": "2013-09-16T15:53:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@asayeed \n\n`save` is reproducing the frame exactly as you have it, with some 'nan' strings in your data. `HDFStore` uses `nan` as the string rep to indicate strings in the store, and upon deserialization turns that into `np.nan`.\n\nYour original frame has the string `nan` in a string column. This is valid. Not sure where `None` comes in, it doesn't appear anywhere.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24522645",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4849#issuecomment-24522645",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4849",
    "id": 24522645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTIyNjQ1",
    "user": {
      "login": "asayeed",
      "id": 5470605,
      "node_id": "MDQ6VXNlcjU0NzA2MDU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5470605?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asayeed",
      "html_url": "https://github.com/asayeed",
      "followers_url": "https://api.github.com/users/asayeed/followers",
      "following_url": "https://api.github.com/users/asayeed/following{/other_user}",
      "gists_url": "https://api.github.com/users/asayeed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asayeed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asayeed/subscriptions",
      "organizations_url": "https://api.github.com/users/asayeed/orgs",
      "repos_url": "https://api.github.com/users/asayeed/repos",
      "events_url": "https://api.github.com/users/asayeed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asayeed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T16:14:56Z",
    "updated_at": "2013-09-16T16:14:56Z",
    "author_association": "NONE",
    "body": "OK, you're right, it does appear that the string NAN (with various capitalizations) appears in the original data.  \n\nThen as you say, `HDFStore` is turning it into `np.nan` on retrieval, which is also somewhat disturbing and unexpected if you're dealing with text data---I automatically assumed that if it was retrieving a NaN, it meant that there _was_ an empty value there.\n\nWhich means that my original complaint was exactly backwards.  `HDFStore` incorrectly assumes that the string \"nan\" is not literally the string \"nan\", which causes a nasty surprise.  \n\nI don't know if this result is intentional or it is merely that I have an idiosyncratic use case that makes this behaviour seem like a bug.  I'd never have guessed that I was losing data this way, especially if I attempted to retrieve the string 'nan' which a script may well do automatically and silently retrieve nothing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24522950",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4849#issuecomment-24522950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4849",
    "id": 24522950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTIyOTUw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T16:18:50Z",
    "updated_at": "2013-09-16T16:19:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "this was my second comment, you can pass `nan_rep` to be something else, e.g. `nan_rep=\"_nan_\"` or whatever; this is up to the user to determine this, it is just a convenient default\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24523252",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4849#issuecomment-24523252",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4849",
    "id": 24523252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTIzMjUy",
    "user": {
      "login": "asayeed",
      "id": 5470605,
      "node_id": "MDQ6VXNlcjU0NzA2MDU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5470605?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asayeed",
      "html_url": "https://github.com/asayeed",
      "followers_url": "https://api.github.com/users/asayeed/followers",
      "following_url": "https://api.github.com/users/asayeed/following{/other_user}",
      "gists_url": "https://api.github.com/users/asayeed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asayeed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asayeed/subscriptions",
      "organizations_url": "https://api.github.com/users/asayeed/orgs",
      "repos_url": "https://api.github.com/users/asayeed/repos",
      "events_url": "https://api.github.com/users/asayeed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asayeed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T16:22:31Z",
    "updated_at": "2013-09-16T16:22:31Z",
    "author_association": "NONE",
    "body": "OK thanks. :) Just a little taken aback by falling exactly into the corner case where the convenient default is problematic.  I might never even have noticed...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24523506",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4849#issuecomment-24523506",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4849",
    "id": 24523506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTIzNTA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T16:25:41Z",
    "updated_at": "2013-09-16T16:25:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "np....I think its worth a warning/example in the docs.....which I will add\n\nthanks for the issue!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24524197",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4849#issuecomment-24524197",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4849",
    "id": 24524197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTI0MTk3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T16:34:56Z",
    "updated_at": "2013-09-16T16:34:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "looks at this after 5pm est today....will have a new section that shows an example.\n\nhttp://pandas.pydata.org/pandas-docs/dev/io.html#string-columns\n"
  }
]
