[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/233999923",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13720#issuecomment-233999923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13720",
    "id": 233999923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzk5OTkyMw==",
    "user": {
      "login": "se7entyse7en",
      "id": 5599208,
      "node_id": "MDQ6VXNlcjU1OTkyMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5599208?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/se7entyse7en",
      "html_url": "https://github.com/se7entyse7en",
      "followers_url": "https://api.github.com/users/se7entyse7en/followers",
      "following_url": "https://api.github.com/users/se7entyse7en/following{/other_user}",
      "gists_url": "https://api.github.com/users/se7entyse7en/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/se7entyse7en/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/se7entyse7en/subscriptions",
      "organizations_url": "https://api.github.com/users/se7entyse7en/orgs",
      "repos_url": "https://api.github.com/users/se7entyse7en/repos",
      "events_url": "https://api.github.com/users/se7entyse7en/events{/privacy}",
      "received_events_url": "https://api.github.com/users/se7entyse7en/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-20T16:15:45Z",
    "updated_at": "2016-07-20T16:15:45Z",
    "author_association": "NONE",
    "body": "The actual output of `print pd.Series([dateutil.parser.parse(y) for y in (x + x + x)])` is:\n\n```\n0    2016-07-19 00:00:00+00:00\n1    1970-01-01 00:00:00+00:00\n2    1970-01-01 00:00:00+00:00\n3    1970-01-01 00:00:00+00:00\n4    1970-01-01 00:00:00+00:00\n5    1970-01-01 00:00:00+00:00\n6    1970-01-01 00:00:00+00:00\n7    1970-01-01 00:00:00+00:00\n8    1970-01-01 00:00:00+00:00\n9    1970-01-01 00:00:00+00:00\n10   1970-01-01 00:00:00+00:00\n11   1970-01-01 00:00:00+00:00\n12   1970-01-01 00:00:00+00:00\n13   1970-01-01 00:00:00+00:00\n14   1970-01-01 00:00:00+00:00\n15   1970-01-01 00:00:00+00:00\n16   1970-01-01 00:00:00+00:00\n17   1970-01-01 00:00:00+00:00\n18   1970-01-01 00:00:00+00:00\n19   1970-01-01 00:00:00+00:00\n20   1970-01-01 00:00:00+00:00\n21   1970-01-01 00:00:00+00:00\n22   1970-01-01 00:00:00+00:00\n23   1970-01-01 00:00:00+00:00\n24   1970-01-01 00:00:00+00:00\n25   1970-01-01 00:00:00+00:00\n26   1970-01-01 00:00:00+00:00\n27   1970-01-01 00:00:00+00:00\n28   1970-01-01 00:00:00+00:00\n29   1970-01-01 00:00:00+00:00\n                ...           \n42   2016-07-19 18:00:00+00:00\n43   1970-01-01 00:00:00+00:00\n44   1970-01-01 00:00:00+00:00\n45   1970-01-01 00:00:00+00:00\n46   1970-01-01 00:00:00+00:00\n47   1970-01-01 00:00:00+00:00\n48   1970-01-01 00:00:00+00:00\n49   1970-01-01 00:00:00+00:00\n50   1970-01-01 00:00:00+00:00\n51   1970-01-01 00:00:00+00:00\n52   1970-01-01 00:00:00+00:00\n53   1970-01-01 00:00:00+00:00\n54   1970-01-01 00:00:00+00:00\n55   1970-01-01 00:00:00+00:00\n56   1970-01-01 00:00:00+00:00\n57   1970-01-01 00:00:00+00:00\n58   1970-01-01 00:00:00+00:00\n59   1970-01-01 00:00:00+00:00\n60   1970-01-01 00:00:00+00:00\n61   1970-01-01 00:00:00+00:00\n62   1970-01-01 00:00:00+00:00\n63   1970-01-01 00:00:00+00:00\n64   1970-01-01 00:00:00+00:00\n65   1970-01-01 00:00:00+00:00\n66   1970-01-01 00:00:00+00:00\n67   1970-01-01 00:00:00+00:00\n68   1970-01-01 00:00:00+00:00\n69   1970-01-01 00:00:00+00:00\n70   1970-01-01 00:00:00+00:00\n71   1970-01-01 00:00:00+00:00\ndtype: datetime64[ns, tzlocal()]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234001550",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13720#issuecomment-234001550",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13720",
    "id": 234001550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDAwMTU1MA==",
    "user": {
      "login": "se7entyse7en",
      "id": 5599208,
      "node_id": "MDQ6VXNlcjU1OTkyMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5599208?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/se7entyse7en",
      "html_url": "https://github.com/se7entyse7en",
      "followers_url": "https://api.github.com/users/se7entyse7en/followers",
      "following_url": "https://api.github.com/users/se7entyse7en/following{/other_user}",
      "gists_url": "https://api.github.com/users/se7entyse7en/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/se7entyse7en/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/se7entyse7en/subscriptions",
      "organizations_url": "https://api.github.com/users/se7entyse7en/orgs",
      "repos_url": "https://api.github.com/users/se7entyse7en/repos",
      "events_url": "https://api.github.com/users/se7entyse7en/events{/privacy}",
      "received_events_url": "https://api.github.com/users/se7entyse7en/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-20T16:21:35Z",
    "updated_at": "2016-07-21T07:33:28Z",
    "author_association": "NONE",
    "body": "Another interesting thing is that even if the representation contains those incorrect dates, the conversion to dict of the `Series` is correct:\n\n```\nIn [89]: pd.Series([dateutil.parser.parse(y) for y in (x + x + x)])\nOut[89]: \n0    2016-07-19 00:00:00+00:00\n1    1970-01-01 00:00:00+00:00\n2    1970-01-01 00:00:00+00:00\n3    1970-01-01 00:00:00+00:00\n4    1970-01-01 00:00:00+00:00\n5    1970-01-01 00:00:00+00:00\n6    1970-01-01 00:00:00+00:00\n7    1970-01-01 00:00:00+00:00\n8    1970-01-01 00:00:00+00:00\n9    1970-01-01 00:00:00+00:00\n10   1970-01-01 00:00:00+00:00\n11   1970-01-01 00:00:00+00:00\n12   1970-01-01 00:00:00+00:00\n13   1970-01-01 00:00:00+00:00\n14   1970-01-01 00:00:00+00:00\n15   1970-01-01 00:00:00+00:00\n16   1970-01-01 00:00:00+00:00\n17   1970-01-01 00:00:00+00:00\n18   1970-01-01 00:00:00+00:00\n19   1970-01-01 00:00:00+00:00\n20   1970-01-01 00:00:00+00:00\n21   1970-01-01 00:00:00+00:00\n22   1970-01-01 00:00:00+00:00\n23   1970-01-01 00:00:00+00:00\n24   1970-01-01 00:00:00+00:00\n25   1970-01-01 00:00:00+00:00\n26   1970-01-01 00:00:00+00:00\n27   1970-01-01 00:00:00+00:00\n28   1970-01-01 00:00:00+00:00\n29   1970-01-01 00:00:00+00:00\n                ...           \n42   2016-07-19 18:00:00+00:00\n43   1970-01-01 00:00:00+00:00\n44   1970-01-01 00:00:00+00:00\n45   1970-01-01 00:00:00+00:00\n46   1970-01-01 00:00:00+00:00\n47   1970-01-01 00:00:00+00:00\n48   1970-01-01 00:00:00+00:00\n49   1970-01-01 00:00:00+00:00\n50   1970-01-01 00:00:00+00:00\n51   1970-01-01 00:00:00+00:00\n52   1970-01-01 00:00:00+00:00\n53   1970-01-01 00:00:00+00:00\n54   1970-01-01 00:00:00+00:00\n55   1970-01-01 00:00:00+00:00\n56   1970-01-01 00:00:00+00:00\n57   1970-01-01 00:00:00+00:00\n58   1970-01-01 00:00:00+00:00\n59   1970-01-01 00:00:00+00:00\n60   1970-01-01 00:00:00+00:00\n61   1970-01-01 00:00:00+00:00\n62   1970-01-01 00:00:00+00:00\n63   1970-01-01 00:00:00+00:00\n64   1970-01-01 00:00:00+00:00\n65   1970-01-01 00:00:00+00:00\n66   1970-01-01 00:00:00+00:00\n67   1970-01-01 00:00:00+00:00\n68   1970-01-01 00:00:00+00:00\n69   1970-01-01 00:00:00+00:00\n70   1970-01-01 00:00:00+00:00\n71   1970-01-01 00:00:00+00:00\ndtype: datetime64[ns, tzlocal()]\n\nIn [90]: pd.Series([dateutil.parser.parse(y) for y in (x + x + x)]).to_dict()\nOut[90]: \n{0: Timestamp('2016-07-19 00:00:00+0000', tz='tzlocal()'),\n 1: Timestamp('2016-07-19 01:00:00+0000', tz='tzlocal()'),\n 2: Timestamp('2016-07-19 02:00:00+0000', tz='tzlocal()'),\n 3: Timestamp('2016-07-19 03:00:00+0000', tz='tzlocal()'),\n 4: Timestamp('2016-07-19 04:00:00+0000', tz='tzlocal()'),\n 5: Timestamp('2016-07-19 05:00:00+0000', tz='tzlocal()'),\n 6: Timestamp('2016-07-19 06:00:00+0000', tz='tzlocal()'),\n 7: Timestamp('2016-07-19 07:00:00+0000', tz='tzlocal()'),\n 8: Timestamp('2016-07-19 08:00:00+0000', tz='tzlocal()'),\n 9: Timestamp('2016-07-19 09:00:00+0000', tz='tzlocal()'),\n 10: Timestamp('2016-07-19 10:00:00+0000', tz='tzlocal()'),\n 11: Timestamp('2016-07-19 11:00:00+0000', tz='tzlocal()'),\n 12: Timestamp('2016-07-19 12:00:00+0000', tz='tzlocal()'),\n 13: Timestamp('2016-07-19 13:00:00+0000', tz='tzlocal()'),\n 14: Timestamp('2016-07-19 14:00:00+0000', tz='tzlocal()'),\n 15: Timestamp('2016-07-19 15:00:00+0000', tz='tzlocal()'),\n 16: Timestamp('2016-07-19 16:00:00+0000', tz='tzlocal()'),\n 17: Timestamp('2016-07-19 17:00:00+0000', tz='tzlocal()'),\n 18: Timestamp('2016-07-19 18:00:00+0000', tz='tzlocal()'),\n 19: Timestamp('2016-07-19 19:00:00+0000', tz='tzlocal()'),\n 20: Timestamp('2016-07-19 20:00:00+0000', tz='tzlocal()'),\n 21: Timestamp('2016-07-19 21:00:00+0000', tz='tzlocal()'),\n 22: Timestamp('2016-07-19 22:00:00+0000', tz='tzlocal()'),\n 23: Timestamp('2016-07-19 23:00:00+0000', tz='tzlocal()'),\n 24: Timestamp('2016-07-19 00:00:00+0000', tz='tzlocal()'),\n 25: Timestamp('2016-07-19 01:00:00+0000', tz='tzlocal()'),\n 26: Timestamp('2016-07-19 02:00:00+0000', tz='tzlocal()'),\n 27: Timestamp('2016-07-19 03:00:00+0000', tz='tzlocal()'),\n 28: Timestamp('2016-07-19 04:00:00+0000', tz='tzlocal()'),\n 29: Timestamp('2016-07-19 05:00:00+0000', tz='tzlocal()'),\n 30: Timestamp('2016-07-19 06:00:00+0000', tz='tzlocal()'),\n 31: Timestamp('2016-07-19 07:00:00+0000', tz='tzlocal()'),\n 32: Timestamp('2016-07-19 08:00:00+0000', tz='tzlocal()'),\n 33: Timestamp('2016-07-19 09:00:00+0000', tz='tzlocal()'),\n 34: Timestamp('2016-07-19 10:00:00+0000', tz='tzlocal()'),\n 35: Timestamp('2016-07-19 11:00:00+0000', tz='tzlocal()'),\n 36: Timestamp('2016-07-19 12:00:00+0000', tz='tzlocal()'),\n 37: Timestamp('2016-07-19 13:00:00+0000', tz='tzlocal()'),\n 38: Timestamp('2016-07-19 14:00:00+0000', tz='tzlocal()'),\n 39: Timestamp('2016-07-19 15:00:00+0000', tz='tzlocal()'),\n 40: Timestamp('2016-07-19 16:00:00+0000', tz='tzlocal()'),\n 41: Timestamp('2016-07-19 17:00:00+0000', tz='tzlocal()'),\n 42: Timestamp('2016-07-19 18:00:00+0000', tz='tzlocal()'),\n 43: Timestamp('2016-07-19 19:00:00+0000', tz='tzlocal()'),\n 44: Timestamp('2016-07-19 20:00:00+0000', tz='tzlocal()'),\n 45: Timestamp('2016-07-19 21:00:00+0000', tz='tzlocal()'),\n 46: Timestamp('2016-07-19 22:00:00+0000', tz='tzlocal()'),\n 47: Timestamp('2016-07-19 23:00:00+0000', tz='tzlocal()'),\n 48: Timestamp('2016-07-19 00:00:00+0000', tz='tzlocal()'),\n 49: Timestamp('2016-07-19 01:00:00+0000', tz='tzlocal()'),\n 50: Timestamp('2016-07-19 02:00:00+0000', tz='tzlocal()'),\n 51: Timestamp('2016-07-19 03:00:00+0000', tz='tzlocal()'),\n 52: Timestamp('2016-07-19 04:00:00+0000', tz='tzlocal()'),\n 53: Timestamp('2016-07-19 05:00:00+0000', tz='tzlocal()'),\n 54: Timestamp('2016-07-19 06:00:00+0000', tz='tzlocal()'),\n 55: Timestamp('2016-07-19 07:00:00+0000', tz='tzlocal()'),\n 56: Timestamp('2016-07-19 08:00:00+0000', tz='tzlocal()'),\n 57: Timestamp('2016-07-19 09:00:00+0000', tz='tzlocal()'),\n 58: Timestamp('2016-07-19 10:00:00+0000', tz='tzlocal()'),\n 59: Timestamp('2016-07-19 11:00:00+0000', tz='tzlocal()'),\n 60: Timestamp('2016-07-19 12:00:00+0000', tz='tzlocal()'),\n 61: Timestamp('2016-07-19 13:00:00+0000', tz='tzlocal()'),\n 62: Timestamp('2016-07-19 14:00:00+0000', tz='tzlocal()'),\n 63: Timestamp('2016-07-19 15:00:00+0000', tz='tzlocal()'),\n 64: Timestamp('2016-07-19 16:00:00+0000', tz='tzlocal()'),\n 65: Timestamp('2016-07-19 17:00:00+0000', tz='tzlocal()'),\n 66: Timestamp('2016-07-19 18:00:00+0000', tz='tzlocal()'),\n 67: Timestamp('2016-07-19 19:00:00+0000', tz='tzlocal()'),\n 68: Timestamp('2016-07-19 20:00:00+0000', tz='tzlocal()'),\n 69: Timestamp('2016-07-19 21:00:00+0000', tz='tzlocal()'),\n 70: Timestamp('2016-07-19 22:00:00+0000', tz='tzlocal()'),\n 71: Timestamp('2016-07-19 23:00:00+0000', tz='tzlocal()')}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234002263",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13720#issuecomment-234002263",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13720",
    "id": 234002263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDAwMjI2Mw==",
    "user": {
      "login": "se7entyse7en",
      "id": 5599208,
      "node_id": "MDQ6VXNlcjU1OTkyMDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5599208?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/se7entyse7en",
      "html_url": "https://github.com/se7entyse7en",
      "followers_url": "https://api.github.com/users/se7entyse7en/followers",
      "following_url": "https://api.github.com/users/se7entyse7en/following{/other_user}",
      "gists_url": "https://api.github.com/users/se7entyse7en/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/se7entyse7en/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/se7entyse7en/subscriptions",
      "organizations_url": "https://api.github.com/users/se7entyse7en/orgs",
      "repos_url": "https://api.github.com/users/se7entyse7en/repos",
      "events_url": "https://api.github.com/users/se7entyse7en/events{/privacy}",
      "received_events_url": "https://api.github.com/users/se7entyse7en/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-20T16:24:07Z",
    "updated_at": "2016-07-20T16:26:48Z",
    "author_association": "NONE",
    "body": "This problem becomes more important when dealing with `Dataframe`s and aggregation as in the following example:\n\n```\nIn [91]: df = pd.DataFrame({'timestamp': x + x + x, 'count': 1})\n\nIn [92]: df\nOut[92]: \n    count                 timestamp\n0       1  2016-07-19T00:00:00.000Z\n1       1  2016-07-19T01:00:00.000Z\n2       1  2016-07-19T02:00:00.000Z\n3       1  2016-07-19T03:00:00.000Z\n4       1  2016-07-19T04:00:00.000Z\n5       1  2016-07-19T05:00:00.000Z\n6       1  2016-07-19T06:00:00.000Z\n7       1  2016-07-19T07:00:00.000Z\n8       1  2016-07-19T08:00:00.000Z\n9       1  2016-07-19T09:00:00.000Z\n10      1  2016-07-19T10:00:00.000Z\n11      1  2016-07-19T11:00:00.000Z\n12      1  2016-07-19T12:00:00.000Z\n13      1  2016-07-19T13:00:00.000Z\n14      1  2016-07-19T14:00:00.000Z\n15      1  2016-07-19T15:00:00.000Z\n16      1  2016-07-19T16:00:00.000Z\n17      1  2016-07-19T17:00:00.000Z\n18      1  2016-07-19T18:00:00.000Z\n19      1  2016-07-19T19:00:00.000Z\n20      1  2016-07-19T20:00:00.000Z\n21      1  2016-07-19T21:00:00.000Z\n22      1  2016-07-19T22:00:00.000Z\n23      1  2016-07-19T23:00:00.000Z\n24      1  2016-07-19T00:00:00.000Z\n25      1  2016-07-19T01:00:00.000Z\n26      1  2016-07-19T02:00:00.000Z\n27      1  2016-07-19T03:00:00.000Z\n28      1  2016-07-19T04:00:00.000Z\n29      1  2016-07-19T05:00:00.000Z\n..    ...                       ...\n42      1  2016-07-19T18:00:00.000Z\n43      1  2016-07-19T19:00:00.000Z\n44      1  2016-07-19T20:00:00.000Z\n45      1  2016-07-19T21:00:00.000Z\n46      1  2016-07-19T22:00:00.000Z\n47      1  2016-07-19T23:00:00.000Z\n48      1  2016-07-19T00:00:00.000Z\n49      1  2016-07-19T01:00:00.000Z\n50      1  2016-07-19T02:00:00.000Z\n51      1  2016-07-19T03:00:00.000Z\n52      1  2016-07-19T04:00:00.000Z\n53      1  2016-07-19T05:00:00.000Z\n54      1  2016-07-19T06:00:00.000Z\n55      1  2016-07-19T07:00:00.000Z\n56      1  2016-07-19T08:00:00.000Z\n57      1  2016-07-19T09:00:00.000Z\n58      1  2016-07-19T10:00:00.000Z\n59      1  2016-07-19T11:00:00.000Z\n60      1  2016-07-19T12:00:00.000Z\n61      1  2016-07-19T13:00:00.000Z\n62      1  2016-07-19T14:00:00.000Z\n63      1  2016-07-19T15:00:00.000Z\n64      1  2016-07-19T16:00:00.000Z\n65      1  2016-07-19T17:00:00.000Z\n66      1  2016-07-19T18:00:00.000Z\n67      1  2016-07-19T19:00:00.000Z\n68      1  2016-07-19T20:00:00.000Z\n69      1  2016-07-19T21:00:00.000Z\n70      1  2016-07-19T22:00:00.000Z\n71      1  2016-07-19T23:00:00.000Z\n\n[72 rows x 2 columns]\n\nIn [93]: df['timestamp'] = [dateutil.parser.parse(y) for y in df['timestamp']]\n\nIn [94]: df.groupby(['timestamp'])['count'].sum()\nOut[94]: \ntimestamp\n1970-01-01 00:00:00+00:00    71\n2016-07-19 00:00:00+00:00     1\nName: count, dtype: int64\n```\n\nBut for some reason when the timezone is removed or changed (I tried `pytz.utc`) everything works as expected:\n\n```\nIn [95]: df = pd.DataFrame({'timestamp': x + x + x, 'count': 1})\n\nIn [96]: df['timestamp'] = [dateutil.parser.parse(y).replace(tzinfo=None) for y in df['timestamp']]\n\nIn [97]: df.groupby(['timestamp'])['count'].sum()\nOut[97]: \ntimestamp\n2016-07-19 00:00:00    3\n2016-07-19 01:00:00    3\n2016-07-19 02:00:00    3\n2016-07-19 03:00:00    3\n2016-07-19 04:00:00    3\n2016-07-19 05:00:00    3\n2016-07-19 06:00:00    3\n2016-07-19 07:00:00    3\n2016-07-19 08:00:00    3\n2016-07-19 09:00:00    3\n2016-07-19 10:00:00    3\n2016-07-19 11:00:00    3\n2016-07-19 12:00:00    3\n2016-07-19 13:00:00    3\n2016-07-19 14:00:00    3\n2016-07-19 15:00:00    3\n2016-07-19 16:00:00    3\n2016-07-19 17:00:00    3\n2016-07-19 18:00:00    3\n2016-07-19 19:00:00    3\n2016-07-19 20:00:00    3\n2016-07-19 21:00:00    3\n2016-07-19 22:00:00    3\n2016-07-19 23:00:00    3\nName: count, dtype: int64\n\nIn [101]: df = pd.DataFrame({'timestamp': x + x + x, 'count': 1})\n\nIn [102]: df['timestamp'] = [dateutil.parser.parse(y).replace(tzinfo=pytz.utc) for y in df['timestamp']]\n\nIn [103]: df.groupby(['timestamp'])['count'].sum()\nOut[103]: \ntimestamp\n2016-07-19 00:00:00+00:00    3\n2016-07-19 01:00:00+00:00    3\n2016-07-19 02:00:00+00:00    3\n2016-07-19 03:00:00+00:00    3\n2016-07-19 04:00:00+00:00    3\n2016-07-19 05:00:00+00:00    3\n2016-07-19 06:00:00+00:00    3\n2016-07-19 07:00:00+00:00    3\n2016-07-19 08:00:00+00:00    3\n2016-07-19 09:00:00+00:00    3\n2016-07-19 10:00:00+00:00    3\n2016-07-19 11:00:00+00:00    3\n2016-07-19 12:00:00+00:00    3\n2016-07-19 13:00:00+00:00    3\n2016-07-19 14:00:00+00:00    3\n2016-07-19 15:00:00+00:00    3\n2016-07-19 16:00:00+00:00    3\n2016-07-19 17:00:00+00:00    3\n2016-07-19 18:00:00+00:00    3\n2016-07-19 19:00:00+00:00    3\n2016-07-19 20:00:00+00:00    3\n2016-07-19 21:00:00+00:00    3\n2016-07-19 22:00:00+00:00    3\n2016-07-19 23:00:00+00:00    3\nName: count, dtype: int64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234020861",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13720#issuecomment-234020861",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13720",
    "id": 234020861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDAyMDg2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-20T17:29:09Z",
    "updated_at": "2016-07-20T17:29:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "timezones are quite tricky, pandas handles them very very well, see the [docs](http://pandas.pydata.org/pandas-docs/stable/timeseries.html#time-zone-handling).\n\nyou are doing some very odd conversions.\n\nsimpler (and much much faster) to use the pandas native parsers and such\n\n```\nIn [4]: pd.Series(pd.to_datetime(x, utc=True))\nOut[4]:\n0    2016-07-19 00:00:00+00:00\n1    2016-07-19 01:00:00+00:00\n2    2016-07-19 02:00:00+00:00\n3    2016-07-19 03:00:00+00:00\n4    2016-07-19 04:00:00+00:00\n5    2016-07-19 05:00:00+00:00\n                ...\n18   2016-07-19 18:00:00+00:00\n19   2016-07-19 19:00:00+00:00\n20   2016-07-19 20:00:00+00:00\n21   2016-07-19 21:00:00+00:00\n22   2016-07-19 22:00:00+00:00\n23   2016-07-19 23:00:00+00:00\ndtype: datetime64[ns, UTC]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234057605",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13720#issuecomment-234057605",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13720",
    "id": 234057605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDA1NzYwNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-20T19:35:23Z",
    "updated_at": "2016-07-20T19:35:23Z",
    "author_association": "MEMBER",
    "body": "@se7entyse7en Not sure what is going on on your computer, but your code runs fine for me:\n\n```\nIn [14]: pd.Series([dateutil.parser.parse(y) for y in (x + x + x)])\nOut[14]:\n0    2016-07-19 00:00:00+00:00\n1    2016-07-19 01:00:00+00:00\n2    2016-07-19 02:00:00+00:00\n3    2016-07-19 03:00:00+00:00\n4    2016-07-19 04:00:00+00:00\n                ...\n67   2016-07-19 19:00:00+00:00\n68   2016-07-19 20:00:00+00:00\n69   2016-07-19 21:00:00+00:00\n70   2016-07-19 22:00:00+00:00\n71   2016-07-19 23:00:00+00:00\ndtype: datetime64[ns, UTC]\n```\n\nBut indeed, @jreback says, better to just use `to_datetime` for string parsing\n"
  }
]
