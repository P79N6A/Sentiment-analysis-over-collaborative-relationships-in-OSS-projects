[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419683822",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22643#issuecomment-419683822",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22643",
    "id": 419683822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTY4MzgyMg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-09T01:24:22Z",
    "updated_at": "2018-09-09T01:24:22Z",
    "author_association": "MEMBER",
    "body": "Based on half an hour of testing locally, I'm +1 on this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420336845",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22643#issuecomment-420336845",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22643",
    "id": 420336845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDMzNjg0NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T16:33:30Z",
    "updated_at": "2018-09-11T16:33:30Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel : Could you illustrate with an example?  I'm not sure I follow you here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420364500",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22643#issuecomment-420364500",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22643",
    "id": 420364500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDM2NDUwMA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T17:59:41Z",
    "updated_at": "2018-09-11T17:59:41Z",
    "author_association": "MEMBER",
    "body": "> Could you illustrate with an example? I'm not sure I follow you here.\r\n\r\nFor illustration, I added the following test in tests/test_errors.py:\r\n```\r\ndef test_hide():\r\n    left = pd.DataFrame([1, 2])\r\n    right = pd.DataFrame([3, 4])\r\n    tm.assert_equal(left, right)\r\n```\r\n\r\nUnder the status quo:\r\n\r\n```\r\n$ python -m pytest pandas/tests/test_errors.py -k test_hide\r\n\r\n______________________________________________________________________________ test_hide ______________________________________________________________________________\r\n\r\n    def test_hide():\r\n        left = pd.DataFrame([1, 2])\r\n        right = pd.DataFrame([3, 4])\r\n>       tm.assert_equal(left, right)\r\n\r\npandas/tests/test_errors.py:14: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\npandas/util/testing.py:1530: in assert_equal\r\n    assert_frame_equal(left, right, **kwargs)\r\npandas/util/testing.py:1449: in assert_frame_equal\r\n    obj='DataFrame.iloc[:, {idx}]'.format(idx=i))\r\npandas/util/testing.py:1285: in assert_series_equal\r\n    obj='{obj}'.format(obj=obj))\r\npandas/_libs/testing.pyx:59: in pandas._libs.testing.assert_almost_equal\r\n    cpdef assert_almost_equal(a, b,\r\npandas/_libs/testing.pyx:173: in pandas._libs.testing.assert_almost_equal\r\n    raise_assert_detail(obj, msg, lobj, robj)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nobj = 'DataFrame.iloc[:, 0]', message = 'DataFrame.iloc[:, 0] values are different (100.0 %)', left = '[1, 2]', right = '[3, 4]', diff = None\r\n\r\n    def raise_assert_detail(obj, message, left, right, diff=None):\r\n    \r\n        if isinstance(left, np.ndarray):\r\n            left = pprint_thing(left)\r\n        elif is_categorical_dtype(left):\r\n            left = repr(left)\r\n    \r\n        if PY2 and isinstance(left, string_types):\r\n            # left needs to be printable in native text type in python2\r\n            left = left.encode('utf-8')\r\n    \r\n        if isinstance(right, np.ndarray):\r\n            right = pprint_thing(right)\r\n        elif is_categorical_dtype(right):\r\n            right = repr(right)\r\n    \r\n        if PY2 and isinstance(right, string_types):\r\n            # right needs to be printable in native text type in python2\r\n            right = right.encode('utf-8')\r\n    \r\n        msg = \"\"\"{obj} are different\r\n    \r\n    {message}\r\n    [left]:  {left}\r\n    [right]: {right}\"\"\".format(obj=obj, message=message, left=left, right=right)\r\n    \r\n        if diff is not None:\r\n            msg += \"\\n[diff]: {diff}\".format(diff=diff)\r\n    \r\n>       raise AssertionError(msg)\r\nE       AssertionError: DataFrame.iloc[:, 0] are different\r\nE       \r\nE       DataFrame.iloc[:, 0] values are different (100.0 %)\r\nE       [left]:  [1, 2]\r\nE       [right]: [3, 4]\r\n\r\npandas/util/testing.py:1075: AssertionError\r\n=============================================================== 1 failed, 12 deselected in 0.43 seconds ===============================================================\r\n```\r\n\r\nIf we add the line `__tracebackhide__ = True` at the top of `tm.assert_raise_detail`.  we instead get:\r\n\r\n```\r\n$ python -m pytest pandas/tests/test_errors.py -k test_hide\r\n\r\n______________________________________________________________________________ test_hide ______________________________________________________________________________\r\n\r\n    def test_hide():\r\n        left = pd.DataFrame([1, 2])\r\n        right = pd.DataFrame([3, 4])\r\n>       tm.assert_equal(left, right)\r\n\r\npandas/tests/test_errors.py:14: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\npandas/util/testing.py:1531: in assert_equal\r\n    assert_frame_equal(left, right, **kwargs)\r\npandas/util/testing.py:1450: in assert_frame_equal\r\n    obj='DataFrame.iloc[:, {idx}]'.format(idx=i))\r\npandas/util/testing.py:1286: in assert_series_equal\r\n    obj='{obj}'.format(obj=obj))\r\npandas/_libs/testing.pyx:59: in pandas._libs.testing.assert_almost_equal\r\n    cpdef assert_almost_equal(a, b,\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n>   raise_assert_detail(obj, msg, lobj, robj)\r\nE   AssertionError: DataFrame.iloc[:, 0] are different\r\nE   \r\nE   DataFrame.iloc[:, 0] values are different (100.0 %)\r\nE   [left]:  [1, 2]\r\nE   [right]: [3, 4]\r\n\r\npandas/_libs/testing.pyx:173: AssertionError\r\n=============================================================== 1 failed, 12 deselected in 0.29 seconds ===============================================================\r\n```\r\n\r\nwhich I claim is more readable, particularly when scrolling through a bunch of test failures.  I would also suggest putting this in `tm.assert_produces_warning` since that adds a lot of noise to test output that I don't find very useful."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420375744",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22643#issuecomment-420375744",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22643",
    "id": 420375744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDM3NTc0NA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T18:34:25Z",
    "updated_at": "2018-09-11T18:34:25Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel : Gotcha.  I think is reasonable, both for `raise_assert_detail` and `assert_produces_warning`.  I suspect others could benefit as well."
  }
]
