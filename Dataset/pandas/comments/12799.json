[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/205771582",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12799#issuecomment-205771582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12799",
    "id": 205771582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTc3MTU4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-05T12:07:01Z",
    "updated_at": "2016-04-05T12:07:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "you didn't `pd.show_versions()`, but with 0.18.0 this looks fine.\n\n```\nIn [1]: df = pd.DataFrame([[1, 'a'],[2, 'b'],[3, 'c'],[4, 'd']], columns=['_id', 'id'])\n\nIn [2]: df\nOut[2]: \n   _id id\n0    1  a\n1    2  b\n2    3  c\n3    4  d\n\nIn [3]: for row in df.itertuples():\n   ...:     print(row)\n   ...:     \nPandas(Index=0, _1=1, id='a')\nPandas(Index=1, _1=2, id='b')\nPandas(Index=2, _1=3, id='c')\nPandas(Index=3, _1=4, id='d')\n\nIn [6]: [ row for row in df.itertuples() ][0].id\nOut[6]: 'a'\n\nIn [7]: [ row for row in df.itertuples() ][0]._1\nOut[7]: 1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208037947",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12799#issuecomment-208037947",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12799",
    "id": 208037947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODAzNzk0Nw==",
    "user": {
      "login": "hadjmic",
      "id": 959031,
      "node_id": "MDQ6VXNlcjk1OTAzMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/959031?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hadjmic",
      "html_url": "https://github.com/hadjmic",
      "followers_url": "https://api.github.com/users/hadjmic/followers",
      "following_url": "https://api.github.com/users/hadjmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/hadjmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hadjmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hadjmic/subscriptions",
      "organizations_url": "https://api.github.com/users/hadjmic/orgs",
      "repos_url": "https://api.github.com/users/hadjmic/repos",
      "events_url": "https://api.github.com/users/hadjmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hadjmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T18:25:25Z",
    "updated_at": "2016-04-10T18:25:25Z",
    "author_association": "NONE",
    "body": "Is it intended behavior for _id to be renamed to _1?\n\n---\n\nFrom: Jeff Rebackmailto:notifications@github.com\nSent: ‎05/‎04/‎2016 15:07\nTo: pydata/pandasmailto:pandas@noreply.github.com\nCc: hadjmicmailto:michael_j_x@hotmail.com\nSubject: Re: [pydata/pandas] df.itertuples changes the name of the columns  (#12799)\n\nyou didn't `pd.show_versions()`, but with 0.18.0 this looks fine.\n\n```\nIn [1]: df = pd.DataFrame([[1, 'a'],[2, 'b'],[3, 'c'],[4, 'd']], columns=['_id', 'id'])\n\nIn [2]: df\nOut[2]:\n   _id id\n0    1  a\n1    2  b\n2    3  c\n3    4  d\n\nIn [3]: for row in df.itertuples():\n   ...:     print(row)\n   ...:\nPandas(Index=0, _1=1, id='a')\nPandas(Index=1, _1=2, id='b')\nPandas(Index=2, _1=3, id='c')\nPandas(Index=3, _1=4, id='d')\n\nIn [6]: [ row for row in df.itertuples() ][0].id\nOut[6]: 'a'\n\nIn [7]: [ row for row in df.itertuples() ][0]._1\nOut[7]: 1\n```\n\n---\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/pydata/pandas/issues/12799#issuecomment-205771582\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208041723",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12799#issuecomment-208041723",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12799",
    "id": 208041723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODA0MTcyMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T18:35:22Z",
    "updated_at": "2016-04-10T18:35:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes, leading underscores are not allowed in `NamedTuples` \n\n```\nSignature: df.itertuples(index=True, name='Pandas')\nDocstring:\nIterate over DataFrame rows as namedtuples, with index value as first\nelement of the tuple.\n\nParameters\n----------\nindex : boolean, default True\n    If True, return the index as the first element of the tuple.\nname : string, default \"Pandas\"\n    The name of the returned namedtuples or None to return regular\n    tuples.\n\nNotes\n-----\nThe column names will be renamed to positional names if they are\ninvalid Python identifiers, repeated, or start with an underscore.\nWith a large number of columns (>255), regular tuples are returned.\n\nSee also\n--------\niterrows : Iterate over DataFrame rows as (index, Series) pairs.\niteritems : Iterate over (column name, Series) pairs.\n\nExamples\n--------\n\n>>> df = pd.DataFrame({'col1': [1, 2], 'col2': [0.1, 0.2]},\n                      index=['a', 'b'])\n>>> df\n   col1  col2\na     1   0.1\nb     2   0.2\n>>> for row in df.itertuples():\n...     print(row)\n...\nPandas(Index='a', col1=1, col2=0.10000000000000001)\nPandas(Index='b', col1=2, col2=0.20000000000000001)\nFile:      ~/pandas/pandas/core/frame.py\nType:      instancemethod\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208080874",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12799#issuecomment-208080874",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12799",
    "id": 208080874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODA4MDg3NA==",
    "user": {
      "login": "hadjmic",
      "id": 959031,
      "node_id": "MDQ6VXNlcjk1OTAzMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/959031?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hadjmic",
      "html_url": "https://github.com/hadjmic",
      "followers_url": "https://api.github.com/users/hadjmic/followers",
      "following_url": "https://api.github.com/users/hadjmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/hadjmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hadjmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hadjmic/subscriptions",
      "organizations_url": "https://api.github.com/users/hadjmic/orgs",
      "repos_url": "https://api.github.com/users/hadjmic/repos",
      "events_url": "https://api.github.com/users/hadjmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hadjmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T21:50:37Z",
    "updated_at": "2016-04-10T21:50:37Z",
    "author_association": "NONE",
    "body": "A didn't know that.  Sorry for not checking\n\nSent from Outlook Mobile\n\nOn Sun, Apr 10, 2016 at 11:35 AM -0700, \"Jeff Reback\" notifications@github.com wrote:\n\nyes, leading underscores are not allowed in `NamedTuples`\n\n```\nSignature: df.itertuples(index=True, name='Pandas')\nDocstring:\nIterate over DataFrame rows as namedtuples, with index value as first\nelement of the tuple.\n\nParameters\n----------\nindex : boolean, default True\n    If True, return the index as the first element of the tuple.\nname : string, default \"Pandas\"\n    The name of the returned namedtuples or None to return regular\n    tuples.\n\nNotes\n-----\nThe column names will be renamed to positional names if they are\ninvalid Python identifiers, repeated, or start with an underscore.\nWith a large number of columns (>255), regular tuples are returned.\n\nSee also\n--------\niterrows : Iterate over DataFrame rows as (index, Series) pairs.\niteritems : Iterate over (column name, Series) pairs.\n\nExamples\n--------\n\n>>> df = pd.DataFrame({'col1': [1, 2], 'col2': [0.1, 0.2]},\n                      index=['a', 'b'])\n>>> df\n   col1  col2\na     1   0.1\nb     2   0.2\n>>> for row in df.itertuples():\n...     print(row)\n...\nPandas(Index='a', col1=1, col2=0.10000000000000001)\nPandas(Index='b', col1=2, col2=0.20000000000000001)\nFile:      ~/pandas/pandas/core/frame.py\nType:      instancemethod\n```\n\n---\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/pydata/pandas/issues/12799#issuecomment-208041723\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479135205",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12799#issuecomment-479135205",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12799",
    "id": 479135205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTEzNTIwNQ==",
    "user": {
      "login": "shouldsee",
      "id": 8034156,
      "node_id": "MDQ6VXNlcjgwMzQxNTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8034156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shouldsee",
      "html_url": "https://github.com/shouldsee",
      "followers_url": "https://api.github.com/users/shouldsee/followers",
      "following_url": "https://api.github.com/users/shouldsee/following{/other_user}",
      "gists_url": "https://api.github.com/users/shouldsee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shouldsee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shouldsee/subscriptions",
      "organizations_url": "https://api.github.com/users/shouldsee/orgs",
      "repos_url": "https://api.github.com/users/shouldsee/repos",
      "events_url": "https://api.github.com/users/shouldsee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shouldsee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-02T18:28:52Z",
    "updated_at": "2019-04-02T18:28:52Z",
    "author_association": "NONE",
    "body": "It seems \"from\" is a keyword that triggers renameing\r\n\r\n```python\r\nimport pandas as pd\r\nnext(pd.DataFrame([[1,2],[3,4]],columns=['from','to']).itertuples())\r\n### Pandas(Index=0, _1=1, to=2)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479425861",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12799#issuecomment-479425861",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12799",
    "id": 479425861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQyNTg2MQ==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T10:07:34Z",
    "updated_at": "2019-04-03T10:07:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shouldsee : that's right. `from` is a Python keyword. fieldnames of a namedtuple cannot be a Python keyword. https://docs.python.org/3/library/collections.html?highlight=namedtuple#collections.namedtuple.\r\n\r\n```python\r\n>>> from collections import namedtuple\r\n>>> namedtuple('Pandas', ['Index','from','to'])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\simon\\Anaconda3\\envs\\pandas-dev\\lib\\collections\\__init__.py\", line 364, in namedtuple\r\n    raise ValueError('Type names and field names cannot be a '\r\nValueError: Type names and field names cannot be a keyword: 'from'\r\n>>> namedtuple('Pandas', ['Index','from','to'],rename=True)(0,1,2)\r\nPandas(Index=0, _1=1, to=2)\r\n>>>\r\n\r\n```\r\n\r\nperhaps the pandas documentation could be changed from\r\n\r\n```\r\nNotes\r\n-----\r\nThe column names will be renamed to positional names if they are\r\ninvalid Python identifiers, repeated, or start with an underscore.\r\nWith a large number of columns (>255), regular tuples are returned.\r\n```\r\n\r\nto\r\n\r\n```\r\nNotes\r\n-----\r\nThe column names will be renamed to positional names if they are\r\ninvalid Python identifiers, repeated, start with an underscore, or\r\nare a Python keyword.\r\nWith a large number of columns (>255), regular tuples are returned.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479437753",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12799#issuecomment-479437753",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12799",
    "id": 479437753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQzNzc1Mw==",
    "user": {
      "login": "shouldsee",
      "id": 8034156,
      "node_id": "MDQ6VXNlcjgwMzQxNTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8034156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shouldsee",
      "html_url": "https://github.com/shouldsee",
      "followers_url": "https://api.github.com/users/shouldsee/followers",
      "following_url": "https://api.github.com/users/shouldsee/following{/other_user}",
      "gists_url": "https://api.github.com/users/shouldsee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shouldsee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shouldsee/subscriptions",
      "organizations_url": "https://api.github.com/users/shouldsee/orgs",
      "repos_url": "https://api.github.com/users/shouldsee/repos",
      "events_url": "https://api.github.com/users/shouldsee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shouldsee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T10:46:55Z",
    "updated_at": "2019-04-03T11:02:48Z",
    "author_association": "NONE",
    "body": "Dear @simonjayhawkins\r\n\r\nMany thanks for the note! I did not realise that Pandas is using collections.namedtuple() for df.itertuples() -- I have used found itertuples() very useful in creating iterator of dictionaries with\r\n\r\n```python2\r\n\r\nit = (x.__dict__ for x in df.itertuples())\r\n\r\n```\r\n\r\nCan we possibly add a itertuples(as_dict=True) subroutine? (Also needs to rename `x.__dict__['Index']` to `x.__dict__['index']` to agree with `df.index`)\r\n\r\nKind regards\r\nFeng"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479457712",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12799#issuecomment-479457712",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12799",
    "id": 479457712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQ1NzcxMg==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T11:55:52Z",
    "updated_at": "2019-04-03T11:55:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "i'm assuming you have a large DataFrame and that `.to_dict(orient='records')` doesn't serve your purpose. If so can you open a new issue for this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479466007",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12799#issuecomment-479466007",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12799",
    "id": 479466007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQ2NjAwNw==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T12:22:29Z",
    "updated_at": "2019-04-03T12:22:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "you'll probably get a better solution if you ask on SO, but for single-level indexes something like...\r\n```\r\n>>> import pandas as pd\r\n>>> df = pd.DataFrame([[1,2],[3,4]],columns=['from','to'])\r\n>>> keys = [df.index.name or 'index'] + list(df.columns)\r\n>>> it = (dict(zip(keys,row)) for row in df.itertuples(name=None))\r\n>>> list(it)\r\n[{'index': 0, 'from': 1, 'to': 2}, {'index': 1, 'from': 3, 'to': 4}]\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479468067",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12799#issuecomment-479468067",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12799",
    "id": 479468067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQ2ODA2Nw==",
    "user": {
      "login": "shouldsee",
      "id": 8034156,
      "node_id": "MDQ6VXNlcjgwMzQxNTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8034156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shouldsee",
      "html_url": "https://github.com/shouldsee",
      "followers_url": "https://api.github.com/users/shouldsee/followers",
      "following_url": "https://api.github.com/users/shouldsee/following{/other_user}",
      "gists_url": "https://api.github.com/users/shouldsee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shouldsee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shouldsee/subscriptions",
      "organizations_url": "https://api.github.com/users/shouldsee/orgs",
      "repos_url": "https://api.github.com/users/shouldsee/repos",
      "events_url": "https://api.github.com/users/shouldsee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shouldsee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T12:29:11Z",
    "updated_at": "2019-04-03T12:29:11Z",
    "author_association": "NONE",
    "body": "It was mainly for syntax reason that I wanted iterdicts(), so not particularly fussed with its performance yet. See #25973"
  }
]
