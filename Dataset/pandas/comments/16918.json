[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315271529",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16918#issuecomment-315271529",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16918",
    "id": 315271529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTI3MTUyOQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T05:11:15Z",
    "updated_at": "2017-07-14T05:11:22Z",
    "author_association": "MEMBER",
    "body": "@jzwinck : Sounds pretty reasonable, given that it is consistent with our API for other functions.\r\n\r\nI would suggest you try implementing the `fill_value=-1` functionality first and save the `dict` input for later.  That might need to be a larger discussion since that point could easily be applied to any non-`Series` (or 1-D array-like) object in `pandas`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315321423",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16918#issuecomment-315321423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16918",
    "id": 315321423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTMyMTQyMw==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T09:58:12Z",
    "updated_at": "2017-07-14T09:58:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung Thanks.  I just realized that this also behaves badly:\r\n\r\n    pd.DataFrame([{'x': x}, {}])\r\n\r\nCan you suggest a way to make that work?  I would leverage that solution to improve `json_normalize()`, but it seems the various DataFrame constructors do not support `fill_value` or similar.\r\n\r\nIf there is no good way to do this with the simple case of constructing a DataFrame, then we could either implement one, or we could make `json_normalize()` populate all missing keys.  The latter seems easier to implement but likely worse for performance.  Then again, `json_normalize()` has a comment saying the performance is \"disastrous\" already.  :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315369017",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16918#issuecomment-315369017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16918",
    "id": 315369017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTM2OTAxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T14:09:47Z",
    "updated_at": "2017-07-14T14:09:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "type conversions from json are not unexpected; it is not a typed format. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315388497",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16918#issuecomment-315388497",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16918",
    "id": 315388497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTM4ODQ5Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T15:25:23Z",
    "updated_at": "2017-07-14T15:25:23Z",
    "author_association": "MEMBER",
    "body": "> Can you suggest a way to make that work?\r\n\r\nThis is a somewhat unusual way of initializing a `DataFrame`, so I'm inclined to go with two.  That being said, have a look at performance to see just how \"disastrous\" it is. ðŸ˜„ \r\n\r\n> type conversions from json are not unexpected; it is not a typed format.\r\n\r\nWhat are your thoughts regarding this proposal to add `fill_value` then?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315654187",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16918#issuecomment-315654187",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16918",
    "id": 315654187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTY1NDE4Nw==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-17T01:48:00Z",
    "updated_at": "2017-07-17T01:48:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung I made it work well enough for my purposes by adding `fill_value=None` to the signature of `nested_to_record()`, then doing this near the end of the function:\r\n\r\n     if fill_value is not None:\r\n        # make it so every new_d has all keys\r\n        for new_d in new_ds:\r\n            for key in keys:\r\n                if key not in new_d:\r\n                    new_d[key] = fill_value\r\n\r\nThis simple solution has three significant problems:\r\n\r\n 1. It produces bad data when field types differ, e.g. float and str columns don't need `fill_value` for my use case--only `int64` or `uint64`.\r\n 2. It doesn't do anything when `record_path is not None`.\r\n 3. It is not efficient.  Making it efficient probably requires a DataFrame constructor supporting `fill_value`.\r\n\r\nIt's unlikely that I'll contribute a patch for this one, but I do think it is important to address."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315659506",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16918#issuecomment-315659506",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16918",
    "id": 315659506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTY1OTUwNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-17T02:57:21Z",
    "updated_at": "2017-07-17T02:57:21Z",
    "author_association": "MEMBER",
    "body": "@jzwinck : Okay, sounds good!  This work will be useful for anyone who takes up this issue later."
  }
]
