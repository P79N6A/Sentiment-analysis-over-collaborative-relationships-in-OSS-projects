[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43902856",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-43902856",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 43902856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTAyODU2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-22T15:23:18Z",
    "updated_at": "2014-05-22T15:23:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud @jorisvandenbossche \n\ncc @rosnfeld \ncc @mtkni \n\ncontinue the discussion here (but we'll consider for 0.14.1)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43918912",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-43918912",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 43918912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTE4OTEy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-22T17:30:35Z",
    "updated_at": "2014-05-22T17:30:35Z",
    "author_association": "MEMBER",
    "body": "i think `to_index` good. never really use these that much. agree that the `Index` type dependence could be a bit a special case and possibly confusing to new users.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43934559",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-43934559",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 43934559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTM0NTU5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-22T19:39:27Z",
    "updated_at": "2014-05-22T19:41:34Z",
    "author_association": "MEMBER",
    "body": "I agree with @mtkni that adding a `to_index()` method does not really solve the issue (but apart from this issue, it can be a good enhancement to add such a method).\n\nThe problem in mindset with the datetime accessors, when you have a datetime column in a dataframe, is that you have to first make an index of it before you can access datetime fields. If you don't really know the background, this is not logical. \"Why should you make an index of it? If I only need the day values?\" Whether this is with `DatetimeIndex(s)` or with `s.to_index()` does not really matter that much in this sense (although I agree it makes it a bit easier/shorter).\n\nI also agree that you 'expect' at first sight that a series method acts on the values, not on the index (for most methods, you have of course index-specific methods). So I think it is good for now to disable this (as you did in #7206) until we decide on the API.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44005198",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44005198",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44005198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDA1MTk4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T12:55:27Z",
    "updated_at": "2014-05-23T12:55:27Z",
    "author_association": "MEMBER",
    "body": "What would you actually think of having the attributes act on the Series values? (so having `s.year` and `s.index.year`) or would that be to dangerous to confuse them?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44005481",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44005481",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44005481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDA1NDgx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T12:58:47Z",
    "updated_at": "2014-05-23T12:58:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "that's what I had originally; but it IS ambiguous if you have a datetime index AND datetime values on a Series (not that common but common enough I guess).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44006644",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44006644",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44006644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDA2NjQ0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T13:11:28Z",
    "updated_at": "2014-05-23T13:11:28Z",
    "author_association": "MEMBER",
    "body": "In that case it is indeed a bit ambiguous, but I think less ambiguous as the other way around (the attributes acting on the index). And it would also be useful functionality to have such attributes on the datetime64 values of a series/column.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44007472",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44007472",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44007472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDA3NDcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T13:19:34Z",
    "updated_at": "2014-05-23T13:19:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "ahh..you want them to act on the VALUES? hmm, don't liek the `s.to_index().day` approach? (which IMHO is pretty explicity)....maybe could make a property like `s.vindex.day` or something\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44017154",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44017154",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44017154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDE3MTU0",
    "user": {
      "login": "rosnfeld",
      "id": 5356340,
      "node_id": "MDQ6VXNlcjUzNTYzNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5356340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rosnfeld",
      "html_url": "https://github.com/rosnfeld",
      "followers_url": "https://api.github.com/users/rosnfeld/followers",
      "following_url": "https://api.github.com/users/rosnfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/rosnfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rosnfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rosnfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/rosnfeld/orgs",
      "repos_url": "https://api.github.com/users/rosnfeld/repos",
      "events_url": "https://api.github.com/users/rosnfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rosnfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T14:36:35Z",
    "updated_at": "2014-05-23T14:36:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just a comment on my motivation here (I can't speak for @mtkni, though curious to hear other use cases):\n\nI have worked with various datasets with multiple datetime columns, where none of them should really be the \"index\", so I find this to be somewhat common. E.g. humanitarian funding data might have various \"state transition\" dates for each entry (date funding was pledged, date it was transferred, date it was deployed towards a project, etc). Or a big dataset of projects might have start and end dates. So it's not that I'm creating standalone Series with date values, but the columns of a DataFrame often fit the bill.\n\nMaybe I want to extract the year or month from each of these columns, or maybe somebody would want to tz_localize/tz_convert. Writing `projects.end_date.year` seems natural and yet it doesn't work, and the error is confusing - why would that operation have anything to do with the index? It looks like it's an operation on the column.\n\nRequiring conversion to an index is surprising, as I (and likely others who don't understand the code as well) don't understand what is \"special\" about an index (or special about datetimes).\n\nI'd be curious to know how others view this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44018820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44018820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44018820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDE4ODIw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T14:46:02Z",
    "updated_at": "2014-05-23T14:55:13Z",
    "author_association": "MEMBER",
    "body": "@jreback yes indeed the values :-) \n\nAnd that having to convert it to an index is strange, is what I wanted to say in my comment above (https://github.com/pydata/pandas/issues/7207#issuecomment-43934559), as also @rosnfeld argues.\n\nFor me it is also rather common to have datetime values in columns, eg start and end times of measurements.\n\nI agree that having a datelike index and a non-datelike values is probably by far the more common use case, for that case it is not that much more work (and more explicit) to type `s.index.day` \n\nTo make it concrete, this would give something like this:\n\n```\nIn [1]: s = pd.Series(pd.date_range(\"2013-01-01 09:00:00\", periods=3))\n\nIn [2]: s\nOut[2]:\n0   2013-01-01 09:00:00\n1   2013-01-02 09:00:00\n2   2013-01-03 09:00:00\ndtype: datetime64[ns]\n\nIn [3]: s.day\n0    1\n1    2\n2    3\ndtype: int64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44018952",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44018952",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44018952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDE4OTUy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T14:46:48Z",
    "updated_at": "2014-05-23T14:48:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rosnfeld ok, so you like the idea of using datetime-like ops (e.g. year,month,seconds...etc)\n\non the VALUES of a series (e.g. `s.year`) \n\nrather that having them act on the index (which `s.index.year` will accomplish in any event)\n\nso going back to common methods/properties for index/series (so they act similary, a good thing).\n\nNote that their are currently several methods that DO NOT DO this, e.g. `at_time/between_time/tz_localize/tz_convert` which act on the index! (and the removed `Series.weekday`).\n\nnote also that `tshift/asfreq` acts on the index (but is more of a reshaping operation so that seems ok)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44024109",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44024109",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44024109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDI0MTA5",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T15:16:59Z",
    "updated_at": "2014-05-23T15:16:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to confirm, with a `Series` with datetime values and a datetime Index, the ops will still operate on the values right?\n\nIf so then +1 from me on operating on the values.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44095269",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44095269",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44095269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDk1MjY5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-24T18:22:41Z",
    "updated_at": "2014-05-24T18:22:41Z",
    "author_association": "MEMBER",
    "body": "Instead of adding `to_index()` just so you can write `s.to_index().day`, what about creating some sort of \"DatetimeArray\" which separates out the part of DatetimeIndex which fixes np.datetime64 quirks from the Index part? This seems like the cleaner, more modular solution. DatetimeArray would implement properties like `.day` without the need to create an Index.\n\nNot having looked at DatetimeIndex internals very carefully, I'm not sure how painful this would be. Of course, better would be to try to fix datetime64 upstream in numpy...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44095439",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44095439",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44095439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDk1NDM5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-24T18:29:41Z",
    "updated_at": "2014-05-24T18:29:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer not sure what u mean by datetime64 quirks?\nDatetimeIndex already fixes everything (numpy quirks) and provides quite a lot of functionality\nthe issue is that Series and Index are really quite similar (and share a hierarchy to some extent in. 0.14.0)\n\nonly issue is how to unambiguously do things with the Series values. (eg Series.day) or the index\nSeries.index.day or have the user be more explicit by doing something like\nSeries.to_index().day or Series.values_as_index.day\n(as Series.values returns the raw numpy data and cannot be used to this in a nice clean way) and relying on numpy for that functionality is not possible ATM \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44096202",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44096202",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44096202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDk2MjAy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-24T18:51:46Z",
    "updated_at": "2014-05-24T18:51:46Z",
    "author_association": "MEMBER",
    "body": "I know DatetimeIndex fixes the numpy quirks (comparison, casting, NaT, etc.) and provides some nice extra functionality (like the .day properties). My point is that most of these features are actually entirely distinct from the index part, so you can imagine exposing those in something like a \"DatetimeArray\" which makes the index part optional. DatetimeIndex would then be a relatively shallow wrapper around DatetimeArray.\n\nI guess this would be API breaking, but if `s.values` could be an nd-array-like DatetimeArray (possibly even an ndarray subclass), then it would simplify this design issue because it would be obvious that Series would just pass on the \"day\" property from \"s.values\", like how it already does for ndarray properties.\n\nMaybe this is not terribly useful for pandas because creating an index larger than a certain size only bothers to create the index lookup table on demand anyways.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44096739",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44096739",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44096739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDk2NzM5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-24T19:09:38Z",
    "updated_at": "2014-05-24T19:09:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "it's possible that I could simply have Series.values return a DatetimeIndex if the dtype is correct (in fact other dtypes eg Categorical and Sparse do this) This might work and is not really a breaking API change - not need to create another class for that reason\n\nthat said it IS natural to simply use Series.day which applies to the values of the Series\njust like virtually any other function (with a couple of exceptions as noted above)\n\nthe only issue I have is that doing Series.day on say a float dtype series will have to raise a TypeError\nbut I think that's ok\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44097187",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44097187",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44097187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDk3MTg3",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-24T19:29:15Z",
    "updated_at": "2014-05-24T19:29:15Z",
    "author_association": "MEMBER",
    "body": "I guess the reason to (possibly) make another class would be so this same sort of thing works even with multi-dimensional datetime arrays, e.g., on a DataFrame with datetime values (`df.day`). That said, I'm :+1: on Series.values returning a DatetimeIndex as a step in the right direction. Bare np.datetime64 arrays are not terribly useful.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44097276",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44097276",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44097276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDk3Mjc2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-24T19:33:40Z",
    "updated_at": "2014-05-24T19:33:40Z",
    "author_association": "MEMBER",
    "body": "I am not too fond of returning a DatetimeIndex for `s.values`, as this is well known to return a numpy array with the values. That would also be strange I think, that this would be different for datetimes.\n\nAnd if you want to have these things for a whole dataframe of datetimes, you can always use `apply` and use the (possible) series attribute.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44151194",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44151194",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44151194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTUxMTk0",
    "user": {
      "login": "jonblunt",
      "id": 3467317,
      "node_id": "MDQ6VXNlcjM0NjczMTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3467317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonblunt",
      "html_url": "https://github.com/jonblunt",
      "followers_url": "https://api.github.com/users/jonblunt/followers",
      "following_url": "https://api.github.com/users/jonblunt/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonblunt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonblunt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonblunt/subscriptions",
      "organizations_url": "https://api.github.com/users/jonblunt/orgs",
      "repos_url": "https://api.github.com/users/jonblunt/repos",
      "events_url": "https://api.github.com/users/jonblunt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonblunt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-26T01:23:06Z",
    "updated_at": "2014-05-26T01:23:06Z",
    "author_association": "NONE",
    "body": "FWIW how about s.values.asdatetime().day  .\n\nFor the uniinitiated the \"index\" information is not interesting, and\nconfusing.  We have column that is datetime, the values are a not very\nuseful datetime64 but we want to use thme as a pandas datetime.\n\nI assume that if the underlying array is not datetime64 this throws an\nerror.\n\nOn Sat, May 24, 2014 at 2:33 PM, Joris Van den Bossche <\nnotifications@github.com> wrote:\n\n> I am not too fond of returning a DatetimeIndex for s.values, as this is\n> well known to return a numpy array with the values. That would also be\n> strange I think, that this would be different for datetimes.\n> \n> And if you want to have these things for a whole dataframe of datetimes,\n> you can always use apply and use the (possible) series attribute.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/7207#issuecomment-44097276\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44228045",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44228045",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44228045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjI4MDQ1",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-27T01:32:18Z",
    "updated_at": "2014-05-27T01:32:18Z",
    "author_association": "MEMBER",
    "body": "@jonblunt Unfortunately `s.values.asdatetime()` can't work unless `s.values` changes from being a raw `numpy.ndarray` -- it would need to be some sort of custom object for it to be possible to add a new method like `asdatetime()`.\n\nI agree that seeing a DatetimeIndex could be somewhat confusing, which is why I suggested a more generic DatetimeArray. However, `pandas.Index` objects do act almost exactly like ndarrays with a few extra methods, so from a functionality perspective it would be almost equivalent -- just with a slightly confusing repr when you print the values.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44361846",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-44361846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 44361846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzYxODQ2",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-28T03:23:32Z",
    "updated_at": "2014-05-28T03:23:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would it make sense to make a Series with datetime values a subclass of Series (with DatetimeIndex date-y methods?)... Or perhaps a property as datetime? That way we tab complete the methods.\n\n```\n@property\ndef as_datetime(self):\n    # assert it's a datetime dtype\n    return pd.DatetimeIndex(self)\n\npd.Series.as_datetime = as_datetime\n\ns.as_datetime.<tab>  # shows datetimeindex methods if datetime\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45631260",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-45631260",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 45631260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjMxMjYw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-10T15:42:18Z",
    "updated_at": "2014-06-10T15:42:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "pushing to 0.15; would be an API change\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45992895",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-45992895",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 45992895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTkyODk1",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-13T09:38:06Z",
    "updated_at": "2014-06-13T09:38:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not sure if this is related, but #7217 just introduced `Series.cat.<categorical functions>` (if Series is of type Categorical).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51357541",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-51357541",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 51357541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzU3NTQx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T16:08:47Z",
    "updated_at": "2014-08-06T16:08:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://stackoverflow.com/questions/25129144/pandas-return-hour-from-datetime-column-directly?noredirect=1#comment39179371_25129144\n\nI think easiest / best way is simply add:\n\n`Series.to_index()`, nice clean and consistent.\n\nany takers for a PR?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51365052",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-51365052",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 51365052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzY1MDUy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T17:05:33Z",
    "updated_at": "2014-08-06T17:05:33Z",
    "author_association": "MEMBER",
    "body": "Repeating what is said above: although adding a `Series.to_index()` method could certainly be useful in general, this does not really solve this issue IMO. \nThe issue is: to access datetime attributes of datetime values in a _series_, you have to do (for `year`): `pd.DatetimeIndex(series).year`. This has two issues:\n1. This is rather verbose to write\n2. This is also strange / not logical / surprising to have to write this, because \"Uh, I don't need an index, I just want the year-part?\" \n\nThat you need this index because for this type the attributes are only available on an index-type is an implementation detail, which a lot of users will not know (wanting to access the year part is not inherently more logically tied to an index, but just to datetime-values, whether in a series or in an index).\n\nSo adding `Series.to_index()` will solve my point 1 a bit (it is less typing), but point 2 not at all.\n\nPossible solutions I see (and mentioned above):\n- Introduce Series attributes that act on the values of the Series (and Index attributes for the index). So `Series.year` and `Series.index.year`\n  - The disadvantage of this is that some existing Series methods act on the index rather than the values, such as `tz_localize/convert`, `at_time/between_time` (but for the first, these are not even possible for series values, so not yet a real problem, only an inconsistency) + adding a lot of attributes which are only relevant for one dtype\n- Introduce a \"method/attribute namespace\" like `str` for the StringMethods. Something like `Series.timestamp/datetime/dt/..`. So eg `Series.dt.year` and `Series.index.year`.\n  - Disadvantage: yet another namespace attribute\n- Have a kind of `DatetimeSeries` (so a kind of subclass of Series depending on the dtype of the series values, like you have different Index types) that adds these attributes\n  - This (if something like this is possible technically) could have the advantage that the attributes are only available (and visible with tab completion) if you really have a datetime dtype (in the first option you get a lot of clutter in the attributes for all other types), and maybe also that the timezone capabilities of DatetimeIndex could become available for Series values. But I don't know if we want to go this route (different Series subclasses for different dtypes as we have for Index)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51366668",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-51366668",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 51366668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzY2NjY4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T17:18:20Z",
    "updated_at": "2014-08-06T17:22:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's the big problem with adding soln 1), from joris list (`Series.year`) and the reason was backed out in the first place. \n\nIt is ambiguous if BOTH the index and the values are datetime (or periods).\n\nI suppose we could allow the properties to work if its non-ambiguous, but then raise in the ambiguous case?\n\n`idx = date_range('20130101',periods=5)`\n\nso this would work\n`Series(range(5),index=idx).year`\n\nso this would raise (`AmbiguousAccessorError`)?\n`Series(idx,index=idx).year`\n\nof is that too weird / confusing?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51367497",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-51367497",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 51367497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzY3NDk3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T17:24:09Z",
    "updated_at": "2014-08-06T17:24:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "as an aside, its pretty easy to do some filtering on the attributes at run-time to show/not show depending on the dtype, just need to override `__dir__` and/or `_local_dir`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51368033",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-51368033",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 51368033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzY4MDMz",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T17:28:19Z",
    "updated_at": "2014-08-06T17:28:19Z",
    "author_association": "MEMBER",
    "body": "@jreback I think there is actually a very consistent rule: series/frame properties act on values, not the index. With dataframes (more common than isolated series) this is particularly obvious: `df['time'].year` vs `df.index.year`.\n\nI agree with Joris about to_index() not really solving this problem.\n\nOn Wed, Aug 6, 2014 at 10:18 AM, jreback notifications@github.com wrote:\n\n> Here's the big problem with adding soln 1) (`Series.year`) and the reason was backed out in the first place. \n> \n> ## It is ambiguous if BOTH the index and the values are datetime (or periods).\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/pydata/pandas/issues/7207#issuecomment-51366668\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51368652",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-51368652",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 51368652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzY4NjUy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T17:32:57Z",
    "updated_at": "2014-08-06T17:32:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think we are back to a namespace:\n\n`Series.date`, `Series.dates`, `Series.dt` ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51399734",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-51399734",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 51399734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzk5NzM0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T21:26:57Z",
    "updated_at": "2014-08-06T21:28:51Z",
    "author_association": "MEMBER",
    "body": "If it is easy to do some filtering in runtime on the attributes to show with tab completion, I am personally in favor of having direct attributes acting on the series values, instead of another namespace. \n\nPersonally I think this is not that ambiguous, if we clearly document it in those functions (tz_localize/convert and between_time) that these act on the index and not on the values (**this** is the special case I think). \nBy the way, your example is not fully correct I think (with `idx` a DatetimeIndex):\n- `Series(range(5), index=idx).year` would **not** work in any case, but give an AttributeError (or other error) saying that `year` is only defined with series of dtype datetime64\n- It is `Series(idx, index=range(5)).year` that would work and is not ambiguous\n- `Series(idx, index=idx).year` is the one that is maybe ambiguous, and for which you suggest an error (but a AmbiguousWarning would be more appropriate), although I think this is not needed\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51401365",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7207#issuecomment-51401365",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7207",
    "id": 51401365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDAxMzY1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T21:40:28Z",
    "updated_at": "2014-08-06T21:40:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche ok, you are saying that you think that these attributes ought to work on the **values** (as do all other actions). Ok, that makes sense then (rather than trying to be cute and work on index OR values).\n\nok, then this seems straightforward then.\n\ncc @rosnfeld \ncc @mtkni\n@cpcloud \n\nthoughts on @jorisvandenbossche last?\n"
  }
]
