[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56614806",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56614806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56614806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjE0ODA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T01:42:02Z",
    "updated_at": "2014-09-24T01:42:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm this was done for a reason but I don't remember exactly \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56627753",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56627753",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56627753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjI3NzUz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T05:51:27Z",
    "updated_at": "2014-09-24T05:51:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "my impression is that the correct way to compare floats is with a tolerance, because `!=` can give inconsistent results in different systems (due to how floats are represented). Quick googling for 'comparing floating point numbers' give a couple different explanations and suggests that relative tolerance is a good middle ground.\n\nAt the very least, we need to consider this further - it's not as simple as this example.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56627824",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56627824",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56627824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjI3ODI0",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T05:52:57Z",
    "updated_at": "2014-09-24T05:52:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "but clearly the tolerance is too big somehow, the actual behavior is clearly wrong, but we want to replace it with something that will definitely be more correct.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56660475",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56660475",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56660475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjYwNDc1",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T12:11:50Z",
    "updated_at": "2014-09-24T12:11:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "`1.001E3 ~= 1.001002E3 (upto 1e-4)` is a bug in equivalence cluster calculation, the code should compare cur_value to cluster_min instead of prev_value to make sure that for each a_i in the cluster `float_is_diff(cur_value, a_i)` is `False`, setting tolerance to zero just masks the issue by having cluster_min == prev_element.\n\nAs for the actual tolerance value, one thing that I know for sure about floats is that all tolerances should be configurable, because whatever sane tolerance value and type (absolute, relative, ULP) you pick it won't fit everyone. In this case, even though strictly speaking one doesn't need equality comparisons to rank data, one might want to do some \"joining\" knowing that the numbers come from some algorithm that produces a limited number of significant digits.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56665612",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56665612",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56665612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjY1NjEy",
    "user": {
      "login": "behzadnouri",
      "id": 1288998,
      "node_id": "MDQ6VXNlcjEyODg5OTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1288998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/behzadnouri",
      "html_url": "https://github.com/behzadnouri",
      "followers_url": "https://api.github.com/users/behzadnouri/followers",
      "following_url": "https://api.github.com/users/behzadnouri/following{/other_user}",
      "gists_url": "https://api.github.com/users/behzadnouri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/behzadnouri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/behzadnouri/subscriptions",
      "organizations_url": "https://api.github.com/users/behzadnouri/orgs",
      "repos_url": "https://api.github.com/users/behzadnouri/repos",
      "events_url": "https://api.github.com/users/behzadnouri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/behzadnouri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T12:59:02Z",
    "updated_at": "2014-09-24T12:59:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner\n\n-1- did you notice the `[1001, 1001.0001, 1001.0002]` example? this is a _logical_ problem, not a numerical problem.\n\nno matter how small the tolerance is one can make such examples where two numbers being equally ranked or not depends on the presence of a third number (i.e. a small step in between). the problem is _using_ tolerance in ranking not the size of the tolerance.\n\n-2- a user knows his data better than what the library can guess. if he wants to use tolerance he can simply do `ts.round(10).rank()` or something similar; as easy as that. but ranking data with tolerance has logical problem even if the tolerance is configurable.\n\n-3- there is also _cross consistency_ with other popular libraries. https://github.com/pydata/pandas/issues/8365 is comparing with `scipy.stats.rankdata`. such libraries build the convention and users' expectation of how their numbers should work and an inconsistent surprising behavior is a bug. (plus regression tests)\n\nIn certain domains, there is an undeniable value in sticking to conventions, even if one can argue an alternative is more technically correct.\n\n-4- then, there is _internal consistency_; that results should be semantically consistent. currently on master:\n\n```\n>>> ts = pd.Series([1001.0002, 1001, 1001.0001])\n>>> ts.rank() # method='average' default value\n0    2\n1    2\n2    2\ndtype: float64\n>>> ts.rank(method='first')\n0    3\n1    1\n2    2\ndtype: float64 \n```\n\nif with `method='average'` all ranks are equal, then `method='first'` should return `1, 2, 3`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56665616",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56665616",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56665616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjY1NjE2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T12:59:05Z",
    "updated_at": "2014-09-24T12:59:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "see #6886 which was put in place to handle really small floats.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56666656",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56666656",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56666656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjY2NjU2",
    "user": {
      "login": "behzadnouri",
      "id": 1288998,
      "node_id": "MDQ6VXNlcjEyODg5OTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1288998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/behzadnouri",
      "html_url": "https://github.com/behzadnouri",
      "followers_url": "https://api.github.com/users/behzadnouri/followers",
      "following_url": "https://api.github.com/users/behzadnouri/following{/other_user}",
      "gists_url": "https://api.github.com/users/behzadnouri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/behzadnouri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/behzadnouri/subscriptions",
      "organizations_url": "https://api.github.com/users/behzadnouri/orgs",
      "repos_url": "https://api.github.com/users/behzadnouri/repos",
      "events_url": "https://api.github.com/users/behzadnouri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/behzadnouri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T13:08:21Z",
    "updated_at": "2014-09-24T13:08:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback yes, i had seen that commit before making my code changes, and i think the right thing to do back then was to remove tolerance in ranking floats. if a user wants to have tolerance let him `.round` his numbers to his desired precision.\n\nranking floats with absolute/relative tolerance has the logical issue mentioned above.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56666874",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56666874",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56666874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjY2ODc0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T13:10:24Z",
    "updated_at": "2014-09-24T13:10:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@behzadnouri no good. need to accomodate both situations. The original problem is just as valid. Is it possible to normalize the numbers first (if needed or does this cause more issues)? e.g. not a problem if it takes a slower loop when precision is an issue (as long as the fast path stays the same).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56666945",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56666945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56666945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjY2OTQ1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T13:10:57Z",
    "updated_at": "2014-09-24T13:10:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@behzadnouri also, pls, pls, pls add tests when you put up a PR\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56667184",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56667184",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56667184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjY3MTg0",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T13:12:45Z",
    "updated_at": "2014-09-24T13:12:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> he can simply do ts.round(10).rank() or something similar\n\nThe problem with rounding is that the boundaries between equivalence classes become fixed, i.e. if you want 0.1 absolute tolerance and simply round up to 1 place after the delimiter `[1.04, 1.05]` will be rounded to `[1.0, 1.1]` and ranking will assign different ranks to these values while it's obvious that difference between them is less than 0.1 and they should be ranked the same.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56667332",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56667332",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56667332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjY3MzMy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T13:13:53Z",
    "updated_at": "2014-09-24T13:13:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "care to weight in?\n\ncc @seth-p\ncc @jaimefrio\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56667763",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56667763",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56667763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjY3NzYz",
    "user": {
      "login": "behzadnouri",
      "id": 1288998,
      "node_id": "MDQ6VXNlcjEyODg5OTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1288998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/behzadnouri",
      "html_url": "https://github.com/behzadnouri",
      "followers_url": "https://api.github.com/users/behzadnouri/followers",
      "following_url": "https://api.github.com/users/behzadnouri/following{/other_user}",
      "gists_url": "https://api.github.com/users/behzadnouri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/behzadnouri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/behzadnouri/subscriptions",
      "organizations_url": "https://api.github.com/users/behzadnouri/orgs",
      "repos_url": "https://api.github.com/users/behzadnouri/repos",
      "events_url": "https://api.github.com/users/behzadnouri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/behzadnouri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T13:17:38Z",
    "updated_at": "2014-09-24T13:17:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@immerrr  and how do you rank `[1.04, 1.10, 1.16]` with `.1` tolerance?\n\ndoes `1.10` go with `1.16` or `1.04`? or both?\n\nseriously, you do not see the logical issue in here?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56670397",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56670397",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56670397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjcwMzk3",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T13:39:05Z",
    "updated_at": "2014-09-24T13:39:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree with @behzadnouri. The problem is that the `float64_are_diff()` function (or any \"is-not-within-tolerance\" function) isn't transitive: `float64_are_diff(a,b)==False` and `float64_are_diff(b,c)==False` does not imply that `float64_are_diff(a,c)==False`. (This would be worded cleaner as `(not float64_are_diff(,))==True`...) As such, it shouldn't be used as an equivalence relation, which is a property we want in the definition of \"a and b are of the same rank\".\n\nI agree that the ranking function should be applied based on strict (in)equality, possibly after the user has transformed the data, e.g. `ts.round(10).rank()` or `log(ts).round(10).rank()`. Anything else is just asking for trouble and confusion.\n\nI'm tempted to suggest giving the user the option (which would not be the default) to specify the current behavior with a user-specified tolerance -- with lots of warnings -- but I think it's just handing them a loaded gun, and is probably best avoided.\n\nCC'ing @nspies, who submitted https://github.com/pydata/pandas/pull/6886.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56671845",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56671845",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56671845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjcxODQ1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T13:49:38Z",
    "updated_at": "2014-09-24T13:49:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@seth-p is it worth testing when 2 values are equal if they are really really small (and so behavior can be different for the #6886) case?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56673655",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56673655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56673655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjczNjU1",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T14:01:31Z",
    "updated_at": "2014-09-24T14:05:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@behzadnouri, neither of ~~threshold-based~~ adaptive-threshold-based clustering approaches will guarantee a unique solution, but the one with 'adaptive' boundaries may produce less clusters than fixed boundaries.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56674192",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56674192",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56674192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Njc0MTky",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T14:05:11Z",
    "updated_at": "2014-09-24T14:05:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback, no matter how small the threshold, you can't avoid the problem that is_close(a,b) and is_close(b,c) does not imply is_close(a,c). I would put the onus on the user to map the \"raw\" values to standardized discrete values, e.g. `ts.round(14).rank()` -- only they know what they want \"same rank\" to mean.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56675649",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56675649",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56675649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Njc1NjQ5",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T14:15:07Z",
    "updated_at": "2014-09-24T14:15:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I would put the onus on the user to map the \"raw\" values to standardized discrete values\n\nThat would indeed simplify `rank`'s contract, but we might consider adding a standard algorithm to perform rounding to next smallest value to compensate for stripped functionality.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56675862",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56675862",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56675862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Njc1ODYy",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T14:16:34Z",
    "updated_at": "2014-09-24T14:16:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@immerrr, can you elaborate? I don't think I understand what you mean.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56676935",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56676935",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56676935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Njc2OTM1",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T14:23:24Z",
    "updated_at": "2014-09-24T14:23:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Currently `rank` does effectively two things: it does some threshold-based discretization AND performs ranking on the result. I think that if we remove the first step and make rank only responsible for the second (which is good), there may be users that miss the old behaviour and will be annoyed having to reimplement it (which is bad). To avoid that we might want to consider adding a standard implementation of this discretization routine.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56678079",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56678079",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56678079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Njc4MDc5",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T14:30:13Z",
    "updated_at": "2014-09-24T14:30:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "The problem is that the current behavior is not equivalent to discretization. So you really can't do it.\n\nI haven't looked at the current behavior in detail, but on quick glance it looks similar to (but not the same as) `log(ts).round(7)`. Am not sure it makes sense to create a function to do that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56680865",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56680865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56680865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjgwODY1",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T14:47:09Z",
    "updated_at": "2014-09-25T07:42:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, current algorithm is broken, I've forgotten about that.\n\nPerhaps, it was supposed to ~~separate all numbers with distance >= tolerance into different bins and put the rest of the numbers (that are closer than that to at least one other number) to the next smallest bin~~ (UPD: this wording is incorrect, the idea was to find a maximum independent set). It has two benefits over plain rounding that may be desirable: \n- it will result in less bins in cases like `[1.04, 1.05]` with threshold `0.1`\n- it won't alter the values if all of them are sufficiently far away from each other\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56681945",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56681945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56681945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjgxOTQ1",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T14:53:01Z",
    "updated_at": "2014-09-24T14:53:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "As for if this is discretization or not, it does map elements from almost-infinite set of floats to a finite set of floats that are farther than threshold from each other. It is not guaranteed to be unique, but that sounds like discretization to me.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56682077",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56682077",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56682077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjgyMDc3",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T14:53:51Z",
    "updated_at": "2014-09-24T14:53:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "- true, though that comes at the cost of also binning [1.04, 1.05, 1.14, 1.15, 1.24, 1.25, ...] into a single bin.\n- whether or not it \"alters\" values is purely an implementation details; it wouldn't alter the original series\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56683634",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56683634",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56683634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjgzNjM0",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T15:03:36Z",
    "updated_at": "2014-09-24T15:03:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> true, though that comes at the cost of also binning [1.04, 1.05, 1.14, 1.15, 1.24, 1.25, ...] into a single bin\n\nCurrent algorithm would, the one that I described would not. Like I said, it's broken now.\n\n> whether or not it \"alters\" values is purely an implementation details; it wouldn't alter the original series\n\nHmm, you're correct, at some point I got confused thinking it returns a series.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56684083",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56684083",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56684083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Njg0MDgz",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T15:06:24Z",
    "updated_at": "2014-09-24T15:06:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "How would your proposed algorithm bin [1.04, 1.05, 1.14, 1.15, 1.24, 1.25, ...] with a threshold of 0.1?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56684719",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56684719",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56684719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Njg0NzE5",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T15:10:27Z",
    "updated_at": "2014-09-24T15:10:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "- find a set of all numbers with distance >= tolerance from one another, one set of such numbers is:\n\n```\n{1.04, 1.14, 1.24, ...}\n```\n- put all other numbers to the next smallest bin:\n\n```\n{1.04: {1.04, 1.05}, 1.14: {1.14, 1.15}, 1.24: {1.24, 1.25}, ...}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56686242",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56686242",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56686242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Njg2MjQy",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T15:19:15Z",
    "updated_at": "2014-09-24T15:19:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's sort of arbitrary, since you're mapping 1.05 and 1.14 to different bins even though they're <0.1 apart. (The current behavior would regard the whole sequence as a single bin, if I undrestand it correctly.) So you end up with something that is (a) still arbitrary, and (b) different from the current behavior.\n\nPerhaps a better example would be { 1.04, 1.13, 1.22, 1.31, ... } -- i.e. a sequence of numbers 0.09 apart. I see only two plausible binnings: (i) every item is its own bin (which seems odd given that successive items are <0.1 apart); or (ii) all items in a single bin (which is the current behavior, but is odd since most pairs of items are >0.1 apart).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56695699",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56695699",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56695699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Njk1Njk5",
    "user": {
      "login": "nspies",
      "id": 156719,
      "node_id": "MDQ6VXNlcjE1NjcxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/156719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nspies",
      "html_url": "https://github.com/nspies",
      "followers_url": "https://api.github.com/users/nspies/followers",
      "following_url": "https://api.github.com/users/nspies/following{/other_user}",
      "gists_url": "https://api.github.com/users/nspies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nspies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nspies/subscriptions",
      "organizations_url": "https://api.github.com/users/nspies/orgs",
      "repos_url": "https://api.github.com/users/nspies/repos",
      "events_url": "https://api.github.com/users/nspies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nspies/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T16:17:29Z",
    "updated_at": "2014-09-24T16:18:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm all for fixing the current approach. A few thoughts:\n\nBefore I forget, I'd like to reference issue #6945: `np.nan` and `np.inf` don't get sorted properly. Would be nice if whoever fixes the precision issue fixes that too!\n\nI'm not sure what's wrong with giving the users an option of using some sort of precision in doing the comparisons -- the original code, before I messed with it, had a hard-coded precision limit of 1e-13, so clearly it was an issue for someone when there was no float precision handling. I don't care if this is a default or an extra option, but I think most people trying to sort floats with ties will hit this issue.\n\n(Please, please, please make your tests include ties -- if you're going to change the definition of tie, please make sure the updated tests deal with ties properly)\n\nFinally, I believe these algorithms affect both the Series and DataFrame tests, although the PR only updated the frame tests so check that both have the expected behaviors (whatever everyone decides is the expected behavior!).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56696212",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56696212",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56696212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Njk2MjEy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T16:20:51Z",
    "updated_at": "2014-09-24T16:20:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "how about we make a reasonable default that handles most cases, and a high precision option (maybe `float_pricesion='high'` for the original case (really tiny numbers). Most people won't care as long as it works, and for the really precision necessary folks, can use pass the option\n\ne.g. see for example what is happening for _reading_ float precision in 0.15.0 [here](http://pandas-docs.github.io/pandas-docs-travis/io.html#specifying-method-for-floating-point-conversion)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56725420",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8379#issuecomment-56725420",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8379",
    "id": 56725420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzI1NDIw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T19:31:47Z",
    "updated_at": "2014-09-24T19:31:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just want to throw in some context here to make sure everyone's on the same page:\n- `scipy.stats.rankdata` does do a C-level `!=` check just like this PR suggests, so there's certainly precedent here and it's been that way since at least 2010.\n- the floats_are_diff(a, b) here was calculating based on relative tolerance of a vs. b, (i.e., is (a-b) > (1e-7*b) which makes the behavior a little more subtle and it's not sufficient to do a single round across the entire array\n"
  }
]
