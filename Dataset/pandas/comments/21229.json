[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392546465",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21229#issuecomment-392546465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21229",
    "id": 392546465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjU0NjQ2NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-28T14:49:13Z",
    "updated_at": "2018-05-28T14:49:13Z",
    "author_association": "MEMBER",
    "body": "Can you explain what exactly you think is the bug?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392569358",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21229#issuecomment-392569358",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21229",
    "id": 392569358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjU2OTM1OA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-28T16:50:10Z",
    "updated_at": "2018-05-28T16:50:10Z",
    "author_association": "MEMBER",
    "body": "I read through your issue and it sounds like you are mixing ints and strings within an object and end up getting two distinct groups for 2 (one for the int, one for the string). If that’s the case then this is not a bug as those should be two distinct objects. \r\n\r\nIf that’s not the case then further clarification would help"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392587697",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21229#issuecomment-392587697",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21229",
    "id": 392587697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjU4NzY5Nw==",
    "user": {
      "login": "everestial",
      "id": 11068812,
      "node_id": "MDQ6VXNlcjExMDY4ODEy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11068812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/everestial",
      "html_url": "https://github.com/everestial",
      "followers_url": "https://api.github.com/users/everestial/followers",
      "following_url": "https://api.github.com/users/everestial/following{/other_user}",
      "gists_url": "https://api.github.com/users/everestial/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/everestial/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/everestial/subscriptions",
      "organizations_url": "https://api.github.com/users/everestial/orgs",
      "repos_url": "https://api.github.com/users/everestial/repos",
      "events_url": "https://api.github.com/users/everestial/events{/privacy}",
      "received_events_url": "https://api.github.com/users/everestial/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-28T19:02:11Z",
    "updated_at": "2018-05-28T19:02:11Z",
    "author_association": "NONE",
    "body": "@WillAyd \r\nYeah, that is the case. I am not mixing the ints and strs together. Actually that is the nature of the data.\r\n\r\n    CHROM    POS    REF .............\r\n    scaff_9      1          .............\r\n    scaff_9      ...........................\r\n    2      23    ................\r\n    2      51    .....................\r\n    1      11    ..................\r\n    1      23    ......................\r\n\r\n So, when there is no `scaff_9` grouping happens nicely. When there is `scaff_9` in my input **csv or tab separated file** there is grouping problem with `CHROM = 2`, one small group of `2` and another large group of `2` again. So, it seems that `pandas` interprets `2` as string type because it was reading earlier `CHROM` values as string, but later switched to treating 2 as integer.\r\n\r\nBut, what ever be the type of data in `CHROM` field it should not treat few `2` as string and other as integer, rite ??  I am just reading the tab delimited file and doing grouping on the data frame, so I am not changing or specifiying what is in `CHROM` - pandas should be able to handle it automatically. \r\n\r\nBut, if there is not `scaff_9` in my input data there is again not problem with `groupby`. I am saying, the mere presence of `scaff_9` as string type data earlier on the dataframe should not affect `groupby` operations on the rest of the data.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392590002",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21229#issuecomment-392590002",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21229",
    "id": 392590002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjU5MDAwMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-28T19:20:09Z",
    "updated_at": "2018-05-28T19:20:22Z",
    "author_association": "MEMBER",
    "body": "> So, it seems that pandas interprets 2 as string type because it was reading earlier CHROM values as string, but later switched to treating 2 as integer.\r\n\r\nAh, that sounds as it might have to do with the csv reading. Can you try with passing `low_memory=False` to `read_csv`? \r\nIs your data coming from a single csv file, or do you concatenate dataframes from multiple csv files?\r\n\r\n> what ever be the type of data in CHROM field it should not treat few 2 as string and other as integer\r\n\r\nIt should, as it should treat strings and integers differently, as @WillAyd said. However, it is true that you normally shouldn't end up with such a mixture of types (see above)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392595621",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21229#issuecomment-392595621",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21229",
    "id": 392595621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjU5NTYyMQ==",
    "user": {
      "login": "everestial",
      "id": 11068812,
      "node_id": "MDQ6VXNlcjExMDY4ODEy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11068812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/everestial",
      "html_url": "https://github.com/everestial",
      "followers_url": "https://api.github.com/users/everestial/followers",
      "following_url": "https://api.github.com/users/everestial/following{/other_user}",
      "gists_url": "https://api.github.com/users/everestial/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/everestial/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/everestial/subscriptions",
      "organizations_url": "https://api.github.com/users/everestial/orgs",
      "repos_url": "https://api.github.com/users/everestial/repos",
      "events_url": "https://api.github.com/users/everestial/events{/privacy}",
      "received_events_url": "https://api.github.com/users/everestial/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-28T20:04:47Z",
    "updated_at": "2018-05-28T20:05:42Z",
    "author_association": "NONE",
    "body": "!) What would be most appropriate way of handling this problem ?\r\n\r\n    my_data['CHROM'] = my_data['CHROM'].astype(str)  # after reading the data\r\n    # vs. \r\n    my_data = read_csv(.... , low_memory=False)\r\n\r\n2) Sometimes my data comes from single csv, but sometimes it merges with another csv (left merge) on the way - It depends on what arguments the user has passed. \r\n\r\n3) Shouldn't pandas recognize mixed data types automatically and handle it separately as required. I think the problem here is that pandas is identifying some `2` to string and some to `int`? I wouldn't mind an extra code of `.astype(str)`, but it really took a while to trace the origin of this problem - because the error wasn't fatal.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392595763",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21229#issuecomment-392595763",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21229",
    "id": 392595763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjU5NTc2Mw==",
    "user": {
      "login": "everestial",
      "id": 11068812,
      "node_id": "MDQ6VXNlcjExMDY4ODEy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11068812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/everestial",
      "html_url": "https://github.com/everestial",
      "followers_url": "https://api.github.com/users/everestial/followers",
      "following_url": "https://api.github.com/users/everestial/following{/other_user}",
      "gists_url": "https://api.github.com/users/everestial/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/everestial/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/everestial/subscriptions",
      "organizations_url": "https://api.github.com/users/everestial/orgs",
      "repos_url": "https://api.github.com/users/everestial/repos",
      "events_url": "https://api.github.com/users/everestial/events{/privacy}",
      "received_events_url": "https://api.github.com/users/everestial/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-28T20:05:59Z",
    "updated_at": "2018-05-28T20:05:59Z",
    "author_association": "NONE",
    "body": "I think this issue can be closed, rite ?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392648029",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21229#issuecomment-392648029",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21229",
    "id": 392648029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjY0ODAyOQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-29T04:16:12Z",
    "updated_at": "2018-05-29T04:16:12Z",
    "author_association": "MEMBER",
    "body": "I'm confused as to your examples - are you getting the issue when parsing just one file? If so then I'd say it's fine to keep open if you can provide a minimally reproducible example as the interpretation of data in one parse should stay consistent (i.e. if 2 is a string in the first X rows then it should still be a string in the last Y rows).\r\n\r\nIf however your issue pops up when joining multiple files together then this should be closed - I don't think there's a feasible way to guarantee that 2 should be a string when parsing file X just because file Y mixes it in with string values like \"scaff_9\""
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392653899",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21229#issuecomment-392653899",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21229",
    "id": 392653899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjY1Mzg5OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-29T05:05:06Z",
    "updated_at": "2018-05-29T05:05:06Z",
    "author_association": "MEMBER",
    "body": "@WillAyd see the note box at the end of this section: http://pandas.pydata.org/pandas-docs/stable/io.html#specifying-column-data-types, that's an explanation of what I suppose is happening. \r\nA rather tricky case to notice in your code if you are not aware of it ..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392654062",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21229#issuecomment-392654062",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21229",
    "id": 392654062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjY1NDA2Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-29T05:06:22Z",
    "updated_at": "2018-05-29T05:06:22Z",
    "author_association": "MEMBER",
    "body": "> What would be most appropriate way of handling this problem ?\r\n\r\nBoth are fine, whatever you prefer. Yet another option is to specify the dtype in `read_csv` with `dtype={'CHROM': str}`."
  }
]
