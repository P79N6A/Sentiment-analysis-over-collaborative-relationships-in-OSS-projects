[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364443412",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19617#issuecomment-364443412",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19617",
    "id": 364443412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDQ0MzQxMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-09T14:09:31Z",
    "updated_at": "2018-02-09T14:09:31Z",
    "author_association": "MEMBER",
    "body": "To be clear: the only difference with `.values` is that for sparse `.values` gives a sparse array and `.get_values()` a dense array? So for that case we can recommend `.values.to_dense()` ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364445064",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19617#issuecomment-364445064",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19617",
    "id": 364445064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDQ0NTA2NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-09T14:15:46Z",
    "updated_at": "2018-02-09T14:15:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "that's about right. or really ``_ndarray_values`` is the right thing. I think the SparseEA should just be able to handle this properly."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364445139",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19617#issuecomment-364445139",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19617",
    "id": 364445139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDQ0NTEzOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-09T14:16:03Z",
    "updated_at": "2018-02-09T14:16:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "`Series[Categorical].get_values()` returns an ndarray. So in that case we'd recommend `np.array(series)`.\r\n\r\nReally, `np.array(thing)` is maybe the best way of saying \"give me an ndarray\". We can implement `__array__` to do the right thing if necessary.\r\n\r\nIn general, I think we'll want two public APIs to mirror our two internal ones\r\n\r\n1. A way to get the data as an ndarray, even if it means losing information (DatetimeTZ) or it's expensive (Categorical)\r\n2. A way to get the data backing the Series/Index, even if it isn't an ndarray (the extension array)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364447176",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19617#issuecomment-364447176",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19617",
    "id": 364447176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDQ0NzE3Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-09T14:23:56Z",
    "updated_at": "2018-02-09T14:23:56Z",
    "author_association": "MEMBER",
    "body": "It's not fully a mirror, as the internal `_ndarray_values` is different and not meant to public I think? (in that sense I actually wanted to comment on the other PR that that name can still be somewhat confusing, not that I have a (short) alternative in mind)\r\n\r\n> even if it means losing information (DatetimeTZ) or it's expensive (Categorical)\r\n\r\nHere you actually still have multiple possibilities for DatetimeTZ, because you could also go the \"expensive\" way (object array of timestamps), like we do for `unique`\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364448325",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19617#issuecomment-364448325",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19617",
    "id": 364448325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDQ0ODMyNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-09T14:28:04Z",
    "updated_at": "2018-02-09T14:28:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Here you actually still have multiple possibilities for DatetimeTZ, because you could also go the \"expensive\" way (object array of timestamps), like we do for unique\r\n\r\nTrue... Even with something like `PeriodIndex._ndarray_values`, there are different use-cases (indexing expects integer ordinals, but no user would expect that).\r\n\r\nHaving the user do `np.array(series[datetime-with-tz], dtype=object / 'datetime64[ns])` seems like the most explicit way of doing things. But the properties that \"do the right thing\" are also convenient."
  }
]
