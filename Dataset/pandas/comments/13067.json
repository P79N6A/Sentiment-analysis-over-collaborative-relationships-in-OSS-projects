[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216604691",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13067#issuecomment-216604691",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13067",
    "id": 216604691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjYwNDY5MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-03T17:29:48Z",
    "updated_at": "2016-05-03T17:29:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "related to any of: https://github.com/pydata/pandas/issues/12871 ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216605824",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13067#issuecomment-216605824",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13067",
    "id": 216605824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjYwNTgyNA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-03T17:33:55Z",
    "updated_at": "2016-05-03T17:34:01Z",
    "author_association": "MEMBER",
    "body": "Related to #12868. It must change `freq` also.\n\nCC: @MaximilianR \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216635459",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13067#issuecomment-216635459",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13067",
    "id": 216635459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjYzNTQ1OQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-03T19:15:16Z",
    "updated_at": "2016-05-03T19:15:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for spotting this @sinhrks. This was my change so mea culpa.\n\nHad a quick look and there are a few odd things going on:\n\n1) Resampling an empty Series with an empty `PeriodIndex` fails to convert freq for PeriodIndex-ed Series, but works fine for non-PeriodIndex-ed Series:\n\n``` python\n\nIn [34]: pd.Series(range(4)).reindex(pd.PeriodIndex([],freq='M'))\nOut[34]: Series([], Freq: M, dtype: int64)\n# works\n\nIn [43]: pd.Series([], index=pd.PeriodIndex([], freq='D')).reindex(pd.PeriodIndex([], freq='M'))\nOut[43]: Series([], Freq: D, dtype: float64)\n# freq is still 'D' - doesn't work\n```\n\n...if this worked, the current resampler implementation would work as expected\n\n2) `_get_new_index` is creating a `float64` index, where it should be `int64`:\n\n``` python\nIn [6]: s = pd.Series(index=pd.PeriodIndex([], freq='D'))\nIn [9]: resampler=s.resample('M')\nIn [13]: resampler._get_new_index()\nOut[13]: PeriodIndex([], dtype='float64', freq='M')\n```\n\n...not sure if this is having any real consequences though\n\nWould be better to have these root issues solved rather than add a fix for the symptoms here, but a fix for the symptoms is better than nothing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216641450",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13067#issuecomment-216641450",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13067",
    "id": 216641450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjY0MTQ1MA==",
    "user": {
      "login": "codecov-io",
      "id": 8655789,
      "node_id": "MDQ6VXNlcjg2NTU3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8655789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov-io",
      "html_url": "https://github.com/codecov-io",
      "followers_url": "https://api.github.com/users/codecov-io/followers",
      "following_url": "https://api.github.com/users/codecov-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov-io/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov-io/orgs",
      "repos_url": "https://api.github.com/users/codecov-io/repos",
      "events_url": "https://api.github.com/users/codecov-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-03T19:37:05Z",
    "updated_at": "2016-05-03T19:37:05Z",
    "author_association": "NONE",
    "body": "## [Current coverage](https://codecov.io/gh/pydata/pandas/pull/13067?src=pr) is **84.14%**\n\n> Merging [#13067](https://codecov.io/gh/pydata/pandas/pull/13067?src=pr) into [master](https://codecov.io/gh/pydata/pandas/branch/master?src=pr) will increase coverage by **+<.01%**\n\n``` diff\n@@             master     #13067   diff @@\n==========================================\n  Files           137        137          \n  Lines         50227      50230     +3   \n  Methods           0          0          \n  Messages          0          0          \n  Branches          0          0          \n==========================================\n+ Hits          42256      42264     +8   \n+ Misses         7971       7966     -5   \n  Partials          0          0          \n```\n1. File `pandas/_version.py` (not in diff) was modified. [more](https://codecov.io/gh/pydata/pandas/commit/df13ccc437322456eea8596741089f750caa4740/changes?src=pr#70616E6461732F5F76657273696F6E2E7079) \n   - Misses `-5` \n   - Partials `0` \n   - Hits `+5`\n\n> Powered by [Codecov](https://codecov.io?src=pr). Last updated by [87b0f4d...df13ccc](https://codecov.io/gh/pydata/pandas/compare/87b0f4dc1e91571cc4dd933b7cb181b99606ad20...df13ccc437322456eea8596741089f750caa4740)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216694220",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13067#issuecomment-216694220",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13067",
    "id": 216694220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjY5NDIyMA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-03T23:21:33Z",
    "updated_at": "2016-05-04T01:57:48Z",
    "author_association": "MEMBER",
    "body": "@MaximilianR I think `.reindex` should raise `IncompatibleFrequency` if `freq` are mismatched, even if its length is 0.\n\n```\n# on current master\ns = pd.Series(index=pd.PeriodIndex(['1970-01', '1970-02', '1970-03'], freq='M'))\ns.reindex(pd.PeriodIndex(['1970-01-01'], freq='D'))\n# IncompatibleFrequency: Input has different freq=D from PeriodIndex(freq=M)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216714916",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13067#issuecomment-216714916",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13067",
    "id": 216714916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjcxNDkxNg==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-04T01:16:54Z",
    "updated_at": "2016-05-04T01:16:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think .reindex shuld raise IncompatibleFrequency if freq are mismatched, even if its length is 0.\n\nAgreed\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216715879",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13067#issuecomment-216715879",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13067",
    "id": 216715879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjcxNTg3OQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-04T01:24:13Z",
    "updated_at": "2016-05-04T01:32:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I removed a bunch of the if/thens and generally cleared some stuff up, including solving the issues above. The thrust is to solve the root causes of why empty indexes need to be handled differently, rather than adding more special casing\n\n@sinhrks do you want to use this PR for this, or do you want me to start another? Assuming you think it's an improvement\n\n``` python\nFrom f1e9a6eaa8608cc21a6ca52d5ce6888ced7f4181 Mon Sep 17 00:00:00 2001\nFrom: Maximilian Roos \nDate: Tue, 3 May 2016 21:18:21 -0400\nSubject: [PATCH] Lots of clearing up PeriodIndex resampling behaviour\n\n---\n pandas/core/groupby.py                |  2 +-\n pandas/tseries/period.py              |  2 +-\n pandas/tseries/resample.py            | 18 ++++++------------\n pandas/tseries/tests/test_resample.py |  4 +++-\n 4 files changed, 11 insertions(+), 15 deletions(-)\n\ndiff --git a/pandas/core/groupby.py b/pandas/core/groupby.py\nindex 7a47911..3d197ac 100644\n--- a/pandas/core/groupby.py\n+++ b/pandas/core/groupby.py\n@@ -2669,7 +2669,7 @@ class SeriesGroupBy(GroupBy):\n     def _wrap_applied_output(self, keys, values, not_indexed_same=False):\n         if len(keys) == 0:\n             # GH #6265\n-            return Series([], name=self.name)\n+            return Series([], name=self.name, index=Index(keys))\n\n         def _get_index():\n             if self.grouper.nkeys > 1:\ndiff --git a/pandas/tseries/period.py b/pandas/tseries/period.py\nindex 478b255..61e0e85 100644\n--- a/pandas/tseries/period.py\n+++ b/pandas/tseries/period.py\n@@ -271,7 +271,7 @@ class PeriodIndex(DatelikeOps, DatetimeIndexOpsMixin, Int64Index):\n     @classmethod\n     def _simple_new(cls, values, name=None, freq=None, **kwargs):\n         if not getattr(values, 'dtype', None):\n-            values = np.array(values, copy=False)\n+            values = np.array(values, copy=False, dtype='int64')\n         if is_object_dtype(values):\n             return PeriodIndex(values, name=name, freq=freq, **kwargs)\n\ndiff --git a/pandas/tseries/resample.py b/pandas/tseries/resample.py\nindex 167c6c1..2240ab6 100644\n--- a/pandas/tseries/resample.py\n+++ b/pandas/tseries/resample.py\n@@ -789,19 +789,17 @@ class PeriodIndexResampler(DatetimeIndexResampler):\n         ax = self.ax\n\n         new_index = self._get_new_index()\n-        if len(new_index) == 0:\n-            result = self._selected_obj\n-            if isinstance(self._selected_obj.index, PeriodIndex):\n-                result = result.asfreq(self.freq, how=self.convention)\n-            return self._wrap_result(result.reindex(new_index))\n\n         # Start vs. end of period\n         memb = ax.asfreq(self.freq, how=self.convention)\n\n         if is_subperiod(ax.freq, self.freq):\n             # Downsampling\n-            rng = np.arange(memb.values[0], memb.values[-1] + 1)\n-            bins = memb.searchsorted(rng, side='right')\n+            if len(new_index) == 0:\n+                bins = []\n+            else:\n+                rng = np.arange(memb.values[0], memb.values[-1] + 1)\n+                bins = memb.searchsorted(rng, side='right')\n             grouper = BinGrouper(bins, new_index)\n             return self._groupby_and_aggregate(how, grouper=grouper)\n         elif is_superperiod(ax.freq, self.freq):\n@@ -811,8 +809,7 @@ class PeriodIndexResampler(DatetimeIndexResampler):\n\n         raise ValueError('Frequency {axfreq} cannot be '\n                          'resampled to {freq}'.format(\n-                             axfreq=ax.freq,\n-                             freq=self.freq))\n+                             axfreq=ax.freq, freq=self.freq))\n\n     def _upsample(self, method, limit=None):\n         \"\"\"\n@@ -835,9 +832,6 @@ class PeriodIndexResampler(DatetimeIndexResampler):\n         obj = self.obj\n         new_index = self._get_new_index()\n\n-        if len(new_index) == 0:\n-            return self._wrap_result(self._selected_obj.reindex(new_index))\n-\n         # Start vs. end of period\n         memb = ax.asfreq(self.freq, how=self.convention)\n\ndiff --git a/pandas/tseries/tests/test_resample.py b/pandas/tseries/tests/test_resample.py\nindex c796277..346c546 100644\n--- a/pandas/tseries/tests/test_resample.py\n+++ b/pandas/tseries/tests/test_resample.py\n@@ -2053,9 +2053,11 @@ class TestPeriodIndex(Base, tm.TestCase):\n\n             for method in resample_methods:\n                 result = getattr(s.resample(freq), method)()\n-                assert_series_equal(result, expected)\n+                if method!='ohlc':  # returns df\n+                    assert_series_equal(result, expected, check_dtype=False)\n                 self.assertEqual(result.index.freq, freq)\n\n+\n     def test_resample_count(self):\n\n         # GH12774\n-- \n2.6.3\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216720186",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13067#issuecomment-216720186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13067",
    "id": 216720186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjcyMDE4Ng==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-04T02:00:22Z",
    "updated_at": "2016-05-04T02:00:22Z",
    "author_association": "MEMBER",
    "body": "If yours includes the same fix in a better way, please issue another PR. I'll close this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217198458",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13067#issuecomment-217198458",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13067",
    "id": 217198458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzE5ODQ1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-05T16:14:28Z",
    "updated_at": "2016-05-05T16:14:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "superseded by #13079 \n"
  }
]
