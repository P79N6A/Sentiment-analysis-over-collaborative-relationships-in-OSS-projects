[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3224424",
    "html_url": "https://github.com/pandas-dev/pandas/issues/510#issuecomment-3224424",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/510",
    "id": 3224424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjQ0MjQ=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T20:03:58Z",
    "updated_at": "2011-12-20T20:03:58Z",
    "author_association": "MEMBER",
    "body": "Well, in theory it shouldn't matter. Under the hood you have a C double and the question is \"which kind of box was it put in\"? With some of the performance work recently I needed a fast generic `__getitem__` for ndarrays, which can be found here:\n\nhttps://github.com/wesm/pandas/blob/master/pandas/src/util.pxd#L12\n\n``` python\ncdef inline object get_value_at(ndarray arr, object loc):\n    cdef:\n        Py_ssize_t i, sz\n        void* data_ptr\n    if is_float_object(loc):\n        casted = int(loc)\n        if casted == loc:\n            loc = casted\n    i = <Py_ssize_t> loc\n    sz = cnp.PyArray_SIZE(arr)\n\n    if i < 0:\n        i += sz\n    elif i >= sz:\n        raise IndexError('index out of bounds')\n    data_ptr = cnp.PyArray_GETPTR1(arr, i)\n    return cnp.PyArray_GETITEM(arr, data_ptr)\n```\n\nIt turned out (and I noticed this when I was doing it) that `PyArray_GETITEM` wants to box `float64` objects as Python floats. Since float64 inherits from float:\n\n```\n\nIn [9]: np.float64.mro()                                                                  \nOut[9]:                                                                                   \n[numpy.float64,                                                                           \n numpy.floating,                                                                          \n numpy.inexact,                                                                           \n numpy.number,                                                                            \n numpy.generic,                                                                           \n float,                                                                                   \n object]\n```\n\nI decided I was willing to live with this for the speed gains from the above function. Was it a source of bugs? just curious\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3224493",
    "html_url": "https://github.com/pandas-dev/pandas/issues/510#issuecomment-3224493",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/510",
    "id": 3224493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjQ0OTM=",
    "user": {
      "login": "craustin",
      "id": 805293,
      "node_id": "MDQ6VXNlcjgwNTI5Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/805293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/craustin",
      "html_url": "https://github.com/craustin",
      "followers_url": "https://api.github.com/users/craustin/followers",
      "following_url": "https://api.github.com/users/craustin/following{/other_user}",
      "gists_url": "https://api.github.com/users/craustin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/craustin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/craustin/subscriptions",
      "organizations_url": "https://api.github.com/users/craustin/orgs",
      "repos_url": "https://api.github.com/users/craustin/repos",
      "events_url": "https://api.github.com/users/craustin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/craustin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T20:07:39Z",
    "updated_at": "2011-12-20T20:07:39Z",
    "author_association": "NONE",
    "body": "Gotcha. It causes only a few issues for us because 1. / x == inf if x is a float64 and a ZeroDivisionError if x is a float. We can workaround in the instances where we expect this to happen. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3229244",
    "html_url": "https://github.com/pandas-dev/pandas/issues/510#issuecomment-3229244",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/510",
    "id": 3229244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjkyNDQ=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-21T03:57:15Z",
    "updated_at": "2011-12-21T03:57:15Z",
    "author_association": "MEMBER",
    "body": "Craig, I went back and looked at this and I figured out the right way to use the NumPy C API. The current git master returns float64 as before and the performance is about the same, within say 50 nanoseconds, perfectly acceptable\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3234924",
    "html_url": "https://github.com/pandas-dev/pandas/issues/510#issuecomment-3234924",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/510",
    "id": 3234924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzQ5MjQ=",
    "user": {
      "login": "craustin",
      "id": 805293,
      "node_id": "MDQ6VXNlcjgwNTI5Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/805293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/craustin",
      "html_url": "https://github.com/craustin",
      "followers_url": "https://api.github.com/users/craustin/followers",
      "following_url": "https://api.github.com/users/craustin/following{/other_user}",
      "gists_url": "https://api.github.com/users/craustin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/craustin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/craustin/subscriptions",
      "organizations_url": "https://api.github.com/users/craustin/orgs",
      "repos_url": "https://api.github.com/users/craustin/repos",
      "events_url": "https://api.github.com/users/craustin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/craustin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-21T15:23:22Z",
    "updated_at": "2011-12-21T15:23:22Z",
    "author_association": "NONE",
    "body": "Great Wes, thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3235287",
    "html_url": "https://github.com/pandas-dev/pandas/issues/510#issuecomment-3235287",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/510",
    "id": 3235287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzUyODc=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-21T15:46:57Z",
    "updated_at": "2011-12-21T15:46:57Z",
    "author_association": "MEMBER",
    "body": "As an aside, another reason to use float64 is that it avoids entering Python's scalar value memory allocation nightmare (where internal \"free lists\" can end up consuming a lot of memory). This is particularly problematic when reading lots of stuff from the database (since the DB drivers convert first to Python float/int, which are then converted to NumPy arrays). Not sure how much you have looked into this\n"
  }
]
