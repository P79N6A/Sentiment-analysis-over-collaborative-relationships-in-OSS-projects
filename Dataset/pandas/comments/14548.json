[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257537391",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14548#issuecomment-257537391",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14548",
    "id": 257537391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzUzNzM5MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-01T10:48:04Z",
    "updated_at": "2016-11-01T10:48:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "discussion here: https://github.com/pandas-dev/pandas/issues/13395\n\nTo summarize:\n\n`.values` returns a numpy array, datetime64 are converted to naive as numpy doesn't support anything else. `.unique` will give you back an `object` array if the tz is set.\n\nDTI return another DTI as `.unique()`, and `.values` is the same as `Series`.\n\nSo this IS different for a DTI and a Series for `.unique`.\n\nIt has been this way for quite some time and its not worth it to return a '1-D' object for `Series.unique`, which you would think would be a DTI. Note that this is the only thing that makes sense as the index is pretty meaningless. Apparently a DTI is unexpected for numpy users.\n\nSee my comments in the xref issue. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257538266",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14548#issuecomment-257538266",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14548",
    "id": 257538266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzUzODI2Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-01T10:53:03Z",
    "updated_at": "2016-11-01T10:53:03Z",
    "author_association": "MEMBER",
    "body": "Maybe we should an explanation about this somewhere in the docs as a FAQ or gotcha, to which we can refer when this comes up.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257539337",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14548#issuecomment-257539337",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14548",
    "id": 257539337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzUzOTMzNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-01T10:58:59Z",
    "updated_at": "2016-11-01T10:58:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "could update the doc strings with more xref\n\nto be honest .values use should be discouraged \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257774884",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14548#issuecomment-257774884",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14548",
    "id": 257774884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Nzc3NDg4NA==",
    "user": {
      "login": "aavanian",
      "id": 13487305,
      "node_id": "MDQ6VXNlcjEzNDg3MzA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13487305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aavanian",
      "html_url": "https://github.com/aavanian",
      "followers_url": "https://api.github.com/users/aavanian/followers",
      "following_url": "https://api.github.com/users/aavanian/following{/other_user}",
      "gists_url": "https://api.github.com/users/aavanian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aavanian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aavanian/subscriptions",
      "organizations_url": "https://api.github.com/users/aavanian/orgs",
      "repos_url": "https://api.github.com/users/aavanian/repos",
      "events_url": "https://api.github.com/users/aavanian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aavanian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-02T05:16:57Z",
    "updated_at": "2016-11-02T05:16:57Z",
    "author_association": "NONE",
    "body": "Thanks for the clear answer and sorry about not catching these other issues (somehow forgot to remove is:open while searching for past similar issues).\n\nas for .values, I can't say I found a very clear/consistent pattern to get the values out of a Series/DF to pass to non-pandas functions/objects.\nI often resort to .values or  .values.tolist() which I supposed was probably ugly but found the most predictable. As in, I can use that everywhere without checking too much what comes in, I'm sure I get float-like for float-like and 'us since epoch' for datetime-like, the issue being of course the latter.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257807319",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14548#issuecomment-257807319",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14548",
    "id": 257807319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzgwNzMxOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-02T08:58:30Z",
    "updated_at": "2016-11-02T08:58:30Z",
    "author_association": "MEMBER",
    "body": "@aavanian many functions that expect a numpy array also can handle a Series, but if you need the values, then `.values` is the recommended way to get it\n"
  }
]
