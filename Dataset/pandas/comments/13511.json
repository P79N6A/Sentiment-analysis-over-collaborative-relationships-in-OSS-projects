[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/228531945",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13511#issuecomment-228531945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13511",
    "id": 228531945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODUzMTk0NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-25T10:53:13Z",
    "updated_at": "2016-06-25T10:53:13Z",
    "author_association": "MEMBER",
    "body": "This indeed seems like a bug (your example is a bit strange, as you end up with a empty dataframe with a mutli-index (as you did set all columns as the index), but it occurs as well for a non-empty dataframe).\n\nInterested in trying to look for a fix?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/228565532",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13511#issuecomment-228565532",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13511",
    "id": 228565532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODU2NTUzMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-25T19:08:58Z",
    "updated_at": "2016-06-25T19:08:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is prob a duplicate of #6322 or #5286\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/228823402",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13511#issuecomment-228823402",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13511",
    "id": 228823402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODgyMzQwMg==",
    "user": {
      "login": "mpuels",
      "id": 2924816,
      "node_id": "MDQ6VXNlcjI5MjQ4MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2924816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpuels",
      "html_url": "https://github.com/mpuels",
      "followers_url": "https://api.github.com/users/mpuels/followers",
      "following_url": "https://api.github.com/users/mpuels/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpuels/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpuels/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpuels/subscriptions",
      "organizations_url": "https://api.github.com/users/mpuels/orgs",
      "repos_url": "https://api.github.com/users/mpuels/repos",
      "events_url": "https://api.github.com/users/mpuels/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpuels/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-27T17:56:07Z",
    "updated_at": "2016-06-27T17:56:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the bug is in the method [pandas.formats.format.ExcelFormatter._format_hierarchical_rows()](https://github.com/pydata/pandas/blob/1a9abc44bbfd65675fd99701fe33aad8805ab147/pandas/formats/format.py#L1915) which is called by the public method [pandas.formats.format.ExcelFormatter.get_formatted_cells()](https://github.com/pydata/pandas/blob/1a9abc44bbfd65675fd99701fe33aad8805ab147/pandas/formats/format.py#L1980). More precisely the problem is the statement\n\n```\nvalues = levels.take(labels)\n```\n\n([here](https://github.com/pydata/pandas/blob/1a9abc44bbfd65675fd99701fe33aad8805ab147/pandas/formats/format.py#L1954)) where each of `levels` and `labels` correspond to the same level in a MultiIndex. `levels` contains the possible labels for that level (e.g. `['bar', 'foo']`) and `labels` contains indices (e.g. `[0,0,0,1,1,1,1]`) which point to elements in `levels`. If a label is null, it is represented by `-1` in `labels` (e.g. `[0,0,-1,1,1,1]`, if the label of the third row is null). The problem in the above statement is that it doesn't treat the index `-1` as a special value.\n\nTo fix the bug, the above statement could be replaced by\n\n```\nif levels._can_hold_na:\n    values = levels.take(labels, fill_value=True)\nelse:\n    values = levels.take(labels)\n```\n\nWhat follows is an example:\n\n```\ndf = (pd.DataFrame({'c1': [1,1,2,2],\n                    'c2': [None] + \"b c d\".split(),\n                    'v' : [6,7,8,9]})\n        .set_index(['c1', 'c2']))\n\ndf\n```\n\nyields\n\n```\nc1  c2  v\n1       6\n1   b   7\n2   c   8\n2   d   9\n\ndf.index\n```\n\nyields\n\n```\nMultiIndex(levels=[[1, 2], [u'b', u'c', u'd']],\n           labels=[[0, 0, 1, 1], [-1, 0, 1, 2]],\n           names=[u'c1', u'c2'])\n\nfor levels, labels in zip(df.index.levels, df.index.labels):\n    print levels.take(labels)\n    print levels._can_hold_na\n    if levels._can_hold_na:\n        print levels.take(labels, fill_value=True)\n    print levels\n    print labels\n    print \"------\"\n```\n\nyields\n\n```\nInt64Index([1, 1, 2, 2], dtype='int64', name=u'c1')\nFalse\nInt64Index([1, 2], dtype='int64', name=u'c1')\nFrozenNDArray([0, 0, 1, 1], dtype='int8')\n------\nIndex([u'd', u'b', u'c', u'd'], dtype='object', name=u'c2')\nTrue\nIndex([nan, u'b', u'c', u'd'], dtype='object', name=u'c2')\nIndex([u'b', u'c', u'd'], dtype='object', name=u'c2')\nFrozenNDArray([-1, 0, 1, 2], dtype='int8')\n------\n```\n\nI'd like to fix that bug, but I haven't found any unit tests for `pandas.formats.format.ExcelFormatter`. Shall I create one in `pandas.tests.formats.test_format.py`? And do you have any suggestions on how to assert that the correct `ExcelCells` are returned by `get_formatted_cells()`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/228834910",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13511#issuecomment-228834910",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13511",
    "id": 228834910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODgzNDkxMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-27T18:35:35Z",
    "updated_at": "2016-06-27T18:35:35Z",
    "author_association": "MEMBER",
    "body": "That looks like a very reasonable explanation! PR very welcome.\n\nFor the tests, I don't think we have tests for ExcelFormatter directly, but tests for read_excel/to_excel are in https://github.com/pydata/pandas/blob/master/pandas/io/tests/test_excel.py. The basic tests are eg here: https://github.com/pydata/pandas/blob/master/pandas/io/tests/test_excel.py#L1311. Those typically read the written file back in to check it's correctness. That approach should be possible here as well.\n"
  }
]
