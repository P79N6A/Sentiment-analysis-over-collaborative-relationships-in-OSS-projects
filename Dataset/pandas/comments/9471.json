[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/74392685",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9471#issuecomment-74392685",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9471",
    "id": 74392685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzkyNjg1",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-14T21:27:17Z",
    "updated_at": "2015-02-14T21:27:17Z",
    "author_association": "CONTRIBUTOR",
    "body": ":+1: on this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76969322",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9471#issuecomment-76969322",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9471",
    "id": 76969322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTY5MzIy",
    "user": {
      "login": "mgdadv",
      "id": 11195807,
      "node_id": "MDQ6VXNlcjExMTk1ODA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11195807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgdadv",
      "html_url": "https://github.com/mgdadv",
      "followers_url": "https://api.github.com/users/mgdadv/followers",
      "following_url": "https://api.github.com/users/mgdadv/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgdadv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgdadv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgdadv/subscriptions",
      "organizations_url": "https://api.github.com/users/mgdadv/orgs",
      "repos_url": "https://api.github.com/users/mgdadv/repos",
      "events_url": "https://api.github.com/users/mgdadv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgdadv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T15:40:56Z",
    "updated_at": "2015-03-03T15:40:56Z",
    "author_association": "NONE",
    "body": "I'm not really sure how this is supposed to be implemented. It seems that the `.interpolate()` mechanism is capable of doing this already.\n\nWith the above patch:\n\n``` python\nimport pandas as pd\nimport numpy as np\n\nx=np.linspace(0,1,10)\ny=np.sin(x)\n\ny[[3,4,7]]=np.NaN\n\ndf=pd.DataFrame({'y':y}, index=x)\n\ndfi=df.interpolate(method='nearest')\ndfn=df.fillna(method='nearest')\n```\n\n`dfi` and `dfn` are now identical.\n\nIs this the desired behavior? Shouldn't all the `.interpolate()` methods be supported by `fillna`?\nAnd why is the work from #9258 needed here?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77014302",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9471#issuecomment-77014302",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9471",
    "id": 77014302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDE0MzAy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T19:19:37Z",
    "updated_at": "2015-03-03T19:19:37Z",
    "author_association": "MEMBER",
    "body": "@mgdadv Agreed, the work from #9258 is not needed here -- this is merely complementary. The functionality is indeed mostly implemented by `interpolate` already, so most of the work will just be hooking things up, testing and documentation. I was planning on tackling this myself, but if you'd like to take a crack at it, great!\n\nThe only reason for calling out `nearest` explicitly is that nearest indexing can be done with columns with any dtypes. `method='linear'` does not make sense, for example, if one of your columns consists of strings. This is actually more relevant for methods like `align` which rely on `fillna` internally. But I agree, we could probably support all of the interpolate methods in fillna (though that might be a bit of API overload).\n"
  }
]
