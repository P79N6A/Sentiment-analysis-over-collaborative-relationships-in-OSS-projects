[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318812132",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17110#issuecomment-318812132",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17110",
    "id": 318812132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODgxMjEzMg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-29T07:55:38Z",
    "updated_at": "2017-07-29T07:55:38Z",
    "author_association": "MEMBER",
    "body": "So the purpose of `.loc` is to find the indices which match with those of the larger object (in this case `DataFrame`), and the returned matches contain the index with which you initially queried the larger object.  That being said, I'm not entirely sure if that applies for the index name.\r\n\r\nOn the one hand, are you showing the values that corresponded the passed in index?  If that's the case, the output you provided is correct as is?  Or, are you displaying the index in the original `DataFrame` that matched with what you passed into `.loc` and its associated values?  In which case, yes, I would agree the name should be `a`.\r\n\r\ncc @jreback  @jorisvandenbossche "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318812322",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17110#issuecomment-318812322",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17110",
    "id": 318812322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODgxMjMyMg==",
    "user": {
      "login": "p-himik",
      "id": 4410314,
      "node_id": "MDQ6VXNlcjQ0MTAzMTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4410314?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/p-himik",
      "html_url": "https://github.com/p-himik",
      "followers_url": "https://api.github.com/users/p-himik/followers",
      "following_url": "https://api.github.com/users/p-himik/following{/other_user}",
      "gists_url": "https://api.github.com/users/p-himik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/p-himik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/p-himik/subscriptions",
      "organizations_url": "https://api.github.com/users/p-himik/orgs",
      "repos_url": "https://api.github.com/users/p-himik/repos",
      "events_url": "https://api.github.com/users/p-himik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/p-himik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-29T07:59:44Z",
    "updated_at": "2017-07-29T07:59:44Z",
    "author_association": "NONE",
    "body": "Not sure I understand your questions. The code is all there - I did not alter any display settings, and the code does not depend on anything external, apart from `import pandas as pd`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318812378",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17110#issuecomment-318812378",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17110",
    "id": 318812378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODgxMjM3OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-29T08:00:47Z",
    "updated_at": "2017-07-29T08:00:52Z",
    "author_association": "MEMBER",
    "body": "> Not sure I understand your questions. \r\n\r\nDoesn't have any relation to your code.  Just a broader design / semantic question with respect to the operation of `.loc`.  Sorry for the confusion! ðŸ˜„ "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319046658",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17110#issuecomment-319046658",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17110",
    "id": 319046658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTA0NjY1OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T11:56:23Z",
    "updated_at": "2017-07-31T11:56:23Z",
    "author_association": "MEMBER",
    "body": "IMO this is a bug, `loc` should only select a subset of the existing frame, and not modify it. \r\n\r\nFor `reindex` however, I think it is the correct behaviour (it does currently the same as `loc`, so changing the index name), as for reindex you really take the new index, and add the data from the dataframe that match with it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319053254",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17110#issuecomment-319053254",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17110",
    "id": 319053254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTA1MzI1NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T12:29:31Z",
    "updated_at": "2017-07-31T12:29:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> IMO this is a bug, loc should only select a subset of the existing frame, and not modify it.\r\n\r\n> For reindex however, I think it is the correct behaviour (it does currently the same as loc, so changing the index name), as for reindex you really take the new index, and add the data from the dataframe that match with it.\r\n\r\nthe point is that ``.loc`` *uses* ``.reindex`` under the hood. These functions *should* not differ in this way. (we can discuss whether they do something entirely different, but they currently DO the same exact thing)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319056042",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17110#issuecomment-319056042",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17110",
    "id": 319056042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTA1NjA0Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T12:42:48Z",
    "updated_at": "2017-07-31T12:42:48Z",
    "author_association": "MEMBER",
    "body": "Well, then I argue they *shouldn't* do the same thing. \r\n\r\n(note they do not exactly the same thing for the case when none of the values are in the index, but I suppose you know that and we can leave that out of the argument :-))"
  }
]
