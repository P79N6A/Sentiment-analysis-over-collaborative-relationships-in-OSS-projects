[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451539969",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24614#issuecomment-451539969",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24614",
    "id": 451539969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTUzOTk2OQ==",
    "user": {
      "login": "dsaxton",
      "id": 2658661,
      "node_id": "MDQ6VXNlcjI2NTg2NjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2658661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsaxton",
      "html_url": "https://github.com/dsaxton",
      "followers_url": "https://api.github.com/users/dsaxton/followers",
      "following_url": "https://api.github.com/users/dsaxton/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsaxton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsaxton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsaxton/subscriptions",
      "organizations_url": "https://api.github.com/users/dsaxton/orgs",
      "repos_url": "https://api.github.com/users/dsaxton/repos",
      "events_url": "https://api.github.com/users/dsaxton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsaxton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-04T19:14:48Z",
    "updated_at": "2019-01-04T19:14:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems to me that applying a function with side effects across an entire `DataFrame` is something you'd almost never want to do, so disallowing it to prevent misuse would make sense.  I don't know how you'd determine on-the-fly if an arbitrary function has side effects though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451633088",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24614#issuecomment-451633088",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24614",
    "id": 451633088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTYzMzA4OA==",
    "user": {
      "login": "kefirbandi",
      "id": 1277781,
      "node_id": "MDQ6VXNlcjEyNzc3ODE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1277781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kefirbandi",
      "html_url": "https://github.com/kefirbandi",
      "followers_url": "https://api.github.com/users/kefirbandi/followers",
      "following_url": "https://api.github.com/users/kefirbandi/following{/other_user}",
      "gists_url": "https://api.github.com/users/kefirbandi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kefirbandi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kefirbandi/subscriptions",
      "organizations_url": "https://api.github.com/users/kefirbandi/orgs",
      "repos_url": "https://api.github.com/users/kefirbandi/repos",
      "events_url": "https://api.github.com/users/kefirbandi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kefirbandi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-05T06:51:08Z",
    "updated_at": "2019-01-05T06:51:08Z",
    "author_association": "NONE",
    "body": "The way I use an apply-function with side effects is modifying a row in-place.\r\nE.g. \r\n```python\r\ndef apply_function(row):\r\n    row['A'] *= 2\r\n\r\ndf.apply(apply_function,axis=1)\r\n```\r\nIn this case I don't even need any return value.\r\n\r\nIn some other cases my code looks like \r\n```python\r\ndef apply_function(row):\r\n    row['A'] *= 2\r\n    return row\r\n\r\ndf2 = df.apply(apply_function,axis=1)\r\n```\r\nIn the second case I could easily avoid side-effects by copying the row before modifying, but that would lead to a loss of efficiency, and I would no longer be able to use the same function for in-place modification.\r\nSo the point I'm trying to make is that I see legitimate use case for a function with side-effect.\r\n\r\nBut for the other direction about disallowing it completely: It definitely is tricky if not impossible to do. One idea I had (which may or may not be feasible) is to set a \"no-modification\" flag in the `apply` method which is checked by each modification method before actually modifying the DataFrame."
  }
]
