[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77243037",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-77243037",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 77243037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjQzMDM3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T20:43:59Z",
    "updated_at": "2015-03-04T20:43:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "this was on pupose to avoid indiscrimate converting, hence this is somewhat of a 'soft' option. could add a 'force' which just converts to numeric no matter what.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77243453",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-77243453",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 77243453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjQzNDUz",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T20:46:11Z",
    "updated_at": "2015-03-04T20:46:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "`coerce` might be the most consistent keyword with other functions that do conversions.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77243706",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-77243706",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 77243706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjQzNzA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T20:47:27Z",
    "updated_at": "2015-03-04T20:47:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "sorry, that's what I meant. sounds reasonable to me.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77244020",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-77244020",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 77244020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjQ0MDIw",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T20:49:06Z",
    "updated_at": "2015-03-04T20:49:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would argue that the default behavior feels a bit like an attempt at _\"magic\"_ -- that is, guessing what I want rather than doing what I say.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77245459",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-77245459",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 77245459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjQ1NDU5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T20:56:53Z",
    "updated_at": "2015-03-04T20:56:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bashtage you can certainly try to change it. I am ok with that. I think the problem was that it was overly aggressive and broke bunch of stuff, but if you want to make it work fine too.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99227868",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99227868",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99227868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjI3ODY4",
    "user": {
      "login": "detroitcoder",
      "id": 6266683,
      "node_id": "MDQ6VXNlcjYyNjY2ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6266683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detroitcoder",
      "html_url": "https://github.com/detroitcoder",
      "followers_url": "https://api.github.com/users/detroitcoder/followers",
      "following_url": "https://api.github.com/users/detroitcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/detroitcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detroitcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detroitcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/detroitcoder/orgs",
      "repos_url": "https://api.github.com/users/detroitcoder/repos",
      "events_url": "https://api.github.com/users/detroitcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detroitcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T21:27:07Z",
    "updated_at": "2015-05-05T21:27:07Z",
    "author_association": "NONE",
    "body": "What about using `convert_object` on a field of strings where only one of the fields can be converted to a numeric?\n\n eg. \n\n```\nconverted_df = DataFrame(list(\"abc1xyz\")).convert_objects(convert_numeric=True)\nconverted_df.info()\n>> class 'pandas.core.frame.DataFrame'>\nInt64Index: 7 entries, 0 to 6\nData columns (total 1 columns):\n0    1 non-null float64\ndtypes: float64(1)\n```\n\nOnly one numeric value will force this field to float64, set all strings to null, and convert the rest to floats. This seems a bit more like black magic.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99232418",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99232418",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99232418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjMyNDE4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T21:43:25Z",
    "updated_at": "2015-05-05T21:43:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@detroitcoder this is exactly the purpose of using `convert_objects(convert_numeric=True)` to force convert things to numeric, or set them to `nan`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99251612",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99251612",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99251612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjUxNjEy",
    "user": {
      "login": "detroitcoder",
      "id": 6266683,
      "node_id": "MDQ6VXNlcjYyNjY2ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6266683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detroitcoder",
      "html_url": "https://github.com/detroitcoder",
      "followers_url": "https://api.github.com/users/detroitcoder/followers",
      "following_url": "https://api.github.com/users/detroitcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/detroitcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detroitcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detroitcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/detroitcoder/orgs",
      "repos_url": "https://api.github.com/users/detroitcoder/repos",
      "events_url": "https://api.github.com/users/detroitcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detroitcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T22:35:36Z",
    "updated_at": "2015-05-05T23:15:40Z",
    "author_association": "NONE",
    "body": "That seems a bit confusing and dangerous. Say I have a dataframe with three columns, all containing string objects. The first contains no fields that can be converted to int, the second only contains one, and the third can all be converted to ints. If someone uses `convert_objects(convert_numeric=True)` on this dataframe, the third field is set to int32 and the second is float64.  \n\n```\ndf = DataFrame(zip(list(\"abc\"), list(\"xy1\"), list(\"123\")))\nconverted_df = df.convert_objects(convert_numeric=True)\nconverted_df.info()\n\n>> class 'pandas.core.frame.DataFrame'>\nInt64Index: 3 entries, 0 to 2\nData columns (total 3 columns):\n0    3 non-null object\n1    1 non-null float64\n2    3 non-null int64\ndtypes: float64(1), int64(1), object(1)\nmemory usage: 96.0+ bytes\n```\n\nIf a user has to know the datatype of the columns before using `convert_objects` they could just use `DataFrame.astype` and `DataFrame.replace` with a regex to convert strings to nulls. I was under the impression that `convert_objects` could be used to convert objects without having to know what the underlying data consists of.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99253424",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99253424",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99253424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjUzNDI0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T22:47:45Z",
    "updated_at": "2015-05-05T22:47:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "the point is to force convert something that astype won't work on\n\nwhat are you trying to do? you rarely actually need to use convert_objects; only use case is what I mentioned above\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99255599",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99255599",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99255599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjU1NTk5",
    "user": {
      "login": "detroitcoder",
      "id": 6266683,
      "node_id": "MDQ6VXNlcjYyNjY2ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6266683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detroitcoder",
      "html_url": "https://github.com/detroitcoder",
      "followers_url": "https://api.github.com/users/detroitcoder/followers",
      "following_url": "https://api.github.com/users/detroitcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/detroitcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detroitcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detroitcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/detroitcoder/orgs",
      "repos_url": "https://api.github.com/users/detroitcoder/repos",
      "events_url": "https://api.github.com/users/detroitcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detroitcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T23:02:02Z",
    "updated_at": "2015-05-05T23:06:45Z",
    "author_association": "NONE",
    "body": "I want to convert objects from various sources to ndtypes without metadata or knowing what the data consists of. If I could use `convert_numeric=True` for a soft convert, and `convert_numeric=\"coerce\"` for a forced convert, similar to convert_dates, that would be perfect. However, `convert_numeric=True` actually means 'coerce' which means I can't use `convert_objects` all together.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99271278",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99271278",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99271278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjcxMjc4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T00:27:30Z",
    "updated_at": "2015-05-06T00:27:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@detroitcoder well, where is your data coming from? `read_csv/read_sql` and most of the input converters automatically coerce things for you. You have to work pretty hard to construct a mixed-type `object` array. I mean you may have it and that's when `convert_objects()` comes in handy. The default settings do a 'soft' conversion, that is if all of the objects are convertible it will coerce it appropriately. `convert_numeric` is to perform 'forced' conversions that for some reason you don't/can't do using say `read_csv`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99506974",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99506974",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99506974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTA2OTc0",
    "user": {
      "login": "detroitcoder",
      "id": 6266683,
      "node_id": "MDQ6VXNlcjYyNjY2ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6266683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detroitcoder",
      "html_url": "https://github.com/detroitcoder",
      "followers_url": "https://api.github.com/users/detroitcoder/followers",
      "following_url": "https://api.github.com/users/detroitcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/detroitcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detroitcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detroitcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/detroitcoder/orgs",
      "repos_url": "https://api.github.com/users/detroitcoder/repos",
      "events_url": "https://api.github.com/users/detroitcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detroitcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T15:13:13Z",
    "updated_at": "2015-05-06T15:13:13Z",
    "author_association": "NONE",
    "body": "@jreback the data can come from many different sources, but most often as JSON or XML over HTTP/S. The problem that i have is that the data is often stored as strings even though it should be treated as int/float/datetime.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99514504",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99514504",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99514504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTE0NTA0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T15:29:23Z",
    "updated_at": "2015-05-06T15:29:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@detroitcoder ok that makes sense then. you will have to do some type conversions (not that `read_json` might work for you in some cases). try `.convert_objects()` w/o the modifiers first and see what it can do for you.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99523120",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99523120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99523120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTIzMTIw",
    "user": {
      "login": "detroitcoder",
      "id": 6266683,
      "node_id": "MDQ6VXNlcjYyNjY2ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6266683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detroitcoder",
      "html_url": "https://github.com/detroitcoder",
      "followers_url": "https://api.github.com/users/detroitcoder/followers",
      "following_url": "https://api.github.com/users/detroitcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/detroitcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detroitcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detroitcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/detroitcoder/orgs",
      "repos_url": "https://api.github.com/users/detroitcoder/repos",
      "events_url": "https://api.github.com/users/detroitcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detroitcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T16:00:27Z",
    "updated_at": "2015-05-06T16:00:27Z",
    "author_association": "NONE",
    "body": "@jreback, if `.convert_objects()` is called using default params, it has no affect on ints/floats:\n\n```\ndf = DataFrame(zip(list(\"abc\"), list(\"xy1\"), list(\"123\")))\nconverted_df = df.convert_objects()\nconverted_df.info()\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 3 entries, 0 to 2\nData columns (total 3 columns):\n0    3 non-null object\n1    3 non-null object\n2    3 non-null object\ndtypes: object(3)\nmemory usage: 96.0+ bytes\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99527904",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99527904",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99527904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTI3OTA0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T16:20:27Z",
    "updated_at": "2015-05-06T16:20:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "so pass the options. Not really sure what you don't like about that. You can also astype. or even do this\n`Series(numpy_array.tolist())` which will automatically infer the types for you.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99540784",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99540784",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99540784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTQwNzg0",
    "user": {
      "login": "detroitcoder",
      "id": 6266683,
      "node_id": "MDQ6VXNlcjYyNjY2ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6266683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detroitcoder",
      "html_url": "https://github.com/detroitcoder",
      "followers_url": "https://api.github.com/users/detroitcoder/followers",
      "following_url": "https://api.github.com/users/detroitcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/detroitcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detroitcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detroitcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/detroitcoder/orgs",
      "repos_url": "https://api.github.com/users/detroitcoder/repos",
      "events_url": "https://api.github.com/users/detroitcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detroitcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T17:11:13Z",
    "updated_at": "2015-05-06T17:11:13Z",
    "author_association": "NONE",
    "body": "I wanted to use `.convert_objects` on an entire dataframe to convert objects into int32/float64  only for columns where every value conforms to a int/float. Right now I can't do that because all it takes is one value in a column to appear as a float and the entire column will be converted, setting everything else to nan.\n\nA user cannot safely call `.convert_objects(convert_numeric=True)` unless they are certain that every column that should remain as a string does not contain a single <i>integer-like</i> value. However when dealing with string-data from multiple sources, often times <i>uncleaned</i>, you are rarely certain about this. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99541239",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99541239",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99541239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTQxMjM5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T17:13:38Z",
    "updated_at": "2015-05-06T17:13:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "you would have to show an example\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99541388",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99541388",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99541388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTQxMzg4",
    "user": {
      "login": "detroitcoder",
      "id": 6266683,
      "node_id": "MDQ6VXNlcjYyNjY2ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6266683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detroitcoder",
      "html_url": "https://github.com/detroitcoder",
      "followers_url": "https://api.github.com/users/detroitcoder/followers",
      "following_url": "https://api.github.com/users/detroitcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/detroitcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detroitcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detroitcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/detroitcoder/orgs",
      "repos_url": "https://api.github.com/users/detroitcoder/repos",
      "events_url": "https://api.github.com/users/detroitcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detroitcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T17:14:22Z",
    "updated_at": "2015-05-06T17:14:22Z",
    "author_association": "NONE",
    "body": "This is what all of my examples have been of.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99544737",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99544737",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99544737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTQ0NzM3",
    "user": {
      "login": "detroitcoder",
      "id": 6266683,
      "node_id": "MDQ6VXNlcjYyNjY2ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6266683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detroitcoder",
      "html_url": "https://github.com/detroitcoder",
      "followers_url": "https://api.github.com/users/detroitcoder/followers",
      "following_url": "https://api.github.com/users/detroitcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/detroitcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detroitcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detroitcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/detroitcoder/orgs",
      "repos_url": "https://api.github.com/users/detroitcoder/repos",
      "events_url": "https://api.github.com/users/detroitcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detroitcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T17:29:21Z",
    "updated_at": "2015-05-06T17:30:07Z",
    "author_association": "NONE",
    "body": "This is practically the same example from my previous comment.\n\nHere we create a dataframe that has 5000 rows and 3 columns. If a user calls `df.convert_objects(convert_numeric=True)`, column B will be converted to a float64 just because there is one value that happens to be <i>integer-like</i>.\n\n```\ncol_a = \"A\" * 5000\ncol_b = \"B\" * 4999 + \"1\"\ncol_c = \"1\" * 5000\n\ndf = DataFrame(zip(col_a, col_b, col_c), columns=[\"A\", \"B\", \"C\"])\nconverted_df = df.convert_objects(convert_numeric=True)\nconverted_df.info()\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 5000 entries, 0 to 4999\nData columns (total 3 columns):\nA    5000 non-null object\nB    1 non-null float64\nC    5000 non-null int64\ndtypes: float64(1), int64(1), object(1)\nmemory usage: 156.2+ KB\n```\n\nUnless a user is certain that every column that should remain as a string does not contain a single integer-like value, they cannot safely call convert_objects(convert_numeric=True).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99549838",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99549838",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99549838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTQ5ODM4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T17:44:09Z",
    "updated_at": "2015-05-06T17:44:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "so just do something like this\n\n```\nIn [11]: def convert(c):\n   ....:     try:\n   ....:         return c.astype(np.number)\n   ....:     except:\n   ....:         return c\n   ....:     \n\nIn [12]: df.apply(convert).dtypes\nOut[12]: \nA     object\nB     object\nC    float64\ndtype: object\n```\n\nIf you have completely unknown data, then pandas cannot reasonably guess what you actually want. Clearly you want a 'safe' version of astype.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99554877",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99554877",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99554877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTU0ODc3",
    "user": {
      "login": "detroitcoder",
      "id": 6266683,
      "node_id": "MDQ6VXNlcjYyNjY2ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6266683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detroitcoder",
      "html_url": "https://github.com/detroitcoder",
      "followers_url": "https://api.github.com/users/detroitcoder/followers",
      "following_url": "https://api.github.com/users/detroitcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/detroitcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detroitcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detroitcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/detroitcoder/orgs",
      "repos_url": "https://api.github.com/users/detroitcoder/repos",
      "events_url": "https://api.github.com/users/detroitcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detroitcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T18:05:17Z",
    "updated_at": "2015-05-06T18:05:50Z",
    "author_association": "NONE",
    "body": "Thank you. I am doing something similar but I would ask why `convert_objects` does not do this or at least allow for it? I imagine that based on naming, `convert_objects()` is the first method that users turn to when converting datatypes in dataframes. Someone could be using this for months without realizing that all it takes is one record that is <i>integer-like</i> and an entire field will be converted incorrectly. Just seems like a very big gotcha.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99555657",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99555657",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99555657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTU1NjU3",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T18:07:22Z",
    "updated_at": "2015-05-06T18:07:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "It all depends on what you consider 'correct'.  This is a general problem with this function - it operates with a bit of magic (e.g. my point above about the vast difference between 1 number of 0 numbers).\n\nMaybe the docstring be improved to describe the edge cases?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99558017",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99558017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99558017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTU4MDE3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T18:16:34Z",
    "updated_at": "2015-05-06T18:16:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "well pull-requests are welcome. I think you could even have a `thresh` option if you want to conditionally convert.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99559211",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99559211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99559211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTU5MjEx",
    "user": {
      "login": "detroitcoder",
      "id": 6266683,
      "node_id": "MDQ6VXNlcjYyNjY2ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6266683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detroitcoder",
      "html_url": "https://github.com/detroitcoder",
      "followers_url": "https://api.github.com/users/detroitcoder/followers",
      "following_url": "https://api.github.com/users/detroitcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/detroitcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detroitcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detroitcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/detroitcoder/orgs",
      "repos_url": "https://api.github.com/users/detroitcoder/repos",
      "events_url": "https://api.github.com/users/detroitcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detroitcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T18:20:25Z",
    "updated_at": "2015-05-06T18:20:25Z",
    "author_association": "NONE",
    "body": "@bashtage I would agree that improved docstring would help, but I would argue that making `convert_numeric=True` different from `convert_numeric=\"coerce\"` would fix this specific problem. This is similar to how the convert_dates argument works.\n\nWith `convert_numeric=True`, conversion would only occur if every value in a field conforms to an <i>integer-like</i> value. `convert_numeric=\"coerce\"` would be the same as `convert_numeric=True` is currently.\n\n@jreback sounds like a fun thing to work on this weekend!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99560099",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99560099",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99560099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTYwMDk5",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T18:22:13Z",
    "updated_at": "2015-05-06T18:22:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "`coerce` should _always_ return numeric values IMO, which is different from\nthe current behavior.\n\nOn Wed, May 6, 2015 at 2:20 PM detroitcoder notifications@github.com\nwrote:\n\n> @bashtage https://github.com/bashtage I would agree that improved\n> docstring would help, but I would argue that making convert_numeric=True\n> different from convert_numeric=\"coerce\" would fix this specific problem.\n> This is similar to how the convert_dates argument works.\n> \n> With convert_numeric=True, conversion would only occur if every value in\n> a field conforms to an _integer-like_ value. convert_numeric=\"coerce\"\n> would be the same as convert_numeric=True is currently.\n> \n> @jreback https://github.com/jreback sounds like a fun thing to work on\n> this weekend!\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/issues/9589#issuecomment-99559211.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99560732",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99560732",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99560732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTYwNzMy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T18:23:25Z",
    "updated_at": "2015-05-06T18:23:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeh, you could simply add `coerce` option for `convert_numeric` which would always coerce, while `True` could do more of an astype like conversion (and I think would be reasonable back-compat)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99569523",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99569523",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99569523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTY5NTIz",
    "user": {
      "login": "detroitcoder",
      "id": 6266683,
      "node_id": "MDQ6VXNlcjYyNjY2ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6266683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detroitcoder",
      "html_url": "https://github.com/detroitcoder",
      "followers_url": "https://api.github.com/users/detroitcoder/followers",
      "following_url": "https://api.github.com/users/detroitcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/detroitcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detroitcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detroitcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/detroitcoder/orgs",
      "repos_url": "https://api.github.com/users/detroitcoder/repos",
      "events_url": "https://api.github.com/users/detroitcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detroitcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T18:42:05Z",
    "updated_at": "2015-05-06T18:58:15Z",
    "author_association": "NONE",
    "body": "@bashtage I politely disagree. Coerce means 'to persuade' not 'to force'. If as you said that you want it to always return numeric, then \"coerce\" is not the right description. I feel that the current implementation of convert_numeric=\"coerce\" is logically succinct with the word's usage (example below). Because column A does not have any <i>interger-like</i> strings, it is not coerced into converting into numeric:\n\n```\ndf = DataFrame(zip(\"ABCD\", \"ABC1\"), columns=[\"A\", \"B\"])\nconverted_df = df.convert_objects(convert_numeric=\"coerce\")\nconverted_df.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 4 entries, 0 to 3\nData columns (total 2 columns):\nA    4 non-null object\nB    1 non-null float64\ndtypes: float64(1), object(1)\nmemory usage: 96.0+ bytes\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99586393",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99586393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99586393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTg2Mzkz",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T19:55:21Z",
    "updated_at": "2015-05-06T19:55:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I could counter having a path that differs in its return depending on whether there is 1 number of 0 numbers is far too magical to be useful.  \n\n> Because column A does not have any integer-like strings, it is not coerced into converting into numeric:\n\nWhich is why I call it magical -- despite telling the function to `'coerce'`, it is magically ignored your directive and returned a set of things that are not numbers.\n\nThis choice makes it really hard to use in a straightforward, automated fashion since you always have to detect the data type after asking it to `coerce` since you might not get numeric data (including `NaN`).\n\nI also don't think it fits the definition of coerce: \n\n**Coerce: to compel by force, intimidation, or authority, especially without regard for individual desire or volition**\n\nsince it did not compel the data to become numeric...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99640137",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-99640137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 99640137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NjQwMTM3",
    "user": {
      "login": "detroitcoder",
      "id": 6266683,
      "node_id": "MDQ6VXNlcjYyNjY2ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6266683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detroitcoder",
      "html_url": "https://github.com/detroitcoder",
      "followers_url": "https://api.github.com/users/detroitcoder/followers",
      "following_url": "https://api.github.com/users/detroitcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/detroitcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detroitcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detroitcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/detroitcoder/orgs",
      "repos_url": "https://api.github.com/users/detroitcoder/repos",
      "events_url": "https://api.github.com/users/detroitcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detroitcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T23:12:17Z",
    "updated_at": "2015-05-06T23:12:35Z",
    "author_association": "NONE",
    "body": "I think we can at least agree there is some ambiguity about what coerce should do. From how I see it there are at least three variations that should be accounted for:\n1. Soft convert (convert if all values conform)\n2. Hard convert (convert if at least 1 value conforms)\n3. Forced convert (convert no matter the values)\n\nYour initial posting indicated you were expecting 1, but got 2. You are now saying you want coerce to be 3. Does that assume you do not see a usecase for 2 (which is the current implementation)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108034371",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9589#issuecomment-108034371",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9589",
    "id": 108034371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODAzNDM3MQ==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T18:01:19Z",
    "updated_at": "2015-06-02T18:01:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@detroitcoder I expected coercing would be 3.  \n\nI'm happy with a default of 2, which is the current.  I'm not sure that the purpose of 1 is since you can always use other methods to achieve this (`.astype`).  \n\nFor example:\n\n``` python\ndf = pd.DataFrame({'a':['a','b','c'], 'b':['1','a','2'], 'c':['1','2','3']})\n```\n\n``` python\n>>> df.convert_objects(convert_numeric=True)\n\nOut[4]: \n   a   b  c\n0  a   1  1\n1  b NaN  2\n2  c   2  3\n```\n\nand \n\n``` python\ndf.convert_objects(convert_numeric='coerce')\n\nOut[6]: \n   a   b  c\n0  a   1  1\n1  b NaN  2\n2  c   2  3\n```\n\nboth return the same values for column a.  When 'coerceing`, I expect column a to be all NaNs since I asked pandas to coerce the data. \n"
  }
]
