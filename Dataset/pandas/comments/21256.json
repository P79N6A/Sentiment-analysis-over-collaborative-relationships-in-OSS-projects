[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/444819110",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21256#issuecomment-444819110",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21256",
    "id": 444819110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDgxOTExMA==",
    "user": {
      "login": "hodossy",
      "id": 19623656,
      "node_id": "MDQ6VXNlcjE5NjIzNjU2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/19623656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hodossy",
      "html_url": "https://github.com/hodossy",
      "followers_url": "https://api.github.com/users/hodossy/followers",
      "following_url": "https://api.github.com/users/hodossy/following{/other_user}",
      "gists_url": "https://api.github.com/users/hodossy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hodossy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hodossy/subscriptions",
      "organizations_url": "https://api.github.com/users/hodossy/orgs",
      "repos_url": "https://api.github.com/users/hodossy/repos",
      "events_url": "https://api.github.com/users/hodossy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hodossy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-06T10:09:25Z",
    "updated_at": "2018-12-06T10:09:25Z",
    "author_association": "NONE",
    "body": "I have a temporary solution until is is fixed:\r\n```\r\nclass NativeDict(dict):\r\n    \"\"\"\r\n        Helper class to ensure that only native types are in the dicts produced by\r\n        :func:`to_dict() <pandas.DataFrame.to_dict>`\r\n\r\n        .. note::\r\n\r\n            Needed until `#21256 <https://github.com/pandas-dev/pandas/issues/21256>`_ is resolved.\r\n    \"\"\"\r\n    def __init__(self, *args, **kwargs):\r\n        super().__init__(((k, self.convert_if_needed(v)) for row in args for k, v in row), **kwargs)\r\n\r\n    @staticmethod\r\n    def convert_if_needed(value):\r\n        \"\"\"\r\n            Converts `value` to native python type.\r\n\r\n            .. warning::\r\n\r\n                Only :class:`Timestamp <pandas.Timestamp>` and numpy :class:`dtypes <numpy.dtype>` are converted.\r\n        \"\"\"\r\n        if pd.isnull(value):\r\n            return None\r\n        if isinstance(value, pd.Timestamp):\r\n            return value.to_pydatetime()\r\n        if hasattr(value, 'dtype'):\r\n            mapper = {'i': int, 'u': int, 'f': float}\r\n            _type = mapper.get(value.dtype.kind, lambda x: x)\r\n            return _type(value)\r\n        return value\r\n```\r\n\r\nThis also replaces `NaN` and `NaT` objects with native python `None`. Please note that it only intended use is to convert into, I have not tested elsewhere. It can be used like so:\r\n\r\n```\r\ndf.to_dict(orient='records', into=NativeDict)\r\n```"
  }
]
