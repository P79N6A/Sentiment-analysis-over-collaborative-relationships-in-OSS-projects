[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390371794",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21127#issuecomment-390371794",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21127",
    "id": 390371794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDM3MTc5NA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-19T02:22:01Z",
    "updated_at": "2018-05-19T02:22:01Z",
    "author_association": "MEMBER",
    "body": "Just to confirm what is your expected output here? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390507099",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21127#issuecomment-390507099",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21127",
    "id": 390507099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDUwNzA5OQ==",
    "user": {
      "login": "kunalgosar",
      "id": 12736060,
      "node_id": "MDQ6VXNlcjEyNzM2MDYw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12736060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalgosar",
      "html_url": "https://github.com/kunalgosar",
      "followers_url": "https://api.github.com/users/kunalgosar/followers",
      "following_url": "https://api.github.com/users/kunalgosar/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalgosar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalgosar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalgosar/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalgosar/orgs",
      "repos_url": "https://api.github.com/users/kunalgosar/repos",
      "events_url": "https://api.github.com/users/kunalgosar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalgosar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-20T19:58:03Z",
    "updated_at": "2018-05-20T22:48:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would expect this not to error and to have similar behavior to that when grouping by rows. It should just compute the cumulative sum across columns for each group, or if this does not make sense, at least throw a more descriptive exception specifying that this operation is not supported on `axis=1`.\r\n\r\nIt looks like all the cumulative functions fail when grouping by `axis=1` (`cumsum`, `cummax`, `cummin`, `cumprod`). \r\n\r\nWhen grouping on `axis=0`, `cumsum(axis=0)` and `cumsum(axis=1)` both work fine. But on `axis=1` only `cumsum(axis=1)` works."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390570101",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21127#issuecomment-390570101",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21127",
    "id": 390570101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDU3MDEwMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T06:58:45Z",
    "updated_at": "2018-05-21T06:58:45Z",
    "author_association": "MEMBER",
    "body": "@kunalgosar : Indeed, this does look weird.  Patch is more than welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391720985",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21127#issuecomment-391720985",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21127",
    "id": 391720985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTcyMDk4NQ==",
    "user": {
      "login": "msmarchena",
      "id": 13339773,
      "node_id": "MDQ6VXNlcjEzMzM5Nzcz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/13339773?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/msmarchena",
      "html_url": "https://github.com/msmarchena",
      "followers_url": "https://api.github.com/users/msmarchena/followers",
      "following_url": "https://api.github.com/users/msmarchena/following{/other_user}",
      "gists_url": "https://api.github.com/users/msmarchena/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/msmarchena/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msmarchena/subscriptions",
      "organizations_url": "https://api.github.com/users/msmarchena/orgs",
      "repos_url": "https://api.github.com/users/msmarchena/repos",
      "events_url": "https://api.github.com/users/msmarchena/events{/privacy}",
      "received_events_url": "https://api.github.com/users/msmarchena/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-24T13:47:38Z",
    "updated_at": "2018-05-25T09:19:48Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  looks like all the cumulative functions fail when grouping by axis=1 (cumsum, cummax, cummin, cumprod).\r\n\r\nAll the referred functions have as default ```axis=0``` ,  when using ```axis=1``` it works as expected\r\n\r\n    df.groupby(by=[1, 2, 3, 1, 2], axis=1).cumsum(axis=1)\r\n       col1  col2  col3  col4  col5\r\n    0     0     4     8    12     4\r\n    1     1     5     9    14     5\r\n    2     2     6    10    16     6\r\n    3     3     7    11    18     7\r\n\r\nbut\r\n\r\n     df.groupby(by=[1, 2, 3, 1, 2], axis=1).cumsum()\r\n\r\ngives\r\n\r\n    ValueError: Shape of passed values is (4, 5), indices imply (4, 4)\r\n\r\n> When grouping on axis=0, cumsum(axis=0) and cumsum(axis=1) both work fine. But on axis=1 only cumsum(axis=1) works.\r\n\r\nMy understanding here is that ```groupby``` is going to be applied to the rows. Since the df only has 4 rows I need  to have only 4 arguments here. Otherwise, it doesn't make sense.\r\n\r\nFor instance, using \r\n\r\n    df0=df.groupby(by=[1, 2, 3, 1]).cumsum() #default axis=0 in groupby() and cumsum()\r\n\r\ngives \r\n\r\n       col1  col2  col3  col4  col5\r\n    0     0     4     8    12     0\r\n    1     1     5     9    13     0\r\n    2     2     6    10    14     0\r\n    3     3    11    19    27     0\r\n\r\nand this results works as expected. But\r\n\r\n    df0=df.groupby(by=[1, 2, 3, 1]).cumsum(axis=1) \r\n\r\ngives\r\n\r\n       col1  col2  col3  col4  col5\r\n    0     0     4    12    24    24\r\n    1     1     6    15    28    28\r\n    2     2     8    18    32    32\r\n    3     3    10    21    36    36\r\n\r\nIt returns the ```cumsum```over columns, which is weird. The same logic applies to ```cummax```, ```cummin``` and ```cumprod```. To me it makes sense to have an error in your case. But maybe I'm missing something.  \r\n\r\n\r\n\r\n"
  }
]
