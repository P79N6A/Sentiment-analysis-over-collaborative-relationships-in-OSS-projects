[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/80530447",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9653#issuecomment-80530447",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9653",
    "id": 80530447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTMwNDQ3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T15:20:37Z",
    "updated_at": "2015-03-14T15:20:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "What you are asking is too magical / not supported.\n\nThere IS a difference between a `NaN` named level and once named `''`. To be honest this is a bit odd, but not really sure if we can do / should we do anything about this. Multi-indexes are fully leveled, in that, every value has each level represented. Their _could_ be a new `MultiIndex` which can handle this better, but that would be quite a challenge I think.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/82549273",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9653#issuecomment-82549273",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9653",
    "id": 82549273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTQ5Mjcz",
    "user": {
      "login": "brianthelion",
      "id": 296082,
      "node_id": "MDQ6VXNlcjI5NjA4Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brianthelion",
      "html_url": "https://github.com/brianthelion",
      "followers_url": "https://api.github.com/users/brianthelion/followers",
      "following_url": "https://api.github.com/users/brianthelion/following{/other_user}",
      "gists_url": "https://api.github.com/users/brianthelion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brianthelion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brianthelion/subscriptions",
      "organizations_url": "https://api.github.com/users/brianthelion/orgs",
      "repos_url": "https://api.github.com/users/brianthelion/repos",
      "events_url": "https://api.github.com/users/brianthelion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brianthelion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-17T19:19:49Z",
    "updated_at": "2015-03-17T19:19:49Z",
    "author_association": "NONE",
    "body": "@jreback \n\nA point that I am trying -- and maybe failing -- to illustrate here is that I did not, myself, insert the NaN; that was done by `.from_tuples(...)`. You'll note that in `multiindex_version_1(...)` I didn't give a secondary index level for column `b`, but the secondary index level for `b` was nonetheless filled in with a NaN. This is undocumented behavior, and I would hazard that most folks will _assume_ that they'll end up with the `version_2` column scheme.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/82559385",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9653#issuecomment-82559385",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9653",
    "id": 82559385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTU5Mzg1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-17T19:38:18Z",
    "updated_at": "2015-03-17T19:38:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@brianthelion by definition pandas fills missing things with `NaN`. That is quite fully documented in the missing data section. You are welcome to take a look there. I think it would be much _more_ suprising to fill the nans with something else. It is not general at all to auto-fill things.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/82588051",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9653#issuecomment-82588051",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9653",
    "id": 82588051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTg4MDUx",
    "user": {
      "login": "brianthelion",
      "id": 296082,
      "node_id": "MDQ6VXNlcjI5NjA4Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brianthelion",
      "html_url": "https://github.com/brianthelion",
      "followers_url": "https://api.github.com/users/brianthelion/followers",
      "following_url": "https://api.github.com/users/brianthelion/following{/other_user}",
      "gists_url": "https://api.github.com/users/brianthelion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brianthelion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brianthelion/subscriptions",
      "organizations_url": "https://api.github.com/users/brianthelion/orgs",
      "repos_url": "https://api.github.com/users/brianthelion/repos",
      "events_url": "https://api.github.com/users/brianthelion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brianthelion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-17T20:39:24Z",
    "updated_at": "2015-03-18T01:55:38Z",
    "author_association": "NONE",
    "body": "@jreback \n\nSorry, maybe I'm still not explaining myself clearly here:\n\nLet's start with the `version_2` DataFrame and assume that that's the kind of column index structure that we want. Given the tuples that I put in to `.from_tuples(...)` in  `multiindex_version_1`, my hope was that that was the kind of column structure I would get. Instead, I got a result in which pandas _assumed_ that data were missing. The undocumented behavior here, then, is that `.from_tuples` assumes that data are missing if it doesn't get tuples of equal length.\n\nThe ultimate question is, How do I get the `version_2` DataFrame without resorting to assignment, eg, via a MulitIndex class constructor?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/82623750",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9653#issuecomment-82623750",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9653",
    "id": 82623750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNjIzNzUw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-17T22:27:01Z",
    "updated_at": "2015-03-17T22:27:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "specify tuples, e.g. `('b','')` if you really want to use an empty string.\n"
  }
]
