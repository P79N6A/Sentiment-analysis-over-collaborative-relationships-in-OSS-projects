[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292321561",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15927#issuecomment-292321561",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15927",
    "id": 292321561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjMyMTU2MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T21:09:15Z",
    "updated_at": "2017-04-06T21:09:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Docs are here: http://pandas-docs.github.io/pandas-docs-travis/basics.html#iteration\r\n\r\nThe analogy for `DataFrame.__iter__` is like iterating over a dictionary (columns are the keys in this case).\r\n\r\nYou might not want `.iterrows()` either, this converts the row to a Series. If you have heterogenous data this will force `object` dtype. In practice, I find `.itertuples()` most useful for row-wise iteration.\r\n\r\nEven if we wanted to, this isn't something we could change without breaking a lot of people's code."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292324820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15927#issuecomment-292324820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15927",
    "id": 292324820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjMyNDgyMA==",
    "user": {
      "login": "jadolfbr",
      "id": 3290052,
      "node_id": "MDQ6VXNlcjMyOTAwNTI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3290052?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jadolfbr",
      "html_url": "https://github.com/jadolfbr",
      "followers_url": "https://api.github.com/users/jadolfbr/followers",
      "following_url": "https://api.github.com/users/jadolfbr/following{/other_user}",
      "gists_url": "https://api.github.com/users/jadolfbr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jadolfbr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jadolfbr/subscriptions",
      "organizations_url": "https://api.github.com/users/jadolfbr/orgs",
      "repos_url": "https://api.github.com/users/jadolfbr/repos",
      "events_url": "https://api.github.com/users/jadolfbr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jadolfbr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T21:18:04Z",
    "updated_at": "2017-04-06T21:18:04Z",
    "author_association": "NONE",
    "body": "Thanks for the ```.itertuples()``` suggestion - will definitely look into this.  \r\n\r\nI get the analogy, but I still think it is not very useful as the default iteration.  The same analogy could be used for rows - IE each row being part of a list, like a list of dicts or named tupples.   I code Rosetta, so I also get that people's code would break for this large change, but I've had my code break from pandas changes many times so far as well..."
  }
]
