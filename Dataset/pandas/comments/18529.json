[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347328113",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-347328113",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 347328113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzMyODExMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T21:07:14Z",
    "updated_at": "2017-11-27T21:07:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@reidy-p can you look at the original issue; do we have a replacement for ``.from_items(...., orient=....)``; I guess this is the same issue as ``.from_dict(...., orient=...)``\r\n\r\nsuppose we could just add an optional ``orient=`` kwarg to ``DataFrame()`` to alleviate these cases.\r\n\r\n@jorisvandenbossche @TomAugspurger \r\n\r\nsince we are doing pretty much *everything* with the main constructors and not the ``from_*`` constructors (ship has sailed as far as that). Then for consistency this makes sense."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347349812",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-347349812",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 347349812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzM0OTgxMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T22:27:10Z",
    "updated_at": "2017-11-27T22:27:10Z",
    "author_association": "MEMBER",
    "body": "-1 on adding even more to the main DataFrame constructor. The ship has not fully sailed since `from_dict` and `from_items` are effectively giving functionality not available in the `DataFrame(..)`. \r\n\r\nIf there is no actual alternative for `.from_items(.., orient=..)`, then for me that sounds as a reason to not deprecate this one. \r\n\r\nAlthough I suppose you can do it with `from_dict(dict(..), orient=..)` ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347349937",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-347349937",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 347349937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzM0OTkzNw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T22:27:37Z",
    "updated_at": "2017-11-27T22:27:37Z",
    "author_association": "MEMBER",
    "body": "cc @wesm as you recently posted an issue related to `from_items`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347360266",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-347360266",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 347360266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzM2MDI2Ng==",
    "user": {
      "login": "reidy-p",
      "id": 21114125,
      "node_id": "MDQ6VXNlcjIxMTE0MTI1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21114125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reidy-p",
      "html_url": "https://github.com/reidy-p",
      "followers_url": "https://api.github.com/users/reidy-p/followers",
      "following_url": "https://api.github.com/users/reidy-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/reidy-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reidy-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reidy-p/subscriptions",
      "organizations_url": "https://api.github.com/users/reidy-p/orgs",
      "repos_url": "https://api.github.com/users/reidy-p/repos",
      "events_url": "https://api.github.com/users/reidy-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reidy-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T23:11:39Z",
    "updated_at": "2017-11-27T23:11:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, you can use ``from_dict(.., orient=)`` to achieve the same results as ``from_items(.., orient=)`` or you could just use ``DataFrame()``:\r\n```\r\nIn [1]: DataFrame.from_items([('A', [1, 2]), ('B', [3, 4])], columns=['col1', 'col2'], orient='index')\r\nOut[1]:    \r\n    col1  col2\r\nA     1     2\r\nB     3     4\r\n\r\nIn [2]: DataFrame([[1, 2], [3, 4]], columns=['col1', 'col2'], index=['A', 'B'])\r\nOut[2]:\r\n    col1  col2\r\nA     1     2\r\nB     3     4\r\n\r\nIn [3]: df = DataFrame.from_dict(dict([('A', [1, 2]), ('B', [3, 4])]), orient='index')\r\nIn [4]: df.columns = ['col1', 'col2'] # from_dict has no columns argument\r\nOut[4]: df\r\n    col1  col2\r\nA     1     2\r\nB     3     4\r\n```\r\n\r\nThis PR also seems to be failing a lot of tests because when I replaced ``from_items`` with ``DataFrame(dict())`` in some tests (e.g., ``tests/io/test_stata.py``) the order of the columns changes. But the tests all pass on my local branch for some reason. I will investigate it a bit more."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347554410",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-347554410",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 347554410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzU1NDQxMA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-28T15:13:35Z",
    "updated_at": "2017-11-28T15:13:35Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=h1) Report\n> Merging [#18529](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/2a0e54bc841f27164b116135ebda4b74bae2fc4a?src=pr&el=desc) will **decrease** coverage by `0.01%`.\n> The diff coverage is `83.33%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18529/graphs/tree.svg?height=150&width=650&src=pr&token=eZ4WkYLtcO)](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18529      +/-   ##\n==========================================\n- Coverage   91.35%   91.33%   -0.02%     \n==========================================\n  Files         164      164              \n  Lines       49802    49804       +2     \n==========================================\n- Hits        45496    45489       -7     \n- Misses       4306     4315       +9\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.13% <83.33%> (ø)` | :arrow_up: |\n| #single | `40.81% <16.66%> (-0.07%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.81% <100%> (-0.1%)` | :arrow_down: |\n| [pandas/io/stata.py](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=tree#diff-cGFuZGFzL2lvL3N0YXRhLnB5) | `93.71% <80%> (ø)` | :arrow_up: |\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `25% <0%> (-58.34%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=footer). Last update [2a0e54b...80dcec6](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347554451",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-347554451",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 347554451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzU1NDQ1MQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-28T15:13:41Z",
    "updated_at": "2018-01-31T00:19:03Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=h1) Report\n> Merging [#18529](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/238499ab0a48a0ad4a2011e2ce1c6a02c86124eb?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18529/graphs/tree.svg?token=eZ4WkYLtcO&src=pr&width=650&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18529      +/-   ##\n==========================================\n- Coverage   91.62%   91.61%   -0.01%     \n==========================================\n  Files         150      150              \n  Lines       48724    48725       +1     \n==========================================\n- Hits        44642    44640       -2     \n- Misses       4082     4085       +3\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.98% <100%> (-0.01%)` | :arrow_down: |\n| #single | `41.74% <0%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/18529/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.42% <100%> (-0.16%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=footer). Last update [238499a...1838f65](https://codecov.io/gh/pandas-dev/pandas/pull/18529?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359268321",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-359268321",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 359268321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTI2ODMyMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-21T18:16:26Z",
    "updated_at": "2018-01-21T18:16:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "if we can deprecate ``.from_items`` and recommend ``.from_dict`` would be great. You might want to recomment ``DataFrame.from_dict(OrderedDict(...))`` for preserving order (and do this in tests)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361915008",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-361915008",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 361915008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTkxNTAwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T12:15:18Z",
    "updated_at": "2018-01-31T12:15:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363386137",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-363386137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 363386137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzM4NjEzNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T10:53:20Z",
    "updated_at": "2018-02-06T10:53:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "at least 1 deprecation warnings are still showing, can you convert (and see if any more)\r\n\r\n```\r\npandas/tests/reshape/test_reshape.py::TestGetDummies::()::test_get_dummies_dont_sparsify_all_columns[True]\r\n  C:\\projects\\pandas\\pandas\\tests\\reshape\\test_reshape.py:460: FutureWarning: from_items is deprecated. Please use DataFrame.from_dict(dict()) instead. DataFrame.from_dict(OrderedDict()) may be used to preserve the key order.\r\n    df = DataFrame.from_items([('GDP', [1, 2]), ('Nation', ['AB', 'CD'])])\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366686453",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-366686453",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 366686453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjY4NjQ1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T12:59:35Z",
    "updated_at": "2018-02-19T12:59:35Z",
    "author_association": "MEMBER",
    "body": "We have an example in the documentation about `from_items`: http://pandas-docs.github.io/pandas-docs-travis/dsintro.html#alternate-constructors \r\nThe first one is easy to change to `from_dict` (or even just DataFrame()), but for the second with `orient='index'` I don't see a simple alternative:\r\n\r\n```\r\nIn [55]: pd.DataFrame.from_items([('A', [1, 2, 3]), ('B', [4, 5, 6])],\r\n   ....:                         orient='index', columns=['one', 'two', 'three'])\r\n   ....: \r\nOut[55]: \r\n   one  two  three\r\nA    1    2      3\r\nB    4    5      6\r\n```\r\n\r\nAlso, the deprecation warning in that case is not really correct, as simply changing to `from_dict(dict(..))` does not work:\r\n\r\n```\r\nIn [50]: pd.DataFrame.from_dict(dict([('A', [1, 2, 3]), ('B', [4, 5, 6])]), orient='index', columns=['one', 'two', 'three'])\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-50-e431c313820a> in <module>()\r\n----> 1 pd.DataFrame.from_dict(dict([('A', [1, 2, 3]), ('B', [4, 5, 6])]), orient='index', columns=['one', 'two', 'three'])\r\n\r\nTypeError: from_dict() got an unexpected keyword argument 'columns'\r\n```\r\n\r\nShould we add a `columns` keyword for this to `from_dict` ?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366786477",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-366786477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 366786477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njc4NjQ3Nw==",
    "user": {
      "login": "reidy-p",
      "id": 21114125,
      "node_id": "MDQ6VXNlcjIxMTE0MTI1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21114125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reidy-p",
      "html_url": "https://github.com/reidy-p",
      "followers_url": "https://api.github.com/users/reidy-p/followers",
      "following_url": "https://api.github.com/users/reidy-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/reidy-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reidy-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reidy-p/subscriptions",
      "organizations_url": "https://api.github.com/users/reidy-p/orgs",
      "repos_url": "https://api.github.com/users/reidy-p/repos",
      "events_url": "https://api.github.com/users/reidy-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reidy-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T19:41:36Z",
    "updated_at": "2018-02-19T19:41:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche yes, these are good points. As I show above, it is possible to recreate the functionality of ``from_items(..., orient='index', columns=['one', 'two', 'three'])`` without ``from_items`` but it's not obvious how to do this from the deprecation warning. So I would be in favour of adding a ``columns`` keyword to ``from_dict`` if possible. ``from_dict`` only has three parameters at present anyway."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366924775",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-366924775",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 366924775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjkyNDc3NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-20T09:52:40Z",
    "updated_at": "2018-02-20T09:52:40Z",
    "author_association": "MEMBER",
    "body": "I think it would be rather easy to add a `columns` keyword to `from_dict` (it is basically passing this through, which it is already doing but with a hardcoded value of None). \r\nThat would make this usecase of `from_items` easier to replace, so I think worth it. @jreback thoughts?\r\n\r\n@reidy-p would you like to do a PR for this?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366943204",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-366943204",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 366943204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njk0MzIwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-20T11:04:52Z",
    "updated_at": "2018-02-20T11:04:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "that sounds reasonable to me, adding a kwarg to ``.from_dict()``"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366976685",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-366976685",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 366976685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njk3NjY4NQ==",
    "user": {
      "login": "reidy-p",
      "id": 21114125,
      "node_id": "MDQ6VXNlcjIxMTE0MTI1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21114125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reidy-p",
      "html_url": "https://github.com/reidy-p",
      "followers_url": "https://api.github.com/users/reidy-p/followers",
      "following_url": "https://api.github.com/users/reidy-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/reidy-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reidy-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reidy-p/subscriptions",
      "organizations_url": "https://api.github.com/users/reidy-p/orgs",
      "repos_url": "https://api.github.com/users/reidy-p/repos",
      "events_url": "https://api.github.com/users/reidy-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reidy-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-20T13:26:47Z",
    "updated_at": "2018-02-20T13:26:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche yes I’ll try and do a PR"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421203796",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18529#issuecomment-421203796",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18529",
    "id": 421203796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTIwMzc5Ng==",
    "user": {
      "login": "PatrickDRusk",
      "id": 17709454,
      "node_id": "MDQ6VXNlcjE3NzA5NDU0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/17709454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PatrickDRusk",
      "html_url": "https://github.com/PatrickDRusk",
      "followers_url": "https://api.github.com/users/PatrickDRusk/followers",
      "following_url": "https://api.github.com/users/PatrickDRusk/following{/other_user}",
      "gists_url": "https://api.github.com/users/PatrickDRusk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PatrickDRusk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PatrickDRusk/subscriptions",
      "organizations_url": "https://api.github.com/users/PatrickDRusk/orgs",
      "repos_url": "https://api.github.com/users/PatrickDRusk/repos",
      "events_url": "https://api.github.com/users/PatrickDRusk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PatrickDRusk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T01:40:59Z",
    "updated_at": "2018-09-14T01:40:59Z",
    "author_association": "NONE",
    "body": "I haven't seen any mention that the `from_dict(OrderedDict(items)...` doesn't work in cases where there would be duplicates in the index. Here is a test that would fail:\r\n```\r\nimport pandas\r\nfrom collections import OrderedDict\r\ndef test_from_dict_replacing_from_items_with_duplicates():\r\n    rows = [(1, (2,)), (1, (2,))]\r\n    df1 = pandas.DataFrame.from_items(rows, columns=('a', ), orient='index')\r\n    df2 = pandas.DataFrame.from_dict(OrderedDict(rows), columns=('a', ), orient='index')\r\n    pandas.testing.assert_frame_equal(df1, df2)\r\n```"
  }
]
