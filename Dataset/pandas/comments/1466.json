[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6323674",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1466#issuecomment-6323674",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1466",
    "id": 6323674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjM2NzQ=",
    "user": {
      "login": "lenolib",
      "id": 1769273,
      "node_id": "MDQ6VXNlcjE3NjkyNzM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1769273?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lenolib",
      "html_url": "https://github.com/lenolib",
      "followers_url": "https://api.github.com/users/lenolib/followers",
      "following_url": "https://api.github.com/users/lenolib/following{/other_user}",
      "gists_url": "https://api.github.com/users/lenolib/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lenolib/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lenolib/subscriptions",
      "organizations_url": "https://api.github.com/users/lenolib/orgs",
      "repos_url": "https://api.github.com/users/lenolib/repos",
      "events_url": "https://api.github.com/users/lenolib/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lenolib/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-14T09:19:26Z",
    "updated_at": "2012-06-14T10:18:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have/had some problems with this as well. Setting an interval explicitly equal to 'NaN' produced a proper gap in the plot, whereas the original values were 'nan' if I remember correctly, and displayed as a straight line between the edge values over the interval.\n\nupdate: Ok, I tried it on some data I'm working, and can't seem to replicate the behaviour, but I'm pretty sure it was there before, even though it sounds strange.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6331161",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1466#issuecomment-6331161",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1466",
    "id": 6331161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzExNjE=",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-14T15:01:03Z",
    "updated_at": "2012-06-14T15:01:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's what I use to get around the issue. http://pastebin.com/ctg8W0t0\n\nusage would be like:\n\n``` python\nfig = charting.Figure(1)\nfig.plot('name of series', series)\n```\n\nI have monkey patches to add an fplot attr that'll just plot. To get rid of the NA plots, you plot the int index and then translate the labels with the DateFormatter. I keep the index around in the Figure object to translate. \n\nYou'll also notice that it keeps a DataFrame around with the plot data, this is to help align and plot data of differing freqs. Which means your highest freq has to be plotted first and also means it's not terribly memory efficient.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6431589",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1466#issuecomment-6431589",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1466",
    "id": 6431589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MzE1ODk=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-19T17:20:00Z",
    "updated_at": "2012-06-19T17:20:00Z",
    "author_association": "MEMBER",
    "body": "The PR referenced handles gaps for regular-frequency time series. With irregular time series it's a bit more difficult, and hard to make assumptions about where to put gaps-- however if you resample irregular to regular and plot there will be gaps, e.g.:\n\n`ts.resample('h').plot()`\n"
  }
]
