[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23751362",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23751362",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23751362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzUxMzYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T22:15:20Z",
    "updated_at": "2013-09-03T22:15:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jseabold @jtratner @hayd \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23753912",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23753912",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23753912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzUzOTEy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T22:58:46Z",
    "updated_at": "2013-09-03T22:58:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks good to me... \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23753926",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23753926",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23753926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzUzOTI2",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T22:59:10Z",
    "updated_at": "2013-09-03T22:59:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can we ping out google groups to see what people think?\n\nI still don't see the logic to this (other than numpy doing it), it seems to me there is always a non-ambiguous way to write things...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23754708",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23754708",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23754708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU0NzA4",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T23:16:51Z",
    "updated_at": "2013-09-03T23:16:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Practicality beats purity for me here. It saves typing and seems quite logical to me. At least, I don't see any ambiguity, especially if the empty Series/DataFrame case is explicitly handled to raise. Incidentally, the behavior for an empty objects differs from numpy (and Python) but I agree with the change.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23755003",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23755003",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23755003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU1MDAz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T23:23:28Z",
    "updated_at": "2013-09-03T23:23:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "To me this seems impractical and impure! :(\n\nI'm yet to see an example where it saves typing (and which can't be done without item), and I don't see why the one item case should be special (if we're breaking numpy behaviour _anyway_....).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23755257",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23755257",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23755257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU1MjU3",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T23:28:44Z",
    "updated_at": "2013-09-03T23:28:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Every example I showed involved more typing?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23755437",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23755437",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23755437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU1NDM3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T23:32:53Z",
    "updated_at": "2013-09-03T23:32:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I thought there was always a way it could be written to not be, e.g. the example with pd.isnull(df.ix[]) could be tweaked so the ix returned a value (not a Series)...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23755583",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23755583",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23755583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU1NTgz",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T23:36:35Z",
    "updated_at": "2013-09-03T23:36:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "ix will only return a value if I don't use a boolean index, but this involves more code to get the single index value -- either a (horribly ugly) call to np.where, some pandas-fu that I didn't try yet, or setting an index on the frame (which isn't always possible).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23758598",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23758598",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23758598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU4NTk4",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T00:44:08Z",
    "updated_at": "2013-09-04T00:44:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Please do bring it up on the ML though. Input from others would be helpful.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23758745",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23758745",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23758745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU4NzQ1",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T00:48:19Z",
    "updated_at": "2013-09-04T00:48:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I didn't realize how this handles empty Series. Should definitely be the same as Python/numpy:\n\n``` python\n>>> bool(Series([]))\nFalse\n>>> bool(np.array([])\nFalse\n>>> bool(np.array([[]])\nFalse\n>>> bool(DataFrame([[]]))\nFalse\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23759099",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23759099",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23759099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU5MDk5",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T00:58:08Z",
    "updated_at": "2013-09-04T00:58:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ha, now there's some ambiguity if it's true there wasn't before. I thought this was an improvement over numpy and the warning is clear that maybe you should use 'empty'.\n\nAnway, my vote is\n1. Empty series raises. Maybe you screwed up your index? What is the 'correct' output of this?\n   \n   ```\n   if pd.isnull(pd.DataFrame([])):\n       print 'this dataframe has no missing values?'\n   ```\n   \n   Ambiguous?\n2. 1 element is fine. You know what you're doing, carry on. Also .all() == .any() in this case, so it's not ambiguous.\n3. Length > 1 raises . This is ambiguous. Ask for all, any, or empty. Maybe you screwed up your index?\n\nYou can read old numpy threads about this if no one wants to discuss on the ML, but I think these issues may be of general interest.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23759302",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23759302",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23759302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU5MzAy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T01:04:09Z",
    "updated_at": "2013-09-04T01:04:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "current behavior (with this PR) is to raise on empty Series/DataFrame (note that this was not true in 0.12,\nbut actually WAS true IIRC before 0.12)\n\nI agree that we should absolutely raise on an empty object\n\n```\nif not df:\n   print 'ok'\n```\n\nshould NEVER work (and if we allowed it to work for an empty frame it would)\n\ncorrect is\n\n```\nif not df.empty:\n     print 'ok'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23759317",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23759317",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23759317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU5MzE3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T01:04:49Z",
    "updated_at": "2013-09-04T01:04:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jseabold proposal is what this PR does\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23759474",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23759474",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23759474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU5NDc0",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T01:10:18Z",
    "updated_at": "2013-09-04T01:10:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah. I'm +1.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23759580",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23759580",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23759580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU5NTgw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T01:13:09Z",
    "updated_at": "2013-09-04T01:13:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm...I'm mixed on only following some but not all of the numpy behavior\nhere...seems slightly confusing to me, but this is not an area I use much\nwith pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23759589",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23759589",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23759589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU5NTg5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T01:13:22Z",
    "updated_at": "2013-09-04T01:13:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Obviously I'm still massive -1, I think we should be raising on all `__nonzero__` (i.e. not this pr, but current master).\n\n> 1 element is fine. You know what you're doing\n\nTotally disagree. I would also argue that it _is_ ambiguous.\n\n```\nIn [1]: bool([False])\nOut[1]: True\n\nIn [2]: bool(np.array([np.nan]))\nOut[2]: True\n\nIn [3]: bool(np.array([False]))\nOut[3]: False\n```\n\n`pd.isnull(pd.DataFrame([]))` is an empty DataFrame (not ambiguous)...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23760114",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23760114",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23760114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzYwMTE0",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T01:29:01Z",
    "updated_at": "2013-09-04T01:39:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "On Tue, Sep 3, 2013 at 9:13 PM, Andy Hayden notifications@github.comwrote:\n\n> Obviously I'm still massive -1, I think we should be raising on all\n> **nonzero** (i.e. not this pr, but current master).\n> \n> 1 element is fine. You know what you're doing\n> \n> Totally disagree. I would also argue that it _is_ ambiguous.\n> \n> In [1]: bool([False])\n> Out[1]: True\n\nHmm, ok, this is a bit confusing, but I'd argue not a show stopper. I\ncan't speak for everyone, but I don't find this difficult to differentiate.\nMost of Numpy/pandas operates element-wise. So element-wise it's not\nambiguous. If there's one element, we can return an answer.\n\n> In [2]: bool(np.array([np.nan]))\n> Out[2]: True\n\nNumPy's nan handling is inconsistent and definitely one of the areas where\npandas should/exists to improve. It and operations on empty arrays are two\nissues that are pointed to as warts (by some) in the numpy threads about\nsimilar. That said, I'm not sure what bool(pd.Series([np.nan])) should do.\nI'd probably say that it should raise an error.\n\n> In [3]: bool(np.array([False]))\n> Out[3]: False\n> \n> pd.isnull(pd.DataFrame([])) is an empty DataFrame (not ambiguous)...\n\nIf the null DataFrame is the result of an indexing operation, then it is\nambiguous I'd say. If your question you want to answer is, given this\nindex, is this value True? The answer is, we can't evaluate this question\nbecause your indexing operation didn't return any information.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23760258",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23760258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23760258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzYwMjU4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T01:33:24Z",
    "updated_at": "2013-09-04T01:33:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "we would have to special case Series([np.nan]) as I think this would evaluate to bool(np.nan) which is True\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23760511",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23760511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23760511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzYwNTEx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T01:41:19Z",
    "updated_at": "2013-09-04T01:41:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this special casing is going to confuse users (one rule for python, one (especially confusing) for numpy, one for pandas)... I think it's consistency to say no to `__nonzero__`. I think this is an improvement.\n\nre the empty DataFrame it's just like doing a function over emptyset is empty:\n\n```\nmap(pd.isnull, []) == []\n```\n\nthe current behaviour is well-defined (and imo correct). However bool of it is ambiguous (if that's what you were saying then we agree :) ).\n\nSome more random stuff we wanted to stop (but work in numpy):\n\n```\nIn [4]: not np.array([False])\nOut[4]: True\n\nIn [5]: np.array([False]) or np.array([np.nan])\nOut[5]: array([ nan])\n```\n\nSpecial casing this will be a rabbit hole.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23760806",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23760806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23760806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzYwODA2",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T01:50:04Z",
    "updated_at": "2013-09-04T01:51:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "On Tue, Sep 3, 2013 at 9:41 PM, Andy Hayden notifications@github.comwrote:\n\n> I think this special casing is going to confuse users (one rule for\n> python, one (especially confusing) for numpy, one for pandas)... I think\n> it's consistency to say no to **nonzero**. I think this is an improvement.\n> \n> re the empty DataFrame it's just like doing a function over emptyset is\n> empty:\n> \n> map(pd.isnull, []) == []\n> \n> the current behaviour is well-defined (and imo correct). However bool of\n> it is ambiguous (if that's what you were saying then we agree :) ).\n\nYes, we agree.\n\n> Some more random stuff we wanted to stop (but work in numpy):\n> \n> In [4]: not np.array([False])\n> Out[4]: True\n\n No problem here in current usage. It maps.\n\n> In [5]: np.array([False]) or np.array([np.nan])\n> Out[5]: array([ nan])\n> \n> Either the RHS raises or it short circuits if the first element is True.\n>  Special casing this will be a rabbit hole.\n\nThere are 5 (?) eventualities I can think of -- empty (raise), 1 element\ncastable to float (return a boolean), more than one element (raise), 1 nan\nonly (raise).\n\nThe other one I can think of is a single-element object array. I'd argue we\nshould raise in this case too. What else?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23761084",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23761084",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23761084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzYxMDg0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T01:57:46Z",
    "updated_at": "2013-09-04T01:57:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually most of these are solved by limiting the single element resolving to only a boolean array\nby definition then a single nan will raise, object array will raise, cast able to bool will raise (I have tests for these)\n\nONLY a single element series of True/False will pass thru the bool of the element \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23913146",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23913146",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23913146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTEzMTQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-06T01:18:24Z",
    "updated_at": "2013-09-06T01:19:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "the only remaining point is do we allow in `bool(Series([True])) == True` and `bool(Series([False])) == False`\n\nnumpy does this, but it is inconsistent with all other bool operations on a PandasObject which will raise\n\n@hayd -1\n@jseabold +1\n\nany more strong opionions? @wesm @y-p ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23913385",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23913385",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23913385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTEzMzg1",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-06T01:25:16Z",
    "updated_at": "2013-09-06T01:25:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, I'm +1 so we're consistent.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23913455",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23913455",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23913455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTEzNDU1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-06T01:27:35Z",
    "updated_at": "2013-09-06T01:27:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "so @jtratner vote I think is -1 (so with @hayd for consistency) (the +- are for this PR which implements the above)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23913476",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23913476",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23913476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTEzNDc2",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-06T01:28:18Z",
    "updated_at": "2013-09-06T01:28:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback no sorry I wasn't clear, I vote for being consistent with numpy.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23925758",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23925758",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23925758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTI1NzU4",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-06T08:23:16Z",
    "updated_at": "2013-09-06T08:23:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to have a last comment on the subject (I think arguments are clear in this and the previous PR):\n\nYou're **not** voting for consistency with numpy, since we'd still raise on empty Series, but some kind of weird middle ground.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23945615",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23945615",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23945615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQ1NjE1",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-06T14:57:09Z",
    "updated_at": "2013-09-06T14:57:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Weird...or sane... depending on how you come down I guess.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23952687",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-23952687",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 23952687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTUyNjg3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-06T16:31:34Z",
    "updated_at": "2013-09-06T16:31:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "(slighter saner... ;) )\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24163708",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-24163708",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 24163708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTYzNzA4",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-10T14:24:57Z",
    "updated_at": "2013-09-10T14:24:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should I put this on mailing list? I've _tried_ to sound impartial.\n\n## changing bool behaviour of pandas objects\n\nThere's discussion on github to change the behaviour of `__nonzero__` for pandas objects.\n\nBool behaviour in pandas (and numpy) often trips up and surprises new (and experienced) users, for one thing because it differs from many python objects.\n- For empty arrays it's Falsey\n- For length one arrays it's bool of item (Note: bool(nan) is True)\n- Otherwise it raises a ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\n\nOne option (currently implemented in master) is to turn off bool **always**:\n- raise ValueError: The truth value of an array is ambiguous. Use a.empty, a.any() or a.all().\n\nAn alternative proposal being discussed is (4738):\n- For length one arrays it's bool of item (Perhaps raising on bool(Series([nan])).)\n- Otherwise raise a ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\n\nNote: bool of empty objets would be disallowed.\n\nIn both cases:\n- not/and/or would be specifically disallowed.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24164230",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4738#issuecomment-24164230",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4738",
    "id": 24164230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTY0MjMw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-10T14:31:15Z",
    "updated_at": "2013-09-10T14:31:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure...let's put it out there (numpy list too?)\n"
  }
]
