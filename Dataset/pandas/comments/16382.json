[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302278768",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16382#issuecomment-302278768",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16382",
    "id": 302278768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjI3ODc2OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T01:53:43Z",
    "updated_at": "2017-05-18T01:53:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nuffe does this seem related to https://github.com/pandas-dev/pandas/pull/14779"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302396431",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16382#issuecomment-302396431",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16382",
    "id": 302396431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjM5NjQzMQ==",
    "user": {
      "login": "erikcs",
      "id": 7185264,
      "node_id": "MDQ6VXNlcjcxODUyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7185264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erikcs",
      "html_url": "https://github.com/erikcs",
      "followers_url": "https://api.github.com/users/erikcs/followers",
      "following_url": "https://api.github.com/users/erikcs/following{/other_user}",
      "gists_url": "https://api.github.com/users/erikcs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erikcs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erikcs/subscriptions",
      "organizations_url": "https://api.github.com/users/erikcs/orgs",
      "repos_url": "https://api.github.com/users/erikcs/repos",
      "events_url": "https://api.github.com/users/erikcs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erikcs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T13:00:28Z",
    "updated_at": "2017-05-18T13:00:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ohiobicyclist sorry, but I do not understand what you intend to do (with either the 0.19 or 0.2 version). \r\n\r\nFrom the wide_to_long docstring in `0.2`:\r\n\r\n>   Each row of these wide variables are assumed to be **uniquely** identified by\r\n    `i` (can be a single column name or a list of column names)\r\n\r\nThis is not directly checked, which is why you get at `NotImplementedError` much further down the stack trace. \r\n\r\nAfter you fix this and supply a unique row identifier, you forget to specify the correct stubnames (as you did in the first example), which is why an empty data frame is returned (empty because no columns matching those stubs where found):\r\n\r\n```python\r\npd.wide_to_long(test_df, [\"A_\", \"B_\"], i=\"x\", j=\"colname\")\r\nOut[20]:\r\nB_B3\tA_A4\tA_A1\tA_A6\tA_A7\tB_B7\tB_B1\tB_B5\tB_B6\tB_B4\tA_A2\tB_B2\tA_A3\tA_A5\tA_\tB_\r\nx\tcolname\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n```\r\n\r\n```python\r\npd.wide_to_long(test_df, [\"A_A\", \"B_B\"], i=\"x\", j=\"colname\")\r\nA_A\tB_B\r\nx\tcolname\t\t\r\n1\t1\t1\t1\r\n1\t1\t2\r\n1\t1\t3\r\n1\t1\t4\r\n1\t1\t5\r\n1\t2\t1\r\n1\t2\t2\r\n1\t2\t3\r\n1\t2\t4\r\n1\t2\t5\r\n1\t3\t1\r\n...\r\n```\r\nwhich returns a new df with 5*7 = 35 rows because the df had 7 columns and 5 id rows.\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302404595",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16382#issuecomment-302404595",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16382",
    "id": 302404595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQwNDU5NQ==",
    "user": {
      "login": "ohiobicyclist",
      "id": 28769185,
      "node_id": "MDQ6VXNlcjI4NzY5MTg1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/28769185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ohiobicyclist",
      "html_url": "https://github.com/ohiobicyclist",
      "followers_url": "https://api.github.com/users/ohiobicyclist/followers",
      "following_url": "https://api.github.com/users/ohiobicyclist/following{/other_user}",
      "gists_url": "https://api.github.com/users/ohiobicyclist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ohiobicyclist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ohiobicyclist/subscriptions",
      "organizations_url": "https://api.github.com/users/ohiobicyclist/orgs",
      "repos_url": "https://api.github.com/users/ohiobicyclist/repos",
      "events_url": "https://api.github.com/users/ohiobicyclist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ohiobicyclist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T13:32:50Z",
    "updated_at": "2017-05-18T13:32:50Z",
    "author_association": "NONE",
    "body": "nuffe -- I'm a little less worried about the first example as yes, worst comes to worst, I can just reset_index (twice if the index isn't already unique) and use that as a unique column (it's annoying that code that works in 0.19.2 breaks in 0.20.1 because of this, but there is a work-around at least); however, I contend the following -- changing \"A_Ax\" \"B_Bx\" to \"A_Ax\" \"B_Ax\" then \"A_\" and \"B_\" *ARE* the correct sub-strings, with the stack strings being \"A1\" \"A2\" \"A3\" etc\r\n[all a substrings notebook.zip](https://github.com/pandas-dev/pandas/files/1011033/all.a.substrings.notebook.zip)\r\n.\r\n\r\nYet even *that* doesn't produce a table with data under 0.20.1."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302407755",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16382#issuecomment-302407755",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16382",
    "id": 302407755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQwNzc1NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T13:44:32Z",
    "updated_at": "2017-05-18T13:44:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ohiobicyclist can you post the code for the example that should work here in the issue?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302417154",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16382#issuecomment-302417154",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16382",
    "id": 302417154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQxNzE1NA==",
    "user": {
      "login": "ohiobicyclist",
      "id": 28769185,
      "node_id": "MDQ6VXNlcjI4NzY5MTg1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/28769185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ohiobicyclist",
      "html_url": "https://github.com/ohiobicyclist",
      "followers_url": "https://api.github.com/users/ohiobicyclist/followers",
      "following_url": "https://api.github.com/users/ohiobicyclist/following{/other_user}",
      "gists_url": "https://api.github.com/users/ohiobicyclist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ohiobicyclist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ohiobicyclist/subscriptions",
      "organizations_url": "https://api.github.com/users/ohiobicyclist/orgs",
      "repos_url": "https://api.github.com/users/ohiobicyclist/repos",
      "events_url": "https://api.github.com/users/ohiobicyclist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ohiobicyclist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T14:17:04Z",
    "updated_at": "2017-05-18T14:19:49Z",
    "author_association": "NONE",
    "body": "Sure, thanks.\r\n\r\n```\r\nimport pandas as pd\r\nseed = []\r\nfor i in range(15):\r\n    seed.append([1, 2, 3, 4, 5])\r\ntest_df = pd.DataFrame(seed).T\r\ntest_df.columns = [\"A_A1\", \"B_A1\", \"A_A2\", \"B_A2\", \"A_A3\", \"B_A3\", \"A_A4\", \r\n                   \"B_A4\", \"A_A5\", \"B_A5\", \"A_A6\", \"B_A6\", \"A_A7\", \"B_A7\", \"x\"]\r\npd.wide_to_long(test_df, [\"A_\", \"B_\"], i=\"x\", j=\"colname\")\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302418919",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16382#issuecomment-302418919",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16382",
    "id": 302418919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQxODkxOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T14:22:55Z",
    "updated_at": "2017-05-18T14:22:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "That example has the same issue with the `stubnames`, right? It should be `A_A` and `B_A` I think\r\n\r\n```python\r\nIn [13]: pd.wide_to_long(test_df, ['A_A', 'B_A'], i='x', j='y').head()\r\nOut[13]:\r\n     A_A  B_A\r\nx y\r\n1 1    1    1\r\n2 1    2    2\r\n3 1    3    3\r\n4 1    4    4\r\n5 1    5    5\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302445191",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16382#issuecomment-302445191",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16382",
    "id": 302445191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQ0NTE5MQ==",
    "user": {
      "login": "erikcs",
      "id": 7185264,
      "node_id": "MDQ6VXNlcjcxODUyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7185264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erikcs",
      "html_url": "https://github.com/erikcs",
      "followers_url": "https://api.github.com/users/erikcs/followers",
      "following_url": "https://api.github.com/users/erikcs/following{/other_user}",
      "gists_url": "https://api.github.com/users/erikcs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erikcs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erikcs/subscriptions",
      "organizations_url": "https://api.github.com/users/erikcs/orgs",
      "repos_url": "https://api.github.com/users/erikcs/repos",
      "events_url": "https://api.github.com/users/erikcs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erikcs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T15:44:29Z",
    "updated_at": "2017-05-18T15:48:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ohiobicyclist when you specify `stubnames = [A_, B_]` wide_to_long by default expects to find numeric suffixes (as does Stata - this is in the documentation), but this is not the case in your example. You can do this with (please note the new `suffix` argument):\r\n\r\n```python\r\nIn [7]: pd.wide_to_long(test_df, [\"A_\", \"B_\"], i=\"x\", j=\"colname\", suffix='').head()\r\nOut[7]:\r\n            A_  B_\r\nx colname\r\n1 A1       1.0 NaN\r\n  A2       1.0 NaN\r\n  A3       1.0 NaN\r\n  A4       1.0 NaN\r\n  A5       1.0 NaN\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302886824",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16382#issuecomment-302886824",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16382",
    "id": 302886824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg4NjgyNA==",
    "user": {
      "login": "erikcs",
      "id": 7185264,
      "node_id": "MDQ6VXNlcjcxODUyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7185264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erikcs",
      "html_url": "https://github.com/erikcs",
      "followers_url": "https://api.github.com/users/erikcs/followers",
      "following_url": "https://api.github.com/users/erikcs/following{/other_user}",
      "gists_url": "https://api.github.com/users/erikcs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erikcs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erikcs/subscriptions",
      "organizations_url": "https://api.github.com/users/erikcs/orgs",
      "repos_url": "https://api.github.com/users/erikcs/repos",
      "events_url": "https://api.github.com/users/erikcs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erikcs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-20T17:21:50Z",
    "updated_at": "2017-05-20T17:21:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Was this helpful @ohiobicyclist ? (I am not sure if your exact use case is better handled by another function - because I am not sure I understand, judging from your examples, what exactly you need to do). \r\n\r\nBut I agree that checking for a unique `i` should have been done (I can send a PR for this @TomAugspurger )"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302887912",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16382#issuecomment-302887912",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16382",
    "id": 302887912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg4NzkxMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-20T17:41:57Z",
    "updated_at": "2017-05-20T17:41:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nuffe yes pls."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302890201",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16382#issuecomment-302890201",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16382",
    "id": 302890201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg5MDIwMQ==",
    "user": {
      "login": "ohiobicyclist",
      "id": 28769185,
      "node_id": "MDQ6VXNlcjI4NzY5MTg1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/28769185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ohiobicyclist",
      "html_url": "https://github.com/ohiobicyclist",
      "followers_url": "https://api.github.com/users/ohiobicyclist/followers",
      "following_url": "https://api.github.com/users/ohiobicyclist/following{/other_user}",
      "gists_url": "https://api.github.com/users/ohiobicyclist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ohiobicyclist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ohiobicyclist/subscriptions",
      "organizations_url": "https://api.github.com/users/ohiobicyclist/orgs",
      "repos_url": "https://api.github.com/users/ohiobicyclist/repos",
      "events_url": "https://api.github.com/users/ohiobicyclist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ohiobicyclist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-20T18:25:40Z",
    "updated_at": "2017-05-20T18:25:40Z",
    "author_association": "NONE",
    "body": "This (suffix=\"\") is helpful.  The thing that makes wide_to_long better than melt for my application is the dual-column (or multiple column) stacked output.  A somewhat clearer example would be column names\r\n[\"key_sampleid1\", \"value_sampleid1\", \"key_sampleid2\", \"value_sampleid2\", \"key_otherid1\", \"value_otherid1\"] because it can nicely stack the 3 id's with key and value.  Suffix=\"\" takes care of that."
  }
]
