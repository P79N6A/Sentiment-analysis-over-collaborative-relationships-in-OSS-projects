[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/95196217",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9967#issuecomment-95196217",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9967",
    "id": 95196217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MTk2MjE3",
    "user": {
      "login": "Screamik",
      "id": 1271518,
      "node_id": "MDQ6VXNlcjEyNzE1MTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1271518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Screamik",
      "html_url": "https://github.com/Screamik",
      "followers_url": "https://api.github.com/users/Screamik/followers",
      "following_url": "https://api.github.com/users/Screamik/following{/other_user}",
      "gists_url": "https://api.github.com/users/Screamik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Screamik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Screamik/subscriptions",
      "organizations_url": "https://api.github.com/users/Screamik/orgs",
      "repos_url": "https://api.github.com/users/Screamik/repos",
      "events_url": "https://api.github.com/users/Screamik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Screamik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-22T14:13:56Z",
    "updated_at": "2015-04-22T14:14:32Z",
    "author_association": "NONE",
    "body": "If we add `_set_identity = True` line to `deep` branch of `MultiIndex`'s `copy` method - it will fix the issue. But I wonder, why is `_set_identity` set to `False` by default?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/95488101",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9967#issuecomment-95488101",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9967",
    "id": 95488101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1NDg4MTAx",
    "user": {
      "login": "Screamik",
      "id": 1271518,
      "node_id": "MDQ6VXNlcjEyNzE1MTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1271518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Screamik",
      "html_url": "https://github.com/Screamik",
      "followers_url": "https://api.github.com/users/Screamik/followers",
      "following_url": "https://api.github.com/users/Screamik/following{/other_user}",
      "gists_url": "https://api.github.com/users/Screamik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Screamik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Screamik/subscriptions",
      "organizations_url": "https://api.github.com/users/Screamik/orgs",
      "repos_url": "https://api.github.com/users/Screamik/repos",
      "events_url": "https://api.github.com/users/Screamik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Screamik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-23T08:26:55Z",
    "updated_at": "2015-04-23T08:37:02Z",
    "author_association": "NONE",
    "body": "Found why `concat` fails with deepcopied `MultiIndex`\nFile `merge.py` function `_make_concat_multiindex`:\n\n``` python\n1052    if not _all_indexes_same(indexes):\n                #functionality to actually concat multiindex\n                ...\n                ...\n1095    new_index = indexes[0]\n```\n\nSo, if we think that all indexes are the same we just take the first one.\nNow let's consider function `_all_indexes_same`:\n\n``` python\ndef _all_indexes_same(indexes):\n    first = indexes[0]\n    for index in indexes[1:]:\n        if not first.equals(index):\n            return False\n    return True\n```\n\nIt calls function `equals` of `MultiIndex` which in turn uses function `is_` based on `_id` field of `MultiIndex`. As mentioned in above comment all copies of `MultiIndex` (even deep ones) are created with `_id` field equaling `None`, thus effectively rendering our copies indifferentiable.\n\nI'll rename the Issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/95539369",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9967#issuecomment-95539369",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9967",
    "id": 95539369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1NTM5MzY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-23T10:57:19Z",
    "updated_at": "2015-04-23T10:57:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't recall why this was done like this. You can try changing and see what pops up in the test suite.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/95628021",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9967#issuecomment-95628021",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9967",
    "id": 95628021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1NjI4MDIx",
    "user": {
      "login": "Screamik",
      "id": 1271518,
      "node_id": "MDQ6VXNlcjEyNzE1MTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1271518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Screamik",
      "html_url": "https://github.com/Screamik",
      "followers_url": "https://api.github.com/users/Screamik/followers",
      "following_url": "https://api.github.com/users/Screamik/following{/other_user}",
      "gists_url": "https://api.github.com/users/Screamik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Screamik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Screamik/subscriptions",
      "organizations_url": "https://api.github.com/users/Screamik/orgs",
      "repos_url": "https://api.github.com/users/Screamik/repos",
      "events_url": "https://api.github.com/users/Screamik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Screamik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-23T15:38:58Z",
    "updated_at": "2015-04-23T15:38:58Z",
    "author_association": "NONE",
    "body": "Tests seem to be unharmed:\n\n```\nRan 7631 tests in 694.204s\n\nOK (SKIP=455)\n```\n"
  }
]
