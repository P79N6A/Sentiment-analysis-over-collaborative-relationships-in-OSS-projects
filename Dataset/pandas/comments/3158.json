[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15366327",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15366327",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15366327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzY2MzI3",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-24T19:12:54Z",
    "updated_at": "2013-03-24T19:12:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "(I suspect the problem is due to positive but non-deterministic performance optimizations, which means that, if we can't resolve the source of the non-determinism, then we have to choose between less consistent but better average performance versus more consistent but worse average performance, which is not a nice choice.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15373392",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15373392",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15373392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzczMzky",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-25T00:46:54Z",
    "updated_at": "2013-03-25T01:31:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "It doesn't seem like `memmove()` is the culprit of `frame_reindex_axis0` instability:\n\n```\n-- frame_reindex_axis0 --\nmean change with dummy == -0.0048 (i.e. -0.48%)\nstddev change with dummy == 0.3068 (i.e. 35.91%)\nhypothesis: mean change with dummy != 0.0 => p == 0.8760 (insignificant)\nmean change with memmove == 0.0148 (i.e. 1.50%)\nstddev change with memmove == 0.3442 (i.e. 41.09%)\nhypothesis: mean change with memmove != 0.0 => p == 0.6673 (insignificant)\nhypothesis: variance of change greater with dummy => p == 0.8743 (insignificant)\nhypothesis: variance of change greater with memmove => p == 0.1257 (insignificant)\nhypothesis: variance of change differs => p == 0.2515 (insignificant)\n```\n\nThe changes quoted (before the percentage values) are natural logs of the ratios (target/base).\n\nThis is based on three commits: the `base` commit is current master but with `memmove()` disabled, `dummy` is a commit based on the `base` commit with a null change, and `memmove` is a commit based on `base` with `memmove()` re-enabled. The results are based on 100 vbench runs each of `dummy` vs `base` and `memmove` vs `base`. The variance is nominally greater in the `memmove` case but it doesn't seem like the results are significant (p < 0.05). \n\nIt's possible my p-values are off, but in any case just grepping the results makes clear that the large variance was present without `memmove()`. A lot of other results are somewhat curious, too...still trying to analyze it to make sure I haven't done anything wrong.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15528471",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15528471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15528471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTI4NDcx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-27T15:02:41Z",
    "updated_at": "2013-03-27T15:02:41Z",
    "author_association": "NONE",
    "body": "added -n to control number of vb runs to average over for each vb\nadded -N to collect results from repeated runs on HEAD, that should make it very\neasy to get min, max, variance, etc'. even confidence intervals.\n\n```\nÎ» time ./test_perf.sh -H -N 3 -r axis0 -d o.pickle\nThis script compares the performance of two commits.\nMake sure the python 'vbench' library is installed.\n\nSetting the BUILD_CACHE_DIR env var to a temp directory will\npotentially speed up subsequent runs.\n\n*** LOG_FILE = /home/user1/src/pandas/vb_suite.log\n\nprofile_head\nRunning 2 benchmarks\nRunning 2 benchmarks\nRunning 2 benchmarks\n*** \n------------------------------------------------------------------------\nTest name                       |     #0     |     #1     |     #2     |\n------------------------------------------------------------------------\nframe_reindex_axis0             |     0.9001 |     0.8989 |     0.8986 |\nstats_rank2d_axis0_average      |    40.2542 |    40.3576 |    40.2745 |\n------------------------------------------------------------------------\nTest name                       |     #0     |     #1     |     #2     |\n------------------------------------------------------------------------\n\nRatio < 1.0 means the target commit is faster then the baseline.\nSeed used: 1234\n\nTarget [3844347] : BLD: test_perf, add -N, run HEAD vbenchmarks multiple times seperately\n\n*** Results were also written to the logfile at '/home/user1/src/pandas/vb_suite.log'\n*** The results DataFrame was written to '/home/user1/src/pandas/o.pickle'\n\n\nreal    0m18.495s\nuser    0m17.718s\nsys 0m0.762s\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15809631",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15809631",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15809631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODA5NjMx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-02T23:38:33Z",
    "updated_at": "2013-04-03T00:58:02Z",
    "author_association": "NONE",
    "body": "Pushed some more bells and whistles to test_perf, vb_suite let's  the timeit module choose\nit's own iteration count, which led to excessive runtimes without any boost to stability of results \nafaict, now controllable via the -c/--ncalls cmd arg.\n\nI ran a few iterations, still variable (though much quicker about it), one\nthing I seem to notice is that the variation is strongly bimodal, even though\nmy box was quiet for the duration. Also, when there's a spike,\nit runs through the entire suite, see columns #1 and #3.\n\n```\n                                                 #0          #1          #2          #3          #4\nname                                                                                               \nsetattr_dataframe_index                    0.004625    0.003004    0.003195    0.004816    0.004578\ngetattr_dataframe_index                    0.000191    0.000191    0.000191    0.000191    0.000191\nframe_mult_no_ne                          10.584211   10.447598   10.479403   11.007833   12.671614\nframe_add                                 10.768604   10.713387   10.706806   10.860205   11.874008\nframe_multi_and_no_ne                    106.887960  125.117826   95.654011   92.890835   96.286201\nframe_add_no_ne                           10.350227   11.106586   10.406637   10.443211   10.560036\nframe_multi_and_st                        45.163012   60.193014   45.246792   45.523214   46.834993\nframe_mult_st                             10.841370   11.248827   10.709620   10.581207   11.228418\nframe_multi_and                           43.519592   43.063021   35.759592   34.731817   36.842394\nframe_mult                                10.872030   10.694170   10.713577   10.757208   11.470413\nframe_add_st                              11.837816   11.473227   11.109018   11.459017   10.744190\nseries_constructor_ndarray                 0.013399    0.020409    0.013638    0.020790    0.013399\nframe_constructor_ndarray                  0.040627    0.063610    0.043201    0.063801    0.043392\nctor_index_array_string                    0.014162    0.020981    0.014019    0.020981    0.014162\nseries_ctor_from_dict                      2.901793    4.373789    2.982616    4.417038    2.894592\nframe_get_numeric_data                     0.058603    0.089598    0.059795    0.091028    0.059414\nframe_ctor_nested_dict_int64              99.905586  147.639990   99.647570  144.639587  102.165985\nframe_ctor_nested_dict                    80.397224  116.105175   79.887819  114.512205   82.165766\nframe_ctor_list_of_dict                  104.632187  136.345196  103.941393  134.804010  105.473423\nframe_boolean_row_select                   0.201607    0.296593    0.197792    0.312614    0.199986\nframe_reindex_both_axes                    0.331402    0.499201    0.333214    0.499964    0.332403\nframe_fancy_lookup                         1.435184    2.169800    1.453590    2.197599    1.404572\nframe_iteritems_cached                     0.054598    0.083017    0.055981    0.081015    0.053406\nframe_reindex_both_axes_ix                 0.406599    0.612402    0.409603    0.611019    0.409174\nframe_insert_500_columns                  90.004826  132.124567   89.684772  131.825781   90.292788\nframe_get_dtype_counts                     0.096035    0.144386    0.103378    0.145435    0.095987\nframe_wide_repr                            0.554991    0.826406    0.556040    0.818205    0.549984\nframe_iteritems                            2.042198    3.060579    2.065802    3.067398    2.058601\nframe_fancy_lookup_all                    29.863596   30.314827   24.519205   32.511568   23.088789\nframe_fillna_inplace                      15.973997   19.704390   15.753412   19.800377   15.702391\nseries_string_vector_slice               190.852976  275.263023  188.290787  273.380995  190.084171\nframe_reindex_upcast                      22.756624   28.754187   20.848370   27.637005   21.184397\nframe_to_string_floats                    44.160223   64.106607   43.102169   63.887978   42.306566\nframe_reindex_axis0                        1.006842    0.920630    0.856400    0.931978    0.858164\nframe_reindex_axis1                        2.419615    3.101826    2.277994    3.038025    2.289772\ngroupby_multi_different_functions         15.848398   22.987604   15.746832   22.593784   15.834999\ngroupby_frame_apply_overhead               9.788418   14.041424    9.688568   14.140987    9.358597\ngroupby_frame_median                       9.151220   12.225819    8.844614   12.213230    8.840609\nseries_value_counts_strings                4.848003    7.175398    4.818583    7.148600    4.795408\ngroupby_apply_dict_return                 48.514414   73.194981   50.197601   73.086405   48.549414\ngroupby_frame_cython_many_columns          4.768229    5.860615    4.372168    5.847406    4.351425\ngroupby_indices                           10.500813   14.535189   11.385632   14.624834   10.096216\ngroupby_first_float32                      5.170012    6.640196    4.579020    6.672382    4.540825\ngroupby_last_float32                       5.550194    7.085371    4.863214    7.158184    4.772377\ngroupby_multi_cython                      20.029211   27.652216   19.573402   28.120232   19.629812\nseries_value_counts_int64                  2.928400    4.360199    2.777624    4.222822    2.896833\ngroupby_multi_python                     104.568195  154.496574  105.849409  155.120993  104.800367\ngroupby_first                              6.722784    6.712580    4.733801    6.899405    4.831600\ngroupby_transform                        207.882404  210.259581  151.535606  210.865211  155.929804\ngroupby_multi_different_numpy_functions   22.729206   22.763395   15.735197   22.696781   15.843391\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15814176",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15814176",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15814176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODE0MTc2",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-03T02:21:19Z",
    "updated_at": "2013-04-03T02:42:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, good to know it's not just my machine that has this issue.\n\nI'm also not sure if it's bimodal with a large enough sample size,\nactually..it seemed pretty (log-)normally distributed when I ran 100\niterations of reindexing tests. (This was before your multiple runs against\nhead additions, so I was looking at the log of the ratios between base and\ntarget times rather than the raw times)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15933593",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15933593",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15933593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTMzNTkz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T00:56:22Z",
    "updated_at": "2013-04-05T00:56:22Z",
    "author_association": "NONE",
    "body": "I pushed another update to test_perf, it now sets cpu affinity to protect againt cold cache surprises\ndue to thread migration on multicores and also does a gc collect between benchmarks, including\nthe libc trim voodoo from #2659.\n\nusing\n\n```\n ./test_perf.sh --ncalls 1 --head --hrepeats 10 --outdf o.pickle\n```\n\nbefore and after definitely seems to have made an impact:\n\n```\ndf=pd.load('o.pickle')\ndf=df[df.icol(0)>0.1]\ndf['max-min [% of mean]']=(df.max(1)-df.min(1))/df.mean(1)*100\n```\n\n### before\n\n```\nOut[58]: \n                                      #0          #1  max-min [% of mean]\nname                                                                     \nframe_mult_no_ne               10.228872   11.081934             8.068553\nframe_add                      10.586977   10.816097             5.836094\nframe_multi_and_no_ne         107.260942   91.881990            32.076782\nframe_add_no_ne                10.552168   11.853933            14.014677\nframe_multi_and_st             45.034885   45.400143            30.600854\nframe_mult_st                  10.640144   10.517120            16.973979\nframe_multi_and                35.143137   35.255194            20.836927\nframe_mult                     10.622978   10.655880             1.857611\nframe_add_st                   10.926008   11.259079            11.381603\nseries_ctor_from_dict           2.861023    4.272938            44.420730\nframe_ctor_nested_dict_int64   97.750902  142.644882            41.801547\nframe_ctor_nested_dict         79.347849  115.172148            39.968815\nframe_ctor_list_of_dict       102.699041  131.904125            32.164763\nframe_boolean_row_select        0.298023    0.354052            52.197071\nframe_reindex_both_axes         0.344992    0.579119            58.129294\n```\n\n### after\n\n```\nIn [59]: df[:15].iloc[:,[0,1,-1]]\nOut[59]: \n                                      #0          #1  max-min [% of mean]\nname                                                                     \nframe_mult_no_ne               10.447979   10.501146             8.025565\nframe_add                      10.565996   10.575056             4.184737\nframe_multi_and_no_ne         105.782032   92.047930            15.303844\nframe_add_no_ne                10.586023   10.318995             2.968311\nframe_multi_and_st             45.217037   45.341015             3.462760\nframe_mult_st                  10.675907   10.501862             4.573387\nframe_multi_and                45.274973   45.464039             2.581288\nframe_mult                     10.690928   10.643005             4.730513\nframe_add_st                   10.578156   10.483980             2.867322\nseries_ctor_from_dict           2.854109    2.865076             2.026706\nframe_ctor_nested_dict_int64  100.254774  102.154016             2.055916\nframe_ctor_nested_dict         77.082872   78.242064             2.039485\nframe_ctor_list_of_dict        99.193096  100.985050             5.003410\nframe_boolean_row_select        0.237942    0.235081            45.588937\nframe_reindex_both_axes         0.344038    0.356197             9.131816\n```\n\nThere are still outliers in the data (and more in the entire dataset), but that's definitely\na marked improvement.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15934447",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15934447",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15934447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM0NDQ3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T01:19:59Z",
    "updated_at": "2013-04-05T01:29:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI The vbenchs like frame_add, frame_add_no_ne and such are using Numexpr (or not for comparison)\nne will try to use as many cores as u have. in theory this could cause affinity issues (as they mess with the caches), maybe should move these benches to the end?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15935224",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15935224",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15935224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM1MjI0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T01:50:30Z",
    "updated_at": "2013-04-05T01:52:04Z",
    "author_association": "NONE",
    "body": "Ok, good to know.\n\nAfter  disabling the ext4 journal commit interval and rerunning again 25 times,\nhere are all the vbenches that have more then 10% in the first col.\nsome of these are really not an issue, some are repeat offenders.\n(`frame_multi_and_no_ne` and `frame_reindex_axis1` for example)\n\nSome of these are IO functions, which I'd expect to be a bit wonky.\n\n@jreback: got any more insights?\n\n```\n                                        max-min / mean %       std         min         max\nname                                                                                      \nreindex_frame_level_align                      10.093073  0.025031    0.896613    0.991344\nframe_reindex_axis0                            10.251804  0.022512    0.812372    0.898361\nindexing_dataframe_boolean_no_ne               10.320826  3.102481  135.820309  150.233984\nstats_rank_average                             10.432113  0.841592   28.482993   31.641324\nframe_reindex_axis1                            10.799220  0.060237    2.086322    2.328316\ngroupby_last_float32                           11.341204  0.106584    4.812638    5.368948\nframe_mult_no_ne                               11.934345  0.233660   10.227362   11.478027\ngroupby_indices                                11.951571  0.331111   10.515690   11.878411\nindexing_dataframe_boolean_rows_object         12.426390  0.011096    0.468651    0.528018\nframe_fancy_lookup_all                         12.527807  0.600790   22.018671   24.979353\nquery_store_table                              12.993687  0.156258    4.257679    4.854043\nframe_drop_dup_na_inplace                      13.472561  0.087586    3.214677    3.657023\nframe_multi_and_no_ne                          14.501948  2.623803   91.494640  104.933977\nframe_boolean_row_select                       16.282358  0.005699    0.196298    0.230710\nframe_reindex_upcast                           17.674176  0.855286   19.288619   23.082654\ngroupby_frame_cython_many_columns              19.232371  0.158495    4.280965    5.124966\nframe_reindex_both_axes_ix                     19.647393  0.014742    0.408014    0.491619\njoin_dataframe_index_single_key_small          19.757504  0.487586    7.910967    9.624640\ntimeseries_period_downsample_mean              20.035858  0.323574    7.982969    9.604692\nappend_frame_single_homogenous                 21.374095  0.015835    0.231981    0.284990\nread_store                                     23.731843  0.078693    1.738310    2.167940\ngroupby_simple_compress_timing                 27.898217  2.048904   36.627372   47.003667\nreindex_multiindex                             31.810866  0.074761    1.168331    1.557271\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15935455",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15935455",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15935455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM1NDU1",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T01:59:45Z",
    "updated_at": "2013-04-05T01:59:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "nice! that looks much better.\n\nOn Thu, Apr 4, 2013 at 8:56 PM, y-p notifications@github.com wrote:\n\n> I pushed another update to test_perf, it now sets cpu affinity to protect\n> againt cold cache surprises\n> due to thread migration on multicores and also does a gc collect between\n> benchmarks, including\n> the libc trim voodoo from #2659https://github.com/pydata/pandas/issues/2659\n> .\n> \n> using\n> \n>  ./test_perf.sh --ncalls 1 --head --hrepeats 10 --outdf o.pickle\n> \n> before and after definitely seems to have made an impact:\n> \n> df=pd.load('o.pickle')\n> df=df[df.icol(0)>0.1]\n> df['max-min [% of mean]']=(df.max(1)-df.min(1))/df.mean(1)*100\n> \n> before\n> \n> Out[58]:\n>                                       #0          #1  max-min [% of mean]\n> name\n> frame_mult_no_ne               10.228872   11.081934             8.068553\n> frame_add                      10.586977   10.816097             5.836094\n> frame_multi_and_no_ne         107.260942   91.881990            32.076782\n> frame_add_no_ne                10.552168   11.853933            14.014677\n> frame_multi_and_st             45.034885   45.400143            30.600854\n> frame_mult_st                  10.640144   10.517120            16.973979\n> frame_multi_and                35.143137   35.255194            20.836927\n> frame_mult                     10.622978   10.655880             1.857611\n> frame_add_st                   10.926008   11.259079            11.381603\n> series_ctor_from_dict           2.861023    4.272938            44.420730\n> frame_ctor_nested_dict_int64   97.750902  142.644882            41.801547\n> frame_ctor_nested_dict         79.347849  115.172148            39.968815\n> frame_ctor_list_of_dict       102.699041  131.904125            32.164763\n> frame_boolean_row_select        0.298023    0.354052            52.197071\n> frame_reindex_both_axes         0.344992    0.579119            58.129294\n> \n> after\n> \n> In [59]: df[:15].iloc[:,[0,1,-1]]\n> Out[59]:\n>                                       #0          #1  max-min [% of mean]\n> name\n> frame_mult_no_ne               10.447979   10.501146             8.025565\n> frame_add                      10.565996   10.575056             4.184737\n> frame_multi_and_no_ne         105.782032   92.047930            15.303844\n> frame_add_no_ne                10.586023   10.318995             2.968311\n> frame_multi_and_st             45.217037   45.341015             3.462760\n> frame_mult_st                  10.675907   10.501862             4.573387\n> frame_multi_and                45.274973   45.464039             2.581288\n> frame_mult                     10.690928   10.643005             4.730513\n> frame_add_st                   10.578156   10.483980             2.867322\n> series_ctor_from_dict           2.854109    2.865076             2.026706\n> frame_ctor_nested_dict_int64  100.254774  102.154016             2.055916\n> frame_ctor_nested_dict         77.082872   78.242064             2.039485\n> frame_ctor_list_of_dict        99.193096  100.985050             5.003410\n> frame_boolean_row_select        0.237942    0.235081            45.588937\n> frame_reindex_both_axes         0.344038    0.356197             9.131816\n> \n> There are still outliers in the data (and more in the entire dataset), but\n> that's definitely\n> a marked improvement.\n> \n> â\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/3158#issuecomment-15933593\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15935615",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15935615",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15935615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM1NjE1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T02:07:04Z",
    "updated_at": "2013-04-05T02:07:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "there is another source of variability here. the groupby timing in simple_compress is related to how random the input and this how many groups are formed.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15935678",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15935678",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15935678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM1Njc4",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T02:09:51Z",
    "updated_at": "2013-04-05T02:09:51Z",
    "author_association": "NONE",
    "body": "any idea why it's the \"no_ne\" vbenches that are misbehaving?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15935729",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15935729",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15935729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM1NzI5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T02:11:40Z",
    "updated_at": "2013-04-05T02:11:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "they are really large (100k rows), prob cache missing a lot\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15935818",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15935818",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15935818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM1ODE4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T02:15:24Z",
    "updated_at": "2013-04-05T02:15:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "also multi_ne are 3 Boolean ops, but because the first 2 ops are Boolean among random nums maybe 3rd op has more variance - just a guess\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15935862",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15935862",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15935862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM1ODYy",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T02:17:39Z",
    "updated_at": "2013-04-05T02:17:39Z",
    "author_association": "NONE",
    "body": "Actually I trimmed those down to 20000 because they were slowing down the\nsuite too much for doing this sort of testing.\n\nknocking frame_multi_and_no_ne down to 5000/1000 rows doesn't do much.\nworse if anything.\n\n```\n                       max-min / mean %       std     min       max\nname                                                               \nframe_multi_and_no_ne         54.453012  0.416195  4.7369  7.462978\n\n                       max-min / mean %       std        min        max\nname                                                                   \nframe_multi_and_no_ne         46.707422  2.355675  24.782896  36.755085\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15935875",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15935875",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15935875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM1ODc1",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T02:18:16Z",
    "updated_at": "2013-04-05T02:18:16Z",
    "author_association": "NONE",
    "body": "At least it's now a breeze to test a hypothesis.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15936111",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15936111",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15936111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM2MTEx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T02:30:29Z",
    "updated_at": "2013-04-05T02:30:29Z",
    "author_association": "NONE",
    "body": " looks like the first result is always off (cache probably), without it things look\n better. That look pretty close to me.\n\n```\n                                        max-min / mean %       std        min        max\nname                                                                                    \nframe_reindex_columns                          10.150123  0.012239   0.342131   0.378132\njoin_dataframe_integer_2key                    10.278537  0.192762   6.077051   6.716967\nstats_rank_average                             10.570859  0.983739  28.692961  31.923056\njoin_dataframe_index_single_key_bigger         10.972698  0.270094   8.975029  10.004997\nmelt_dataframe                                 11.212243  0.069079   1.907825   2.129078\nreindex_frame_level_reindex                    11.430236  0.032220   0.875950   0.979900\nframe_reindex_upcast                           11.762654  0.886662  20.659924  23.224115\nstat_ops_series_std                            11.769578  0.049148   1.159906   1.302958\nframe_reindex_axis0                            12.432828  0.038989   0.890017   1.007080\nappend_frame_single_homogenous                 15.578219  0.015927   0.262022   0.306129\nframe_reindex_axis1                            16.136271  0.121112   2.275944   2.653122\njoin_dataframe_index_single_key_small          17.261100  0.569997   8.114100   9.642839\nreindex_frame_level_align                      18.296387  0.054913   0.951052   1.132965\nframe_boolean_row_select                       45.346263  0.034772   0.228882   0.342846\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15936913",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15936913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15936913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM2OTEz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T03:05:50Z",
    "updated_at": "2013-04-05T03:05:50Z",
    "author_association": "NONE",
    "body": "@jreback, is numexpr completely out of the code in the no_ne vbenches? because the longer\ntime for the first iteration could be the jit doing it's thing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15936951",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15936951",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15936951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM2OTUx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T03:08:17Z",
    "updated_at": "2013-04-05T03:08:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "it should be completely bypassed on the _ne; different code path \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15937055",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15937055",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15937055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM3MDU1",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T03:13:19Z",
    "updated_at": "2013-04-05T03:58:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "> also does a gc collect\n\nI guess this might be due to other libraries rather than pandas, but, just for curiousity, do we know if pandas actually uses circular references anywhere anyway? I feel like everything I've seen is a directed acyclic graph, at worst....if there really are any reference cycles we ought to remove them or convert them to use weak refs in one direction, imho.\n\n@wesm, do you know off the top of your head?\n\n> max-min / mean %\n\nThis could be too sensitive to outliers to be a useful headline sort metric...why don't you do something like std / mean instead, or interquartile range / mean?\n\n> really large (100k rows), prob cache missing a lot\n\nI found out in my experimental SIMD proxy testing that testing very large arrays can be misleading anyway, btw, so maybe we shouldn't be doing this anyway (or be supplementing the tests with other array sizes)...will explain in a post soon.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15937103",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15937103",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15937103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM3MTAz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T03:16:01Z",
    "updated_at": "2013-04-05T03:19:32Z",
    "author_association": "NONE",
    "body": "I'll do that. But I think outliers would produce false positives rather then false negatives, \nfor which the other columns give you a good overview.\nand I'm using more samples this time,  so the mean shouldn't be that sensitive\nfrom the typical proportion of outliers I've seen so far.\n\ninterquartile range would obscure the outliers wouldn't it? that would produce false negatives.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15937505",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15937505",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15937505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM3NTA1",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T03:35:02Z",
    "updated_at": "2013-04-05T03:35:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just think complete outliers could always be because of one-time hiccups on the host system; what is annoying is the consistent overall variability; but I guess if you're ok with false positives and have the underlying data anyway it'd be ok.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15937663",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15937663",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15937663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM3NjYz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T03:43:45Z",
    "updated_at": "2013-04-05T03:43:45Z",
    "author_association": "NONE",
    "body": "Well, It's not a lot of data, and I'm actively looking for causes, I think it's ok. std/mean\ndid produce slightly different results.\n\nIt'd be good if you and jeff could repeat the test on your own machines:\n\npull master + setup.py develop\n\n```\npip install affinity\ntime ./test_perf.sh -H -c 1 -N 25 -d 1.pickle # takes about 15-20 minutes\n```\n\n```\ndf=pd.load('./1.pickle')\ndf=df[df.icol(0)>0.1] # vbs over 100us\n_p=(df.max(1)-df.min(1))/df.mean(1)*100\n_std=df.std(1)\n_std_o_mean=df.std(1)/df.mean(1)\n_min=df.min(1)\n_max=df.max(1)\ndf=DataFrame(None,index=_std.index)\ndf['max-min / mean %']=_p\ndf['std/mean']=_std_o_mean\ndf['std']=_std\ndf['min']=_min\ndf['max']=_max\n# or whatever you prefer\ndf=df.sort('max-min / mean %') \ndf=df[df.icol(0)>10]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15937795",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15937795",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15937795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM3Nzk1",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T03:51:06Z",
    "updated_at": "2013-04-05T03:58:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I found out in my experimental SIMD proxy testing that testing very large arrays can be misleading anyway, btw, so maybe we shouldn't be doing this anyway (or be supplementing the tests with other array sizes)...will explain in a post soon.\n\nsee new comment on #3146\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15938961",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15938961",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15938961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM4OTYx",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T04:54:40Z",
    "updated_at": "2013-04-05T04:57:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Everything looks good to me, I think either the affinity, gc thing, or both did it :)\n\nHere are the \"worst\" offenders:\n\n```\n                                             std/mean %  max-min / mean %   std     min     max\nread_csv_thou_vb                                   1.26              5.38  0.37   28.80   30.38\nwrite_store_table                                  1.27              5.58  0.72   55.27   58.43\nwrite_store_table_wide                             1.41              5.44  1.32   92.38   97.46\nframe_drop_duplicates_na                           1.44              5.43  0.20   13.94   14.71\nframe_sort_index_by_columns                        1.74              5.36  0.58   32.83   34.62\nframe_fillna_many_columns_pad                      1.88              8.48  0.25   12.92   14.03\ntimeseries_add_irregular                           1.89              9.85  0.33   17.08   18.78\nindexing_dataframe_boolean_no_ne                   2.06              7.27  1.36   63.43   68.21\nmerge_2intkey_sort                                 2.40              9.66  0.80   33.01   36.25\nframe_reindex_upcast                               2.69              8.39  0.31   11.02   11.98\nframe_fancy_lookup_all                             3.08             16.10  0.40   12.64   14.70\nwrite_store_table_mixed                            4.21             12.85  5.87  135.24  153.17\nstats_rank_average                                 4.21             13.63  1.04   22.98   26.34\ndti_reset_index_tz                                 4.91             14.11  0.56   10.39   11.99\nframe_ctor_list_of_dict                            5.61             17.28  4.00   66.53   78.86\n```\n\nwhich isn't much...maybe I got lucky though, will try again with more runs\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15939074",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15939074",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15939074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM5MDc0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T05:00:42Z",
    "updated_at": "2013-04-05T05:00:42Z",
    "author_association": "NONE",
    "body": "The burn-in helped some too....\n\nI did another 25 runs on an old laptop, a few stragglers but all in all, pretty solid.\nAt the very list, the median of 5 would definitly produce very clean results.\n\nIf you or jeff come back with another positive report, I think we can close this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15939183",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15939183",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15939183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM5MTgz",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T05:07:28Z",
    "updated_at": "2013-04-05T06:19:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "burn-in? quae?\n\nanyway, if it is resolved, we should systematically try to figure out what actually made the difference: if gc is really having an effect then we need to fix cycles or hopefully get someone else to.\n\ni looked at the linked issue about `malloc_trim()` and I don't actually think that matters much, but i could be wrong: i think it just marks memory as freed when it's basically already free anyway, just not released back to the system. calling `malloc_trim()` should actually slow things down, then, because it'll require more new requests...although possibly that explains the variability? (do requests for new memory pages really cost that much?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15939377",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15939377",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15939377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTM5Mzc3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T05:17:48Z",
    "updated_at": "2013-04-05T05:18:30Z",
    "author_association": "NONE",
    "body": "It was partly cargo cult I admit, I just wanted to make sure any kind of\nspecial casing in the python memory pool management (fragmentation?) \nwasn't affecting the results, as that's a kind of global state.\nNot at all sure it makes any difference, I also thought about running each test\nin a new process using  multiprocessing for the same reason, but since it seems\nto have worked, I guess that's not necessary.\n\nburn-in: do foo + N runs, and throw away the foo results. I thought I was seeing\nthe code hitting a cold cache since a disproportional chunk of the outliers\nwere always in the first column of results.\n\nAs to finding out the exact cause in excruciating detail, you're the man for the job.\n...I broke it in for ya.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15940241",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15940241",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15940241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTQwMjQx",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T06:01:14Z",
    "updated_at": "2013-04-05T06:01:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, i'll look into it, it'll be a learning experience =D\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15941383",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15941383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15941383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTQxMzgz",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T06:50:38Z",
    "updated_at": "2013-04-05T06:50:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Second run (100 iterations) looks fine as well\n\n```\n                                             std/mean %  max-min / mean %   std     min     max\nframe_fancy_lookup_all                             2.05             13.31  0.27   12.98   14.74\nmerge_2intkey_nosort                               2.13             20.61  0.30   13.96   16.87\nframe_reindex_upcast                               2.35              9.99  0.27   10.85   11.98\nseries_align_left_monotonic                        2.42             13.79  0.27   11.18   12.75\nreshape_pivot_time_series                          2.65             12.78  3.86  143.19  161.79\nframe_multi_and_no_ne                              3.38             14.59  2.43   70.80   81.30\nlib_fast_zip_fillna                                3.42             18.44  0.35    9.93   11.79\nindexing_dataframe_boolean_no_ne                   3.67             28.89  2.48   65.38   84.92\nwrite_store_table                                  3.73             14.10  2.05   53.72   61.48\nframe_sort_index_by_columns                        3.96             17.48  1.34   32.95   38.87\nstats_rank_average                                 3.97             19.89  0.98   22.67   27.55\ngroupbym_frame_apply                               4.21             16.92  1.61   37.12   43.58\nframe_insert_500_columns                           4.21             14.27  2.83   65.66   75.25\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15953419",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3158#issuecomment-15953419",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3158",
    "id": 15953419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTUzNDE5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T12:41:39Z",
    "updated_at": "2013-04-05T12:43:27Z",
    "author_association": "NONE",
    "body": "hooray.\nlet's keep this open until you do the heavy forensics.\nthe GC thing might not be a cyclic reference problem at all, by triggering\na `collect()` explicitly, we reduce the probability of a reclaim cycle in the middle\nof our benchmark. Again, that's a complicated piece of machinery, I don't\nknow if my mental model fits the real deal. I bet you will though in a couple of days :)\n"
  }
]
