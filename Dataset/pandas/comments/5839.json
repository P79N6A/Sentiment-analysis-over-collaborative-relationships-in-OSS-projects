[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31555063",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-31555063",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 31555063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU1MDYz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-03T21:26:33Z",
    "updated_at": "2014-01-03T21:26:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "you can try playing around with `squeeze` kw to groupby (though its off by default).\n\nSince you have a complicated apply function, consider just doing something like\n\n`pd.concat([ function(g) for g in grouped_frame ])`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31555081",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-31555081",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 31555081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU1MDgx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-03T21:26:58Z",
    "updated_at": "2014-01-03T21:26:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dragoljub try on 0.13 as well\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31555411",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-31555411",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 31555411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU1NDEx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-03T21:32:08Z",
    "updated_at": "2014-01-03T21:32:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dragoljub I think returning a MI series itself from the applied function is pretty odd (I know we talked about this before), but inferring what to do with this is pretty non-trivial. Best to just iterate over the groups and concat yourself.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31556717",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-31556717",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 31556717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU2NzE3",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-03T21:51:57Z",
    "updated_at": "2014-01-03T21:51:57Z",
    "author_association": "NONE",
    "body": "Is 0.13 master out? I didn't see an announcement?\n\nThanks,\n-Gagi\n\nOn Fri, Jan 3, 2014 at 1:27 PM, jreback notifications@github.com wrote:\n\n> @dragoljub https://github.com/dragoljub try on 0.13 as well\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/5839#issuecomment-31555081\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31557494",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-31557494",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 31557494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU3NDk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-03T22:03:40Z",
    "updated_at": "2014-01-03T22:03:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "not not officially quite yet (binaries are up in the dev section still on pydata)...just a day or 2 on the release\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31557834",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-31557834",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 31557834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU3ODM0",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-03T22:08:37Z",
    "updated_at": "2014-01-03T22:08:37Z",
    "author_association": "NONE",
    "body": "I think the apply method is very powerful on groupbys and Dataframes and would love it to handle this corner case. For now I'm checking if the len(grp) == 1 and if so the result of apply will be \"stacked\" to get back the proper shape.\n\nThe reason I'm using apply this way is because it follows the df.apply() semantics quite nicely except instead of processing individual rows/cols we process groups of rows or columns. The only thing I want to do is preserve the multi-index so assignment back to the original DataFrame works nicely.\n\ndf['new_col'] = df.apply(my_func) --> Works well, input is 1 value/row output is 1 value.\n\nFor clean and consistent code I want to continue using apply on data frame groupbys with a multi-index:\n\ndf['new_col'] = df.groupby(levels=my_levels).apply(my_func) --> Also works quite well, input is one data frame and output should be a series. Regardless of the index it should not return a DataFrame if the return value from the apply func is returning a series...\n\nTo me this is a very important operation. Being able to apply multivariate machine learning functions (multiple columns as input) on various groupings of data to yield another series column with a consistent multi-index.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31557977",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-31557977",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 31557977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU3OTc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-03T22:10:33Z",
    "updated_at": "2014-01-03T22:10:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure....can you put up an example that doesn't have an external dep so can include in the test suite? i'll mark as a bug \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31559521",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-31559521",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 31559521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU5NTIx",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-03T22:34:33Z",
    "updated_at": "2014-01-03T22:34:33Z",
    "author_association": "NONE",
    "body": "Here is the same example without the clustering code. All this does is sum the each groups rows and normalize them by the mean of all group values and return that as a series with the same full multi-index. Hopefully this can be used as a test that checks for the corner case with only one group in the groupby. :smile: P.S. Really really really looking forward to 0.13.0!\n\n``` python\nIn [1]: import numpy as np\n   ...: import pandas as pd\n   ...: \n   ...: print pd.__version__\n   ...: \n   ...: # Generate Test DataFrame\n   ...: NUM_ROWS = 1000\n   ...: NUM_COLS = 10\n   ...: col_names = ['A'+num for num in map(str,np.arange(NUM_COLS).tolist())]\n   ...: index_cols = col_names[:5] \n   ...: \n   ...: # Set DataFrame to have 5 level Hierarchical Index.\n   ...: # Sort the index!\n   ...: df = pd.DataFrame(np.random.randint(5, size=(NUM_ROWS,NUM_COLS)), dtype=np.int64, columns=col_names)\n   ...: df = df.set_index(index_cols).sort_index()\n   ...: df\n   ...: \n   ...: # Group by first 4 index columns.\n   ...: grp = df.groupby(level=index_cols[:4])\n   ...: \n   ...: # Find index of largest group.\n   ...: big_loc = grp.size().idxmax()\n   ...: \n   ...: # Create function to apply on groups\n   ...: def easy_func(df):\n   ...:     \"\"\"Sum rows and return series with same multi-index.\"\"\"\n   ...:     row_sum_data = df.sum(axis=1).values\n   ...:     group_mean = df.mean().mean()\n   ...:     return pd.Series(row_sum_data/group_mean, name='row_sum', index=df.index.get_level_values(4))\n   ...: \n0.12.0\n\nIn [2]: # Apply easy_func on each subgroup of DataFrame\n   ...: out_good = grp.apply(easy_func)\n   ...: out_good\nOut[2]: \nA0  A1  A2  A3  A4\n0   0   0   0   0     5.000000\n                4     5.000000\n            1   1     4.545455\n                2     5.454545\n            2   3     5.000000\n            3   3     5.000000\n            4   2     5.000000\n        1   0   0     5.217391\n                2     5.652174\n                3     3.913043\n                3     5.217391\n            1   0     4.400000\n                2     5.600000\n            3   0     5.000000\n            4   1     4.615385\n...\n4   4   3   0   3     5.357143\n                4     7.500000\n            1   1     5.000000\n            2   1     6.521739\n                1     3.913043\n                2     4.565217\n            3   2     5.000000\n            4   2     5.000000\n        4   0   0     4.200000\n                0     5.400000\n                1     5.400000\n            2   1     5.000000\n            3   3     5.000000\n            4   3     5.238095\n                3     4.761905\nName: row_sum, Length: 1000, dtype: float64\n\nIn [3]: out_good.shape\nOut[3]: (1000L,)\n\nIn [4]: # Select out biggest group while keeping index levels and try same apply\n   ...: out_bad = df[[big_loc == a[:4] for a in df.index.values]].groupby(level=index_cols[:4]).apply(easy_func)\n   ...: out_bad\n\nOut[4]: \nA4                  1         2        2         2         4         4  \\\nA0 A1 A2 A3                                                              \n4  0  4  4   4.803922  3.431373  7.54902  6.176471  4.803922  2.745098   \n\nA4                  4  \nA0 A1 A2 A3            \n4  0  4  4   5.490196  \n\nIn [5]: out_bad.shape\nOut[5]: (1, 7)\n\nIn [6]: out_bad.stack()\nOut[6]: \nA0  A1  A2  A3  A4\n4   0   4   4   1     4.803922\n                2     3.431373\n                2     7.549020\n                2     6.176471\n                4     4.803922\n                4     2.745098\n                4     5.490196\ndtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40965632",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-40965632",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 40965632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTY1NjMy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-21T19:08:39Z",
    "updated_at": "2014-04-21T19:08:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dragoljub you are doing a filter followed by a groupby here (you are sort of doing the filter manually, but same idea).\n\nThis is quite difficult to guess the output shape in all circumanstances.\n\nIt is possible we could change the kw `squeeze` to handle this, but I would need a compelling reason. (IMHO you should just do this via concat anyhow, this seems a bit too magical to do otherwise)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40967673",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-40967673",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 40967673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTY3Njcz",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-21T19:29:38Z",
    "updated_at": "2014-04-21T19:29:38Z",
    "author_association": "NONE",
    "body": "The index/filter is just for illustration purposes to show what happens when there is a groupby() with only one grouping found. \n\nI'll have to look into the squeeze parameter to see if it returns the long form DataFrame apply() result rather than wide one that needs to be stacked after the apply returns. From what I can tell the squeeze parameter is False by default, which is actually what I want. I want to preserve all multi-index levels regardless if they are constant after grouping.\n\nI'm still not sure why the df.groupby().apply() method returns an unstacked data frame (of the wrong shape) for a grouping of size one, while the same apply on groupbys of more than one grouping returns the expected DataFrame shapes just concatenated? I thought pd.concat([df]) just returns the same df?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40968852",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-40968852",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 40968852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTY4ODUy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-21T19:41:43Z",
    "updated_at": "2014-04-21T19:42:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "no, what I mean is do an unrolled groupby, something like:\n\n```\npd.concat(dict([ (func_to_compute_keys(g),func_for_value(grp)) \n                           for g, grp in df.groupby(...) ]))\n```\n\nrather than use apply.\n\nThis offers a very fine level of control (you can also use a list instead of a dict)\n\nwhat I mean is the `df.groupby(...).apply(...)` works for most situations, but occasionally its not perfect as it has to do some inference, so try the above.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40976641",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-40976641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 40976641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTc2NjQx",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-21T20:59:40Z",
    "updated_at": "2014-04-21T20:59:40Z",
    "author_association": "NONE",
    "body": "I see. Thanks for the suggestion, I'll keep that in my toolbox for future multivariate computations on groupings of data. \n\nThe thing is I'm never actually changing the index/keys, just trying to keep the original index from the grouping. :smile:  I have a fairly generic use case where I want to group data, and compute a resultant column for each grouping while keeping the original index unchanged. This is a groupby without any aggregation that allows me to simply insert the resultant column back into the original DataFrame that was grouped.\n\nI really like the df.groupby().apply(f) syntax.  :ghost:  I hoped that under the hood with the default **do not reduce dimensionality** flag set the only thing apply would do for each grouping result was concatenate the results keeping the multi-index values untouched. It just seems inconsistent that with two groups the apply results in a long form concatenated data frame (as expected) but with only one grouping we get a wide form frame with the lowest dimension unstacked. If all apply results were either in wide form or long form that would make more sense but not having this corner case.\n\nDo you know what apply feature is causing this to happen so that I better understand how apply works?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40976977",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-40976977",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 40976977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTc2OTc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-21T21:03:07Z",
    "updated_at": "2014-04-21T21:03:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is what squeeze does \ntry that and see if it works (it still could be a bug and is missing the case)\n\nthe idea is sometimes u want to have a dimenension reduction if u have all 1 sized groupes (eg to a series) \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41111800",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-41111800",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 41111800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTExODAw",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-23T00:17:47Z",
    "updated_at": "2014-04-23T00:17:47Z",
    "author_association": "NONE",
    "body": "I just gave squeeze=True a try on 13.1 and as I expected all this did was drop the first levels of my grouping, exactly what I wanted to avoid. The issue remains.  When there is a grouping of only one group and apply return a series with a multi-index the last level gets unstacked. \n\nSqueeze does not make any difference when the groupby has more than one grouping. Also if I'm returning a single column DataFrame as a result of the apply (instead of a series) the unstacking does not happen. Still seems like a corner case to me.\n\nIf I change the return code in the apply function to convert the series to a DataFrame `index=df.index.get_level_values(4)).to_frame()` It works as expected without unstacking a level.\n\n``` python\n\ndef easy_func(df):\n    \"\"\"Sum rows and return series with same multi-index.\"\"\"\n    row_sum_data = df.sum(axis=1).values\n    group_mean = df.mean().mean()\n    return pd.Series(row_sum_data/group_mean, name='row_sum', index=df.index.get_level_values(4)).to_frame()\n```\n\n``` python\n\n# groupby apply on only one group results in unstacked last level for a multi-index series\nIn [13]: df[[big_loc == a[:4] for a in df.index.values]].groupby(level=index_cols[:4], squeeze=False).apply(easy_func)\nOut[13]:\nA4                  0         0         0         1         2         4\nA0 A1 A2 A3\n1  0  1  0   6.315789  3.684211  4.736842  6.842105  3.157895  5.263158\n\n[1 rows x 6 columns]\n\n# squeez=True removes all index levels that I'm trying to keep\nIn [14]: df[[big_loc == a[:4] for a in df.index.values]].groupby(level=index_cols[:4], squeeze=True).apply(easy_func)\nOut[14]:\nA4\n0     6.315789\n0     3.684211\n0     4.736842\n1     6.842105\n2     3.157895\n4     5.263158\nName: row_sum, dtype: float64\n\n# Squeez on groupings with more than one group dos not seem to have any affect\nIn [15]: df.groupby(level=index_cols[:4], squeeze=True).apply(easy_func)\nOut[15]:\nA0  A1  A2  A3  A4\n0   0   1   0   1     5.000000\n            1   2     5.000000\n            2   1     5.000000\n            4   3     4.736842\n                4     5.263158\n        2   0   0     4.761905\n                3     5.238095\n            1   2     5.000000\n            2   0     5.000000\n            3   1     5.192308\n                2     4.615385\n                3     5.192308\n            4   2     5.000000\n        3   0   1     7.065217\n                1     6.521739\n...\n4   4   3   0   1     5.000000\n            2   2     5.000000\n            3   0     6.451613\n                1     7.096774\n                3     3.870968\n                3     2.580645\n            4   1     4.500000\n                3     5.500000\n        4   1   1     6.346154\n                2     4.615385\n                3     4.038462\n            2   0     4.500000\n                3     6.000000\n                3     5.000000\n                4     4.500000\nName: row_sum, Length: 1000, dtype: float64\n\n# same as above result with squeez=True\nIn [16]: df.groupby(level=index_cols[:4], squeeze=False).apply(easy_func)\nOut[16]:\nA0  A1  A2  A3  A4\n0   0   1   0   1     5.000000\n            1   2     5.000000\n            2   1     5.000000\n            4   3     4.736842\n                4     5.263158\n        2   0   0     4.761905\n                3     5.238095\n            1   2     5.000000\n            2   0     5.000000\n            3   1     5.192308\n                2     4.615385\n                3     5.192308\n            4   2     5.000000\n        3   0   1     7.065217\n                1     6.521739\n...\n4   4   3   0   1     5.000000\n            2   2     5.000000\n            3   0     6.451613\n                1     7.096774\n                3     3.870968\n                3     2.580645\n            4   1     4.500000\n                3     5.500000\n        4   1   1     6.346154\n                2     4.615385\n                3     4.038462\n            2   0     4.500000\n                3     6.000000\n                3     5.000000\n                4     4.500000\nName: row_sum, Length: 1000, dtype: float64\n\n#using the updated apply function that returns a series on one group does not unstack the last level as expected :)\nIn [4]: df[[big_loc == a[:4] for a in df.index.values]].groupby(level=index_cols[:4]).apply(easy_func)\nOut[4]:\n                 row_sum\nA0 A1 A2 A3 A4\n0  3  0  0  0   5.492958\n            1   4.647887\n            1   5.070423\n            3   4.225352\n            3   4.225352\n            4   6.338028\n\n[6 rows x 1 columns]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41112604",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-41112604",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 41112604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTEyNjA0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-23T00:32:23Z",
    "updated_at": "2014-04-23T00:32:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok...will reopen and see if someone can address in next release\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145106582",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-145106582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 145106582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTEwNjU4Mg==",
    "user": {
      "login": "jerryatmda",
      "id": 1727968,
      "node_id": "MDQ6VXNlcjE3Mjc5Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1727968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jerryatmda",
      "html_url": "https://github.com/jerryatmda",
      "followers_url": "https://api.github.com/users/jerryatmda/followers",
      "following_url": "https://api.github.com/users/jerryatmda/following{/other_user}",
      "gists_url": "https://api.github.com/users/jerryatmda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jerryatmda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jerryatmda/subscriptions",
      "organizations_url": "https://api.github.com/users/jerryatmda/orgs",
      "repos_url": "https://api.github.com/users/jerryatmda/repos",
      "events_url": "https://api.github.com/users/jerryatmda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jerryatmda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T18:03:44Z",
    "updated_at": "2015-10-02T18:03:44Z",
    "author_association": "NONE",
    "body": "This issue is very similar to a behavior that I consider a bug or misfeature. Because\nI have a different use-case and a small package for reproducing it, I have submitted it\nas a separate issue: #11224\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/175951675",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-175951675",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 175951675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTk1MTY3NQ==",
    "user": {
      "login": "gte620v",
      "id": 2158394,
      "node_id": "MDQ6VXNlcjIxNTgzOTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2158394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gte620v",
      "html_url": "https://github.com/gte620v",
      "followers_url": "https://api.github.com/users/gte620v/followers",
      "following_url": "https://api.github.com/users/gte620v/following{/other_user}",
      "gists_url": "https://api.github.com/users/gte620v/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gte620v/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gte620v/subscriptions",
      "organizations_url": "https://api.github.com/users/gte620v/orgs",
      "repos_url": "https://api.github.com/users/gte620v/repos",
      "events_url": "https://api.github.com/users/gte620v/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gte620v/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-28T03:51:19Z",
    "updated_at": "2016-01-28T03:51:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for fixing this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217981897",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-217981897",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 217981897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzk4MTg5Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T20:37:17Z",
    "updated_at": "2016-05-09T20:37:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "tracked in #13056 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392130211",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5839#issuecomment-392130211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5839",
    "id": 392130211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjEzMDIxMQ==",
    "user": {
      "login": "vss888",
      "id": 20497083,
      "node_id": "MDQ6VXNlcjIwNDk3MDgz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20497083?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vss888",
      "html_url": "https://github.com/vss888",
      "followers_url": "https://api.github.com/users/vss888/followers",
      "following_url": "https://api.github.com/users/vss888/following{/other_user}",
      "gists_url": "https://api.github.com/users/vss888/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vss888/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vss888/subscriptions",
      "organizations_url": "https://api.github.com/users/vss888/orgs",
      "repos_url": "https://api.github.com/users/vss888/repos",
      "events_url": "https://api.github.com/users/vss888/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vss888/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-25T17:40:07Z",
    "updated_at": "2018-05-25T17:40:07Z",
    "author_association": "NONE",
    "body": "I have just bumped into the same problem (pandas 0.22). It would be great to handle the case of a single group consistently with multiple groups. In a large scale data analysis it just can happen that some input has one group only and such cases crash my analysis right now."
  }
]
