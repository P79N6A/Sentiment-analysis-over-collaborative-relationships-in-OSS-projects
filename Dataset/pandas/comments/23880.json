[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441330768",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23880#issuecomment-441330768",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23880",
    "id": 441330768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTMzMDc2OA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-23T23:52:05Z",
    "updated_at": "2018-11-23T23:52:05Z",
    "author_association": "MEMBER",
    "body": "What factors are you using to determine `int` vs `Py_ssize_t`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441332063",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23880#issuecomment-441332063",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23880",
    "id": 441332063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTMzMjA2Mw==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-11-24T00:15:25Z",
    "updated_at": "2018-11-24T05:32:38Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/23880?src=pr&el=h1) Report\n> Merging [#23880](https://codecov.io/gh/pandas-dev/pandas/pull/23880?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/94ce05d1bcc3c99e992c48cc99d0fd2726f43102?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/23880/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/23880?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master   #23880   +/-   ##\n=======================================\n  Coverage   92.29%   92.29%           \n=======================================\n  Files         161      161           \n  Lines       51498    51498           \n=======================================\n  Hits        47530    47530           \n  Misses       3968     3968\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.69% <ø> (ø)` | :arrow_up: |\n| #single | `42.43% <ø> (ø)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/23880?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/reshape/pivot.py](https://codecov.io/gh/pandas-dev/pandas/pull/23880/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS9waXZvdC5weQ==) | `96.55% <0%> (ø)` | :arrow_up: |\n| [pandas/io/json/normalize.py](https://codecov.io/gh/pandas-dev/pandas/pull/23880/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2pzb24vbm9ybWFsaXplLnB5) | `96.87% <0%> (ø)` | :arrow_up: |\n| [pandas/io/packers.py](https://codecov.io/gh/pandas-dev/pandas/pull/23880/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL3BhY2tlcnMucHk=) | `88.08% <0%> (ø)` | :arrow_up: |\n| [pandas/core/util/hashing.py](https://codecov.io/gh/pandas-dev/pandas/pull/23880/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvdXRpbC9oYXNoaW5nLnB5) | `98.4% <0%> (ø)` | :arrow_up: |\n| [pandas/core/algorithms.py](https://codecov.io/gh/pandas-dev/pandas/pull/23880/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYWxnb3JpdGhtcy5weQ==) | `95.11% <0%> (ø)` | :arrow_up: |\n| [pandas/util/\\_decorators.py](https://codecov.io/gh/pandas-dev/pandas/pull/23880/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvX2RlY29yYXRvcnMucHk=) | `91.34% <0%> (ø)` | :arrow_up: |\n| [pandas/tseries/offsets.py](https://codecov.io/gh/pandas-dev/pandas/pull/23880/diff?src=pr&el=tree#diff-cGFuZGFzL3RzZXJpZXMvb2Zmc2V0cy5weQ==) | `96.98% <0%> (ø)` | :arrow_up: |\n| [pandas/core/indexes/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/23880/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZXMucHk=) | `96.2% <0%> (ø)` | :arrow_up: |\n| [pandas/core/indexes/multi.py](https://codecov.io/gh/pandas-dev/pandas/pull/23880/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9tdWx0aS5weQ==) | `95.49% <0%> (ø)` | :arrow_up: |\n| [pandas/plotting/\\_core.py](https://codecov.io/gh/pandas-dev/pandas/pull/23880/diff?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb3JlLnB5) | `83.63% <0%> (ø)` | :arrow_up: |\n| ... and [15 more](https://codecov.io/gh/pandas-dev/pandas/pull/23880/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/23880?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/23880?src=pr&el=footer). Last update [94ce05d...b4beaed](https://codecov.io/gh/pandas-dev/pandas/pull/23880?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441335262",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23880#issuecomment-441335262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23880",
    "id": 441335262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTMzNTI2Mg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-24T01:17:35Z",
    "updated_at": "2018-11-24T01:18:44Z",
    "author_association": "MEMBER",
    "body": "> What factors are you using to determine int vs Py_ssize_t?\r\n\r\nTo add onto @WillAyd point, `asv` results (or some kind of benchmark) would be good to see here, to make sure the change doesn't somehow impact performance."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441335930",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23880#issuecomment-441335930",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23880",
    "id": 441335930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTMzNTkzMA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-24T01:32:59Z",
    "updated_at": "2018-11-24T01:32:59Z",
    "author_association": "MEMBER",
    "body": "@WillAyd py_ssize_t is unsigned, is the suggested usage for length-like variables."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441336654",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23880#issuecomment-441336654",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23880",
    "id": 441336654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTMzNjY1NA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-24T01:51:16Z",
    "updated_at": "2018-11-24T01:52:36Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel it's size_t that is unsigned and Py_ssize_t is signed, no?\r\n\r\nhttps://www.python.org/dev/peps/pep-0353/\r\n\r\nIIUC helps ensure cross-platform indexing can go beyond 2**31 that compilers may use for an int even on 64 bit platforms. That makes sense to me though I'd just be curious then if there's a reason we would choose this over say a `uint64_t`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441341159",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23880#issuecomment-441341159",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23880",
    "id": 441341159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTM0MTE1OQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-24T03:43:40Z",
    "updated_at": "2018-11-24T03:43:40Z",
    "author_association": "MEMBER",
    "body": "The train of thought was, as @jbrockmendel mentioned, to use `Py_ssize_t` as the preferred type for indexing and length like variables. https://stackoverflow.com/a/20987501\r\n\r\nThe pep mentiones `Py_ssize_t` being signed but typedef'd for `ssize_t` where available.\r\n\r\nNo performance regressions when running the asvs:\r\n\r\n```\r\n$ asv continuous -f 1.1 upstream/master HEAD -b ^io\r\n· Running 132 total benchmarks (2 commits * 1 environments * 66 benchmarks)\r\n[  0.00%] · For pandas commit hash 216631e3:\r\n[  0.00%] ·· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt...\r\n[  0.00%] ·· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[  0.00%] ··· Running benchmarks........................................\r\n[  0.76%] ··· io.json.ReadJSONLines.peakmem_read_json_lines             178M;...\r\n[  1.52%] ··· ...ReadJSONLines.peakmem_read_json_lines_concat           142M;...\r\n[  1.52%] ··· Running benchmarks............................\r\n[  2.27%] ··· io.csv.ReadCSVCategorical.time_convert_direct             40.1±1ms\r\n[  3.03%] ··· io.csv.ReadCSVCategorical.time_convert_post             61.2±0.3ms\r\n[  3.79%] ··· io.csv.ReadCSVComment.time_comment                      28.9±0.4ms\r\n[  4.55%] ··· ...sv.ReadCSVDInferDatetimeFormat.time_read_csv    5.40±0.06ms;...\r\n[  5.30%] ··· io.csv.ReadCSVFloatPrecision.time_read_csv         2.23±0.05ms;...\r\n[  6.06%] ··· ...SVFloatPrecision.time_read_csv_python_engine    3.75±0.04ms;...\r\n[  6.82%] ··· io.csv.ReadCSVParseDates.time_baseline                    1.70±0ms\r\n[  7.58%] ··· io.csv.ReadCSVParseDates.time_multiple_date            2.02±0.02ms\r\n[  8.33%] ··· io.csv.ReadCSVSkipRows.time_skipprows              21.7±0.06ms;...\r\n[  9.09%] ··· io.csv.ReadCSVThousands.time_thousands             19.3±0.06ms;...\r\n[  9.85%] ··· io.csv.ReadUint64Integers.time_read_uint64             3.29±0.02ms\r\n[ 10.61%] ··· ...eadUint64Integers.time_read_uint64_na_values        5.75±0.02ms\r\n[ 11.36%] ··· ...adUint64Integers.time_read_uint64_neg_values        5.71±0.02ms\r\n[ 12.12%] ··· io.csv.ToCSV.time_frame                              111±0.4ms;...\r\n[ 12.88%] ··· io.csv.ToCSVDatetime.time_frame_date_formatting         11.3±0.1ms\r\n[ 13.64%] ··· io.excel.Excel.time_read_excel                        88.7±1ms;...\r\n[ 14.39%] ··· io.excel.Excel.time_write_excel                        386±3ms;...\r\n[ 15.15%] ··· io.hdf.HDF.time_read_hdf                             139±0.3ms;...\r\n[ 15.91%] ··· io.hdf.HDF.time_write_hdf                              153±1ms;...\r\n[ 16.67%] ··· io.hdf.HDFStoreDataFrame.time_query_store_table        9.89±0.03ms\r\n[ 17.42%] ··· ...DFStoreDataFrame.time_query_store_table_wide        18.9±0.03ms\r\n[ 18.18%] ··· io.hdf.HDFStoreDataFrame.time_read_store                29.9±0.3ms\r\n[ 18.94%] ··· io.hdf.HDFStoreDataFrame.time_read_store_mixed          38.7±0.5ms\r\n[ 19.70%] ··· io.hdf.HDFStoreDataFrame.time_read_store_table         5.88±0.02ms\r\n[ 20.45%] ··· ...DFStoreDataFrame.time_read_store_table_mixed         76.5±0.8ms\r\n[ 21.21%] ··· ...HDFStoreDataFrame.time_read_store_table_wide         23.7±0.2ms\r\n[ 21.97%] ··· io.hdf.HDFStoreDataFrame.time_store_info               8.77±0.04ms\r\n[ 22.73%] ··· io.hdf.HDFStoreDataFrame.time_store_repr               6.32±0.02μs\r\n[ 23.48%] ··· io.hdf.HDFStoreDataFrame.time_store_str                 6.08±0.1μs\r\n[ 24.24%] ··· io.hdf.HDFStoreDataFrame.time_write_store               27.3±0.1ms\r\n[ 25.00%] ··· io.hdf.HDFStoreDataFrame.time_write_store_mixed         43.0±0.3ms\r\n[ 25.76%] ··· io.hdf.HDFStoreDataFrame.time_write_store_table         58.6±0.6ms\r\n[ 26.52%] ··· ....HDFStoreDataFrame.time_write_store_table_dc            318±1ms\r\n[ 27.27%] ··· ...FStoreDataFrame.time_write_store_table_mixed         81.5±0.4ms\r\n[ 28.03%] ··· ...DFStoreDataFrame.time_write_store_table_wide         75.2±0.2ms\r\n[ 28.79%] ··· ...df.HDFStorePanel.time_read_store_table_panel         51.5±0.8ms\r\n[ 29.55%] ··· ...f.HDFStorePanel.time_write_store_table_panel         64.7±0.6ms\r\n[ 30.30%] ··· io.json.ReadJSON.time_read_json                     82.4±0.3ms;...\r\n[ 31.06%] ··· io.json.ReadJSONLines.time_read_json_lines             407±3ms;...\r\n[ 31.82%] ··· ...on.ReadJSONLines.time_read_json_lines_concat        416±2ms;...\r\n[ 32.58%] ··· io.json.ToJSON.time_delta_int_tstamp                80.9±0.9ms;...\r\n[ 33.33%] ··· io.json.ToJSON.time_delta_int_tstamp_lines             253±5ms;...\r\n[ 34.09%] ··· io.json.ToJSON.time_float_int                       75.9±0.6ms;...\r\n[ 34.85%] ··· io.json.ToJSON.time_float_int_lines                  254±0.9ms;...\r\n[ 35.61%] ··· io.json.ToJSON.time_float_int_str                     79.6±1ms;...\r\n[ 36.36%] ··· io.json.ToJSON.time_float_int_str_lines                264±1ms;...\r\n[ 37.12%] ··· io.json.ToJSON.time_floats_with_dt_index              66.7±1ms;...\r\n[ 37.88%] ··· io.json.ToJSON.time_floats_with_dt_index_lines       198±0.7ms;...\r\n[ 38.64%] ··· io.json.ToJSON.time_floats_with_int_idex_lines         202±2ms;...\r\n[ 39.39%] ··· io.json.ToJSON.time_floats_with_int_index           61.8±0.4ms;...\r\n[ 40.15%] ··· io.msgpack.MSGPack.time_read_msgpack                    31.1±0.3ms\r\n[ 40.91%] ··· io.msgpack.MSGPack.time_write_msgpack                   21.3±0.4ms\r\n[ 41.67%] ··· io.pickle.Pickle.time_read_pickle                         15.4±2ms\r\n[ 42.42%] ··· io.pickle.Pickle.time_write_pickle                      15.9±0.4ms\r\n[ 43.18%] ··· io.sas.SAS.time_read_msgpack                        73.5±0.6ms;...\r\n[ 43.94%] ··· io.sql.ReadSQLTable.time_read_sql_table_all             37.1±0.6ms\r\n[ 44.70%] ··· ...ReadSQLTable.time_read_sql_table_parse_dates         13.3±0.3ms\r\n[ 45.45%] ··· ...eadSQLTableDtypes.time_read_sql_table_column     10.2±0.2ms;...\r\n[ 46.21%] ··· io.sql.SQL.time_read_sql_query                      29.3±0.6ms;...\r\n[ 46.97%] ··· io.sql.SQL.time_to_sql_dataframe                      95.9±1ms;...\r\n[ 47.73%] ··· ...eSQLDtypes.time_read_sql_query_select_column    8.07±0.04ms;...\r\n[ 48.48%] ··· ....WriteSQLDtypes.time_to_sql_dataframe_column    36.3±0.08ms;...\r\n[ 49.24%] ··· io.stata.Stata.time_read_stata                       157±0.7ms;...\r\n[ 50.00%] ··· io.stata.Stata.time_write_stata                        387±2ms;...\r\n[ 50.00%] · For pandas commit hash 94ce05d1:\r\n[ 50.00%] ·· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt.......................................\r\n[ 50.00%] ·· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[ 50.00%] ··· Running benchmarks........................................\r\n[ 50.76%] ··· io.json.ReadJSONLines.peakmem_read_json_lines             179M;...\r\n[ 51.52%] ··· ...ReadJSONLines.peakmem_read_json_lines_concat           142M;...\r\n[ 51.52%] ··· Running benchmarks............................\r\n[ 52.27%] ··· io.csv.ReadCSVCategorical.time_convert_direct             39.9±2ms\r\n[ 53.03%] ··· io.csv.ReadCSVCategorical.time_convert_post             61.4±0.6ms\r\n[ 53.79%] ··· io.csv.ReadCSVComment.time_comment                      29.6±0.1ms\r\n[ 54.55%] ··· ...sv.ReadCSVDInferDatetimeFormat.time_read_csv    5.36±0.08ms;...\r\n[ 55.30%] ··· io.csv.ReadCSVFloatPrecision.time_read_csv         2.26±0.07ms;...\r\n[ 56.06%] ··· ...SVFloatPrecision.time_read_csv_python_engine    3.75±0.04ms;...\r\n[ 56.82%] ··· io.csv.ReadCSVParseDates.time_baseline                 1.71±0.02ms\r\n[ 57.58%] ··· io.csv.ReadCSVParseDates.time_multiple_date            2.01±0.01ms\r\n[ 58.33%] ··· io.csv.ReadCSVSkipRows.time_skipprows               21.7±0.2ms;...\r\n[ 59.09%] ··· io.csv.ReadCSVThousands.time_thousands              19.0±0.3ms;...\r\n[ 59.85%] ··· io.csv.ReadUint64Integers.time_read_uint64             3.29±0.04ms\r\n[ 60.61%] ··· ...eadUint64Integers.time_read_uint64_na_values        5.74±0.01ms\r\n[ 61.36%] ··· ...adUint64Integers.time_read_uint64_neg_values        5.64±0.01ms\r\n[ 62.12%] ··· io.csv.ToCSV.time_frame                              112±0.6ms;...\r\n[ 62.88%] ··· io.csv.ToCSVDatetime.time_frame_date_formatting         11.5±0.1ms\r\n[ 63.64%] ··· io.excel.Excel.time_read_excel                      88.4±0.6ms;...\r\n[ 64.39%] ··· io.excel.Excel.time_write_excel                        386±3ms;...\r\n[ 65.15%] ··· io.hdf.HDF.time_read_hdf                               140±1ms;...\r\n[ 65.91%] ··· io.hdf.HDF.time_write_hdf                            152±0.5ms;...\r\n[ 66.67%] ··· io.hdf.HDFStoreDataFrame.time_query_store_table        9.18±0.04ms\r\n[ 67.42%] ··· ...DFStoreDataFrame.time_query_store_table_wide        19.0±0.03ms\r\n[ 68.18%] ··· io.hdf.HDFStoreDataFrame.time_read_store                30.1±0.2ms\r\n[ 68.94%] ··· io.hdf.HDFStoreDataFrame.time_read_store_mixed          38.8±0.5ms\r\n[ 69.70%] ··· io.hdf.HDFStoreDataFrame.time_read_store_table         6.12±0.02ms\r\n[ 70.45%] ··· ...DFStoreDataFrame.time_read_store_table_mixed         76.0±0.7ms\r\n[ 71.21%] ··· ...HDFStoreDataFrame.time_read_store_table_wide         22.4±0.2ms\r\n[ 71.97%] ··· io.hdf.HDFStoreDataFrame.time_store_info               8.72±0.02ms\r\n[ 72.73%] ··· io.hdf.HDFStoreDataFrame.time_store_repr               6.24±0.08μs\r\n[ 73.48%] ··· io.hdf.HDFStoreDataFrame.time_store_str                5.99±0.05μs\r\n[ 74.24%] ··· io.hdf.HDFStoreDataFrame.time_write_store              27.2±0.08ms\r\n[ 75.00%] ··· io.hdf.HDFStoreDataFrame.time_write_store_mixed         42.9±0.2ms\r\n[ 75.76%] ··· io.hdf.HDFStoreDataFrame.time_write_store_table         58.7±0.3ms\r\n[ 76.52%] ··· ....HDFStoreDataFrame.time_write_store_table_dc            319±2ms\r\n[ 77.27%] ··· ...FStoreDataFrame.time_write_store_table_mixed         82.4±0.3ms\r\n[ 78.03%] ··· ...DFStoreDataFrame.time_write_store_table_wide           76.4±1ms\r\n[ 78.79%] ··· ...df.HDFStorePanel.time_read_store_table_panel         51.7±0.4ms\r\n[ 79.55%] ··· ...f.HDFStorePanel.time_write_store_table_panel         64.3±0.5ms\r\n[ 80.30%] ··· io.json.ReadJSON.time_read_json                     82.2±0.6ms;...\r\n[ 81.06%] ··· io.json.ReadJSONLines.time_read_json_lines             407±1ms;...\r\n[ 81.82%] ··· ...on.ReadJSONLines.time_read_json_lines_concat        416±2ms;...\r\n[ 82.58%] ··· io.json.ToJSON.time_delta_int_tstamp                82.8±0.5ms;...\r\n[ 83.33%] ··· io.json.ToJSON.time_delta_int_tstamp_lines             256±2ms;...\r\n[ 84.09%] ··· io.json.ToJSON.time_float_int                         76.4±1ms;...\r\n[ 84.85%] ··· io.json.ToJSON.time_float_int_lines                    253±2ms;...\r\n[ 85.61%] ··· io.json.ToJSON.time_float_int_str                   79.4±0.8ms;...\r\n[ 86.36%] ··· io.json.ToJSON.time_float_int_str_lines              263±0.7ms;...\r\n[ 87.12%] ··· io.json.ToJSON.time_floats_with_dt_index            66.7±0.3ms;...\r\n[ 87.88%] ··· io.json.ToJSON.time_floats_with_dt_index_lines         202±3ms;...\r\n[ 88.64%] ··· io.json.ToJSON.time_floats_with_int_idex_lines         199±1ms;...\r\n[ 89.39%] ··· io.json.ToJSON.time_floats_with_int_index           60.4±0.3ms;...\r\n[ 90.15%] ··· io.msgpack.MSGPack.time_read_msgpack                    31.0±0.3ms\r\n[ 90.91%] ··· io.msgpack.MSGPack.time_write_msgpack                   21.8±0.2ms\r\n[ 91.67%] ··· io.pickle.Pickle.time_read_pickle                         15.2±2ms\r\n[ 92.42%] ··· io.pickle.Pickle.time_write_pickle                      15.8±0.1ms\r\n[ 93.18%] ··· io.sas.SAS.time_read_msgpack                        73.0±0.5ms;...\r\n[ 93.94%] ··· io.sql.ReadSQLTable.time_read_sql_table_all             36.6±0.1ms\r\n[ 94.70%] ··· ...ReadSQLTable.time_read_sql_table_parse_dates        13.0±0.02ms\r\n[ 95.45%] ··· ...eadSQLTableDtypes.time_read_sql_table_column   10.00±0.02ms;...\r\n[ 96.21%] ··· io.sql.SQL.time_read_sql_query                     28.6±0.05ms;...\r\n[ 96.97%] ··· io.sql.SQL.time_to_sql_dataframe                    94.9±0.6ms;...\r\n[ 97.73%] ··· ...eSQLDtypes.time_read_sql_query_select_column    8.02±0.02ms;...\r\n[ 98.48%] ··· ....WriteSQLDtypes.time_to_sql_dataframe_column     36.7±0.6ms;...\r\n[ 99.24%] ··· io.stata.Stata.time_read_stata                         157±1ms;...\r\n[100.00%] ··· io.stata.Stata.time_write_stata                        386±2ms;...\r\n\r\nBENCHMARKS NOT SIGNIFICANTLY CHANGED.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441409975",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23880#issuecomment-441409975",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23880",
    "id": 441409975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTQwOTk3NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-25T02:15:23Z",
    "updated_at": "2018-11-25T02:15:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @mroeschke "
  }
]
