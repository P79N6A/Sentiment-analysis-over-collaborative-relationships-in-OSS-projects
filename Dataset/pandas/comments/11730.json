[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160944991",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11730#issuecomment-160944991",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11730",
    "id": 160944991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDk0NDk5MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-01T11:51:41Z",
    "updated_at": "2015-12-01T11:51:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "why would you want to do this at all? `None` is NOT a performant sigil for missing values, rather it is `nan`, see docs [here](http://pandas.pydata.org/pandas-docs/stable/missing_data.html).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160956645",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11730#issuecomment-160956645",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11730",
    "id": 160956645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDk1NjY0NQ==",
    "user": {
      "login": "darindillon",
      "id": 2766856,
      "node_id": "MDQ6VXNlcjI3NjY4NTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2766856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darindillon",
      "html_url": "https://github.com/darindillon",
      "followers_url": "https://api.github.com/users/darindillon/followers",
      "following_url": "https://api.github.com/users/darindillon/following{/other_user}",
      "gists_url": "https://api.github.com/users/darindillon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darindillon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darindillon/subscriptions",
      "organizations_url": "https://api.github.com/users/darindillon/orgs",
      "repos_url": "https://api.github.com/users/darindillon/repos",
      "events_url": "https://api.github.com/users/darindillon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darindillon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-01T12:43:23Z",
    "updated_at": "2015-12-01T12:43:23Z",
    "author_association": "NONE",
    "body": "  1) It's necessary to replace the NaN with None if you want to insert the rows into a database using pyodbc -- the database won't let you insert NaN into a float column in the database.\n  2) But let's not change the subject into \"why do you want this\" --  clearly Pandas does support None, so why does the applymap change the type of that first column when there was clearly no need to? That seems very unexpected behavior -- no one would expect that applymap to replace None with Nan like it did.\n\nSounds like you don't want to call it a bug, but is there a workaround? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160957486",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11730#issuecomment-160957486",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11730",
    "id": 160957486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDk1NzQ4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-01T12:48:26Z",
    "updated_at": "2015-12-01T12:48:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "simply use `.to_sql` it already does all of these things.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160967131",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11730#issuecomment-160967131",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11730",
    "id": 160967131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDk2NzEzMQ==",
    "user": {
      "login": "darindillon",
      "id": 2766856,
      "node_id": "MDQ6VXNlcjI3NjY4NTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2766856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darindillon",
      "html_url": "https://github.com/darindillon",
      "followers_url": "https://api.github.com/users/darindillon/followers",
      "following_url": "https://api.github.com/users/darindillon/following{/other_user}",
      "gists_url": "https://api.github.com/users/darindillon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darindillon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darindillon/subscriptions",
      "organizations_url": "https://api.github.com/users/darindillon/orgs",
      "repos_url": "https://api.github.com/users/darindillon/repos",
      "events_url": "https://api.github.com/users/darindillon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darindillon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-01T13:21:21Z",
    "updated_at": "2015-12-01T13:21:21Z",
    "author_association": "NONE",
    "body": "Thanks, but no, .to_sql() doesn't produce the output I need for my case so that's not a workaround.\n\nBut that has nothing to do with the original question -- how can I make Pandas change all the NaN to None (or at least stop it from UN-changing it like in the code snippet above?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160972579",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11730#issuecomment-160972579",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11730",
    "id": 160972579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDk3MjU3OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-01T13:38:33Z",
    "updated_at": "2015-12-01T13:38:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [27]: r = p.replace('',np.nan).astype(object)\n\nIn [28]: r\nOut[28]: \n     x      y\n0  NaN    NaN\n1    1  hello\n2    2    NaN\n\nIn [29]: r[r.isnull()] = None\n\nIn [30]: r\nOut[30]: \n      x      y\n0  None   None\n1     1  hello\n2     2   None\n```\n\nYou are reinventing the wheel here by writing your own code to do this. good luck.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160978038",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11730#issuecomment-160978038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11730",
    "id": 160978038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDk3ODAzOA==",
    "user": {
      "login": "darindillon",
      "id": 2766856,
      "node_id": "MDQ6VXNlcjI3NjY4NTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2766856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darindillon",
      "html_url": "https://github.com/darindillon",
      "followers_url": "https://api.github.com/users/darindillon/followers",
      "following_url": "https://api.github.com/users/darindillon/following{/other_user}",
      "gists_url": "https://api.github.com/users/darindillon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darindillon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darindillon/subscriptions",
      "organizations_url": "https://api.github.com/users/darindillon/orgs",
      "repos_url": "https://api.github.com/users/darindillon/repos",
      "events_url": "https://api.github.com/users/darindillon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darindillon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-01T14:03:04Z",
    "updated_at": "2015-12-01T14:03:04Z",
    "author_association": "NONE",
    "body": "Thanks, I'll use that workaround. But I think the original question is getting lost --  applymap() is changing columns that are dtype=object into dtype=float for no obvious reason. (And a side-effect of that is that Nones are translated into Nans). \n  Is that really the expected behavior? In the original code snippet above, would you really expect applymap() to change the column type like that? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160979946",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11730#issuecomment-160979946",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11730",
    "id": 160979946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDk3OTk0Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-01T14:11:51Z",
    "updated_at": "2015-12-01T14:11:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes I would. all pandas operations do inference. a float should try to remain a float for example. \n"
  }
]
